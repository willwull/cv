// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles
parcelRequire = (function (modules, cache, entry, globalName) {
  // Save the require from previous bundle to this closure if any
  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;
  var nodeRequire = typeof require === 'function' && require;

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire = typeof parcelRequire === 'function' && parcelRequire;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error('Cannot find module \'' + name + '\'');
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = cache[name] = new newRequire.Module(name);

      modules[name][0].call(module.exports, localRequire, module, module.exports, this);
    }

    return cache[name].exports;

    function localRequire(x){
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x){
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [function (require, module) {
      module.exports = exports;
    }, {}];
  };

  var error;
  for (var i = 0; i < entry.length; i++) {
    try {
      newRequire(entry[i]);
    } catch (e) {
      // Save first error but execute all entries
      if (!error) {
        error = e;
      }
    }
  }

  if (entry.length) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(entry[entry.length - 1]);

    // CommonJS
    if (typeof exports === "object" && typeof module !== "undefined") {
      module.exports = mainExports;

    // RequireJS
    } else if (typeof define === "function" && define.amd) {
     define(function () {
       return mainExports;
     });

    // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }

  // Override the current require with this new one
  parcelRequire = newRequire;

  if (error) {
    // throw error from earlier, _after updating parcelRequire_
    throw error;
  }

  return newRequire;
})({"../node_modules/object-assign/index.js":[function(require,module,exports) {
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
'use strict';
/* eslint-disable no-unused-vars */

var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
  if (val === null || val === undefined) {
    throw new TypeError('Object.assign cannot be called with null or undefined');
  }

  return Object(val);
}

function shouldUseNative() {
  try {
    if (!Object.assign) {
      return false;
    } // Detect buggy property enumeration order in older V8 versions.
    // https://bugs.chromium.org/p/v8/issues/detail?id=4118


    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers

    test1[5] = 'de';

    if (Object.getOwnPropertyNames(test1)[0] === '5') {
      return false;
    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056


    var test2 = {};

    for (var i = 0; i < 10; i++) {
      test2['_' + String.fromCharCode(i)] = i;
    }

    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
      return test2[n];
    });

    if (order2.join('') !== '0123456789') {
      return false;
    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056


    var test3 = {};
    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
      test3[letter] = letter;
    });

    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
      return false;
    }

    return true;
  } catch (err) {
    // We don't expect any of the above to throw, but better to be safe.
    return false;
  }
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
  var from;
  var to = toObject(target);
  var symbols;

  for (var s = 1; s < arguments.length; s++) {
    from = Object(arguments[s]);

    for (var key in from) {
      if (hasOwnProperty.call(from, key)) {
        to[key] = from[key];
      }
    }

    if (getOwnPropertySymbols) {
      symbols = getOwnPropertySymbols(from);

      for (var i = 0; i < symbols.length; i++) {
        if (propIsEnumerable.call(from, symbols[i])) {
          to[symbols[i]] = from[symbols[i]];
        }
      }
    }
  }

  return to;
};
},{}],"../node_modules/prop-types/lib/ReactPropTypesSecret.js":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;

},{}],"../node_modules/prop-types/checkPropTypes.js":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
'use strict';

var printWarning = function () {};

if ("development" !== 'production') {
  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');

  var loggedTypeFailures = {};
  var has = Function.call.bind(Object.prototype.hasOwnProperty);

  printWarning = function (text) {
    var message = 'Warning: ' + text;

    if (typeof console !== 'undefined') {
      console.error(message);
    }

    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}
/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */


function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if ("development" !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error; // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.

        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.');
            err.name = 'Invariant Violation';
            throw err;
          }

          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }

        if (error && !(error instanceof Error)) {
          printWarning((componentName || 'React class') + ': type specification of ' + location + ' `' + typeSpecName + '` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a ' + typeof error + '. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).');
        }

        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;
          var stack = getStack ? getStack() : '';
          printWarning('Failed ' + location + ' type: ' + error.message + (stack != null ? stack : ''));
        }
      }
    }
  }
}
/**
 * Resets warning cache when testing.
 *
 * @private
 */


checkPropTypes.resetWarningCache = function () {
  if ("development" !== 'production') {
    loggedTypeFailures = {};
  }
};

module.exports = checkPropTypes;
},{"./lib/ReactPropTypesSecret":"../node_modules/prop-types/lib/ReactPropTypesSecret.js"}],"../node_modules/react/cjs/react.development.js":[function(require,module,exports) {
/** @license React v16.10.2
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
'use strict';

if ("development" !== "production") {
  (function () {
    'use strict';

    var _assign = require('object-assign');

    var checkPropTypes = require('prop-types/checkPropTypes'); // TODO: this is special because it gets imported during build.


    var ReactVersion = '16.10.2'; // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.

    var hasSymbol = typeof Symbol === 'function' && Symbol.for;
    var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
    var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
    var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
    var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
    var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
    var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
    var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
    // (unstable) APIs that have been removed. Can we remove the symbols?

    var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
    var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
    var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
    var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
    var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
    var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
    var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
    var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
    var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;
    var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator';

    function getIteratorFn(maybeIterable) {
      if (maybeIterable === null || typeof maybeIterable !== 'object') {
        return null;
      }

      var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

      if (typeof maybeIterator === 'function') {
        return maybeIterator;
      }

      return null;
    } // Do not require this module directly! Use normal `invariant` calls with
    // template literal strings. The messages will be converted to ReactError during
    // build, and in production they will be minified.
    // Do not require this module directly! Use normal `invariant` calls with
    // template literal strings. The messages will be converted to ReactError during
    // build, and in production they will be minified.


    function ReactError(error) {
      error.name = 'Invariant Violation';
      return error;
    }
    /**
     * Use invariant() to assert state which your program assumes to be true.
     *
     * Provide sprintf-style format (only %s is supported) and arguments
     * to provide information about what broke and what you were
     * expecting.
     *
     * The invariant message will be stripped in production, but the invariant
     * will remain to ensure logic does not differ in production.
     */

    /**
     * Forked from fbjs/warning:
     * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
     *
     * Only change is we use console.warn instead of console.error,
     * and do nothing when 'console' is not supported.
     * This really simplifies the code.
     * ---
     * Similar to invariant but only logs a warning if the condition is not met.
     * This can be used to log issues in development environments in critical
     * paths. Removing the logging code for production environments will keep the
     * same logic and follow the same code paths.
     */


    var lowPriorityWarningWithoutStack = function () {};

    {
      var printWarning = function (format) {
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        var argIndex = 0;
        var message = 'Warning: ' + format.replace(/%s/g, function () {
          return args[argIndex++];
        });

        if (typeof console !== 'undefined') {
          console.warn(message);
        }

        try {
          // --- Welcome to debugging React ---
          // This error was thrown as a convenience so that you can use this stack
          // to find the callsite that caused this warning to fire.
          throw new Error(message);
        } catch (x) {}
      };

      lowPriorityWarningWithoutStack = function (condition, format) {
        if (format === undefined) {
          throw new Error('`lowPriorityWarningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');
        }

        if (!condition) {
          for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
            args[_key2 - 2] = arguments[_key2];
          }

          printWarning.apply(void 0, [format].concat(args));
        }
      };
    }
    var lowPriorityWarningWithoutStack$1 = lowPriorityWarningWithoutStack;
    /**
     * Similar to invariant but only logs a warning if the condition is not met.
     * This can be used to log issues in development environments in critical
     * paths. Removing the logging code for production environments will keep the
     * same logic and follow the same code paths.
     */

    var warningWithoutStack = function () {};

    {
      warningWithoutStack = function (condition, format) {
        for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
          args[_key - 2] = arguments[_key];
        }

        if (format === undefined) {
          throw new Error('`warningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');
        }

        if (args.length > 8) {
          // Check before the condition to catch violations early.
          throw new Error('warningWithoutStack() currently supports at most 8 arguments.');
        }

        if (condition) {
          return;
        }

        if (typeof console !== 'undefined') {
          var argsWithFormat = args.map(function (item) {
            return '' + item;
          });
          argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
          // breaks IE9: https://github.com/facebook/react/issues/13610

          Function.prototype.apply.call(console.error, console, argsWithFormat);
        }

        try {
          // --- Welcome to debugging React ---
          // This error was thrown as a convenience so that you can use this stack
          // to find the callsite that caused this warning to fire.
          var argIndex = 0;
          var message = 'Warning: ' + format.replace(/%s/g, function () {
            return args[argIndex++];
          });
          throw new Error(message);
        } catch (x) {}
      };
    }
    var warningWithoutStack$1 = warningWithoutStack;
    var didWarnStateUpdateForUnmountedComponent = {};

    function warnNoop(publicInstance, callerName) {
      {
        var _constructor = publicInstance.constructor;
        var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';
        var warningKey = componentName + "." + callerName;

        if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
          return;
        }

        warningWithoutStack$1(false, "Can't call %s on a component that is not yet mounted. " + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);
        didWarnStateUpdateForUnmountedComponent[warningKey] = true;
      }
    }
    /**
     * This is the abstract API for an update queue.
     */


    var ReactNoopUpdateQueue = {
      /**
       * Checks whether or not this composite component is mounted.
       * @param {ReactClass} publicInstance The instance we want to test.
       * @return {boolean} True if mounted, false otherwise.
       * @protected
       * @final
       */
      isMounted: function (publicInstance) {
        return false;
      },

      /**
       * Forces an update. This should only be invoked when it is known with
       * certainty that we are **not** in a DOM transaction.
       *
       * You may want to call this when you know that some deeper aspect of the
       * component's state has changed but `setState` was not called.
       *
       * This will not invoke `shouldComponentUpdate`, but it will invoke
       * `componentWillUpdate` and `componentDidUpdate`.
       *
       * @param {ReactClass} publicInstance The instance that should rerender.
       * @param {?function} callback Called after component is updated.
       * @param {?string} callerName name of the calling function in the public API.
       * @internal
       */
      enqueueForceUpdate: function (publicInstance, callback, callerName) {
        warnNoop(publicInstance, 'forceUpdate');
      },

      /**
       * Replaces all of the state. Always use this or `setState` to mutate state.
       * You should treat `this.state` as immutable.
       *
       * There is no guarantee that `this.state` will be immediately updated, so
       * accessing `this.state` after calling this method may return the old value.
       *
       * @param {ReactClass} publicInstance The instance that should rerender.
       * @param {object} completeState Next state.
       * @param {?function} callback Called after component is updated.
       * @param {?string} callerName name of the calling function in the public API.
       * @internal
       */
      enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
        warnNoop(publicInstance, 'replaceState');
      },

      /**
       * Sets a subset of the state. This only exists because _pendingState is
       * internal. This provides a merging strategy that is not available to deep
       * properties which is confusing. TODO: Expose pendingState or don't use it
       * during the merge.
       *
       * @param {ReactClass} publicInstance The instance that should rerender.
       * @param {object} partialState Next partial state to be merged with state.
       * @param {?function} callback Called after component is updated.
       * @param {?string} Name of the calling function in the public API.
       * @internal
       */
      enqueueSetState: function (publicInstance, partialState, callback, callerName) {
        warnNoop(publicInstance, 'setState');
      }
    };
    var emptyObject = {};
    {
      Object.freeze(emptyObject);
    }
    /**
     * Base class helpers for the updating state of a component.
     */

    function Component(props, context, updater) {
      this.props = props;
      this.context = context; // If a component has string refs, we will assign a different object later.

      this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the
      // renderer.

      this.updater = updater || ReactNoopUpdateQueue;
    }

    Component.prototype.isReactComponent = {};
    /**
     * Sets a subset of the state. Always use this to mutate
     * state. You should treat `this.state` as immutable.
     *
     * There is no guarantee that `this.state` will be immediately updated, so
     * accessing `this.state` after calling this method may return the old value.
     *
     * There is no guarantee that calls to `setState` will run synchronously,
     * as they may eventually be batched together.  You can provide an optional
     * callback that will be executed when the call to setState is actually
     * completed.
     *
     * When a function is provided to setState, it will be called at some point in
     * the future (not synchronously). It will be called with the up to date
     * component arguments (state, props, context). These values can be different
     * from this.* because your function may be called after receiveProps but before
     * shouldComponentUpdate, and this new state, props, and context will not yet be
     * assigned to this.
     *
     * @param {object|function} partialState Next partial state or function to
     *        produce next partial state to be merged with current state.
     * @param {?function} callback Called after state is updated.
     * @final
     * @protected
     */

    Component.prototype.setState = function (partialState, callback) {
      (function () {
        if (!(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null)) {
          {
            throw ReactError(Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables."));
          }
        }
      })();

      this.updater.enqueueSetState(this, partialState, callback, 'setState');
    };
    /**
     * Forces an update. This should only be invoked when it is known with
     * certainty that we are **not** in a DOM transaction.
     *
     * You may want to call this when you know that some deeper aspect of the
     * component's state has changed but `setState` was not called.
     *
     * This will not invoke `shouldComponentUpdate`, but it will invoke
     * `componentWillUpdate` and `componentDidUpdate`.
     *
     * @param {?function} callback Called after update is complete.
     * @final
     * @protected
     */


    Component.prototype.forceUpdate = function (callback) {
      this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
    };
    /**
     * Deprecated APIs. These APIs used to exist on classic React classes but since
     * we would like to deprecate them, we're not going to move them over to this
     * modern base class. Instead, we define a getter that warns if it's accessed.
     */


    {
      var deprecatedAPIs = {
        isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
        replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
      };

      var defineDeprecationWarning = function (methodName, info) {
        Object.defineProperty(Component.prototype, methodName, {
          get: function () {
            lowPriorityWarningWithoutStack$1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
            return undefined;
          }
        });
      };

      for (var fnName in deprecatedAPIs) {
        if (deprecatedAPIs.hasOwnProperty(fnName)) {
          defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
        }
      }
    }

    function ComponentDummy() {}

    ComponentDummy.prototype = Component.prototype;
    /**
     * Convenience component with default shallow equality check for sCU.
     */

    function PureComponent(props, context, updater) {
      this.props = props;
      this.context = context; // If a component has string refs, we will assign a different object later.

      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;
    }

    var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
    pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.

    _assign(pureComponentPrototype, Component.prototype);

    pureComponentPrototype.isPureReactComponent = true; // an immutable object with a single mutable value

    function createRef() {
      var refObject = {
        current: null
      };
      {
        Object.seal(refObject);
      }
      return refObject;
    }
    /**
     * Keeps track of the current dispatcher.
     */


    var ReactCurrentDispatcher = {
      /**
       * @internal
       * @type {ReactComponent}
       */
      current: null
    };
    /**
     * Keeps track of the current batch's configuration such as how long an update
     * should suspend for if it needs to.
     */

    var ReactCurrentBatchConfig = {
      suspense: null
    };
    /**
     * Keeps track of the current owner.
     *
     * The current owner is the component who should own any components that are
     * currently being constructed.
     */

    var ReactCurrentOwner = {
      /**
       * @internal
       * @type {ReactComponent}
       */
      current: null
    };
    var BEFORE_SLASH_RE = /^(.*)[\\\/]/;

    var describeComponentFrame = function (name, source, ownerName) {
      var sourceInfo = '';

      if (source) {
        var path = source.fileName;
        var fileName = path.replace(BEFORE_SLASH_RE, '');
        {
          // In DEV, include code for a common special case:
          // prefer "folder/index.js" instead of just "index.js".
          if (/^index\./.test(fileName)) {
            var match = path.match(BEFORE_SLASH_RE);

            if (match) {
              var pathBeforeSlash = match[1];

              if (pathBeforeSlash) {
                var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');
                fileName = folderName + '/' + fileName;
              }
            }
          }
        }
        sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';
      } else if (ownerName) {
        sourceInfo = ' (created by ' + ownerName + ')';
      }

      return '\n    in ' + (name || 'Unknown') + sourceInfo;
    };

    var Resolved = 1;

    function refineResolvedLazyComponent(lazyComponent) {
      return lazyComponent._status === Resolved ? lazyComponent._result : null;
    }

    function getWrappedName(outerType, innerType, wrapperName) {
      var functionName = innerType.displayName || innerType.name || '';
      return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
    }

    function getComponentName(type) {
      if (type == null) {
        // Host root, text node or just invalid type.
        return null;
      }

      {
        if (typeof type.tag === 'number') {
          warningWithoutStack$1(false, 'Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');
        }
      }

      if (typeof type === 'function') {
        return type.displayName || type.name || null;
      }

      if (typeof type === 'string') {
        return type;
      }

      switch (type) {
        case REACT_FRAGMENT_TYPE:
          return 'Fragment';

        case REACT_PORTAL_TYPE:
          return 'Portal';

        case REACT_PROFILER_TYPE:
          return "Profiler";

        case REACT_STRICT_MODE_TYPE:
          return 'StrictMode';

        case REACT_SUSPENSE_TYPE:
          return 'Suspense';

        case REACT_SUSPENSE_LIST_TYPE:
          return 'SuspenseList';
      }

      if (typeof type === 'object') {
        switch (type.$$typeof) {
          case REACT_CONTEXT_TYPE:
            return 'Context.Consumer';

          case REACT_PROVIDER_TYPE:
            return 'Context.Provider';

          case REACT_FORWARD_REF_TYPE:
            return getWrappedName(type, type.render, 'ForwardRef');

          case REACT_MEMO_TYPE:
            return getComponentName(type.type);

          case REACT_LAZY_TYPE:
            {
              var thenable = type;
              var resolvedThenable = refineResolvedLazyComponent(thenable);

              if (resolvedThenable) {
                return getComponentName(resolvedThenable);
              }

              break;
            }
        }
      }

      return null;
    }

    var ReactDebugCurrentFrame = {};
    var currentlyValidatingElement = null;

    function setCurrentlyValidatingElement(element) {
      {
        currentlyValidatingElement = element;
      }
    }

    {
      // Stack implementation injected by the current renderer.
      ReactDebugCurrentFrame.getCurrentStack = null;

      ReactDebugCurrentFrame.getStackAddendum = function () {
        var stack = ''; // Add an extra top frame while an element is being validated

        if (currentlyValidatingElement) {
          var name = getComponentName(currentlyValidatingElement.type);
          var owner = currentlyValidatingElement._owner;
          stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner.type));
        } // Delegate to the injected renderer-specific implementation


        var impl = ReactDebugCurrentFrame.getCurrentStack;

        if (impl) {
          stack += impl() || '';
        }

        return stack;
      };
    }
    /**
     * Used by act() to track whether you're inside an act() scope.
     */

    var IsSomeRendererActing = {
      current: false
    };
    var ReactSharedInternals = {
      ReactCurrentDispatcher: ReactCurrentDispatcher,
      ReactCurrentBatchConfig: ReactCurrentBatchConfig,
      ReactCurrentOwner: ReactCurrentOwner,
      IsSomeRendererActing: IsSomeRendererActing,
      // Used by renderers to avoid bundling object-assign twice in UMD bundles:
      assign: _assign
    };
    {
      _assign(ReactSharedInternals, {
        // These should not be included in production.
        ReactDebugCurrentFrame: ReactDebugCurrentFrame,
        // Shim for React DOM 16.0.0 which still destructured (but not used) this.
        // TODO: remove in React 17.0.
        ReactComponentTreeHook: {}
      });
    }
    /**
     * Similar to invariant but only logs a warning if the condition is not met.
     * This can be used to log issues in development environments in critical
     * paths. Removing the logging code for production environments will keep the
     * same logic and follow the same code paths.
     */

    var warning = warningWithoutStack$1;
    {
      warning = function (condition, format) {
        if (condition) {
          return;
        }

        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var stack = ReactDebugCurrentFrame.getStackAddendum(); // eslint-disable-next-line react-internal/warning-and-invariant-args

        for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
          args[_key - 2] = arguments[_key];
        }

        warningWithoutStack$1.apply(void 0, [false, format + '%s'].concat(args, [stack]));
      };
    }
    var warning$1 = warning;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var RESERVED_PROPS = {
      key: true,
      ref: true,
      __self: true,
      __source: true
    };
    var specialPropKeyWarningShown;
    var specialPropRefWarningShown;

    function hasValidRef(config) {
      {
        if (hasOwnProperty.call(config, 'ref')) {
          var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;

          if (getter && getter.isReactWarning) {
            return false;
          }
        }
      }
      return config.ref !== undefined;
    }

    function hasValidKey(config) {
      {
        if (hasOwnProperty.call(config, 'key')) {
          var getter = Object.getOwnPropertyDescriptor(config, 'key').get;

          if (getter && getter.isReactWarning) {
            return false;
          }
        }
      }
      return config.key !== undefined;
    }

    function defineKeyPropWarningGetter(props, displayName) {
      var warnAboutAccessingKey = function () {
        if (!specialPropKeyWarningShown) {
          specialPropKeyWarningShown = true;
          warningWithoutStack$1(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
        }
      };

      warnAboutAccessingKey.isReactWarning = true;
      Object.defineProperty(props, 'key', {
        get: warnAboutAccessingKey,
        configurable: true
      });
    }

    function defineRefPropWarningGetter(props, displayName) {
      var warnAboutAccessingRef = function () {
        if (!specialPropRefWarningShown) {
          specialPropRefWarningShown = true;
          warningWithoutStack$1(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
        }
      };

      warnAboutAccessingRef.isReactWarning = true;
      Object.defineProperty(props, 'ref', {
        get: warnAboutAccessingRef,
        configurable: true
      });
    }
    /**
     * Factory method to create a new React element. This no longer adheres to
     * the class pattern, so do not use new to call it. Also, no instanceof check
     * will work. Instead test $$typeof field against Symbol.for('react.element') to check
     * if something is a React Element.
     *
     * @param {*} type
     * @param {*} props
     * @param {*} key
     * @param {string|object} ref
     * @param {*} owner
     * @param {*} self A *temporary* helper to detect places where `this` is
     * different from the `owner` when React.createElement is called, so that we
     * can warn. We want to get rid of owner and replace string `ref`s with arrow
     * functions, and as long as `this` and owner are the same, there will be no
     * change in behavior.
     * @param {*} source An annotation object (added by a transpiler or otherwise)
     * indicating filename, line number, and/or other information.
     * @internal
     */


    var ReactElement = function (type, key, ref, self, source, owner, props) {
      var element = {
        // This tag allows us to uniquely identify this as a React Element
        $$typeof: REACT_ELEMENT_TYPE,
        // Built-in properties that belong on the element
        type: type,
        key: key,
        ref: ref,
        props: props,
        // Record the component responsible for creating this element.
        _owner: owner
      };
      {
        // The validation flag is currently mutative. We put it on
        // an external backing store so that we can freeze the whole object.
        // This can be replaced with a WeakMap once they are implemented in
        // commonly used development environments.
        element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
        // the validation flag non-enumerable (where possible, which should
        // include every environment we run tests in), so the test framework
        // ignores it.

        Object.defineProperty(element._store, 'validated', {
          configurable: false,
          enumerable: false,
          writable: true,
          value: false
        }); // self and source are DEV only properties.

        Object.defineProperty(element, '_self', {
          configurable: false,
          enumerable: false,
          writable: false,
          value: self
        }); // Two elements created in two different places should be considered
        // equal for testing purposes and therefore we hide it from enumeration.

        Object.defineProperty(element, '_source', {
          configurable: false,
          enumerable: false,
          writable: false,
          value: source
        });

        if (Object.freeze) {
          Object.freeze(element.props);
          Object.freeze(element);
        }
      }
      return element;
    };
    /**
     * https://github.com/reactjs/rfcs/pull/107
     * @param {*} type
     * @param {object} props
     * @param {string} key
     */

    /**
     * https://github.com/reactjs/rfcs/pull/107
     * @param {*} type
     * @param {object} props
     * @param {string} key
     */


    function jsxDEV(type, config, maybeKey, source, self) {
      var propName; // Reserved names are extracted

      var props = {};
      var key = null;
      var ref = null; // Currently, key can be spread in as a prop. This causes a potential
      // issue if key is also explicitly declared (ie. <div {...props} key="Hi" />
      // or <div key="Hi" {...props} /> ). We want to deprecate key spread,
      // but as an intermediary step, we will use jsxDEV for everything except
      // <div {...props} key="Hi" />, because we aren't currently able to tell if
      // key is explicitly declared to be undefined or not.

      if (maybeKey !== undefined) {
        key = '' + maybeKey;
      }

      if (hasValidKey(config)) {
        key = '' + config.key;
      }

      if (hasValidRef(config)) {
        ref = config.ref;
      } // Remaining properties are added to a new props object


      for (propName in config) {
        if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
          props[propName] = config[propName];
        }
      } // Resolve default props


      if (type && type.defaultProps) {
        var defaultProps = type.defaultProps;

        for (propName in defaultProps) {
          if (props[propName] === undefined) {
            props[propName] = defaultProps[propName];
          }
        }
      }

      if (key || ref) {
        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;

        if (key) {
          defineKeyPropWarningGetter(props, displayName);
        }

        if (ref) {
          defineRefPropWarningGetter(props, displayName);
        }
      }

      return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
    }
    /**
     * Create and return a new ReactElement of the given type.
     * See https://reactjs.org/docs/react-api.html#createelement
     */


    function createElement(type, config, children) {
      var propName; // Reserved names are extracted

      var props = {};
      var key = null;
      var ref = null;
      var self = null;
      var source = null;

      if (config != null) {
        if (hasValidRef(config)) {
          ref = config.ref;
        }

        if (hasValidKey(config)) {
          key = '' + config.key;
        }

        self = config.__self === undefined ? null : config.__self;
        source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object

        for (propName in config) {
          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
            props[propName] = config[propName];
          }
        }
      } // Children can be more than one argument, and those are transferred onto
      // the newly allocated props object.


      var childrenLength = arguments.length - 2;

      if (childrenLength === 1) {
        props.children = children;
      } else if (childrenLength > 1) {
        var childArray = Array(childrenLength);

        for (var i = 0; i < childrenLength; i++) {
          childArray[i] = arguments[i + 2];
        }

        {
          if (Object.freeze) {
            Object.freeze(childArray);
          }
        }
        props.children = childArray;
      } // Resolve default props


      if (type && type.defaultProps) {
        var defaultProps = type.defaultProps;

        for (propName in defaultProps) {
          if (props[propName] === undefined) {
            props[propName] = defaultProps[propName];
          }
        }
      }

      {
        if (key || ref) {
          var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;

          if (key) {
            defineKeyPropWarningGetter(props, displayName);
          }

          if (ref) {
            defineRefPropWarningGetter(props, displayName);
          }
        }
      }
      return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
    }
    /**
     * Return a function that produces ReactElements of a given type.
     * See https://reactjs.org/docs/react-api.html#createfactory
     */


    function cloneAndReplaceKey(oldElement, newKey) {
      var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
      return newElement;
    }
    /**
     * Clone and return a new ReactElement using element as the starting point.
     * See https://reactjs.org/docs/react-api.html#cloneelement
     */


    function cloneElement(element, config, children) {
      (function () {
        if (!!(element === null || element === undefined)) {
          {
            throw ReactError(Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + "."));
          }
        }
      })();

      var propName; // Original props are copied

      var props = _assign({}, element.props); // Reserved names are extracted


      var key = element.key;
      var ref = element.ref; // Self is preserved since the owner is preserved.

      var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a
      // transpiler, and the original source is probably a better indicator of the
      // true owner.

      var source = element._source; // Owner will be preserved, unless ref is overridden

      var owner = element._owner;

      if (config != null) {
        if (hasValidRef(config)) {
          // Silently steal the ref from the parent.
          ref = config.ref;
          owner = ReactCurrentOwner.current;
        }

        if (hasValidKey(config)) {
          key = '' + config.key;
        } // Remaining properties override existing props


        var defaultProps;

        if (element.type && element.type.defaultProps) {
          defaultProps = element.type.defaultProps;
        }

        for (propName in config) {
          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
            if (config[propName] === undefined && defaultProps !== undefined) {
              // Resolve default props
              props[propName] = defaultProps[propName];
            } else {
              props[propName] = config[propName];
            }
          }
        }
      } // Children can be more than one argument, and those are transferred onto
      // the newly allocated props object.


      var childrenLength = arguments.length - 2;

      if (childrenLength === 1) {
        props.children = children;
      } else if (childrenLength > 1) {
        var childArray = Array(childrenLength);

        for (var i = 0; i < childrenLength; i++) {
          childArray[i] = arguments[i + 2];
        }

        props.children = childArray;
      }

      return ReactElement(element.type, key, ref, self, source, owner, props);
    }
    /**
     * Verifies the object is a ReactElement.
     * See https://reactjs.org/docs/react-api.html#isvalidelement
     * @param {?object} object
     * @return {boolean} True if `object` is a ReactElement.
     * @final
     */


    function isValidElement(object) {
      return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }

    var SEPARATOR = '.';
    var SUBSEPARATOR = ':';
    /**
     * Escape and wrap key so it is safe to use as a reactid
     *
     * @param {string} key to be escaped.
     * @return {string} the escaped key.
     */

    function escape(key) {
      var escapeRegex = /[=:]/g;
      var escaperLookup = {
        '=': '=0',
        ':': '=2'
      };
      var escapedString = ('' + key).replace(escapeRegex, function (match) {
        return escaperLookup[match];
      });
      return '$' + escapedString;
    }
    /**
     * TODO: Test that a single child and an array with one item have the same key
     * pattern.
     */


    var didWarnAboutMaps = false;
    var userProvidedKeyEscapeRegex = /\/+/g;

    function escapeUserProvidedKey(text) {
      return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
    }

    var POOL_SIZE = 10;
    var traverseContextPool = [];

    function getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {
      if (traverseContextPool.length) {
        var traverseContext = traverseContextPool.pop();
        traverseContext.result = mapResult;
        traverseContext.keyPrefix = keyPrefix;
        traverseContext.func = mapFunction;
        traverseContext.context = mapContext;
        traverseContext.count = 0;
        return traverseContext;
      } else {
        return {
          result: mapResult,
          keyPrefix: keyPrefix,
          func: mapFunction,
          context: mapContext,
          count: 0
        };
      }
    }

    function releaseTraverseContext(traverseContext) {
      traverseContext.result = null;
      traverseContext.keyPrefix = null;
      traverseContext.func = null;
      traverseContext.context = null;
      traverseContext.count = 0;

      if (traverseContextPool.length < POOL_SIZE) {
        traverseContextPool.push(traverseContext);
      }
    }
    /**
     * @param {?*} children Children tree container.
     * @param {!string} nameSoFar Name of the key path so far.
     * @param {!function} callback Callback to invoke with each child found.
     * @param {?*} traverseContext Used to pass information throughout the traversal
     * process.
     * @return {!number} The number of children in this subtree.
     */


    function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
      var type = typeof children;

      if (type === 'undefined' || type === 'boolean') {
        // All of the above are perceived as null.
        children = null;
      }

      var invokeCallback = false;

      if (children === null) {
        invokeCallback = true;
      } else {
        switch (type) {
          case 'string':
          case 'number':
            invokeCallback = true;
            break;

          case 'object':
            switch (children.$$typeof) {
              case REACT_ELEMENT_TYPE:
              case REACT_PORTAL_TYPE:
                invokeCallback = true;
            }

        }
      }

      if (invokeCallback) {
        callback(traverseContext, children, // If it's the only child, treat the name as if it was wrapped in an array
        // so that it's consistent if the number of children grows.
        nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
        return 1;
      }

      var child;
      var nextName;
      var subtreeCount = 0; // Count of children found in the current subtree.

      var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

      if (Array.isArray(children)) {
        for (var i = 0; i < children.length; i++) {
          child = children[i];
          nextName = nextNamePrefix + getComponentKey(child, i);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        var iteratorFn = getIteratorFn(children);

        if (typeof iteratorFn === 'function') {
          {
            // Warn about using Maps as children
            if (iteratorFn === children.entries) {
              !didWarnAboutMaps ? warning$1(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.') : void 0;
              didWarnAboutMaps = true;
            }
          }
          var iterator = iteratorFn.call(children);
          var step;
          var ii = 0;

          while (!(step = iterator.next()).done) {
            child = step.value;
            nextName = nextNamePrefix + getComponentKey(child, ii++);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        } else if (type === 'object') {
          var addendum = '';
          {
            addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();
          }
          var childrenString = '' + children;

          (function () {
            {
              {
                throw ReactError(Error("Objects are not valid as a React child (found: " + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + ")." + addendum));
              }
            }
          })();
        }
      }

      return subtreeCount;
    }
    /**
     * Traverses children that are typically specified as `props.children`, but
     * might also be specified through attributes:
     *
     * - `traverseAllChildren(this.props.children, ...)`
     * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
     *
     * The `traverseContext` is an optional argument that is passed through the
     * entire traversal. It can be used to store accumulations or anything else that
     * the callback might find relevant.
     *
     * @param {?*} children Children tree object.
     * @param {!function} callback To invoke upon traversing each child.
     * @param {?*} traverseContext Context for traversal.
     * @return {!number} The number of children in this subtree.
     */


    function traverseAllChildren(children, callback, traverseContext) {
      if (children == null) {
        return 0;
      }

      return traverseAllChildrenImpl(children, '', callback, traverseContext);
    }
    /**
     * Generate a key string that identifies a component within a set.
     *
     * @param {*} component A component that could contain a manual key.
     * @param {number} index Index that is used if a manual key is not provided.
     * @return {string}
     */


    function getComponentKey(component, index) {
      // Do some typechecking here since we call this blindly. We want to ensure
      // that we don't block potential future ES APIs.
      if (typeof component === 'object' && component !== null && component.key != null) {
        // Explicit key
        return escape(component.key);
      } // Implicit key determined by the index in the set


      return index.toString(36);
    }

    function forEachSingleChild(bookKeeping, child, name) {
      var func = bookKeeping.func,
          context = bookKeeping.context;
      func.call(context, child, bookKeeping.count++);
    }
    /**
     * Iterates through children that are typically specified as `props.children`.
     *
     * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
     *
     * The provided forEachFunc(child, index) will be called for each
     * leaf child.
     *
     * @param {?*} children Children tree container.
     * @param {function(*, int)} forEachFunc
     * @param {*} forEachContext Context for forEachContext.
     */


    function forEachChildren(children, forEachFunc, forEachContext) {
      if (children == null) {
        return children;
      }

      var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);
      traverseAllChildren(children, forEachSingleChild, traverseContext);
      releaseTraverseContext(traverseContext);
    }

    function mapSingleChildIntoContext(bookKeeping, child, childKey) {
      var result = bookKeeping.result,
          keyPrefix = bookKeeping.keyPrefix,
          func = bookKeeping.func,
          context = bookKeeping.context;
      var mappedChild = func.call(context, child, bookKeeping.count++);

      if (Array.isArray(mappedChild)) {
        mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, function (c) {
          return c;
        });
      } else if (mappedChild != null) {
        if (isValidElement(mappedChild)) {
          mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as
          // traverseAllChildren used to do for objects as children
          keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
        }

        result.push(mappedChild);
      }
    }

    function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
      var escapedPrefix = '';

      if (prefix != null) {
        escapedPrefix = escapeUserProvidedKey(prefix) + '/';
      }

      var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);
      traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
      releaseTraverseContext(traverseContext);
    }
    /**
     * Maps children that are typically specified as `props.children`.
     *
     * See https://reactjs.org/docs/react-api.html#reactchildrenmap
     *
     * The provided mapFunction(child, key, index) will be called for each
     * leaf child.
     *
     * @param {?*} children Children tree container.
     * @param {function(*, int)} func The map function.
     * @param {*} context Context for mapFunction.
     * @return {object} Object containing the ordered map of results.
     */


    function mapChildren(children, func, context) {
      if (children == null) {
        return children;
      }

      var result = [];
      mapIntoWithKeyPrefixInternal(children, result, null, func, context);
      return result;
    }
    /**
     * Count the number of children that are typically specified as
     * `props.children`.
     *
     * See https://reactjs.org/docs/react-api.html#reactchildrencount
     *
     * @param {?*} children Children tree container.
     * @return {number} The number of children.
     */


    function countChildren(children) {
      return traverseAllChildren(children, function () {
        return null;
      }, null);
    }
    /**
     * Flatten a children object (typically specified as `props.children`) and
     * return an array with appropriately re-keyed children.
     *
     * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
     */


    function toArray(children) {
      var result = [];
      mapIntoWithKeyPrefixInternal(children, result, null, function (child) {
        return child;
      });
      return result;
    }
    /**
     * Returns the first child in a collection of children and verifies that there
     * is only one child in the collection.
     *
     * See https://reactjs.org/docs/react-api.html#reactchildrenonly
     *
     * The current implementation of this function assumes that a single child gets
     * passed without a wrapper, but the purpose of this helper function is to
     * abstract away the particular structure of children.
     *
     * @param {?object} children Child collection structure.
     * @return {ReactElement} The first and only `ReactElement` contained in the
     * structure.
     */


    function onlyChild(children) {
      (function () {
        if (!isValidElement(children)) {
          {
            throw ReactError(Error("React.Children.only expected to receive a single React element child."));
          }
        }
      })();

      return children;
    }

    function createContext(defaultValue, calculateChangedBits) {
      if (calculateChangedBits === undefined) {
        calculateChangedBits = null;
      } else {
        {
          !(calculateChangedBits === null || typeof calculateChangedBits === 'function') ? warningWithoutStack$1(false, 'createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits) : void 0;
        }
      }

      var context = {
        $$typeof: REACT_CONTEXT_TYPE,
        _calculateChangedBits: calculateChangedBits,
        // As a workaround to support multiple concurrent renderers, we categorize
        // some renderers as primary and others as secondary. We only expect
        // there to be two concurrent renderers at most: React Native (primary) and
        // Fabric (secondary); React DOM (primary) and React ART (secondary).
        // Secondary renderers store their context values on separate fields.
        _currentValue: defaultValue,
        _currentValue2: defaultValue,
        // Used to track how many concurrent renderers this context currently
        // supports within in a single renderer. Such as parallel server rendering.
        _threadCount: 0,
        // These are circular
        Provider: null,
        Consumer: null
      };
      context.Provider = {
        $$typeof: REACT_PROVIDER_TYPE,
        _context: context
      };
      var hasWarnedAboutUsingNestedContextConsumers = false;
      var hasWarnedAboutUsingConsumerProvider = false;
      {
        // A separate object, but proxies back to the original context object for
        // backwards compatibility. It has a different $$typeof, so we can properly
        // warn for the incorrect usage of Context as a Consumer.
        var Consumer = {
          $$typeof: REACT_CONTEXT_TYPE,
          _context: context,
          _calculateChangedBits: context._calculateChangedBits
        }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here

        Object.defineProperties(Consumer, {
          Provider: {
            get: function () {
              if (!hasWarnedAboutUsingConsumerProvider) {
                hasWarnedAboutUsingConsumerProvider = true;
                warning$1(false, 'Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');
              }

              return context.Provider;
            },
            set: function (_Provider) {
              context.Provider = _Provider;
            }
          },
          _currentValue: {
            get: function () {
              return context._currentValue;
            },
            set: function (_currentValue) {
              context._currentValue = _currentValue;
            }
          },
          _currentValue2: {
            get: function () {
              return context._currentValue2;
            },
            set: function (_currentValue2) {
              context._currentValue2 = _currentValue2;
            }
          },
          _threadCount: {
            get: function () {
              return context._threadCount;
            },
            set: function (_threadCount) {
              context._threadCount = _threadCount;
            }
          },
          Consumer: {
            get: function () {
              if (!hasWarnedAboutUsingNestedContextConsumers) {
                hasWarnedAboutUsingNestedContextConsumers = true;
                warning$1(false, 'Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
              }

              return context.Consumer;
            }
          }
        }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty

        context.Consumer = Consumer;
      }
      {
        context._currentRenderer = null;
        context._currentRenderer2 = null;
      }
      return context;
    }

    function lazy(ctor) {
      var lazyType = {
        $$typeof: REACT_LAZY_TYPE,
        _ctor: ctor,
        // React uses these fields to store the result.
        _status: -1,
        _result: null
      };
      {
        // In production, this would just set it on the object.
        var defaultProps;
        var propTypes;
        Object.defineProperties(lazyType, {
          defaultProps: {
            configurable: true,
            get: function () {
              return defaultProps;
            },
            set: function (newDefaultProps) {
              warning$1(false, 'React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');
              defaultProps = newDefaultProps; // Match production behavior more closely:

              Object.defineProperty(lazyType, 'defaultProps', {
                enumerable: true
              });
            }
          },
          propTypes: {
            configurable: true,
            get: function () {
              return propTypes;
            },
            set: function (newPropTypes) {
              warning$1(false, 'React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');
              propTypes = newPropTypes; // Match production behavior more closely:

              Object.defineProperty(lazyType, 'propTypes', {
                enumerable: true
              });
            }
          }
        });
      }
      return lazyType;
    }

    function forwardRef(render) {
      {
        if (render != null && render.$$typeof === REACT_MEMO_TYPE) {
          warningWithoutStack$1(false, 'forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');
        } else if (typeof render !== 'function') {
          warningWithoutStack$1(false, 'forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);
        } else {
          !( // Do not warn for 0 arguments because it could be due to usage of the 'arguments' object
          render.length === 0 || render.length === 2) ? warningWithoutStack$1(false, 'forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.') : void 0;
        }

        if (render != null) {
          !(render.defaultProps == null && render.propTypes == null) ? warningWithoutStack$1(false, 'forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?') : void 0;
        }
      }
      return {
        $$typeof: REACT_FORWARD_REF_TYPE,
        render: render
      };
    }

    function isValidElementType(type) {
      return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE);
    }

    function memo(type, compare) {
      {
        if (!isValidElementType(type)) {
          warningWithoutStack$1(false, 'memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);
        }
      }
      return {
        $$typeof: REACT_MEMO_TYPE,
        type: type,
        compare: compare === undefined ? null : compare
      };
    }

    function resolveDispatcher() {
      var dispatcher = ReactCurrentDispatcher.current;

      (function () {
        if (!(dispatcher !== null)) {
          {
            throw ReactError(Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem."));
          }
        }
      })();

      return dispatcher;
    }

    function useContext(Context, unstable_observedBits) {
      var dispatcher = resolveDispatcher();
      {
        !(unstable_observedBits === undefined) ? warning$1(false, 'useContext() second argument is reserved for future ' + 'use in React. Passing it is not supported. ' + 'You passed: %s.%s', unstable_observedBits, typeof unstable_observedBits === 'number' && Array.isArray(arguments[2]) ? '\n\nDid you call array.map(useContext)? ' + 'Calling Hooks inside a loop is not supported. ' + 'Learn more at https://fb.me/rules-of-hooks' : '') : void 0; // TODO: add a more generic warning for invalid values.

        if (Context._context !== undefined) {
          var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs
          // and nobody should be using this in existing code.

          if (realContext.Consumer === Context) {
            warning$1(false, 'Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');
          } else if (realContext.Provider === Context) {
            warning$1(false, 'Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');
          }
        }
      }
      return dispatcher.useContext(Context, unstable_observedBits);
    }

    function useState(initialState) {
      var dispatcher = resolveDispatcher();
      return dispatcher.useState(initialState);
    }

    function useReducer(reducer, initialArg, init) {
      var dispatcher = resolveDispatcher();
      return dispatcher.useReducer(reducer, initialArg, init);
    }

    function useRef(initialValue) {
      var dispatcher = resolveDispatcher();
      return dispatcher.useRef(initialValue);
    }

    function useEffect(create, inputs) {
      var dispatcher = resolveDispatcher();
      return dispatcher.useEffect(create, inputs);
    }

    function useLayoutEffect(create, inputs) {
      var dispatcher = resolveDispatcher();
      return dispatcher.useLayoutEffect(create, inputs);
    }

    function useCallback(callback, inputs) {
      var dispatcher = resolveDispatcher();
      return dispatcher.useCallback(callback, inputs);
    }

    function useMemo(create, inputs) {
      var dispatcher = resolveDispatcher();
      return dispatcher.useMemo(create, inputs);
    }

    function useImperativeHandle(ref, create, inputs) {
      var dispatcher = resolveDispatcher();
      return dispatcher.useImperativeHandle(ref, create, inputs);
    }

    function useDebugValue(value, formatterFn) {
      {
        var dispatcher = resolveDispatcher();
        return dispatcher.useDebugValue(value, formatterFn);
      }
    }

    var emptyObject$1 = {};

    function useResponder(responder, listenerProps) {
      var dispatcher = resolveDispatcher();
      {
        if (responder == null || responder.$$typeof !== REACT_RESPONDER_TYPE) {
          warning$1(false, 'useResponder: invalid first argument. Expected an event responder, but instead got %s', responder);
          return;
        }
      }
      return dispatcher.useResponder(responder, listenerProps || emptyObject$1);
    }

    function withSuspenseConfig(scope, config) {
      var previousConfig = ReactCurrentBatchConfig.suspense;
      ReactCurrentBatchConfig.suspense = config === undefined ? null : config;

      try {
        scope();
      } finally {
        ReactCurrentBatchConfig.suspense = previousConfig;
      }
    }
    /**
     * ReactElementValidator provides a wrapper around a element factory
     * which validates the props passed to the element. This is intended to be
     * used only in DEV and could be replaced by a static type checker for languages
     * that support it.
     */


    var propTypesMisspellWarningShown;
    {
      propTypesMisspellWarningShown = false;
    }
    var hasOwnProperty$1 = Object.prototype.hasOwnProperty;

    function getDeclarationErrorAddendum() {
      if (ReactCurrentOwner.current) {
        var name = getComponentName(ReactCurrentOwner.current.type);

        if (name) {
          return '\n\nCheck the render method of `' + name + '`.';
        }
      }

      return '';
    }

    function getSourceInfoErrorAddendum(source) {
      if (source !== undefined) {
        var fileName = source.fileName.replace(/^.*[\\\/]/, '');
        var lineNumber = source.lineNumber;
        return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
      }

      return '';
    }

    function getSourceInfoErrorAddendumForProps(elementProps) {
      if (elementProps !== null && elementProps !== undefined) {
        return getSourceInfoErrorAddendum(elementProps.__source);
      }

      return '';
    }
    /**
     * Warn if there's no key explicitly set on dynamic arrays of children or
     * object keys are not valid. This allows us to keep track of children between
     * updates.
     */


    var ownerHasKeyUseWarning = {};

    function getCurrentComponentErrorInfo(parentType) {
      var info = getDeclarationErrorAddendum();

      if (!info) {
        var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;

        if (parentName) {
          info = "\n\nCheck the top-level render call using <" + parentName + ">.";
        }
      }

      return info;
    }
    /**
     * Warn if the element doesn't have an explicit key assigned to it.
     * This element is in an array. The array could grow and shrink or be
     * reordered. All children that haven't already been validated are required to
     * have a "key" property assigned to it. Error statuses are cached so a warning
     * will only be shown once.
     *
     * @internal
     * @param {ReactElement} element Element that requires a key.
     * @param {*} parentType element's parent's type.
     */


    function validateExplicitKey(element, parentType) {
      if (!element._store || element._store.validated || element.key != null) {
        return;
      }

      element._store.validated = true;
      var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);

      if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
        return;
      }

      ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
      // property, it may be the creator of the child that's responsible for
      // assigning it a key.

      var childOwner = '';

      if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
        // Give the component that originally created this child.
        childOwner = " It was passed a child from " + getComponentName(element._owner.type) + ".";
      }

      setCurrentlyValidatingElement(element);
      {
        warning$1(false, 'Each child in a list should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.', currentComponentErrorInfo, childOwner);
      }
      setCurrentlyValidatingElement(null);
    }
    /**
     * Ensure that every element either is passed in a static location, in an
     * array with an explicit keys property defined, or in an object literal
     * with valid key property.
     *
     * @internal
     * @param {ReactNode} node Statically passed child of any type.
     * @param {*} parentType node's parent's type.
     */


    function validateChildKeys(node, parentType) {
      if (typeof node !== 'object') {
        return;
      }

      if (Array.isArray(node)) {
        for (var i = 0; i < node.length; i++) {
          var child = node[i];

          if (isValidElement(child)) {
            validateExplicitKey(child, parentType);
          }
        }
      } else if (isValidElement(node)) {
        // This element was passed in a valid location.
        if (node._store) {
          node._store.validated = true;
        }
      } else if (node) {
        var iteratorFn = getIteratorFn(node);

        if (typeof iteratorFn === 'function') {
          // Entry iterators used to provide implicit keys,
          // but now we print a separate warning for them later.
          if (iteratorFn !== node.entries) {
            var iterator = iteratorFn.call(node);
            var step;

            while (!(step = iterator.next()).done) {
              if (isValidElement(step.value)) {
                validateExplicitKey(step.value, parentType);
              }
            }
          }
        }
      }
    }
    /**
     * Given an element, validate that its props follow the propTypes definition,
     * provided by the type.
     *
     * @param {ReactElement} element
     */


    function validatePropTypes(element) {
      var type = element.type;

      if (type === null || type === undefined || typeof type === 'string') {
        return;
      }

      var name = getComponentName(type);
      var propTypes;

      if (typeof type === 'function') {
        propTypes = type.propTypes;
      } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
      // Inner props are checked in the reconciler.
      type.$$typeof === REACT_MEMO_TYPE)) {
        propTypes = type.propTypes;
      } else {
        return;
      }

      if (propTypes) {
        setCurrentlyValidatingElement(element);
        checkPropTypes(propTypes, element.props, 'prop', name, ReactDebugCurrentFrame.getStackAddendum);
        setCurrentlyValidatingElement(null);
      } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
        propTypesMisspellWarningShown = true;
        warningWithoutStack$1(false, 'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');
      }

      if (typeof type.getDefaultProps === 'function') {
        !type.getDefaultProps.isReactClassApproved ? warningWithoutStack$1(false, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
      }
    }
    /**
     * Given a fragment, validate that it can only be provided with fragment props
     * @param {ReactElement} fragment
     */


    function validateFragmentProps(fragment) {
      setCurrentlyValidatingElement(fragment);
      var keys = Object.keys(fragment.props);

      for (var i = 0; i < keys.length; i++) {
        var key = keys[i];

        if (key !== 'children' && key !== 'key') {
          warning$1(false, 'Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);
          break;
        }
      }

      if (fragment.ref !== null) {
        warning$1(false, 'Invalid attribute `ref` supplied to `React.Fragment`.');
      }

      setCurrentlyValidatingElement(null);
    }

    function jsxWithValidation(type, props, key, isStaticChildren, source, self) {
      var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
      // succeed and there will likely be errors in render.

      if (!validType) {
        var info = '';

        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
          info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
        }

        var sourceInfo = getSourceInfoErrorAddendum(source);

        if (sourceInfo) {
          info += sourceInfo;
        } else {
          info += getDeclarationErrorAddendum();
        }

        var typeString;

        if (type === null) {
          typeString = 'null';
        } else if (Array.isArray(type)) {
          typeString = 'array';
        } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
          typeString = "<" + (getComponentName(type.type) || 'Unknown') + " />";
          info = ' Did you accidentally export a JSX literal instead of a component?';
        } else {
          typeString = typeof type;
        }

        warning$1(false, 'React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
      }

      var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.
      // TODO: Drop this when these are no longer allowed as the type argument.

      if (element == null) {
        return element;
      } // Skip key warning if the type isn't valid since our key validation logic
      // doesn't expect a non-string/function type and can throw confusing errors.
      // We don't want exception behavior to differ between dev and prod.
      // (Rendering will throw with a helpful message and as soon as the type is
      // fixed, the key warnings will appear.)


      if (validType) {
        var children = props.children;

        if (children !== undefined) {
          if (isStaticChildren) {
            if (Array.isArray(children)) {
              for (var i = 0; i < children.length; i++) {
                validateChildKeys(children[i], type);
              }

              if (Object.freeze) {
                Object.freeze(children);
              }
            } else {
              warning$1(false, 'React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');
            }
          } else {
            validateChildKeys(children, type);
          }
        }
      }

      if (hasOwnProperty$1.call(props, 'key')) {
        warning$1(false, 'React.jsx: Spreading a key to JSX is a deprecated pattern. ' + 'Explicitly pass a key after spreading props in your JSX call. ' + 'E.g. <ComponentName {...props} key={key} />');
      }

      if (type === REACT_FRAGMENT_TYPE) {
        validateFragmentProps(element);
      } else {
        validatePropTypes(element);
      }

      return element;
    } // These two functions exist to still get child warnings in dev
    // even with the prod transform. This means that jsxDEV is purely
    // opt-in behavior for better messages but that we won't stop
    // giving you warnings if you use production apis.


    function jsxWithValidationStatic(type, props, key) {
      return jsxWithValidation(type, props, key, true);
    }

    function jsxWithValidationDynamic(type, props, key) {
      return jsxWithValidation(type, props, key, false);
    }

    function createElementWithValidation(type, props, children) {
      var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
      // succeed and there will likely be errors in render.

      if (!validType) {
        var info = '';

        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
          info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
        }

        var sourceInfo = getSourceInfoErrorAddendumForProps(props);

        if (sourceInfo) {
          info += sourceInfo;
        } else {
          info += getDeclarationErrorAddendum();
        }

        var typeString;

        if (type === null) {
          typeString = 'null';
        } else if (Array.isArray(type)) {
          typeString = 'array';
        } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
          typeString = "<" + (getComponentName(type.type) || 'Unknown') + " />";
          info = ' Did you accidentally export a JSX literal instead of a component?';
        } else {
          typeString = typeof type;
        }

        warning$1(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
      }

      var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.
      // TODO: Drop this when these are no longer allowed as the type argument.

      if (element == null) {
        return element;
      } // Skip key warning if the type isn't valid since our key validation logic
      // doesn't expect a non-string/function type and can throw confusing errors.
      // We don't want exception behavior to differ between dev and prod.
      // (Rendering will throw with a helpful message and as soon as the type is
      // fixed, the key warnings will appear.)


      if (validType) {
        for (var i = 2; i < arguments.length; i++) {
          validateChildKeys(arguments[i], type);
        }
      }

      if (type === REACT_FRAGMENT_TYPE) {
        validateFragmentProps(element);
      } else {
        validatePropTypes(element);
      }

      return element;
    }

    function createFactoryWithValidation(type) {
      var validatedFactory = createElementWithValidation.bind(null, type);
      validatedFactory.type = type; // Legacy hook: remove it

      {
        Object.defineProperty(validatedFactory, 'type', {
          enumerable: false,
          get: function () {
            lowPriorityWarningWithoutStack$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
            Object.defineProperty(this, 'type', {
              value: type
            });
            return type;
          }
        });
      }
      return validatedFactory;
    }

    function cloneElementWithValidation(element, props, children) {
      var newElement = cloneElement.apply(this, arguments);

      for (var i = 2; i < arguments.length; i++) {
        validateChildKeys(arguments[i], newElement.type);
      }

      validatePropTypes(newElement);
      return newElement;
    }

    var hasBadMapPolyfill;
    {
      hasBadMapPolyfill = false;

      try {
        var frozenObject = Object.freeze({});
        var testMap = new Map([[frozenObject, null]]);
        var testSet = new Set([frozenObject]); // This is necessary for Rollup to not consider these unused.
        // https://github.com/rollup/rollup/issues/1771
        // TODO: we can remove these if Rollup fixes the bug.

        testMap.set(0, 0);
        testSet.add(0);
      } catch (e) {
        // TODO: Consider warning about bad polyfills
        hasBadMapPolyfill = true;
      }
    }

    function createFundamentalComponent(impl) {
      // We use responder as a Map key later on. When we have a bad
      // polyfill, then we can't use it as a key as the polyfill tries
      // to add a property to the object.
      if (true && !hasBadMapPolyfill) {
        Object.freeze(impl);
      }

      var fundamantalComponent = {
        $$typeof: REACT_FUNDAMENTAL_TYPE,
        impl: impl
      };
      {
        Object.freeze(fundamantalComponent);
      }
      return fundamantalComponent;
    }

    function createEventResponder(displayName, responderConfig) {
      var getInitialState = responderConfig.getInitialState,
          onEvent = responderConfig.onEvent,
          onMount = responderConfig.onMount,
          onUnmount = responderConfig.onUnmount,
          onRootEvent = responderConfig.onRootEvent,
          rootEventTypes = responderConfig.rootEventTypes,
          targetEventTypes = responderConfig.targetEventTypes,
          targetPortalPropagation = responderConfig.targetPortalPropagation;
      var eventResponder = {
        $$typeof: REACT_RESPONDER_TYPE,
        displayName: displayName,
        getInitialState: getInitialState || null,
        onEvent: onEvent || null,
        onMount: onMount || null,
        onRootEvent: onRootEvent || null,
        onUnmount: onUnmount || null,
        rootEventTypes: rootEventTypes || null,
        targetEventTypes: targetEventTypes || null,
        targetPortalPropagation: targetPortalPropagation || false
      }; // We use responder as a Map key later on. When we have a bad
      // polyfill, then we can't use it as a key as the polyfill tries
      // to add a property to the object.

      if (true && !hasBadMapPolyfill) {
        Object.freeze(eventResponder);
      }

      return eventResponder;
    }

    function createScope(fn) {
      var scopeComponent = {
        $$typeof: REACT_SCOPE_TYPE,
        fn: fn
      };
      {
        Object.freeze(scopeComponent);
      }
      return scopeComponent;
    } // Helps identify side effects in begin-phase lifecycle hooks and setState reducers:
    // In some cases, StrictMode should also double-render lifecycles.
    // This can be confusing for tests though,
    // And it can be bad for performance in production.
    // This feature flag can be used to control the behavior:
    // To preserve the "Pause on caught exceptions" behavior of the debugger, we
    // replay the begin phase of a failed component inside invokeGuardedCallback.
    // Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:
    // Gather advanced timing metrics for Profiler subtrees.
    // Trace which interactions trigger each commit.
    // Only used in www builds.
    // TODO: true? Here it might just be false.
    // Only used in www builds.
    // Only used in www builds.
    // Disable javascript: URL strings in href for XSS protection.
    // React Fire: prevent the value and checked attributes from syncing
    // with their related DOM properties
    // These APIs will no longer be "unstable" in the upcoming 16.7 release,
    // Control this behavior with a flag to support 16.6 minor releases in the meanwhile.
    // See https://github.com/react-native-community/discussions-and-proposals/issues/72 for more information
    // This is a flag so we can fix warnings in RN core before turning it on
    // Experimental React Flare event system and event components support.


    var enableFlareAPI = false; // Experimental Host Component support.

    var enableFundamentalAPI = false; // Experimental Scope support.

    var enableScopeAPI = false; // New API for JSX transforms to target - https://github.com/reactjs/rfcs/pull/107

    var enableJSXTransformAPI = false; // We will enforce mocking scheduler with scheduler/unstable_mock at some point. (v17?)
    // Till then, we warn about the missing mock, but still fallback to a sync mode compatible version
    // For tests, we flush suspense fallbacks in an act scope;
    // *except* in some of our own tests, where we test incremental loading states.
    // Changes priority of some events like mousemove to user-blocking priority,
    // but without making them discrete. The flag exists in case it causes
    // starvation problems.
    // Add a callback property to suspense to notify which promises are currently
    // in the update queue. This allows reporting and tracing of what is causing
    // the user to see a loading state.
    // Also allows hydration callbacks to fire when a dehydrated boundary gets
    // hydrated or deleted.
    // Part of the simplification of React.createElement so we can eventually move
    // from React.createElement to React.jsx
    // https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md

    var React = {
      Children: {
        map: mapChildren,
        forEach: forEachChildren,
        count: countChildren,
        toArray: toArray,
        only: onlyChild
      },
      createRef: createRef,
      Component: Component,
      PureComponent: PureComponent,
      createContext: createContext,
      forwardRef: forwardRef,
      lazy: lazy,
      memo: memo,
      useCallback: useCallback,
      useContext: useContext,
      useEffect: useEffect,
      useImperativeHandle: useImperativeHandle,
      useDebugValue: useDebugValue,
      useLayoutEffect: useLayoutEffect,
      useMemo: useMemo,
      useReducer: useReducer,
      useRef: useRef,
      useState: useState,
      Fragment: REACT_FRAGMENT_TYPE,
      Profiler: REACT_PROFILER_TYPE,
      StrictMode: REACT_STRICT_MODE_TYPE,
      Suspense: REACT_SUSPENSE_TYPE,
      unstable_SuspenseList: REACT_SUSPENSE_LIST_TYPE,
      createElement: createElementWithValidation,
      cloneElement: cloneElementWithValidation,
      createFactory: createFactoryWithValidation,
      isValidElement: isValidElement,
      version: ReactVersion,
      unstable_withSuspenseConfig: withSuspenseConfig,
      __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: ReactSharedInternals
    };

    if (enableFlareAPI) {
      React.unstable_useResponder = useResponder;
      React.unstable_createResponder = createEventResponder;
    }

    if (enableFundamentalAPI) {
      React.unstable_createFundamental = createFundamentalComponent;
    }

    if (enableScopeAPI) {
      React.unstable_createScope = createScope;
    } // Note: some APIs are added with feature flags.
    // Make sure that stable builds for open source
    // don't modify the React object to avoid deopts.
    // Also let's not expose their names in stable builds.


    if (enableJSXTransformAPI) {
      {
        React.jsxDEV = jsxWithValidation;
        React.jsx = jsxWithValidationDynamic;
        React.jsxs = jsxWithValidationStatic;
      }
    }

    var React$2 = Object.freeze({
      default: React
    });
    var React$3 = React$2 && React || React$2; // TODO: decide on the top-level export form.
    // This is hacky but makes it work with both Rollup and Jest.

    var react = React$3.default || React$3;
    module.exports = react;
  })();
}
},{"object-assign":"../node_modules/object-assign/index.js","prop-types/checkPropTypes":"../node_modules/prop-types/checkPropTypes.js"}],"../node_modules/react/index.js":[function(require,module,exports) {
'use strict';

if ("development" === 'production') {
  module.exports = require('./cjs/react.production.min.js');
} else {
  module.exports = require('./cjs/react.development.js');
}
},{"./cjs/react.development.js":"../node_modules/react/cjs/react.development.js"}],"../node_modules/scheduler/cjs/scheduler.development.js":[function(require,module,exports) {
/** @license React v0.16.2
 * scheduler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
'use strict';

if ("development" !== "production") {
  (function () {
    'use strict';

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    var enableSchedulerDebugging = false;
    var enableIsInputPending = false;
    var enableMessageLoopImplementation = true;
    var enableProfiling = true; // works by scheduling a requestAnimationFrame, storing the time for the start
    // of the frame, then scheduling a postMessage which gets scheduled after paint.
    // Within the postMessage handler do as much work as possible until time + frame
    // rate. By separating the idle call into a separate event tick we ensure that
    // layout, paint and other browser work is counted against the available time.
    // The frame rate is dynamically adjusted.

    var requestHostCallback;
    var requestHostTimeout;
    var cancelHostTimeout;
    var shouldYieldToHost;
    var requestPaint;

    if ( // If Scheduler runs in a non-DOM environment, it falls back to a naive
    // implementation using setTimeout.
    typeof window === 'undefined' || // Check if MessageChannel is supported, too.
    typeof MessageChannel !== 'function') {
      // If this accidentally gets imported in a non-browser environment, e.g. JavaScriptCore,
      // fallback to a naive implementation.
      var _callback = null;
      var _timeoutID = null;

      var _flushCallback = function () {
        if (_callback !== null) {
          try {
            var currentTime = exports.unstable_now();
            var hasRemainingTime = true;

            _callback(hasRemainingTime, currentTime);

            _callback = null;
          } catch (e) {
            setTimeout(_flushCallback, 0);
            throw e;
          }
        }
      };

      var initialTime = Date.now();

      exports.unstable_now = function () {
        return Date.now() - initialTime;
      };

      requestHostCallback = function (cb) {
        if (_callback !== null) {
          // Protect against re-entrancy.
          setTimeout(requestHostCallback, 0, cb);
        } else {
          _callback = cb;
          setTimeout(_flushCallback, 0);
        }
      };

      requestHostTimeout = function (cb, ms) {
        _timeoutID = setTimeout(cb, ms);
      };

      cancelHostTimeout = function () {
        clearTimeout(_timeoutID);
      };

      shouldYieldToHost = function () {
        return false;
      };

      requestPaint = exports.unstable_forceFrameRate = function () {};
    } else {
      // Capture local references to native APIs, in case a polyfill overrides them.
      var performance = window.performance;
      var _Date = window.Date;
      var _setTimeout = window.setTimeout;
      var _clearTimeout = window.clearTimeout;
      var requestAnimationFrame = window.requestAnimationFrame;
      var cancelAnimationFrame = window.cancelAnimationFrame;

      if (typeof console !== 'undefined') {
        // TODO: Remove fb.me link
        if (typeof requestAnimationFrame !== 'function') {
          console.error("This browser doesn't support requestAnimationFrame. " + 'Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
        }

        if (typeof cancelAnimationFrame !== 'function') {
          console.error("This browser doesn't support cancelAnimationFrame. " + 'Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
        }
      }

      if (typeof performance === 'object' && typeof performance.now === 'function') {
        exports.unstable_now = function () {
          return performance.now();
        };
      } else {
        var _initialTime = _Date.now();

        exports.unstable_now = function () {
          return _Date.now() - _initialTime;
        };
      }

      var isRAFLoopRunning = false;
      var isMessageLoopRunning = false;
      var scheduledHostCallback = null;
      var rAFTimeoutID = -1;
      var taskTimeoutID = -1;
      var frameLength = enableMessageLoopImplementation ? // We won't attempt to align with the vsync. Instead we'll yield multiple
      // times per frame, often enough to keep it responsive even at really
      // high frame rates > 120.
      5 : // Use a heuristic to measure the frame rate and yield at the end of the
      // frame. We start out assuming that we run at 30fps but then the
      // heuristic tracking will adjust this value to a faster fps if we get
      // more frequent animation frames.
      33.33;
      var prevRAFTime = -1;
      var prevRAFInterval = -1;
      var frameDeadline = 0;
      var fpsLocked = false; // TODO: Make this configurable
      // TODO: Adjust this based on priority?

      var maxFrameLength = 300;
      var needsPaint = false;

      if (enableIsInputPending && navigator !== undefined && navigator.scheduling !== undefined && navigator.scheduling.isInputPending !== undefined) {
        var scheduling = navigator.scheduling;

        shouldYieldToHost = function () {
          var currentTime = exports.unstable_now();

          if (currentTime >= frameDeadline) {
            // There's no time left in the frame. We may want to yield control of
            // the main thread, so the browser can perform high priority tasks. The
            // main ones are painting and user input. If there's a pending paint or
            // a pending input, then we should yield. But if there's neither, then
            // we can yield less often while remaining responsive. We'll eventually
            // yield regardless, since there could be a pending paint that wasn't
            // accompanied by a call to `requestPaint`, or other main thread tasks
            // like network events.
            if (needsPaint || scheduling.isInputPending()) {
              // There is either a pending paint or a pending input.
              return true;
            } // There's no pending input. Only yield if we've reached the max
            // frame length.


            return currentTime >= frameDeadline + maxFrameLength;
          } else {
            // There's still time left in the frame.
            return false;
          }
        };

        requestPaint = function () {
          needsPaint = true;
        };
      } else {
        // `isInputPending` is not available. Since we have no way of knowing if
        // there's pending input, always yield at the end of the frame.
        shouldYieldToHost = function () {
          return exports.unstable_now() >= frameDeadline;
        }; // Since we yield every frame regardless, `requestPaint` has no effect.


        requestPaint = function () {};
      }

      exports.unstable_forceFrameRate = function (fps) {
        if (fps < 0 || fps > 125) {
          console.error('forceFrameRate takes a positive int between 0 and 125, ' + 'forcing framerates higher than 125 fps is not unsupported');
          return;
        }

        if (fps > 0) {
          frameLength = Math.floor(1000 / fps);
          fpsLocked = true;
        } else {
          // reset the framerate
          frameLength = 33.33;
          fpsLocked = false;
        }
      };

      var performWorkUntilDeadline = function () {
        if (enableMessageLoopImplementation) {
          if (scheduledHostCallback !== null) {
            var currentTime = exports.unstable_now(); // Yield after `frameLength` ms, regardless of where we are in the vsync
            // cycle. This means there's always time remaining at the beginning of
            // the message event.

            frameDeadline = currentTime + frameLength;
            var hasTimeRemaining = true;

            try {
              var hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);

              if (!hasMoreWork) {
                isMessageLoopRunning = false;
                scheduledHostCallback = null;
              } else {
                // If there's more work, schedule the next message event at the end
                // of the preceding one.
                port.postMessage(null);
              }
            } catch (error) {
              // If a scheduler task throws, exit the current browser task so the
              // error can be observed.
              port.postMessage(null);
              throw error;
            }
          } else {
            isMessageLoopRunning = false;
          } // Yielding to the browser will give it a chance to paint, so we can
          // reset this.


          needsPaint = false;
        } else {
          if (scheduledHostCallback !== null) {
            var _currentTime = exports.unstable_now();

            var _hasTimeRemaining = frameDeadline - _currentTime > 0;

            try {
              var _hasMoreWork = scheduledHostCallback(_hasTimeRemaining, _currentTime);

              if (!_hasMoreWork) {
                scheduledHostCallback = null;
              }
            } catch (error) {
              // If a scheduler task throws, exit the current browser task so the
              // error can be observed, and post a new task as soon as possible
              // so we can continue where we left off.
              port.postMessage(null);
              throw error;
            }
          } // Yielding to the browser will give it a chance to paint, so we can
          // reset this.


          needsPaint = false;
        }
      };

      var channel = new MessageChannel();
      var port = channel.port2;
      channel.port1.onmessage = performWorkUntilDeadline;

      var onAnimationFrame = function (rAFTime) {
        if (scheduledHostCallback === null) {
          // No scheduled work. Exit.
          prevRAFTime = -1;
          prevRAFInterval = -1;
          isRAFLoopRunning = false;
          return;
        } // Eagerly schedule the next animation callback at the beginning of the
        // frame. If the scheduler queue is not empty at the end of the frame, it
        // will continue flushing inside that callback. If the queue *is* empty,
        // then it will exit immediately. Posting the callback at the start of the
        // frame ensures it's fired within the earliest possible frame. If we
        // waited until the end of the frame to post the callback, we risk the
        // browser skipping a frame and not firing the callback until the frame
        // after that.


        isRAFLoopRunning = true;
        requestAnimationFrame(function (nextRAFTime) {
          _clearTimeout(rAFTimeoutID);

          onAnimationFrame(nextRAFTime);
        }); // requestAnimationFrame is throttled when the tab is backgrounded. We
        // don't want to stop working entirely. So we'll fallback to a timeout loop.
        // TODO: Need a better heuristic for backgrounded work.

        var onTimeout = function () {
          frameDeadline = exports.unstable_now() + frameLength / 2;
          performWorkUntilDeadline();
          rAFTimeoutID = _setTimeout(onTimeout, frameLength * 3);
        };

        rAFTimeoutID = _setTimeout(onTimeout, frameLength * 3);

        if (prevRAFTime !== -1 && // Make sure this rAF time is different from the previous one. This check
        // could fail if two rAFs fire in the same frame.
        rAFTime - prevRAFTime > 0.1) {
          var rAFInterval = rAFTime - prevRAFTime;

          if (!fpsLocked && prevRAFInterval !== -1) {
            // We've observed two consecutive frame intervals. We'll use this to
            // dynamically adjust the frame rate.
            //
            // If one frame goes long, then the next one can be short to catch up.
            // If two frames are short in a row, then that's an indication that we
            // actually have a higher frame rate than what we're currently
            // optimizing. For example, if we're running on 120hz display or 90hz VR
            // display. Take the max of the two in case one of them was an anomaly
            // due to missed frame deadlines.
            if (rAFInterval < frameLength && prevRAFInterval < frameLength) {
              frameLength = rAFInterval < prevRAFInterval ? prevRAFInterval : rAFInterval;

              if (frameLength < 8.33) {
                // Defensive coding. We don't support higher frame rates than 120hz.
                // If the calculated frame length gets lower than 8, it is probably
                // a bug.
                frameLength = 8.33;
              }
            }
          }

          prevRAFInterval = rAFInterval;
        }

        prevRAFTime = rAFTime;
        frameDeadline = rAFTime + frameLength; // We use the postMessage trick to defer idle work until after the repaint.

        port.postMessage(null);
      };

      requestHostCallback = function (callback) {
        scheduledHostCallback = callback;

        if (enableMessageLoopImplementation) {
          if (!isMessageLoopRunning) {
            isMessageLoopRunning = true;
            port.postMessage(null);
          }
        } else {
          if (!isRAFLoopRunning) {
            // Start a rAF loop.
            isRAFLoopRunning = true;
            requestAnimationFrame(function (rAFTime) {
              onAnimationFrame(rAFTime);
            });
          }
        }
      };

      requestHostTimeout = function (callback, ms) {
        taskTimeoutID = _setTimeout(function () {
          callback(exports.unstable_now());
        }, ms);
      };

      cancelHostTimeout = function () {
        _clearTimeout(taskTimeoutID);

        taskTimeoutID = -1;
      };
    }

    function push(heap, node) {
      var index = heap.length;
      heap.push(node);
      siftUp(heap, node, index);
    }

    function peek(heap) {
      var first = heap[0];
      return first === undefined ? null : first;
    }

    function pop(heap) {
      var first = heap[0];

      if (first !== undefined) {
        var last = heap.pop();

        if (last !== first) {
          heap[0] = last;
          siftDown(heap, last, 0);
        }

        return first;
      } else {
        return null;
      }
    }

    function siftUp(heap, node, i) {
      var index = i;

      while (true) {
        var parentIndex = Math.floor((index - 1) / 2);
        var parent = heap[parentIndex];

        if (parent !== undefined && compare(parent, node) > 0) {
          // The parent is larger. Swap positions.
          heap[parentIndex] = node;
          heap[index] = parent;
          index = parentIndex;
        } else {
          // The parent is smaller. Exit.
          return;
        }
      }
    }

    function siftDown(heap, node, i) {
      var index = i;
      var length = heap.length;

      while (index < length) {
        var leftIndex = (index + 1) * 2 - 1;
        var left = heap[leftIndex];
        var rightIndex = leftIndex + 1;
        var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.

        if (left !== undefined && compare(left, node) < 0) {
          if (right !== undefined && compare(right, left) < 0) {
            heap[index] = right;
            heap[rightIndex] = node;
            index = rightIndex;
          } else {
            heap[index] = left;
            heap[leftIndex] = node;
            index = leftIndex;
          }
        } else if (right !== undefined && compare(right, node) < 0) {
          heap[index] = right;
          heap[rightIndex] = node;
          index = rightIndex;
        } else {
          // Neither child is smaller. Exit.
          return;
        }
      }
    }

    function compare(a, b) {
      // Compare sort index first, then task id.
      var diff = a.sortIndex - b.sortIndex;
      return diff !== 0 ? diff : a.id - b.id;
    } // TODO: Use symbols?


    var NoPriority = 0;
    var ImmediatePriority = 1;
    var UserBlockingPriority = 2;
    var NormalPriority = 3;
    var LowPriority = 4;
    var IdlePriority = 5;
    var runIdCounter = 0;
    var mainThreadIdCounter = 0;
    var profilingStateSize = 4;
    var sharedProfilingBuffer = enableProfiling ? // $FlowFixMe Flow doesn't know about SharedArrayBuffer
    typeof SharedArrayBuffer === 'function' ? new SharedArrayBuffer(profilingStateSize * Int32Array.BYTES_PER_ELEMENT) : // $FlowFixMe Flow doesn't know about ArrayBuffer
    typeof ArrayBuffer === 'function' ? new ArrayBuffer(profilingStateSize * Int32Array.BYTES_PER_ELEMENT) : null // Don't crash the init path on IE9
    : null;
    var profilingState = enableProfiling && sharedProfilingBuffer !== null ? new Int32Array(sharedProfilingBuffer) : []; // We can't read this but it helps save bytes for null checks

    var PRIORITY = 0;
    var CURRENT_TASK_ID = 1;
    var CURRENT_RUN_ID = 2;
    var QUEUE_SIZE = 3;

    if (enableProfiling) {
      profilingState[PRIORITY] = NoPriority; // This is maintained with a counter, because the size of the priority queue
      // array might include canceled tasks.

      profilingState[QUEUE_SIZE] = 0;
      profilingState[CURRENT_TASK_ID] = 0;
    } // Bytes per element is 4


    var INITIAL_EVENT_LOG_SIZE = 131072;
    var MAX_EVENT_LOG_SIZE = 524288; // Equivalent to 2 megabytes

    var eventLogSize = 0;
    var eventLogBuffer = null;
    var eventLog = null;
    var eventLogIndex = 0;
    var TaskStartEvent = 1;
    var TaskCompleteEvent = 2;
    var TaskErrorEvent = 3;
    var TaskCancelEvent = 4;
    var TaskRunEvent = 5;
    var TaskYieldEvent = 6;
    var SchedulerSuspendEvent = 7;
    var SchedulerResumeEvent = 8;

    function logEvent(entries) {
      if (eventLog !== null) {
        var offset = eventLogIndex;
        eventLogIndex += entries.length;

        if (eventLogIndex + 1 > eventLogSize) {
          eventLogSize *= 2;

          if (eventLogSize > MAX_EVENT_LOG_SIZE) {
            console.error("Scheduler Profiling: Event log exceeded maximum size. Don't " + 'forget to call `stopLoggingProfilingEvents()`.');
            stopLoggingProfilingEvents();
            return;
          }

          var newEventLog = new Int32Array(eventLogSize * 4);
          newEventLog.set(eventLog);
          eventLogBuffer = newEventLog.buffer;
          eventLog = newEventLog;
        }

        eventLog.set(entries, offset);
      }
    }

    function startLoggingProfilingEvents() {
      eventLogSize = INITIAL_EVENT_LOG_SIZE;
      eventLogBuffer = new ArrayBuffer(eventLogSize * 4);
      eventLog = new Int32Array(eventLogBuffer);
      eventLogIndex = 0;
    }

    function stopLoggingProfilingEvents() {
      var buffer = eventLogBuffer;
      eventLogSize = 0;
      eventLogBuffer = null;
      eventLog = null;
      eventLogIndex = 0;
      return buffer;
    }

    function markTaskStart(task, time) {
      if (enableProfiling) {
        profilingState[QUEUE_SIZE]++;

        if (eventLog !== null) {
          logEvent([TaskStartEvent, time, task.id, task.priorityLevel]);
        }
      }
    }

    function markTaskCompleted(task, time) {
      if (enableProfiling) {
        profilingState[PRIORITY] = NoPriority;
        profilingState[CURRENT_TASK_ID] = 0;
        profilingState[QUEUE_SIZE]--;

        if (eventLog !== null) {
          logEvent([TaskCompleteEvent, time, task.id]);
        }
      }
    }

    function markTaskCanceled(task, time) {
      if (enableProfiling) {
        profilingState[QUEUE_SIZE]--;

        if (eventLog !== null) {
          logEvent([TaskCancelEvent, time, task.id]);
        }
      }
    }

    function markTaskErrored(task, time) {
      if (enableProfiling) {
        profilingState[PRIORITY] = NoPriority;
        profilingState[CURRENT_TASK_ID] = 0;
        profilingState[QUEUE_SIZE]--;

        if (eventLog !== null) {
          logEvent([TaskErrorEvent, time, task.id]);
        }
      }
    }

    function markTaskRun(task, time) {
      if (enableProfiling) {
        runIdCounter++;
        profilingState[PRIORITY] = task.priorityLevel;
        profilingState[CURRENT_TASK_ID] = task.id;
        profilingState[CURRENT_RUN_ID] = runIdCounter;

        if (eventLog !== null) {
          logEvent([TaskRunEvent, time, task.id, runIdCounter]);
        }
      }
    }

    function markTaskYield(task, time) {
      if (enableProfiling) {
        profilingState[PRIORITY] = NoPriority;
        profilingState[CURRENT_TASK_ID] = 0;
        profilingState[CURRENT_RUN_ID] = 0;

        if (eventLog !== null) {
          logEvent([TaskYieldEvent, time, task.id, runIdCounter]);
        }
      }
    }

    function markSchedulerSuspended(time) {
      if (enableProfiling) {
        mainThreadIdCounter++;

        if (eventLog !== null) {
          logEvent([SchedulerSuspendEvent, time, mainThreadIdCounter]);
        }
      }
    }

    function markSchedulerUnsuspended(time) {
      if (enableProfiling) {
        if (eventLog !== null) {
          logEvent([SchedulerResumeEvent, time, mainThreadIdCounter]);
        }
      }
    }
    /* eslint-disable no-var */
    // Math.pow(2, 30) - 1
    // 0b111111111111111111111111111111


    var maxSigned31BitInt = 1073741823; // Times out immediately

    var IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out

    var USER_BLOCKING_PRIORITY = 250;
    var NORMAL_PRIORITY_TIMEOUT = 5000;
    var LOW_PRIORITY_TIMEOUT = 10000; // Never times out

    var IDLE_PRIORITY = maxSigned31BitInt; // Tasks are stored on a min heap

    var taskQueue = [];
    var timerQueue = []; // Incrementing id counter. Used to maintain insertion order.

    var taskIdCounter = 1; // Pausing the scheduler is useful for debugging.

    var isSchedulerPaused = false;
    var currentTask = null;
    var currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrancy.

    var isPerformingWork = false;
    var isHostCallbackScheduled = false;
    var isHostTimeoutScheduled = false;

    function advanceTimers(currentTime) {
      // Check for tasks that are no longer delayed and add them to the queue.
      var timer = peek(timerQueue);

      while (timer !== null) {
        if (timer.callback === null) {
          // Timer was cancelled.
          pop(timerQueue);
        } else if (timer.startTime <= currentTime) {
          // Timer fired. Transfer to the task queue.
          pop(timerQueue);
          timer.sortIndex = timer.expirationTime;
          push(taskQueue, timer);

          if (enableProfiling) {
            markTaskStart(timer, currentTime);
            timer.isQueued = true;
          }
        } else {
          // Remaining timers are pending.
          return;
        }

        timer = peek(timerQueue);
      }
    }

    function handleTimeout(currentTime) {
      isHostTimeoutScheduled = false;
      advanceTimers(currentTime);

      if (!isHostCallbackScheduled) {
        if (peek(taskQueue) !== null) {
          isHostCallbackScheduled = true;
          requestHostCallback(flushWork);
        } else {
          var firstTimer = peek(timerQueue);

          if (firstTimer !== null) {
            requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
          }
        }
      }
    }

    function flushWork(hasTimeRemaining, initialTime) {
      if (enableProfiling) {
        markSchedulerUnsuspended(initialTime);
      } // We'll need a host callback the next time work is scheduled.


      isHostCallbackScheduled = false;

      if (isHostTimeoutScheduled) {
        // We scheduled a timeout but it's no longer needed. Cancel it.
        isHostTimeoutScheduled = false;
        cancelHostTimeout();
      }

      isPerformingWork = true;
      var previousPriorityLevel = currentPriorityLevel;

      try {
        if (enableProfiling) {
          try {
            return workLoop(hasTimeRemaining, initialTime);
          } catch (error) {
            if (currentTask !== null) {
              var currentTime = exports.unstable_now();
              markTaskErrored(currentTask, currentTime);
              currentTask.isQueued = false;
            }

            throw error;
          }
        } else {
          // No catch in prod codepath.
          return workLoop(hasTimeRemaining, initialTime);
        }
      } finally {
        currentTask = null;
        currentPriorityLevel = previousPriorityLevel;
        isPerformingWork = false;

        if (enableProfiling) {
          var _currentTime = exports.unstable_now();

          markSchedulerSuspended(_currentTime);
        }
      }
    }

    function workLoop(hasTimeRemaining, initialTime) {
      var currentTime = initialTime;
      advanceTimers(currentTime);
      currentTask = peek(taskQueue);

      while (currentTask !== null && !(enableSchedulerDebugging && isSchedulerPaused)) {
        if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {
          // This currentTask hasn't expired, and we've reached the deadline.
          break;
        }

        var callback = currentTask.callback;

        if (callback !== null) {
          currentTask.callback = null;
          currentPriorityLevel = currentTask.priorityLevel;
          var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
          markTaskRun(currentTask, currentTime);
          var continuationCallback = callback(didUserCallbackTimeout);
          currentTime = exports.unstable_now();

          if (typeof continuationCallback === 'function') {
            currentTask.callback = continuationCallback;
            markTaskYield(currentTask, currentTime);
          } else {
            if (enableProfiling) {
              markTaskCompleted(currentTask, currentTime);
              currentTask.isQueued = false;
            }

            if (currentTask === peek(taskQueue)) {
              pop(taskQueue);
            }
          }

          advanceTimers(currentTime);
        } else {
          pop(taskQueue);
        }

        currentTask = peek(taskQueue);
      } // Return whether there's additional work


      if (currentTask !== null) {
        return true;
      } else {
        var firstTimer = peek(timerQueue);

        if (firstTimer !== null) {
          requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
        }

        return false;
      }
    }

    function unstable_runWithPriority(priorityLevel, eventHandler) {
      switch (priorityLevel) {
        case ImmediatePriority:
        case UserBlockingPriority:
        case NormalPriority:
        case LowPriority:
        case IdlePriority:
          break;

        default:
          priorityLevel = NormalPriority;
      }

      var previousPriorityLevel = currentPriorityLevel;
      currentPriorityLevel = priorityLevel;

      try {
        return eventHandler();
      } finally {
        currentPriorityLevel = previousPriorityLevel;
      }
    }

    function unstable_next(eventHandler) {
      var priorityLevel;

      switch (currentPriorityLevel) {
        case ImmediatePriority:
        case UserBlockingPriority:
        case NormalPriority:
          // Shift down to normal priority
          priorityLevel = NormalPriority;
          break;

        default:
          // Anything lower than normal priority should remain at the current level.
          priorityLevel = currentPriorityLevel;
          break;
      }

      var previousPriorityLevel = currentPriorityLevel;
      currentPriorityLevel = priorityLevel;

      try {
        return eventHandler();
      } finally {
        currentPriorityLevel = previousPriorityLevel;
      }
    }

    function unstable_wrapCallback(callback) {
      var parentPriorityLevel = currentPriorityLevel;
      return function () {
        // This is a fork of runWithPriority, inlined for performance.
        var previousPriorityLevel = currentPriorityLevel;
        currentPriorityLevel = parentPriorityLevel;

        try {
          return callback.apply(this, arguments);
        } finally {
          currentPriorityLevel = previousPriorityLevel;
        }
      };
    }

    function timeoutForPriorityLevel(priorityLevel) {
      switch (priorityLevel) {
        case ImmediatePriority:
          return IMMEDIATE_PRIORITY_TIMEOUT;

        case UserBlockingPriority:
          return USER_BLOCKING_PRIORITY;

        case IdlePriority:
          return IDLE_PRIORITY;

        case LowPriority:
          return LOW_PRIORITY_TIMEOUT;

        case NormalPriority:
        default:
          return NORMAL_PRIORITY_TIMEOUT;
      }
    }

    function unstable_scheduleCallback(priorityLevel, callback, options) {
      var currentTime = exports.unstable_now();
      var startTime;
      var timeout;

      if (typeof options === 'object' && options !== null) {
        var delay = options.delay;

        if (typeof delay === 'number' && delay > 0) {
          startTime = currentTime + delay;
        } else {
          startTime = currentTime;
        }

        timeout = typeof options.timeout === 'number' ? options.timeout : timeoutForPriorityLevel(priorityLevel);
      } else {
        timeout = timeoutForPriorityLevel(priorityLevel);
        startTime = currentTime;
      }

      var expirationTime = startTime + timeout;
      var newTask = {
        id: taskIdCounter++,
        callback: callback,
        priorityLevel: priorityLevel,
        startTime: startTime,
        expirationTime: expirationTime,
        sortIndex: -1
      };

      if (enableProfiling) {
        newTask.isQueued = false;
      }

      if (startTime > currentTime) {
        // This is a delayed task.
        newTask.sortIndex = startTime;
        push(timerQueue, newTask);

        if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
          // All tasks are delayed, and this is the task with the earliest delay.
          if (isHostTimeoutScheduled) {
            // Cancel an existing timeout.
            cancelHostTimeout();
          } else {
            isHostTimeoutScheduled = true;
          } // Schedule a timeout.


          requestHostTimeout(handleTimeout, startTime - currentTime);
        }
      } else {
        newTask.sortIndex = expirationTime;
        push(taskQueue, newTask);

        if (enableProfiling) {
          markTaskStart(newTask, currentTime);
          newTask.isQueued = true;
        } // Schedule a host callback, if needed. If we're already performing work,
        // wait until the next time we yield.


        if (!isHostCallbackScheduled && !isPerformingWork) {
          isHostCallbackScheduled = true;
          requestHostCallback(flushWork);
        }
      }

      return newTask;
    }

    function unstable_pauseExecution() {
      isSchedulerPaused = true;
    }

    function unstable_continueExecution() {
      isSchedulerPaused = false;

      if (!isHostCallbackScheduled && !isPerformingWork) {
        isHostCallbackScheduled = true;
        requestHostCallback(flushWork);
      }
    }

    function unstable_getFirstCallbackNode() {
      return peek(taskQueue);
    }

    function unstable_cancelCallback(task) {
      if (enableProfiling) {
        if (task.isQueued) {
          var currentTime = exports.unstable_now();
          markTaskCanceled(task, currentTime);
          task.isQueued = false;
        }
      } // Null out the callback to indicate the task has been canceled. (Can't
      // remove from the queue because you can't remove arbitrary nodes from an
      // array based heap, only the first one.)


      task.callback = null;
    }

    function unstable_getCurrentPriorityLevel() {
      return currentPriorityLevel;
    }

    function unstable_shouldYield() {
      var currentTime = exports.unstable_now();
      advanceTimers(currentTime);
      var firstTask = peek(taskQueue);
      return firstTask !== currentTask && currentTask !== null && firstTask !== null && firstTask.callback !== null && firstTask.startTime <= currentTime && firstTask.expirationTime < currentTask.expirationTime || shouldYieldToHost();
    }

    var unstable_requestPaint = requestPaint;
    var unstable_Profiling = enableProfiling ? {
      startLoggingProfilingEvents: startLoggingProfilingEvents,
      stopLoggingProfilingEvents: stopLoggingProfilingEvents,
      sharedProfilingBuffer: sharedProfilingBuffer
    } : null;
    exports.unstable_ImmediatePriority = ImmediatePriority;
    exports.unstable_UserBlockingPriority = UserBlockingPriority;
    exports.unstable_NormalPriority = NormalPriority;
    exports.unstable_IdlePriority = IdlePriority;
    exports.unstable_LowPriority = LowPriority;
    exports.unstable_runWithPriority = unstable_runWithPriority;
    exports.unstable_next = unstable_next;
    exports.unstable_scheduleCallback = unstable_scheduleCallback;
    exports.unstable_cancelCallback = unstable_cancelCallback;
    exports.unstable_wrapCallback = unstable_wrapCallback;
    exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
    exports.unstable_shouldYield = unstable_shouldYield;
    exports.unstable_requestPaint = unstable_requestPaint;
    exports.unstable_continueExecution = unstable_continueExecution;
    exports.unstable_pauseExecution = unstable_pauseExecution;
    exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
    exports.unstable_Profiling = unstable_Profiling;
  })();
}
},{}],"../node_modules/scheduler/index.js":[function(require,module,exports) {
'use strict';

if ("development" === 'production') {
  module.exports = require('./cjs/scheduler.production.min.js');
} else {
  module.exports = require('./cjs/scheduler.development.js');
}
},{"./cjs/scheduler.development.js":"../node_modules/scheduler/cjs/scheduler.development.js"}],"../node_modules/scheduler/cjs/scheduler-tracing.development.js":[function(require,module,exports) {
/** @license React v0.16.2
 * scheduler-tracing.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
'use strict';

if ("development" !== "production") {
  (function () {
    'use strict';

    Object.defineProperty(exports, '__esModule', {
      value: true
    }); // Helps identify side effects in begin-phase lifecycle hooks and setState reducers:
    // In some cases, StrictMode should also double-render lifecycles.
    // This can be confusing for tests though,
    // And it can be bad for performance in production.
    // This feature flag can be used to control the behavior:
    // To preserve the "Pause on caught exceptions" behavior of the debugger, we
    // replay the begin phase of a failed component inside invokeGuardedCallback.
    // Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:
    // Gather advanced timing metrics for Profiler subtrees.
    // Trace which interactions trigger each commit.

    var enableSchedulerTracing = true; // Only used in www builds.
    // TODO: true? Here it might just be false.
    // Only used in www builds.
    // Only used in www builds.
    // Disable javascript: URL strings in href for XSS protection.
    // React Fire: prevent the value and checked attributes from syncing
    // with their related DOM properties
    // These APIs will no longer be "unstable" in the upcoming 16.7 release,
    // Control this behavior with a flag to support 16.6 minor releases in the meanwhile.
    // See https://github.com/react-native-community/discussions-and-proposals/issues/72 for more information
    // This is a flag so we can fix warnings in RN core before turning it on
    // Experimental React Flare event system and event components support.
    // Experimental Host Component support.
    // Experimental Scope support.
    // New API for JSX transforms to target - https://github.com/reactjs/rfcs/pull/107
    // We will enforce mocking scheduler with scheduler/unstable_mock at some point. (v17?)
    // Till then, we warn about the missing mock, but still fallback to a sync mode compatible version
    // For tests, we flush suspense fallbacks in an act scope;
    // *except* in some of our own tests, where we test incremental loading states.
    // Changes priority of some events like mousemove to user-blocking priority,
    // but without making them discrete. The flag exists in case it causes
    // starvation problems.
    // Add a callback property to suspense to notify which promises are currently
    // in the update queue. This allows reporting and tracing of what is causing
    // the user to see a loading state.
    // Also allows hydration callbacks to fire when a dehydrated boundary gets
    // hydrated or deleted.
    // Part of the simplification of React.createElement so we can eventually move
    // from React.createElement to React.jsx
    // https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md

    var DEFAULT_THREAD_ID = 0; // Counters used to generate unique IDs.

    var interactionIDCounter = 0;
    var threadIDCounter = 0; // Set of currently traced interactions.
    // Interactions "stack"–
    // Meaning that newly traced interactions are appended to the previously active set.
    // When an interaction goes out of scope, the previous set (if any) is restored.

    exports.__interactionsRef = null; // Listener(s) to notify when interactions begin and end.

    exports.__subscriberRef = null;

    if (enableSchedulerTracing) {
      exports.__interactionsRef = {
        current: new Set()
      };
      exports.__subscriberRef = {
        current: null
      };
    }

    function unstable_clear(callback) {
      if (!enableSchedulerTracing) {
        return callback();
      }

      var prevInteractions = exports.__interactionsRef.current;
      exports.__interactionsRef.current = new Set();

      try {
        return callback();
      } finally {
        exports.__interactionsRef.current = prevInteractions;
      }
    }

    function unstable_getCurrent() {
      if (!enableSchedulerTracing) {
        return null;
      } else {
        return exports.__interactionsRef.current;
      }
    }

    function unstable_getThreadID() {
      return ++threadIDCounter;
    }

    function unstable_trace(name, timestamp, callback) {
      var threadID = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DEFAULT_THREAD_ID;

      if (!enableSchedulerTracing) {
        return callback();
      }

      var interaction = {
        __count: 1,
        id: interactionIDCounter++,
        name: name,
        timestamp: timestamp
      };
      var prevInteractions = exports.__interactionsRef.current; // Traced interactions should stack/accumulate.
      // To do that, clone the current interactions.
      // The previous set will be restored upon completion.

      var interactions = new Set(prevInteractions);
      interactions.add(interaction);
      exports.__interactionsRef.current = interactions;
      var subscriber = exports.__subscriberRef.current;
      var returnValue;

      try {
        if (subscriber !== null) {
          subscriber.onInteractionTraced(interaction);
        }
      } finally {
        try {
          if (subscriber !== null) {
            subscriber.onWorkStarted(interactions, threadID);
          }
        } finally {
          try {
            returnValue = callback();
          } finally {
            exports.__interactionsRef.current = prevInteractions;

            try {
              if (subscriber !== null) {
                subscriber.onWorkStopped(interactions, threadID);
              }
            } finally {
              interaction.__count--; // If no async work was scheduled for this interaction,
              // Notify subscribers that it's completed.

              if (subscriber !== null && interaction.__count === 0) {
                subscriber.onInteractionScheduledWorkCompleted(interaction);
              }
            }
          }
        }
      }

      return returnValue;
    }

    function unstable_wrap(callback) {
      var threadID = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_THREAD_ID;

      if (!enableSchedulerTracing) {
        return callback;
      }

      var wrappedInteractions = exports.__interactionsRef.current;
      var subscriber = exports.__subscriberRef.current;

      if (subscriber !== null) {
        subscriber.onWorkScheduled(wrappedInteractions, threadID);
      } // Update the pending async work count for the current interactions.
      // Update after calling subscribers in case of error.


      wrappedInteractions.forEach(function (interaction) {
        interaction.__count++;
      });
      var hasRun = false;

      function wrapped() {
        var prevInteractions = exports.__interactionsRef.current;
        exports.__interactionsRef.current = wrappedInteractions;
        subscriber = exports.__subscriberRef.current;

        try {
          var returnValue;

          try {
            if (subscriber !== null) {
              subscriber.onWorkStarted(wrappedInteractions, threadID);
            }
          } finally {
            try {
              returnValue = callback.apply(undefined, arguments);
            } finally {
              exports.__interactionsRef.current = prevInteractions;

              if (subscriber !== null) {
                subscriber.onWorkStopped(wrappedInteractions, threadID);
              }
            }
          }

          return returnValue;
        } finally {
          if (!hasRun) {
            // We only expect a wrapped function to be executed once,
            // But in the event that it's executed more than once–
            // Only decrement the outstanding interaction counts once.
            hasRun = true; // Update pending async counts for all wrapped interactions.
            // If this was the last scheduled async work for any of them,
            // Mark them as completed.

            wrappedInteractions.forEach(function (interaction) {
              interaction.__count--;

              if (subscriber !== null && interaction.__count === 0) {
                subscriber.onInteractionScheduledWorkCompleted(interaction);
              }
            });
          }
        }
      }

      wrapped.cancel = function cancel() {
        subscriber = exports.__subscriberRef.current;

        try {
          if (subscriber !== null) {
            subscriber.onWorkCanceled(wrappedInteractions, threadID);
          }
        } finally {
          // Update pending async counts for all wrapped interactions.
          // If this was the last scheduled async work for any of them,
          // Mark them as completed.
          wrappedInteractions.forEach(function (interaction) {
            interaction.__count--;

            if (subscriber && interaction.__count === 0) {
              subscriber.onInteractionScheduledWorkCompleted(interaction);
            }
          });
        }
      };

      return wrapped;
    }

    var subscribers = null;

    if (enableSchedulerTracing) {
      subscribers = new Set();
    }

    function unstable_subscribe(subscriber) {
      if (enableSchedulerTracing) {
        subscribers.add(subscriber);

        if (subscribers.size === 1) {
          exports.__subscriberRef.current = {
            onInteractionScheduledWorkCompleted: onInteractionScheduledWorkCompleted,
            onInteractionTraced: onInteractionTraced,
            onWorkCanceled: onWorkCanceled,
            onWorkScheduled: onWorkScheduled,
            onWorkStarted: onWorkStarted,
            onWorkStopped: onWorkStopped
          };
        }
      }
    }

    function unstable_unsubscribe(subscriber) {
      if (enableSchedulerTracing) {
        subscribers.delete(subscriber);

        if (subscribers.size === 0) {
          exports.__subscriberRef.current = null;
        }
      }
    }

    function onInteractionTraced(interaction) {
      var didCatchError = false;
      var caughtError = null;
      subscribers.forEach(function (subscriber) {
        try {
          subscriber.onInteractionTraced(interaction);
        } catch (error) {
          if (!didCatchError) {
            didCatchError = true;
            caughtError = error;
          }
        }
      });

      if (didCatchError) {
        throw caughtError;
      }
    }

    function onInteractionScheduledWorkCompleted(interaction) {
      var didCatchError = false;
      var caughtError = null;
      subscribers.forEach(function (subscriber) {
        try {
          subscriber.onInteractionScheduledWorkCompleted(interaction);
        } catch (error) {
          if (!didCatchError) {
            didCatchError = true;
            caughtError = error;
          }
        }
      });

      if (didCatchError) {
        throw caughtError;
      }
    }

    function onWorkScheduled(interactions, threadID) {
      var didCatchError = false;
      var caughtError = null;
      subscribers.forEach(function (subscriber) {
        try {
          subscriber.onWorkScheduled(interactions, threadID);
        } catch (error) {
          if (!didCatchError) {
            didCatchError = true;
            caughtError = error;
          }
        }
      });

      if (didCatchError) {
        throw caughtError;
      }
    }

    function onWorkStarted(interactions, threadID) {
      var didCatchError = false;
      var caughtError = null;
      subscribers.forEach(function (subscriber) {
        try {
          subscriber.onWorkStarted(interactions, threadID);
        } catch (error) {
          if (!didCatchError) {
            didCatchError = true;
            caughtError = error;
          }
        }
      });

      if (didCatchError) {
        throw caughtError;
      }
    }

    function onWorkStopped(interactions, threadID) {
      var didCatchError = false;
      var caughtError = null;
      subscribers.forEach(function (subscriber) {
        try {
          subscriber.onWorkStopped(interactions, threadID);
        } catch (error) {
          if (!didCatchError) {
            didCatchError = true;
            caughtError = error;
          }
        }
      });

      if (didCatchError) {
        throw caughtError;
      }
    }

    function onWorkCanceled(interactions, threadID) {
      var didCatchError = false;
      var caughtError = null;
      subscribers.forEach(function (subscriber) {
        try {
          subscriber.onWorkCanceled(interactions, threadID);
        } catch (error) {
          if (!didCatchError) {
            didCatchError = true;
            caughtError = error;
          }
        }
      });

      if (didCatchError) {
        throw caughtError;
      }
    }

    exports.unstable_clear = unstable_clear;
    exports.unstable_getCurrent = unstable_getCurrent;
    exports.unstable_getThreadID = unstable_getThreadID;
    exports.unstable_trace = unstable_trace;
    exports.unstable_wrap = unstable_wrap;
    exports.unstable_subscribe = unstable_subscribe;
    exports.unstable_unsubscribe = unstable_unsubscribe;
  })();
}
},{}],"../node_modules/scheduler/tracing.js":[function(require,module,exports) {
'use strict';

if ("development" === 'production') {
  module.exports = require('./cjs/scheduler-tracing.production.min.js');
} else {
  module.exports = require('./cjs/scheduler-tracing.development.js');
}
},{"./cjs/scheduler-tracing.development.js":"../node_modules/scheduler/cjs/scheduler-tracing.development.js"}],"../node_modules/react-dom/cjs/react-dom.development.js":[function(require,module,exports) {
/** @license React v16.10.2
 * react-dom.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
'use strict';

if ("development" !== "production") {
  (function () {
    'use strict';

    var React = require('react');

    var _assign = require('object-assign');

    var Scheduler = require('scheduler');

    var checkPropTypes = require('prop-types/checkPropTypes');

    var tracing = require('scheduler/tracing'); // Do not require this module directly! Use normal `invariant` calls with
    // template literal strings. The messages will be converted to ReactError during
    // build, and in production they will be minified.
    // Do not require this module directly! Use normal `invariant` calls with
    // template literal strings. The messages will be converted to ReactError during
    // build, and in production they will be minified.


    function ReactError(error) {
      error.name = 'Invariant Violation';
      return error;
    }
    /**
     * Use invariant() to assert state which your program assumes to be true.
     *
     * Provide sprintf-style format (only %s is supported) and arguments
     * to provide information about what broke and what you were
     * expecting.
     *
     * The invariant message will be stripped in production, but the invariant
     * will remain to ensure logic does not differ in production.
     */


    (function () {
      if (!React) {
        {
          throw ReactError(Error("ReactDOM was loaded before React. Make sure you load the React package before loading ReactDOM."));
        }
      }
    })();
    /**
     * Injectable ordering of event plugins.
     */


    var eventPluginOrder = null;
    /**
     * Injectable mapping from names to event plugin modules.
     */

    var namesToPlugins = {};
    /**
     * Recomputes the plugin list using the injected plugins and plugin ordering.
     *
     * @private
     */

    function recomputePluginOrdering() {
      if (!eventPluginOrder) {
        // Wait until an `eventPluginOrder` is injected.
        return;
      }

      for (var pluginName in namesToPlugins) {
        var pluginModule = namesToPlugins[pluginName];
        var pluginIndex = eventPluginOrder.indexOf(pluginName);

        (function () {
          if (!(pluginIndex > -1)) {
            {
              throw ReactError(Error("EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `" + pluginName + "`."));
            }
          }
        })();

        if (plugins[pluginIndex]) {
          continue;
        }

        (function () {
          if (!pluginModule.extractEvents) {
            {
              throw ReactError(Error("EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `" + pluginName + "` does not."));
            }
          }
        })();

        plugins[pluginIndex] = pluginModule;
        var publishedEvents = pluginModule.eventTypes;

        for (var eventName in publishedEvents) {
          (function () {
            if (!publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName)) {
              {
                throw ReactError(Error("EventPluginRegistry: Failed to publish event `" + eventName + "` for plugin `" + pluginName + "`."));
              }
            }
          })();
        }
      }
    }
    /**
     * Publishes an event so that it can be dispatched by the supplied plugin.
     *
     * @param {object} dispatchConfig Dispatch configuration for the event.
     * @param {object} PluginModule Plugin publishing the event.
     * @return {boolean} True if the event was successfully published.
     * @private
     */


    function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
      (function () {
        if (!!eventNameDispatchConfigs.hasOwnProperty(eventName)) {
          {
            throw ReactError(Error("EventPluginHub: More than one plugin attempted to publish the same event name, `" + eventName + "`."));
          }
        }
      })();

      eventNameDispatchConfigs[eventName] = dispatchConfig;
      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

      if (phasedRegistrationNames) {
        for (var phaseName in phasedRegistrationNames) {
          if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
            var phasedRegistrationName = phasedRegistrationNames[phaseName];
            publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
          }
        }

        return true;
      } else if (dispatchConfig.registrationName) {
        publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
        return true;
      }

      return false;
    }
    /**
     * Publishes a registration name that is used to identify dispatched events.
     *
     * @param {string} registrationName Registration name to add.
     * @param {object} PluginModule Plugin publishing the event.
     * @private
     */


    function publishRegistrationName(registrationName, pluginModule, eventName) {
      (function () {
        if (!!registrationNameModules[registrationName]) {
          {
            throw ReactError(Error("EventPluginHub: More than one plugin attempted to publish the same registration name, `" + registrationName + "`."));
          }
        }
      })();

      registrationNameModules[registrationName] = pluginModule;
      registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;
      {
        var lowerCasedName = registrationName.toLowerCase();
        possibleRegistrationNames[lowerCasedName] = registrationName;

        if (registrationName === 'onDoubleClick') {
          possibleRegistrationNames.ondblclick = registrationName;
        }
      }
    }
    /**
     * Registers plugins so that they can extract and dispatch events.
     *
     * @see {EventPluginHub}
     */

    /**
     * Ordered list of injected plugins.
     */


    var plugins = [];
    /**
     * Mapping from event name to dispatch config
     */

    var eventNameDispatchConfigs = {};
    /**
     * Mapping from registration name to plugin module
     */

    var registrationNameModules = {};
    /**
     * Mapping from registration name to event name
     */

    var registrationNameDependencies = {};
    /**
     * Mapping from lowercase registration names to the properly cased version,
     * used to warn in the case of missing event handlers. Available
     * only in true.
     * @type {Object}
     */

    var possibleRegistrationNames = {}; // Trust the developer to only use possibleRegistrationNames in true

    /**
     * Injects an ordering of plugins (by plugin name). This allows the ordering
     * to be decoupled from injection of the actual plugins so that ordering is
     * always deterministic regardless of packaging, on-the-fly injection, etc.
     *
     * @param {array} InjectedEventPluginOrder
     * @internal
     * @see {EventPluginHub.injection.injectEventPluginOrder}
     */

    function injectEventPluginOrder(injectedEventPluginOrder) {
      (function () {
        if (!!eventPluginOrder) {
          {
            throw ReactError(Error("EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React."));
          }
        }
      })(); // Clone the ordering so it cannot be dynamically mutated.


      eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
      recomputePluginOrdering();
    }
    /**
     * Injects plugins to be used by `EventPluginHub`. The plugin names must be
     * in the ordering injected by `injectEventPluginOrder`.
     *
     * Plugins can be injected as part of page initialization or on-the-fly.
     *
     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
     * @internal
     * @see {EventPluginHub.injection.injectEventPluginsByName}
     */


    function injectEventPluginsByName(injectedNamesToPlugins) {
      var isOrderingDirty = false;

      for (var pluginName in injectedNamesToPlugins) {
        if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
          continue;
        }

        var pluginModule = injectedNamesToPlugins[pluginName];

        if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
          (function () {
            if (!!namesToPlugins[pluginName]) {
              {
                throw ReactError(Error("EventPluginRegistry: Cannot inject two different event plugins using the same name, `" + pluginName + "`."));
              }
            }
          })();

          namesToPlugins[pluginName] = pluginModule;
          isOrderingDirty = true;
        }
      }

      if (isOrderingDirty) {
        recomputePluginOrdering();
      }
    }

    var invokeGuardedCallbackImpl = function (name, func, context, a, b, c, d, e, f) {
      var funcArgs = Array.prototype.slice.call(arguments, 3);

      try {
        func.apply(context, funcArgs);
      } catch (error) {
        this.onError(error);
      }
    };

    {
      // In DEV mode, we swap out invokeGuardedCallback for a special version
      // that plays more nicely with the browser's DevTools. The idea is to preserve
      // "Pause on exceptions" behavior. Because React wraps all user-provided
      // functions in invokeGuardedCallback, and the production version of
      // invokeGuardedCallback uses a try-catch, all user exceptions are treated
      // like caught exceptions, and the DevTools won't pause unless the developer
      // takes the extra step of enabling pause on caught exceptions. This is
      // unintuitive, though, because even though React has caught the error, from
      // the developer's perspective, the error is uncaught.
      //
      // To preserve the expected "Pause on exceptions" behavior, we don't use a
      // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
      // DOM node, and call the user-provided callback from inside an event handler
      // for that fake event. If the callback throws, the error is "captured" using
      // a global event handler. But because the error happens in a different
      // event loop context, it does not interrupt the normal program flow.
      // Effectively, this gives us try-catch behavior without actually using
      // try-catch. Neat!
      // Check that the browser supports the APIs we need to implement our special
      // DEV version of invokeGuardedCallback
      if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
        var fakeNode = document.createElement('react');

        var invokeGuardedCallbackDev = function (name, func, context, a, b, c, d, e, f) {
          // If document doesn't exist we know for sure we will crash in this method
          // when we call document.createEvent(). However this can cause confusing
          // errors: https://github.com/facebookincubator/create-react-app/issues/3482
          // So we preemptively throw with a better message instead.
          (function () {
            if (!(typeof document !== 'undefined')) {
              {
                throw ReactError(Error("The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous."));
              }
            }
          })();

          var evt = document.createEvent('Event'); // Keeps track of whether the user-provided callback threw an error. We
          // set this to true at the beginning, then set it to false right after
          // calling the function. If the function errors, `didError` will never be
          // set to false. This strategy works even if the browser is flaky and
          // fails to call our global error handler, because it doesn't rely on
          // the error event at all.

          var didError = true; // Keeps track of the value of window.event so that we can reset it
          // during the callback to let user code access window.event in the
          // browsers that support it.

          var windowEvent = window.event; // Keeps track of the descriptor of window.event to restore it after event
          // dispatching: https://github.com/facebook/react/issues/13688

          var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, 'event'); // Create an event handler for our fake event. We will synchronously
          // dispatch our fake event using `dispatchEvent`. Inside the handler, we
          // call the user-provided callback.

          var funcArgs = Array.prototype.slice.call(arguments, 3);

          function callCallback() {
            // We immediately remove the callback from event listeners so that
            // nested `invokeGuardedCallback` calls do not clash. Otherwise, a
            // nested call would trigger the fake event handlers of any call higher
            // in the stack.
            fakeNode.removeEventListener(evtType, callCallback, false); // We check for window.hasOwnProperty('event') to prevent the
            // window.event assignment in both IE <= 10 as they throw an error
            // "Member not found" in strict mode, and in Firefox which does not
            // support window.event.

            if (typeof window.event !== 'undefined' && window.hasOwnProperty('event')) {
              window.event = windowEvent;
            }

            func.apply(context, funcArgs);
            didError = false;
          } // Create a global error event handler. We use this to capture the value
          // that was thrown. It's possible that this error handler will fire more
          // than once; for example, if non-React code also calls `dispatchEvent`
          // and a handler for that event throws. We should be resilient to most of
          // those cases. Even if our error event handler fires more than once, the
          // last error event is always used. If the callback actually does error,
          // we know that the last error event is the correct one, because it's not
          // possible for anything else to have happened in between our callback
          // erroring and the code that follows the `dispatchEvent` call below. If
          // the callback doesn't error, but the error event was fired, we know to
          // ignore it because `didError` will be false, as described above.


          var error; // Use this to track whether the error event is ever called.

          var didSetError = false;
          var isCrossOriginError = false;

          function handleWindowError(event) {
            error = event.error;
            didSetError = true;

            if (error === null && event.colno === 0 && event.lineno === 0) {
              isCrossOriginError = true;
            }

            if (event.defaultPrevented) {
              // Some other error handler has prevented default.
              // Browsers silence the error report if this happens.
              // We'll remember this to later decide whether to log it or not.
              if (error != null && typeof error === 'object') {
                try {
                  error._suppressLogging = true;
                } catch (inner) {// Ignore.
                }
              }
            }
          } // Create a fake event type.


          var evtType = "react-" + (name ? name : 'invokeguardedcallback'); // Attach our event handlers

          window.addEventListener('error', handleWindowError);
          fakeNode.addEventListener(evtType, callCallback, false); // Synchronously dispatch our fake event. If the user-provided function
          // errors, it will trigger our global error handler.

          evt.initEvent(evtType, false, false);
          fakeNode.dispatchEvent(evt);

          if (windowEventDescriptor) {
            Object.defineProperty(window, 'event', windowEventDescriptor);
          }

          if (didError) {
            if (!didSetError) {
              // The callback errored, but the error event never fired.
              error = new Error('An error was thrown inside one of your components, but React ' + "doesn't know what it was. This is likely due to browser " + 'flakiness. React does its best to preserve the "Pause on ' + 'exceptions" behavior of the DevTools, which requires some ' + "DEV-mode only tricks. It's possible that these don't work in " + 'your browser. Try triggering the error in production mode, ' + 'or switching to a modern browser. If you suspect that this is ' + 'actually an issue with React, please file an issue.');
            } else if (isCrossOriginError) {
              error = new Error("A cross-origin error was thrown. React doesn't have access to " + 'the actual error object in development. ' + 'See https://fb.me/react-crossorigin-error for more information.');
            }

            this.onError(error);
          } // Remove our event listeners


          window.removeEventListener('error', handleWindowError);
        };

        invokeGuardedCallbackImpl = invokeGuardedCallbackDev;
      }
    }
    var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;
    var hasError = false;
    var caughtError = null; // Used by event system to capture/rethrow the first error.

    var hasRethrowError = false;
    var rethrowError = null;
    var reporter = {
      onError: function (error) {
        hasError = true;
        caughtError = error;
      }
    };
    /**
     * Call a function while guarding against errors that happens within it.
     * Returns an error if it throws, otherwise null.
     *
     * In production, this is implemented using a try-catch. The reason we don't
     * use a try-catch directly is so that we can swap out a different
     * implementation in DEV mode.
     *
     * @param {String} name of the guard to use for logging or debugging
     * @param {Function} func The function to invoke
     * @param {*} context The context to use when calling the function
     * @param {...*} args Arguments for function
     */

    function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
      hasError = false;
      caughtError = null;
      invokeGuardedCallbackImpl$1.apply(reporter, arguments);
    }
    /**
     * Same as invokeGuardedCallback, but instead of returning an error, it stores
     * it in a global so it can be rethrown by `rethrowCaughtError` later.
     * TODO: See if caughtError and rethrowError can be unified.
     *
     * @param {String} name of the guard to use for logging or debugging
     * @param {Function} func The function to invoke
     * @param {*} context The context to use when calling the function
     * @param {...*} args Arguments for function
     */


    function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
      invokeGuardedCallback.apply(this, arguments);

      if (hasError) {
        var error = clearCaughtError();

        if (!hasRethrowError) {
          hasRethrowError = true;
          rethrowError = error;
        }
      }
    }
    /**
     * During execution of guarded functions we will capture the first error which
     * we will rethrow to be handled by the top level error handler.
     */


    function rethrowCaughtError() {
      if (hasRethrowError) {
        var error = rethrowError;
        hasRethrowError = false;
        rethrowError = null;
        throw error;
      }
    }

    function hasCaughtError() {
      return hasError;
    }

    function clearCaughtError() {
      if (hasError) {
        var error = caughtError;
        hasError = false;
        caughtError = null;
        return error;
      } else {
        (function () {
          {
            {
              throw ReactError(Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue."));
            }
          }
        })();
      }
    }
    /**
     * Similar to invariant but only logs a warning if the condition is not met.
     * This can be used to log issues in development environments in critical
     * paths. Removing the logging code for production environments will keep the
     * same logic and follow the same code paths.
     */


    var warningWithoutStack = function () {};

    {
      warningWithoutStack = function (condition, format) {
        for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
          args[_key - 2] = arguments[_key];
        }

        if (format === undefined) {
          throw new Error('`warningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');
        }

        if (args.length > 8) {
          // Check before the condition to catch violations early.
          throw new Error('warningWithoutStack() currently supports at most 8 arguments.');
        }

        if (condition) {
          return;
        }

        if (typeof console !== 'undefined') {
          var argsWithFormat = args.map(function (item) {
            return '' + item;
          });
          argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
          // breaks IE9: https://github.com/facebook/react/issues/13610

          Function.prototype.apply.call(console.error, console, argsWithFormat);
        }

        try {
          // --- Welcome to debugging React ---
          // This error was thrown as a convenience so that you can use this stack
          // to find the callsite that caused this warning to fire.
          var argIndex = 0;
          var message = 'Warning: ' + format.replace(/%s/g, function () {
            return args[argIndex++];
          });
          throw new Error(message);
        } catch (x) {}
      };
    }
    var warningWithoutStack$1 = warningWithoutStack;
    var getFiberCurrentPropsFromNode = null;
    var getInstanceFromNode = null;
    var getNodeFromInstance = null;

    function setComponentTree(getFiberCurrentPropsFromNodeImpl, getInstanceFromNodeImpl, getNodeFromInstanceImpl) {
      getFiberCurrentPropsFromNode = getFiberCurrentPropsFromNodeImpl;
      getInstanceFromNode = getInstanceFromNodeImpl;
      getNodeFromInstance = getNodeFromInstanceImpl;
      {
        !(getNodeFromInstance && getInstanceFromNode) ? warningWithoutStack$1(false, 'EventPluginUtils.setComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
      }
    }

    var validateEventDispatches;
    {
      validateEventDispatches = function (event) {
        var dispatchListeners = event._dispatchListeners;
        var dispatchInstances = event._dispatchInstances;
        var listenersIsArr = Array.isArray(dispatchListeners);
        var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;
        var instancesIsArr = Array.isArray(dispatchInstances);
        var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;
        !(instancesIsArr === listenersIsArr && instancesLen === listenersLen) ? warningWithoutStack$1(false, 'EventPluginUtils: Invalid `event`.') : void 0;
      };
    }
    /**
     * Dispatch the event to the listener.
     * @param {SyntheticEvent} event SyntheticEvent to handle
     * @param {function} listener Application-level callback
     * @param {*} inst Internal component instance
     */

    function executeDispatch(event, listener, inst) {
      var type = event.type || 'unknown-event';
      event.currentTarget = getNodeFromInstance(inst);
      invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
      event.currentTarget = null;
    }
    /**
     * Standard/simple iteration through an event's collected dispatches.
     */


    function executeDispatchesInOrder(event) {
      var dispatchListeners = event._dispatchListeners;
      var dispatchInstances = event._dispatchInstances;
      {
        validateEventDispatches(event);
      }

      if (Array.isArray(dispatchListeners)) {
        for (var i = 0; i < dispatchListeners.length; i++) {
          if (event.isPropagationStopped()) {
            break;
          } // Listeners and Instances are two parallel arrays that are always in sync.


          executeDispatch(event, dispatchListeners[i], dispatchInstances[i]);
        }
      } else if (dispatchListeners) {
        executeDispatch(event, dispatchListeners, dispatchInstances);
      }

      event._dispatchListeners = null;
      event._dispatchInstances = null;
    }
    /**
     * @see executeDispatchesInOrderStopAtTrueImpl
     */

    /**
     * Execution of a "direct" dispatch - there must be at most one dispatch
     * accumulated on the event or it is considered an error. It doesn't really make
     * sense for an event with multiple dispatches (bubbled) to keep track of the
     * return values at each dispatch execution, but it does tend to make sense when
     * dealing with "direct" dispatches.
     *
     * @return {*} The return value of executing the single dispatch.
     */

    /**
     * @param {SyntheticEvent} event
     * @return {boolean} True iff number of dispatches accumulated is greater than 0.
     */

    /**
     * Accumulates items that must not be null or undefined into the first one. This
     * is used to conserve memory by avoiding array allocations, and thus sacrifices
     * API cleanness. Since `current` can be null before being passed in and not
     * null after this function, make sure to assign it back to `current`:
     *
     * `a = accumulateInto(a, b);`
     *
     * This API should be sparingly used. Try `accumulate` for something cleaner.
     *
     * @return {*|array<*>} An accumulation of items.
     */


    function accumulateInto(current, next) {
      (function () {
        if (!(next != null)) {
          {
            throw ReactError(Error("accumulateInto(...): Accumulated items must not be null or undefined."));
          }
        }
      })();

      if (current == null) {
        return next;
      } // Both are not empty. Warning: Never call x.concat(y) when you are not
      // certain that x is an Array (x could be a string with concat method).


      if (Array.isArray(current)) {
        if (Array.isArray(next)) {
          current.push.apply(current, next);
          return current;
        }

        current.push(next);
        return current;
      }

      if (Array.isArray(next)) {
        // A bit too dangerous to mutate `next`.
        return [current].concat(next);
      }

      return [current, next];
    }
    /**
     * @param {array} arr an "accumulation" of items which is either an Array or
     * a single item. Useful when paired with the `accumulate` module. This is a
     * simple utility that allows us to reason about a collection of items, but
     * handling the case when there is exactly one item (and we do not need to
     * allocate an array).
     * @param {function} cb Callback invoked with each element or a collection.
     * @param {?} [scope] Scope used as `this` in a callback.
     */


    function forEachAccumulated(arr, cb, scope) {
      if (Array.isArray(arr)) {
        arr.forEach(cb, scope);
      } else if (arr) {
        cb.call(scope, arr);
      }
    }
    /**
     * Internal queue of events that have accumulated their dispatches and are
     * waiting to have their dispatches executed.
     */


    var eventQueue = null;
    /**
     * Dispatches an event and releases it back into the pool, unless persistent.
     *
     * @param {?object} event Synthetic event to be dispatched.
     * @private
     */

    var executeDispatchesAndRelease = function (event) {
      if (event) {
        executeDispatchesInOrder(event);

        if (!event.isPersistent()) {
          event.constructor.release(event);
        }
      }
    };

    var executeDispatchesAndReleaseTopLevel = function (e) {
      return executeDispatchesAndRelease(e);
    };

    function runEventsInBatch(events) {
      if (events !== null) {
        eventQueue = accumulateInto(eventQueue, events);
      } // Set `eventQueue` to null before processing it so that we can tell if more
      // events get enqueued while processing.


      var processingEventQueue = eventQueue;
      eventQueue = null;

      if (!processingEventQueue) {
        return;
      }

      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);

      (function () {
        if (!!eventQueue) {
          {
            throw ReactError(Error("processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented."));
          }
        }
      })(); // This would be a good time to rethrow if any of the event handlers threw.


      rethrowCaughtError();
    }

    function isInteractive(tag) {
      return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
    }

    function shouldPreventMouseEvent(name, type, props) {
      switch (name) {
        case 'onClick':
        case 'onClickCapture':
        case 'onDoubleClick':
        case 'onDoubleClickCapture':
        case 'onMouseDown':
        case 'onMouseDownCapture':
        case 'onMouseMove':
        case 'onMouseMoveCapture':
        case 'onMouseUp':
        case 'onMouseUpCapture':
          return !!(props.disabled && isInteractive(type));

        default:
          return false;
      }
    }
    /**
     * This is a unified interface for event plugins to be installed and configured.
     *
     * Event plugins can implement the following properties:
     *
     *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
     *     Required. When a top-level event is fired, this method is expected to
     *     extract synthetic events that will in turn be queued and dispatched.
     *
     *   `eventTypes` {object}
     *     Optional, plugins that fire events must publish a mapping of registration
     *     names that are used to register listeners. Values of this mapping must
     *     be objects that contain `registrationName` or `phasedRegistrationNames`.
     *
     *   `executeDispatch` {function(object, function, string)}
     *     Optional, allows plugins to override how an event gets dispatched. By
     *     default, the listener is simply invoked.
     *
     * Each plugin that is injected into `EventsPluginHub` is immediately operable.
     *
     * @public
     */

    /**
     * Methods for injecting dependencies.
     */


    var injection = {
      /**
       * @param {array} InjectedEventPluginOrder
       * @public
       */
      injectEventPluginOrder: injectEventPluginOrder,

      /**
       * @param {object} injectedNamesToPlugins Map from names to plugin modules.
       */
      injectEventPluginsByName: injectEventPluginsByName
    };
    /**
     * @param {object} inst The instance, which is the source of events.
     * @param {string} registrationName Name of listener (e.g. `onClick`).
     * @return {?function} The stored callback.
     */

    function getListener(inst, registrationName) {
      var listener; // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
      // live here; needs to be moved to a better place soon

      var stateNode = inst.stateNode;

      if (!stateNode) {
        // Work in progress (ex: onload events in incremental mode).
        return null;
      }

      var props = getFiberCurrentPropsFromNode(stateNode);

      if (!props) {
        // Work in progress.
        return null;
      }

      listener = props[registrationName];

      if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
        return null;
      }

      (function () {
        if (!(!listener || typeof listener === 'function')) {
          {
            throw ReactError(Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type."));
          }
        }
      })();

      return listener;
    }
    /**
     * Allows registered plugins an opportunity to extract events from top-level
     * native browser events.
     *
     * @return {*} An accumulation of synthetic events.
     * @internal
     */


    function extractPluginEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags) {
      var events = null;

      for (var i = 0; i < plugins.length; i++) {
        // Not every plugin in the ordering may be loaded at runtime.
        var possiblePlugin = plugins[i];

        if (possiblePlugin) {
          var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);

          if (extractedEvents) {
            events = accumulateInto(events, extractedEvents);
          }
        }
      }

      return events;
    }

    function runExtractedPluginEventsInBatch(topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags) {
      var events = extractPluginEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
      runEventsInBatch(events);
    }

    var FunctionComponent = 0;
    var ClassComponent = 1;
    var IndeterminateComponent = 2; // Before we know whether it is function or class

    var HostRoot = 3; // Root of a host tree. Could be nested inside another node.

    var HostPortal = 4; // A subtree. Could be an entry point to a different renderer.

    var HostComponent = 5;
    var HostText = 6;
    var Fragment = 7;
    var Mode = 8;
    var ContextConsumer = 9;
    var ContextProvider = 10;
    var ForwardRef = 11;
    var Profiler = 12;
    var SuspenseComponent = 13;
    var MemoComponent = 14;
    var SimpleMemoComponent = 15;
    var LazyComponent = 16;
    var IncompleteClassComponent = 17;
    var DehydratedFragment = 18;
    var SuspenseListComponent = 19;
    var FundamentalComponent = 20;
    var ScopeComponent = 21;
    var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED; // Prevent newer renderers from RTE when used with older react package versions.
    // Current owner and dispatcher used to share the same ref,
    // but PR #14548 split them out to better support the react-debug-tools package.

    if (!ReactSharedInternals.hasOwnProperty('ReactCurrentDispatcher')) {
      ReactSharedInternals.ReactCurrentDispatcher = {
        current: null
      };
    }

    if (!ReactSharedInternals.hasOwnProperty('ReactCurrentBatchConfig')) {
      ReactSharedInternals.ReactCurrentBatchConfig = {
        suspense: null
      };
    }

    var BEFORE_SLASH_RE = /^(.*)[\\\/]/;

    var describeComponentFrame = function (name, source, ownerName) {
      var sourceInfo = '';

      if (source) {
        var path = source.fileName;
        var fileName = path.replace(BEFORE_SLASH_RE, '');
        {
          // In DEV, include code for a common special case:
          // prefer "folder/index.js" instead of just "index.js".
          if (/^index\./.test(fileName)) {
            var match = path.match(BEFORE_SLASH_RE);

            if (match) {
              var pathBeforeSlash = match[1];

              if (pathBeforeSlash) {
                var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');
                fileName = folderName + '/' + fileName;
              }
            }
          }
        }
        sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';
      } else if (ownerName) {
        sourceInfo = ' (created by ' + ownerName + ')';
      }

      return '\n    in ' + (name || 'Unknown') + sourceInfo;
    }; // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.


    var hasSymbol = typeof Symbol === 'function' && Symbol.for;
    var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
    var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
    var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
    var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
    var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
    var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
    var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
    // (unstable) APIs that have been removed. Can we remove the symbols?

    var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
    var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
    var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
    var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
    var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
    var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
    var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
    var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
    var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;
    var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator';

    function getIteratorFn(maybeIterable) {
      if (maybeIterable === null || typeof maybeIterable !== 'object') {
        return null;
      }

      var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

      if (typeof maybeIterator === 'function') {
        return maybeIterator;
      }

      return null;
    }
    /**
     * Similar to invariant but only logs a warning if the condition is not met.
     * This can be used to log issues in development environments in critical
     * paths. Removing the logging code for production environments will keep the
     * same logic and follow the same code paths.
     */


    var warning = warningWithoutStack$1;
    {
      warning = function (condition, format) {
        if (condition) {
          return;
        }

        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var stack = ReactDebugCurrentFrame.getStackAddendum(); // eslint-disable-next-line react-internal/warning-and-invariant-args

        for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
          args[_key - 2] = arguments[_key];
        }

        warningWithoutStack$1.apply(void 0, [false, format + '%s'].concat(args, [stack]));
      };
    }
    var warning$1 = warning;
    var Uninitialized = -1;
    var Pending = 0;
    var Resolved = 1;
    var Rejected = 2;

    function refineResolvedLazyComponent(lazyComponent) {
      return lazyComponent._status === Resolved ? lazyComponent._result : null;
    }

    function initializeLazyComponentType(lazyComponent) {
      if (lazyComponent._status === Uninitialized) {
        lazyComponent._status = Pending;
        var ctor = lazyComponent._ctor;
        var thenable = ctor();
        lazyComponent._result = thenable;
        thenable.then(function (moduleObject) {
          if (lazyComponent._status === Pending) {
            var defaultExport = moduleObject.default;
            {
              if (defaultExport === undefined) {
                warning$1(false, 'lazy: Expected the result of a dynamic import() call. ' + 'Instead received: %s\n\nYour code should look like: \n  ' + "const MyComponent = lazy(() => import('./MyComponent'))", moduleObject);
              }
            }
            lazyComponent._status = Resolved;
            lazyComponent._result = defaultExport;
          }
        }, function (error) {
          if (lazyComponent._status === Pending) {
            lazyComponent._status = Rejected;
            lazyComponent._result = error;
          }
        });
      }
    }

    function getWrappedName(outerType, innerType, wrapperName) {
      var functionName = innerType.displayName || innerType.name || '';
      return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
    }

    function getComponentName(type) {
      if (type == null) {
        // Host root, text node or just invalid type.
        return null;
      }

      {
        if (typeof type.tag === 'number') {
          warningWithoutStack$1(false, 'Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');
        }
      }

      if (typeof type === 'function') {
        return type.displayName || type.name || null;
      }

      if (typeof type === 'string') {
        return type;
      }

      switch (type) {
        case REACT_FRAGMENT_TYPE:
          return 'Fragment';

        case REACT_PORTAL_TYPE:
          return 'Portal';

        case REACT_PROFILER_TYPE:
          return "Profiler";

        case REACT_STRICT_MODE_TYPE:
          return 'StrictMode';

        case REACT_SUSPENSE_TYPE:
          return 'Suspense';

        case REACT_SUSPENSE_LIST_TYPE:
          return 'SuspenseList';
      }

      if (typeof type === 'object') {
        switch (type.$$typeof) {
          case REACT_CONTEXT_TYPE:
            return 'Context.Consumer';

          case REACT_PROVIDER_TYPE:
            return 'Context.Provider';

          case REACT_FORWARD_REF_TYPE:
            return getWrappedName(type, type.render, 'ForwardRef');

          case REACT_MEMO_TYPE:
            return getComponentName(type.type);

          case REACT_LAZY_TYPE:
            {
              var thenable = type;
              var resolvedThenable = refineResolvedLazyComponent(thenable);

              if (resolvedThenable) {
                return getComponentName(resolvedThenable);
              }

              break;
            }
        }
      }

      return null;
    }

    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;

    function describeFiber(fiber) {
      switch (fiber.tag) {
        case HostRoot:
        case HostPortal:
        case HostText:
        case Fragment:
        case ContextProvider:
        case ContextConsumer:
          return '';

        default:
          var owner = fiber._debugOwner;
          var source = fiber._debugSource;
          var name = getComponentName(fiber.type);
          var ownerName = null;

          if (owner) {
            ownerName = getComponentName(owner.type);
          }

          return describeComponentFrame(name, source, ownerName);
      }
    }

    function getStackByFiberInDevAndProd(workInProgress) {
      var info = '';
      var node = workInProgress;

      do {
        info += describeFiber(node);
        node = node.return;
      } while (node);

      return info;
    }

    var current = null;
    var phase = null;

    function getCurrentFiberOwnerNameInDevOrNull() {
      {
        if (current === null) {
          return null;
        }

        var owner = current._debugOwner;

        if (owner !== null && typeof owner !== 'undefined') {
          return getComponentName(owner.type);
        }
      }
      return null;
    }

    function getCurrentFiberStackInDev() {
      {
        if (current === null) {
          return '';
        } // Safe because if current fiber exists, we are reconciling,
        // and it is guaranteed to be the work-in-progress version.


        return getStackByFiberInDevAndProd(current);
      }
      return '';
    }

    function resetCurrentFiber() {
      {
        ReactDebugCurrentFrame.getCurrentStack = null;
        current = null;
        phase = null;
      }
    }

    function setCurrentFiber(fiber) {
      {
        ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackInDev;
        current = fiber;
        phase = null;
      }
    }

    function setCurrentPhase(lifeCyclePhase) {
      {
        phase = lifeCyclePhase;
      }
    }

    var canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');

    function endsWith(subject, search) {
      var length = subject.length;
      return subject.substring(length - search.length, length) === search;
    }

    var PLUGIN_EVENT_SYSTEM = 1;
    var RESPONDER_EVENT_SYSTEM = 1 << 1;
    var IS_PASSIVE = 1 << 2;
    var IS_ACTIVE = 1 << 3;
    var PASSIVE_NOT_SUPPORTED = 1 << 4;
    var IS_REPLAYED = 1 << 5;
    var restoreImpl = null;
    var restoreTarget = null;
    var restoreQueue = null;

    function restoreStateOfTarget(target) {
      // We perform this translation at the end of the event loop so that we
      // always receive the correct fiber here
      var internalInstance = getInstanceFromNode(target);

      if (!internalInstance) {
        // Unmounted
        return;
      }

      (function () {
        if (!(typeof restoreImpl === 'function')) {
          {
            throw ReactError(Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue."));
          }
        }
      })();

      var props = getFiberCurrentPropsFromNode(internalInstance.stateNode);
      restoreImpl(internalInstance.stateNode, internalInstance.type, props);
    }

    function setRestoreImplementation(impl) {
      restoreImpl = impl;
    }

    function enqueueStateRestore(target) {
      if (restoreTarget) {
        if (restoreQueue) {
          restoreQueue.push(target);
        } else {
          restoreQueue = [target];
        }
      } else {
        restoreTarget = target;
      }
    }

    function needsStateRestore() {
      return restoreTarget !== null || restoreQueue !== null;
    }

    function restoreStateIfNeeded() {
      if (!restoreTarget) {
        return;
      }

      var target = restoreTarget;
      var queuedTargets = restoreQueue;
      restoreTarget = null;
      restoreQueue = null;
      restoreStateOfTarget(target);

      if (queuedTargets) {
        for (var i = 0; i < queuedTargets.length; i++) {
          restoreStateOfTarget(queuedTargets[i]);
        }
      }
    }

    var enableUserTimingAPI = true; // Helps identify side effects in begin-phase lifecycle hooks and setState reducers:

    var debugRenderPhaseSideEffects = false; // In some cases, StrictMode should also double-render lifecycles.
    // This can be confusing for tests though,
    // And it can be bad for performance in production.
    // This feature flag can be used to control the behavior:

    var debugRenderPhaseSideEffectsForStrictMode = true; // To preserve the "Pause on caught exceptions" behavior of the debugger, we
    // replay the begin phase of a failed component inside invokeGuardedCallback.

    var replayFailedUnitOfWorkWithInvokeGuardedCallback = true; // Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:

    var warnAboutDeprecatedLifecycles = true; // Gather advanced timing metrics for Profiler subtrees.

    var enableProfilerTimer = true; // Trace which interactions trigger each commit.

    var enableSchedulerTracing = true; // Only used in www builds.

    var enableSuspenseServerRenderer = false; // TODO: true? Here it might just be false.

    var enableSelectiveHydration = false; // Only used in www builds.
    // Only used in www builds.
    // Disable javascript: URL strings in href for XSS protection.

    var disableJavaScriptURLs = false; // React Fire: prevent the value and checked attributes from syncing
    // with their related DOM properties

    var disableInputAttributeSyncing = false; // These APIs will no longer be "unstable" in the upcoming 16.7 release,
    // Control this behavior with a flag to support 16.6 minor releases in the meanwhile.

    var enableStableConcurrentModeAPIs = false;
    var warnAboutShorthandPropertyCollision = false; // See https://github.com/react-native-community/discussions-and-proposals/issues/72 for more information
    // This is a flag so we can fix warnings in RN core before turning it on
    // Experimental React Flare event system and event components support.

    var enableFlareAPI = false; // Experimental Host Component support.

    var enableFundamentalAPI = false; // Experimental Scope support.

    var enableScopeAPI = false; // New API for JSX transforms to target - https://github.com/reactjs/rfcs/pull/107
    // We will enforce mocking scheduler with scheduler/unstable_mock at some point. (v17?)
    // Till then, we warn about the missing mock, but still fallback to a sync mode compatible version

    var warnAboutUnmockedScheduler = false; // For tests, we flush suspense fallbacks in an act scope;
    // *except* in some of our own tests, where we test incremental loading states.

    var flushSuspenseFallbacksInTests = true; // Changes priority of some events like mousemove to user-blocking priority,
    // but without making them discrete. The flag exists in case it causes
    // starvation problems.

    var enableUserBlockingEvents = false; // Add a callback property to suspense to notify which promises are currently
    // in the update queue. This allows reporting and tracing of what is causing
    // the user to see a loading state.
    // Also allows hydration callbacks to fire when a dehydrated boundary gets
    // hydrated or deleted.

    var enableSuspenseCallback = false; // Part of the simplification of React.createElement so we can eventually move
    // from React.createElement to React.jsx
    // https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md

    var warnAboutDefaultPropsOnFunctionComponents = false;
    var warnAboutStringRefs = false;
    var disableLegacyContext = false;
    var disableSchedulerTimeoutBasedOnReactExpirationTime = false;
    var enableTrustedTypesIntegration = false; // the renderer. Such as when we're dispatching events or if third party
    // libraries need to call batchedUpdates. Eventually, this API will go away when
    // everything is batched by default. We'll then have a similar API to opt-out of
    // scheduled work and instead do synchronous work.
    // Defaults

    var batchedUpdatesImpl = function (fn, bookkeeping) {
      return fn(bookkeeping);
    };

    var discreteUpdatesImpl = function (fn, a, b, c) {
      return fn(a, b, c);
    };

    var flushDiscreteUpdatesImpl = function () {};

    var batchedEventUpdatesImpl = batchedUpdatesImpl;
    var isInsideEventHandler = false;
    var isBatchingEventUpdates = false;

    function finishEventHandler() {
      // Here we wait until all updates have propagated, which is important
      // when using controlled components within layers:
      // https://github.com/facebook/react/issues/1698
      // Then we restore state of any controlled component.
      var controlledComponentsHavePendingUpdates = needsStateRestore();

      if (controlledComponentsHavePendingUpdates) {
        // If a controlled event was fired, we may need to restore the state of
        // the DOM node back to the controlled value. This is necessary when React
        // bails out of the update without touching the DOM.
        flushDiscreteUpdatesImpl();
        restoreStateIfNeeded();
      }
    }

    function batchedUpdates(fn, bookkeeping) {
      if (isInsideEventHandler) {
        // If we are currently inside another batch, we need to wait until it
        // fully completes before restoring state.
        return fn(bookkeeping);
      }

      isInsideEventHandler = true;

      try {
        return batchedUpdatesImpl(fn, bookkeeping);
      } finally {
        isInsideEventHandler = false;
        finishEventHandler();
      }
    }

    function batchedEventUpdates(fn, a, b) {
      if (isBatchingEventUpdates) {
        // If we are currently inside another batch, we need to wait until it
        // fully completes before restoring state.
        return fn(a, b);
      }

      isBatchingEventUpdates = true;

      try {
        return batchedEventUpdatesImpl(fn, a, b);
      } finally {
        isBatchingEventUpdates = false;
        finishEventHandler();
      }
    } // This is for the React Flare event system


    function executeUserEventHandler(fn, value) {
      var previouslyInEventHandler = isInsideEventHandler;

      try {
        isInsideEventHandler = true;
        var type = typeof value === 'object' && value !== null ? value.type : '';
        invokeGuardedCallbackAndCatchFirstError(type, fn, undefined, value);
      } finally {
        isInsideEventHandler = previouslyInEventHandler;
      }
    }

    function discreteUpdates(fn, a, b, c) {
      var prevIsInsideEventHandler = isInsideEventHandler;
      isInsideEventHandler = true;

      try {
        return discreteUpdatesImpl(fn, a, b, c);
      } finally {
        isInsideEventHandler = prevIsInsideEventHandler;

        if (!isInsideEventHandler) {
          finishEventHandler();
        }
      }
    }

    var lastFlushedEventTimeStamp = 0;

    function flushDiscreteUpdatesIfNeeded(timeStamp) {
      // event.timeStamp isn't overly reliable due to inconsistencies in
      // how different browsers have historically provided the time stamp.
      // Some browsers provide high-resolution time stamps for all events,
      // some provide low-resolution time stamps for all events. FF < 52
      // even mixes both time stamps together. Some browsers even report
      // negative time stamps or time stamps that are 0 (iOS9) in some cases.
      // Given we are only comparing two time stamps with equality (!==),
      // we are safe from the resolution differences. If the time stamp is 0
      // we bail-out of preventing the flush, which can affect semantics,
      // such as if an earlier flush removes or adds event listeners that
      // are fired in the subsequent flush. However, this is the same
      // behaviour as we had before this change, so the risks are low.
      if (!isInsideEventHandler && (!enableFlareAPI || timeStamp === 0 || lastFlushedEventTimeStamp !== timeStamp)) {
        lastFlushedEventTimeStamp = timeStamp;
        flushDiscreteUpdatesImpl();
      }
    }

    function setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl, _flushDiscreteUpdatesImpl, _batchedEventUpdatesImpl) {
      batchedUpdatesImpl = _batchedUpdatesImpl;
      discreteUpdatesImpl = _discreteUpdatesImpl;
      flushDiscreteUpdatesImpl = _flushDiscreteUpdatesImpl;
      batchedEventUpdatesImpl = _batchedEventUpdatesImpl;
    }

    var DiscreteEvent = 0;
    var UserBlockingEvent = 1;
    var ContinuousEvent = 2; // CommonJS interop named imports.

    var UserBlockingPriority = Scheduler.unstable_UserBlockingPriority;
    var runWithPriority = Scheduler.unstable_runWithPriority;
    var listenToResponderEventTypesImpl;

    function setListenToResponderEventTypes(_listenToResponderEventTypesImpl) {
      listenToResponderEventTypesImpl = _listenToResponderEventTypesImpl;
    }

    var activeTimeouts = new Map();
    var rootEventTypesToEventResponderInstances = new Map();
    var DoNotPropagateToNextResponder = 0;
    var PropagateToNextResponder = 1;
    var currentTimeStamp = 0;
    var currentTimers = new Map();
    var currentInstance = null;
    var currentTimerIDCounter = 0;
    var currentDocument = null;
    var currentPropagationBehavior = DoNotPropagateToNextResponder;
    var eventResponderContext = {
      dispatchEvent: function (eventValue, eventListener, eventPriority) {
        validateResponderContext();
        validateEventValue(eventValue);

        switch (eventPriority) {
          case DiscreteEvent:
            {
              flushDiscreteUpdatesIfNeeded(currentTimeStamp);
              discreteUpdates(function () {
                return executeUserEventHandler(eventListener, eventValue);
              });
              break;
            }

          case UserBlockingEvent:
            {
              if (enableUserBlockingEvents) {
                runWithPriority(UserBlockingPriority, function () {
                  return executeUserEventHandler(eventListener, eventValue);
                });
              } else {
                executeUserEventHandler(eventListener, eventValue);
              }

              break;
            }

          case ContinuousEvent:
            {
              executeUserEventHandler(eventListener, eventValue);
              break;
            }
        }
      },
      isTargetWithinResponder: function (target) {
        validateResponderContext();

        if (target != null) {
          var fiber = getClosestInstanceFromNode(target);
          var responderFiber = currentInstance.fiber;

          while (fiber !== null) {
            if (fiber === responderFiber || fiber.alternate === responderFiber) {
              return true;
            }

            fiber = fiber.return;
          }
        }

        return false;
      },
      isTargetWithinResponderScope: function (target) {
        validateResponderContext();
        var componentInstance = currentInstance;
        var responder = componentInstance.responder;

        if (target != null) {
          var fiber = getClosestInstanceFromNode(target);
          var responderFiber = currentInstance.fiber;

          while (fiber !== null) {
            if (fiber === responderFiber || fiber.alternate === responderFiber) {
              return true;
            }

            if (doesFiberHaveResponder(fiber, responder)) {
              return false;
            }

            fiber = fiber.return;
          }
        }

        return false;
      },
      isTargetWithinNode: function (childTarget, parentTarget) {
        validateResponderContext();
        var childFiber = getClosestInstanceFromNode(childTarget);
        var parentFiber = getClosestInstanceFromNode(parentTarget);

        if (childFiber != null && parentFiber != null) {
          var parentAlternateFiber = parentFiber.alternate;
          var node = childFiber;

          while (node !== null) {
            if (node === parentFiber || node === parentAlternateFiber) {
              return true;
            }

            node = node.return;
          }

          return false;
        } // Fallback to DOM APIs


        return parentTarget.contains(childTarget);
      },
      addRootEventTypes: function (rootEventTypes) {
        validateResponderContext();
        listenToResponderEventTypesImpl(rootEventTypes, currentDocument);

        for (var i = 0; i < rootEventTypes.length; i++) {
          var rootEventType = rootEventTypes[i];
          var eventResponderInstance = currentInstance;
          registerRootEventType(rootEventType, eventResponderInstance);
        }
      },
      removeRootEventTypes: function (rootEventTypes) {
        validateResponderContext();

        for (var i = 0; i < rootEventTypes.length; i++) {
          var rootEventType = rootEventTypes[i];
          var rootEventResponders = rootEventTypesToEventResponderInstances.get(rootEventType);
          var rootEventTypesSet = currentInstance.rootEventTypes;

          if (rootEventTypesSet !== null) {
            rootEventTypesSet.delete(rootEventType);
          }

          if (rootEventResponders !== undefined) {
            rootEventResponders.delete(currentInstance);
          }
        }
      },
      setTimeout: function (func, delay) {
        validateResponderContext();

        if (currentTimers === null) {
          currentTimers = new Map();
        }

        var timeout = currentTimers.get(delay);
        var timerId = currentTimerIDCounter++;

        if (timeout === undefined) {
          var timers = new Map();
          var id = setTimeout(function () {
            processTimers(timers, delay);
          }, delay);
          timeout = {
            id: id,
            timers: timers
          };
          currentTimers.set(delay, timeout);
        }

        timeout.timers.set(timerId, {
          instance: currentInstance,
          func: func,
          id: timerId,
          timeStamp: currentTimeStamp
        });
        activeTimeouts.set(timerId, timeout);
        return timerId;
      },
      clearTimeout: function (timerId) {
        validateResponderContext();
        var timeout = activeTimeouts.get(timerId);

        if (timeout !== undefined) {
          var timers = timeout.timers;
          timers.delete(timerId);

          if (timers.size === 0) {
            clearTimeout(timeout.id);
          }
        }
      },
      getActiveDocument: getActiveDocument,
      objectAssign: _assign,
      getTimeStamp: function () {
        validateResponderContext();
        return currentTimeStamp;
      },
      isTargetWithinHostComponent: function (target, elementType) {
        validateResponderContext();
        var fiber = getClosestInstanceFromNode(target);

        while (fiber !== null) {
          if (fiber.tag === HostComponent && fiber.type === elementType) {
            return true;
          }

          fiber = fiber.return;
        }

        return false;
      },
      continuePropagation: function () {
        currentPropagationBehavior = PropagateToNextResponder;
      },
      enqueueStateRestore: enqueueStateRestore,
      getResponderNode: function () {
        validateResponderContext();
        var responderFiber = currentInstance.fiber;

        if (responderFiber.tag === ScopeComponent) {
          return null;
        }

        return responderFiber.stateNode;
      }
    };

    function validateEventValue(eventValue) {
      if (typeof eventValue === 'object' && eventValue !== null) {
        var target = eventValue.target,
            type = eventValue.type,
            timeStamp = eventValue.timeStamp;

        if (target == null || type == null || timeStamp == null) {
          throw new Error('context.dispatchEvent: "target", "timeStamp", and "type" fields on event object are required.');
        }

        var showWarning = function (name) {
          {
            warning$1(false, '%s is not available on event objects created from event responder modules (React Flare). ' + 'Try wrapping in a conditional, i.e. `if (event.type !== "press") { event.%s }`', name, name);
          }
        };

        eventValue.isDefaultPrevented = function () {
          {
            showWarning('isDefaultPrevented()');
          }
        };

        eventValue.isPropagationStopped = function () {
          {
            showWarning('isPropagationStopped()');
          }
        }; // $FlowFixMe: we don't need value, Flow thinks we do


        Object.defineProperty(eventValue, 'nativeEvent', {
          get: function () {
            {
              showWarning('nativeEvent');
            }
          }
        });
      }
    }

    function doesFiberHaveResponder(fiber, responder) {
      var tag = fiber.tag;

      if (tag === HostComponent || tag === ScopeComponent) {
        var dependencies = fiber.dependencies;

        if (dependencies !== null) {
          var respondersMap = dependencies.responders;

          if (respondersMap !== null && respondersMap.has(responder)) {
            return true;
          }
        }
      }

      return false;
    }

    function getActiveDocument() {
      return currentDocument;
    }

    function processTimers(timers, delay) {
      var timersArr = Array.from(timers.values());
      var previousInstance = currentInstance;
      var previousTimers = currentTimers;

      try {
        batchedEventUpdates(function () {
          for (var i = 0; i < timersArr.length; i++) {
            var _timersArr$i = timersArr[i],
                instance = _timersArr$i.instance,
                func = _timersArr$i.func,
                id = _timersArr$i.id,
                timeStamp = _timersArr$i.timeStamp;
            currentInstance = instance;
            currentTimeStamp = timeStamp + delay;

            try {
              func();
            } finally {
              activeTimeouts.delete(id);
            }
          }
        });
      } finally {
        currentTimers = previousTimers;
        currentInstance = previousInstance;
        currentTimeStamp = 0;
      }
    }

    function createDOMResponderEvent(topLevelType, nativeEvent, nativeEventTarget, passive, passiveSupported) {
      var _ref = nativeEvent,
          buttons = _ref.buttons,
          pointerType = _ref.pointerType;
      var eventPointerType = '';

      if (pointerType !== undefined) {
        eventPointerType = pointerType;
      } else if (nativeEvent.key !== undefined) {
        eventPointerType = 'keyboard';
      } else if (buttons !== undefined) {
        eventPointerType = 'mouse';
      } else if (nativeEvent.changedTouches !== undefined) {
        eventPointerType = 'touch';
      }

      return {
        nativeEvent: nativeEvent,
        passive: passive,
        passiveSupported: passiveSupported,
        pointerType: eventPointerType,
        target: nativeEventTarget,
        type: topLevelType
      };
    }

    function responderEventTypesContainType(eventTypes, type) {
      for (var i = 0, len = eventTypes.length; i < len; i++) {
        if (eventTypes[i] === type) {
          return true;
        }
      }

      return false;
    }

    function validateResponderTargetEventTypes(eventType, responder) {
      var targetEventTypes = responder.targetEventTypes; // Validate the target event type exists on the responder

      if (targetEventTypes !== null) {
        return responderEventTypesContainType(targetEventTypes, eventType);
      }

      return false;
    }

    function traverseAndHandleEventResponderInstances(topLevelType, targetFiber, nativeEvent, nativeEventTarget, eventSystemFlags) {
      var isPassiveEvent = (eventSystemFlags & IS_PASSIVE) !== 0;
      var isPassiveSupported = (eventSystemFlags & PASSIVE_NOT_SUPPORTED) === 0;
      var isPassive = isPassiveEvent || !isPassiveSupported;
      var eventType = isPassive ? topLevelType : topLevelType + '_active'; // Trigger event responders in this order:
      // - Bubble target responder phase
      // - Root responder phase

      var visitedResponders = new Set();
      var responderEvent = createDOMResponderEvent(topLevelType, nativeEvent, nativeEventTarget, isPassiveEvent, isPassiveSupported);
      var node = targetFiber;
      var insidePortal = false;

      while (node !== null) {
        var _node = node,
            dependencies = _node.dependencies,
            tag = _node.tag;

        if (tag === HostPortal) {
          insidePortal = true;
        } else if ((tag === HostComponent || tag === ScopeComponent) && dependencies !== null) {
          var respondersMap = dependencies.responders;

          if (respondersMap !== null) {
            var responderInstances = Array.from(respondersMap.values());

            for (var i = 0, length = responderInstances.length; i < length; i++) {
              var responderInstance = responderInstances[i];
              var props = responderInstance.props,
                  responder = responderInstance.responder,
                  state = responderInstance.state;

              if (!visitedResponders.has(responder) && validateResponderTargetEventTypes(eventType, responder) && (!insidePortal || responder.targetPortalPropagation)) {
                visitedResponders.add(responder);
                var onEvent = responder.onEvent;

                if (onEvent !== null) {
                  currentInstance = responderInstance;
                  onEvent(responderEvent, eventResponderContext, props, state);

                  if (currentPropagationBehavior === PropagateToNextResponder) {
                    visitedResponders.delete(responder);
                    currentPropagationBehavior = DoNotPropagateToNextResponder;
                  }
                }
              }
            }
          }
        }

        node = node.return;
      } // Root phase


      var rootEventResponderInstances = rootEventTypesToEventResponderInstances.get(eventType);

      if (rootEventResponderInstances !== undefined) {
        var _responderInstances = Array.from(rootEventResponderInstances);

        for (var _i = 0; _i < _responderInstances.length; _i++) {
          var _responderInstance = _responderInstances[_i];
          var props = _responderInstance.props,
              responder = _responderInstance.responder,
              state = _responderInstance.state;
          var onRootEvent = responder.onRootEvent;

          if (onRootEvent !== null) {
            currentInstance = _responderInstance;
            onRootEvent(responderEvent, eventResponderContext, props, state);
          }
        }
      }
    }

    function mountEventResponder(responder, responderInstance, props, state) {
      var onMount = responder.onMount;

      if (onMount !== null) {
        var previousInstance = currentInstance;
        var previousTimers = currentTimers;
        currentInstance = responderInstance;

        try {
          batchedEventUpdates(function () {
            onMount(eventResponderContext, props, state);
          });
        } finally {
          currentInstance = previousInstance;
          currentTimers = previousTimers;
        }
      }
    }

    function unmountEventResponder(responderInstance) {
      var responder = responderInstance.responder;
      var onUnmount = responder.onUnmount;

      if (onUnmount !== null) {
        var props = responderInstance.props,
            state = responderInstance.state;
        var previousInstance = currentInstance;
        var previousTimers = currentTimers;
        currentInstance = responderInstance;

        try {
          batchedEventUpdates(function () {
            onUnmount(eventResponderContext, props, state);
          });
        } finally {
          currentInstance = previousInstance;
          currentTimers = previousTimers;
        }
      }

      var rootEventTypesSet = responderInstance.rootEventTypes;

      if (rootEventTypesSet !== null) {
        var rootEventTypes = Array.from(rootEventTypesSet);

        for (var i = 0; i < rootEventTypes.length; i++) {
          var topLevelEventType = rootEventTypes[i];
          var rootEventResponderInstances = rootEventTypesToEventResponderInstances.get(topLevelEventType);

          if (rootEventResponderInstances !== undefined) {
            rootEventResponderInstances.delete(responderInstance);
          }
        }
      }
    }

    function validateResponderContext() {
      (function () {
        if (!(currentInstance !== null)) {
          {
            throw ReactError(Error("An event responder context was used outside of an event cycle. Use context.setTimeout() to use asynchronous responder context outside of event cycle ."));
          }
        }
      })();
    }

    function dispatchEventForResponderEventSystem(topLevelType, targetFiber, nativeEvent, nativeEventTarget, eventSystemFlags) {
      if (enableFlareAPI) {
        var previousInstance = currentInstance;
        var previousTimers = currentTimers;
        var previousTimeStamp = currentTimeStamp;
        var previousDocument = currentDocument;
        var previousPropagationBehavior = currentPropagationBehavior;
        currentPropagationBehavior = DoNotPropagateToNextResponder;
        currentTimers = null; // nodeType 9 is DOCUMENT_NODE

        currentDocument = nativeEventTarget.nodeType === 9 ? nativeEventTarget : nativeEventTarget.ownerDocument; // We might want to control timeStamp another way here

        currentTimeStamp = nativeEvent.timeStamp;

        try {
          batchedEventUpdates(function () {
            traverseAndHandleEventResponderInstances(topLevelType, targetFiber, nativeEvent, nativeEventTarget, eventSystemFlags);
          });
        } finally {
          currentTimers = previousTimers;
          currentInstance = previousInstance;
          currentTimeStamp = previousTimeStamp;
          currentDocument = previousDocument;
          currentPropagationBehavior = previousPropagationBehavior;
        }
      }
    }

    function addRootEventTypesForResponderInstance(responderInstance, rootEventTypes) {
      for (var i = 0; i < rootEventTypes.length; i++) {
        var rootEventType = rootEventTypes[i];
        registerRootEventType(rootEventType, responderInstance);
      }
    }

    function registerRootEventType(rootEventType, eventResponderInstance) {
      var rootEventResponderInstances = rootEventTypesToEventResponderInstances.get(rootEventType);

      if (rootEventResponderInstances === undefined) {
        rootEventResponderInstances = new Set();
        rootEventTypesToEventResponderInstances.set(rootEventType, rootEventResponderInstances);
      }

      var rootEventTypesSet = eventResponderInstance.rootEventTypes;

      if (rootEventTypesSet === null) {
        rootEventTypesSet = eventResponderInstance.rootEventTypes = new Set();
      }

      (function () {
        if (!!rootEventTypesSet.has(rootEventType)) {
          {
            throw ReactError(Error("addRootEventTypes() found a duplicate root event type of \"" + rootEventType + "\". This might be because the event type exists in the event responder \"rootEventTypes\" array or because of a previous addRootEventTypes() using this root event type."));
          }
        }
      })();

      rootEventTypesSet.add(rootEventType);
      rootEventResponderInstances.add(eventResponderInstance);
    } // A reserved attribute.
    // It is handled by React separately and shouldn't be written to the DOM.


    var RESERVED = 0; // A simple string attribute.
    // Attributes that aren't in the whitelist are presumed to have this type.

    var STRING = 1; // A string attribute that accepts booleans in React. In HTML, these are called
    // "enumerated" attributes with "true" and "false" as possible values.
    // When true, it should be set to a "true" string.
    // When false, it should be set to a "false" string.

    var BOOLEANISH_STRING = 2; // A real boolean attribute.
    // When true, it should be present (set either to an empty string or its name).
    // When false, it should be omitted.

    var BOOLEAN = 3; // An attribute that can be used as a flag as well as with a value.
    // When true, it should be present (set either to an empty string or its name).
    // When false, it should be omitted.
    // For any other value, should be present with that value.

    var OVERLOADED_BOOLEAN = 4; // An attribute that must be numeric or parse as a numeric.
    // When falsy, it should be removed.

    var NUMERIC = 5; // An attribute that must be positive numeric or parse as a positive numeric.
    // When falsy, it should be removed.

    var POSITIVE_NUMERIC = 6;
    /* eslint-disable max-len */

    var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
    /* eslint-enable max-len */

    var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
    var ROOT_ATTRIBUTE_NAME = 'data-reactroot';
    var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var illegalAttributeNameCache = {};
    var validatedAttributeNameCache = {};

    function isAttributeNameSafe(attributeName) {
      if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {
        return true;
      }

      if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {
        return false;
      }

      if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
        validatedAttributeNameCache[attributeName] = true;
        return true;
      }

      illegalAttributeNameCache[attributeName] = true;
      {
        warning$1(false, 'Invalid attribute name: `%s`', attributeName);
      }
      return false;
    }

    function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
      if (propertyInfo !== null) {
        return propertyInfo.type === RESERVED;
      }

      if (isCustomComponentTag) {
        return false;
      }

      if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) {
        return true;
      }

      return false;
    }

    function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
      if (propertyInfo !== null && propertyInfo.type === RESERVED) {
        return false;
      }

      switch (typeof value) {
        case 'function': // $FlowIssue symbol is perfectly valid here

        case 'symbol':
          // eslint-disable-line
          return true;

        case 'boolean':
          {
            if (isCustomComponentTag) {
              return false;
            }

            if (propertyInfo !== null) {
              return !propertyInfo.acceptsBooleans;
            } else {
              var prefix = name.toLowerCase().slice(0, 5);
              return prefix !== 'data-' && prefix !== 'aria-';
            }
          }

        default:
          return false;
      }
    }

    function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
      if (value === null || typeof value === 'undefined') {
        return true;
      }

      if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {
        return true;
      }

      if (isCustomComponentTag) {
        return false;
      }

      if (propertyInfo !== null) {
        switch (propertyInfo.type) {
          case BOOLEAN:
            return !value;

          case OVERLOADED_BOOLEAN:
            return value === false;

          case NUMERIC:
            return isNaN(value);

          case POSITIVE_NUMERIC:
            return isNaN(value) || value < 1;
        }
      }

      return false;
    }

    function getPropertyInfo(name) {
      return properties.hasOwnProperty(name) ? properties[name] : null;
    }

    function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL) {
      this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
      this.attributeName = attributeName;
      this.attributeNamespace = attributeNamespace;
      this.mustUseProperty = mustUseProperty;
      this.propertyName = name;
      this.type = type;
      this.sanitizeURL = sanitizeURL;
    } // When adding attributes to this list, be sure to also add them to
    // the `possibleStandardNames` module to ensure casing and incorrect
    // name warnings.


    var properties = {}; // These props are reserved by React. They shouldn't be written to the DOM.

    ['children', 'dangerouslySetInnerHTML', // TODO: This prevents the assignment of defaultValue to regular
    // elements (not just inputs). Now that ReactDOMInput assigns to the
    // defaultValue property -- do we need this?
    'defaultValue', 'defaultChecked', 'innerHTML', 'suppressContentEditableWarning', 'suppressHydrationWarning', 'style'].forEach(function (name) {
      properties[name] = new PropertyInfoRecord(name, RESERVED, false, // mustUseProperty
      name, // attributeName
      null, // attributeNamespace
      false);
    }); // A few React string attributes have a different name.
    // This is a mapping from React prop names to the attribute names.

    [['acceptCharset', 'accept-charset'], ['className', 'class'], ['htmlFor', 'for'], ['httpEquiv', 'http-equiv']].forEach(function (_ref) {
      var name = _ref[0],
          attributeName = _ref[1];
      properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
      attributeName, // attributeName
      null, // attributeNamespace
      false);
    }); // These are "enumerated" HTML attributes that accept "true" and "false".
    // In React, we let users pass `true` and `false` even though technically
    // these aren't boolean attributes (they are coerced to strings).

    ['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (name) {
      properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
      name.toLowerCase(), // attributeName
      null, // attributeNamespace
      false);
    }); // These are "enumerated" SVG attributes that accept "true" and "false".
    // In React, we let users pass `true` and `false` even though technically
    // these aren't boolean attributes (they are coerced to strings).
    // Since these are SVG attributes, their attribute names are case-sensitive.

    ['autoReverse', 'externalResourcesRequired', 'focusable', 'preserveAlpha'].forEach(function (name) {
      properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
      name, // attributeName
      null, // attributeNamespace
      false);
    }); // These are HTML boolean attributes.

    ['allowFullScreen', 'async', // Note: there is a special case that prevents it from being written to the DOM
    // on the client side because the browsers are inconsistent. Instead we call focus().
    'autoFocus', 'autoPlay', 'controls', 'default', 'defer', 'disabled', 'disablePictureInPicture', 'formNoValidate', 'hidden', 'loop', 'noModule', 'noValidate', 'open', 'playsInline', 'readOnly', 'required', 'reversed', 'scoped', 'seamless', // Microdata
    'itemScope'].forEach(function (name) {
      properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, // mustUseProperty
      name.toLowerCase(), // attributeName
      null, // attributeNamespace
      false);
    }); // These are the few React props that we set as DOM properties
    // rather than attributes. These are all booleans.

    ['checked', // Note: `option.selected` is not updated if `select.multiple` is
    // disabled with `removeAttribute`. We have special logic for handling this.
    'multiple', 'muted', 'selected'].forEach(function (name) {
      properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, // mustUseProperty
      name, // attributeName
      null, // attributeNamespace
      false);
    }); // These are HTML attributes that are "overloaded booleans": they behave like
    // booleans, but can also accept a string value.

    ['capture', 'download'].forEach(function (name) {
      properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, // mustUseProperty
      name, // attributeName
      null, // attributeNamespace
      false);
    }); // These are HTML attributes that must be positive numbers.

    ['cols', 'rows', 'size', 'span'].forEach(function (name) {
      properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, // mustUseProperty
      name, // attributeName
      null, // attributeNamespace
      false);
    }); // These are HTML attributes that must be numbers.

    ['rowSpan', 'start'].forEach(function (name) {
      properties[name] = new PropertyInfoRecord(name, NUMERIC, false, // mustUseProperty
      name.toLowerCase(), // attributeName
      null, // attributeNamespace
      false);
    });
    var CAMELIZE = /[\-\:]([a-z])/g;

    var capitalize = function (token) {
      return token[1].toUpperCase();
    }; // This is a list of all SVG attributes that need special casing, namespacing,
    // or boolean value assignment. Regular attributes that just accept strings
    // and have the same names are omitted, just like in the HTML whitelist.
    // Some of these attributes can be hard to find. This list was created by
    // scrapping the MDN documentation.


    ['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'xmlns:xlink', 'x-height'].forEach(function (attributeName) {
      var name = attributeName.replace(CAMELIZE, capitalize);
      properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
      attributeName, null, // attributeNamespace
      false);
    }); // String SVG attributes with the xlink namespace.

    ['xlink:actuate', 'xlink:arcrole', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type'].forEach(function (attributeName) {
      var name = attributeName.replace(CAMELIZE, capitalize);
      properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
      attributeName, 'http://www.w3.org/1999/xlink', false);
    }); // String SVG attributes with the xml namespace.

    ['xml:base', 'xml:lang', 'xml:space'].forEach(function (attributeName) {
      var name = attributeName.replace(CAMELIZE, capitalize);
      properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
      attributeName, 'http://www.w3.org/XML/1998/namespace', false);
    }); // These attribute exists both in HTML and SVG.
    // The attribute name is case-sensitive in SVG so we can't just use
    // the React name like we do for attributes that exist only in HTML.

    ['tabIndex', 'crossOrigin'].forEach(function (attributeName) {
      properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty
      attributeName.toLowerCase(), // attributeName
      null, // attributeNamespace
      false);
    }); // These attributes accept URLs. These must not allow javascript: URLS.
    // These will also need to accept Trusted Types object in the future.

    var xlinkHref = 'xlinkHref';
    properties[xlinkHref] = new PropertyInfoRecord('xlinkHref', STRING, false, // mustUseProperty
    'xlink:href', 'http://www.w3.org/1999/xlink', true);
    ['src', 'href', 'action', 'formAction'].forEach(function (attributeName) {
      properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty
      attributeName.toLowerCase(), // attributeName
      null, // attributeNamespace
      true);
    });
    var ReactDebugCurrentFrame$1 = null;
    {
      ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
    } // A javascript: URL can contain leading C0 control or \u0020 SPACE,
    // and any newline or tab are filtered out as if they're not part of the URL.
    // https://url.spec.whatwg.org/#url-parsing
    // Tab or newline are defined as \r\n\t:
    // https://infra.spec.whatwg.org/#ascii-tab-or-newline
    // A C0 control is a code point in the range \u0000 NULL to \u001F
    // INFORMATION SEPARATOR ONE, inclusive:
    // https://infra.spec.whatwg.org/#c0-control-or-space

    /* eslint-disable max-len */

    var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
    var didWarn = false;

    function sanitizeURL(url) {
      if (disableJavaScriptURLs) {
        (function () {
          if (!!isJavaScriptProtocol.test(url)) {
            {
              throw ReactError(Error("React has blocked a javascript: URL as a security precaution." + ReactDebugCurrentFrame$1.getStackAddendum()));
            }
          }
        })();
      } else if (true && !didWarn && isJavaScriptProtocol.test(url)) {
        didWarn = true;
        warning$1(false, 'A future version of React will block javascript: URLs as a security precaution. ' + 'Use event handlers instead if you can. If you need to generate unsafe HTML try ' + 'using dangerouslySetInnerHTML instead. React was passed %s.', JSON.stringify(url));
      }
    } // Flow does not allow string concatenation of most non-string types. To work
    // around this limitation, we use an opaque type that can only be obtained by
    // passing the value through getToStringValue first.


    function toString(value) {
      return '' + value;
    }

    function getToStringValue(value) {
      switch (typeof value) {
        case 'boolean':
        case 'number':
        case 'object':
        case 'string':
        case 'undefined':
          return value;

        default:
          // function, symbol are assigned as empty strings
          return '';
      }
    }
    /** Trusted value is a wrapper for "safe" values which can be assigned to DOM execution sinks. */

    /**
     * We allow passing objects with toString method as element attributes or in dangerouslySetInnerHTML
     * and we do validations that the value is safe. Once we do validation we want to use the validated
     * value instead of the object (because object.toString may return something else on next call).
     *
     * If application uses Trusted Types we don't stringify trusted values, but preserve them as objects.
     */


    var toStringOrTrustedType = toString;

    if (enableTrustedTypesIntegration && typeof trustedTypes !== 'undefined') {
      var isHTML = trustedTypes.isHTML;
      var isScript = trustedTypes.isScript;
      var isScriptURL = trustedTypes.isScriptURL; // TrustedURLs are deprecated and will be removed soon: https://github.com/WICG/trusted-types/pull/204

      var isURL = trustedTypes.isURL ? trustedTypes.isURL : function (value) {
        return false;
      };

      toStringOrTrustedType = function (value) {
        if (typeof value === 'object' && (isHTML(value) || isScript(value) || isScriptURL(value) || isURL(value))) {
          // Pass Trusted Types through.
          return value;
        }

        return toString(value);
      };
    }
    /**
     * Set attribute for a node. The attribute value can be either string or
     * Trusted value (if application uses Trusted Types).
     */


    function setAttribute(node, attributeName, attributeValue) {
      node.setAttribute(attributeName, attributeValue);
    }
    /**
     * Set attribute with namespace for a node. The attribute value can be either string or
     * Trusted value (if application uses Trusted Types).
     */


    function setAttributeNS(node, attributeNamespace, attributeName, attributeValue) {
      node.setAttributeNS(attributeNamespace, attributeName, attributeValue);
    }
    /**
     * Get the value for a property on a node. Only used in DEV for SSR validation.
     * The "expected" argument is used as a hint of what the expected value is.
     * Some properties have multiple equivalent values.
     */


    function getValueForProperty(node, name, expected, propertyInfo) {
      {
        if (propertyInfo.mustUseProperty) {
          var propertyName = propertyInfo.propertyName;
          return node[propertyName];
        } else {
          if (!disableJavaScriptURLs && propertyInfo.sanitizeURL) {
            // If we haven't fully disabled javascript: URLs, and if
            // the hydration is successful of a javascript: URL, we
            // still want to warn on the client.
            sanitizeURL('' + expected);
          }

          var attributeName = propertyInfo.attributeName;
          var stringValue = null;

          if (propertyInfo.type === OVERLOADED_BOOLEAN) {
            if (node.hasAttribute(attributeName)) {
              var value = node.getAttribute(attributeName);

              if (value === '') {
                return true;
              }

              if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
                return value;
              }

              if (value === '' + expected) {
                return expected;
              }

              return value;
            }
          } else if (node.hasAttribute(attributeName)) {
            if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
              // We had an attribute but shouldn't have had one, so read it
              // for the error message.
              return node.getAttribute(attributeName);
            }

            if (propertyInfo.type === BOOLEAN) {
              // If this was a boolean, it doesn't matter what the value is
              // the fact that we have it is the same as the expected.
              return expected;
            } // Even if this property uses a namespace we use getAttribute
            // because we assume its namespaced name is the same as our config.
            // To use getAttributeNS we need the local name which we don't have
            // in our config atm.


            stringValue = node.getAttribute(attributeName);
          }

          if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
            return stringValue === null ? expected : stringValue;
          } else if (stringValue === '' + expected) {
            return expected;
          } else {
            return stringValue;
          }
        }
      }
    }
    /**
     * Get the value for a attribute on a node. Only used in DEV for SSR validation.
     * The third argument is used as a hint of what the expected value is. Some
     * attributes have multiple equivalent values.
     */


    function getValueForAttribute(node, name, expected) {
      {
        if (!isAttributeNameSafe(name)) {
          return;
        }

        if (!node.hasAttribute(name)) {
          return expected === undefined ? undefined : null;
        }

        var value = node.getAttribute(name);

        if (value === '' + expected) {
          return expected;
        }

        return value;
      }
    }
    /**
     * Sets the value for a property on a node.
     *
     * @param {DOMElement} node
     * @param {string} name
     * @param {*} value
     */


    function setValueForProperty(node, name, value, isCustomComponentTag) {
      var propertyInfo = getPropertyInfo(name);

      if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {
        return;
      }

      if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) {
        value = null;
      } // If the prop isn't in the special list, treat it as a simple attribute.


      if (isCustomComponentTag || propertyInfo === null) {
        if (isAttributeNameSafe(name)) {
          var _attributeName = name;

          if (value === null) {
            node.removeAttribute(_attributeName);
          } else {
            setAttribute(node, _attributeName, toStringOrTrustedType(value));
          }
        }

        return;
      }

      var mustUseProperty = propertyInfo.mustUseProperty;

      if (mustUseProperty) {
        var propertyName = propertyInfo.propertyName;

        if (value === null) {
          var type = propertyInfo.type;
          node[propertyName] = type === BOOLEAN ? false : '';
        } else {
          // Contrary to `setAttribute`, object properties are properly
          // `toString`ed by IE8/9.
          node[propertyName] = value;
        }

        return;
      } // The rest are treated as attributes with special cases.


      var attributeName = propertyInfo.attributeName,
          attributeNamespace = propertyInfo.attributeNamespace;

      if (value === null) {
        node.removeAttribute(attributeName);
      } else {
        var _type = propertyInfo.type;
        var attributeValue;

        if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) {
          // If attribute type is boolean, we know for sure it won't be an execution sink
          // and we won't require Trusted Type here.
          attributeValue = '';
        } else {
          // `setAttribute` with objects becomes only `[object]` in IE8/9,
          // ('' + value) makes it output the correct toString()-value.
          attributeValue = toStringOrTrustedType(value);

          if (propertyInfo.sanitizeURL) {
            sanitizeURL(attributeValue.toString());
          }
        }

        if (attributeNamespace) {
          setAttributeNS(node, attributeNamespace, attributeName, attributeValue);
        } else {
          setAttribute(node, attributeName, attributeValue);
        }
      }
    }

    var ReactDebugCurrentFrame$2 = null;
    var ReactControlledValuePropTypes = {
      checkPropTypes: null
    };
    {
      ReactDebugCurrentFrame$2 = ReactSharedInternals.ReactDebugCurrentFrame;
      var hasReadOnlyValue = {
        button: true,
        checkbox: true,
        image: true,
        hidden: true,
        radio: true,
        reset: true,
        submit: true
      };
      var propTypes = {
        value: function (props, propName, componentName) {
          if (hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled || props[propName] == null || enableFlareAPI && props.listeners) {
            return null;
          }

          return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
        },
        checked: function (props, propName, componentName) {
          if (props.onChange || props.readOnly || props.disabled || props[propName] == null || enableFlareAPI && props.listeners) {
            return null;
          }

          return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
        }
      };
      /**
       * Provide a linked `value` attribute for controlled forms. You should not use
       * this outside of the ReactDOM controlled form components.
       */

      ReactControlledValuePropTypes.checkPropTypes = function (tagName, props) {
        checkPropTypes(propTypes, props, 'prop', tagName, ReactDebugCurrentFrame$2.getStackAddendum);
      };
    }

    function isCheckable(elem) {
      var type = elem.type;
      var nodeName = elem.nodeName;
      return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
    }

    function getTracker(node) {
      return node._valueTracker;
    }

    function detachTracker(node) {
      node._valueTracker = null;
    }

    function getValueFromNode(node) {
      var value = '';

      if (!node) {
        return value;
      }

      if (isCheckable(node)) {
        value = node.checked ? 'true' : 'false';
      } else {
        value = node.value;
      }

      return value;
    }

    function trackValueOnNode(node) {
      var valueField = isCheckable(node) ? 'checked' : 'value';
      var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);
      var currentValue = '' + node[valueField]; // if someone has already defined a value or Safari, then bail
      // and don't track value will cause over reporting of changes,
      // but it's better then a hard failure
      // (needed for certain tests that spyOn input values and Safari)

      if (node.hasOwnProperty(valueField) || typeof descriptor === 'undefined' || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {
        return;
      }

      var get = descriptor.get,
          set = descriptor.set;
      Object.defineProperty(node, valueField, {
        configurable: true,
        get: function () {
          return get.call(this);
        },
        set: function (value) {
          currentValue = '' + value;
          set.call(this, value);
        }
      }); // We could've passed this the first time
      // but it triggers a bug in IE11 and Edge 14/15.
      // Calling defineProperty() again should be equivalent.
      // https://github.com/facebook/react/issues/11768

      Object.defineProperty(node, valueField, {
        enumerable: descriptor.enumerable
      });
      var tracker = {
        getValue: function () {
          return currentValue;
        },
        setValue: function (value) {
          currentValue = '' + value;
        },
        stopTracking: function () {
          detachTracker(node);
          delete node[valueField];
        }
      };
      return tracker;
    }

    function track(node) {
      if (getTracker(node)) {
        return;
      } // TODO: Once it's just Fiber we can move this to node._wrapperState


      node._valueTracker = trackValueOnNode(node);
    }

    function updateValueIfChanged(node) {
      if (!node) {
        return false;
      }

      var tracker = getTracker(node); // if there is no tracker at this point it's unlikely
      // that trying again will succeed

      if (!tracker) {
        return true;
      }

      var lastValue = tracker.getValue();
      var nextValue = getValueFromNode(node);

      if (nextValue !== lastValue) {
        tracker.setValue(nextValue);
        return true;
      }

      return false;
    } // TODO: direct imports like some-package/src/* are bad. Fix me.


    var didWarnValueDefaultValue = false;
    var didWarnCheckedDefaultChecked = false;
    var didWarnControlledToUncontrolled = false;
    var didWarnUncontrolledToControlled = false;

    function isControlled(props) {
      var usesChecked = props.type === 'checkbox' || props.type === 'radio';
      return usesChecked ? props.checked != null : props.value != null;
    }
    /**
     * Implements an <input> host component that allows setting these optional
     * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
     *
     * If `checked` or `value` are not supplied (or null/undefined), user actions
     * that affect the checked state or value will trigger updates to the element.
     *
     * If they are supplied (and not null/undefined), the rendered element will not
     * trigger updates to the element. Instead, the props must change in order for
     * the rendered element to be updated.
     *
     * The rendered element will be initialized as unchecked (or `defaultChecked`)
     * with an empty value (or `defaultValue`).
     *
     * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
     */


    function getHostProps(element, props) {
      var node = element;
      var checked = props.checked;

      var hostProps = _assign({}, props, {
        defaultChecked: undefined,
        defaultValue: undefined,
        value: undefined,
        checked: checked != null ? checked : node._wrapperState.initialChecked
      });

      return hostProps;
    }

    function initWrapperState(element, props) {
      {
        ReactControlledValuePropTypes.checkPropTypes('input', props);

        if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
          warning$1(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);
          didWarnCheckedDefaultChecked = true;
        }

        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
          warning$1(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);
          didWarnValueDefaultValue = true;
        }
      }
      var node = element;
      var defaultValue = props.defaultValue == null ? '' : props.defaultValue;
      node._wrapperState = {
        initialChecked: props.checked != null ? props.checked : props.defaultChecked,
        initialValue: getToStringValue(props.value != null ? props.value : defaultValue),
        controlled: isControlled(props)
      };
    }

    function updateChecked(element, props) {
      var node = element;
      var checked = props.checked;

      if (checked != null) {
        setValueForProperty(node, 'checked', checked, false);
      }
    }

    function updateWrapper(element, props) {
      var node = element;
      {
        var controlled = isControlled(props);

        if (!node._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
          warning$1(false, 'A component is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', props.type);
          didWarnUncontrolledToControlled = true;
        }

        if (node._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
          warning$1(false, 'A component is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', props.type);
          didWarnControlledToUncontrolled = true;
        }
      }
      updateChecked(element, props);
      var value = getToStringValue(props.value);
      var type = props.type;

      if (value != null) {
        if (type === 'number') {
          if (value === 0 && node.value === '' || // We explicitly want to coerce to number here if possible.
          // eslint-disable-next-line
          node.value != value) {
            node.value = toString(value);
          }
        } else if (node.value !== toString(value)) {
          node.value = toString(value);
        }
      } else if (type === 'submit' || type === 'reset') {
        // Submit/reset inputs need the attribute removed completely to avoid
        // blank-text buttons.
        node.removeAttribute('value');
        return;
      }

      if (disableInputAttributeSyncing) {
        // When not syncing the value attribute, React only assigns a new value
        // whenever the defaultValue React prop has changed. When not present,
        // React does nothing
        if (props.hasOwnProperty('defaultValue')) {
          setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
        }
      } else {
        // When syncing the value attribute, the value comes from a cascade of
        // properties:
        //  1. The value React property
        //  2. The defaultValue React property
        //  3. Otherwise there should be no change
        if (props.hasOwnProperty('value')) {
          setDefaultValue(node, props.type, value);
        } else if (props.hasOwnProperty('defaultValue')) {
          setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
        }
      }

      if (disableInputAttributeSyncing) {
        // When not syncing the checked attribute, the attribute is directly
        // controllable from the defaultValue React property. It needs to be
        // updated as new props come in.
        if (props.defaultChecked == null) {
          node.removeAttribute('checked');
        } else {
          node.defaultChecked = !!props.defaultChecked;
        }
      } else {
        // When syncing the checked attribute, it only changes when it needs
        // to be removed, such as transitioning from a checkbox into a text input
        if (props.checked == null && props.defaultChecked != null) {
          node.defaultChecked = !!props.defaultChecked;
        }
      }
    }

    function postMountWrapper(element, props, isHydrating) {
      var node = element; // Do not assign value if it is already set. This prevents user text input
      // from being lost during SSR hydration.

      if (props.hasOwnProperty('value') || props.hasOwnProperty('defaultValue')) {
        var type = props.type;
        var isButton = type === 'submit' || type === 'reset'; // Avoid setting value attribute on submit/reset inputs as it overrides the
        // default value provided by the browser. See: #12872

        if (isButton && (props.value === undefined || props.value === null)) {
          return;
        }

        var initialValue = toString(node._wrapperState.initialValue); // Do not assign value if it is already set. This prevents user text input
        // from being lost during SSR hydration.

        if (!isHydrating) {
          if (disableInputAttributeSyncing) {
            var value = getToStringValue(props.value); // When not syncing the value attribute, the value property points
            // directly to the React prop. Only assign it if it exists.

            if (value != null) {
              // Always assign on buttons so that it is possible to assign an
              // empty string to clear button text.
              //
              // Otherwise, do not re-assign the value property if is empty. This
              // potentially avoids a DOM write and prevents Firefox (~60.0.1) from
              // prematurely marking required inputs as invalid. Equality is compared
              // to the current value in case the browser provided value is not an
              // empty string.
              if (isButton || value !== node.value) {
                node.value = toString(value);
              }
            }
          } else {
            // When syncing the value attribute, the value property should use
            // the wrapperState._initialValue property. This uses:
            //
            //   1. The value React property when present
            //   2. The defaultValue React property when present
            //   3. An empty string
            if (initialValue !== node.value) {
              node.value = initialValue;
            }
          }
        }

        if (disableInputAttributeSyncing) {
          // When not syncing the value attribute, assign the value attribute
          // directly from the defaultValue React property (when present)
          var defaultValue = getToStringValue(props.defaultValue);

          if (defaultValue != null) {
            node.defaultValue = toString(defaultValue);
          }
        } else {
          // Otherwise, the value attribute is synchronized to the property,
          // so we assign defaultValue to the same thing as the value property
          // assignment step above.
          node.defaultValue = initialValue;
        }
      } // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
      // this is needed to work around a chrome bug where setting defaultChecked
      // will sometimes influence the value of checked (even after detachment).
      // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
      // We need to temporarily unset name to avoid disrupting radio button groups.


      var name = node.name;

      if (name !== '') {
        node.name = '';
      }

      if (disableInputAttributeSyncing) {
        // When not syncing the checked attribute, the checked property
        // never gets assigned. It must be manually set. We don't want
        // to do this when hydrating so that existing user input isn't
        // modified
        if (!isHydrating) {
          updateChecked(element, props);
        } // Only assign the checked attribute if it is defined. This saves
        // a DOM write when controlling the checked attribute isn't needed
        // (text inputs, submit/reset)


        if (props.hasOwnProperty('defaultChecked')) {
          node.defaultChecked = !node.defaultChecked;
          node.defaultChecked = !!props.defaultChecked;
        }
      } else {
        // When syncing the checked attribute, both the checked property and
        // attribute are assigned at the same time using defaultChecked. This uses:
        //
        //   1. The checked React property when present
        //   2. The defaultChecked React property when present
        //   3. Otherwise, false
        node.defaultChecked = !node.defaultChecked;
        node.defaultChecked = !!node._wrapperState.initialChecked;
      }

      if (name !== '') {
        node.name = name;
      }
    }

    function restoreControlledState$1(element, props) {
      var node = element;
      updateWrapper(node, props);
      updateNamedCousins(node, props);
    }

    function updateNamedCousins(rootNode, props) {
      var name = props.name;

      if (props.type === 'radio' && name != null) {
        var queryRoot = rootNode;

        while (queryRoot.parentNode) {
          queryRoot = queryRoot.parentNode;
        } // If `rootNode.form` was non-null, then we could try `form.elements`,
        // but that sometimes behaves strangely in IE8. We could also try using
        // `form.getElementsByName`, but that will only return direct children
        // and won't include inputs that use the HTML5 `form=` attribute. Since
        // the input might not even be in a form. It might not even be in the
        // document. Let's just use the local `querySelectorAll` to ensure we don't
        // miss anything.


        var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

        for (var i = 0; i < group.length; i++) {
          var otherNode = group[i];

          if (otherNode === rootNode || otherNode.form !== rootNode.form) {
            continue;
          } // This will throw if radio buttons rendered by different copies of React
          // and the same name are rendered into the same form (same as #1939).
          // That's probably okay; we don't support it just as we don't support
          // mixing React radio buttons with non-React ones.


          var otherProps = getFiberCurrentPropsFromNode$1(otherNode);

          (function () {
            if (!otherProps) {
              {
                throw ReactError(Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported."));
              }
            }
          })(); // We need update the tracked value on the named cousin since the value
          // was changed but the input saw no event or value set


          updateValueIfChanged(otherNode); // If this is a controlled radio button group, forcing the input that
          // was previously checked to update will cause it to be come re-checked
          // as appropriate.

          updateWrapper(otherNode, otherProps);
        }
      }
    } // In Chrome, assigning defaultValue to certain input types triggers input validation.
    // For number inputs, the display value loses trailing decimal points. For email inputs,
    // Chrome raises "The specified value <x> is not a valid email address".
    //
    // Here we check to see if the defaultValue has actually changed, avoiding these problems
    // when the user is inputting text
    //
    // https://github.com/facebook/react/issues/7253


    function setDefaultValue(node, type, value) {
      if ( // Focused number inputs synchronize on blur. See ChangeEventPlugin.js
      type !== 'number' || node.ownerDocument.activeElement !== node) {
        if (value == null) {
          node.defaultValue = toString(node._wrapperState.initialValue);
        } else if (node.defaultValue !== toString(value)) {
          node.defaultValue = toString(value);
        }
      }
    }

    var didWarnSelectedSetOnOption = false;
    var didWarnInvalidChild = false;

    function flattenChildren(children) {
      var content = ''; // Flatten children. We'll warn if they are invalid
      // during validateProps() which runs for hydration too.
      // Note that this would throw on non-element objects.
      // Elements are stringified (which is normally irrelevant
      // but matters for <fbt>).

      React.Children.forEach(children, function (child) {
        if (child == null) {
          return;
        }

        content += child; // Note: we don't warn about invalid children here.
        // Instead, this is done separately below so that
        // it happens during the hydration codepath too.
      });
      return content;
    }
    /**
     * Implements an <option> host component that warns when `selected` is set.
     */


    function validateProps(element, props) {
      {
        // This mirrors the codepath above, but runs for hydration too.
        // Warn about invalid children here so that client and hydration are consistent.
        // TODO: this seems like it could cause a DEV-only throw for hydration
        // if children contains a non-element object. We should try to avoid that.
        if (typeof props.children === 'object' && props.children !== null) {
          React.Children.forEach(props.children, function (child) {
            if (child == null) {
              return;
            }

            if (typeof child === 'string' || typeof child === 'number') {
              return;
            }

            if (typeof child.type !== 'string') {
              return;
            }

            if (!didWarnInvalidChild) {
              didWarnInvalidChild = true;
              warning$1(false, 'Only strings and numbers are supported as <option> children.');
            }
          });
        } // TODO: Remove support for `selected` in <option>.


        if (props.selected != null && !didWarnSelectedSetOnOption) {
          warning$1(false, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.');
          didWarnSelectedSetOnOption = true;
        }
      }
    }

    function postMountWrapper$1(element, props) {
      // value="" should make a value attribute (#6219)
      if (props.value != null) {
        element.setAttribute('value', toString(getToStringValue(props.value)));
      }
    }

    function getHostProps$1(element, props) {
      var hostProps = _assign({
        children: undefined
      }, props);

      var content = flattenChildren(props.children);

      if (content) {
        hostProps.children = content;
      }

      return hostProps;
    } // TODO: direct imports like some-package/src/* are bad. Fix me.


    var didWarnValueDefaultValue$1;
    {
      didWarnValueDefaultValue$1 = false;
    }

    function getDeclarationErrorAddendum() {
      var ownerName = getCurrentFiberOwnerNameInDevOrNull();

      if (ownerName) {
        return '\n\nCheck the render method of `' + ownerName + '`.';
      }

      return '';
    }

    var valuePropNames = ['value', 'defaultValue'];
    /**
     * Validation function for `value` and `defaultValue`.
     */

    function checkSelectPropTypes(props) {
      ReactControlledValuePropTypes.checkPropTypes('select', props);

      for (var i = 0; i < valuePropNames.length; i++) {
        var propName = valuePropNames[i];

        if (props[propName] == null) {
          continue;
        }

        var isArray = Array.isArray(props[propName]);

        if (props.multiple && !isArray) {
          warning$1(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum());
        } else if (!props.multiple && isArray) {
          warning$1(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum());
        }
      }
    }

    function updateOptions(node, multiple, propValue, setDefaultSelected) {
      var options = node.options;

      if (multiple) {
        var selectedValues = propValue;
        var selectedValue = {};

        for (var i = 0; i < selectedValues.length; i++) {
          // Prefix to avoid chaos with special keys.
          selectedValue['$' + selectedValues[i]] = true;
        }

        for (var _i = 0; _i < options.length; _i++) {
          var selected = selectedValue.hasOwnProperty('$' + options[_i].value);

          if (options[_i].selected !== selected) {
            options[_i].selected = selected;
          }

          if (selected && setDefaultSelected) {
            options[_i].defaultSelected = true;
          }
        }
      } else {
        // Do not set `select.value` as exact behavior isn't consistent across all
        // browsers for all cases.
        var _selectedValue = toString(getToStringValue(propValue));

        var defaultSelected = null;

        for (var _i2 = 0; _i2 < options.length; _i2++) {
          if (options[_i2].value === _selectedValue) {
            options[_i2].selected = true;

            if (setDefaultSelected) {
              options[_i2].defaultSelected = true;
            }

            return;
          }

          if (defaultSelected === null && !options[_i2].disabled) {
            defaultSelected = options[_i2];
          }
        }

        if (defaultSelected !== null) {
          defaultSelected.selected = true;
        }
      }
    }
    /**
     * Implements a <select> host component that allows optionally setting the
     * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
     * stringable. If `multiple` is true, the prop must be an array of stringables.
     *
     * If `value` is not supplied (or null/undefined), user actions that change the
     * selected option will trigger updates to the rendered options.
     *
     * If it is supplied (and not null/undefined), the rendered options will not
     * update in response to user actions. Instead, the `value` prop must change in
     * order for the rendered options to update.
     *
     * If `defaultValue` is provided, any options with the supplied values will be
     * selected.
     */


    function getHostProps$2(element, props) {
      return _assign({}, props, {
        value: undefined
      });
    }

    function initWrapperState$1(element, props) {
      var node = element;
      {
        checkSelectPropTypes(props);
      }
      node._wrapperState = {
        wasMultiple: !!props.multiple
      };
      {
        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {
          warning$1(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components');
          didWarnValueDefaultValue$1 = true;
        }
      }
    }

    function postMountWrapper$2(element, props) {
      var node = element;
      node.multiple = !!props.multiple;
      var value = props.value;

      if (value != null) {
        updateOptions(node, !!props.multiple, value, false);
      } else if (props.defaultValue != null) {
        updateOptions(node, !!props.multiple, props.defaultValue, true);
      }
    }

    function postUpdateWrapper(element, props) {
      var node = element;
      var wasMultiple = node._wrapperState.wasMultiple;
      node._wrapperState.wasMultiple = !!props.multiple;
      var value = props.value;

      if (value != null) {
        updateOptions(node, !!props.multiple, value, false);
      } else if (wasMultiple !== !!props.multiple) {
        // For simplicity, reapply `defaultValue` if `multiple` is toggled.
        if (props.defaultValue != null) {
          updateOptions(node, !!props.multiple, props.defaultValue, true);
        } else {
          // Revert the select back to its default unselected state.
          updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);
        }
      }
    }

    function restoreControlledState$2(element, props) {
      var node = element;
      var value = props.value;

      if (value != null) {
        updateOptions(node, !!props.multiple, value, false);
      }
    }

    var didWarnValDefaultVal = false;
    /**
     * Implements a <textarea> host component that allows setting `value`, and
     * `defaultValue`. This differs from the traditional DOM API because value is
     * usually set as PCDATA children.
     *
     * If `value` is not supplied (or null/undefined), user actions that affect the
     * value will trigger updates to the element.
     *
     * If `value` is supplied (and not null/undefined), the rendered element will
     * not trigger updates to the element. Instead, the `value` prop must change in
     * order for the rendered element to be updated.
     *
     * The rendered element will be initialized with an empty value, the prop
     * `defaultValue` if specified, or the children content (deprecated).
     */

    function getHostProps$3(element, props) {
      var node = element;

      (function () {
        if (!(props.dangerouslySetInnerHTML == null)) {
          {
            throw ReactError(Error("`dangerouslySetInnerHTML` does not make sense on <textarea>."));
          }
        }
      })(); // Always set children to the same thing. In IE9, the selection range will
      // get reset if `textContent` is mutated.  We could add a check in setTextContent
      // to only set the value if/when the value differs from the node value (which would
      // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
      // solution. The value can be a boolean or object so that's why it's forced
      // to be a string.


      var hostProps = _assign({}, props, {
        value: undefined,
        defaultValue: undefined,
        children: toString(node._wrapperState.initialValue)
      });

      return hostProps;
    }

    function initWrapperState$2(element, props) {
      var node = element;
      {
        ReactControlledValuePropTypes.checkPropTypes('textarea', props);

        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
          warning$1(false, '%s contains a textarea with both value and defaultValue props. ' + 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component');
          didWarnValDefaultVal = true;
        }
      }
      var initialValue = props.value; // Only bother fetching default value if we're going to use it

      if (initialValue == null) {
        var defaultValue = props.defaultValue; // TODO (yungsters): Remove support for children content in <textarea>.

        var children = props.children;

        if (children != null) {
          {
            warning$1(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.');
          }

          (function () {
            if (!(defaultValue == null)) {
              {
                throw ReactError(Error("If you supply `defaultValue` on a <textarea>, do not pass children."));
              }
            }
          })();

          if (Array.isArray(children)) {
            (function () {
              if (!(children.length <= 1)) {
                {
                  throw ReactError(Error("<textarea> can only have at most one child."));
                }
              }
            })();

            children = children[0];
          }

          defaultValue = children;
        }

        if (defaultValue == null) {
          defaultValue = '';
        }

        initialValue = defaultValue;
      }

      node._wrapperState = {
        initialValue: getToStringValue(initialValue)
      };
    }

    function updateWrapper$1(element, props) {
      var node = element;
      var value = getToStringValue(props.value);
      var defaultValue = getToStringValue(props.defaultValue);

      if (value != null) {
        // Cast `value` to a string to ensure the value is set correctly. While
        // browsers typically do this as necessary, jsdom doesn't.
        var newValue = toString(value); // To avoid side effects (such as losing text selection), only set value if changed

        if (newValue !== node.value) {
          node.value = newValue;
        }

        if (props.defaultValue == null && node.defaultValue !== newValue) {
          node.defaultValue = newValue;
        }
      }

      if (defaultValue != null) {
        node.defaultValue = toString(defaultValue);
      }
    }

    function postMountWrapper$3(element, props) {
      var node = element; // This is in postMount because we need access to the DOM node, which is not
      // available until after the component has mounted.

      var textContent = node.textContent; // Only set node.value if textContent is equal to the expected
      // initial value. In IE10/IE11 there is a bug where the placeholder attribute
      // will populate textContent as well.
      // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/

      if (textContent === node._wrapperState.initialValue) {
        if (textContent !== '' && textContent !== null) {
          node.value = textContent;
        }
      }
    }

    function restoreControlledState$3(element, props) {
      // DOM component is still mounted; update
      updateWrapper$1(element, props);
    }

    var HTML_NAMESPACE$1 = 'http://www.w3.org/1999/xhtml';
    var MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
    var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';
    var Namespaces = {
      html: HTML_NAMESPACE$1,
      mathml: MATH_NAMESPACE,
      svg: SVG_NAMESPACE
    }; // Assumes there is no parent namespace.

    function getIntrinsicNamespace(type) {
      switch (type) {
        case 'svg':
          return SVG_NAMESPACE;

        case 'math':
          return MATH_NAMESPACE;

        default:
          return HTML_NAMESPACE$1;
      }
    }

    function getChildNamespace(parentNamespace, type) {
      if (parentNamespace == null || parentNamespace === HTML_NAMESPACE$1) {
        // No (or default) parent namespace: potential entry point.
        return getIntrinsicNamespace(type);
      }

      if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {
        // We're leaving SVG.
        return HTML_NAMESPACE$1;
      } // By default, pass namespace below.


      return parentNamespace;
    }
    /* globals MSApp */

    /**
     * Create a function which has 'unsafe' privileges (required by windows8 apps)
     */


    var createMicrosoftUnsafeLocalFunction = function (func) {
      if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
        return function (arg0, arg1, arg2, arg3) {
          MSApp.execUnsafeLocalFunction(function () {
            return func(arg0, arg1, arg2, arg3);
          });
        };
      } else {
        return func;
      }
    };

    var reusableSVGContainer;
    /**
     * Set the innerHTML property of a node
     *
     * @param {DOMElement} node
     * @param {string} html
     * @internal
     */

    var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
      if (node.namespaceURI === Namespaces.svg) {
        {
          if (enableTrustedTypesIntegration) {
            // TODO: reconsider the text of this warning and when it should show
            // before enabling the feature flag.
            !(typeof trustedTypes === 'undefined') ? warning$1(false, "Using 'dangerouslySetInnerHTML' in an svg element with " + 'Trusted Types enabled in an Internet Explorer will cause ' + 'the trusted value to be converted to string. Assigning string ' + "to 'innerHTML' will throw an error if Trusted Types are enforced. " + "You can try to wrap your svg element inside a div and use 'dangerouslySetInnerHTML' " + 'on the enclosing div instead.') : void 0;
          }
        }

        if (!('innerHTML' in node)) {
          // IE does not have innerHTML for SVG nodes, so instead we inject the
          // new markup in a temp node and then move the child nodes across into
          // the target node
          reusableSVGContainer = reusableSVGContainer || document.createElement('div');
          reusableSVGContainer.innerHTML = '<svg>' + html.valueOf().toString() + '</svg>';
          var svgNode = reusableSVGContainer.firstChild;

          while (node.firstChild) {
            node.removeChild(node.firstChild);
          }

          while (svgNode.firstChild) {
            node.appendChild(svgNode.firstChild);
          }

          return;
        }
      }

      node.innerHTML = html;
    });
    /**
     * HTML nodeType values that represent the type of the node
     */

    var ELEMENT_NODE = 1;
    var TEXT_NODE = 3;
    var COMMENT_NODE = 8;
    var DOCUMENT_NODE = 9;
    var DOCUMENT_FRAGMENT_NODE = 11;
    /**
     * Set the textContent property of a node. For text updates, it's faster
     * to set the `nodeValue` of the Text node directly instead of using
     * `.textContent` which will remove the existing node and create a new one.
     *
     * @param {DOMElement} node
     * @param {string} text
     * @internal
     */

    var setTextContent = function (node, text) {
      if (text) {
        var firstChild = node.firstChild;

        if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
          firstChild.nodeValue = text;
          return;
        }
      }

      node.textContent = text;
    }; // Do not use the below two methods directly!
    // Instead use constants exported from DOMTopLevelEventTypes in ReactDOM.
    // (It is the only module that is allowed to access these methods.)


    function unsafeCastStringToDOMTopLevelType(topLevelType) {
      return topLevelType;
    }

    function unsafeCastDOMTopLevelTypeToString(topLevelType) {
      return topLevelType;
    }
    /**
     * Generate a mapping of standard vendor prefixes using the defined style property and event name.
     *
     * @param {string} styleProp
     * @param {string} eventName
     * @returns {object}
     */


    function makePrefixMap(styleProp, eventName) {
      var prefixes = {};
      prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
      prefixes['Webkit' + styleProp] = 'webkit' + eventName;
      prefixes['Moz' + styleProp] = 'moz' + eventName;
      return prefixes;
    }
    /**
     * A list of event names to a configurable list of vendor prefixes.
     */


    var vendorPrefixes = {
      animationend: makePrefixMap('Animation', 'AnimationEnd'),
      animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
      animationstart: makePrefixMap('Animation', 'AnimationStart'),
      transitionend: makePrefixMap('Transition', 'TransitionEnd')
    };
    /**
     * Event names that have already been detected and prefixed (if applicable).
     */

    var prefixedEventNames = {};
    /**
     * Element to check for prefixes on.
     */

    var style = {};
    /**
     * Bootstrap if a DOM exists.
     */

    if (canUseDOM) {
      style = document.createElement('div').style; // On some platforms, in particular some releases of Android 4.x,
      // the un-prefixed "animation" and "transition" properties are defined on the
      // style object but the events that fire will still be prefixed, so we need
      // to check if the un-prefixed events are usable, and if not remove them from the map.

      if (!('AnimationEvent' in window)) {
        delete vendorPrefixes.animationend.animation;
        delete vendorPrefixes.animationiteration.animation;
        delete vendorPrefixes.animationstart.animation;
      } // Same as above


      if (!('TransitionEvent' in window)) {
        delete vendorPrefixes.transitionend.transition;
      }
    }
    /**
     * Attempts to determine the correct vendor prefixed event name.
     *
     * @param {string} eventName
     * @returns {string}
     */


    function getVendorPrefixedEventName(eventName) {
      if (prefixedEventNames[eventName]) {
        return prefixedEventNames[eventName];
      } else if (!vendorPrefixes[eventName]) {
        return eventName;
      }

      var prefixMap = vendorPrefixes[eventName];

      for (var styleProp in prefixMap) {
        if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
          return prefixedEventNames[eventName] = prefixMap[styleProp];
        }
      }

      return eventName;
    }
    /**
     * To identify top level events in ReactDOM, we use constants defined by this
     * module. This is the only module that uses the unsafe* methods to express
     * that the constants actually correspond to the browser event names. This lets
     * us save some bundle size by avoiding a top level type -> event name map.
     * The rest of ReactDOM code should import top level types from this file.
     */


    var TOP_ABORT = unsafeCastStringToDOMTopLevelType('abort');
    var TOP_ANIMATION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationend'));
    var TOP_ANIMATION_ITERATION = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationiteration'));
    var TOP_ANIMATION_START = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationstart'));
    var TOP_BLUR = unsafeCastStringToDOMTopLevelType('blur');
    var TOP_CAN_PLAY = unsafeCastStringToDOMTopLevelType('canplay');
    var TOP_CAN_PLAY_THROUGH = unsafeCastStringToDOMTopLevelType('canplaythrough');
    var TOP_CANCEL = unsafeCastStringToDOMTopLevelType('cancel');
    var TOP_CHANGE = unsafeCastStringToDOMTopLevelType('change');
    var TOP_CLICK = unsafeCastStringToDOMTopLevelType('click');
    var TOP_CLOSE = unsafeCastStringToDOMTopLevelType('close');
    var TOP_COMPOSITION_END = unsafeCastStringToDOMTopLevelType('compositionend');
    var TOP_COMPOSITION_START = unsafeCastStringToDOMTopLevelType('compositionstart');
    var TOP_COMPOSITION_UPDATE = unsafeCastStringToDOMTopLevelType('compositionupdate');
    var TOP_CONTEXT_MENU = unsafeCastStringToDOMTopLevelType('contextmenu');
    var TOP_COPY = unsafeCastStringToDOMTopLevelType('copy');
    var TOP_CUT = unsafeCastStringToDOMTopLevelType('cut');
    var TOP_DOUBLE_CLICK = unsafeCastStringToDOMTopLevelType('dblclick');
    var TOP_AUX_CLICK = unsafeCastStringToDOMTopLevelType('auxclick');
    var TOP_DRAG = unsafeCastStringToDOMTopLevelType('drag');
    var TOP_DRAG_END = unsafeCastStringToDOMTopLevelType('dragend');
    var TOP_DRAG_ENTER = unsafeCastStringToDOMTopLevelType('dragenter');
    var TOP_DRAG_EXIT = unsafeCastStringToDOMTopLevelType('dragexit');
    var TOP_DRAG_LEAVE = unsafeCastStringToDOMTopLevelType('dragleave');
    var TOP_DRAG_OVER = unsafeCastStringToDOMTopLevelType('dragover');
    var TOP_DRAG_START = unsafeCastStringToDOMTopLevelType('dragstart');
    var TOP_DROP = unsafeCastStringToDOMTopLevelType('drop');
    var TOP_DURATION_CHANGE = unsafeCastStringToDOMTopLevelType('durationchange');
    var TOP_EMPTIED = unsafeCastStringToDOMTopLevelType('emptied');
    var TOP_ENCRYPTED = unsafeCastStringToDOMTopLevelType('encrypted');
    var TOP_ENDED = unsafeCastStringToDOMTopLevelType('ended');
    var TOP_ERROR = unsafeCastStringToDOMTopLevelType('error');
    var TOP_FOCUS = unsafeCastStringToDOMTopLevelType('focus');
    var TOP_GOT_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('gotpointercapture');
    var TOP_INPUT = unsafeCastStringToDOMTopLevelType('input');
    var TOP_INVALID = unsafeCastStringToDOMTopLevelType('invalid');
    var TOP_KEY_DOWN = unsafeCastStringToDOMTopLevelType('keydown');
    var TOP_KEY_PRESS = unsafeCastStringToDOMTopLevelType('keypress');
    var TOP_KEY_UP = unsafeCastStringToDOMTopLevelType('keyup');
    var TOP_LOAD = unsafeCastStringToDOMTopLevelType('load');
    var TOP_LOAD_START = unsafeCastStringToDOMTopLevelType('loadstart');
    var TOP_LOADED_DATA = unsafeCastStringToDOMTopLevelType('loadeddata');
    var TOP_LOADED_METADATA = unsafeCastStringToDOMTopLevelType('loadedmetadata');
    var TOP_LOST_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('lostpointercapture');
    var TOP_MOUSE_DOWN = unsafeCastStringToDOMTopLevelType('mousedown');
    var TOP_MOUSE_MOVE = unsafeCastStringToDOMTopLevelType('mousemove');
    var TOP_MOUSE_OUT = unsafeCastStringToDOMTopLevelType('mouseout');
    var TOP_MOUSE_OVER = unsafeCastStringToDOMTopLevelType('mouseover');
    var TOP_MOUSE_UP = unsafeCastStringToDOMTopLevelType('mouseup');
    var TOP_PASTE = unsafeCastStringToDOMTopLevelType('paste');
    var TOP_PAUSE = unsafeCastStringToDOMTopLevelType('pause');
    var TOP_PLAY = unsafeCastStringToDOMTopLevelType('play');
    var TOP_PLAYING = unsafeCastStringToDOMTopLevelType('playing');
    var TOP_POINTER_CANCEL = unsafeCastStringToDOMTopLevelType('pointercancel');
    var TOP_POINTER_DOWN = unsafeCastStringToDOMTopLevelType('pointerdown');
    var TOP_POINTER_MOVE = unsafeCastStringToDOMTopLevelType('pointermove');
    var TOP_POINTER_OUT = unsafeCastStringToDOMTopLevelType('pointerout');
    var TOP_POINTER_OVER = unsafeCastStringToDOMTopLevelType('pointerover');
    var TOP_POINTER_UP = unsafeCastStringToDOMTopLevelType('pointerup');
    var TOP_PROGRESS = unsafeCastStringToDOMTopLevelType('progress');
    var TOP_RATE_CHANGE = unsafeCastStringToDOMTopLevelType('ratechange');
    var TOP_RESET = unsafeCastStringToDOMTopLevelType('reset');
    var TOP_SCROLL = unsafeCastStringToDOMTopLevelType('scroll');
    var TOP_SEEKED = unsafeCastStringToDOMTopLevelType('seeked');
    var TOP_SEEKING = unsafeCastStringToDOMTopLevelType('seeking');
    var TOP_SELECTION_CHANGE = unsafeCastStringToDOMTopLevelType('selectionchange');
    var TOP_STALLED = unsafeCastStringToDOMTopLevelType('stalled');
    var TOP_SUBMIT = unsafeCastStringToDOMTopLevelType('submit');
    var TOP_SUSPEND = unsafeCastStringToDOMTopLevelType('suspend');
    var TOP_TEXT_INPUT = unsafeCastStringToDOMTopLevelType('textInput');
    var TOP_TIME_UPDATE = unsafeCastStringToDOMTopLevelType('timeupdate');
    var TOP_TOGGLE = unsafeCastStringToDOMTopLevelType('toggle');
    var TOP_TOUCH_CANCEL = unsafeCastStringToDOMTopLevelType('touchcancel');
    var TOP_TOUCH_END = unsafeCastStringToDOMTopLevelType('touchend');
    var TOP_TOUCH_MOVE = unsafeCastStringToDOMTopLevelType('touchmove');
    var TOP_TOUCH_START = unsafeCastStringToDOMTopLevelType('touchstart');
    var TOP_TRANSITION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('transitionend'));
    var TOP_VOLUME_CHANGE = unsafeCastStringToDOMTopLevelType('volumechange');
    var TOP_WAITING = unsafeCastStringToDOMTopLevelType('waiting');
    var TOP_WHEEL = unsafeCastStringToDOMTopLevelType('wheel'); // List of events that need to be individually attached to media elements.
    // Note that events in this list will *not* be listened to at the top level
    // unless they're explicitly whitelisted in `ReactBrowserEventEmitter.listenTo`.

    var mediaEventTypes = [TOP_ABORT, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_VOLUME_CHANGE, TOP_WAITING];

    function getRawEventName(topLevelType) {
      return unsafeCastDOMTopLevelTypeToString(topLevelType);
    }

    var attemptSynchronousHydration;

    function setAttemptSynchronousHydration(fn) {
      attemptSynchronousHydration = fn;
    } // TODO: Upgrade this definition once we're on a newer version of Flow that
    // has this definition built-in.


    var hasScheduledReplayAttempt = false; // The queue of discrete events to be replayed.

    var queuedDiscreteEvents = []; // Indicates if any continuous event targets are non-null for early bailout.
    // if the last target was dehydrated.

    var queuedFocus = null;
    var queuedDrag = null;
    var queuedMouse = null; // For pointer events there can be one latest event per pointerId.

    var queuedPointers = new Map();
    var queuedPointerCaptures = new Map(); // We could consider replaying selectionchange and touchmoves too.

    function hasQueuedDiscreteEvents() {
      return queuedDiscreteEvents.length > 0;
    }

    var discreteReplayableEvents = [TOP_MOUSE_DOWN, TOP_MOUSE_UP, TOP_TOUCH_CANCEL, TOP_TOUCH_END, TOP_TOUCH_START, TOP_AUX_CLICK, TOP_DOUBLE_CLICK, TOP_POINTER_CANCEL, TOP_POINTER_DOWN, TOP_POINTER_UP, TOP_DRAG_END, TOP_DRAG_START, TOP_DROP, TOP_COMPOSITION_END, TOP_COMPOSITION_START, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_INPUT, TOP_TEXT_INPUT, TOP_CLOSE, TOP_CANCEL, TOP_COPY, TOP_CUT, TOP_PASTE, TOP_CLICK, TOP_CHANGE, TOP_CONTEXT_MENU, TOP_RESET, TOP_SUBMIT];
    var continuousReplayableEvents = [TOP_FOCUS, TOP_BLUR, TOP_DRAG_ENTER, TOP_DRAG_LEAVE, TOP_MOUSE_OVER, TOP_MOUSE_OUT, TOP_POINTER_OVER, TOP_POINTER_OUT, TOP_GOT_POINTER_CAPTURE, TOP_LOST_POINTER_CAPTURE];

    function isReplayableDiscreteEvent(eventType) {
      return discreteReplayableEvents.indexOf(eventType) > -1;
    }

    function trapReplayableEvent(topLevelType, document, listeningSet) {
      listenToTopLevel(topLevelType, document, listeningSet);

      if (enableFlareAPI) {
        // Trap events for the responder system.
        var passiveEventKey = unsafeCastDOMTopLevelTypeToString(topLevelType) + '_passive';

        if (!listeningSet.has(passiveEventKey)) {
          trapEventForResponderEventSystem(document, topLevelType, true);
          listeningSet.add(passiveEventKey);
        } // TODO: This listens to all events as active which might have
        // undesirable effects. It's also unnecessary to have both
        // passive and active listeners. Instead, we could start with
        // a passive and upgrade it to an active one if needed.
        // For replaying purposes the active is never needed since we
        // currently don't preventDefault.


        var activeEventKey = unsafeCastDOMTopLevelTypeToString(topLevelType) + '_active';

        if (!listeningSet.has(activeEventKey)) {
          trapEventForResponderEventSystem(document, topLevelType, false);
          listeningSet.add(activeEventKey);
        }
      }
    }

    function eagerlyTrapReplayableEvents(document) {
      var listeningSet = getListeningSetForElement(document); // Discrete

      discreteReplayableEvents.forEach(function (topLevelType) {
        trapReplayableEvent(topLevelType, document, listeningSet);
      }); // Continuous

      continuousReplayableEvents.forEach(function (topLevelType) {
        trapReplayableEvent(topLevelType, document, listeningSet);
      });
    }

    function createQueuedReplayableEvent(blockedOn, topLevelType, eventSystemFlags, nativeEvent) {
      return {
        blockedOn: blockedOn,
        topLevelType: topLevelType,
        eventSystemFlags: eventSystemFlags | IS_REPLAYED,
        nativeEvent: nativeEvent
      };
    }

    function queueDiscreteEvent(blockedOn, topLevelType, eventSystemFlags, nativeEvent) {
      var queuedEvent = createQueuedReplayableEvent(blockedOn, topLevelType, eventSystemFlags, nativeEvent);
      queuedDiscreteEvents.push(queuedEvent);

      if (enableSelectiveHydration) {
        if (queuedDiscreteEvents.length === 1) {
          // If this was the first discrete event, we might be able to
          // synchronously unblock it so that preventDefault still works.
          while (queuedEvent.blockedOn !== null) {
            var _fiber = getInstanceFromNode$1(queuedEvent.blockedOn);

            if (_fiber === null) {
              break;
            }

            attemptSynchronousHydration(_fiber);

            if (queuedEvent.blockedOn === null) {
              // We got unblocked by hydration. Let's try again.
              replayUnblockedEvents(); // If we're reblocked, on an inner boundary, we might need
              // to attempt hydrating that one.

              continue;
            } else {
              // We're still blocked from hydation, we have to give up
              // and replay later.
              break;
            }
          }
        }
      }
    } // Resets the replaying for this type of continuous event to no event.


    function clearIfContinuousEvent(topLevelType, nativeEvent) {
      switch (topLevelType) {
        case TOP_FOCUS:
        case TOP_BLUR:
          queuedFocus = null;
          break;

        case TOP_DRAG_ENTER:
        case TOP_DRAG_LEAVE:
          queuedDrag = null;
          break;

        case TOP_MOUSE_OVER:
        case TOP_MOUSE_OUT:
          queuedMouse = null;
          break;

        case TOP_POINTER_OVER:
        case TOP_POINTER_OUT:
          {
            var pointerId = nativeEvent.pointerId;
            queuedPointers.delete(pointerId);
            break;
          }

        case TOP_GOT_POINTER_CAPTURE:
        case TOP_LOST_POINTER_CAPTURE:
          {
            var _pointerId = nativeEvent.pointerId;
            queuedPointerCaptures.delete(_pointerId);
            break;
          }
      }
    }

    function accumulateOrCreateQueuedReplayableEvent(existingQueuedEvent, blockedOn, topLevelType, eventSystemFlags, nativeEvent) {
      if (existingQueuedEvent === null || existingQueuedEvent.nativeEvent !== nativeEvent) {
        return createQueuedReplayableEvent(blockedOn, topLevelType, eventSystemFlags, nativeEvent);
      } // If we have already queued this exact event, then it's because
      // the different event systems have different DOM event listeners.
      // We can accumulate the flags and store a single event to be
      // replayed.


      existingQueuedEvent.eventSystemFlags |= eventSystemFlags;
      return existingQueuedEvent;
    }

    function queueIfContinuousEvent(blockedOn, topLevelType, eventSystemFlags, nativeEvent) {
      // These set relatedTarget to null because the replayed event will be treated as if we
      // moved from outside the window (no target) onto the target once it hydrates.
      // Instead of mutating we could clone the event.
      switch (topLevelType) {
        case TOP_FOCUS:
          {
            var focusEvent = nativeEvent;
            queuedFocus = accumulateOrCreateQueuedReplayableEvent(queuedFocus, blockedOn, topLevelType, eventSystemFlags, focusEvent);
            return true;
          }

        case TOP_DRAG_ENTER:
          {
            var dragEvent = nativeEvent;
            queuedDrag = accumulateOrCreateQueuedReplayableEvent(queuedDrag, blockedOn, topLevelType, eventSystemFlags, dragEvent);
            return true;
          }

        case TOP_MOUSE_OVER:
          {
            var mouseEvent = nativeEvent;
            queuedMouse = accumulateOrCreateQueuedReplayableEvent(queuedMouse, blockedOn, topLevelType, eventSystemFlags, mouseEvent);
            return true;
          }

        case TOP_POINTER_OVER:
          {
            var pointerEvent = nativeEvent;
            var pointerId = pointerEvent.pointerId;
            queuedPointers.set(pointerId, accumulateOrCreateQueuedReplayableEvent(queuedPointers.get(pointerId) || null, blockedOn, topLevelType, eventSystemFlags, pointerEvent));
            return true;
          }

        case TOP_GOT_POINTER_CAPTURE:
          {
            var _pointerEvent = nativeEvent;
            var _pointerId2 = _pointerEvent.pointerId;
            queuedPointerCaptures.set(_pointerId2, accumulateOrCreateQueuedReplayableEvent(queuedPointerCaptures.get(_pointerId2) || null, blockedOn, topLevelType, eventSystemFlags, _pointerEvent));
            return true;
          }
      }

      return false;
    }

    function attemptReplayQueuedEvent(queuedEvent) {
      if (queuedEvent.blockedOn !== null) {
        return false;
      }

      var nextBlockedOn = attemptToDispatchEvent(queuedEvent.topLevelType, queuedEvent.eventSystemFlags, queuedEvent.nativeEvent);

      if (nextBlockedOn !== null) {
        // We're still blocked. Try again later.
        queuedEvent.blockedOn = nextBlockedOn;
        return false;
      }

      return true;
    }

    function attemptReplayQueuedEventInMap(queuedEvent, key, map) {
      if (attemptReplayQueuedEvent(queuedEvent)) {
        map.delete(key);
      }
    }

    function replayUnblockedEvents() {
      hasScheduledReplayAttempt = false; // First replay discrete events.

      while (queuedDiscreteEvents.length > 0) {
        var nextDiscreteEvent = queuedDiscreteEvents[0];

        if (nextDiscreteEvent.blockedOn !== null) {
          // We're still blocked.
          break;
        }

        var nextBlockedOn = attemptToDispatchEvent(nextDiscreteEvent.topLevelType, nextDiscreteEvent.eventSystemFlags, nextDiscreteEvent.nativeEvent);

        if (nextBlockedOn !== null) {
          // We're still blocked. Try again later.
          nextDiscreteEvent.blockedOn = nextBlockedOn;
        } else {
          // We've successfully replayed the first event. Let's try the next one.
          queuedDiscreteEvents.shift();
        }
      } // Next replay any continuous events.


      if (queuedFocus !== null && attemptReplayQueuedEvent(queuedFocus)) {
        queuedFocus = null;
      }

      if (queuedDrag !== null && attemptReplayQueuedEvent(queuedDrag)) {
        queuedDrag = null;
      }

      if (queuedMouse !== null && attemptReplayQueuedEvent(queuedMouse)) {
        queuedMouse = null;
      }

      queuedPointers.forEach(attemptReplayQueuedEventInMap);
      queuedPointerCaptures.forEach(attemptReplayQueuedEventInMap);
    }

    function scheduleCallbackIfUnblocked(queuedEvent, unblocked) {
      if (queuedEvent.blockedOn === unblocked) {
        queuedEvent.blockedOn = null;

        if (!hasScheduledReplayAttempt) {
          hasScheduledReplayAttempt = true; // Schedule a callback to attempt replaying as many events as are
          // now unblocked. This first might not actually be unblocked yet.
          // We could check it early to avoid scheduling an unnecessary callback.

          Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority, replayUnblockedEvents);
        }
      }
    }

    function retryIfBlockedOn(unblocked) {
      // Mark anything that was blocked on this as no longer blocked
      // and eligible for a replay.
      if (queuedDiscreteEvents.length > 0) {
        scheduleCallbackIfUnblocked(queuedDiscreteEvents[0], unblocked); // This is a exponential search for each boundary that commits. I think it's
        // worth it because we expect very few discrete events to queue up and once
        // we are actually fully unblocked it will be fast to replay them.

        for (var i = 1; i < queuedDiscreteEvents.length; i++) {
          var queuedEvent = queuedDiscreteEvents[i];

          if (queuedEvent.blockedOn === unblocked) {
            queuedEvent.blockedOn = null;
          }
        }
      }

      if (queuedFocus !== null) {
        scheduleCallbackIfUnblocked(queuedFocus, unblocked);
      }

      if (queuedDrag !== null) {
        scheduleCallbackIfUnblocked(queuedDrag, unblocked);
      }

      if (queuedMouse !== null) {
        scheduleCallbackIfUnblocked(queuedMouse, unblocked);
      }

      var unblock = function (queuedEvent) {
        return scheduleCallbackIfUnblocked(queuedEvent, unblocked);
      };

      queuedPointers.forEach(unblock);
      queuedPointerCaptures.forEach(unblock);
    }
    /**
     * `ReactInstanceMap` maintains a mapping from a public facing stateful
     * instance (key) and the internal representation (value). This allows public
     * methods to accept the user facing instance as an argument and map them back
     * to internal methods.
     *
     * Note that this module is currently shared and assumed to be stateless.
     * If this becomes an actual Map, that will break.
     */

    /**
     * This API should be called `delete` but we'd have to make sure to always
     * transform these to strings for IE support. When this transform is fully
     * supported we can rename it.
     */


    function get(key) {
      return key._reactInternalFiber;
    }

    function has(key) {
      return key._reactInternalFiber !== undefined;
    }

    function set(key, value) {
      key._reactInternalFiber = value;
    } // Don't change these two values. They're used by React Dev Tools.


    var NoEffect =
    /*              */
    0;
    var PerformedWork =
    /*         */
    1; // You can change the rest (and add more).

    var Placement =
    /*             */
    2;
    var Update =
    /*                */
    4;
    var PlacementAndUpdate =
    /*    */
    6;
    var Deletion =
    /*              */
    8;
    var ContentReset =
    /*          */
    16;
    var Callback =
    /*              */
    32;
    var DidCapture =
    /*            */
    64;
    var Ref =
    /*                   */
    128;
    var Snapshot =
    /*              */
    256;
    var Passive =
    /*               */
    512;
    var Hydrating =
    /*             */
    1024;
    var HydratingAndUpdate =
    /*    */
    1028; // Passive & Update & Callback & Ref & Snapshot

    var LifecycleEffectMask =
    /*   */
    932; // Union of all host effects

    var HostEffectMask =
    /*        */
    2047;
    var Incomplete =
    /*            */
    2048;
    var ShouldCapture =
    /*         */
    4096;
    var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;

    function getNearestMountedFiber(fiber) {
      var node = fiber;
      var nearestMounted = fiber;

      if (!fiber.alternate) {
        // If there is no alternate, this might be a new tree that isn't inserted
        // yet. If it is, then it will have a pending insertion effect on it.
        var nextNode = node;

        do {
          node = nextNode;

          if ((node.effectTag & (Placement | Hydrating)) !== NoEffect) {
            // This is an insertion or in-progress hydration. The nearest possible
            // mounted fiber is the parent but we need to continue to figure out
            // if that one is still mounted.
            nearestMounted = node.return;
          }

          nextNode = node.return;
        } while (nextNode);
      } else {
        while (node.return) {
          node = node.return;
        }
      }

      if (node.tag === HostRoot) {
        // TODO: Check if this was a nested HostRoot when used with
        // renderContainerIntoSubtree.
        return nearestMounted;
      } // If we didn't hit the root, that means that we're in an disconnected tree
      // that has been unmounted.


      return null;
    }

    function getSuspenseInstanceFromFiber(fiber) {
      if (fiber.tag === SuspenseComponent) {
        var suspenseState = fiber.memoizedState;

        if (suspenseState === null) {
          var current = fiber.alternate;

          if (current !== null) {
            suspenseState = current.memoizedState;
          }
        }

        if (suspenseState !== null) {
          return suspenseState.dehydrated;
        }
      }

      return null;
    }

    function getContainerFromFiber(fiber) {
      return fiber.tag === HostRoot ? fiber.stateNode.containerInfo : null;
    }

    function isFiberMounted(fiber) {
      return getNearestMountedFiber(fiber) === fiber;
    }

    function isMounted(component) {
      {
        var owner = ReactCurrentOwner$1.current;

        if (owner !== null && owner.tag === ClassComponent) {
          var ownerFiber = owner;
          var instance = ownerFiber.stateNode;
          !instance._warnedAboutRefsInRender ? warningWithoutStack$1(false, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(ownerFiber.type) || 'A component') : void 0;
          instance._warnedAboutRefsInRender = true;
        }
      }
      var fiber = get(component);

      if (!fiber) {
        return false;
      }

      return getNearestMountedFiber(fiber) === fiber;
    }

    function assertIsMounted(fiber) {
      (function () {
        if (!(getNearestMountedFiber(fiber) === fiber)) {
          {
            throw ReactError(Error("Unable to find node on an unmounted component."));
          }
        }
      })();
    }

    function findCurrentFiberUsingSlowPath(fiber) {
      var alternate = fiber.alternate;

      if (!alternate) {
        // If there is no alternate, then we only need to check if it is mounted.
        var nearestMounted = getNearestMountedFiber(fiber);

        (function () {
          if (!(nearestMounted !== null)) {
            {
              throw ReactError(Error("Unable to find node on an unmounted component."));
            }
          }
        })();

        if (nearestMounted !== fiber) {
          return null;
        }

        return fiber;
      } // If we have two possible branches, we'll walk backwards up to the root
      // to see what path the root points to. On the way we may hit one of the
      // special cases and we'll deal with them.


      var a = fiber;
      var b = alternate;

      while (true) {
        var parentA = a.return;

        if (parentA === null) {
          // We're at the root.
          break;
        }

        var parentB = parentA.alternate;

        if (parentB === null) {
          // There is no alternate. This is an unusual case. Currently, it only
          // happens when a Suspense component is hidden. An extra fragment fiber
          // is inserted in between the Suspense fiber and its children. Skip
          // over this extra fragment fiber and proceed to the next parent.
          var nextParent = parentA.return;

          if (nextParent !== null) {
            a = b = nextParent;
            continue;
          } // If there's no parent, we're at the root.


          break;
        } // If both copies of the parent fiber point to the same child, we can
        // assume that the child is current. This happens when we bailout on low
        // priority: the bailed out fiber's child reuses the current child.


        if (parentA.child === parentB.child) {
          var child = parentA.child;

          while (child) {
            if (child === a) {
              // We've determined that A is the current branch.
              assertIsMounted(parentA);
              return fiber;
            }

            if (child === b) {
              // We've determined that B is the current branch.
              assertIsMounted(parentA);
              return alternate;
            }

            child = child.sibling;
          } // We should never have an alternate for any mounting node. So the only
          // way this could possibly happen is if this was unmounted, if at all.


          (function () {
            {
              {
                throw ReactError(Error("Unable to find node on an unmounted component."));
              }
            }
          })();
        }

        if (a.return !== b.return) {
          // The return pointer of A and the return pointer of B point to different
          // fibers. We assume that return pointers never criss-cross, so A must
          // belong to the child set of A.return, and B must belong to the child
          // set of B.return.
          a = parentA;
          b = parentB;
        } else {
          // The return pointers point to the same fiber. We'll have to use the
          // default, slow path: scan the child sets of each parent alternate to see
          // which child belongs to which set.
          //
          // Search parent A's child set
          var didFindChild = false;
          var _child = parentA.child;

          while (_child) {
            if (_child === a) {
              didFindChild = true;
              a = parentA;
              b = parentB;
              break;
            }

            if (_child === b) {
              didFindChild = true;
              b = parentA;
              a = parentB;
              break;
            }

            _child = _child.sibling;
          }

          if (!didFindChild) {
            // Search parent B's child set
            _child = parentB.child;

            while (_child) {
              if (_child === a) {
                didFindChild = true;
                a = parentB;
                b = parentA;
                break;
              }

              if (_child === b) {
                didFindChild = true;
                b = parentB;
                a = parentA;
                break;
              }

              _child = _child.sibling;
            }

            (function () {
              if (!didFindChild) {
                {
                  throw ReactError(Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue."));
                }
              }
            })();
          }
        }

        (function () {
          if (!(a.alternate === b)) {
            {
              throw ReactError(Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue."));
            }
          }
        })();
      } // If the root is not a host container, we're in a disconnected tree. I.e.
      // unmounted.


      (function () {
        if (!(a.tag === HostRoot)) {
          {
            throw ReactError(Error("Unable to find node on an unmounted component."));
          }
        }
      })();

      if (a.stateNode.current === a) {
        // We've determined that A is the current branch.
        return fiber;
      } // Otherwise B has to be current branch.


      return alternate;
    }

    function findCurrentHostFiber(parent) {
      var currentParent = findCurrentFiberUsingSlowPath(parent);

      if (!currentParent) {
        return null;
      } // Next we'll drill down this component to find the first HostComponent/Text.


      var node = currentParent;

      while (true) {
        if (node.tag === HostComponent || node.tag === HostText) {
          return node;
        } else if (node.child) {
          node.child.return = node;
          node = node.child;
          continue;
        }

        if (node === currentParent) {
          return null;
        }

        while (!node.sibling) {
          if (!node.return || node.return === currentParent) {
            return null;
          }

          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      } // Flow needs the return null here, but ESLint complains about it.
      // eslint-disable-next-line no-unreachable


      return null;
    }

    function findCurrentHostFiberWithNoPortals(parent) {
      var currentParent = findCurrentFiberUsingSlowPath(parent);

      if (!currentParent) {
        return null;
      } // Next we'll drill down this component to find the first HostComponent/Text.


      var node = currentParent;

      while (true) {
        if (node.tag === HostComponent || node.tag === HostText || enableFundamentalAPI && node.tag === FundamentalComponent) {
          return node;
        } else if (node.child && node.tag !== HostPortal) {
          node.child.return = node;
          node = node.child;
          continue;
        }

        if (node === currentParent) {
          return null;
        }

        while (!node.sibling) {
          if (!node.return || node.return === currentParent) {
            return null;
          }

          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      } // Flow needs the return null here, but ESLint complains about it.
      // eslint-disable-next-line no-unreachable


      return null;
    }

    function addEventBubbleListener(element, eventType, listener) {
      element.addEventListener(eventType, listener, false);
    }

    function addEventCaptureListener(element, eventType, listener) {
      element.addEventListener(eventType, listener, true);
    }

    function addEventCaptureListenerWithPassiveFlag(element, eventType, listener, passive) {
      element.addEventListener(eventType, listener, {
        capture: true,
        passive: passive
      });
    }
    /**
     * Gets the target node from a native browser event by accounting for
     * inconsistencies in browser DOM APIs.
     *
     * @param {object} nativeEvent Native browser event.
     * @return {DOMEventTarget} Target node.
     */


    function getEventTarget(nativeEvent) {
      // Fallback to nativeEvent.srcElement for IE9
      // https://github.com/facebook/react/issues/12506
      var target = nativeEvent.target || nativeEvent.srcElement || window; // Normalize SVG <use> element events #4963

      if (target.correspondingUseElement) {
        target = target.correspondingUseElement;
      } // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
      // @see http://www.quirksmode.org/js/events_properties.html


      return target.nodeType === TEXT_NODE ? target.parentNode : target;
    }

    function getParent(inst) {
      do {
        inst = inst.return; // TODO: If this is a HostRoot we might want to bail out.
        // That is depending on if we want nested subtrees (layers) to bubble
        // events to their parent. We could also go through parentNode on the
        // host node but that wouldn't work for React Native and doesn't let us
        // do the portal feature.
      } while (inst && inst.tag !== HostComponent);

      if (inst) {
        return inst;
      }

      return null;
    }
    /**
     * Return the lowest common ancestor of A and B, or null if they are in
     * different trees.
     */


    function getLowestCommonAncestor(instA, instB) {
      var depthA = 0;

      for (var tempA = instA; tempA; tempA = getParent(tempA)) {
        depthA++;
      }

      var depthB = 0;

      for (var tempB = instB; tempB; tempB = getParent(tempB)) {
        depthB++;
      } // If A is deeper, crawl up.


      while (depthA - depthB > 0) {
        instA = getParent(instA);
        depthA--;
      } // If B is deeper, crawl up.


      while (depthB - depthA > 0) {
        instB = getParent(instB);
        depthB--;
      } // Walk in lockstep until we find a match.


      var depth = depthA;

      while (depth--) {
        if (instA === instB || instA === instB.alternate) {
          return instA;
        }

        instA = getParent(instA);
        instB = getParent(instB);
      }

      return null;
    }
    /**
     * Return if A is an ancestor of B.
     */

    /**
     * Return the parent instance of the passed-in instance.
     */

    /**
     * Simulates the traversal of a two-phase, capture/bubble event dispatch.
     */


    function traverseTwoPhase(inst, fn, arg) {
      var path = [];

      while (inst) {
        path.push(inst);
        inst = getParent(inst);
      }

      var i;

      for (i = path.length; i-- > 0;) {
        fn(path[i], 'captured', arg);
      }

      for (i = 0; i < path.length; i++) {
        fn(path[i], 'bubbled', arg);
      }
    }
    /**
     * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
     * should would receive a `mouseEnter` or `mouseLeave` event.
     *
     * Does not invoke the callback on the nearest common ancestor because nothing
     * "entered" or "left" that element.
     */


    function traverseEnterLeave(from, to, fn, argFrom, argTo) {
      var common = from && to ? getLowestCommonAncestor(from, to) : null;
      var pathFrom = [];

      while (true) {
        if (!from) {
          break;
        }

        if (from === common) {
          break;
        }

        var alternate = from.alternate;

        if (alternate !== null && alternate === common) {
          break;
        }

        pathFrom.push(from);
        from = getParent(from);
      }

      var pathTo = [];

      while (true) {
        if (!to) {
          break;
        }

        if (to === common) {
          break;
        }

        var _alternate = to.alternate;

        if (_alternate !== null && _alternate === common) {
          break;
        }

        pathTo.push(to);
        to = getParent(to);
      }

      for (var i = 0; i < pathFrom.length; i++) {
        fn(pathFrom[i], 'bubbled', argFrom);
      }

      for (var _i = pathTo.length; _i-- > 0;) {
        fn(pathTo[_i], 'captured', argTo);
      }
    }
    /**
     * Some event types have a notion of different registration names for different
     * "phases" of propagation. This finds listeners by a given phase.
     */


    function listenerAtPhase(inst, event, propagationPhase) {
      var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
      return getListener(inst, registrationName);
    }
    /**
     * A small set of propagation patterns, each of which will accept a small amount
     * of information, and generate a set of "dispatch ready event objects" - which
     * are sets of events that have already been annotated with a set of dispatched
     * listener functions/ids. The API is designed this way to discourage these
     * propagation strategies from actually executing the dispatches, since we
     * always want to collect the entire set of dispatches before executing even a
     * single one.
     */

    /**
     * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
     * here, allows us to not have to bind or create functions for each event.
     * Mutating the event's members allows us to not have to create a wrapping
     * "dispatch" object that pairs the event with the listener.
     */


    function accumulateDirectionalDispatches(inst, phase, event) {
      {
        !inst ? warningWithoutStack$1(false, 'Dispatching inst must not be null') : void 0;
      }
      var listener = listenerAtPhase(inst, event, phase);

      if (listener) {
        event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
        event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
      }
    }
    /**
     * Collect dispatches (must be entirely collected before dispatching - see unit
     * tests). Lazily allocate the array to conserve memory.  We must loop through
     * each event and perform the traversal for each one. We cannot perform a
     * single traversal for the entire collection of events because each event may
     * have a different target.
     */


    function accumulateTwoPhaseDispatchesSingle(event) {
      if (event && event.dispatchConfig.phasedRegistrationNames) {
        traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
      }
    }
    /**
     * Accumulates without regard to direction, does not look for phased
     * registration names. Same as `accumulateDirectDispatchesSingle` but without
     * requiring that the `dispatchMarker` be the same as the dispatched ID.
     */


    function accumulateDispatches(inst, ignoredDirection, event) {
      if (inst && event && event.dispatchConfig.registrationName) {
        var registrationName = event.dispatchConfig.registrationName;
        var listener = getListener(inst, registrationName);

        if (listener) {
          event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
          event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
        }
      }
    }
    /**
     * Accumulates dispatches on an `SyntheticEvent`, but only for the
     * `dispatchMarker`.
     * @param {SyntheticEvent} event
     */


    function accumulateDirectDispatchesSingle(event) {
      if (event && event.dispatchConfig.registrationName) {
        accumulateDispatches(event._targetInst, null, event);
      }
    }

    function accumulateTwoPhaseDispatches(events) {
      forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
    }

    function accumulateEnterLeaveDispatches(leave, enter, from, to) {
      traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
    }

    function accumulateDirectDispatches(events) {
      forEachAccumulated(events, accumulateDirectDispatchesSingle);
    }
    /* eslint valid-typeof: 0 */


    var EVENT_POOL_SIZE = 10;
    /**
     * @interface Event
     * @see http://www.w3.org/TR/DOM-Level-3-Events/
     */

    var EventInterface = {
      type: null,
      target: null,
      // currentTarget is set when dispatching; no use in copying it here
      currentTarget: function () {
        return null;
      },
      eventPhase: null,
      bubbles: null,
      cancelable: null,
      timeStamp: function (event) {
        return event.timeStamp || Date.now();
      },
      defaultPrevented: null,
      isTrusted: null
    };

    function functionThatReturnsTrue() {
      return true;
    }

    function functionThatReturnsFalse() {
      return false;
    }
    /**
     * Synthetic events are dispatched by event plugins, typically in response to a
     * top-level event delegation handler.
     *
     * These systems should generally use pooling to reduce the frequency of garbage
     * collection. The system should check `isPersistent` to determine whether the
     * event should be released into the pool after being dispatched. Users that
     * need a persisted event should invoke `persist`.
     *
     * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
     * normalizing browser quirks. Subclasses do not necessarily have to implement a
     * DOM interface; custom application-specific events can also subclass this.
     *
     * @param {object} dispatchConfig Configuration used to dispatch this event.
     * @param {*} targetInst Marker identifying the event target.
     * @param {object} nativeEvent Native browser event.
     * @param {DOMEventTarget} nativeEventTarget Target node.
     */


    function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
      {
        // these have a getter/setter for warnings
        delete this.nativeEvent;
        delete this.preventDefault;
        delete this.stopPropagation;
        delete this.isDefaultPrevented;
        delete this.isPropagationStopped;
      }
      this.dispatchConfig = dispatchConfig;
      this._targetInst = targetInst;
      this.nativeEvent = nativeEvent;
      var Interface = this.constructor.Interface;

      for (var propName in Interface) {
        if (!Interface.hasOwnProperty(propName)) {
          continue;
        }

        {
          delete this[propName]; // this has a getter/setter for warnings
        }
        var normalize = Interface[propName];

        if (normalize) {
          this[propName] = normalize(nativeEvent);
        } else {
          if (propName === 'target') {
            this.target = nativeEventTarget;
          } else {
            this[propName] = nativeEvent[propName];
          }
        }
      }

      var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;

      if (defaultPrevented) {
        this.isDefaultPrevented = functionThatReturnsTrue;
      } else {
        this.isDefaultPrevented = functionThatReturnsFalse;
      }

      this.isPropagationStopped = functionThatReturnsFalse;
      return this;
    }

    _assign(SyntheticEvent.prototype, {
      preventDefault: function () {
        this.defaultPrevented = true;
        var event = this.nativeEvent;

        if (!event) {
          return;
        }

        if (event.preventDefault) {
          event.preventDefault();
        } else if (typeof event.returnValue !== 'unknown') {
          event.returnValue = false;
        }

        this.isDefaultPrevented = functionThatReturnsTrue;
      },
      stopPropagation: function () {
        var event = this.nativeEvent;

        if (!event) {
          return;
        }

        if (event.stopPropagation) {
          event.stopPropagation();
        } else if (typeof event.cancelBubble !== 'unknown') {
          // The ChangeEventPlugin registers a "propertychange" event for
          // IE. This event does not support bubbling or cancelling, and
          // any references to cancelBubble throw "Member not found".  A
          // typeof check of "unknown" circumvents this issue (and is also
          // IE specific).
          event.cancelBubble = true;
        }

        this.isPropagationStopped = functionThatReturnsTrue;
      },

      /**
       * We release all dispatched `SyntheticEvent`s after each event loop, adding
       * them back into the pool. This allows a way to hold onto a reference that
       * won't be added back into the pool.
       */
      persist: function () {
        this.isPersistent = functionThatReturnsTrue;
      },

      /**
       * Checks if this event should be released back into the pool.
       *
       * @return {boolean} True if this should not be released, false otherwise.
       */
      isPersistent: functionThatReturnsFalse,

      /**
       * `PooledClass` looks for `destructor` on each instance it releases.
       */
      destructor: function () {
        var Interface = this.constructor.Interface;

        for (var propName in Interface) {
          {
            Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
          }
        }

        this.dispatchConfig = null;
        this._targetInst = null;
        this.nativeEvent = null;
        this.isDefaultPrevented = functionThatReturnsFalse;
        this.isPropagationStopped = functionThatReturnsFalse;
        this._dispatchListeners = null;
        this._dispatchInstances = null;
        {
          Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
          Object.defineProperty(this, 'isDefaultPrevented', getPooledWarningPropertyDefinition('isDefaultPrevented', functionThatReturnsFalse));
          Object.defineProperty(this, 'isPropagationStopped', getPooledWarningPropertyDefinition('isPropagationStopped', functionThatReturnsFalse));
          Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', function () {}));
          Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', function () {}));
        }
      }
    });

    SyntheticEvent.Interface = EventInterface;
    /**
     * Helper to reduce boilerplate when creating subclasses.
     */

    SyntheticEvent.extend = function (Interface) {
      var Super = this;

      var E = function () {};

      E.prototype = Super.prototype;
      var prototype = new E();

      function Class() {
        return Super.apply(this, arguments);
      }

      _assign(prototype, Class.prototype);

      Class.prototype = prototype;
      Class.prototype.constructor = Class;
      Class.Interface = _assign({}, Super.Interface, Interface);
      Class.extend = Super.extend;
      addEventPoolingTo(Class);
      return Class;
    };

    addEventPoolingTo(SyntheticEvent);
    /**
     * Helper to nullify syntheticEvent instance properties when destructing
     *
     * @param {String} propName
     * @param {?object} getVal
     * @return {object} defineProperty object
     */

    function getPooledWarningPropertyDefinition(propName, getVal) {
      var isFunction = typeof getVal === 'function';
      return {
        configurable: true,
        set: set,
        get: get
      };

      function set(val) {
        var action = isFunction ? 'setting the method' : 'setting the property';
        warn(action, 'This is effectively a no-op');
        return val;
      }

      function get() {
        var action = isFunction ? 'accessing the method' : 'accessing the property';
        var result = isFunction ? 'This is a no-op function' : 'This is set to null';
        warn(action, result);
        return getVal;
      }

      function warn(action, result) {
        var warningCondition = false;
        !warningCondition ? warningWithoutStack$1(false, "This synthetic event is reused for performance reasons. If you're seeing this, " + "you're %s `%s` on a released/nullified synthetic event. %s. " + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
      }
    }

    function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
      var EventConstructor = this;

      if (EventConstructor.eventPool.length) {
        var instance = EventConstructor.eventPool.pop();
        EventConstructor.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
        return instance;
      }

      return new EventConstructor(dispatchConfig, targetInst, nativeEvent, nativeInst);
    }

    function releasePooledEvent(event) {
      var EventConstructor = this;

      (function () {
        if (!(event instanceof EventConstructor)) {
          {
            throw ReactError(Error("Trying to release an event instance into a pool of a different type."));
          }
        }
      })();

      event.destructor();

      if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {
        EventConstructor.eventPool.push(event);
      }
    }

    function addEventPoolingTo(EventConstructor) {
      EventConstructor.eventPool = [];
      EventConstructor.getPooled = getPooledEvent;
      EventConstructor.release = releasePooledEvent;
    }
    /**
     * @interface Event
     * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
     * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
     */


    var SyntheticAnimationEvent = SyntheticEvent.extend({
      animationName: null,
      elapsedTime: null,
      pseudoElement: null
    });
    /**
     * @interface Event
     * @see http://www.w3.org/TR/clipboard-apis/
     */

    var SyntheticClipboardEvent = SyntheticEvent.extend({
      clipboardData: function (event) {
        return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
      }
    });
    var SyntheticUIEvent = SyntheticEvent.extend({
      view: null,
      detail: null
    });
    /**
     * @interface FocusEvent
     * @see http://www.w3.org/TR/DOM-Level-3-Events/
     */

    var SyntheticFocusEvent = SyntheticUIEvent.extend({
      relatedTarget: null
    });
    /**
     * `charCode` represents the actual "character code" and is safe to use with
     * `String.fromCharCode`. As such, only keys that correspond to printable
     * characters produce a valid `charCode`, the only exception to this is Enter.
     * The Tab-key is considered non-printable and does not have a `charCode`,
     * presumably because it does not produce a tab-character in browsers.
     *
     * @param {object} nativeEvent Native browser event.
     * @return {number} Normalized `charCode` property.
     */

    function getEventCharCode(nativeEvent) {
      var charCode;
      var keyCode = nativeEvent.keyCode;

      if ('charCode' in nativeEvent) {
        charCode = nativeEvent.charCode; // FF does not set `charCode` for the Enter-key, check against `keyCode`.

        if (charCode === 0 && keyCode === 13) {
          charCode = 13;
        }
      } else {
        // IE8 does not implement `charCode`, but `keyCode` has the correct value.
        charCode = keyCode;
      } // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)
      // report Enter as charCode 10 when ctrl is pressed.


      if (charCode === 10) {
        charCode = 13;
      } // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
      // Must not discard the (non-)printable Enter-key.


      if (charCode >= 32 || charCode === 13) {
        return charCode;
      }

      return 0;
    }
    /**
     * Normalization of deprecated HTML5 `key` values
     * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
     */


    var normalizeKey = {
      Esc: 'Escape',
      Spacebar: ' ',
      Left: 'ArrowLeft',
      Up: 'ArrowUp',
      Right: 'ArrowRight',
      Down: 'ArrowDown',
      Del: 'Delete',
      Win: 'OS',
      Menu: 'ContextMenu',
      Apps: 'ContextMenu',
      Scroll: 'ScrollLock',
      MozPrintableKey: 'Unidentified'
    };
    /**
     * Translation from legacy `keyCode` to HTML5 `key`
     * Only special keys supported, all others depend on keyboard layout or browser
     * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
     */

    var translateToKey = {
      '8': 'Backspace',
      '9': 'Tab',
      '12': 'Clear',
      '13': 'Enter',
      '16': 'Shift',
      '17': 'Control',
      '18': 'Alt',
      '19': 'Pause',
      '20': 'CapsLock',
      '27': 'Escape',
      '32': ' ',
      '33': 'PageUp',
      '34': 'PageDown',
      '35': 'End',
      '36': 'Home',
      '37': 'ArrowLeft',
      '38': 'ArrowUp',
      '39': 'ArrowRight',
      '40': 'ArrowDown',
      '45': 'Insert',
      '46': 'Delete',
      '112': 'F1',
      '113': 'F2',
      '114': 'F3',
      '115': 'F4',
      '116': 'F5',
      '117': 'F6',
      '118': 'F7',
      '119': 'F8',
      '120': 'F9',
      '121': 'F10',
      '122': 'F11',
      '123': 'F12',
      '144': 'NumLock',
      '145': 'ScrollLock',
      '224': 'Meta'
    };
    /**
     * @param {object} nativeEvent Native browser event.
     * @return {string} Normalized `key` property.
     */

    function getEventKey(nativeEvent) {
      if (nativeEvent.key) {
        // Normalize inconsistent values reported by browsers due to
        // implementations of a working draft specification.
        // FireFox implements `key` but returns `MozPrintableKey` for all
        // printable characters (normalized to `Unidentified`), ignore it.
        var key = normalizeKey[nativeEvent.key] || nativeEvent.key;

        if (key !== 'Unidentified') {
          return key;
        }
      } // Browser does not implement `key`, polyfill as much of it as we can.


      if (nativeEvent.type === 'keypress') {
        var charCode = getEventCharCode(nativeEvent); // The enter-key is technically both printable and non-printable and can
        // thus be captured by `keypress`, no other non-printable key should.

        return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
      }

      if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
        // While user keyboard layout determines the actual meaning of each
        // `keyCode` value, almost all function keys have a universal value.
        return translateToKey[nativeEvent.keyCode] || 'Unidentified';
      }

      return '';
    }
    /**
     * Translation from modifier key to the associated property in the event.
     * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
     */


    var modifierKeyToProp = {
      Alt: 'altKey',
      Control: 'ctrlKey',
      Meta: 'metaKey',
      Shift: 'shiftKey'
    }; // Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support
    // getModifierState. If getModifierState is not supported, we map it to a set of
    // modifier keys exposed by the event. In this case, Lock-keys are not supported.

    function modifierStateGetter(keyArg) {
      var syntheticEvent = this;
      var nativeEvent = syntheticEvent.nativeEvent;

      if (nativeEvent.getModifierState) {
        return nativeEvent.getModifierState(keyArg);
      }

      var keyProp = modifierKeyToProp[keyArg];
      return keyProp ? !!nativeEvent[keyProp] : false;
    }

    function getEventModifierState(nativeEvent) {
      return modifierStateGetter;
    }
    /**
     * @interface KeyboardEvent
     * @see http://www.w3.org/TR/DOM-Level-3-Events/
     */


    var SyntheticKeyboardEvent = SyntheticUIEvent.extend({
      key: getEventKey,
      location: null,
      ctrlKey: null,
      shiftKey: null,
      altKey: null,
      metaKey: null,
      repeat: null,
      locale: null,
      getModifierState: getEventModifierState,
      // Legacy Interface
      charCode: function (event) {
        // `charCode` is the result of a KeyPress event and represents the value of
        // the actual printable character.
        // KeyPress is deprecated, but its replacement is not yet final and not
        // implemented in any major browser. Only KeyPress has charCode.
        if (event.type === 'keypress') {
          return getEventCharCode(event);
        }

        return 0;
      },
      keyCode: function (event) {
        // `keyCode` is the result of a KeyDown/Up event and represents the value of
        // physical keyboard key.
        // The actual meaning of the value depends on the users' keyboard layout
        // which cannot be detected. Assuming that it is a US keyboard layout
        // provides a surprisingly accurate mapping for US and European users.
        // Due to this, it is left to the user to implement at this time.
        if (event.type === 'keydown' || event.type === 'keyup') {
          return event.keyCode;
        }

        return 0;
      },
      which: function (event) {
        // `which` is an alias for either `keyCode` or `charCode` depending on the
        // type of the event.
        if (event.type === 'keypress') {
          return getEventCharCode(event);
        }

        if (event.type === 'keydown' || event.type === 'keyup') {
          return event.keyCode;
        }

        return 0;
      }
    });
    var previousScreenX = 0;
    var previousScreenY = 0; // Use flags to signal movementX/Y has already been set

    var isMovementXSet = false;
    var isMovementYSet = false;
    /**
     * @interface MouseEvent
     * @see http://www.w3.org/TR/DOM-Level-3-Events/
     */

    var SyntheticMouseEvent = SyntheticUIEvent.extend({
      screenX: null,
      screenY: null,
      clientX: null,
      clientY: null,
      pageX: null,
      pageY: null,
      ctrlKey: null,
      shiftKey: null,
      altKey: null,
      metaKey: null,
      getModifierState: getEventModifierState,
      button: null,
      buttons: null,
      relatedTarget: function (event) {
        return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
      },
      movementX: function (event) {
        if ('movementX' in event) {
          return event.movementX;
        }

        var screenX = previousScreenX;
        previousScreenX = event.screenX;

        if (!isMovementXSet) {
          isMovementXSet = true;
          return 0;
        }

        return event.type === 'mousemove' ? event.screenX - screenX : 0;
      },
      movementY: function (event) {
        if ('movementY' in event) {
          return event.movementY;
        }

        var screenY = previousScreenY;
        previousScreenY = event.screenY;

        if (!isMovementYSet) {
          isMovementYSet = true;
          return 0;
        }

        return event.type === 'mousemove' ? event.screenY - screenY : 0;
      }
    });
    /**
     * @interface PointerEvent
     * @see http://www.w3.org/TR/pointerevents/
     */

    var SyntheticPointerEvent = SyntheticMouseEvent.extend({
      pointerId: null,
      width: null,
      height: null,
      pressure: null,
      tangentialPressure: null,
      tiltX: null,
      tiltY: null,
      twist: null,
      pointerType: null,
      isPrimary: null
    });
    /**
     * @interface DragEvent
     * @see http://www.w3.org/TR/DOM-Level-3-Events/
     */

    var SyntheticDragEvent = SyntheticMouseEvent.extend({
      dataTransfer: null
    });
    /**
     * @interface TouchEvent
     * @see http://www.w3.org/TR/touch-events/
     */

    var SyntheticTouchEvent = SyntheticUIEvent.extend({
      touches: null,
      targetTouches: null,
      changedTouches: null,
      altKey: null,
      metaKey: null,
      ctrlKey: null,
      shiftKey: null,
      getModifierState: getEventModifierState
    });
    /**
     * @interface Event
     * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
     * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
     */

    var SyntheticTransitionEvent = SyntheticEvent.extend({
      propertyName: null,
      elapsedTime: null,
      pseudoElement: null
    });
    /**
     * @interface WheelEvent
     * @see http://www.w3.org/TR/DOM-Level-3-Events/
     */

    var SyntheticWheelEvent = SyntheticMouseEvent.extend({
      deltaX: function (event) {
        return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
        'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
      },
      deltaY: function (event) {
        return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
        'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
        'wheelDelta' in event ? -event.wheelDelta : 0;
      },
      deltaZ: null,
      // Browsers without "deltaMode" is reporting in raw wheel delta where one
      // notch on the scroll is always +/- 120, roughly equivalent to pixels.
      // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
      // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
      deltaMode: null
    });
    /**
     * Turns
     * ['abort', ...]
     * into
     * eventTypes = {
     *   'abort': {
     *     phasedRegistrationNames: {
     *       bubbled: 'onAbort',
     *       captured: 'onAbortCapture',
     *     },
     *     dependencies: [TOP_ABORT],
     *   },
     *   ...
     * };
     * topLevelEventsToDispatchConfig = new Map([
     *   [TOP_ABORT, { sameConfig }],
     * ]);
     */

    var eventTuples = [// Discrete events
    [TOP_BLUR, 'blur', DiscreteEvent], [TOP_CANCEL, 'cancel', DiscreteEvent], [TOP_CLICK, 'click', DiscreteEvent], [TOP_CLOSE, 'close', DiscreteEvent], [TOP_CONTEXT_MENU, 'contextMenu', DiscreteEvent], [TOP_COPY, 'copy', DiscreteEvent], [TOP_CUT, 'cut', DiscreteEvent], [TOP_AUX_CLICK, 'auxClick', DiscreteEvent], [TOP_DOUBLE_CLICK, 'doubleClick', DiscreteEvent], [TOP_DRAG_END, 'dragEnd', DiscreteEvent], [TOP_DRAG_START, 'dragStart', DiscreteEvent], [TOP_DROP, 'drop', DiscreteEvent], [TOP_FOCUS, 'focus', DiscreteEvent], [TOP_INPUT, 'input', DiscreteEvent], [TOP_INVALID, 'invalid', DiscreteEvent], [TOP_KEY_DOWN, 'keyDown', DiscreteEvent], [TOP_KEY_PRESS, 'keyPress', DiscreteEvent], [TOP_KEY_UP, 'keyUp', DiscreteEvent], [TOP_MOUSE_DOWN, 'mouseDown', DiscreteEvent], [TOP_MOUSE_UP, 'mouseUp', DiscreteEvent], [TOP_PASTE, 'paste', DiscreteEvent], [TOP_PAUSE, 'pause', DiscreteEvent], [TOP_PLAY, 'play', DiscreteEvent], [TOP_POINTER_CANCEL, 'pointerCancel', DiscreteEvent], [TOP_POINTER_DOWN, 'pointerDown', DiscreteEvent], [TOP_POINTER_UP, 'pointerUp', DiscreteEvent], [TOP_RATE_CHANGE, 'rateChange', DiscreteEvent], [TOP_RESET, 'reset', DiscreteEvent], [TOP_SEEKED, 'seeked', DiscreteEvent], [TOP_SUBMIT, 'submit', DiscreteEvent], [TOP_TOUCH_CANCEL, 'touchCancel', DiscreteEvent], [TOP_TOUCH_END, 'touchEnd', DiscreteEvent], [TOP_TOUCH_START, 'touchStart', DiscreteEvent], [TOP_VOLUME_CHANGE, 'volumeChange', DiscreteEvent], // User-blocking events
    [TOP_DRAG, 'drag', UserBlockingEvent], [TOP_DRAG_ENTER, 'dragEnter', UserBlockingEvent], [TOP_DRAG_EXIT, 'dragExit', UserBlockingEvent], [TOP_DRAG_LEAVE, 'dragLeave', UserBlockingEvent], [TOP_DRAG_OVER, 'dragOver', UserBlockingEvent], [TOP_MOUSE_MOVE, 'mouseMove', UserBlockingEvent], [TOP_MOUSE_OUT, 'mouseOut', UserBlockingEvent], [TOP_MOUSE_OVER, 'mouseOver', UserBlockingEvent], [TOP_POINTER_MOVE, 'pointerMove', UserBlockingEvent], [TOP_POINTER_OUT, 'pointerOut', UserBlockingEvent], [TOP_POINTER_OVER, 'pointerOver', UserBlockingEvent], [TOP_SCROLL, 'scroll', UserBlockingEvent], [TOP_TOGGLE, 'toggle', UserBlockingEvent], [TOP_TOUCH_MOVE, 'touchMove', UserBlockingEvent], [TOP_WHEEL, 'wheel', UserBlockingEvent], // Continuous events
    [TOP_ABORT, 'abort', ContinuousEvent], [TOP_ANIMATION_END, 'animationEnd', ContinuousEvent], [TOP_ANIMATION_ITERATION, 'animationIteration', ContinuousEvent], [TOP_ANIMATION_START, 'animationStart', ContinuousEvent], [TOP_CAN_PLAY, 'canPlay', ContinuousEvent], [TOP_CAN_PLAY_THROUGH, 'canPlayThrough', ContinuousEvent], [TOP_DURATION_CHANGE, 'durationChange', ContinuousEvent], [TOP_EMPTIED, 'emptied', ContinuousEvent], [TOP_ENCRYPTED, 'encrypted', ContinuousEvent], [TOP_ENDED, 'ended', ContinuousEvent], [TOP_ERROR, 'error', ContinuousEvent], [TOP_GOT_POINTER_CAPTURE, 'gotPointerCapture', ContinuousEvent], [TOP_LOAD, 'load', ContinuousEvent], [TOP_LOADED_DATA, 'loadedData', ContinuousEvent], [TOP_LOADED_METADATA, 'loadedMetadata', ContinuousEvent], [TOP_LOAD_START, 'loadStart', ContinuousEvent], [TOP_LOST_POINTER_CAPTURE, 'lostPointerCapture', ContinuousEvent], [TOP_PLAYING, 'playing', ContinuousEvent], [TOP_PROGRESS, 'progress', ContinuousEvent], [TOP_SEEKING, 'seeking', ContinuousEvent], [TOP_STALLED, 'stalled', ContinuousEvent], [TOP_SUSPEND, 'suspend', ContinuousEvent], [TOP_TIME_UPDATE, 'timeUpdate', ContinuousEvent], [TOP_TRANSITION_END, 'transitionEnd', ContinuousEvent], [TOP_WAITING, 'waiting', ContinuousEvent]];
    var eventTypes = {};
    var topLevelEventsToDispatchConfig = {};

    for (var i = 0; i < eventTuples.length; i++) {
      var eventTuple = eventTuples[i];
      var topEvent = eventTuple[0];
      var event = eventTuple[1];
      var eventPriority = eventTuple[2];
      var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
      var onEvent = 'on' + capitalizedEvent;
      var config = {
        phasedRegistrationNames: {
          bubbled: onEvent,
          captured: onEvent + 'Capture'
        },
        dependencies: [topEvent],
        eventPriority: eventPriority
      };
      eventTypes[event] = config;
      topLevelEventsToDispatchConfig[topEvent] = config;
    } // Only used in DEV for exhaustiveness validation.


    var knownHTMLTopLevelTypes = [TOP_ABORT, TOP_CANCEL, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_CLOSE, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_INPUT, TOP_INVALID, TOP_LOAD, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_RESET, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUBMIT, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_TOGGLE, TOP_VOLUME_CHANGE, TOP_WAITING];
    var SimpleEventPlugin = {
      eventTypes: eventTypes,
      getEventPriority: function (topLevelType) {
        var config = topLevelEventsToDispatchConfig[topLevelType];
        return config !== undefined ? config.eventPriority : ContinuousEvent;
      },
      extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags) {
        var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];

        if (!dispatchConfig) {
          return null;
        }

        var EventConstructor;

        switch (topLevelType) {
          case TOP_KEY_PRESS:
            // Firefox creates a keypress event for function keys too. This removes
            // the unwanted keypress events. Enter is however both printable and
            // non-printable. One would expect Tab to be as well (but it isn't).
            if (getEventCharCode(nativeEvent) === 0) {
              return null;
            }

          /* falls through */

          case TOP_KEY_DOWN:
          case TOP_KEY_UP:
            EventConstructor = SyntheticKeyboardEvent;
            break;

          case TOP_BLUR:
          case TOP_FOCUS:
            EventConstructor = SyntheticFocusEvent;
            break;

          case TOP_CLICK:
            // Firefox creates a click event on right mouse clicks. This removes the
            // unwanted click events.
            if (nativeEvent.button === 2) {
              return null;
            }

          /* falls through */

          case TOP_AUX_CLICK:
          case TOP_DOUBLE_CLICK:
          case TOP_MOUSE_DOWN:
          case TOP_MOUSE_MOVE:
          case TOP_MOUSE_UP: // TODO: Disabled elements should not respond to mouse events

          /* falls through */

          case TOP_MOUSE_OUT:
          case TOP_MOUSE_OVER:
          case TOP_CONTEXT_MENU:
            EventConstructor = SyntheticMouseEvent;
            break;

          case TOP_DRAG:
          case TOP_DRAG_END:
          case TOP_DRAG_ENTER:
          case TOP_DRAG_EXIT:
          case TOP_DRAG_LEAVE:
          case TOP_DRAG_OVER:
          case TOP_DRAG_START:
          case TOP_DROP:
            EventConstructor = SyntheticDragEvent;
            break;

          case TOP_TOUCH_CANCEL:
          case TOP_TOUCH_END:
          case TOP_TOUCH_MOVE:
          case TOP_TOUCH_START:
            EventConstructor = SyntheticTouchEvent;
            break;

          case TOP_ANIMATION_END:
          case TOP_ANIMATION_ITERATION:
          case TOP_ANIMATION_START:
            EventConstructor = SyntheticAnimationEvent;
            break;

          case TOP_TRANSITION_END:
            EventConstructor = SyntheticTransitionEvent;
            break;

          case TOP_SCROLL:
            EventConstructor = SyntheticUIEvent;
            break;

          case TOP_WHEEL:
            EventConstructor = SyntheticWheelEvent;
            break;

          case TOP_COPY:
          case TOP_CUT:
          case TOP_PASTE:
            EventConstructor = SyntheticClipboardEvent;
            break;

          case TOP_GOT_POINTER_CAPTURE:
          case TOP_LOST_POINTER_CAPTURE:
          case TOP_POINTER_CANCEL:
          case TOP_POINTER_DOWN:
          case TOP_POINTER_MOVE:
          case TOP_POINTER_OUT:
          case TOP_POINTER_OVER:
          case TOP_POINTER_UP:
            EventConstructor = SyntheticPointerEvent;
            break;

          default:
            {
              if (knownHTMLTopLevelTypes.indexOf(topLevelType) === -1) {
                warningWithoutStack$1(false, 'SimpleEventPlugin: Unhandled event type, `%s`. This warning ' + 'is likely caused by a bug in React. Please file an issue.', topLevelType);
              }
            } // HTML Events
            // @see http://www.w3.org/TR/html5/index.html#events-0

            EventConstructor = SyntheticEvent;
            break;
        }

        var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
        accumulateTwoPhaseDispatches(event);
        return event;
      }
    };
    var passiveBrowserEventsSupported = false; // Check if browser support events with passive listeners
    // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support

    if (enableFlareAPI && canUseDOM) {
      try {
        var options = {}; // $FlowFixMe: Ignore Flow complaining about needing a value

        Object.defineProperty(options, 'passive', {
          get: function () {
            passiveBrowserEventsSupported = true;
          }
        });
        window.addEventListener('test', options, options);
        window.removeEventListener('test', options, options);
      } catch (e) {
        passiveBrowserEventsSupported = false;
      }
    } // Intentionally not named imports because Rollup would use dynamic dispatch for
    // CommonJS interop named imports.


    var UserBlockingPriority$1 = Scheduler.unstable_UserBlockingPriority;
    var runWithPriority$1 = Scheduler.unstable_runWithPriority;
    var getEventPriority = SimpleEventPlugin.getEventPriority;
    var CALLBACK_BOOKKEEPING_POOL_SIZE = 10;
    var callbackBookkeepingPool = [];
    /**
     * Find the deepest React component completely containing the root of the
     * passed-in instance (for use when entire React trees are nested within each
     * other). If React trees are not nested, returns null.
     */

    function findRootContainerNode(inst) {
      if (inst.tag === HostRoot) {
        return inst.stateNode.containerInfo;
      } // TODO: It may be a good idea to cache this to prevent unnecessary DOM
      // traversal, but caching is difficult to do correctly without using a
      // mutation observer to listen for all DOM changes.


      while (inst.return) {
        inst = inst.return;
      }

      if (inst.tag !== HostRoot) {
        // This can happen if we're in a detached tree.
        return null;
      }

      return inst.stateNode.containerInfo;
    } // Used to store ancestor hierarchy in top level callback


    function getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst, eventSystemFlags) {
      if (callbackBookkeepingPool.length) {
        var instance = callbackBookkeepingPool.pop();
        instance.topLevelType = topLevelType;
        instance.eventSystemFlags = eventSystemFlags;
        instance.nativeEvent = nativeEvent;
        instance.targetInst = targetInst;
        return instance;
      }

      return {
        topLevelType: topLevelType,
        eventSystemFlags: eventSystemFlags,
        nativeEvent: nativeEvent,
        targetInst: targetInst,
        ancestors: []
      };
    }

    function releaseTopLevelCallbackBookKeeping(instance) {
      instance.topLevelType = null;
      instance.nativeEvent = null;
      instance.targetInst = null;
      instance.ancestors.length = 0;

      if (callbackBookkeepingPool.length < CALLBACK_BOOKKEEPING_POOL_SIZE) {
        callbackBookkeepingPool.push(instance);
      }
    }

    function handleTopLevel(bookKeeping) {
      var targetInst = bookKeeping.targetInst; // Loop through the hierarchy, in case there's any nested components.
      // It's important that we build the array of ancestors before calling any
      // event handlers, because event handlers can modify the DOM, leading to
      // inconsistencies with ReactMount's node cache. See #1105.

      var ancestor = targetInst;

      do {
        if (!ancestor) {
          var ancestors = bookKeeping.ancestors;
          ancestors.push(ancestor);
          break;
        }

        var root = findRootContainerNode(ancestor);

        if (!root) {
          break;
        }

        var tag = ancestor.tag;

        if (tag === HostComponent || tag === HostText) {
          bookKeeping.ancestors.push(ancestor);
        }

        ancestor = getClosestInstanceFromNode(root);
      } while (ancestor);

      for (var i = 0; i < bookKeeping.ancestors.length; i++) {
        targetInst = bookKeeping.ancestors[i];
        var eventTarget = getEventTarget(bookKeeping.nativeEvent);
        var topLevelType = bookKeeping.topLevelType;
        var nativeEvent = bookKeeping.nativeEvent;
        runExtractedPluginEventsInBatch(topLevelType, targetInst, nativeEvent, eventTarget, bookKeeping.eventSystemFlags);
      }
    } // TODO: can we stop exporting these?


    var _enabled = true;

    function setEnabled(enabled) {
      _enabled = !!enabled;
    }

    function isEnabled() {
      return _enabled;
    }

    function trapBubbledEvent(topLevelType, element) {
      trapEventForPluginEventSystem(element, topLevelType, false);
    }

    function trapCapturedEvent(topLevelType, element) {
      trapEventForPluginEventSystem(element, topLevelType, true);
    }

    function trapEventForResponderEventSystem(element, topLevelType, passive) {
      if (enableFlareAPI) {
        var rawEventName = getRawEventName(topLevelType);
        var eventFlags = RESPONDER_EVENT_SYSTEM; // If passive option is not supported, then the event will be
        // active and not passive, but we flag it as using not being
        // supported too. This way the responder event plugins know,
        // and can provide polyfills if needed.

        if (passive) {
          if (passiveBrowserEventsSupported) {
            eventFlags |= IS_PASSIVE;
          } else {
            eventFlags |= IS_ACTIVE;
            eventFlags |= PASSIVE_NOT_SUPPORTED;
            passive = false;
          }
        } else {
          eventFlags |= IS_ACTIVE;
        } // Check if interactive and wrap in discreteUpdates


        var listener = dispatchEvent.bind(null, topLevelType, eventFlags);

        if (passiveBrowserEventsSupported) {
          addEventCaptureListenerWithPassiveFlag(element, rawEventName, listener, passive);
        } else {
          addEventCaptureListener(element, rawEventName, listener);
        }
      }
    }

    function trapEventForPluginEventSystem(element, topLevelType, capture) {
      var listener;

      switch (getEventPriority(topLevelType)) {
        case DiscreteEvent:
          listener = dispatchDiscreteEvent.bind(null, topLevelType, PLUGIN_EVENT_SYSTEM);
          break;

        case UserBlockingEvent:
          listener = dispatchUserBlockingUpdate.bind(null, topLevelType, PLUGIN_EVENT_SYSTEM);
          break;

        case ContinuousEvent:
        default:
          listener = dispatchEvent.bind(null, topLevelType, PLUGIN_EVENT_SYSTEM);
          break;
      }

      var rawEventName = getRawEventName(topLevelType);

      if (capture) {
        addEventCaptureListener(element, rawEventName, listener);
      } else {
        addEventBubbleListener(element, rawEventName, listener);
      }
    }

    function dispatchDiscreteEvent(topLevelType, eventSystemFlags, nativeEvent) {
      flushDiscreteUpdatesIfNeeded(nativeEvent.timeStamp);
      discreteUpdates(dispatchEvent, topLevelType, eventSystemFlags, nativeEvent);
    }

    function dispatchUserBlockingUpdate(topLevelType, eventSystemFlags, nativeEvent) {
      if (enableUserBlockingEvents) {
        runWithPriority$1(UserBlockingPriority$1, dispatchEvent.bind(null, topLevelType, eventSystemFlags, nativeEvent));
      } else {
        dispatchEvent(topLevelType, eventSystemFlags, nativeEvent);
      }
    }

    function dispatchEventForPluginEventSystem(topLevelType, eventSystemFlags, nativeEvent, targetInst) {
      var bookKeeping = getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst, eventSystemFlags);

      try {
        // Event queue being processed in the same cycle allows
        // `preventDefault`.
        batchedEventUpdates(handleTopLevel, bookKeeping);
      } finally {
        releaseTopLevelCallbackBookKeeping(bookKeeping);
      }
    }

    function dispatchEvent(topLevelType, eventSystemFlags, nativeEvent) {
      if (!_enabled) {
        return;
      }

      if (hasQueuedDiscreteEvents() && isReplayableDiscreteEvent(topLevelType)) {
        // If we already have a queue of discrete events, and this is another discrete
        // event, then we can't dispatch it regardless of its target, since they
        // need to dispatch in order.
        queueDiscreteEvent(null, // Flags that we're not actually blocked on anything as far as we know.
        topLevelType, eventSystemFlags, nativeEvent);
        return;
      }

      var blockedOn = attemptToDispatchEvent(topLevelType, eventSystemFlags, nativeEvent);

      if (blockedOn === null) {
        // We successfully dispatched this event.
        clearIfContinuousEvent(topLevelType, nativeEvent);
        return;
      }

      if (isReplayableDiscreteEvent(topLevelType)) {
        // This this to be replayed later once the target is available.
        queueDiscreteEvent(blockedOn, topLevelType, eventSystemFlags, nativeEvent);
        return;
      }

      if (queueIfContinuousEvent(blockedOn, topLevelType, eventSystemFlags, nativeEvent)) {
        return;
      } // We need to clear only if we didn't queue because
      // queueing is accummulative.


      clearIfContinuousEvent(topLevelType, nativeEvent); // This is not replayable so we'll invoke it but without a target,
      // in case the event system needs to trace it.

      if (enableFlareAPI) {
        if (eventSystemFlags & PLUGIN_EVENT_SYSTEM) {
          dispatchEventForPluginEventSystem(topLevelType, eventSystemFlags, nativeEvent, null);
        }

        if (eventSystemFlags & RESPONDER_EVENT_SYSTEM) {
          // React Flare event system
          dispatchEventForResponderEventSystem(topLevelType, null, nativeEvent, getEventTarget(nativeEvent), eventSystemFlags);
        }
      } else {
        dispatchEventForPluginEventSystem(topLevelType, eventSystemFlags, nativeEvent, null);
      }
    } // Attempt dispatching an event. Returns a SuspenseInstance or Container if it's blocked.


    function attemptToDispatchEvent(topLevelType, eventSystemFlags, nativeEvent) {
      // TODO: Warn if _enabled is false.
      var nativeEventTarget = getEventTarget(nativeEvent);
      var targetInst = getClosestInstanceFromNode(nativeEventTarget);

      if (targetInst !== null) {
        var nearestMounted = getNearestMountedFiber(targetInst);

        if (nearestMounted === null) {
          // This tree has been unmounted already. Dispatch without a target.
          targetInst = null;
        } else {
          var tag = nearestMounted.tag;

          if (tag === SuspenseComponent) {
            var instance = getSuspenseInstanceFromFiber(nearestMounted);

            if (instance !== null) {
              // Queue the event to be replayed later. Abort dispatching since we
              // don't want this event dispatched twice through the event system.
              // TODO: If this is the first discrete event in the queue. Schedule an increased
              // priority for this boundary.
              return instance;
            } // This shouldn't happen, something went wrong but to avoid blocking
            // the whole system, dispatch the event without a target.
            // TODO: Warn.


            targetInst = null;
          } else if (tag === HostRoot) {
            var root = nearestMounted.stateNode;

            if (root.hydrate) {
              // If this happens during a replay something went wrong and it might block
              // the whole system.
              return getContainerFromFiber(nearestMounted);
            }

            targetInst = null;
          } else if (nearestMounted !== targetInst) {
            // If we get an event (ex: img onload) before committing that
            // component's mount, ignore it for now (that is, treat it as if it was an
            // event on a non-React tree). We might also consider queueing events and
            // dispatching them after the mount.
            targetInst = null;
          }
        }
      }

      if (enableFlareAPI) {
        if (eventSystemFlags & PLUGIN_EVENT_SYSTEM) {
          dispatchEventForPluginEventSystem(topLevelType, eventSystemFlags, nativeEvent, targetInst);
        }

        if (eventSystemFlags & RESPONDER_EVENT_SYSTEM) {
          // React Flare event system
          dispatchEventForResponderEventSystem(topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
        }
      } else {
        dispatchEventForPluginEventSystem(topLevelType, eventSystemFlags, nativeEvent, targetInst);
      } // We're not blocked on anything.


      return null;
    }
    /**
     * Checks if an event is supported in the current execution environment.
     *
     * NOTE: This will not work correctly for non-generic events such as `change`,
     * `reset`, `load`, `error`, and `select`.
     *
     * Borrows from Modernizr.
     *
     * @param {string} eventNameSuffix Event name, e.g. "click".
     * @return {boolean} True if the event is supported.
     * @internal
     * @license Modernizr 3.0.0pre (Custom Build) | MIT
     */


    function isEventSupported(eventNameSuffix) {
      if (!canUseDOM) {
        return false;
      }

      var eventName = 'on' + eventNameSuffix;
      var isSupported = eventName in document;

      if (!isSupported) {
        var element = document.createElement('div');
        element.setAttribute(eventName, 'return;');
        isSupported = typeof element[eventName] === 'function';
      }

      return isSupported;
    }
    /**
     * Summary of `ReactBrowserEventEmitter` event handling:
     *
     *  - Top-level delegation is used to trap most native browser events. This
     *    may only occur in the main thread and is the responsibility of
     *    ReactDOMEventListener, which is injected and can therefore support
     *    pluggable event sources. This is the only work that occurs in the main
     *    thread.
     *
     *  - We normalize and de-duplicate events to account for browser quirks. This
     *    may be done in the worker thread.
     *
     *  - Forward these native events (with the associated top-level type used to
     *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
     *    to extract any synthetic events.
     *
     *  - The `EventPluginHub` will then process each event by annotating them with
     *    "dispatches", a sequence of listeners and IDs that care about that event.
     *
     *  - The `EventPluginHub` then dispatches the events.
     *
     * Overview of React and the event system:
     *
     * +------------+    .
     * |    DOM     |    .
     * +------------+    .
     *       |           .
     *       v           .
     * +------------+    .
     * | ReactEvent |    .
     * |  Listener  |    .
     * +------------+    .                         +-----------+
     *       |           .               +--------+|SimpleEvent|
     *       |           .               |         |Plugin     |
     * +-----|------+    .               v         +-----------+
     * |     |      |    .    +--------------+                    +------------+
     * |     +-----------.--->|EventPluginHub|                    |    Event   |
     * |            |    .    |              |     +-----------+  | Propagators|
     * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
     * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
     * |            |    .    |              |     +-----------+  |  utilities |
     * |     +-----------.--->|              |                    +------------+
     * |     |      |    .    +--------------+
     * +-----|------+    .                ^        +-----------+
     *       |           .                |        |Enter/Leave|
     *       +           .                +-------+|Plugin     |
     * +-------------+   .                         +-----------+
     * | application |   .
     * |-------------|   .
     * |             |   .
     * |             |   .
     * +-------------+   .
     *                   .
     *    React Core     .  General Purpose Event Plugin System
     */


    var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
    var elementListeningSets = new PossiblyWeakMap();

    function getListeningSetForElement(element) {
      var listeningSet = elementListeningSets.get(element);

      if (listeningSet === undefined) {
        listeningSet = new Set();
        elementListeningSets.set(element, listeningSet);
      }

      return listeningSet;
    }
    /**
     * We listen for bubbled touch events on the document object.
     *
     * Firefox v8.01 (and possibly others) exhibited strange behavior when
     * mounting `onmousemove` events at some node that was not the document
     * element. The symptoms were that if your mouse is not moving over something
     * contained within that mount point (for example on the background) the
     * top-level listeners for `onmousemove` won't be called. However, if you
     * register the `mousemove` on the document object, then it will of course
     * catch all `mousemove`s. This along with iOS quirks, justifies restricting
     * top-level listeners to the document object only, at least for these
     * movement types of events and possibly all events.
     *
     * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
     *
     * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
     * they bubble to document.
     *
     * @param {string} registrationName Name of listener (e.g. `onClick`).
     * @param {object} mountAt Container where to mount the listener
     */


    function listenTo(registrationName, mountAt) {
      var listeningSet = getListeningSetForElement(mountAt);
      var dependencies = registrationNameDependencies[registrationName];

      for (var i = 0; i < dependencies.length; i++) {
        var dependency = dependencies[i];
        listenToTopLevel(dependency, mountAt, listeningSet);
      }
    }

    function listenToTopLevel(topLevelType, mountAt, listeningSet) {
      if (!listeningSet.has(topLevelType)) {
        switch (topLevelType) {
          case TOP_SCROLL:
            trapCapturedEvent(TOP_SCROLL, mountAt);
            break;

          case TOP_FOCUS:
          case TOP_BLUR:
            trapCapturedEvent(TOP_FOCUS, mountAt);
            trapCapturedEvent(TOP_BLUR, mountAt); // We set the flag for a single dependency later in this function,
            // but this ensures we mark both as attached rather than just one.

            listeningSet.add(TOP_BLUR);
            listeningSet.add(TOP_FOCUS);
            break;

          case TOP_CANCEL:
          case TOP_CLOSE:
            if (isEventSupported(getRawEventName(topLevelType))) {
              trapCapturedEvent(topLevelType, mountAt);
            }

            break;

          case TOP_INVALID:
          case TOP_SUBMIT:
          case TOP_RESET:
            // We listen to them on the target DOM elements.
            // Some of them bubble so we don't want them to fire twice.
            break;

          default:
            // By default, listen on the top level to all non-media events.
            // Media events don't bubble so adding the listener wouldn't do anything.
            var isMediaEvent = mediaEventTypes.indexOf(topLevelType) !== -1;

            if (!isMediaEvent) {
              trapBubbledEvent(topLevelType, mountAt);
            }

            break;
        }

        listeningSet.add(topLevelType);
      }
    }

    function isListeningToAllDependencies(registrationName, mountAt) {
      var listeningSet = getListeningSetForElement(mountAt);
      var dependencies = registrationNameDependencies[registrationName];

      for (var i = 0; i < dependencies.length; i++) {
        var dependency = dependencies[i];

        if (!listeningSet.has(dependency)) {
          return false;
        }
      }

      return true;
    } // List derived from Gecko source code:
    // https://github.com/mozilla/gecko-dev/blob/4e638efc71/layout/style/test/property_database.js


    var shorthandToLonghand = {
      animation: ['animationDelay', 'animationDirection', 'animationDuration', 'animationFillMode', 'animationIterationCount', 'animationName', 'animationPlayState', 'animationTimingFunction'],
      background: ['backgroundAttachment', 'backgroundClip', 'backgroundColor', 'backgroundImage', 'backgroundOrigin', 'backgroundPositionX', 'backgroundPositionY', 'backgroundRepeat', 'backgroundSize'],
      backgroundPosition: ['backgroundPositionX', 'backgroundPositionY'],
      border: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth', 'borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth', 'borderRightColor', 'borderRightStyle', 'borderRightWidth', 'borderTopColor', 'borderTopStyle', 'borderTopWidth'],
      borderBlockEnd: ['borderBlockEndColor', 'borderBlockEndStyle', 'borderBlockEndWidth'],
      borderBlockStart: ['borderBlockStartColor', 'borderBlockStartStyle', 'borderBlockStartWidth'],
      borderBottom: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth'],
      borderColor: ['borderBottomColor', 'borderLeftColor', 'borderRightColor', 'borderTopColor'],
      borderImage: ['borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth'],
      borderInlineEnd: ['borderInlineEndColor', 'borderInlineEndStyle', 'borderInlineEndWidth'],
      borderInlineStart: ['borderInlineStartColor', 'borderInlineStartStyle', 'borderInlineStartWidth'],
      borderLeft: ['borderLeftColor', 'borderLeftStyle', 'borderLeftWidth'],
      borderRadius: ['borderBottomLeftRadius', 'borderBottomRightRadius', 'borderTopLeftRadius', 'borderTopRightRadius'],
      borderRight: ['borderRightColor', 'borderRightStyle', 'borderRightWidth'],
      borderStyle: ['borderBottomStyle', 'borderLeftStyle', 'borderRightStyle', 'borderTopStyle'],
      borderTop: ['borderTopColor', 'borderTopStyle', 'borderTopWidth'],
      borderWidth: ['borderBottomWidth', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth'],
      columnRule: ['columnRuleColor', 'columnRuleStyle', 'columnRuleWidth'],
      columns: ['columnCount', 'columnWidth'],
      flex: ['flexBasis', 'flexGrow', 'flexShrink'],
      flexFlow: ['flexDirection', 'flexWrap'],
      font: ['fontFamily', 'fontFeatureSettings', 'fontKerning', 'fontLanguageOverride', 'fontSize', 'fontSizeAdjust', 'fontStretch', 'fontStyle', 'fontVariant', 'fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition', 'fontWeight', 'lineHeight'],
      fontVariant: ['fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition'],
      gap: ['columnGap', 'rowGap'],
      grid: ['gridAutoColumns', 'gridAutoFlow', 'gridAutoRows', 'gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],
      gridArea: ['gridColumnEnd', 'gridColumnStart', 'gridRowEnd', 'gridRowStart'],
      gridColumn: ['gridColumnEnd', 'gridColumnStart'],
      gridColumnGap: ['columnGap'],
      gridGap: ['columnGap', 'rowGap'],
      gridRow: ['gridRowEnd', 'gridRowStart'],
      gridRowGap: ['rowGap'],
      gridTemplate: ['gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],
      listStyle: ['listStyleImage', 'listStylePosition', 'listStyleType'],
      margin: ['marginBottom', 'marginLeft', 'marginRight', 'marginTop'],
      marker: ['markerEnd', 'markerMid', 'markerStart'],
      mask: ['maskClip', 'maskComposite', 'maskImage', 'maskMode', 'maskOrigin', 'maskPositionX', 'maskPositionY', 'maskRepeat', 'maskSize'],
      maskPosition: ['maskPositionX', 'maskPositionY'],
      outline: ['outlineColor', 'outlineStyle', 'outlineWidth'],
      overflow: ['overflowX', 'overflowY'],
      padding: ['paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop'],
      placeContent: ['alignContent', 'justifyContent'],
      placeItems: ['alignItems', 'justifyItems'],
      placeSelf: ['alignSelf', 'justifySelf'],
      textDecoration: ['textDecorationColor', 'textDecorationLine', 'textDecorationStyle'],
      textEmphasis: ['textEmphasisColor', 'textEmphasisStyle'],
      transition: ['transitionDelay', 'transitionDuration', 'transitionProperty', 'transitionTimingFunction'],
      wordWrap: ['overflowWrap']
    };
    /**
     * CSS properties which accept numbers but are not in units of "px".
     */

    var isUnitlessNumber = {
      animationIterationCount: true,
      borderImageOutset: true,
      borderImageSlice: true,
      borderImageWidth: true,
      boxFlex: true,
      boxFlexGroup: true,
      boxOrdinalGroup: true,
      columnCount: true,
      columns: true,
      flex: true,
      flexGrow: true,
      flexPositive: true,
      flexShrink: true,
      flexNegative: true,
      flexOrder: true,
      gridArea: true,
      gridRow: true,
      gridRowEnd: true,
      gridRowSpan: true,
      gridRowStart: true,
      gridColumn: true,
      gridColumnEnd: true,
      gridColumnSpan: true,
      gridColumnStart: true,
      fontWeight: true,
      lineClamp: true,
      lineHeight: true,
      opacity: true,
      order: true,
      orphans: true,
      tabSize: true,
      widows: true,
      zIndex: true,
      zoom: true,
      // SVG-related properties
      fillOpacity: true,
      floodOpacity: true,
      stopOpacity: true,
      strokeDasharray: true,
      strokeDashoffset: true,
      strokeMiterlimit: true,
      strokeOpacity: true,
      strokeWidth: true
    };
    /**
     * @param {string} prefix vendor-specific prefix, eg: Webkit
     * @param {string} key style name, eg: transitionDuration
     * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
     * WebkitTransitionDuration
     */

    function prefixKey(prefix, key) {
      return prefix + key.charAt(0).toUpperCase() + key.substring(1);
    }
    /**
     * Support style names that may come passed in prefixed by adding permutations
     * of vendor prefixes.
     */


    var prefixes = ['Webkit', 'ms', 'Moz', 'O']; // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
    // infinite loop, because it iterates over the newly added props too.

    Object.keys(isUnitlessNumber).forEach(function (prop) {
      prefixes.forEach(function (prefix) {
        isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
      });
    });
    /**
     * Convert a value into the proper css writable value. The style name `name`
     * should be logical (no hyphens), as specified
     * in `CSSProperty.isUnitlessNumber`.
     *
     * @param {string} name CSS property name such as `topMargin`.
     * @param {*} value CSS property value such as `10px`.
     * @return {string} Normalized style value with dimensions applied.
     */

    function dangerousStyleValue(name, value, isCustomProperty) {
      // Note that we've removed escapeTextForBrowser() calls here since the
      // whole string will be escaped when the attribute is injected into
      // the markup. If you provide unsafe user data here they can inject
      // arbitrary CSS which may be problematic (I couldn't repro this):
      // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
      // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
      // This is not an XSS hole but instead a potential CSS injection issue
      // which has lead to a greater discussion about how we're going to
      // trust URLs moving forward. See #2115901
      var isEmpty = value == null || typeof value === 'boolean' || value === '';

      if (isEmpty) {
        return '';
      }

      if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {
        return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers
      }

      return ('' + value).trim();
    }

    var uppercasePattern = /([A-Z])/g;
    var msPattern = /^ms-/;
    /**
     * Hyphenates a camelcased CSS property name, for example:
     *
     *   > hyphenateStyleName('backgroundColor')
     *   < "background-color"
     *   > hyphenateStyleName('MozTransition')
     *   < "-moz-transition"
     *   > hyphenateStyleName('msTransition')
     *   < "-ms-transition"
     *
     * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
     * is converted to `-ms-`.
     */

    function hyphenateStyleName(name) {
      return name.replace(uppercasePattern, '-$1').toLowerCase().replace(msPattern, '-ms-');
    }

    var warnValidStyle = function () {};

    {
      // 'msTransform' is correct, but the other prefixes should be capitalized
      var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
      var msPattern$1 = /^-ms-/;
      var hyphenPattern = /-(.)/g; // style values shouldn't contain a semicolon

      var badStyleValueWithSemicolonPattern = /;\s*$/;
      var warnedStyleNames = {};
      var warnedStyleValues = {};
      var warnedForNaNValue = false;
      var warnedForInfinityValue = false;

      var camelize = function (string) {
        return string.replace(hyphenPattern, function (_, character) {
          return character.toUpperCase();
        });
      };

      var warnHyphenatedStyleName = function (name) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
          return;
        }

        warnedStyleNames[name] = true;
        warning$1(false, 'Unsupported style property %s. Did you mean %s?', name, // As Andi Smith suggests
        // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
        // is converted to lowercase `ms`.
        camelize(name.replace(msPattern$1, 'ms-')));
      };

      var warnBadVendoredStyleName = function (name) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
          return;
        }

        warnedStyleNames[name] = true;
        warning$1(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1));
      };

      var warnStyleValueWithSemicolon = function (name, value) {
        if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
          return;
        }

        warnedStyleValues[value] = true;
        warning$1(false, "Style property values shouldn't contain a semicolon. " + 'Try "%s: %s" instead.', name, value.replace(badStyleValueWithSemicolonPattern, ''));
      };

      var warnStyleValueIsNaN = function (name, value) {
        if (warnedForNaNValue) {
          return;
        }

        warnedForNaNValue = true;
        warning$1(false, '`NaN` is an invalid value for the `%s` css style property.', name);
      };

      var warnStyleValueIsInfinity = function (name, value) {
        if (warnedForInfinityValue) {
          return;
        }

        warnedForInfinityValue = true;
        warning$1(false, '`Infinity` is an invalid value for the `%s` css style property.', name);
      };

      warnValidStyle = function (name, value) {
        if (name.indexOf('-') > -1) {
          warnHyphenatedStyleName(name);
        } else if (badVendoredStyleNamePattern.test(name)) {
          warnBadVendoredStyleName(name);
        } else if (badStyleValueWithSemicolonPattern.test(value)) {
          warnStyleValueWithSemicolon(name, value);
        }

        if (typeof value === 'number') {
          if (isNaN(value)) {
            warnStyleValueIsNaN(name, value);
          } else if (!isFinite(value)) {
            warnStyleValueIsInfinity(name, value);
          }
        }
      };
    }
    var warnValidStyle$1 = warnValidStyle;
    /**
     * Operations for dealing with CSS properties.
     */

    /**
     * This creates a string that is expected to be equivalent to the style
     * attribute generated by server-side rendering. It by-passes warnings and
     * security checks so it's not safe to use this value for anything other than
     * comparison. It is only used in DEV for SSR validation.
     */

    function createDangerousStringForStyles(styles) {
      {
        var serialized = '';
        var delimiter = '';

        for (var styleName in styles) {
          if (!styles.hasOwnProperty(styleName)) {
            continue;
          }

          var styleValue = styles[styleName];

          if (styleValue != null) {
            var isCustomProperty = styleName.indexOf('--') === 0;
            serialized += delimiter + (isCustomProperty ? styleName : hyphenateStyleName(styleName)) + ':';
            serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);
            delimiter = ';';
          }
        }

        return serialized || null;
      }
    }
    /**
     * Sets the value for multiple styles on a node.  If a value is specified as
     * '' (empty string), the corresponding style property will be unset.
     *
     * @param {DOMElement} node
     * @param {object} styles
     */


    function setValueForStyles(node, styles) {
      var style = node.style;

      for (var styleName in styles) {
        if (!styles.hasOwnProperty(styleName)) {
          continue;
        }

        var isCustomProperty = styleName.indexOf('--') === 0;
        {
          if (!isCustomProperty) {
            warnValidStyle$1(styleName, styles[styleName]);
          }
        }
        var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);

        if (styleName === 'float') {
          styleName = 'cssFloat';
        }

        if (isCustomProperty) {
          style.setProperty(styleName, styleValue);
        } else {
          style[styleName] = styleValue;
        }
      }
    }

    function isValueEmpty(value) {
      return value == null || typeof value === 'boolean' || value === '';
    }
    /**
     * Given {color: 'red', overflow: 'hidden'} returns {
     *   color: 'color',
     *   overflowX: 'overflow',
     *   overflowY: 'overflow',
     * }. This can be read as "the overflowY property was set by the overflow
     * shorthand". That is, the values are the property that each was derived from.
     */


    function expandShorthandMap(styles) {
      var expanded = {};

      for (var key in styles) {
        var longhands = shorthandToLonghand[key] || [key];

        for (var i = 0; i < longhands.length; i++) {
          expanded[longhands[i]] = key;
        }
      }

      return expanded;
    }
    /**
     * When mixing shorthand and longhand property names, we warn during updates if
     * we expect an incorrect result to occur. In particular, we warn for:
     *
     * Updating a shorthand property (longhand gets overwritten):
     *   {font: 'foo', fontVariant: 'bar'} -> {font: 'baz', fontVariant: 'bar'}
     *   becomes .style.font = 'baz'
     * Removing a shorthand property (longhand gets lost too):
     *   {font: 'foo', fontVariant: 'bar'} -> {fontVariant: 'bar'}
     *   becomes .style.font = ''
     * Removing a longhand property (should revert to shorthand; doesn't):
     *   {font: 'foo', fontVariant: 'bar'} -> {font: 'foo'}
     *   becomes .style.fontVariant = ''
     */


    function validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {
      if (!warnAboutShorthandPropertyCollision) {
        return;
      }

      if (!nextStyles) {
        return;
      }

      var expandedUpdates = expandShorthandMap(styleUpdates);
      var expandedStyles = expandShorthandMap(nextStyles);
      var warnedAbout = {};

      for (var key in expandedUpdates) {
        var originalKey = expandedUpdates[key];
        var correctOriginalKey = expandedStyles[key];

        if (correctOriginalKey && originalKey !== correctOriginalKey) {
          var warningKey = originalKey + ',' + correctOriginalKey;

          if (warnedAbout[warningKey]) {
            continue;
          }

          warnedAbout[warningKey] = true;
          warning$1(false, '%s a style property during rerender (%s) when a ' + 'conflicting property is set (%s) can lead to styling bugs. To ' + "avoid this, don't mix shorthand and non-shorthand properties " + 'for the same value; instead, replace the shorthand with ' + 'separate values.', isValueEmpty(styleUpdates[originalKey]) ? 'Removing' : 'Updating', originalKey, correctOriginalKey);
        }
      }
    } // For HTML, certain tags should omit their close tag. We keep a whitelist for
    // those special-case tags.


    var omittedCloseTags = {
      area: true,
      base: true,
      br: true,
      col: true,
      embed: true,
      hr: true,
      img: true,
      input: true,
      keygen: true,
      link: true,
      meta: true,
      param: true,
      source: true,
      track: true,
      wbr: true // NOTE: menuitem's close tag should be omitted, but that causes problems.

    }; // `omittedCloseTags` except that `menuitem` should still have its closing tag.

    var voidElementTags = _assign({
      menuitem: true
    }, omittedCloseTags); // or add stack by default to invariants where possible.


    var HTML$1 = '__html';
    var ReactDebugCurrentFrame$3 = null;
    {
      ReactDebugCurrentFrame$3 = ReactSharedInternals.ReactDebugCurrentFrame;
    }

    function assertValidProps(tag, props) {
      if (!props) {
        return;
      } // Note the use of `==` which checks for null or undefined.


      if (voidElementTags[tag]) {
        (function () {
          if (!(props.children == null && props.dangerouslySetInnerHTML == null)) {
            {
              throw ReactError(Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`." + ReactDebugCurrentFrame$3.getStackAddendum()));
            }
          }
        })();
      }

      if (props.dangerouslySetInnerHTML != null) {
        (function () {
          if (!(props.children == null)) {
            {
              throw ReactError(Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`."));
            }
          }
        })();

        (function () {
          if (!(typeof props.dangerouslySetInnerHTML === 'object' && HTML$1 in props.dangerouslySetInnerHTML)) {
            {
              throw ReactError(Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information."));
            }
          }
        })();
      }

      {
        !(props.suppressContentEditableWarning || !props.contentEditable || props.children == null) ? warning$1(false, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
      }

      (function () {
        if (!(props.style == null || typeof props.style === 'object')) {
          {
            throw ReactError(Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX." + ReactDebugCurrentFrame$3.getStackAddendum()));
          }
        }
      })();
    }

    function isCustomComponent(tagName, props) {
      if (tagName.indexOf('-') === -1) {
        return typeof props.is === 'string';
      }

      switch (tagName) {
        // These are reserved SVG and MathML elements.
        // We don't mind this whitelist too much because we expect it to never grow.
        // The alternative is to track the namespace in a few places which is convoluted.
        // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
        case 'annotation-xml':
        case 'color-profile':
        case 'font-face':
        case 'font-face-src':
        case 'font-face-uri':
        case 'font-face-format':
        case 'font-face-name':
        case 'missing-glyph':
          return false;

        default:
          return true;
      }
    } // When adding attributes to the HTML or SVG whitelist, be sure to
    // also add them to this module to ensure casing and incorrect name
    // warnings.


    var possibleStandardNames = {
      // HTML
      accept: 'accept',
      acceptcharset: 'acceptCharset',
      'accept-charset': 'acceptCharset',
      accesskey: 'accessKey',
      action: 'action',
      allowfullscreen: 'allowFullScreen',
      alt: 'alt',
      as: 'as',
      async: 'async',
      autocapitalize: 'autoCapitalize',
      autocomplete: 'autoComplete',
      autocorrect: 'autoCorrect',
      autofocus: 'autoFocus',
      autoplay: 'autoPlay',
      autosave: 'autoSave',
      capture: 'capture',
      cellpadding: 'cellPadding',
      cellspacing: 'cellSpacing',
      challenge: 'challenge',
      charset: 'charSet',
      checked: 'checked',
      children: 'children',
      cite: 'cite',
      class: 'className',
      classid: 'classID',
      classname: 'className',
      cols: 'cols',
      colspan: 'colSpan',
      content: 'content',
      contenteditable: 'contentEditable',
      contextmenu: 'contextMenu',
      controls: 'controls',
      controlslist: 'controlsList',
      coords: 'coords',
      crossorigin: 'crossOrigin',
      dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
      data: 'data',
      datetime: 'dateTime',
      default: 'default',
      defaultchecked: 'defaultChecked',
      defaultvalue: 'defaultValue',
      defer: 'defer',
      dir: 'dir',
      disabled: 'disabled',
      disablepictureinpicture: 'disablePictureInPicture',
      download: 'download',
      draggable: 'draggable',
      enctype: 'encType',
      for: 'htmlFor',
      form: 'form',
      formmethod: 'formMethod',
      formaction: 'formAction',
      formenctype: 'formEncType',
      formnovalidate: 'formNoValidate',
      formtarget: 'formTarget',
      frameborder: 'frameBorder',
      headers: 'headers',
      height: 'height',
      hidden: 'hidden',
      high: 'high',
      href: 'href',
      hreflang: 'hrefLang',
      htmlfor: 'htmlFor',
      httpequiv: 'httpEquiv',
      'http-equiv': 'httpEquiv',
      icon: 'icon',
      id: 'id',
      innerhtml: 'innerHTML',
      inputmode: 'inputMode',
      integrity: 'integrity',
      is: 'is',
      itemid: 'itemID',
      itemprop: 'itemProp',
      itemref: 'itemRef',
      itemscope: 'itemScope',
      itemtype: 'itemType',
      keyparams: 'keyParams',
      keytype: 'keyType',
      kind: 'kind',
      label: 'label',
      lang: 'lang',
      list: 'list',
      loop: 'loop',
      low: 'low',
      manifest: 'manifest',
      marginwidth: 'marginWidth',
      marginheight: 'marginHeight',
      max: 'max',
      maxlength: 'maxLength',
      media: 'media',
      mediagroup: 'mediaGroup',
      method: 'method',
      min: 'min',
      minlength: 'minLength',
      multiple: 'multiple',
      muted: 'muted',
      name: 'name',
      nomodule: 'noModule',
      nonce: 'nonce',
      novalidate: 'noValidate',
      open: 'open',
      optimum: 'optimum',
      pattern: 'pattern',
      placeholder: 'placeholder',
      playsinline: 'playsInline',
      poster: 'poster',
      preload: 'preload',
      profile: 'profile',
      radiogroup: 'radioGroup',
      readonly: 'readOnly',
      referrerpolicy: 'referrerPolicy',
      rel: 'rel',
      required: 'required',
      reversed: 'reversed',
      role: 'role',
      rows: 'rows',
      rowspan: 'rowSpan',
      sandbox: 'sandbox',
      scope: 'scope',
      scoped: 'scoped',
      scrolling: 'scrolling',
      seamless: 'seamless',
      selected: 'selected',
      shape: 'shape',
      size: 'size',
      sizes: 'sizes',
      span: 'span',
      spellcheck: 'spellCheck',
      src: 'src',
      srcdoc: 'srcDoc',
      srclang: 'srcLang',
      srcset: 'srcSet',
      start: 'start',
      step: 'step',
      style: 'style',
      summary: 'summary',
      tabindex: 'tabIndex',
      target: 'target',
      title: 'title',
      type: 'type',
      usemap: 'useMap',
      value: 'value',
      width: 'width',
      wmode: 'wmode',
      wrap: 'wrap',
      // SVG
      about: 'about',
      accentheight: 'accentHeight',
      'accent-height': 'accentHeight',
      accumulate: 'accumulate',
      additive: 'additive',
      alignmentbaseline: 'alignmentBaseline',
      'alignment-baseline': 'alignmentBaseline',
      allowreorder: 'allowReorder',
      alphabetic: 'alphabetic',
      amplitude: 'amplitude',
      arabicform: 'arabicForm',
      'arabic-form': 'arabicForm',
      ascent: 'ascent',
      attributename: 'attributeName',
      attributetype: 'attributeType',
      autoreverse: 'autoReverse',
      azimuth: 'azimuth',
      basefrequency: 'baseFrequency',
      baselineshift: 'baselineShift',
      'baseline-shift': 'baselineShift',
      baseprofile: 'baseProfile',
      bbox: 'bbox',
      begin: 'begin',
      bias: 'bias',
      by: 'by',
      calcmode: 'calcMode',
      capheight: 'capHeight',
      'cap-height': 'capHeight',
      clip: 'clip',
      clippath: 'clipPath',
      'clip-path': 'clipPath',
      clippathunits: 'clipPathUnits',
      cliprule: 'clipRule',
      'clip-rule': 'clipRule',
      color: 'color',
      colorinterpolation: 'colorInterpolation',
      'color-interpolation': 'colorInterpolation',
      colorinterpolationfilters: 'colorInterpolationFilters',
      'color-interpolation-filters': 'colorInterpolationFilters',
      colorprofile: 'colorProfile',
      'color-profile': 'colorProfile',
      colorrendering: 'colorRendering',
      'color-rendering': 'colorRendering',
      contentscripttype: 'contentScriptType',
      contentstyletype: 'contentStyleType',
      cursor: 'cursor',
      cx: 'cx',
      cy: 'cy',
      d: 'd',
      datatype: 'datatype',
      decelerate: 'decelerate',
      descent: 'descent',
      diffuseconstant: 'diffuseConstant',
      direction: 'direction',
      display: 'display',
      divisor: 'divisor',
      dominantbaseline: 'dominantBaseline',
      'dominant-baseline': 'dominantBaseline',
      dur: 'dur',
      dx: 'dx',
      dy: 'dy',
      edgemode: 'edgeMode',
      elevation: 'elevation',
      enablebackground: 'enableBackground',
      'enable-background': 'enableBackground',
      end: 'end',
      exponent: 'exponent',
      externalresourcesrequired: 'externalResourcesRequired',
      fill: 'fill',
      fillopacity: 'fillOpacity',
      'fill-opacity': 'fillOpacity',
      fillrule: 'fillRule',
      'fill-rule': 'fillRule',
      filter: 'filter',
      filterres: 'filterRes',
      filterunits: 'filterUnits',
      floodopacity: 'floodOpacity',
      'flood-opacity': 'floodOpacity',
      floodcolor: 'floodColor',
      'flood-color': 'floodColor',
      focusable: 'focusable',
      fontfamily: 'fontFamily',
      'font-family': 'fontFamily',
      fontsize: 'fontSize',
      'font-size': 'fontSize',
      fontsizeadjust: 'fontSizeAdjust',
      'font-size-adjust': 'fontSizeAdjust',
      fontstretch: 'fontStretch',
      'font-stretch': 'fontStretch',
      fontstyle: 'fontStyle',
      'font-style': 'fontStyle',
      fontvariant: 'fontVariant',
      'font-variant': 'fontVariant',
      fontweight: 'fontWeight',
      'font-weight': 'fontWeight',
      format: 'format',
      from: 'from',
      fx: 'fx',
      fy: 'fy',
      g1: 'g1',
      g2: 'g2',
      glyphname: 'glyphName',
      'glyph-name': 'glyphName',
      glyphorientationhorizontal: 'glyphOrientationHorizontal',
      'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
      glyphorientationvertical: 'glyphOrientationVertical',
      'glyph-orientation-vertical': 'glyphOrientationVertical',
      glyphref: 'glyphRef',
      gradienttransform: 'gradientTransform',
      gradientunits: 'gradientUnits',
      hanging: 'hanging',
      horizadvx: 'horizAdvX',
      'horiz-adv-x': 'horizAdvX',
      horizoriginx: 'horizOriginX',
      'horiz-origin-x': 'horizOriginX',
      ideographic: 'ideographic',
      imagerendering: 'imageRendering',
      'image-rendering': 'imageRendering',
      in2: 'in2',
      in: 'in',
      inlist: 'inlist',
      intercept: 'intercept',
      k1: 'k1',
      k2: 'k2',
      k3: 'k3',
      k4: 'k4',
      k: 'k',
      kernelmatrix: 'kernelMatrix',
      kernelunitlength: 'kernelUnitLength',
      kerning: 'kerning',
      keypoints: 'keyPoints',
      keysplines: 'keySplines',
      keytimes: 'keyTimes',
      lengthadjust: 'lengthAdjust',
      letterspacing: 'letterSpacing',
      'letter-spacing': 'letterSpacing',
      lightingcolor: 'lightingColor',
      'lighting-color': 'lightingColor',
      limitingconeangle: 'limitingConeAngle',
      local: 'local',
      markerend: 'markerEnd',
      'marker-end': 'markerEnd',
      markerheight: 'markerHeight',
      markermid: 'markerMid',
      'marker-mid': 'markerMid',
      markerstart: 'markerStart',
      'marker-start': 'markerStart',
      markerunits: 'markerUnits',
      markerwidth: 'markerWidth',
      mask: 'mask',
      maskcontentunits: 'maskContentUnits',
      maskunits: 'maskUnits',
      mathematical: 'mathematical',
      mode: 'mode',
      numoctaves: 'numOctaves',
      offset: 'offset',
      opacity: 'opacity',
      operator: 'operator',
      order: 'order',
      orient: 'orient',
      orientation: 'orientation',
      origin: 'origin',
      overflow: 'overflow',
      overlineposition: 'overlinePosition',
      'overline-position': 'overlinePosition',
      overlinethickness: 'overlineThickness',
      'overline-thickness': 'overlineThickness',
      paintorder: 'paintOrder',
      'paint-order': 'paintOrder',
      panose1: 'panose1',
      'panose-1': 'panose1',
      pathlength: 'pathLength',
      patterncontentunits: 'patternContentUnits',
      patterntransform: 'patternTransform',
      patternunits: 'patternUnits',
      pointerevents: 'pointerEvents',
      'pointer-events': 'pointerEvents',
      points: 'points',
      pointsatx: 'pointsAtX',
      pointsaty: 'pointsAtY',
      pointsatz: 'pointsAtZ',
      prefix: 'prefix',
      preservealpha: 'preserveAlpha',
      preserveaspectratio: 'preserveAspectRatio',
      primitiveunits: 'primitiveUnits',
      property: 'property',
      r: 'r',
      radius: 'radius',
      refx: 'refX',
      refy: 'refY',
      renderingintent: 'renderingIntent',
      'rendering-intent': 'renderingIntent',
      repeatcount: 'repeatCount',
      repeatdur: 'repeatDur',
      requiredextensions: 'requiredExtensions',
      requiredfeatures: 'requiredFeatures',
      resource: 'resource',
      restart: 'restart',
      result: 'result',
      results: 'results',
      rotate: 'rotate',
      rx: 'rx',
      ry: 'ry',
      scale: 'scale',
      security: 'security',
      seed: 'seed',
      shaperendering: 'shapeRendering',
      'shape-rendering': 'shapeRendering',
      slope: 'slope',
      spacing: 'spacing',
      specularconstant: 'specularConstant',
      specularexponent: 'specularExponent',
      speed: 'speed',
      spreadmethod: 'spreadMethod',
      startoffset: 'startOffset',
      stddeviation: 'stdDeviation',
      stemh: 'stemh',
      stemv: 'stemv',
      stitchtiles: 'stitchTiles',
      stopcolor: 'stopColor',
      'stop-color': 'stopColor',
      stopopacity: 'stopOpacity',
      'stop-opacity': 'stopOpacity',
      strikethroughposition: 'strikethroughPosition',
      'strikethrough-position': 'strikethroughPosition',
      strikethroughthickness: 'strikethroughThickness',
      'strikethrough-thickness': 'strikethroughThickness',
      string: 'string',
      stroke: 'stroke',
      strokedasharray: 'strokeDasharray',
      'stroke-dasharray': 'strokeDasharray',
      strokedashoffset: 'strokeDashoffset',
      'stroke-dashoffset': 'strokeDashoffset',
      strokelinecap: 'strokeLinecap',
      'stroke-linecap': 'strokeLinecap',
      strokelinejoin: 'strokeLinejoin',
      'stroke-linejoin': 'strokeLinejoin',
      strokemiterlimit: 'strokeMiterlimit',
      'stroke-miterlimit': 'strokeMiterlimit',
      strokewidth: 'strokeWidth',
      'stroke-width': 'strokeWidth',
      strokeopacity: 'strokeOpacity',
      'stroke-opacity': 'strokeOpacity',
      suppresscontenteditablewarning: 'suppressContentEditableWarning',
      suppresshydrationwarning: 'suppressHydrationWarning',
      surfacescale: 'surfaceScale',
      systemlanguage: 'systemLanguage',
      tablevalues: 'tableValues',
      targetx: 'targetX',
      targety: 'targetY',
      textanchor: 'textAnchor',
      'text-anchor': 'textAnchor',
      textdecoration: 'textDecoration',
      'text-decoration': 'textDecoration',
      textlength: 'textLength',
      textrendering: 'textRendering',
      'text-rendering': 'textRendering',
      to: 'to',
      transform: 'transform',
      typeof: 'typeof',
      u1: 'u1',
      u2: 'u2',
      underlineposition: 'underlinePosition',
      'underline-position': 'underlinePosition',
      underlinethickness: 'underlineThickness',
      'underline-thickness': 'underlineThickness',
      unicode: 'unicode',
      unicodebidi: 'unicodeBidi',
      'unicode-bidi': 'unicodeBidi',
      unicoderange: 'unicodeRange',
      'unicode-range': 'unicodeRange',
      unitsperem: 'unitsPerEm',
      'units-per-em': 'unitsPerEm',
      unselectable: 'unselectable',
      valphabetic: 'vAlphabetic',
      'v-alphabetic': 'vAlphabetic',
      values: 'values',
      vectoreffect: 'vectorEffect',
      'vector-effect': 'vectorEffect',
      version: 'version',
      vertadvy: 'vertAdvY',
      'vert-adv-y': 'vertAdvY',
      vertoriginx: 'vertOriginX',
      'vert-origin-x': 'vertOriginX',
      vertoriginy: 'vertOriginY',
      'vert-origin-y': 'vertOriginY',
      vhanging: 'vHanging',
      'v-hanging': 'vHanging',
      videographic: 'vIdeographic',
      'v-ideographic': 'vIdeographic',
      viewbox: 'viewBox',
      viewtarget: 'viewTarget',
      visibility: 'visibility',
      vmathematical: 'vMathematical',
      'v-mathematical': 'vMathematical',
      vocab: 'vocab',
      widths: 'widths',
      wordspacing: 'wordSpacing',
      'word-spacing': 'wordSpacing',
      writingmode: 'writingMode',
      'writing-mode': 'writingMode',
      x1: 'x1',
      x2: 'x2',
      x: 'x',
      xchannelselector: 'xChannelSelector',
      xheight: 'xHeight',
      'x-height': 'xHeight',
      xlinkactuate: 'xlinkActuate',
      'xlink:actuate': 'xlinkActuate',
      xlinkarcrole: 'xlinkArcrole',
      'xlink:arcrole': 'xlinkArcrole',
      xlinkhref: 'xlinkHref',
      'xlink:href': 'xlinkHref',
      xlinkrole: 'xlinkRole',
      'xlink:role': 'xlinkRole',
      xlinkshow: 'xlinkShow',
      'xlink:show': 'xlinkShow',
      xlinktitle: 'xlinkTitle',
      'xlink:title': 'xlinkTitle',
      xlinktype: 'xlinkType',
      'xlink:type': 'xlinkType',
      xmlbase: 'xmlBase',
      'xml:base': 'xmlBase',
      xmllang: 'xmlLang',
      'xml:lang': 'xmlLang',
      xmlns: 'xmlns',
      'xml:space': 'xmlSpace',
      xmlnsxlink: 'xmlnsXlink',
      'xmlns:xlink': 'xmlnsXlink',
      xmlspace: 'xmlSpace',
      y1: 'y1',
      y2: 'y2',
      y: 'y',
      ychannelselector: 'yChannelSelector',
      z: 'z',
      zoomandpan: 'zoomAndPan'
    };
    var ariaProperties = {
      'aria-current': 0,
      // state
      'aria-details': 0,
      'aria-disabled': 0,
      // state
      'aria-hidden': 0,
      // state
      'aria-invalid': 0,
      // state
      'aria-keyshortcuts': 0,
      'aria-label': 0,
      'aria-roledescription': 0,
      // Widget Attributes
      'aria-autocomplete': 0,
      'aria-checked': 0,
      'aria-expanded': 0,
      'aria-haspopup': 0,
      'aria-level': 0,
      'aria-modal': 0,
      'aria-multiline': 0,
      'aria-multiselectable': 0,
      'aria-orientation': 0,
      'aria-placeholder': 0,
      'aria-pressed': 0,
      'aria-readonly': 0,
      'aria-required': 0,
      'aria-selected': 0,
      'aria-sort': 0,
      'aria-valuemax': 0,
      'aria-valuemin': 0,
      'aria-valuenow': 0,
      'aria-valuetext': 0,
      // Live Region Attributes
      'aria-atomic': 0,
      'aria-busy': 0,
      'aria-live': 0,
      'aria-relevant': 0,
      // Drag-and-Drop Attributes
      'aria-dropeffect': 0,
      'aria-grabbed': 0,
      // Relationship Attributes
      'aria-activedescendant': 0,
      'aria-colcount': 0,
      'aria-colindex': 0,
      'aria-colspan': 0,
      'aria-controls': 0,
      'aria-describedby': 0,
      'aria-errormessage': 0,
      'aria-flowto': 0,
      'aria-labelledby': 0,
      'aria-owns': 0,
      'aria-posinset': 0,
      'aria-rowcount': 0,
      'aria-rowindex': 0,
      'aria-rowspan': 0,
      'aria-setsize': 0
    };
    var warnedProperties = {};
    var rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
    var rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');
    var hasOwnProperty$1 = Object.prototype.hasOwnProperty;

    function validateProperty(tagName, name) {
      if (hasOwnProperty$1.call(warnedProperties, name) && warnedProperties[name]) {
        return true;
      }

      if (rARIACamel.test(name)) {
        var ariaName = 'aria-' + name.slice(4).toLowerCase();
        var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null; // If this is an aria-* attribute, but is not listed in the known DOM
        // DOM properties, then it is an invalid aria-* attribute.

        if (correctName == null) {
          warning$1(false, 'Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.', name);
          warnedProperties[name] = true;
          return true;
        } // aria-* attributes should be lowercase; suggest the lowercase version.


        if (name !== correctName) {
          warning$1(false, 'Invalid ARIA attribute `%s`. Did you mean `%s`?', name, correctName);
          warnedProperties[name] = true;
          return true;
        }
      }

      if (rARIA.test(name)) {
        var lowerCasedName = name.toLowerCase();
        var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null; // If this is an aria-* attribute, but is not listed in the known DOM
        // DOM properties, then it is an invalid aria-* attribute.

        if (standardName == null) {
          warnedProperties[name] = true;
          return false;
        } // aria-* attributes should be lowercase; suggest the lowercase version.


        if (name !== standardName) {
          warning$1(false, 'Unknown ARIA attribute `%s`. Did you mean `%s`?', name, standardName);
          warnedProperties[name] = true;
          return true;
        }
      }

      return true;
    }

    function warnInvalidARIAProps(type, props) {
      var invalidProps = [];

      for (var key in props) {
        var isValid = validateProperty(type, key);

        if (!isValid) {
          invalidProps.push(key);
        }
      }

      var unknownPropString = invalidProps.map(function (prop) {
        return '`' + prop + '`';
      }).join(', ');

      if (invalidProps.length === 1) {
        warning$1(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop', unknownPropString, type);
      } else if (invalidProps.length > 1) {
        warning$1(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop', unknownPropString, type);
      }
    }

    function validateProperties(type, props) {
      if (isCustomComponent(type, props)) {
        return;
      }

      warnInvalidARIAProps(type, props);
    }

    var didWarnValueNull = false;

    function validateProperties$1(type, props) {
      if (type !== 'input' && type !== 'textarea' && type !== 'select') {
        return;
      }

      if (props != null && props.value === null && !didWarnValueNull) {
        didWarnValueNull = true;

        if (type === 'select' && props.multiple) {
          warning$1(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty array when `multiple` is set to `true` ' + 'to clear the component or `undefined` for uncontrolled components.', type);
        } else {
          warning$1(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty string to clear the component or `undefined` ' + 'for uncontrolled components.', type);
        }
      }
    }

    var validateProperty$1 = function () {};

    {
      var warnedProperties$1 = {};
      var _hasOwnProperty = Object.prototype.hasOwnProperty;
      var EVENT_NAME_REGEX = /^on./;
      var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
      var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
      var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

      validateProperty$1 = function (tagName, name, value, canUseEventSystem) {
        if (_hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {
          return true;
        }

        var lowerCasedName = name.toLowerCase();

        if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {
          warning$1(false, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.');
          warnedProperties$1[name] = true;
          return true;
        } // We can't rely on the event system being injected on the server.


        if (canUseEventSystem) {
          if (registrationNameModules.hasOwnProperty(name)) {
            return true;
          }

          var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;

          if (registrationName != null) {
            warning$1(false, 'Invalid event handler property `%s`. Did you mean `%s`?', name, registrationName);
            warnedProperties$1[name] = true;
            return true;
          }

          if (EVENT_NAME_REGEX.test(name)) {
            warning$1(false, 'Unknown event handler property `%s`. It will be ignored.', name);
            warnedProperties$1[name] = true;
            return true;
          }
        } else if (EVENT_NAME_REGEX.test(name)) {
          // If no event plugins have been injected, we are in a server environment.
          // So we can't tell if the event name is correct for sure, but we can filter
          // out known bad ones like `onclick`. We can't suggest a specific replacement though.
          if (INVALID_EVENT_NAME_REGEX.test(name)) {
            warning$1(false, 'Invalid event handler property `%s`. ' + 'React events use the camelCase naming convention, for example `onClick`.', name);
          }

          warnedProperties$1[name] = true;
          return true;
        } // Let the ARIA attribute hook validate ARIA attributes


        if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
          return true;
        }

        if (lowerCasedName === 'innerhtml') {
          warning$1(false, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.');
          warnedProperties$1[name] = true;
          return true;
        }

        if (lowerCasedName === 'aria') {
          warning$1(false, 'The `aria` attribute is reserved for future use in React. ' + 'Pass individual `aria-` attributes instead.');
          warnedProperties$1[name] = true;
          return true;
        }

        if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {
          warning$1(false, 'Received a `%s` for a string attribute `is`. If this is expected, cast ' + 'the value to a string.', typeof value);
          warnedProperties$1[name] = true;
          return true;
        }

        if (typeof value === 'number' && isNaN(value)) {
          warning$1(false, 'Received NaN for the `%s` attribute. If this is expected, cast ' + 'the value to a string.', name);
          warnedProperties$1[name] = true;
          return true;
        }

        var propertyInfo = getPropertyInfo(name);
        var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED; // Known attributes should match the casing specified in the property config.

        if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
          var standardName = possibleStandardNames[lowerCasedName];

          if (standardName !== name) {
            warning$1(false, 'Invalid DOM property `%s`. Did you mean `%s`?', name, standardName);
            warnedProperties$1[name] = true;
            return true;
          }
        } else if (!isReserved && name !== lowerCasedName) {
          // Unknown attributes should have lowercase casing since that's how they
          // will be cased anyway with server rendering.
          warning$1(false, 'React does not recognize the `%s` prop on a DOM element. If you ' + 'intentionally want it to appear in the DOM as a custom ' + 'attribute, spell it as lowercase `%s` instead. ' + 'If you accidentally passed it from a parent component, remove ' + 'it from the DOM element.', name, lowerCasedName);
          warnedProperties$1[name] = true;
          return true;
        }

        if (typeof value === 'boolean' && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
          if (value) {
            warning$1(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.', value, name, name, value, name);
          } else {
            warning$1(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
          }

          warnedProperties$1[name] = true;
          return true;
        } // Now that we've validated casing, do not validate
        // data types for reserved props


        if (isReserved) {
          return true;
        } // Warn when a known attribute is a bad type


        if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
          warnedProperties$1[name] = true;
          return false;
        } // Warn when passing the strings 'false' or 'true' into a boolean prop


        if ((value === 'false' || value === 'true') && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
          warning$1(false, 'Received the string `%s` for the boolean attribute `%s`. ' + '%s ' + 'Did you mean %s={%s}?', value, name, value === 'false' ? 'The browser will interpret it as a truthy value.' : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
          warnedProperties$1[name] = true;
          return true;
        }

        return true;
      };
    }

    var warnUnknownProperties = function (type, props, canUseEventSystem) {
      var unknownProps = [];

      for (var key in props) {
        var isValid = validateProperty$1(type, key, props[key], canUseEventSystem);

        if (!isValid) {
          unknownProps.push(key);
        }
      }

      var unknownPropString = unknownProps.map(function (prop) {
        return '`' + prop + '`';
      }).join(', ');

      if (unknownProps.length === 1) {
        warning$1(false, 'Invalid value for prop %s on <%s> tag. Either remove it from the element, ' + 'or pass a string or number value to keep it in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior', unknownPropString, type);
      } else if (unknownProps.length > 1) {
        warning$1(false, 'Invalid values for props %s on <%s> tag. Either remove them from the element, ' + 'or pass a string or number value to keep them in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior', unknownPropString, type);
      }
    };

    function validateProperties$2(type, props, canUseEventSystem) {
      if (isCustomComponent(type, props)) {
        return;
      }

      warnUnknownProperties(type, props, canUseEventSystem);
    } // TODO: direct imports like some-package/src/* are bad. Fix me.


    var didWarnInvalidHydration = false;
    var didWarnShadyDOM = false;
    var didWarnScriptTags = false;
    var DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';
    var SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';
    var SUPPRESS_HYDRATION_WARNING$1 = 'suppressHydrationWarning';
    var AUTOFOCUS = 'autoFocus';
    var CHILDREN = 'children';
    var STYLE$1 = 'style';
    var HTML = '__html';
    var LISTENERS = 'listeners';
    var HTML_NAMESPACE = Namespaces.html;
    var warnedUnknownTags;
    var suppressHydrationWarning;
    var validatePropertiesInDevelopment;
    var warnForTextDifference;
    var warnForPropDifference;
    var warnForExtraAttributes;
    var warnForInvalidEventListener;
    var canDiffStyleForHydrationWarning;
    var normalizeMarkupForTextOrAttribute;
    var normalizeHTML;
    {
      warnedUnknownTags = {
        // Chrome is the only major browser not shipping <time>. But as of July
        // 2017 it intends to ship it due to widespread usage. We intentionally
        // *don't* warn for <time> even if it's unrecognized by Chrome because
        // it soon will be, and many apps have been using it anyway.
        time: true,
        // There are working polyfills for <dialog>. Let people use it.
        dialog: true,
        // Electron ships a custom <webview> tag to display external web content in
        // an isolated frame and process.
        // This tag is not present in non Electron environments such as JSDom which
        // is often used for testing purposes.
        // @see https://electronjs.org/docs/api/webview-tag
        webview: true
      };

      validatePropertiesInDevelopment = function (type, props) {
        validateProperties(type, props);
        validateProperties$1(type, props);
        validateProperties$2(type, props,
        /* canUseEventSystem */
        true);
      }; // IE 11 parses & normalizes the style attribute as opposed to other
      // browsers. It adds spaces and sorts the properties in some
      // non-alphabetical order. Handling that would require sorting CSS
      // properties in the client & server versions or applying
      // `expectedStyle` to a temporary DOM node to read its `style` attribute
      // normalized. Since it only affects IE, we're skipping style warnings
      // in that browser completely in favor of doing all that work.
      // See https://github.com/facebook/react/issues/11807


      canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode; // HTML parsing normalizes CR and CRLF to LF.
      // It also can turn \u0000 into \uFFFD inside attributes.
      // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream
      // If we have a mismatch, it might be caused by that.
      // We will still patch up in this case but not fire the warning.

      var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
      var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;

      normalizeMarkupForTextOrAttribute = function (markup) {
        var markupString = typeof markup === 'string' ? markup : '' + markup;
        return markupString.replace(NORMALIZE_NEWLINES_REGEX, '\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');
      };

      warnForTextDifference = function (serverText, clientText) {
        if (didWarnInvalidHydration) {
          return;
        }

        var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
        var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);

        if (normalizedServerText === normalizedClientText) {
          return;
        }

        didWarnInvalidHydration = true;
        warningWithoutStack$1(false, 'Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
      };

      warnForPropDifference = function (propName, serverValue, clientValue) {
        if (didWarnInvalidHydration) {
          return;
        }

        var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
        var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);

        if (normalizedServerValue === normalizedClientValue) {
          return;
        }

        didWarnInvalidHydration = true;
        warningWithoutStack$1(false, 'Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
      };

      warnForExtraAttributes = function (attributeNames) {
        if (didWarnInvalidHydration) {
          return;
        }

        didWarnInvalidHydration = true;
        var names = [];
        attributeNames.forEach(function (name) {
          names.push(name);
        });
        warningWithoutStack$1(false, 'Extra attributes from the server: %s', names);
      };

      warnForInvalidEventListener = function (registrationName, listener) {
        if (listener === false) {
          warning$1(false, 'Expected `%s` listener to be a function, instead got `false`.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', registrationName, registrationName, registrationName);
        } else {
          warning$1(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener);
        }
      }; // Parse the HTML and read it back to normalize the HTML string so that it
      // can be used for comparison.


      normalizeHTML = function (parent, html) {
        // We could have created a separate document here to avoid
        // re-initializing custom elements if they exist. But this breaks
        // how <noscript> is being handled. So we use the same document.
        // See the discussion in https://github.com/facebook/react/pull/11157.
        var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
        testElement.innerHTML = html;
        return testElement.innerHTML;
      };
    }

    function ensureListeningTo(rootContainerElement, registrationName) {
      var isDocumentOrFragment = rootContainerElement.nodeType === DOCUMENT_NODE || rootContainerElement.nodeType === DOCUMENT_FRAGMENT_NODE;
      var doc = isDocumentOrFragment ? rootContainerElement : rootContainerElement.ownerDocument;
      listenTo(registrationName, doc);
    }

    function getOwnerDocumentFromRootContainer(rootContainerElement) {
      return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
    }

    function noop() {}

    function trapClickOnNonInteractiveElement(node) {
      // Mobile Safari does not fire properly bubble click events on
      // non-interactive elements, which means delegated click listeners do not
      // fire. The workaround for this bug involves attaching an empty click
      // listener on the target node.
      // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
      // Just set it using the onclick property so that we don't have to manage any
      // bookkeeping for it. Not sure if we need to clear it when the listener is
      // removed.
      // TODO: Only do this for the relevant Safaris maybe?
      node.onclick = noop;
    }

    function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
      for (var propKey in nextProps) {
        if (!nextProps.hasOwnProperty(propKey)) {
          continue;
        }

        var nextProp = nextProps[propKey];

        if (propKey === STYLE$1) {
          {
            if (nextProp) {
              // Freeze the next style object so that we can assume it won't be
              // mutated. We have already warned for this in the past.
              Object.freeze(nextProp);
            }
          } // Relies on `updateStylesByID` not mutating `styleUpdates`.

          setValueForStyles(domElement, nextProp);
        } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
          var nextHtml = nextProp ? nextProp[HTML] : undefined;

          if (nextHtml != null) {
            setInnerHTML(domElement, nextHtml);
          }
        } else if (propKey === CHILDREN) {
          if (typeof nextProp === 'string') {
            // Avoid setting initial textContent when the text is empty. In IE11 setting
            // textContent on a <textarea> will cause the placeholder to not
            // show within the <textarea> until it has been focused and blurred again.
            // https://github.com/facebook/react/issues/6731#issuecomment-254874553
            var canSetTextContent = tag !== 'textarea' || nextProp !== '';

            if (canSetTextContent) {
              setTextContent(domElement, nextProp);
            }
          } else if (typeof nextProp === 'number') {
            setTextContent(domElement, '' + nextProp);
          }
        } else if (enableFlareAPI && propKey === LISTENERS || propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {// Noop
        } else if (propKey === AUTOFOCUS) {// We polyfill it separately on the client during commit.
          // We could have excluded it in the property list instead of
          // adding a special case here, but then it wouldn't be emitted
          // on server rendering (but we *do* want to emit it in SSR).
        } else if (registrationNameModules.hasOwnProperty(propKey)) {
          if (nextProp != null) {
            if (true && typeof nextProp !== 'function') {
              warnForInvalidEventListener(propKey, nextProp);
            }

            ensureListeningTo(rootContainerElement, propKey);
          }
        } else if (nextProp != null) {
          setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
        }
      }
    }

    function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
      // TODO: Handle wasCustomComponentTag
      for (var i = 0; i < updatePayload.length; i += 2) {
        var propKey = updatePayload[i];
        var propValue = updatePayload[i + 1];

        if (propKey === STYLE$1) {
          setValueForStyles(domElement, propValue);
        } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
          setInnerHTML(domElement, propValue);
        } else if (propKey === CHILDREN) {
          setTextContent(domElement, propValue);
        } else {
          setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
        }
      }
    }

    function createElement(type, props, rootContainerElement, parentNamespace) {
      var isCustomComponentTag; // We create tags in the namespace of their parent container, except HTML
      // tags get no namespace.

      var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
      var domElement;
      var namespaceURI = parentNamespace;

      if (namespaceURI === HTML_NAMESPACE) {
        namespaceURI = getIntrinsicNamespace(type);
      }

      if (namespaceURI === HTML_NAMESPACE) {
        {
          isCustomComponentTag = isCustomComponent(type, props); // Should this check be gated by parent namespace? Not sure we want to
          // allow <SVG> or <mATH>.

          !(isCustomComponentTag || type === type.toLowerCase()) ? warning$1(false, '<%s /> is using incorrect casing. ' + 'Use PascalCase for React components, ' + 'or lowercase for HTML elements.', type) : void 0;
        }

        if (type === 'script') {
          // Create the script via .innerHTML so its "parser-inserted" flag is
          // set to true and it does not execute
          var div = ownerDocument.createElement('div');
          {
            if (enableTrustedTypesIntegration && !didWarnScriptTags) {
              warning$1(false, 'Encountered a script tag while rendering React component. ' + 'Scripts inside React components are never executed when rendering ' + 'on the client. Consider using template tag instead ' + '(https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template).');
              didWarnScriptTags = true;
            }
          }
          div.innerHTML = '<script><' + '/script>'; // eslint-disable-line
          // This is guaranteed to yield a script element.

          var firstChild = div.firstChild;
          domElement = div.removeChild(firstChild);
        } else if (typeof props.is === 'string') {
          // $FlowIssue `createElement` should be updated for Web Components
          domElement = ownerDocument.createElement(type, {
            is: props.is
          });
        } else {
          // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
          // See discussion in https://github.com/facebook/react/pull/6896
          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
          domElement = ownerDocument.createElement(type); // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple` and `size`
          // attributes on `select`s needs to be added before `option`s are inserted.
          // This prevents:
          // - a bug where the `select` does not scroll to the correct option because singular
          //  `select` elements automatically pick the first item #13222
          // - a bug where the `select` set the first item as selected despite the `size` attribute #14239
          // See https://github.com/facebook/react/issues/13222
          // and https://github.com/facebook/react/issues/14239

          if (type === 'select') {
            var node = domElement;

            if (props.multiple) {
              node.multiple = true;
            } else if (props.size) {
              // Setting a size greater than 1 causes a select to behave like `multiple=true`, where
              // it is possible that no option is selected.
              //
              // This is only necessary when a select in "single selection mode".
              node.size = props.size;
            }
          }
        }
      } else {
        domElement = ownerDocument.createElementNS(namespaceURI, type);
      }

      {
        if (namespaceURI === HTML_NAMESPACE) {
          if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)) {
            warnedUnknownTags[type] = true;
            warning$1(false, 'The tag <%s> is unrecognized in this browser. ' + 'If you meant to render a React component, start its name with ' + 'an uppercase letter.', type);
          }
        }
      }
      return domElement;
    }

    function createTextNode(text, rootContainerElement) {
      return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
    }

    function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {
      var isCustomComponentTag = isCustomComponent(tag, rawProps);
      {
        validatePropertiesInDevelopment(tag, rawProps);

        if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
          warning$1(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerNameInDevOrNull() || 'A component');
          didWarnShadyDOM = true;
        }
      } // TODO: Make sure that we check isMounted before firing any of these events.

      var props;

      switch (tag) {
        case 'iframe':
        case 'object':
        case 'embed':
          trapBubbledEvent(TOP_LOAD, domElement);
          props = rawProps;
          break;

        case 'video':
        case 'audio':
          // Create listener for each media event
          for (var i = 0; i < mediaEventTypes.length; i++) {
            trapBubbledEvent(mediaEventTypes[i], domElement);
          }

          props = rawProps;
          break;

        case 'source':
          trapBubbledEvent(TOP_ERROR, domElement);
          props = rawProps;
          break;

        case 'img':
        case 'image':
        case 'link':
          trapBubbledEvent(TOP_ERROR, domElement);
          trapBubbledEvent(TOP_LOAD, domElement);
          props = rawProps;
          break;

        case 'form':
          trapBubbledEvent(TOP_RESET, domElement);
          trapBubbledEvent(TOP_SUBMIT, domElement);
          props = rawProps;
          break;

        case 'details':
          trapBubbledEvent(TOP_TOGGLE, domElement);
          props = rawProps;
          break;

        case 'input':
          initWrapperState(domElement, rawProps);
          props = getHostProps(domElement, rawProps);
          trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening
          // to onChange. Even if there is no listener.

          ensureListeningTo(rootContainerElement, 'onChange');
          break;

        case 'option':
          validateProps(domElement, rawProps);
          props = getHostProps$1(domElement, rawProps);
          break;

        case 'select':
          initWrapperState$1(domElement, rawProps);
          props = getHostProps$2(domElement, rawProps);
          trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening
          // to onChange. Even if there is no listener.

          ensureListeningTo(rootContainerElement, 'onChange');
          break;

        case 'textarea':
          initWrapperState$2(domElement, rawProps);
          props = getHostProps$3(domElement, rawProps);
          trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening
          // to onChange. Even if there is no listener.

          ensureListeningTo(rootContainerElement, 'onChange');
          break;

        default:
          props = rawProps;
      }

      assertValidProps(tag, props);
      setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);

      switch (tag) {
        case 'input':
          // TODO: Make sure we check if this is still unmounted or do any clean
          // up necessary since we never stop tracking anymore.
          track(domElement);
          postMountWrapper(domElement, rawProps, false);
          break;

        case 'textarea':
          // TODO: Make sure we check if this is still unmounted or do any clean
          // up necessary since we never stop tracking anymore.
          track(domElement);
          postMountWrapper$3(domElement, rawProps);
          break;

        case 'option':
          postMountWrapper$1(domElement, rawProps);
          break;

        case 'select':
          postMountWrapper$2(domElement, rawProps);
          break;

        default:
          if (typeof props.onClick === 'function') {
            // TODO: This cast may not be sound for SVG, MathML or custom elements.
            trapClickOnNonInteractiveElement(domElement);
          }

          break;
      }
    } // Calculate the diff between the two objects.


    function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
      {
        validatePropertiesInDevelopment(tag, nextRawProps);
      }
      var updatePayload = null;
      var lastProps;
      var nextProps;

      switch (tag) {
        case 'input':
          lastProps = getHostProps(domElement, lastRawProps);
          nextProps = getHostProps(domElement, nextRawProps);
          updatePayload = [];
          break;

        case 'option':
          lastProps = getHostProps$1(domElement, lastRawProps);
          nextProps = getHostProps$1(domElement, nextRawProps);
          updatePayload = [];
          break;

        case 'select':
          lastProps = getHostProps$2(domElement, lastRawProps);
          nextProps = getHostProps$2(domElement, nextRawProps);
          updatePayload = [];
          break;

        case 'textarea':
          lastProps = getHostProps$3(domElement, lastRawProps);
          nextProps = getHostProps$3(domElement, nextRawProps);
          updatePayload = [];
          break;

        default:
          lastProps = lastRawProps;
          nextProps = nextRawProps;

          if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') {
            // TODO: This cast may not be sound for SVG, MathML or custom elements.
            trapClickOnNonInteractiveElement(domElement);
          }

          break;
      }

      assertValidProps(tag, nextProps);
      var propKey;
      var styleName;
      var styleUpdates = null;

      for (propKey in lastProps) {
        if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
          continue;
        }

        if (propKey === STYLE$1) {
          var lastStyle = lastProps[propKey];

          for (styleName in lastStyle) {
            if (lastStyle.hasOwnProperty(styleName)) {
              if (!styleUpdates) {
                styleUpdates = {};
              }

              styleUpdates[styleName] = '';
            }
          }
        } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) {// Noop. This is handled by the clear text mechanism.
        } else if (enableFlareAPI && propKey === LISTENERS || propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {// Noop
        } else if (propKey === AUTOFOCUS) {// Noop. It doesn't work on updates anyway.
        } else if (registrationNameModules.hasOwnProperty(propKey)) {
          // This is a special case. If any listener updates we need to ensure
          // that the "current" fiber pointer gets updated so we need a commit
          // to update this element.
          if (!updatePayload) {
            updatePayload = [];
          }
        } else {
          // For all other deleted properties we add it to the queue. We use
          // the whitelist in the commit phase instead.
          (updatePayload = updatePayload || []).push(propKey, null);
        }
      }

      for (propKey in nextProps) {
        var nextProp = nextProps[propKey];
        var lastProp = lastProps != null ? lastProps[propKey] : undefined;

        if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
          continue;
        }

        if (propKey === STYLE$1) {
          {
            if (nextProp) {
              // Freeze the next style object so that we can assume it won't be
              // mutated. We have already warned for this in the past.
              Object.freeze(nextProp);
            }
          }

          if (lastProp) {
            // Unset styles on `lastProp` but not on `nextProp`.
            for (styleName in lastProp) {
              if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
                if (!styleUpdates) {
                  styleUpdates = {};
                }

                styleUpdates[styleName] = '';
              }
            } // Update styles that changed since `lastProp`.


            for (styleName in nextProp) {
              if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
                if (!styleUpdates) {
                  styleUpdates = {};
                }

                styleUpdates[styleName] = nextProp[styleName];
              }
            }
          } else {
            // Relies on `updateStylesByID` not mutating `styleUpdates`.
            if (!styleUpdates) {
              if (!updatePayload) {
                updatePayload = [];
              }

              updatePayload.push(propKey, styleUpdates);
            }

            styleUpdates = nextProp;
          }
        } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
          var nextHtml = nextProp ? nextProp[HTML] : undefined;
          var lastHtml = lastProp ? lastProp[HTML] : undefined;

          if (nextHtml != null) {
            if (lastHtml !== nextHtml) {
              (updatePayload = updatePayload || []).push(propKey, toStringOrTrustedType(nextHtml));
            }
          } else {// TODO: It might be too late to clear this if we have children
            // inserted already.
          }
        } else if (propKey === CHILDREN) {
          if (lastProp !== nextProp && (typeof nextProp === 'string' || typeof nextProp === 'number')) {
            (updatePayload = updatePayload || []).push(propKey, '' + nextProp);
          }
        } else if (enableFlareAPI && propKey === LISTENERS || propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {// Noop
        } else if (registrationNameModules.hasOwnProperty(propKey)) {
          if (nextProp != null) {
            // We eagerly listen to this even though we haven't committed yet.
            if (true && typeof nextProp !== 'function') {
              warnForInvalidEventListener(propKey, nextProp);
            }

            ensureListeningTo(rootContainerElement, propKey);
          }

          if (!updatePayload && lastProp !== nextProp) {
            // This is a special case. If any listener updates we need to ensure
            // that the "current" props pointer gets updated so we need a commit
            // to update this element.
            updatePayload = [];
          }
        } else {
          // For any other property we always add it to the queue and then we
          // filter it out using the whitelist during the commit.
          (updatePayload = updatePayload || []).push(propKey, nextProp);
        }
      }

      if (styleUpdates) {
        {
          validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE$1]);
        }
        (updatePayload = updatePayload || []).push(STYLE$1, styleUpdates);
      }

      return updatePayload;
    } // Apply the diff.


    function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
      // Update checked *before* name.
      // In the middle of an update, it is possible to have multiple checked.
      // When a checked radio tries to change name, browser makes another radio's checked false.
      if (tag === 'input' && nextRawProps.type === 'radio' && nextRawProps.name != null) {
        updateChecked(domElement, nextRawProps);
      }

      var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
      var isCustomComponentTag = isCustomComponent(tag, nextRawProps); // Apply the diff.

      updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag); // TODO: Ensure that an update gets scheduled if any of the special props
      // changed.

      switch (tag) {
        case 'input':
          // Update the wrapper around inputs *after* updating props. This has to
          // happen after `updateDOMProperties`. Otherwise HTML5 input validations
          // raise warnings and prevent the new value from being assigned.
          updateWrapper(domElement, nextRawProps);
          break;

        case 'textarea':
          updateWrapper$1(domElement, nextRawProps);
          break;

        case 'select':
          // <select> value update needs to occur after <option> children
          // reconciliation
          postUpdateWrapper(domElement, nextRawProps);
          break;
      }
    }

    function getPossibleStandardName(propName) {
      {
        var lowerCasedName = propName.toLowerCase();

        if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {
          return null;
        }

        return possibleStandardNames[lowerCasedName] || null;
      }
      return null;
    }

    function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement) {
      var isCustomComponentTag;
      var extraAttributeNames;
      {
        suppressHydrationWarning = rawProps[SUPPRESS_HYDRATION_WARNING$1] === true;
        isCustomComponentTag = isCustomComponent(tag, rawProps);
        validatePropertiesInDevelopment(tag, rawProps);

        if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
          warning$1(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerNameInDevOrNull() || 'A component');
          didWarnShadyDOM = true;
        }
      } // TODO: Make sure that we check isMounted before firing any of these events.

      switch (tag) {
        case 'iframe':
        case 'object':
        case 'embed':
          trapBubbledEvent(TOP_LOAD, domElement);
          break;

        case 'video':
        case 'audio':
          // Create listener for each media event
          for (var i = 0; i < mediaEventTypes.length; i++) {
            trapBubbledEvent(mediaEventTypes[i], domElement);
          }

          break;

        case 'source':
          trapBubbledEvent(TOP_ERROR, domElement);
          break;

        case 'img':
        case 'image':
        case 'link':
          trapBubbledEvent(TOP_ERROR, domElement);
          trapBubbledEvent(TOP_LOAD, domElement);
          break;

        case 'form':
          trapBubbledEvent(TOP_RESET, domElement);
          trapBubbledEvent(TOP_SUBMIT, domElement);
          break;

        case 'details':
          trapBubbledEvent(TOP_TOGGLE, domElement);
          break;

        case 'input':
          initWrapperState(domElement, rawProps);
          trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening
          // to onChange. Even if there is no listener.

          ensureListeningTo(rootContainerElement, 'onChange');
          break;

        case 'option':
          validateProps(domElement, rawProps);
          break;

        case 'select':
          initWrapperState$1(domElement, rawProps);
          trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening
          // to onChange. Even if there is no listener.

          ensureListeningTo(rootContainerElement, 'onChange');
          break;

        case 'textarea':
          initWrapperState$2(domElement, rawProps);
          trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening
          // to onChange. Even if there is no listener.

          ensureListeningTo(rootContainerElement, 'onChange');
          break;
      }

      assertValidProps(tag, rawProps);
      {
        extraAttributeNames = new Set();
        var attributes = domElement.attributes;

        for (var _i = 0; _i < attributes.length; _i++) {
          var name = attributes[_i].name.toLowerCase();

          switch (name) {
            // Built-in SSR attribute is whitelisted
            case 'data-reactroot':
              break;
            // Controlled attributes are not validated
            // TODO: Only ignore them on controlled tags.

            case 'value':
              break;

            case 'checked':
              break;

            case 'selected':
              break;

            default:
              // Intentionally use the original name.
              // See discussion in https://github.com/facebook/react/pull/10676.
              extraAttributeNames.add(attributes[_i].name);
          }
        }
      }
      var updatePayload = null;

      for (var propKey in rawProps) {
        if (!rawProps.hasOwnProperty(propKey)) {
          continue;
        }

        var nextProp = rawProps[propKey];

        if (propKey === CHILDREN) {
          // For text content children we compare against textContent. This
          // might match additional HTML that is hidden when we read it using
          // textContent. E.g. "foo" will match "f<span>oo</span>" but that still
          // satisfies our requirement. Our requirement is not to produce perfect
          // HTML and attributes. Ideally we should preserve structure but it's
          // ok not to if the visible content is still enough to indicate what
          // even listeners these nodes might be wired up to.
          // TODO: Warn if there is more than a single textNode as a child.
          // TODO: Should we use domElement.firstChild.nodeValue to compare?
          if (typeof nextProp === 'string') {
            if (domElement.textContent !== nextProp) {
              if (true && !suppressHydrationWarning) {
                warnForTextDifference(domElement.textContent, nextProp);
              }

              updatePayload = [CHILDREN, nextProp];
            }
          } else if (typeof nextProp === 'number') {
            if (domElement.textContent !== '' + nextProp) {
              if (true && !suppressHydrationWarning) {
                warnForTextDifference(domElement.textContent, nextProp);
              }

              updatePayload = [CHILDREN, '' + nextProp];
            }
          }
        } else if (registrationNameModules.hasOwnProperty(propKey)) {
          if (nextProp != null) {
            if (true && typeof nextProp !== 'function') {
              warnForInvalidEventListener(propKey, nextProp);
            }

            ensureListeningTo(rootContainerElement, propKey);
          }
        } else if (true && // Convince Flow we've calculated it (it's DEV-only in this method.)
        typeof isCustomComponentTag === 'boolean') {
          // Validate that the properties correspond to their expected values.
          var serverValue = void 0;
          var propertyInfo = getPropertyInfo(propKey);

          if (suppressHydrationWarning) {// Don't bother comparing. We're ignoring all these warnings.
          } else if (enableFlareAPI && propKey === LISTENERS || propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1 || // Controlled attributes are not validated
          // TODO: Only ignore them on controlled tags.
          propKey === 'value' || propKey === 'checked' || propKey === 'selected') {// Noop
          } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
            var serverHTML = domElement.innerHTML;
            var nextHtml = nextProp ? nextProp[HTML] : undefined;
            var expectedHTML = normalizeHTML(domElement, nextHtml != null ? nextHtml : '');

            if (expectedHTML !== serverHTML) {
              warnForPropDifference(propKey, serverHTML, expectedHTML);
            }
          } else if (propKey === STYLE$1) {
            // $FlowFixMe - Should be inferred as not undefined.
            extraAttributeNames.delete(propKey);

            if (canDiffStyleForHydrationWarning) {
              var expectedStyle = createDangerousStringForStyles(nextProp);
              serverValue = domElement.getAttribute('style');

              if (expectedStyle !== serverValue) {
                warnForPropDifference(propKey, serverValue, expectedStyle);
              }
            }
          } else if (isCustomComponentTag) {
            // $FlowFixMe - Should be inferred as not undefined.
            extraAttributeNames.delete(propKey.toLowerCase());
            serverValue = getValueForAttribute(domElement, propKey, nextProp);

            if (nextProp !== serverValue) {
              warnForPropDifference(propKey, serverValue, nextProp);
            }
          } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
            var isMismatchDueToBadCasing = false;

            if (propertyInfo !== null) {
              // $FlowFixMe - Should be inferred as not undefined.
              extraAttributeNames.delete(propertyInfo.attributeName);
              serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
            } else {
              var ownNamespace = parentNamespace;

              if (ownNamespace === HTML_NAMESPACE) {
                ownNamespace = getIntrinsicNamespace(tag);
              }

              if (ownNamespace === HTML_NAMESPACE) {
                // $FlowFixMe - Should be inferred as not undefined.
                extraAttributeNames.delete(propKey.toLowerCase());
              } else {
                var standardName = getPossibleStandardName(propKey);

                if (standardName !== null && standardName !== propKey) {
                  // If an SVG prop is supplied with bad casing, it will
                  // be successfully parsed from HTML, but will produce a mismatch
                  // (and would be incorrectly rendered on the client).
                  // However, we already warn about bad casing elsewhere.
                  // So we'll skip the misleading extra mismatch warning in this case.
                  isMismatchDueToBadCasing = true; // $FlowFixMe - Should be inferred as not undefined.

                  extraAttributeNames.delete(standardName);
                } // $FlowFixMe - Should be inferred as not undefined.


                extraAttributeNames.delete(propKey);
              }

              serverValue = getValueForAttribute(domElement, propKey, nextProp);
            }

            if (nextProp !== serverValue && !isMismatchDueToBadCasing) {
              warnForPropDifference(propKey, serverValue, nextProp);
            }
          }
        }
      }

      {
        // $FlowFixMe - Should be inferred as not undefined.
        if (extraAttributeNames.size > 0 && !suppressHydrationWarning) {
          // $FlowFixMe - Should be inferred as not undefined.
          warnForExtraAttributes(extraAttributeNames);
        }
      }

      switch (tag) {
        case 'input':
          // TODO: Make sure we check if this is still unmounted or do any clean
          // up necessary since we never stop tracking anymore.
          track(domElement);
          postMountWrapper(domElement, rawProps, true);
          break;

        case 'textarea':
          // TODO: Make sure we check if this is still unmounted or do any clean
          // up necessary since we never stop tracking anymore.
          track(domElement);
          postMountWrapper$3(domElement, rawProps);
          break;

        case 'select':
        case 'option':
          // For input and textarea we current always set the value property at
          // post mount to force it to diverge from attributes. However, for
          // option and select we don't quite do the same thing and select
          // is not resilient to the DOM state changing so we don't do that here.
          // TODO: Consider not doing this for input and textarea.
          break;

        default:
          if (typeof rawProps.onClick === 'function') {
            // TODO: This cast may not be sound for SVG, MathML or custom elements.
            trapClickOnNonInteractiveElement(domElement);
          }

          break;
      }

      return updatePayload;
    }

    function diffHydratedText(textNode, text) {
      var isDifferent = textNode.nodeValue !== text;
      return isDifferent;
    }

    function warnForUnmatchedText(textNode, text) {
      {
        warnForTextDifference(textNode.nodeValue, text);
      }
    }

    function warnForDeletedHydratableElement(parentNode, child) {
      {
        if (didWarnInvalidHydration) {
          return;
        }

        didWarnInvalidHydration = true;
        warningWithoutStack$1(false, 'Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
      }
    }

    function warnForDeletedHydratableText(parentNode, child) {
      {
        if (didWarnInvalidHydration) {
          return;
        }

        didWarnInvalidHydration = true;
        warningWithoutStack$1(false, 'Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
      }
    }

    function warnForInsertedHydratedElement(parentNode, tag, props) {
      {
        if (didWarnInvalidHydration) {
          return;
        }

        didWarnInvalidHydration = true;
        warningWithoutStack$1(false, 'Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());
      }
    }

    function warnForInsertedHydratedText(parentNode, text) {
      {
        if (text === '') {
          // We expect to insert empty text nodes since they're not represented in
          // the HTML.
          // TODO: Remove this special case if we can just avoid inserting empty
          // text nodes.
          return;
        }

        if (didWarnInvalidHydration) {
          return;
        }

        didWarnInvalidHydration = true;
        warningWithoutStack$1(false, 'Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
      }
    }

    function restoreControlledState$$1(domElement, tag, props) {
      switch (tag) {
        case 'input':
          restoreControlledState$1(domElement, props);
          return;

        case 'textarea':
          restoreControlledState$3(domElement, props);
          return;

        case 'select':
          restoreControlledState$2(domElement, props);
          return;
      }
    }

    function listenToEventResponderEventTypes(eventTypes, element) {
      if (enableFlareAPI) {
        // Get the listening Set for this element. We use this to track
        // what events we're listening to.
        var listeningSet = getListeningSetForElement(element); // Go through each target event type of the event responder

        for (var i = 0, length = eventTypes.length; i < length; ++i) {
          var eventType = eventTypes[i];
          var isPassive = !endsWith(eventType, '_active');
          var eventKey = isPassive ? eventType + '_passive' : eventType;
          var targetEventType = isPassive ? eventType : eventType.substring(0, eventType.length - 7);

          if (!listeningSet.has(eventKey)) {
            trapEventForResponderEventSystem(element, targetEventType, isPassive);
            listeningSet.add(eventKey);
          }
        }
      }
    } // We can remove this once the event API is stable and out of a flag


    if (enableFlareAPI) {
      setListenToResponderEventTypes(listenToEventResponderEventTypes);
    }

    function getActiveElement(doc) {
      doc = doc || (typeof document !== 'undefined' ? document : undefined);

      if (typeof doc === 'undefined') {
        return null;
      }

      try {
        return doc.activeElement || doc.body;
      } catch (e) {
        return doc.body;
      }
    }
    /**
     * Given any node return the first leaf node without children.
     *
     * @param {DOMElement|DOMTextNode} node
     * @return {DOMElement|DOMTextNode}
     */


    function getLeafNode(node) {
      while (node && node.firstChild) {
        node = node.firstChild;
      }

      return node;
    }
    /**
     * Get the next sibling within a container. This will walk up the
     * DOM if a node's siblings have been exhausted.
     *
     * @param {DOMElement|DOMTextNode} node
     * @return {?DOMElement|DOMTextNode}
     */


    function getSiblingNode(node) {
      while (node) {
        if (node.nextSibling) {
          return node.nextSibling;
        }

        node = node.parentNode;
      }
    }
    /**
     * Get object describing the nodes which contain characters at offset.
     *
     * @param {DOMElement|DOMTextNode} root
     * @param {number} offset
     * @return {?object}
     */


    function getNodeForCharacterOffset(root, offset) {
      var node = getLeafNode(root);
      var nodeStart = 0;
      var nodeEnd = 0;

      while (node) {
        if (node.nodeType === TEXT_NODE) {
          nodeEnd = nodeStart + node.textContent.length;

          if (nodeStart <= offset && nodeEnd >= offset) {
            return {
              node: node,
              offset: offset - nodeStart
            };
          }

          nodeStart = nodeEnd;
        }

        node = getLeafNode(getSiblingNode(node));
      }
    }
    /**
     * @param {DOMElement} outerNode
     * @return {?object}
     */


    function getOffsets(outerNode) {
      var ownerDocument = outerNode.ownerDocument;
      var win = ownerDocument && ownerDocument.defaultView || window;
      var selection = win.getSelection && win.getSelection();

      if (!selection || selection.rangeCount === 0) {
        return null;
      }

      var anchorNode = selection.anchorNode,
          anchorOffset = selection.anchorOffset,
          focusNode = selection.focusNode,
          focusOffset = selection.focusOffset; // In Firefox, anchorNode and focusNode can be "anonymous divs", e.g. the
      // up/down buttons on an <input type="number">. Anonymous divs do not seem to
      // expose properties, triggering a "Permission denied error" if any of its
      // properties are accessed. The only seemingly possible way to avoid erroring
      // is to access a property that typically works for non-anonymous divs and
      // catch any error that may otherwise arise. See
      // https://bugzilla.mozilla.org/show_bug.cgi?id=208427

      try {
        /* eslint-disable no-unused-expressions */
        anchorNode.nodeType;
        focusNode.nodeType;
        /* eslint-enable no-unused-expressions */
      } catch (e) {
        return null;
      }

      return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
    }
    /**
     * Returns {start, end} where `start` is the character/codepoint index of
     * (anchorNode, anchorOffset) within the textContent of `outerNode`, and
     * `end` is the index of (focusNode, focusOffset).
     *
     * Returns null if you pass in garbage input but we should probably just crash.
     *
     * Exported only for testing.
     */


    function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
      var length = 0;
      var start = -1;
      var end = -1;
      var indexWithinAnchor = 0;
      var indexWithinFocus = 0;
      var node = outerNode;
      var parentNode = null;

      outer: while (true) {
        var next = null;

        while (true) {
          if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) {
            start = length + anchorOffset;
          }

          if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) {
            end = length + focusOffset;
          }

          if (node.nodeType === TEXT_NODE) {
            length += node.nodeValue.length;
          }

          if ((next = node.firstChild) === null) {
            break;
          } // Moving from `node` to its first child `next`.


          parentNode = node;
          node = next;
        }

        while (true) {
          if (node === outerNode) {
            // If `outerNode` has children, this is always the second time visiting
            // it. If it has no children, this is still the first loop, and the only
            // valid selection is anchorNode and focusNode both equal to this node
            // and both offsets 0, in which case we will have handled above.
            break outer;
          }

          if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {
            start = length;
          }

          if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {
            end = length;
          }

          if ((next = node.nextSibling) !== null) {
            break;
          }

          node = parentNode;
          parentNode = node.parentNode;
        } // Moving from `node` to its next sibling `next`.


        node = next;
      }

      if (start === -1 || end === -1) {
        // This should never happen. (Would happen if the anchor/focus nodes aren't
        // actually inside the passed-in node.)
        return null;
      }

      return {
        start: start,
        end: end
      };
    }
    /**
     * In modern non-IE browsers, we can support both forward and backward
     * selections.
     *
     * Note: IE10+ supports the Selection object, but it does not support
     * the `extend` method, which means that even in modern IE, it's not possible
     * to programmatically create a backward selection. Thus, for all IE
     * versions, we use the old IE API to create our selections.
     *
     * @param {DOMElement|DOMTextNode} node
     * @param {object} offsets
     */


    function setOffsets(node, offsets) {
      var doc = node.ownerDocument || document;
      var win = doc && doc.defaultView || window; // Edge fails with "Object expected" in some scenarios.
      // (For instance: TinyMCE editor used in a list component that supports pasting to add more,
      // fails when pasting 100+ items)

      if (!win.getSelection) {
        return;
      }

      var selection = win.getSelection();
      var length = node.textContent.length;
      var start = Math.min(offsets.start, length);
      var end = offsets.end === undefined ? start : Math.min(offsets.end, length); // IE 11 uses modern selection, but doesn't support the extend method.
      // Flip backward selections, so we can set with a single range.

      if (!selection.extend && start > end) {
        var temp = end;
        end = start;
        start = temp;
      }

      var startMarker = getNodeForCharacterOffset(node, start);
      var endMarker = getNodeForCharacterOffset(node, end);

      if (startMarker && endMarker) {
        if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {
          return;
        }

        var range = doc.createRange();
        range.setStart(startMarker.node, startMarker.offset);
        selection.removeAllRanges();

        if (start > end) {
          selection.addRange(range);
          selection.extend(endMarker.node, endMarker.offset);
        } else {
          range.setEnd(endMarker.node, endMarker.offset);
          selection.addRange(range);
        }
      }
    }

    function isTextNode(node) {
      return node && node.nodeType === TEXT_NODE;
    }

    function containsNode(outerNode, innerNode) {
      if (!outerNode || !innerNode) {
        return false;
      } else if (outerNode === innerNode) {
        return true;
      } else if (isTextNode(outerNode)) {
        return false;
      } else if (isTextNode(innerNode)) {
        return containsNode(outerNode, innerNode.parentNode);
      } else if ('contains' in outerNode) {
        return outerNode.contains(innerNode);
      } else if (outerNode.compareDocumentPosition) {
        return !!(outerNode.compareDocumentPosition(innerNode) & 16);
      } else {
        return false;
      }
    }

    function isInDocument(node) {
      return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);
    }

    function isSameOriginFrame(iframe) {
      try {
        // Accessing the contentDocument of a HTMLIframeElement can cause the browser
        // to throw, e.g. if it has a cross-origin src attribute.
        // Safari will show an error in the console when the access results in "Blocked a frame with origin". e.g:
        // iframe.contentDocument.defaultView;
        // A safety way is to access one of the cross origin properties: Window or Location
        // Which might result in "SecurityError" DOM Exception and it is compatible to Safari.
        // https://html.spec.whatwg.org/multipage/browsers.html#integration-with-idl
        return typeof iframe.contentWindow.location.href === 'string';
      } catch (err) {
        return false;
      }
    }

    function getActiveElementDeep() {
      var win = window;
      var element = getActiveElement();

      while (element instanceof win.HTMLIFrameElement) {
        if (isSameOriginFrame(element)) {
          win = element.contentWindow;
        } else {
          return element;
        }

        element = getActiveElement(win.document);
      }

      return element;
    }
    /**
     * @ReactInputSelection: React input selection module. Based on Selection.js,
     * but modified to be suitable for react and has a couple of bug fixes (doesn't
     * assume buttons have range selections allowed).
     * Input selection module for React.
     */

    /**
     * @hasSelectionCapabilities: we get the element types that support selection
     * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`
     * and `selectionEnd` rows.
     */


    function hasSelectionCapabilities(elem) {
      var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
      return nodeName && (nodeName === 'input' && (elem.type === 'text' || elem.type === 'search' || elem.type === 'tel' || elem.type === 'url' || elem.type === 'password') || nodeName === 'textarea' || elem.contentEditable === 'true');
    }

    function getSelectionInformation() {
      var focusedElem = getActiveElementDeep();
      return {
        focusedElem: focusedElem,
        selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection(focusedElem) : null
      };
    }
    /**
     * @restoreSelection: If any selection information was potentially lost,
     * restore it. This is useful when performing operations that could remove dom
     * nodes and place them back in, resulting in focus being lost.
     */


    function restoreSelection(priorSelectionInformation) {
      var curFocusedElem = getActiveElementDeep();
      var priorFocusedElem = priorSelectionInformation.focusedElem;
      var priorSelectionRange = priorSelectionInformation.selectionRange;

      if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
        if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) {
          setSelection(priorFocusedElem, priorSelectionRange);
        } // Focusing a node can change the scroll position, which is undesirable


        var ancestors = [];
        var ancestor = priorFocusedElem;

        while (ancestor = ancestor.parentNode) {
          if (ancestor.nodeType === ELEMENT_NODE) {
            ancestors.push({
              element: ancestor,
              left: ancestor.scrollLeft,
              top: ancestor.scrollTop
            });
          }
        }

        if (typeof priorFocusedElem.focus === 'function') {
          priorFocusedElem.focus();
        }

        for (var i = 0; i < ancestors.length; i++) {
          var info = ancestors[i];
          info.element.scrollLeft = info.left;
          info.element.scrollTop = info.top;
        }
      }
    }
    /**
     * @getSelection: Gets the selection bounds of a focused textarea, input or
     * contentEditable node.
     * -@input: Look up selection bounds of this input
     * -@return {start: selectionStart, end: selectionEnd}
     */


    function getSelection(input) {
      var selection;

      if ('selectionStart' in input) {
        // Modern browser with input or textarea.
        selection = {
          start: input.selectionStart,
          end: input.selectionEnd
        };
      } else {
        // Content editable or old IE textarea.
        selection = getOffsets(input);
      }

      return selection || {
        start: 0,
        end: 0
      };
    }
    /**
     * @setSelection: Sets the selection bounds of a textarea or input and focuses
     * the input.
     * -@input     Set selection bounds of this input or textarea
     * -@offsets   Object of same form that is returned from get*
     */


    function setSelection(input, offsets) {
      var start = offsets.start,
          end = offsets.end;

      if (end === undefined) {
        end = start;
      }

      if ('selectionStart' in input) {
        input.selectionStart = start;
        input.selectionEnd = Math.min(end, input.value.length);
      } else {
        setOffsets(input, offsets);
      }
    }

    var validateDOMNesting = function () {};

    var updatedAncestorInfo = function () {};

    {
      // This validation code was written based on the HTML5 parsing spec:
      // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
      //
      // Note: this does not catch all invalid nesting, nor does it try to (as it's
      // not clear what practical benefit doing so provides); instead, we warn only
      // for cases where the parser will give a parse tree differing from what React
      // intended. For example, <b><div></div></b> is invalid but we don't warn
      // because it still parses correctly; we do warn for other cases like nested
      // <p> tags where the beginning of the second element implicitly closes the
      // first, causing a confusing mess.
      // https://html.spec.whatwg.org/multipage/syntax.html#special
      var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp']; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope

      var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template', // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
      // TODO: Distinguish by namespace here -- for <title>, including it here
      // errs on the side of fewer warnings
      'foreignObject', 'desc', 'title']; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope

      var buttonScopeTags = inScopeTags.concat(['button']); // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags

      var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
      var emptyAncestorInfo = {
        current: null,
        formTag: null,
        aTagInScope: null,
        buttonTagInScope: null,
        nobrTagInScope: null,
        pTagInButtonScope: null,
        listItemTagAutoclosing: null,
        dlItemTagAutoclosing: null
      };

      updatedAncestorInfo = function (oldInfo, tag) {
        var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);

        var info = {
          tag: tag
        };

        if (inScopeTags.indexOf(tag) !== -1) {
          ancestorInfo.aTagInScope = null;
          ancestorInfo.buttonTagInScope = null;
          ancestorInfo.nobrTagInScope = null;
        }

        if (buttonScopeTags.indexOf(tag) !== -1) {
          ancestorInfo.pTagInButtonScope = null;
        } // See rules for 'li', 'dd', 'dt' start tags in
        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody


        if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
          ancestorInfo.listItemTagAutoclosing = null;
          ancestorInfo.dlItemTagAutoclosing = null;
        }

        ancestorInfo.current = info;

        if (tag === 'form') {
          ancestorInfo.formTag = info;
        }

        if (tag === 'a') {
          ancestorInfo.aTagInScope = info;
        }

        if (tag === 'button') {
          ancestorInfo.buttonTagInScope = info;
        }

        if (tag === 'nobr') {
          ancestorInfo.nobrTagInScope = info;
        }

        if (tag === 'p') {
          ancestorInfo.pTagInButtonScope = info;
        }

        if (tag === 'li') {
          ancestorInfo.listItemTagAutoclosing = info;
        }

        if (tag === 'dd' || tag === 'dt') {
          ancestorInfo.dlItemTagAutoclosing = info;
        }

        return ancestorInfo;
      };
      /**
       * Returns whether
       */


      var isTagValidWithParent = function (tag, parentTag) {
        // First, let's check if we're in an unusual parsing mode...
        switch (parentTag) {
          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
          case 'select':
            return tag === 'option' || tag === 'optgroup' || tag === '#text';

          case 'optgroup':
            return tag === 'option' || tag === '#text';
          // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
          // but

          case 'option':
            return tag === '#text';
          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
          // No special behavior since these rules fall back to "in body" mode for
          // all except special table nodes which cause bad parsing behavior anyway.
          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr

          case 'tr':
            return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody

          case 'tbody':
          case 'thead':
          case 'tfoot':
            return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup

          case 'colgroup':
            return tag === 'col' || tag === 'template';
          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable

          case 'table':
            return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead

          case 'head':
            return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
          // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element

          case 'html':
            return tag === 'head' || tag === 'body' || tag === 'frameset';

          case 'frameset':
            return tag === 'frame';

          case '#document':
            return tag === 'html';
        } // Probably in the "in body" parsing mode, so we outlaw only tag combos
        // where the parsing rules cause implicit opens or closes to be added.
        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody


        switch (tag) {
          case 'h1':
          case 'h2':
          case 'h3':
          case 'h4':
          case 'h5':
          case 'h6':
            return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

          case 'rp':
          case 'rt':
            return impliedEndTags.indexOf(parentTag) === -1;

          case 'body':
          case 'caption':
          case 'col':
          case 'colgroup':
          case 'frameset':
          case 'frame':
          case 'head':
          case 'html':
          case 'tbody':
          case 'td':
          case 'tfoot':
          case 'th':
          case 'thead':
          case 'tr':
            // These tags are only valid with a few parents that have special child
            // parsing rules -- if we're down here, then none of those matched and
            // so we allow it only if we don't know what the parent is, as all other
            // cases are invalid.
            return parentTag == null;
        }

        return true;
      };
      /**
       * Returns whether
       */


      var findInvalidAncestorForTag = function (tag, ancestorInfo) {
        switch (tag) {
          case 'address':
          case 'article':
          case 'aside':
          case 'blockquote':
          case 'center':
          case 'details':
          case 'dialog':
          case 'dir':
          case 'div':
          case 'dl':
          case 'fieldset':
          case 'figcaption':
          case 'figure':
          case 'footer':
          case 'header':
          case 'hgroup':
          case 'main':
          case 'menu':
          case 'nav':
          case 'ol':
          case 'p':
          case 'section':
          case 'summary':
          case 'ul':
          case 'pre':
          case 'listing':
          case 'table':
          case 'hr':
          case 'xmp':
          case 'h1':
          case 'h2':
          case 'h3':
          case 'h4':
          case 'h5':
          case 'h6':
            return ancestorInfo.pTagInButtonScope;

          case 'form':
            return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

          case 'li':
            return ancestorInfo.listItemTagAutoclosing;

          case 'dd':
          case 'dt':
            return ancestorInfo.dlItemTagAutoclosing;

          case 'button':
            return ancestorInfo.buttonTagInScope;

          case 'a':
            // Spec says something about storing a list of markers, but it sounds
            // equivalent to this check.
            return ancestorInfo.aTagInScope;

          case 'nobr':
            return ancestorInfo.nobrTagInScope;
        }

        return null;
      };

      var didWarn$1 = {};

      validateDOMNesting = function (childTag, childText, ancestorInfo) {
        ancestorInfo = ancestorInfo || emptyAncestorInfo;
        var parentInfo = ancestorInfo.current;
        var parentTag = parentInfo && parentInfo.tag;

        if (childText != null) {
          !(childTag == null) ? warningWithoutStack$1(false, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
          childTag = '#text';
        }

        var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
        var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
        var invalidParentOrAncestor = invalidParent || invalidAncestor;

        if (!invalidParentOrAncestor) {
          return;
        }

        var ancestorTag = invalidParentOrAncestor.tag;
        var addendum = getCurrentFiberStackInDev();
        var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + addendum;

        if (didWarn$1[warnKey]) {
          return;
        }

        didWarn$1[warnKey] = true;
        var tagDisplayName = childTag;
        var whitespaceInfo = '';

        if (childTag === '#text') {
          if (/\S/.test(childText)) {
            tagDisplayName = 'Text nodes';
          } else {
            tagDisplayName = 'Whitespace text nodes';
            whitespaceInfo = " Make sure you don't have any extra whitespace between tags on " + 'each line of your source code.';
          }
        } else {
          tagDisplayName = '<' + childTag + '>';
        }

        if (invalidParent) {
          var info = '';

          if (ancestorTag === 'table' && childTag === 'tr') {
            info += ' Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by ' + 'the browser.';
          }

          warningWithoutStack$1(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s%s', tagDisplayName, ancestorTag, whitespaceInfo, info, addendum);
        } else {
          warningWithoutStack$1(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>.%s', tagDisplayName, ancestorTag, addendum);
        }
      };
    } // can re-export everything from this module.

    function shim() {
      (function () {
        {
          {
            throw ReactError(Error("The current renderer does not support persistence. This error is likely caused by a bug in React. Please file an issue."));
          }
        }
      })();
    } // Persistence (when unsupported)


    var supportsPersistence = false;
    var cloneInstance = shim;
    var cloneFundamentalInstance = shim;
    var createContainerChildSet = shim;
    var appendChildToContainerChildSet = shim;
    var finalizeContainerChildren = shim;
    var replaceContainerChildren = shim;
    var cloneHiddenInstance = shim;
    var cloneHiddenTextInstance = shim;
    var SUPPRESS_HYDRATION_WARNING;
    {
      SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';
    }
    var SUSPENSE_START_DATA = '$';
    var SUSPENSE_END_DATA = '/$';
    var SUSPENSE_PENDING_START_DATA = '$?';
    var SUSPENSE_FALLBACK_START_DATA = '$!';
    var STYLE = 'style';
    var eventsEnabled = null;
    var selectionInformation = null;

    function shouldAutoFocusHostComponent(type, props) {
      switch (type) {
        case 'button':
        case 'input':
        case 'select':
        case 'textarea':
          return !!props.autoFocus;
      }

      return false;
    }

    function getRootHostContext(rootContainerInstance) {
      var type;
      var namespace;
      var nodeType = rootContainerInstance.nodeType;

      switch (nodeType) {
        case DOCUMENT_NODE:
        case DOCUMENT_FRAGMENT_NODE:
          {
            type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';
            var root = rootContainerInstance.documentElement;
            namespace = root ? root.namespaceURI : getChildNamespace(null, '');
            break;
          }

        default:
          {
            var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
            var ownNamespace = container.namespaceURI || null;
            type = container.tagName;
            namespace = getChildNamespace(ownNamespace, type);
            break;
          }
      }

      {
        var validatedTag = type.toLowerCase();
        var ancestorInfo = updatedAncestorInfo(null, validatedTag);
        return {
          namespace: namespace,
          ancestorInfo: ancestorInfo
        };
      }
      return namespace;
    }

    function getChildHostContext(parentHostContext, type, rootContainerInstance) {
      {
        var parentHostContextDev = parentHostContext;
        var namespace = getChildNamespace(parentHostContextDev.namespace, type);
        var ancestorInfo = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type);
        return {
          namespace: namespace,
          ancestorInfo: ancestorInfo
        };
      }
      var parentNamespace = parentHostContext;
      return getChildNamespace(parentNamespace, type);
    }

    function getPublicInstance(instance) {
      return instance;
    }

    function prepareForCommit(containerInfo) {
      eventsEnabled = isEnabled();
      selectionInformation = getSelectionInformation();
      setEnabled(false);
    }

    function resetAfterCommit(containerInfo) {
      restoreSelection(selectionInformation);
      selectionInformation = null;
      setEnabled(eventsEnabled);
      eventsEnabled = null;
    }

    function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
      var parentNamespace;
      {
        // TODO: take namespace into account when validating.
        var hostContextDev = hostContext;
        validateDOMNesting(type, null, hostContextDev.ancestorInfo);

        if (typeof props.children === 'string' || typeof props.children === 'number') {
          var string = '' + props.children;
          var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
          validateDOMNesting(null, string, ownAncestorInfo);
        }

        parentNamespace = hostContextDev.namespace;
      }
      var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
      precacheFiberNode(internalInstanceHandle, domElement);
      updateFiberProps(domElement, props);
      return domElement;
    }

    function appendInitialChild(parentInstance, child) {
      parentInstance.appendChild(child);
    }

    function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
      setInitialProperties(domElement, type, props, rootContainerInstance);
      return shouldAutoFocusHostComponent(type, props);
    }

    function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
      {
        var hostContextDev = hostContext;

        if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === 'string' || typeof newProps.children === 'number')) {
          var string = '' + newProps.children;
          var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
          validateDOMNesting(null, string, ownAncestorInfo);
        }
      }
      return diffProperties(domElement, type, oldProps, newProps, rootContainerInstance);
    }

    function shouldSetTextContent(type, props) {
      return type === 'textarea' || type === 'option' || type === 'noscript' || typeof props.children === 'string' || typeof props.children === 'number' || typeof props.dangerouslySetInnerHTML === 'object' && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;
    }

    function shouldDeprioritizeSubtree(type, props) {
      return !!props.hidden;
    }

    function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
      {
        var hostContextDev = hostContext;
        validateDOMNesting(null, text, hostContextDev.ancestorInfo);
      }
      var textNode = createTextNode(text, rootContainerInstance);
      precacheFiberNode(internalInstanceHandle, textNode);
      return textNode;
    }

    var isPrimaryRenderer = true;
    var warnsIfNotActing = true; // This initialization code may run even on server environments
    // if a component just imports ReactDOM (e.g. for findDOMNode).
    // Some environments might not have setTimeout or clearTimeout.

    var scheduleTimeout = typeof setTimeout === 'function' ? setTimeout : undefined;
    var cancelTimeout = typeof clearTimeout === 'function' ? clearTimeout : undefined;
    var noTimeout = -1; // -------------------
    //     Mutation
    // -------------------

    var supportsMutation = true;

    function commitMount(domElement, type, newProps, internalInstanceHandle) {
      // Despite the naming that might imply otherwise, this method only
      // fires if there is an `Update` effect scheduled during mounting.
      // This happens if `finalizeInitialChildren` returns `true` (which it
      // does to implement the `autoFocus` attribute on the client). But
      // there are also other cases when this might happen (such as patching
      // up text content during hydration mismatch). So we'll check this again.
      if (shouldAutoFocusHostComponent(type, newProps)) {
        domElement.focus();
      }
    }

    function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
      // Update the props handle so that we know which props are the ones with
      // with current event handlers.
      updateFiberProps(domElement, newProps); // Apply the diff to the DOM node.

      updateProperties(domElement, updatePayload, type, oldProps, newProps);
    }

    function resetTextContent(domElement) {
      setTextContent(domElement, '');
    }

    function commitTextUpdate(textInstance, oldText, newText) {
      textInstance.nodeValue = newText;
    }

    function appendChild(parentInstance, child) {
      parentInstance.appendChild(child);
    }

    function appendChildToContainer(container, child) {
      var parentNode;

      if (container.nodeType === COMMENT_NODE) {
        parentNode = container.parentNode;
        parentNode.insertBefore(child, container);
      } else {
        parentNode = container;
        parentNode.appendChild(child);
      } // This container might be used for a portal.
      // If something inside a portal is clicked, that click should bubble
      // through the React tree. However, on Mobile Safari the click would
      // never bubble through the *DOM* tree unless an ancestor with onclick
      // event exists. So we wouldn't see it and dispatch it.
      // This is why we ensure that non React root containers have inline onclick
      // defined.
      // https://github.com/facebook/react/issues/11918


      var reactRootContainer = container._reactRootContainer;

      if ((reactRootContainer === null || reactRootContainer === undefined) && parentNode.onclick === null) {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(parentNode);
      }
    }

    function insertBefore(parentInstance, child, beforeChild) {
      parentInstance.insertBefore(child, beforeChild);
    }

    function insertInContainerBefore(container, child, beforeChild) {
      if (container.nodeType === COMMENT_NODE) {
        container.parentNode.insertBefore(child, beforeChild);
      } else {
        container.insertBefore(child, beforeChild);
      }
    }

    function removeChild(parentInstance, child) {
      parentInstance.removeChild(child);
    }

    function removeChildFromContainer(container, child) {
      if (container.nodeType === COMMENT_NODE) {
        container.parentNode.removeChild(child);
      } else {
        container.removeChild(child);
      }
    }

    function clearSuspenseBoundary(parentInstance, suspenseInstance) {
      var node = suspenseInstance; // Delete all nodes within this suspense boundary.
      // There might be nested nodes so we need to keep track of how
      // deep we are and only break out when we're back on top.

      var depth = 0;

      do {
        var nextNode = node.nextSibling;
        parentInstance.removeChild(node);

        if (nextNode && nextNode.nodeType === COMMENT_NODE) {
          var data = nextNode.data;

          if (data === SUSPENSE_END_DATA) {
            if (depth === 0) {
              parentInstance.removeChild(nextNode); // Retry if any event replaying was blocked on this.

              retryIfBlockedOn(suspenseInstance);
              return;
            } else {
              depth--;
            }
          } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_PENDING_START_DATA || data === SUSPENSE_FALLBACK_START_DATA) {
            depth++;
          }
        }

        node = nextNode;
      } while (node); // TODO: Warn, we didn't find the end comment boundary.
      // Retry if any event replaying was blocked on this.


      retryIfBlockedOn(suspenseInstance);
    }

    function clearSuspenseBoundaryFromContainer(container, suspenseInstance) {
      if (container.nodeType === COMMENT_NODE) {
        clearSuspenseBoundary(container.parentNode, suspenseInstance);
      } else if (container.nodeType === ELEMENT_NODE) {
        clearSuspenseBoundary(container, suspenseInstance);
      } else {} // Document nodes should never contain suspense boundaries.
      // Retry if any event replaying was blocked on this.


      retryIfBlockedOn(container);
    }

    function hideInstance(instance) {
      // TODO: Does this work for all element types? What about MathML? Should we
      // pass host context to this method?
      instance = instance;
      var style = instance.style;

      if (typeof style.setProperty === 'function') {
        style.setProperty('display', 'none', 'important');
      } else {
        style.display = 'none';
      }
    }

    function hideTextInstance(textInstance) {
      textInstance.nodeValue = '';
    }

    function unhideInstance(instance, props) {
      instance = instance;
      var styleProp = props[STYLE];
      var display = styleProp !== undefined && styleProp !== null && styleProp.hasOwnProperty('display') ? styleProp.display : null;
      instance.style.display = dangerousStyleValue('display', display);
    }

    function unhideTextInstance(textInstance, text) {
      textInstance.nodeValue = text;
    } // -------------------
    //     Hydration
    // -------------------


    var supportsHydration = true;

    function canHydrateInstance(instance, type, props) {
      if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) {
        return null;
      } // This has now been refined to an element node.


      return instance;
    }

    function canHydrateTextInstance(instance, text) {
      if (text === '' || instance.nodeType !== TEXT_NODE) {
        // Empty strings are not parsed by HTML so there won't be a correct match here.
        return null;
      } // This has now been refined to a text node.


      return instance;
    }

    function canHydrateSuspenseInstance(instance) {
      if (instance.nodeType !== COMMENT_NODE) {
        // Empty strings are not parsed by HTML so there won't be a correct match here.
        return null;
      } // This has now been refined to a suspense node.


      return instance;
    }

    function isSuspenseInstancePending(instance) {
      return instance.data === SUSPENSE_PENDING_START_DATA;
    }

    function isSuspenseInstanceFallback(instance) {
      return instance.data === SUSPENSE_FALLBACK_START_DATA;
    }

    function registerSuspenseInstanceRetry(instance, callback) {
      instance._reactRetry = callback;
    }

    function getNextHydratable(node) {
      // Skip non-hydratable nodes.
      for (; node != null; node = node.nextSibling) {
        var nodeType = node.nodeType;

        if (nodeType === ELEMENT_NODE || nodeType === TEXT_NODE) {
          break;
        }

        if (enableSuspenseServerRenderer) {
          if (nodeType === COMMENT_NODE) {
            var nodeData = node.data;

            if (nodeData === SUSPENSE_START_DATA || nodeData === SUSPENSE_FALLBACK_START_DATA || nodeData === SUSPENSE_PENDING_START_DATA) {
              break;
            }
          }
        }
      }

      return node;
    }

    function getNextHydratableSibling(instance) {
      return getNextHydratable(instance.nextSibling);
    }

    function getFirstHydratableChild(parentInstance) {
      return getNextHydratable(parentInstance.firstChild);
    }

    function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
      precacheFiberNode(internalInstanceHandle, instance); // TODO: Possibly defer this until the commit phase where all the events
      // get attached.

      updateFiberProps(instance, props);
      var parentNamespace;
      {
        var hostContextDev = hostContext;
        parentNamespace = hostContextDev.namespace;
      }
      return diffHydratedProperties(instance, type, props, parentNamespace, rootContainerInstance);
    }

    function hydrateTextInstance(textInstance, text, internalInstanceHandle) {
      precacheFiberNode(internalInstanceHandle, textInstance);
      return diffHydratedText(textInstance, text);
    }

    function hydrateSuspenseInstance(suspenseInstance, internalInstanceHandle) {
      precacheFiberNode(internalInstanceHandle, suspenseInstance);
    }

    function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {
      var node = suspenseInstance.nextSibling; // Skip past all nodes within this suspense boundary.
      // There might be nested nodes so we need to keep track of how
      // deep we are and only break out when we're back on top.

      var depth = 0;

      while (node) {
        if (node.nodeType === COMMENT_NODE) {
          var data = node.data;

          if (data === SUSPENSE_END_DATA) {
            if (depth === 0) {
              return getNextHydratableSibling(node);
            } else {
              depth--;
            }
          } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
            depth++;
          }
        }

        node = node.nextSibling;
      } // TODO: Warn, we didn't find the end comment boundary.


      return null;
    } // Returns the SuspenseInstance if this node is a direct child of a
    // SuspenseInstance. I.e. if its previous sibling is a Comment with
    // SUSPENSE_x_START_DATA. Otherwise, null.


    function getParentSuspenseInstance(targetInstance) {
      var node = targetInstance.previousSibling; // Skip past all nodes within this suspense boundary.
      // There might be nested nodes so we need to keep track of how
      // deep we are and only break out when we're back on top.

      var depth = 0;

      while (node) {
        if (node.nodeType === COMMENT_NODE) {
          var data = node.data;

          if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
            if (depth === 0) {
              return node;
            } else {
              depth--;
            }
          } else if (data === SUSPENSE_END_DATA) {
            depth++;
          }
        }

        node = node.previousSibling;
      }

      return null;
    }

    function commitHydratedContainer(container) {
      // Retry if any event replaying was blocked on this.
      retryIfBlockedOn(container);
    }

    function commitHydratedSuspenseInstance(suspenseInstance) {
      // Retry if any event replaying was blocked on this.
      retryIfBlockedOn(suspenseInstance);
    }

    function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text) {
      {
        warnForUnmatchedText(textInstance, text);
      }
    }

    function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text) {
      if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
        warnForUnmatchedText(textInstance, text);
      }
    }

    function didNotHydrateContainerInstance(parentContainer, instance) {
      {
        if (instance.nodeType === ELEMENT_NODE) {
          warnForDeletedHydratableElement(parentContainer, instance);
        } else if (instance.nodeType === COMMENT_NODE) {// TODO: warnForDeletedHydratableSuspenseBoundary
        } else {
          warnForDeletedHydratableText(parentContainer, instance);
        }
      }
    }

    function didNotHydrateInstance(parentType, parentProps, parentInstance, instance) {
      if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
        if (instance.nodeType === ELEMENT_NODE) {
          warnForDeletedHydratableElement(parentInstance, instance);
        } else if (instance.nodeType === COMMENT_NODE) {// TODO: warnForDeletedHydratableSuspenseBoundary
        } else {
          warnForDeletedHydratableText(parentInstance, instance);
        }
      }
    }

    function didNotFindHydratableContainerInstance(parentContainer, type, props) {
      {
        warnForInsertedHydratedElement(parentContainer, type, props);
      }
    }

    function didNotFindHydratableContainerTextInstance(parentContainer, text) {
      {
        warnForInsertedHydratedText(parentContainer, text);
      }
    }

    function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props) {
      if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
        warnForInsertedHydratedElement(parentInstance, type, props);
      }
    }

    function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text) {
      if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
        warnForInsertedHydratedText(parentInstance, text);
      }
    }

    function didNotFindHydratableSuspenseInstance(parentType, parentProps, parentInstance) {
      if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {// TODO: warnForInsertedHydratedSuspense(parentInstance);
      }
    }

    function mountResponderInstance(responder, responderInstance, responderProps, responderState, instance) {
      // Listen to events
      var doc = instance.ownerDocument;
      var _ref = responder,
          rootEventTypes = _ref.rootEventTypes,
          targetEventTypes = _ref.targetEventTypes;

      if (targetEventTypes !== null) {
        listenToEventResponderEventTypes(targetEventTypes, doc);
      }

      if (rootEventTypes !== null) {
        addRootEventTypesForResponderInstance(responderInstance, rootEventTypes);
        listenToEventResponderEventTypes(rootEventTypes, doc);
      }

      mountEventResponder(responder, responderInstance, responderProps, responderState);
      return responderInstance;
    }

    function unmountResponderInstance(responderInstance) {
      if (enableFlareAPI) {
        // TODO stop listening to targetEventTypes
        unmountEventResponder(responderInstance);
      }
    }

    function getFundamentalComponentInstance(fundamentalInstance) {
      if (enableFundamentalAPI) {
        var currentFiber = fundamentalInstance.currentFiber,
            impl = fundamentalInstance.impl,
            props = fundamentalInstance.props,
            state = fundamentalInstance.state;
        var instance = impl.getInstance(null, props, state);
        precacheFiberNode(currentFiber, instance);
        return instance;
      } // Because of the flag above, this gets around the Flow error;


      return null;
    }

    function mountFundamentalComponent(fundamentalInstance) {
      if (enableFundamentalAPI) {
        var impl = fundamentalInstance.impl,
            instance = fundamentalInstance.instance,
            props = fundamentalInstance.props,
            state = fundamentalInstance.state;
        var onMount = impl.onMount;

        if (onMount !== undefined) {
          onMount(null, instance, props, state);
        }
      }
    }

    function shouldUpdateFundamentalComponent(fundamentalInstance) {
      if (enableFundamentalAPI) {
        var impl = fundamentalInstance.impl,
            prevProps = fundamentalInstance.prevProps,
            props = fundamentalInstance.props,
            state = fundamentalInstance.state;
        var shouldUpdate = impl.shouldUpdate;

        if (shouldUpdate !== undefined) {
          return shouldUpdate(null, prevProps, props, state);
        }
      }

      return true;
    }

    function updateFundamentalComponent(fundamentalInstance) {
      if (enableFundamentalAPI) {
        var impl = fundamentalInstance.impl,
            instance = fundamentalInstance.instance,
            prevProps = fundamentalInstance.prevProps,
            props = fundamentalInstance.props,
            state = fundamentalInstance.state;
        var onUpdate = impl.onUpdate;

        if (onUpdate !== undefined) {
          onUpdate(null, instance, prevProps, props, state);
        }
      }
    }

    function unmountFundamentalComponent(fundamentalInstance) {
      if (enableFundamentalAPI) {
        var impl = fundamentalInstance.impl,
            instance = fundamentalInstance.instance,
            props = fundamentalInstance.props,
            state = fundamentalInstance.state;
        var onUnmount = impl.onUnmount;

        if (onUnmount !== undefined) {
          onUnmount(null, instance, props, state);
        }
      }
    }

    var randomKey = Math.random().toString(36).slice(2);
    var internalInstanceKey = '__reactInternalInstance$' + randomKey;
    var internalEventHandlersKey = '__reactEventHandlers$' + randomKey;
    var internalContainerInstanceKey = '__reactContainere$' + randomKey;

    function precacheFiberNode(hostInst, node) {
      node[internalInstanceKey] = hostInst;
    }

    function markContainerAsRoot(hostRoot, node) {
      node[internalContainerInstanceKey] = hostRoot;
    } // Given a DOM node, return the closest HostComponent or HostText fiber ancestor.
    // If the target node is part of a hydrated or not yet rendered subtree, then
    // this may also return a SuspenseComponent or HostRoot to indicate that.
    // Conceptually the HostRoot fiber is a child of the Container node. So if you
    // pass the Container node as the targetNode, you wiill not actually get the
    // HostRoot back. To get to the HostRoot, you need to pass a child of it.
    // The same thing applies to Suspense boundaries.


    function getClosestInstanceFromNode(targetNode) {
      var targetInst = targetNode[internalInstanceKey];

      if (targetInst) {
        // Don't return HostRoot or SuspenseComponent here.
        return targetInst;
      } // If the direct event target isn't a React owned DOM node, we need to look
      // to see if one of its parents is a React owned DOM node.


      var parentNode = targetNode.parentNode;

      while (parentNode) {
        // We'll check if this is a container root that could include
        // React nodes in the future. We need to check this first because
        // if we're a child of a dehydrated container, we need to first
        // find that inner container before moving on to finding the parent
        // instance. Note that we don't check this field on  the targetNode
        // itself because the fibers are conceptually between the container
        // node and the first child. It isn't surrounding the container node.
        // If it's not a container, we check if it's an instance.
        targetInst = parentNode[internalContainerInstanceKey] || parentNode[internalInstanceKey];

        if (targetInst) {
          // Since this wasn't the direct target of the event, we might have
          // stepped past dehydrated DOM nodes to get here. However they could
          // also have been non-React nodes. We need to answer which one.
          // If we the instance doesn't have any children, then there can't be
          // a nested suspense boundary within it. So we can use this as a fast
          // bailout. Most of the time, when people add non-React children to
          // the tree, it is using a ref to a child-less DOM node.
          // Normally we'd only need to check one of the fibers because if it
          // has ever gone from having children to deleting them or vice versa
          // it would have deleted the dehydrated boundary nested inside already.
          // However, since the HostRoot starts out with an alternate it might
          // have one on the alternate so we need to check in case this was a
          // root.
          var alternate = targetInst.alternate;

          if (targetInst.child !== null || alternate !== null && alternate.child !== null) {
            // Next we need to figure out if the node that skipped past is
            // nested within a dehydrated boundary and if so, which one.
            var suspenseInstance = getParentSuspenseInstance(targetNode);

            while (suspenseInstance !== null) {
              // We found a suspense instance. That means that we haven't
              // hydrated it yet. Even though we leave the comments in the
              // DOM after hydrating, and there are boundaries in the DOM
              // that could already be hydrated, we wouldn't have found them
              // through this pass since if the target is hydrated it would
              // have had an internalInstanceKey on it.
              // Let's get the fiber associated with the SuspenseComponent
              // as the deepest instance.
              var targetSuspenseInst = suspenseInstance[internalInstanceKey];

              if (targetSuspenseInst) {
                return targetSuspenseInst;
              } // If we don't find a Fiber on the comment, it might be because
              // we haven't gotten to hydrate it yet. There might still be a
              // parent boundary that hasn't above this one so we need to find
              // the outer most that is known.


              suspenseInstance = getParentSuspenseInstance(suspenseInstance); // If we don't find one, then that should mean that the parent
              // host component also hasn't hydrated yet. We can return it
              // below since it will bail out on the isMounted check later.
            }
          }

          return targetInst;
        }

        targetNode = parentNode;
        parentNode = targetNode.parentNode;
      }

      return null;
    }
    /**
     * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
     * instance, or null if the node was not rendered by this React.
     */


    function getInstanceFromNode$1(node) {
      var inst = node[internalInstanceKey] || node[internalContainerInstanceKey];

      if (inst) {
        if (inst.tag === HostComponent || inst.tag === HostText || inst.tag === SuspenseComponent || inst.tag === HostRoot) {
          return inst;
        } else {
          return null;
        }
      }

      return null;
    }
    /**
     * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
     * DOM node.
     */


    function getNodeFromInstance$1(inst) {
      if (inst.tag === HostComponent || inst.tag === HostText) {
        // In Fiber this, is just the state node right now. We assume it will be
        // a host component or host text.
        return inst.stateNode;
      } // Without this first invariant, passing a non-DOM-component triggers the next
      // invariant for a missing parent, which is super confusing.


      (function () {
        {
          {
            throw ReactError(Error("getNodeFromInstance: Invalid argument."));
          }
        }
      })();
    }

    function getFiberCurrentPropsFromNode$1(node) {
      return node[internalEventHandlersKey] || null;
    }

    function updateFiberProps(node, props) {
      node[internalEventHandlersKey] = props;
    }
    /**
     * These variables store information about text content of a target node,
     * allowing comparison of content before and after a given event.
     *
     * Identify the node where selection currently begins, then observe
     * both its text content and its current position in the DOM. Since the
     * browser may natively replace the target node during composition, we can
     * use its position to find its replacement.
     *
     *
     */


    var root = null;
    var startText = null;
    var fallbackText = null;

    function initialize(nativeEventTarget) {
      root = nativeEventTarget;
      startText = getText();
      return true;
    }

    function reset() {
      root = null;
      startText = null;
      fallbackText = null;
    }

    function getData() {
      if (fallbackText) {
        return fallbackText;
      }

      var start;
      var startValue = startText;
      var startLength = startValue.length;
      var end;
      var endValue = getText();
      var endLength = endValue.length;

      for (start = 0; start < startLength; start++) {
        if (startValue[start] !== endValue[start]) {
          break;
        }
      }

      var minEnd = startLength - start;

      for (end = 1; end <= minEnd; end++) {
        if (startValue[startLength - end] !== endValue[endLength - end]) {
          break;
        }
      }

      var sliceTail = end > 1 ? 1 - end : undefined;
      fallbackText = endValue.slice(start, sliceTail);
      return fallbackText;
    }

    function getText() {
      if ('value' in root) {
        return root.value;
      }

      return root.textContent;
    }
    /**
     * @interface Event
     * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
     */


    var SyntheticCompositionEvent = SyntheticEvent.extend({
      data: null
    });
    /**
     * @interface Event
     * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
     *      /#events-inputevents
     */

    var SyntheticInputEvent = SyntheticEvent.extend({
      data: null
    });
    var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space

    var START_KEYCODE = 229;
    var canUseCompositionEvent = canUseDOM && 'CompositionEvent' in window;
    var documentMode = null;

    if (canUseDOM && 'documentMode' in document) {
      documentMode = document.documentMode;
    } // Webkit offers a very useful `textInput` event that can be used to
    // directly represent `beforeInput`. The IE `textinput` event is not as
    // useful, so we don't use it.


    var canUseTextInputEvent = canUseDOM && 'TextEvent' in window && !documentMode; // In IE9+, we have access to composition events, but the data supplied
    // by the native compositionend event may be incorrect. Japanese ideographic
    // spaces, for instance (\u3000) are not recorded correctly.

    var useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
    var SPACEBAR_CODE = 32;
    var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE); // Events and their corresponding property names.

    var eventTypes$1 = {
      beforeInput: {
        phasedRegistrationNames: {
          bubbled: 'onBeforeInput',
          captured: 'onBeforeInputCapture'
        },
        dependencies: [TOP_COMPOSITION_END, TOP_KEY_PRESS, TOP_TEXT_INPUT, TOP_PASTE]
      },
      compositionEnd: {
        phasedRegistrationNames: {
          bubbled: 'onCompositionEnd',
          captured: 'onCompositionEndCapture'
        },
        dependencies: [TOP_BLUR, TOP_COMPOSITION_END, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
      },
      compositionStart: {
        phasedRegistrationNames: {
          bubbled: 'onCompositionStart',
          captured: 'onCompositionStartCapture'
        },
        dependencies: [TOP_BLUR, TOP_COMPOSITION_START, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
      },
      compositionUpdate: {
        phasedRegistrationNames: {
          bubbled: 'onCompositionUpdate',
          captured: 'onCompositionUpdateCapture'
        },
        dependencies: [TOP_BLUR, TOP_COMPOSITION_UPDATE, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
      }
    }; // Track whether we've ever handled a keypress on the space key.

    var hasSpaceKeypress = false;
    /**
     * Return whether a native keypress event is assumed to be a command.
     * This is required because Firefox fires `keypress` events for key commands
     * (cut, copy, select-all, etc.) even though no character is inserted.
     */

    function isKeypressCommand(nativeEvent) {
      return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && // ctrlKey && altKey is equivalent to AltGr, and is not a command.
      !(nativeEvent.ctrlKey && nativeEvent.altKey);
    }
    /**
     * Translate native top level events into event types.
     *
     * @param {string} topLevelType
     * @return {object}
     */


    function getCompositionEventType(topLevelType) {
      switch (topLevelType) {
        case TOP_COMPOSITION_START:
          return eventTypes$1.compositionStart;

        case TOP_COMPOSITION_END:
          return eventTypes$1.compositionEnd;

        case TOP_COMPOSITION_UPDATE:
          return eventTypes$1.compositionUpdate;
      }
    }
    /**
     * Does our fallback best-guess model think this event signifies that
     * composition has begun?
     *
     * @param {string} topLevelType
     * @param {object} nativeEvent
     * @return {boolean}
     */


    function isFallbackCompositionStart(topLevelType, nativeEvent) {
      return topLevelType === TOP_KEY_DOWN && nativeEvent.keyCode === START_KEYCODE;
    }
    /**
     * Does our fallback mode think that this event is the end of composition?
     *
     * @param {string} topLevelType
     * @param {object} nativeEvent
     * @return {boolean}
     */


    function isFallbackCompositionEnd(topLevelType, nativeEvent) {
      switch (topLevelType) {
        case TOP_KEY_UP:
          // Command keys insert or clear IME input.
          return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;

        case TOP_KEY_DOWN:
          // Expect IME keyCode on each keydown. If we get any other
          // code we must have exited earlier.
          return nativeEvent.keyCode !== START_KEYCODE;

        case TOP_KEY_PRESS:
        case TOP_MOUSE_DOWN:
        case TOP_BLUR:
          // Events are not possible without cancelling IME.
          return true;

        default:
          return false;
      }
    }
    /**
     * Google Input Tools provides composition data via a CustomEvent,
     * with the `data` property populated in the `detail` object. If this
     * is available on the event object, use it. If not, this is a plain
     * composition event and we have nothing special to extract.
     *
     * @param {object} nativeEvent
     * @return {?string}
     */


    function getDataFromCustomEvent(nativeEvent) {
      var detail = nativeEvent.detail;

      if (typeof detail === 'object' && 'data' in detail) {
        return detail.data;
      }

      return null;
    }
    /**
     * Check if a composition event was triggered by Korean IME.
     * Our fallback mode does not work well with IE's Korean IME,
     * so just use native composition events when Korean IME is used.
     * Although CompositionEvent.locale property is deprecated,
     * it is available in IE, where our fallback mode is enabled.
     *
     * @param {object} nativeEvent
     * @return {boolean}
     */


    function isUsingKoreanIME(nativeEvent) {
      return nativeEvent.locale === 'ko';
    } // Track the current IME composition status, if any.


    var isComposing = false;
    /**
     * @return {?object} A SyntheticCompositionEvent.
     */

    function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      var eventType;
      var fallbackData;

      if (canUseCompositionEvent) {
        eventType = getCompositionEventType(topLevelType);
      } else if (!isComposing) {
        if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
          eventType = eventTypes$1.compositionStart;
        }
      } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
        eventType = eventTypes$1.compositionEnd;
      }

      if (!eventType) {
        return null;
      }

      if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {
        // The current composition is stored statically and must not be
        // overwritten while composition continues.
        if (!isComposing && eventType === eventTypes$1.compositionStart) {
          isComposing = initialize(nativeEventTarget);
        } else if (eventType === eventTypes$1.compositionEnd) {
          if (isComposing) {
            fallbackData = getData();
          }
        }
      }

      var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

      if (fallbackData) {
        // Inject data generated from fallback path into the synthetic event.
        // This matches the property of native CompositionEventInterface.
        event.data = fallbackData;
      } else {
        var customData = getDataFromCustomEvent(nativeEvent);

        if (customData !== null) {
          event.data = customData;
        }
      }

      accumulateTwoPhaseDispatches(event);
      return event;
    }
    /**
     * @param {TopLevelType} topLevelType Number from `TopLevelType`.
     * @param {object} nativeEvent Native browser event.
     * @return {?string} The string corresponding to this `beforeInput` event.
     */


    function getNativeBeforeInputChars(topLevelType, nativeEvent) {
      switch (topLevelType) {
        case TOP_COMPOSITION_END:
          return getDataFromCustomEvent(nativeEvent);

        case TOP_KEY_PRESS:
          /**
           * If native `textInput` events are available, our goal is to make
           * use of them. However, there is a special case: the spacebar key.
           * In Webkit, preventing default on a spacebar `textInput` event
           * cancels character insertion, but it *also* causes the browser
           * to fall back to its default spacebar behavior of scrolling the
           * page.
           *
           * Tracking at:
           * https://code.google.com/p/chromium/issues/detail?id=355103
           *
           * To avoid this issue, use the keypress event as if no `textInput`
           * event is available.
           */
          var which = nativeEvent.which;

          if (which !== SPACEBAR_CODE) {
            return null;
          }

          hasSpaceKeypress = true;
          return SPACEBAR_CHAR;

        case TOP_TEXT_INPUT:
          // Record the characters to be added to the DOM.
          var chars = nativeEvent.data; // If it's a spacebar character, assume that we have already handled
          // it at the keypress level and bail immediately. Android Chrome
          // doesn't give us keycodes, so we need to ignore it.

          if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
            return null;
          }

          return chars;

        default:
          // For other native event types, do nothing.
          return null;
      }
    }
    /**
     * For browsers that do not provide the `textInput` event, extract the
     * appropriate string to use for SyntheticInputEvent.
     *
     * @param {number} topLevelType Number from `TopLevelEventTypes`.
     * @param {object} nativeEvent Native browser event.
     * @return {?string} The fallback string for this `beforeInput` event.
     */


    function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
      // If we are currently composing (IME) and using a fallback to do so,
      // try to extract the composed characters from the fallback object.
      // If composition event is available, we extract a string only at
      // compositionevent, otherwise extract it at fallback events.
      if (isComposing) {
        if (topLevelType === TOP_COMPOSITION_END || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
          var chars = getData();
          reset();
          isComposing = false;
          return chars;
        }

        return null;
      }

      switch (topLevelType) {
        case TOP_PASTE:
          // If a paste event occurs after a keypress, throw out the input
          // chars. Paste events should not lead to BeforeInput events.
          return null;

        case TOP_KEY_PRESS:
          /**
           * As of v27, Firefox may fire keypress events even when no character
           * will be inserted. A few possibilities:
           *
           * - `which` is `0`. Arrow keys, Esc key, etc.
           *
           * - `which` is the pressed key code, but no char is available.
           *   Ex: 'AltGr + d` in Polish. There is no modified character for
           *   this key combination and no character is inserted into the
           *   document, but FF fires the keypress for char code `100` anyway.
           *   No `input` event will occur.
           *
           * - `which` is the pressed key code, but a command combination is
           *   being used. Ex: `Cmd+C`. No character is inserted, and no
           *   `input` event will occur.
           */
          if (!isKeypressCommand(nativeEvent)) {
            // IE fires the `keypress` event when a user types an emoji via
            // Touch keyboard of Windows.  In such a case, the `char` property
            // holds an emoji character like `\uD83D\uDE0A`.  Because its length
            // is 2, the property `which` does not represent an emoji correctly.
            // In such a case, we directly return the `char` property instead of
            // using `which`.
            if (nativeEvent.char && nativeEvent.char.length > 1) {
              return nativeEvent.char;
            } else if (nativeEvent.which) {
              return String.fromCharCode(nativeEvent.which);
            }
          }

          return null;

        case TOP_COMPOSITION_END:
          return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;

        default:
          return null;
      }
    }
    /**
     * Extract a SyntheticInputEvent for `beforeInput`, based on either native
     * `textInput` or fallback behavior.
     *
     * @return {?object} A SyntheticInputEvent.
     */


    function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      var chars;

      if (canUseTextInputEvent) {
        chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
      } else {
        chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
      } // If no characters are being inserted, no BeforeInput event should
      // be fired.


      if (!chars) {
        return null;
      }

      var event = SyntheticInputEvent.getPooled(eventTypes$1.beforeInput, targetInst, nativeEvent, nativeEventTarget);
      event.data = chars;
      accumulateTwoPhaseDispatches(event);
      return event;
    }
    /**
     * Create an `onBeforeInput` event to match
     * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
     *
     * This event plugin is based on the native `textInput` event
     * available in Chrome, Safari, Opera, and IE. This event fires after
     * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
     *
     * `beforeInput` is spec'd but not implemented in any browsers, and
     * the `input` event does not provide any useful information about what has
     * actually been added, contrary to the spec. Thus, `textInput` is the best
     * available event to identify the characters that have actually been inserted
     * into the target node.
     *
     * This plugin is also responsible for emitting `composition` events, thus
     * allowing us to share composition fallback code for both `beforeInput` and
     * `composition` event types.
     */


    var BeforeInputEventPlugin = {
      eventTypes: eventTypes$1,
      extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags) {
        var composition = extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget);
        var beforeInput = extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget);

        if (composition === null) {
          return beforeInput;
        }

        if (beforeInput === null) {
          return composition;
        }

        return [composition, beforeInput];
      }
    };
    /**
     * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
     */

    var supportedInputTypes = {
      color: true,
      date: true,
      datetime: true,
      'datetime-local': true,
      email: true,
      month: true,
      number: true,
      password: true,
      range: true,
      search: true,
      tel: true,
      text: true,
      time: true,
      url: true,
      week: true
    };

    function isTextInputElement(elem) {
      var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

      if (nodeName === 'input') {
        return !!supportedInputTypes[elem.type];
      }

      if (nodeName === 'textarea') {
        return true;
      }

      return false;
    }

    var eventTypes$2 = {
      change: {
        phasedRegistrationNames: {
          bubbled: 'onChange',
          captured: 'onChangeCapture'
        },
        dependencies: [TOP_BLUR, TOP_CHANGE, TOP_CLICK, TOP_FOCUS, TOP_INPUT, TOP_KEY_DOWN, TOP_KEY_UP, TOP_SELECTION_CHANGE]
      }
    };

    function createAndAccumulateChangeEvent(inst, nativeEvent, target) {
      var event = SyntheticEvent.getPooled(eventTypes$2.change, inst, nativeEvent, target);
      event.type = 'change'; // Flag this event loop as needing state restore.

      enqueueStateRestore(target);
      accumulateTwoPhaseDispatches(event);
      return event;
    }
    /**
     * For IE shims
     */


    var activeElement = null;
    var activeElementInst = null;
    /**
     * SECTION: handle `change` event
     */

    function shouldUseChangeEvent(elem) {
      var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
      return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
    }

    function manualDispatchChangeEvent(nativeEvent) {
      var event = createAndAccumulateChangeEvent(activeElementInst, nativeEvent, getEventTarget(nativeEvent)); // If change and propertychange bubbled, we'd just bind to it like all the
      // other events and have it go through ReactBrowserEventEmitter. Since it
      // doesn't, we manually listen for the events and so we have to enqueue and
      // process the abstract event manually.
      //
      // Batching is necessary here in order to ensure that all event handlers run
      // before the next rerender (including event handlers attached to ancestor
      // elements instead of directly on the input). Without this, controlled
      // components don't work properly in conjunction with event bubbling because
      // the component is rerendered and the value reverted before all the event
      // handlers can run. See https://github.com/facebook/react/issues/708.

      batchedUpdates(runEventInBatch, event);
    }

    function runEventInBatch(event) {
      runEventsInBatch(event);
    }

    function getInstIfValueChanged(targetInst) {
      var targetNode = getNodeFromInstance$1(targetInst);

      if (updateValueIfChanged(targetNode)) {
        return targetInst;
      }
    }

    function getTargetInstForChangeEvent(topLevelType, targetInst) {
      if (topLevelType === TOP_CHANGE) {
        return targetInst;
      }
    }
    /**
     * SECTION: handle `input` event
     */


    var isInputEventSupported = false;

    if (canUseDOM) {
      // IE9 claims to support the input event but fails to trigger it when
      // deleting text, so we ignore its input events.
      isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);
    }
    /**
     * (For IE <=9) Starts tracking propertychange events on the passed-in element
     * and override the value property so that we can distinguish user events from
     * value changes in JS.
     */


    function startWatchingForValueChange(target, targetInst) {
      activeElement = target;
      activeElementInst = targetInst;
      activeElement.attachEvent('onpropertychange', handlePropertyChange);
    }
    /**
     * (For IE <=9) Removes the event listeners from the currently-tracked element,
     * if any exists.
     */


    function stopWatchingForValueChange() {
      if (!activeElement) {
        return;
      }

      activeElement.detachEvent('onpropertychange', handlePropertyChange);
      activeElement = null;
      activeElementInst = null;
    }
    /**
     * (For IE <=9) Handles a propertychange event, sending a `change` event if
     * the value of the active element has changed.
     */


    function handlePropertyChange(nativeEvent) {
      if (nativeEvent.propertyName !== 'value') {
        return;
      }

      if (getInstIfValueChanged(activeElementInst)) {
        manualDispatchChangeEvent(nativeEvent);
      }
    }

    function handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {
      if (topLevelType === TOP_FOCUS) {
        // In IE9, propertychange fires for most input events but is buggy and
        // doesn't fire when text is deleted, but conveniently, selectionchange
        // appears to fire in all of the remaining cases so we catch those and
        // forward the event if the value has changed
        // In either case, we don't want to call the event handler if the value
        // is changed from JS so we redefine a setter for `.value` that updates
        // our activeElementValue variable, allowing us to ignore those changes
        //
        // stopWatching() should be a noop here but we call it just in case we
        // missed a blur event somehow.
        stopWatchingForValueChange();
        startWatchingForValueChange(target, targetInst);
      } else if (topLevelType === TOP_BLUR) {
        stopWatchingForValueChange();
      }
    } // For IE8 and IE9.


    function getTargetInstForInputEventPolyfill(topLevelType, targetInst) {
      if (topLevelType === TOP_SELECTION_CHANGE || topLevelType === TOP_KEY_UP || topLevelType === TOP_KEY_DOWN) {
        // On the selectionchange event, the target is just document which isn't
        // helpful for us so just check activeElement instead.
        //
        // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
        // propertychange on the first input event after setting `value` from a
        // script and fires only keydown, keypress, keyup. Catching keyup usually
        // gets it and catching keydown lets us fire an event for the first
        // keystroke if user does a key repeat (it'll be a little delayed: right
        // before the second keystroke). Other input methods (e.g., paste) seem to
        // fire selectionchange normally.
        return getInstIfValueChanged(activeElementInst);
      }
    }
    /**
     * SECTION: handle `click` event
     */


    function shouldUseClickEvent(elem) {
      // Use the `click` event to detect changes to checkbox and radio inputs.
      // This approach works across all browsers, whereas `change` does not fire
      // until `blur` in IE8.
      var nodeName = elem.nodeName;
      return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
    }

    function getTargetInstForClickEvent(topLevelType, targetInst) {
      if (topLevelType === TOP_CLICK) {
        return getInstIfValueChanged(targetInst);
      }
    }

    function getTargetInstForInputOrChangeEvent(topLevelType, targetInst) {
      if (topLevelType === TOP_INPUT || topLevelType === TOP_CHANGE) {
        return getInstIfValueChanged(targetInst);
      }
    }

    function handleControlledInputBlur(node) {
      var state = node._wrapperState;

      if (!state || !state.controlled || node.type !== 'number') {
        return;
      }

      if (!disableInputAttributeSyncing) {
        // If controlled, assign the value attribute to the current value on blur
        setDefaultValue(node, 'number', node.value);
      }
    }
    /**
     * This plugin creates an `onChange` event that normalizes change events
     * across form elements. This event fires at a time when it's possible to
     * change the element's value without seeing a flicker.
     *
     * Supported elements are:
     * - input (see `isTextInputElement`)
     * - textarea
     * - select
     */


    var ChangeEventPlugin = {
      eventTypes: eventTypes$2,
      _isInputEventSupported: isInputEventSupported,
      extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags) {
        var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;
        var getTargetInstFunc, handleEventFunc;

        if (shouldUseChangeEvent(targetNode)) {
          getTargetInstFunc = getTargetInstForChangeEvent;
        } else if (isTextInputElement(targetNode)) {
          if (isInputEventSupported) {
            getTargetInstFunc = getTargetInstForInputOrChangeEvent;
          } else {
            getTargetInstFunc = getTargetInstForInputEventPolyfill;
            handleEventFunc = handleEventsForInputEventPolyfill;
          }
        } else if (shouldUseClickEvent(targetNode)) {
          getTargetInstFunc = getTargetInstForClickEvent;
        }

        if (getTargetInstFunc) {
          var inst = getTargetInstFunc(topLevelType, targetInst);

          if (inst) {
            var event = createAndAccumulateChangeEvent(inst, nativeEvent, nativeEventTarget);
            return event;
          }
        }

        if (handleEventFunc) {
          handleEventFunc(topLevelType, targetNode, targetInst);
        } // When blurring, set the value attribute for number inputs


        if (topLevelType === TOP_BLUR) {
          handleControlledInputBlur(targetNode);
        }
      }
    };
    /**
     * Module that is injectable into `EventPluginHub`, that specifies a
     * deterministic ordering of `EventPlugin`s. A convenient way to reason about
     * plugins, without having to package every one of them. This is better than
     * having plugins be ordered in the same order that they are injected because
     * that ordering would be influenced by the packaging order.
     * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
     * preventing default on events is convenient in `SimpleEventPlugin` handlers.
     */

    var DOMEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];
    var eventTypes$3 = {
      mouseEnter: {
        registrationName: 'onMouseEnter',
        dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]
      },
      mouseLeave: {
        registrationName: 'onMouseLeave',
        dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]
      },
      pointerEnter: {
        registrationName: 'onPointerEnter',
        dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]
      },
      pointerLeave: {
        registrationName: 'onPointerLeave',
        dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]
      }
    };
    var EnterLeaveEventPlugin = {
      eventTypes: eventTypes$3,

      /**
       * For almost every interaction we care about, there will be both a top-level
       * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
       * we do not extract duplicate events. However, moving the mouse into the
       * browser from outside will not fire a `mouseout` event. In this case, we use
       * the `mouseover` top-level event.
       */
      extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags) {
        var isOverEvent = topLevelType === TOP_MOUSE_OVER || topLevelType === TOP_POINTER_OVER;
        var isOutEvent = topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_POINTER_OUT;

        if (isOverEvent && (eventSystemFlags & IS_REPLAYED) === 0 && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
          // If this is an over event with a target, then we've already dispatched
          // the event in the out event of the other target. If this is replayed,
          // then it's because we couldn't dispatch against this target previously
          // so we have to do it now instead.
          return null;
        }

        if (!isOutEvent && !isOverEvent) {
          // Must not be a mouse or pointer in or out - ignoring.
          return null;
        }

        var win;

        if (nativeEventTarget.window === nativeEventTarget) {
          // `nativeEventTarget` is probably a window object.
          win = nativeEventTarget;
        } else {
          // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
          var doc = nativeEventTarget.ownerDocument;

          if (doc) {
            win = doc.defaultView || doc.parentWindow;
          } else {
            win = window;
          }
        }

        var from;
        var to;

        if (isOutEvent) {
          from = targetInst;
          var related = nativeEvent.relatedTarget || nativeEvent.toElement;
          to = related ? getClosestInstanceFromNode(related) : null;

          if (to !== null) {
            var nearestMounted = getNearestMountedFiber(to);

            if (to !== nearestMounted || to.tag !== HostComponent && to.tag !== HostText) {
              to = null;
            }
          }
        } else {
          // Moving to a node from outside the window.
          from = null;
          to = targetInst;
        }

        if (from === to) {
          // Nothing pertains to our managed components.
          return null;
        }

        var eventInterface, leaveEventType, enterEventType, eventTypePrefix;

        if (topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_MOUSE_OVER) {
          eventInterface = SyntheticMouseEvent;
          leaveEventType = eventTypes$3.mouseLeave;
          enterEventType = eventTypes$3.mouseEnter;
          eventTypePrefix = 'mouse';
        } else if (topLevelType === TOP_POINTER_OUT || topLevelType === TOP_POINTER_OVER) {
          eventInterface = SyntheticPointerEvent;
          leaveEventType = eventTypes$3.pointerLeave;
          enterEventType = eventTypes$3.pointerEnter;
          eventTypePrefix = 'pointer';
        }

        var fromNode = from == null ? win : getNodeFromInstance$1(from);
        var toNode = to == null ? win : getNodeFromInstance$1(to);
        var leave = eventInterface.getPooled(leaveEventType, from, nativeEvent, nativeEventTarget);
        leave.type = eventTypePrefix + 'leave';
        leave.target = fromNode;
        leave.relatedTarget = toNode;
        var enter = eventInterface.getPooled(enterEventType, to, nativeEvent, nativeEventTarget);
        enter.type = eventTypePrefix + 'enter';
        enter.target = toNode;
        enter.relatedTarget = fromNode;
        accumulateEnterLeaveDispatches(leave, enter, from, to);
        return [leave, enter];
      }
    };
    /**
     * inlined Object.is polyfill to avoid requiring consumers ship their own
     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
     */

    function is(x, y) {
      return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare
      ;
    }

    var is$1 = typeof Object.is === 'function' ? Object.is : is;
    var hasOwnProperty$2 = Object.prototype.hasOwnProperty;
    /**
     * Performs equality by iterating through keys on an object and returning false
     * when any key has values which are not strictly equal between the arguments.
     * Returns true when the values of all keys are strictly equal.
     */

    function shallowEqual(objA, objB) {
      if (is$1(objA, objB)) {
        return true;
      }

      if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
        return false;
      }

      var keysA = Object.keys(objA);
      var keysB = Object.keys(objB);

      if (keysA.length !== keysB.length) {
        return false;
      } // Test for A's keys different from B.


      for (var i = 0; i < keysA.length; i++) {
        if (!hasOwnProperty$2.call(objB, keysA[i]) || !is$1(objA[keysA[i]], objB[keysA[i]])) {
          return false;
        }
      }

      return true;
    }

    var skipSelectionChangeEvent = canUseDOM && 'documentMode' in document && document.documentMode <= 11;
    var eventTypes$4 = {
      select: {
        phasedRegistrationNames: {
          bubbled: 'onSelect',
          captured: 'onSelectCapture'
        },
        dependencies: [TOP_BLUR, TOP_CONTEXT_MENU, TOP_DRAG_END, TOP_FOCUS, TOP_KEY_DOWN, TOP_KEY_UP, TOP_MOUSE_DOWN, TOP_MOUSE_UP, TOP_SELECTION_CHANGE]
      }
    };
    var activeElement$1 = null;
    var activeElementInst$1 = null;
    var lastSelection = null;
    var mouseDown = false;
    /**
     * Get an object which is a unique representation of the current selection.
     *
     * The return value will not be consistent across nodes or browsers, but
     * two identical selections on the same node will return identical objects.
     *
     * @param {DOMElement} node
     * @return {object}
     */

    function getSelection$1(node) {
      if ('selectionStart' in node && hasSelectionCapabilities(node)) {
        return {
          start: node.selectionStart,
          end: node.selectionEnd
        };
      } else {
        var win = node.ownerDocument && node.ownerDocument.defaultView || window;
        var selection = win.getSelection();
        return {
          anchorNode: selection.anchorNode,
          anchorOffset: selection.anchorOffset,
          focusNode: selection.focusNode,
          focusOffset: selection.focusOffset
        };
      }
    }
    /**
     * Get document associated with the event target.
     *
     * @param {object} nativeEventTarget
     * @return {Document}
     */


    function getEventTargetDocument(eventTarget) {
      return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;
    }
    /**
     * Poll selection to see whether it's changed.
     *
     * @param {object} nativeEvent
     * @param {object} nativeEventTarget
     * @return {?SyntheticEvent}
     */


    function constructSelectEvent(nativeEvent, nativeEventTarget) {
      // Ensure we have the right element, and that the user is not dragging a
      // selection (this matches native `select` event behavior). In HTML5, select
      // fires only on input and textarea thus if there's no focused element we
      // won't dispatch.
      var doc = getEventTargetDocument(nativeEventTarget);

      if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc)) {
        return null;
      } // Only fire when selection has actually changed.


      var currentSelection = getSelection$1(activeElement$1);

      if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
        lastSelection = currentSelection;
        var syntheticEvent = SyntheticEvent.getPooled(eventTypes$4.select, activeElementInst$1, nativeEvent, nativeEventTarget);
        syntheticEvent.type = 'select';
        syntheticEvent.target = activeElement$1;
        accumulateTwoPhaseDispatches(syntheticEvent);
        return syntheticEvent;
      }

      return null;
    }
    /**
     * This plugin creates an `onSelect` event that normalizes select events
     * across form elements.
     *
     * Supported elements are:
     * - input (see `isTextInputElement`)
     * - textarea
     * - contentEditable
     *
     * This differs from native browser implementations in the following ways:
     * - Fires on contentEditable fields as well as inputs.
     * - Fires for collapsed selection.
     * - Fires after user input.
     */


    var SelectEventPlugin = {
      eventTypes: eventTypes$4,
      extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags) {
        var doc = getEventTargetDocument(nativeEventTarget); // Track whether all listeners exists for this plugin. If none exist, we do
        // not extract events. See #3639.

        if (!doc || !isListeningToAllDependencies('onSelect', doc)) {
          return null;
        }

        var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;

        switch (topLevelType) {
          // Track the input node that has focus.
          case TOP_FOCUS:
            if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
              activeElement$1 = targetNode;
              activeElementInst$1 = targetInst;
              lastSelection = null;
            }

            break;

          case TOP_BLUR:
            activeElement$1 = null;
            activeElementInst$1 = null;
            lastSelection = null;
            break;
          // Don't fire the event while the user is dragging. This matches the
          // semantics of the native select event.

          case TOP_MOUSE_DOWN:
            mouseDown = true;
            break;

          case TOP_CONTEXT_MENU:
          case TOP_MOUSE_UP:
          case TOP_DRAG_END:
            mouseDown = false;
            return constructSelectEvent(nativeEvent, nativeEventTarget);
          // Chrome and IE fire non-standard event when selection is changed (and
          // sometimes when it hasn't). IE's event fires out of order with respect
          // to key and input events on deletion, so we discard it.
          //
          // Firefox doesn't support selectionchange, so check selection status
          // after each key entry. The selection changes after keydown and before
          // keyup, but we check on keydown as well in the case of holding down a
          // key, when multiple keydown events are fired but only one keyup is.
          // This is also our approach for IE handling, for the reason above.

          case TOP_SELECTION_CHANGE:
            if (skipSelectionChangeEvent) {
              break;
            }

          // falls through

          case TOP_KEY_DOWN:
          case TOP_KEY_UP:
            return constructSelectEvent(nativeEvent, nativeEventTarget);
        }

        return null;
      }
    };
    /**
     * Inject modules for resolving DOM hierarchy and plugin ordering.
     */

    injection.injectEventPluginOrder(DOMEventPluginOrder);
    setComponentTree(getFiberCurrentPropsFromNode$1, getInstanceFromNode$1, getNodeFromInstance$1);
    /**
     * Some important event plugins included by default (without having to require
     * them).
     */

    injection.injectEventPluginsByName({
      SimpleEventPlugin: SimpleEventPlugin,
      EnterLeaveEventPlugin: EnterLeaveEventPlugin,
      ChangeEventPlugin: ChangeEventPlugin,
      SelectEventPlugin: SelectEventPlugin,
      BeforeInputEventPlugin: BeforeInputEventPlugin
    }); // Prefix measurements so that it's possible to filter them.
    // Longer prefixes are hard to read in DevTools.

    var reactEmoji = "\u269B";
    var warningEmoji = "\u26D4";
    var supportsUserTiming = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function'; // Keep track of current fiber so that we know the path to unwind on pause.
    // TODO: this looks the same as nextUnitOfWork in scheduler. Can we unify them?

    var currentFiber = null; // If we're in the middle of user code, which fiber and method is it?
    // Reusing `currentFiber` would be confusing for this because user code fiber
    // can change during commit phase too, but we don't need to unwind it (since
    // lifecycles in the commit phase don't resemble a tree).

    var currentPhase = null;
    var currentPhaseFiber = null; // Did lifecycle hook schedule an update? This is often a performance problem,
    // so we will keep track of it, and include it in the report.
    // Track commits caused by cascading updates.

    var isCommitting = false;
    var hasScheduledUpdateInCurrentCommit = false;
    var hasScheduledUpdateInCurrentPhase = false;
    var commitCountInCurrentWorkLoop = 0;
    var effectCountInCurrentCommit = 0; // to avoid stretch the commit phase with measurement overhead.

    var labelsInCurrentCommit = new Set();

    var formatMarkName = function (markName) {
      return reactEmoji + " " + markName;
    };

    var formatLabel = function (label, warning) {
      var prefix = warning ? warningEmoji + " " : reactEmoji + " ";
      var suffix = warning ? " Warning: " + warning : '';
      return "" + prefix + label + suffix;
    };

    var beginMark = function (markName) {
      performance.mark(formatMarkName(markName));
    };

    var clearMark = function (markName) {
      performance.clearMarks(formatMarkName(markName));
    };

    var endMark = function (label, markName, warning) {
      var formattedMarkName = formatMarkName(markName);
      var formattedLabel = formatLabel(label, warning);

      try {
        performance.measure(formattedLabel, formattedMarkName);
      } catch (err) {} // If previous mark was missing for some reason, this will throw.
      // This could only happen if React crashed in an unexpected place earlier.
      // Don't pile on with more errors.
      // Clear marks immediately to avoid growing buffer.


      performance.clearMarks(formattedMarkName);
      performance.clearMeasures(formattedLabel);
    };

    var getFiberMarkName = function (label, debugID) {
      return label + " (#" + debugID + ")";
    };

    var getFiberLabel = function (componentName, isMounted, phase) {
      if (phase === null) {
        // These are composite component total time measurements.
        return componentName + " [" + (isMounted ? 'update' : 'mount') + "]";
      } else {
        // Composite component methods.
        return componentName + "." + phase;
      }
    };

    var beginFiberMark = function (fiber, phase) {
      var componentName = getComponentName(fiber.type) || 'Unknown';
      var debugID = fiber._debugID;
      var isMounted = fiber.alternate !== null;
      var label = getFiberLabel(componentName, isMounted, phase);

      if (isCommitting && labelsInCurrentCommit.has(label)) {
        // During the commit phase, we don't show duplicate labels because
        // there is a fixed overhead for every measurement, and we don't
        // want to stretch the commit phase beyond necessary.
        return false;
      }

      labelsInCurrentCommit.add(label);
      var markName = getFiberMarkName(label, debugID);
      beginMark(markName);
      return true;
    };

    var clearFiberMark = function (fiber, phase) {
      var componentName = getComponentName(fiber.type) || 'Unknown';
      var debugID = fiber._debugID;
      var isMounted = fiber.alternate !== null;
      var label = getFiberLabel(componentName, isMounted, phase);
      var markName = getFiberMarkName(label, debugID);
      clearMark(markName);
    };

    var endFiberMark = function (fiber, phase, warning) {
      var componentName = getComponentName(fiber.type) || 'Unknown';
      var debugID = fiber._debugID;
      var isMounted = fiber.alternate !== null;
      var label = getFiberLabel(componentName, isMounted, phase);
      var markName = getFiberMarkName(label, debugID);
      endMark(label, markName, warning);
    };

    var shouldIgnoreFiber = function (fiber) {
      // Host components should be skipped in the timeline.
      // We could check typeof fiber.type, but does this work with RN?
      switch (fiber.tag) {
        case HostRoot:
        case HostComponent:
        case HostText:
        case HostPortal:
        case Fragment:
        case ContextProvider:
        case ContextConsumer:
        case Mode:
          return true;

        default:
          return false;
      }
    };

    var clearPendingPhaseMeasurement = function () {
      if (currentPhase !== null && currentPhaseFiber !== null) {
        clearFiberMark(currentPhaseFiber, currentPhase);
      }

      currentPhaseFiber = null;
      currentPhase = null;
      hasScheduledUpdateInCurrentPhase = false;
    };

    var pauseTimers = function () {
      // Stops all currently active measurements so that they can be resumed
      // if we continue in a later deferred loop from the same unit of work.
      var fiber = currentFiber;

      while (fiber) {
        if (fiber._debugIsCurrentlyTiming) {
          endFiberMark(fiber, null, null);
        }

        fiber = fiber.return;
      }
    };

    var resumeTimersRecursively = function (fiber) {
      if (fiber.return !== null) {
        resumeTimersRecursively(fiber.return);
      }

      if (fiber._debugIsCurrentlyTiming) {
        beginFiberMark(fiber, null);
      }
    };

    var resumeTimers = function () {
      // Resumes all measurements that were active during the last deferred loop.
      if (currentFiber !== null) {
        resumeTimersRecursively(currentFiber);
      }
    };

    function recordEffect() {
      if (enableUserTimingAPI) {
        effectCountInCurrentCommit++;
      }
    }

    function recordScheduleUpdate() {
      if (enableUserTimingAPI) {
        if (isCommitting) {
          hasScheduledUpdateInCurrentCommit = true;
        }

        if (currentPhase !== null && currentPhase !== 'componentWillMount' && currentPhase !== 'componentWillReceiveProps') {
          hasScheduledUpdateInCurrentPhase = true;
        }
      }
    }

    function startWorkTimer(fiber) {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
          return;
        } // If we pause, this is the fiber to unwind from.


        currentFiber = fiber;

        if (!beginFiberMark(fiber, null)) {
          return;
        }

        fiber._debugIsCurrentlyTiming = true;
      }
    }

    function cancelWorkTimer(fiber) {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
          return;
        } // Remember we shouldn't complete measurement for this fiber.
        // Otherwise flamechart will be deep even for small updates.


        fiber._debugIsCurrentlyTiming = false;
        clearFiberMark(fiber, null);
      }
    }

    function stopWorkTimer(fiber) {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
          return;
        } // If we pause, its parent is the fiber to unwind from.


        currentFiber = fiber.return;

        if (!fiber._debugIsCurrentlyTiming) {
          return;
        }

        fiber._debugIsCurrentlyTiming = false;
        endFiberMark(fiber, null, null);
      }
    }

    function stopFailedWorkTimer(fiber) {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
          return;
        } // If we pause, its parent is the fiber to unwind from.


        currentFiber = fiber.return;

        if (!fiber._debugIsCurrentlyTiming) {
          return;
        }

        fiber._debugIsCurrentlyTiming = false;
        var warning = fiber.tag === SuspenseComponent ? 'Rendering was suspended' : 'An error was thrown inside this error boundary';
        endFiberMark(fiber, null, warning);
      }
    }

    function startPhaseTimer(fiber, phase) {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming) {
          return;
        }

        clearPendingPhaseMeasurement();

        if (!beginFiberMark(fiber, phase)) {
          return;
        }

        currentPhaseFiber = fiber;
        currentPhase = phase;
      }
    }

    function stopPhaseTimer() {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming) {
          return;
        }

        if (currentPhase !== null && currentPhaseFiber !== null) {
          var warning = hasScheduledUpdateInCurrentPhase ? 'Scheduled a cascading update' : null;
          endFiberMark(currentPhaseFiber, currentPhase, warning);
        }

        currentPhase = null;
        currentPhaseFiber = null;
      }
    }

    function startWorkLoopTimer(nextUnitOfWork) {
      if (enableUserTimingAPI) {
        currentFiber = nextUnitOfWork;

        if (!supportsUserTiming) {
          return;
        }

        commitCountInCurrentWorkLoop = 0; // This is top level call.
        // Any other measurements are performed within.

        beginMark('(React Tree Reconciliation)'); // Resume any measurements that were in progress during the last loop.

        resumeTimers();
      }
    }

    function stopWorkLoopTimer(interruptedBy, didCompleteRoot) {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming) {
          return;
        }

        var warning = null;

        if (interruptedBy !== null) {
          if (interruptedBy.tag === HostRoot) {
            warning = 'A top-level update interrupted the previous render';
          } else {
            var componentName = getComponentName(interruptedBy.type) || 'Unknown';
            warning = "An update to " + componentName + " interrupted the previous render";
          }
        } else if (commitCountInCurrentWorkLoop > 1) {
          warning = 'There were cascading updates';
        }

        commitCountInCurrentWorkLoop = 0;
        var label = didCompleteRoot ? '(React Tree Reconciliation: Completed Root)' : '(React Tree Reconciliation: Yielded)'; // Pause any measurements until the next loop.

        pauseTimers();
        endMark(label, '(React Tree Reconciliation)', warning);
      }
    }

    function startCommitTimer() {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming) {
          return;
        }

        isCommitting = true;
        hasScheduledUpdateInCurrentCommit = false;
        labelsInCurrentCommit.clear();
        beginMark('(Committing Changes)');
      }
    }

    function stopCommitTimer() {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming) {
          return;
        }

        var warning = null;

        if (hasScheduledUpdateInCurrentCommit) {
          warning = 'Lifecycle hook scheduled a cascading update';
        } else if (commitCountInCurrentWorkLoop > 0) {
          warning = 'Caused by a cascading update in earlier commit';
        }

        hasScheduledUpdateInCurrentCommit = false;
        commitCountInCurrentWorkLoop++;
        isCommitting = false;
        labelsInCurrentCommit.clear();
        endMark('(Committing Changes)', '(Committing Changes)', warning);
      }
    }

    function startCommitSnapshotEffectsTimer() {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming) {
          return;
        }

        effectCountInCurrentCommit = 0;
        beginMark('(Committing Snapshot Effects)');
      }
    }

    function stopCommitSnapshotEffectsTimer() {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming) {
          return;
        }

        var count = effectCountInCurrentCommit;
        effectCountInCurrentCommit = 0;
        endMark("(Committing Snapshot Effects: " + count + " Total)", '(Committing Snapshot Effects)', null);
      }
    }

    function startCommitHostEffectsTimer() {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming) {
          return;
        }

        effectCountInCurrentCommit = 0;
        beginMark('(Committing Host Effects)');
      }
    }

    function stopCommitHostEffectsTimer() {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming) {
          return;
        }

        var count = effectCountInCurrentCommit;
        effectCountInCurrentCommit = 0;
        endMark("(Committing Host Effects: " + count + " Total)", '(Committing Host Effects)', null);
      }
    }

    function startCommitLifeCyclesTimer() {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming) {
          return;
        }

        effectCountInCurrentCommit = 0;
        beginMark('(Calling Lifecycle Methods)');
      }
    }

    function stopCommitLifeCyclesTimer() {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming) {
          return;
        }

        var count = effectCountInCurrentCommit;
        effectCountInCurrentCommit = 0;
        endMark("(Calling Lifecycle Methods: " + count + " Total)", '(Calling Lifecycle Methods)', null);
      }
    }

    var valueStack = [];
    var fiberStack;
    {
      fiberStack = [];
    }
    var index = -1;

    function createCursor(defaultValue) {
      return {
        current: defaultValue
      };
    }

    function pop(cursor, fiber) {
      if (index < 0) {
        {
          warningWithoutStack$1(false, 'Unexpected pop.');
        }
        return;
      }

      {
        if (fiber !== fiberStack[index]) {
          warningWithoutStack$1(false, 'Unexpected Fiber popped.');
        }
      }
      cursor.current = valueStack[index];
      valueStack[index] = null;
      {
        fiberStack[index] = null;
      }
      index--;
    }

    function push(cursor, value, fiber) {
      index++;
      valueStack[index] = cursor.current;
      {
        fiberStack[index] = fiber;
      }
      cursor.current = value;
    }

    var warnedAboutMissingGetChildContext;
    {
      warnedAboutMissingGetChildContext = {};
    }
    var emptyContextObject = {};
    {
      Object.freeze(emptyContextObject);
    } // A cursor to the current merged context object on the stack.

    var contextStackCursor = createCursor(emptyContextObject); // A cursor to a boolean indicating whether the context has changed.

    var didPerformWorkStackCursor = createCursor(false); // Keep track of the previous context object that was on the stack.
    // We use this to get access to the parent context after we have already
    // pushed the next context provider, and now need to merge their contexts.

    var previousContext = emptyContextObject;

    function getUnmaskedContext(workInProgress, Component, didPushOwnContextIfProvider) {
      if (disableLegacyContext) {
        return emptyContextObject;
      } else {
        if (didPushOwnContextIfProvider && isContextProvider(Component)) {
          // If the fiber is a context provider itself, when we read its context
          // we may have already pushed its own child context on the stack. A context
          // provider should not "see" its own child context. Therefore we read the
          // previous (parent) context instead for a context provider.
          return previousContext;
        }

        return contextStackCursor.current;
      }
    }

    function cacheContext(workInProgress, unmaskedContext, maskedContext) {
      if (disableLegacyContext) {
        return;
      } else {
        var instance = workInProgress.stateNode;
        instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
        instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
      }
    }

    function getMaskedContext(workInProgress, unmaskedContext) {
      if (disableLegacyContext) {
        return emptyContextObject;
      } else {
        var type = workInProgress.type;
        var contextTypes = type.contextTypes;

        if (!contextTypes) {
          return emptyContextObject;
        } // Avoid recreating masked context unless unmasked context has changed.
        // Failing to do this will result in unnecessary calls to componentWillReceiveProps.
        // This may trigger infinite loops if componentWillReceiveProps calls setState.


        var instance = workInProgress.stateNode;

        if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {
          return instance.__reactInternalMemoizedMaskedChildContext;
        }

        var context = {};

        for (var key in contextTypes) {
          context[key] = unmaskedContext[key];
        }

        {
          var name = getComponentName(type) || 'Unknown';
          checkPropTypes(contextTypes, context, 'context', name, getCurrentFiberStackInDev);
        } // Cache unmasked context so we can avoid recreating masked context unless necessary.
        // Context is created before the class component is instantiated so check for instance.

        if (instance) {
          cacheContext(workInProgress, unmaskedContext, context);
        }

        return context;
      }
    }

    function hasContextChanged() {
      if (disableLegacyContext) {
        return false;
      } else {
        return didPerformWorkStackCursor.current;
      }
    }

    function isContextProvider(type) {
      if (disableLegacyContext) {
        return false;
      } else {
        var childContextTypes = type.childContextTypes;
        return childContextTypes !== null && childContextTypes !== undefined;
      }
    }

    function popContext(fiber) {
      if (disableLegacyContext) {
        return;
      } else {
        pop(didPerformWorkStackCursor, fiber);
        pop(contextStackCursor, fiber);
      }
    }

    function popTopLevelContextObject(fiber) {
      if (disableLegacyContext) {
        return;
      } else {
        pop(didPerformWorkStackCursor, fiber);
        pop(contextStackCursor, fiber);
      }
    }

    function pushTopLevelContextObject(fiber, context, didChange) {
      if (disableLegacyContext) {
        return;
      } else {
        (function () {
          if (!(contextStackCursor.current === emptyContextObject)) {
            {
              throw ReactError(Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue."));
            }
          }
        })();

        push(contextStackCursor, context, fiber);
        push(didPerformWorkStackCursor, didChange, fiber);
      }
    }

    function processChildContext(fiber, type, parentContext) {
      if (disableLegacyContext) {
        return parentContext;
      } else {
        var instance = fiber.stateNode;
        var childContextTypes = type.childContextTypes; // TODO (bvaughn) Replace this behavior with an invariant() in the future.
        // It has only been added in Fiber to match the (unintentional) behavior in Stack.

        if (typeof instance.getChildContext !== 'function') {
          {
            var componentName = getComponentName(type) || 'Unknown';

            if (!warnedAboutMissingGetChildContext[componentName]) {
              warnedAboutMissingGetChildContext[componentName] = true;
              warningWithoutStack$1(false, '%s.childContextTypes is specified but there is no getChildContext() method ' + 'on the instance. You can either define getChildContext() on %s or remove ' + 'childContextTypes from it.', componentName, componentName);
            }
          }
          return parentContext;
        }

        var childContext;
        {
          setCurrentPhase('getChildContext');
        }
        startPhaseTimer(fiber, 'getChildContext');
        childContext = instance.getChildContext();
        stopPhaseTimer();
        {
          setCurrentPhase(null);
        }

        for (var contextKey in childContext) {
          (function () {
            if (!(contextKey in childContextTypes)) {
              {
                throw ReactError(Error((getComponentName(type) || 'Unknown') + ".getChildContext(): key \"" + contextKey + "\" is not defined in childContextTypes."));
              }
            }
          })();
        }

        {
          var name = getComponentName(type) || 'Unknown';
          checkPropTypes(childContextTypes, childContext, 'child context', name, // In practice, there is one case in which we won't get a stack. It's when
          // somebody calls unstable_renderSubtreeIntoContainer() and we process
          // context from the parent component instance. The stack will be missing
          // because it's outside of the reconciliation, and so the pointer has not
          // been set. This is rare and doesn't matter. We'll also remove that API.
          getCurrentFiberStackInDev);
        }
        return _assign({}, parentContext, {}, childContext);
      }
    }

    function pushContextProvider(workInProgress) {
      if (disableLegacyContext) {
        return false;
      } else {
        var instance = workInProgress.stateNode; // We push the context as early as possible to ensure stack integrity.
        // If the instance does not exist yet, we will push null at first,
        // and replace it on the stack later when invalidating the context.

        var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject; // Remember the parent context so we can merge with it later.
        // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.

        previousContext = contextStackCursor.current;
        push(contextStackCursor, memoizedMergedChildContext, workInProgress);
        push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
        return true;
      }
    }

    function invalidateContextProvider(workInProgress, type, didChange) {
      if (disableLegacyContext) {
        return;
      } else {
        var instance = workInProgress.stateNode;

        (function () {
          if (!instance) {
            {
              throw ReactError(Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue."));
            }
          }
        })();

        if (didChange) {
          // Merge parent and own context.
          // Skip this if we're not updating due to sCU.
          // This avoids unnecessarily recomputing memoized values.
          var mergedContext = processChildContext(workInProgress, type, previousContext);
          instance.__reactInternalMemoizedMergedChildContext = mergedContext; // Replace the old (or empty) context with the new one.
          // It is important to unwind the context in the reverse order.

          pop(didPerformWorkStackCursor, workInProgress);
          pop(contextStackCursor, workInProgress); // Now push the new context and mark that it has changed.

          push(contextStackCursor, mergedContext, workInProgress);
          push(didPerformWorkStackCursor, didChange, workInProgress);
        } else {
          pop(didPerformWorkStackCursor, workInProgress);
          push(didPerformWorkStackCursor, didChange, workInProgress);
        }
      }
    }

    function findCurrentUnmaskedContext(fiber) {
      if (disableLegacyContext) {
        return emptyContextObject;
      } else {
        // Currently this is only used with renderSubtreeIntoContainer; not sure if it
        // makes sense elsewhere
        (function () {
          if (!(isFiberMounted(fiber) && fiber.tag === ClassComponent)) {
            {
              throw ReactError(Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue."));
            }
          }
        })();

        var node = fiber;

        do {
          switch (node.tag) {
            case HostRoot:
              return node.stateNode.context;

            case ClassComponent:
              {
                var Component = node.type;

                if (isContextProvider(Component)) {
                  return node.stateNode.__reactInternalMemoizedMergedChildContext;
                }

                break;
              }
          }

          node = node.return;
        } while (node !== null);

        (function () {
          {
            {
              throw ReactError(Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue."));
            }
          }
        })();
      }
    }

    var LegacyRoot = 0;
    var BatchedRoot = 1;
    var ConcurrentRoot = 2; // Intentionally not named imports because Rollup would use dynamic dispatch for
    // CommonJS interop named imports.

    var Scheduler_runWithPriority = Scheduler.unstable_runWithPriority;
    var Scheduler_scheduleCallback = Scheduler.unstable_scheduleCallback;
    var Scheduler_cancelCallback = Scheduler.unstable_cancelCallback;
    var Scheduler_shouldYield = Scheduler.unstable_shouldYield;
    var Scheduler_requestPaint = Scheduler.unstable_requestPaint;
    var Scheduler_now = Scheduler.unstable_now;
    var Scheduler_getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel;
    var Scheduler_ImmediatePriority = Scheduler.unstable_ImmediatePriority;
    var Scheduler_UserBlockingPriority = Scheduler.unstable_UserBlockingPriority;
    var Scheduler_NormalPriority = Scheduler.unstable_NormalPriority;
    var Scheduler_LowPriority = Scheduler.unstable_LowPriority;
    var Scheduler_IdlePriority = Scheduler.unstable_IdlePriority;

    if (enableSchedulerTracing) {
      // Provide explicit error message when production+profiling bundle of e.g.
      // react-dom is used with production (non-profiling) bundle of
      // scheduler/tracing
      (function () {
        if (!(tracing.__interactionsRef != null && tracing.__interactionsRef.current != null)) {
          {
            throw ReactError(Error("It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `scheduler/tracing` module with `scheduler/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at http://fb.me/react-profiling"));
          }
        }
      })();
    }

    var fakeCallbackNode = {}; // Except for NoPriority, these correspond to Scheduler priorities. We use
    // ascending numbers so we can compare them like numbers. They start at 90 to
    // avoid clashing with Scheduler's priorities.

    var ImmediatePriority = 99;
    var UserBlockingPriority$2 = 98;
    var NormalPriority = 97;
    var LowPriority = 96;
    var IdlePriority = 95; // NoPriority is the absence of priority. Also React-only.

    var NoPriority = 90;
    var shouldYield = Scheduler_shouldYield;
    var requestPaint = // Fall back gracefully if we're running an older version of Scheduler.
    Scheduler_requestPaint !== undefined ? Scheduler_requestPaint : function () {};
    var syncQueue = null;
    var immediateQueueCallbackNode = null;
    var isFlushingSyncQueue = false;
    var initialTimeMs = Scheduler_now(); // If the initial timestamp is reasonably small, use Scheduler's `now` directly.
    // This will be the case for modern browsers that support `performance.now`. In
    // older browsers, Scheduler falls back to `Date.now`, which returns a Unix
    // timestamp. In that case, subtract the module initialization time to simulate
    // the behavior of performance.now and keep our times small enough to fit
    // within 32 bits.
    // TODO: Consider lifting this into Scheduler.

    var now = initialTimeMs < 10000 ? Scheduler_now : function () {
      return Scheduler_now() - initialTimeMs;
    };

    function getCurrentPriorityLevel() {
      switch (Scheduler_getCurrentPriorityLevel()) {
        case Scheduler_ImmediatePriority:
          return ImmediatePriority;

        case Scheduler_UserBlockingPriority:
          return UserBlockingPriority$2;

        case Scheduler_NormalPriority:
          return NormalPriority;

        case Scheduler_LowPriority:
          return LowPriority;

        case Scheduler_IdlePriority:
          return IdlePriority;

        default:
          (function () {
            {
              {
                throw ReactError(Error("Unknown priority level."));
              }
            }
          })();

      }
    }

    function reactPriorityToSchedulerPriority(reactPriorityLevel) {
      switch (reactPriorityLevel) {
        case ImmediatePriority:
          return Scheduler_ImmediatePriority;

        case UserBlockingPriority$2:
          return Scheduler_UserBlockingPriority;

        case NormalPriority:
          return Scheduler_NormalPriority;

        case LowPriority:
          return Scheduler_LowPriority;

        case IdlePriority:
          return Scheduler_IdlePriority;

        default:
          (function () {
            {
              {
                throw ReactError(Error("Unknown priority level."));
              }
            }
          })();

      }
    }

    function runWithPriority$2(reactPriorityLevel, fn) {
      var priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
      return Scheduler_runWithPriority(priorityLevel, fn);
    }

    function scheduleCallback(reactPriorityLevel, callback, options) {
      var priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
      return Scheduler_scheduleCallback(priorityLevel, callback, options);
    }

    function scheduleSyncCallback(callback) {
      // Push this callback into an internal queue. We'll flush these either in
      // the next tick, or earlier if something calls `flushSyncCallbackQueue`.
      if (syncQueue === null) {
        syncQueue = [callback]; // Flush the queue in the next tick, at the earliest.

        immediateQueueCallbackNode = Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueueImpl);
      } else {
        // Push onto existing queue. Don't need to schedule a callback because
        // we already scheduled one when we created the queue.
        syncQueue.push(callback);
      }

      return fakeCallbackNode;
    }

    function cancelCallback(callbackNode) {
      if (callbackNode !== fakeCallbackNode) {
        Scheduler_cancelCallback(callbackNode);
      }
    }

    function flushSyncCallbackQueue() {
      if (immediateQueueCallbackNode !== null) {
        var node = immediateQueueCallbackNode;
        immediateQueueCallbackNode = null;
        Scheduler_cancelCallback(node);
      }

      flushSyncCallbackQueueImpl();
    }

    function flushSyncCallbackQueueImpl() {
      if (!isFlushingSyncQueue && syncQueue !== null) {
        // Prevent re-entrancy.
        isFlushingSyncQueue = true;
        var i = 0;

        try {
          var _isSync = true;
          var queue = syncQueue;
          runWithPriority$2(ImmediatePriority, function () {
            for (; i < queue.length; i++) {
              var callback = queue[i];

              do {
                callback = callback(_isSync);
              } while (callback !== null);
            }
          });
          syncQueue = null;
        } catch (error) {
          // If something throws, leave the remaining callbacks on the queue.
          if (syncQueue !== null) {
            syncQueue = syncQueue.slice(i + 1);
          } // Resume flushing in the next tick


          Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueue);
          throw error;
        } finally {
          isFlushingSyncQueue = false;
        }
      }
    }

    var NoMode = 0;
    var StrictMode = 1; // TODO: Remove BatchedMode and ConcurrentMode by reading from the root
    // tag instead

    var BatchedMode = 2;
    var ConcurrentMode = 4;
    var ProfileMode = 8; // Max 31 bit integer. The max integer size in V8 for 32-bit systems.
    // Math.pow(2, 30) - 1
    // 0b111111111111111111111111111111

    var MAX_SIGNED_31_BIT_INT = 1073741823;
    var NoWork = 0; // TODO: Think of a better name for Never. The key difference with Idle is that
    // Never work can be committed in an inconsistent state without tearing the UI.
    // The main example is offscreen content, like a hidden subtree. So one possible
    // name is Offscreen. However, it also includes dehydrated Suspense boundaries,
    // which are inconsistent in the sense that they haven't finished yet, but
    // aren't visibly inconsistent because the server rendered HTML matches what the
    // hydrated tree would look like.

    var Never = 1; // Idle is slightly higher priority than Never. It must completely finish in
    // order to be consistent.

    var Idle = 2;
    var Sync = MAX_SIGNED_31_BIT_INT;
    var Batched = Sync - 1;
    var UNIT_SIZE = 10;
    var MAGIC_NUMBER_OFFSET = Batched - 1; // 1 unit of expiration time represents 10ms.

    function msToExpirationTime(ms) {
      // Always add an offset so that we don't clash with the magic number for NoWork.
      return MAGIC_NUMBER_OFFSET - (ms / UNIT_SIZE | 0);
    }

    function expirationTimeToMs(expirationTime) {
      return (MAGIC_NUMBER_OFFSET - expirationTime) * UNIT_SIZE;
    }

    function ceiling(num, precision) {
      return ((num / precision | 0) + 1) * precision;
    }

    function computeExpirationBucket(currentTime, expirationInMs, bucketSizeMs) {
      return MAGIC_NUMBER_OFFSET - ceiling(MAGIC_NUMBER_OFFSET - currentTime + expirationInMs / UNIT_SIZE, bucketSizeMs / UNIT_SIZE);
    } // TODO: This corresponds to Scheduler's NormalPriority, not LowPriority. Update
    // the names to reflect.


    var LOW_PRIORITY_EXPIRATION = 5000;
    var LOW_PRIORITY_BATCH_SIZE = 250;

    function computeAsyncExpiration(currentTime) {
      return computeExpirationBucket(currentTime, LOW_PRIORITY_EXPIRATION, LOW_PRIORITY_BATCH_SIZE);
    }

    function computeSuspenseExpiration(currentTime, timeoutMs) {
      // TODO: Should we warn if timeoutMs is lower than the normal pri expiration time?
      return computeExpirationBucket(currentTime, timeoutMs, LOW_PRIORITY_BATCH_SIZE);
    } // We intentionally set a higher expiration time for interactive updates in
    // dev than in production.
    //
    // If the main thread is being blocked so long that you hit the expiration,
    // it's a problem that could be solved with better scheduling.
    //
    // People will be more likely to notice this and fix it with the long
    // expiration time in development.
    //
    // In production we opt for better UX at the risk of masking scheduling
    // problems, by expiring fast.


    var HIGH_PRIORITY_EXPIRATION = 500;
    var HIGH_PRIORITY_BATCH_SIZE = 100;

    function computeInteractiveExpiration(currentTime) {
      return computeExpirationBucket(currentTime, HIGH_PRIORITY_EXPIRATION, HIGH_PRIORITY_BATCH_SIZE);
    }

    function inferPriorityFromExpirationTime(currentTime, expirationTime) {
      if (expirationTime === Sync) {
        return ImmediatePriority;
      }

      if (expirationTime === Never || expirationTime === Idle) {
        return IdlePriority;
      }

      var msUntil = expirationTimeToMs(expirationTime) - expirationTimeToMs(currentTime);

      if (msUntil <= 0) {
        return ImmediatePriority;
      }

      if (msUntil <= HIGH_PRIORITY_EXPIRATION + HIGH_PRIORITY_BATCH_SIZE) {
        return UserBlockingPriority$2;
      }

      if (msUntil <= LOW_PRIORITY_EXPIRATION + LOW_PRIORITY_BATCH_SIZE) {
        return NormalPriority;
      } // TODO: Handle LowPriority
      // Assume anything lower has idle priority


      return IdlePriority;
    }
    /**
     * Forked from fbjs/warning:
     * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
     *
     * Only change is we use console.warn instead of console.error,
     * and do nothing when 'console' is not supported.
     * This really simplifies the code.
     * ---
     * Similar to invariant but only logs a warning if the condition is not met.
     * This can be used to log issues in development environments in critical
     * paths. Removing the logging code for production environments will keep the
     * same logic and follow the same code paths.
     */


    var lowPriorityWarningWithoutStack = function () {};

    {
      var printWarning = function (format) {
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        var argIndex = 0;
        var message = 'Warning: ' + format.replace(/%s/g, function () {
          return args[argIndex++];
        });

        if (typeof console !== 'undefined') {
          console.warn(message);
        }

        try {
          // --- Welcome to debugging React ---
          // This error was thrown as a convenience so that you can use this stack
          // to find the callsite that caused this warning to fire.
          throw new Error(message);
        } catch (x) {}
      };

      lowPriorityWarningWithoutStack = function (condition, format) {
        if (format === undefined) {
          throw new Error('`lowPriorityWarningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');
        }

        if (!condition) {
          for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
            args[_key2 - 2] = arguments[_key2];
          }

          printWarning.apply(void 0, [format].concat(args));
        }
      };
    }
    var lowPriorityWarningWithoutStack$1 = lowPriorityWarningWithoutStack;
    var ReactStrictModeWarnings = {
      recordUnsafeLifecycleWarnings: function (fiber, instance) {},
      flushPendingUnsafeLifecycleWarnings: function () {},
      recordLegacyContextWarning: function (fiber, instance) {},
      flushLegacyContextWarning: function () {},
      discardPendingWarnings: function () {}
    };
    {
      var findStrictRoot = function (fiber) {
        var maybeStrictRoot = null;
        var node = fiber;

        while (node !== null) {
          if (node.mode & StrictMode) {
            maybeStrictRoot = node;
          }

          node = node.return;
        }

        return maybeStrictRoot;
      };

      var setToSortedString = function (set) {
        var array = [];
        set.forEach(function (value) {
          array.push(value);
        });
        return array.sort().join(', ');
      };

      var pendingComponentWillMountWarnings = [];
      var pendingUNSAFE_ComponentWillMountWarnings = [];
      var pendingComponentWillReceivePropsWarnings = [];
      var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
      var pendingComponentWillUpdateWarnings = [];
      var pendingUNSAFE_ComponentWillUpdateWarnings = []; // Tracks components we have already warned about.

      var didWarnAboutUnsafeLifecycles = new Set();

      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function (fiber, instance) {
        // Dedup strategy: Warn once per component.
        if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {
          return;
        }

        if (typeof instance.componentWillMount === 'function' && // Don't warn about react-lifecycles-compat polyfilled components.
        instance.componentWillMount.__suppressDeprecationWarning !== true) {
          pendingComponentWillMountWarnings.push(fiber);
        }

        if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillMount === 'function') {
          pendingUNSAFE_ComponentWillMountWarnings.push(fiber);
        }

        if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
          pendingComponentWillReceivePropsWarnings.push(fiber);
        }

        if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
          pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);
        }

        if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
          pendingComponentWillUpdateWarnings.push(fiber);
        }

        if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillUpdate === 'function') {
          pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);
        }
      };

      ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function () {
        // We do an initial pass to gather component names
        var componentWillMountUniqueNames = new Set();

        if (pendingComponentWillMountWarnings.length > 0) {
          pendingComponentWillMountWarnings.forEach(function (fiber) {
            componentWillMountUniqueNames.add(getComponentName(fiber.type) || 'Component');
            didWarnAboutUnsafeLifecycles.add(fiber.type);
          });
          pendingComponentWillMountWarnings = [];
        }

        var UNSAFE_componentWillMountUniqueNames = new Set();

        if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {
          pendingUNSAFE_ComponentWillMountWarnings.forEach(function (fiber) {
            UNSAFE_componentWillMountUniqueNames.add(getComponentName(fiber.type) || 'Component');
            didWarnAboutUnsafeLifecycles.add(fiber.type);
          });
          pendingUNSAFE_ComponentWillMountWarnings = [];
        }

        var componentWillReceivePropsUniqueNames = new Set();

        if (pendingComponentWillReceivePropsWarnings.length > 0) {
          pendingComponentWillReceivePropsWarnings.forEach(function (fiber) {
            componentWillReceivePropsUniqueNames.add(getComponentName(fiber.type) || 'Component');
            didWarnAboutUnsafeLifecycles.add(fiber.type);
          });
          pendingComponentWillReceivePropsWarnings = [];
        }

        var UNSAFE_componentWillReceivePropsUniqueNames = new Set();

        if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {
          pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function (fiber) {
            UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentName(fiber.type) || 'Component');
            didWarnAboutUnsafeLifecycles.add(fiber.type);
          });
          pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
        }

        var componentWillUpdateUniqueNames = new Set();

        if (pendingComponentWillUpdateWarnings.length > 0) {
          pendingComponentWillUpdateWarnings.forEach(function (fiber) {
            componentWillUpdateUniqueNames.add(getComponentName(fiber.type) || 'Component');
            didWarnAboutUnsafeLifecycles.add(fiber.type);
          });
          pendingComponentWillUpdateWarnings = [];
        }

        var UNSAFE_componentWillUpdateUniqueNames = new Set();

        if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {
          pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function (fiber) {
            UNSAFE_componentWillUpdateUniqueNames.add(getComponentName(fiber.type) || 'Component');
            didWarnAboutUnsafeLifecycles.add(fiber.type);
          });
          pendingUNSAFE_ComponentWillUpdateWarnings = [];
        } // Finally, we flush all the warnings
        // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'


        if (UNSAFE_componentWillMountUniqueNames.size > 0) {
          var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);
          warningWithoutStack$1(false, 'Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. ' + 'See https://fb.me/react-unsafe-component-lifecycles for details.\n\n' + '* Move code with side effects to componentDidMount, and set initial state in the constructor.\n' + '\nPlease update the following components: %s', sortedNames);
        }

        if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {
          var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);

          warningWithoutStack$1(false, 'Using UNSAFE_componentWillReceiveProps in strict mode is not recommended ' + 'and may indicate bugs in your code. ' + 'See https://fb.me/react-unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + "* If you're updating state whenever props change, " + 'refactor your code to use memoization techniques or move it to ' + 'static getDerivedStateFromProps. Learn more at: https://fb.me/react-derived-state\n' + '\nPlease update the following components: %s', _sortedNames);
        }

        if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {
          var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);

          warningWithoutStack$1(false, 'Using UNSAFE_componentWillUpdate in strict mode is not recommended ' + 'and may indicate bugs in your code. ' + 'See https://fb.me/react-unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + '\nPlease update the following components: %s', _sortedNames2);
        }

        if (componentWillMountUniqueNames.size > 0) {
          var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);

          lowPriorityWarningWithoutStack$1(false, 'componentWillMount has been renamed, and is not recommended for use. ' + 'See https://fb.me/react-unsafe-component-lifecycles for details.\n\n' + '* Move code with side effects to componentDidMount, and set initial state in the constructor.\n' + '* Rename componentWillMount to UNSAFE_componentWillMount to suppress ' + 'this warning in non-strict mode. In React 17.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n' + '\nPlease update the following components: %s', _sortedNames3);
        }

        if (componentWillReceivePropsUniqueNames.size > 0) {
          var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);

          lowPriorityWarningWithoutStack$1(false, 'componentWillReceiveProps has been renamed, and is not recommended for use. ' + 'See https://fb.me/react-unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + "* If you're updating state whenever props change, refactor your " + 'code to use memoization techniques or move it to ' + 'static getDerivedStateFromProps. Learn more at: https://fb.me/react-derived-state\n' + '* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress ' + 'this warning in non-strict mode. In React 17.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n' + '\nPlease update the following components: %s', _sortedNames4);
        }

        if (componentWillUpdateUniqueNames.size > 0) {
          var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);

          lowPriorityWarningWithoutStack$1(false, 'componentWillUpdate has been renamed, and is not recommended for use. ' + 'See https://fb.me/react-unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + '* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress ' + 'this warning in non-strict mode. In React 17.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n' + '\nPlease update the following components: %s', _sortedNames5);
        }
      };

      var pendingLegacyContextWarning = new Map(); // Tracks components we have already warned about.

      var didWarnAboutLegacyContext = new Set();

      ReactStrictModeWarnings.recordLegacyContextWarning = function (fiber, instance) {
        var strictRoot = findStrictRoot(fiber);

        if (strictRoot === null) {
          warningWithoutStack$1(false, 'Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');
          return;
        } // Dedup strategy: Warn once per component.


        if (didWarnAboutLegacyContext.has(fiber.type)) {
          return;
        }

        var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);

        if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === 'function') {
          if (warningsForRoot === undefined) {
            warningsForRoot = [];
            pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
          }

          warningsForRoot.push(fiber);
        }
      };

      ReactStrictModeWarnings.flushLegacyContextWarning = function () {
        pendingLegacyContextWarning.forEach(function (fiberArray, strictRoot) {
          var uniqueNames = new Set();
          fiberArray.forEach(function (fiber) {
            uniqueNames.add(getComponentName(fiber.type) || 'Component');
            didWarnAboutLegacyContext.add(fiber.type);
          });
          var sortedNames = setToSortedString(uniqueNames);
          var strictRootComponentStack = getStackByFiberInDevAndProd(strictRoot);
          warningWithoutStack$1(false, 'Legacy context API has been detected within a strict-mode tree.' + '\n\nThe old API will be supported in all 16.x releases, but applications ' + 'using it should migrate to the new version.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here: https://fb.me/react-legacy-context' + '%s', sortedNames, strictRootComponentStack);
        });
      };

      ReactStrictModeWarnings.discardPendingWarnings = function () {
        pendingComponentWillMountWarnings = [];
        pendingUNSAFE_ComponentWillMountWarnings = [];
        pendingComponentWillReceivePropsWarnings = [];
        pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
        pendingComponentWillUpdateWarnings = [];
        pendingUNSAFE_ComponentWillUpdateWarnings = [];
        pendingLegacyContextWarning = new Map();
      };
    }
    var resolveFamily = null; // $FlowFixMe Flow gets confused by a WeakSet feature check below.

    var failedBoundaries = null;

    var setRefreshHandler = function (handler) {
      {
        resolveFamily = handler;
      }
    };

    function resolveFunctionForHotReloading(type) {
      {
        if (resolveFamily === null) {
          // Hot reloading is disabled.
          return type;
        }

        var family = resolveFamily(type);

        if (family === undefined) {
          return type;
        } // Use the latest known implementation.


        return family.current;
      }
    }

    function resolveClassForHotReloading(type) {
      // No implementation differences.
      return resolveFunctionForHotReloading(type);
    }

    function resolveForwardRefForHotReloading(type) {
      {
        if (resolveFamily === null) {
          // Hot reloading is disabled.
          return type;
        }

        var family = resolveFamily(type);

        if (family === undefined) {
          // Check if we're dealing with a real forwardRef. Don't want to crash early.
          if (type !== null && type !== undefined && typeof type.render === 'function') {
            // ForwardRef is special because its resolved .type is an object,
            // but it's possible that we only have its inner render function in the map.
            // If that inner render function is different, we'll build a new forwardRef type.
            var currentRender = resolveFunctionForHotReloading(type.render);

            if (type.render !== currentRender) {
              var syntheticType = {
                $$typeof: REACT_FORWARD_REF_TYPE,
                render: currentRender
              };

              if (type.displayName !== undefined) {
                syntheticType.displayName = type.displayName;
              }

              return syntheticType;
            }
          }

          return type;
        } // Use the latest known implementation.


        return family.current;
      }
    }

    function isCompatibleFamilyForHotReloading(fiber, element) {
      {
        if (resolveFamily === null) {
          // Hot reloading is disabled.
          return false;
        }

        var prevType = fiber.elementType;
        var nextType = element.type; // If we got here, we know types aren't === equal.

        var needsCompareFamilies = false;
        var $$typeofNextType = typeof nextType === 'object' && nextType !== null ? nextType.$$typeof : null;

        switch (fiber.tag) {
          case ClassComponent:
            {
              if (typeof nextType === 'function') {
                needsCompareFamilies = true;
              }

              break;
            }

          case FunctionComponent:
            {
              if (typeof nextType === 'function') {
                needsCompareFamilies = true;
              } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                // We don't know the inner type yet.
                // We're going to assume that the lazy inner type is stable,
                // and so it is sufficient to avoid reconciling it away.
                // We're not going to unwrap or actually use the new lazy type.
                needsCompareFamilies = true;
              }

              break;
            }

          case ForwardRef:
            {
              if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {
                needsCompareFamilies = true;
              } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                needsCompareFamilies = true;
              }

              break;
            }

          case MemoComponent:
          case SimpleMemoComponent:
            {
              if ($$typeofNextType === REACT_MEMO_TYPE) {
                // TODO: if it was but can no longer be simple,
                // we shouldn't set this.
                needsCompareFamilies = true;
              } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                needsCompareFamilies = true;
              }

              break;
            }

          default:
            return false;
        } // Check if both types have a family and it's the same one.


        if (needsCompareFamilies) {
          // Note: memo() and forwardRef() we'll compare outer rather than inner type.
          // This means both of them need to be registered to preserve state.
          // If we unwrapped and compared the inner types for wrappers instead,
          // then we would risk falsely saying two separate memo(Foo)
          // calls are equivalent because they wrap the same Foo function.
          var prevFamily = resolveFamily(prevType);

          if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) {
            return true;
          }
        }

        return false;
      }
    }

    function markFailedErrorBoundaryForHotReloading(fiber) {
      {
        if (resolveFamily === null) {
          // Hot reloading is disabled.
          return;
        }

        if (typeof WeakSet !== 'function') {
          return;
        }

        if (failedBoundaries === null) {
          failedBoundaries = new WeakSet();
        }

        failedBoundaries.add(fiber);
      }
    }

    var scheduleRefresh = function (root, update) {
      {
        if (resolveFamily === null) {
          // Hot reloading is disabled.
          return;
        }

        var staleFamilies = update.staleFamilies,
            updatedFamilies = update.updatedFamilies;
        flushPassiveEffects();
        flushSync(function () {
          scheduleFibersWithFamiliesRecursively(root.current, updatedFamilies, staleFamilies);
        });
      }
    };

    var scheduleRoot = function (root, element) {
      {
        if (root.context !== emptyContextObject) {
          // Super edge case: root has a legacy _renderSubtree context
          // but we don't know the parentComponent so we can't pass it.
          // Just ignore. We'll delete this with _renderSubtree code path later.
          return;
        }

        flushPassiveEffects();
        updateContainerAtExpirationTime(element, root, null, Sync, null);
      }
    };

    function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {
      {
        var alternate = fiber.alternate,
            child = fiber.child,
            sibling = fiber.sibling,
            tag = fiber.tag,
            type = fiber.type;
        var candidateType = null;

        switch (tag) {
          case FunctionComponent:
          case SimpleMemoComponent:
          case ClassComponent:
            candidateType = type;
            break;

          case ForwardRef:
            candidateType = type.render;
            break;

          default:
            break;
        }

        if (resolveFamily === null) {
          throw new Error('Expected resolveFamily to be set during hot reload.');
        }

        var needsRender = false;
        var needsRemount = false;

        if (candidateType !== null) {
          var family = resolveFamily(candidateType);

          if (family !== undefined) {
            if (staleFamilies.has(family)) {
              needsRemount = true;
            } else if (updatedFamilies.has(family)) {
              if (tag === ClassComponent) {
                needsRemount = true;
              } else {
                needsRender = true;
              }
            }
          }
        }

        if (failedBoundaries !== null) {
          if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) {
            needsRemount = true;
          }
        }

        if (needsRemount) {
          fiber._debugNeedsRemount = true;
        }

        if (needsRemount || needsRender) {
          scheduleWork(fiber, Sync);
        }

        if (child !== null && !needsRemount) {
          scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);
        }

        if (sibling !== null) {
          scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);
        }
      }
    }

    var findHostInstancesForRefresh = function (root, families) {
      {
        var hostInstances = new Set();
        var types = new Set(families.map(function (family) {
          return family.current;
        }));
        findHostInstancesForMatchingFibersRecursively(root.current, types, hostInstances);
        return hostInstances;
      }
    };

    function findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {
      {
        var child = fiber.child,
            sibling = fiber.sibling,
            tag = fiber.tag,
            type = fiber.type;
        var candidateType = null;

        switch (tag) {
          case FunctionComponent:
          case SimpleMemoComponent:
          case ClassComponent:
            candidateType = type;
            break;

          case ForwardRef:
            candidateType = type.render;
            break;

          default:
            break;
        }

        var didMatch = false;

        if (candidateType !== null) {
          if (types.has(candidateType)) {
            didMatch = true;
          }
        }

        if (didMatch) {
          // We have a match. This only drills down to the closest host components.
          // There's no need to search deeper because for the purpose of giving
          // visual feedback, "flashing" outermost parent rectangles is sufficient.
          findHostInstancesForFiberShallowly(fiber, hostInstances);
        } else {
          // If there's no match, maybe there will be one further down in the child tree.
          if (child !== null) {
            findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);
          }
        }

        if (sibling !== null) {
          findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);
        }
      }
    }

    function findHostInstancesForFiberShallowly(fiber, hostInstances) {
      {
        var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);

        if (foundHostInstances) {
          return;
        } // If we didn't find any host children, fallback to closest host parent.


        var node = fiber;

        while (true) {
          switch (node.tag) {
            case HostComponent:
              hostInstances.add(node.stateNode);
              return;

            case HostPortal:
              hostInstances.add(node.stateNode.containerInfo);
              return;

            case HostRoot:
              hostInstances.add(node.stateNode.containerInfo);
              return;
          }

          if (node.return === null) {
            throw new Error('Expected to reach root first.');
          }

          node = node.return;
        }
      }
    }

    function findChildHostInstancesForFiberShallowly(fiber, hostInstances) {
      {
        var node = fiber;
        var foundHostInstances = false;

        while (true) {
          if (node.tag === HostComponent) {
            // We got a match.
            foundHostInstances = true;
            hostInstances.add(node.stateNode); // There may still be more, so keep searching.
          } else if (node.child !== null) {
            node.child.return = node;
            node = node.child;
            continue;
          }

          if (node === fiber) {
            return foundHostInstances;
          }

          while (node.sibling === null) {
            if (node.return === null || node.return === fiber) {
              return foundHostInstances;
            }

            node = node.return;
          }

          node.sibling.return = node.return;
          node = node.sibling;
        }
      }
      return false;
    }

    function resolveDefaultProps(Component, baseProps) {
      if (Component && Component.defaultProps) {
        // Resolve default props. Taken from ReactElement
        var props = _assign({}, baseProps);

        var defaultProps = Component.defaultProps;

        for (var propName in defaultProps) {
          if (props[propName] === undefined) {
            props[propName] = defaultProps[propName];
          }
        }

        return props;
      }

      return baseProps;
    }

    function readLazyComponentType(lazyComponent) {
      initializeLazyComponentType(lazyComponent);

      if (lazyComponent._status !== Resolved) {
        throw lazyComponent._result;
      }

      return lazyComponent._result;
    }

    var valueCursor = createCursor(null);
    var rendererSigil;
    {
      // Use this to detect multiple renderers using the same context
      rendererSigil = {};
    }
    var currentlyRenderingFiber = null;
    var lastContextDependency = null;
    var lastContextWithAllBitsObserved = null;
    var isDisallowedContextReadInDEV = false;

    function resetContextDependencies() {
      // This is called right before React yields execution, to ensure `readContext`
      // cannot be called outside the render phase.
      currentlyRenderingFiber = null;
      lastContextDependency = null;
      lastContextWithAllBitsObserved = null;
      {
        isDisallowedContextReadInDEV = false;
      }
    }

    function enterDisallowedContextReadInDEV() {
      {
        isDisallowedContextReadInDEV = true;
      }
    }

    function exitDisallowedContextReadInDEV() {
      {
        isDisallowedContextReadInDEV = false;
      }
    }

    function pushProvider(providerFiber, nextValue) {
      var context = providerFiber.type._context;

      if (isPrimaryRenderer) {
        push(valueCursor, context._currentValue, providerFiber);
        context._currentValue = nextValue;
        {
          !(context._currentRenderer === undefined || context._currentRenderer === null || context._currentRenderer === rendererSigil) ? warningWithoutStack$1(false, 'Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.') : void 0;
          context._currentRenderer = rendererSigil;
        }
      } else {
        push(valueCursor, context._currentValue2, providerFiber);
        context._currentValue2 = nextValue;
        {
          !(context._currentRenderer2 === undefined || context._currentRenderer2 === null || context._currentRenderer2 === rendererSigil) ? warningWithoutStack$1(false, 'Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.') : void 0;
          context._currentRenderer2 = rendererSigil;
        }
      }
    }

    function popProvider(providerFiber) {
      var currentValue = valueCursor.current;
      pop(valueCursor, providerFiber);
      var context = providerFiber.type._context;

      if (isPrimaryRenderer) {
        context._currentValue = currentValue;
      } else {
        context._currentValue2 = currentValue;
      }
    }

    function calculateChangedBits(context, newValue, oldValue) {
      if (is$1(oldValue, newValue)) {
        // No change
        return 0;
      } else {
        var changedBits = typeof context._calculateChangedBits === 'function' ? context._calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;
        {
          !((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits) ? warning$1(false, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: %s', changedBits) : void 0;
        }
        return changedBits | 0;
      }
    }

    function scheduleWorkOnParentPath(parent, renderExpirationTime) {
      // Update the child expiration time of all the ancestors, including
      // the alternates.
      var node = parent;

      while (node !== null) {
        var alternate = node.alternate;

        if (node.childExpirationTime < renderExpirationTime) {
          node.childExpirationTime = renderExpirationTime;

          if (alternate !== null && alternate.childExpirationTime < renderExpirationTime) {
            alternate.childExpirationTime = renderExpirationTime;
          }
        } else if (alternate !== null && alternate.childExpirationTime < renderExpirationTime) {
          alternate.childExpirationTime = renderExpirationTime;
        } else {
          // Neither alternate was updated, which means the rest of the
          // ancestor path already has sufficient priority.
          break;
        }

        node = node.return;
      }
    }

    function propagateContextChange(workInProgress, context, changedBits, renderExpirationTime) {
      var fiber = workInProgress.child;

      if (fiber !== null) {
        // Set the return pointer of the child to the work-in-progress fiber.
        fiber.return = workInProgress;
      }

      while (fiber !== null) {
        var nextFiber = void 0; // Visit this fiber.

        var list = fiber.dependencies;

        if (list !== null) {
          nextFiber = fiber.child;
          var dependency = list.firstContext;

          while (dependency !== null) {
            // Check if the context matches.
            if (dependency.context === context && (dependency.observedBits & changedBits) !== 0) {
              // Match! Schedule an update on this fiber.
              if (fiber.tag === ClassComponent) {
                // Schedule a force update on the work-in-progress.
                var update = createUpdate(renderExpirationTime, null);
                update.tag = ForceUpdate; // TODO: Because we don't have a work-in-progress, this will add the
                // update to the current fiber, too, which means it will persist even if
                // this render is thrown away. Since it's a race condition, not sure it's
                // worth fixing.

                enqueueUpdate(fiber, update);
              }

              if (fiber.expirationTime < renderExpirationTime) {
                fiber.expirationTime = renderExpirationTime;
              }

              var alternate = fiber.alternate;

              if (alternate !== null && alternate.expirationTime < renderExpirationTime) {
                alternate.expirationTime = renderExpirationTime;
              }

              scheduleWorkOnParentPath(fiber.return, renderExpirationTime); // Mark the expiration time on the list, too.

              if (list.expirationTime < renderExpirationTime) {
                list.expirationTime = renderExpirationTime;
              } // Since we already found a match, we can stop traversing the
              // dependency list.


              break;
            }

            dependency = dependency.next;
          }
        } else if (fiber.tag === ContextProvider) {
          // Don't scan deeper if this is a matching provider
          nextFiber = fiber.type === workInProgress.type ? null : fiber.child;
        } else if (enableSuspenseServerRenderer && fiber.tag === DehydratedFragment) {
          // If a dehydrated suspense bounudary is in this subtree, we don't know
          // if it will have any context consumers in it. The best we can do is
          // mark it as having updates.
          var parentSuspense = fiber.return;

          (function () {
            if (!(parentSuspense !== null)) {
              {
                throw ReactError(Error("We just came from a parent so we must have had a parent. This is a bug in React."));
              }
            }
          })();

          if (parentSuspense.expirationTime < renderExpirationTime) {
            parentSuspense.expirationTime = renderExpirationTime;
          }

          var _alternate = parentSuspense.alternate;

          if (_alternate !== null && _alternate.expirationTime < renderExpirationTime) {
            _alternate.expirationTime = renderExpirationTime;
          } // This is intentionally passing this fiber as the parent
          // because we want to schedule this fiber as having work
          // on its children. We'll use the childExpirationTime on
          // this fiber to indicate that a context has changed.


          scheduleWorkOnParentPath(parentSuspense, renderExpirationTime);
          nextFiber = fiber.sibling;
        } else {
          // Traverse down.
          nextFiber = fiber.child;
        }

        if (nextFiber !== null) {
          // Set the return pointer of the child to the work-in-progress fiber.
          nextFiber.return = fiber;
        } else {
          // No child. Traverse to next sibling.
          nextFiber = fiber;

          while (nextFiber !== null) {
            if (nextFiber === workInProgress) {
              // We're back to the root of this subtree. Exit.
              nextFiber = null;
              break;
            }

            var sibling = nextFiber.sibling;

            if (sibling !== null) {
              // Set the return pointer of the sibling to the work-in-progress fiber.
              sibling.return = nextFiber.return;
              nextFiber = sibling;
              break;
            } // No more siblings. Traverse up.


            nextFiber = nextFiber.return;
          }
        }

        fiber = nextFiber;
      }
    }

    function prepareToReadContext(workInProgress, renderExpirationTime) {
      currentlyRenderingFiber = workInProgress;
      lastContextDependency = null;
      lastContextWithAllBitsObserved = null;
      var dependencies = workInProgress.dependencies;

      if (dependencies !== null) {
        var firstContext = dependencies.firstContext;

        if (firstContext !== null) {
          if (dependencies.expirationTime >= renderExpirationTime) {
            // Context list has a pending update. Mark that this fiber performed work.
            markWorkInProgressReceivedUpdate();
          } // Reset the work-in-progress list


          dependencies.firstContext = null;
        }
      }
    }

    function readContext(context, observedBits) {
      {
        // This warning would fire if you read context inside a Hook like useMemo.
        // Unlike the class check below, it's not enforced in production for perf.
        !!isDisallowedContextReadInDEV ? warning$1(false, 'Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().') : void 0;
      }

      if (lastContextWithAllBitsObserved === context) {// Nothing to do. We already observe everything in this context.
      } else if (observedBits === false || observedBits === 0) {// Do not observe any updates.
      } else {
        var resolvedObservedBits; // Avoid deopting on observable arguments or heterogeneous types.

        if (typeof observedBits !== 'number' || observedBits === MAX_SIGNED_31_BIT_INT) {
          // Observe all updates.
          lastContextWithAllBitsObserved = context;
          resolvedObservedBits = MAX_SIGNED_31_BIT_INT;
        } else {
          resolvedObservedBits = observedBits;
        }

        var contextItem = {
          context: context,
          observedBits: resolvedObservedBits,
          next: null
        };

        if (lastContextDependency === null) {
          (function () {
            if (!(currentlyRenderingFiber !== null)) {
              {
                throw ReactError(Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo()."));
              }
            }
          })(); // This is the first dependency for this component. Create a new list.


          lastContextDependency = contextItem;
          currentlyRenderingFiber.dependencies = {
            expirationTime: NoWork,
            firstContext: contextItem,
            responders: null
          };
        } else {
          // Append a new context item.
          lastContextDependency = lastContextDependency.next = contextItem;
        }
      }

      return isPrimaryRenderer ? context._currentValue : context._currentValue2;
    } // UpdateQueue is a linked list of prioritized updates.
    //
    // Like fibers, update queues come in pairs: a current queue, which represents
    // the visible state of the screen, and a work-in-progress queue, which can be
    // mutated and processed asynchronously before it is committed — a form of
    // double buffering. If a work-in-progress render is discarded before finishing,
    // we create a new work-in-progress by cloning the current queue.
    //
    // Both queues share a persistent, singly-linked list structure. To schedule an
    // update, we append it to the end of both queues. Each queue maintains a
    // pointer to first update in the persistent list that hasn't been processed.
    // The work-in-progress pointer always has a position equal to or greater than
    // the current queue, since we always work on that one. The current queue's
    // pointer is only updated during the commit phase, when we swap in the
    // work-in-progress.
    //
    // For example:
    //
    //   Current pointer:           A - B - C - D - E - F
    //   Work-in-progress pointer:              D - E - F
    //                                          ^
    //                                          The work-in-progress queue has
    //                                          processed more updates than current.
    //
    // The reason we append to both queues is because otherwise we might drop
    // updates without ever processing them. For example, if we only add updates to
    // the work-in-progress queue, some updates could be lost whenever a work-in
    // -progress render restarts by cloning from current. Similarly, if we only add
    // updates to the current queue, the updates will be lost whenever an already
    // in-progress queue commits and swaps with the current queue. However, by
    // adding to both queues, we guarantee that the update will be part of the next
    // work-in-progress. (And because the work-in-progress queue becomes the
    // current queue once it commits, there's no danger of applying the same
    // update twice.)
    //
    // Prioritization
    // --------------
    //
    // Updates are not sorted by priority, but by insertion; new updates are always
    // appended to the end of the list.
    //
    // The priority is still important, though. When processing the update queue
    // during the render phase, only the updates with sufficient priority are
    // included in the result. If we skip an update because it has insufficient
    // priority, it remains in the queue to be processed later, during a lower
    // priority render. Crucially, all updates subsequent to a skipped update also
    // remain in the queue *regardless of their priority*. That means high priority
    // updates are sometimes processed twice, at two separate priorities. We also
    // keep track of a base state, that represents the state before the first
    // update in the queue is applied.
    //
    // For example:
    //
    //   Given a base state of '', and the following queue of updates
    //
    //     A1 - B2 - C1 - D2
    //
    //   where the number indicates the priority, and the update is applied to the
    //   previous state by appending a letter, React will process these updates as
    //   two separate renders, one per distinct priority level:
    //
    //   First render, at priority 1:
    //     Base state: ''
    //     Updates: [A1, C1]
    //     Result state: 'AC'
    //
    //   Second render, at priority 2:
    //     Base state: 'A'            <-  The base state does not include C1,
    //                                    because B2 was skipped.
    //     Updates: [B2, C1, D2]      <-  C1 was rebased on top of B2
    //     Result state: 'ABCD'
    //
    // Because we process updates in insertion order, and rebase high priority
    // updates when preceding updates are skipped, the final result is deterministic
    // regardless of priority. Intermediate state may vary according to system
    // resources, but the final state is always the same.


    var UpdateState = 0;
    var ReplaceState = 1;
    var ForceUpdate = 2;
    var CaptureUpdate = 3; // Global state that is reset at the beginning of calling `processUpdateQueue`.
    // It should only be read right after calling `processUpdateQueue`, via
    // `checkHasForceUpdateAfterProcessing`.

    var hasForceUpdate = false;
    var didWarnUpdateInsideUpdate;
    var currentlyProcessingQueue;
    {
      didWarnUpdateInsideUpdate = false;
      currentlyProcessingQueue = null;
    }

    function createUpdateQueue(baseState) {
      var queue = {
        baseState: baseState,
        firstUpdate: null,
        lastUpdate: null,
        firstCapturedUpdate: null,
        lastCapturedUpdate: null,
        firstEffect: null,
        lastEffect: null,
        firstCapturedEffect: null,
        lastCapturedEffect: null
      };
      return queue;
    }

    function cloneUpdateQueue(currentQueue) {
      var queue = {
        baseState: currentQueue.baseState,
        firstUpdate: currentQueue.firstUpdate,
        lastUpdate: currentQueue.lastUpdate,
        // TODO: With resuming, if we bail out and resuse the child tree, we should
        // keep these effects.
        firstCapturedUpdate: null,
        lastCapturedUpdate: null,
        firstEffect: null,
        lastEffect: null,
        firstCapturedEffect: null,
        lastCapturedEffect: null
      };
      return queue;
    }

    function createUpdate(expirationTime, suspenseConfig) {
      var update = {
        expirationTime: expirationTime,
        suspenseConfig: suspenseConfig,
        tag: UpdateState,
        payload: null,
        callback: null,
        next: null,
        nextEffect: null
      };
      {
        update.priority = getCurrentPriorityLevel();
      }
      return update;
    }

    function appendUpdateToQueue(queue, update) {
      // Append the update to the end of the list.
      if (queue.lastUpdate === null) {
        // Queue is empty
        queue.firstUpdate = queue.lastUpdate = update;
      } else {
        queue.lastUpdate.next = update;
        queue.lastUpdate = update;
      }
    }

    function enqueueUpdate(fiber, update) {
      // Update queues are created lazily.
      var alternate = fiber.alternate;
      var queue1;
      var queue2;

      if (alternate === null) {
        // There's only one fiber.
        queue1 = fiber.updateQueue;
        queue2 = null;

        if (queue1 === null) {
          queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);
        }
      } else {
        // There are two owners.
        queue1 = fiber.updateQueue;
        queue2 = alternate.updateQueue;

        if (queue1 === null) {
          if (queue2 === null) {
            // Neither fiber has an update queue. Create new ones.
            queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);
            queue2 = alternate.updateQueue = createUpdateQueue(alternate.memoizedState);
          } else {
            // Only one fiber has an update queue. Clone to create a new one.
            queue1 = fiber.updateQueue = cloneUpdateQueue(queue2);
          }
        } else {
          if (queue2 === null) {
            // Only one fiber has an update queue. Clone to create a new one.
            queue2 = alternate.updateQueue = cloneUpdateQueue(queue1);
          } else {// Both owners have an update queue.
          }
        }
      }

      if (queue2 === null || queue1 === queue2) {
        // There's only a single queue.
        appendUpdateToQueue(queue1, update);
      } else {
        // There are two queues. We need to append the update to both queues,
        // while accounting for the persistent structure of the list — we don't
        // want the same update to be added multiple times.
        if (queue1.lastUpdate === null || queue2.lastUpdate === null) {
          // One of the queues is not empty. We must add the update to both queues.
          appendUpdateToQueue(queue1, update);
          appendUpdateToQueue(queue2, update);
        } else {
          // Both queues are non-empty. The last update is the same in both lists,
          // because of structural sharing. So, only append to one of the lists.
          appendUpdateToQueue(queue1, update); // But we still need to update the `lastUpdate` pointer of queue2.

          queue2.lastUpdate = update;
        }
      }

      {
        if (fiber.tag === ClassComponent && (currentlyProcessingQueue === queue1 || queue2 !== null && currentlyProcessingQueue === queue2) && !didWarnUpdateInsideUpdate) {
          warningWithoutStack$1(false, 'An update (setState, replaceState, or forceUpdate) was scheduled ' + 'from inside an update function. Update functions should be pure, ' + 'with zero side-effects. Consider using componentDidUpdate or a ' + 'callback.');
          didWarnUpdateInsideUpdate = true;
        }
      }
    }

    function enqueueCapturedUpdate(workInProgress, update) {
      // Captured updates go into a separate list, and only on the work-in-
      // progress queue.
      var workInProgressQueue = workInProgress.updateQueue;

      if (workInProgressQueue === null) {
        workInProgressQueue = workInProgress.updateQueue = createUpdateQueue(workInProgress.memoizedState);
      } else {
        // TODO: I put this here rather than createWorkInProgress so that we don't
        // clone the queue unnecessarily. There's probably a better way to
        // structure this.
        workInProgressQueue = ensureWorkInProgressQueueIsAClone(workInProgress, workInProgressQueue);
      } // Append the update to the end of the list.


      if (workInProgressQueue.lastCapturedUpdate === null) {
        // This is the first render phase update
        workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update;
      } else {
        workInProgressQueue.lastCapturedUpdate.next = update;
        workInProgressQueue.lastCapturedUpdate = update;
      }
    }

    function ensureWorkInProgressQueueIsAClone(workInProgress, queue) {
      var current = workInProgress.alternate;

      if (current !== null) {
        // If the work-in-progress queue is equal to the current queue,
        // we need to clone it first.
        if (queue === current.updateQueue) {
          queue = workInProgress.updateQueue = cloneUpdateQueue(queue);
        }
      }

      return queue;
    }

    function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
      switch (update.tag) {
        case ReplaceState:
          {
            var payload = update.payload;

            if (typeof payload === 'function') {
              // Updater function
              {
                enterDisallowedContextReadInDEV();

                if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
                  payload.call(instance, prevState, nextProps);
                }
              }
              var nextState = payload.call(instance, prevState, nextProps);
              {
                exitDisallowedContextReadInDEV();
              }
              return nextState;
            } // State object


            return payload;
          }

        case CaptureUpdate:
          {
            workInProgress.effectTag = workInProgress.effectTag & ~ShouldCapture | DidCapture;
          }
        // Intentional fallthrough

        case UpdateState:
          {
            var _payload = update.payload;
            var partialState;

            if (typeof _payload === 'function') {
              // Updater function
              {
                enterDisallowedContextReadInDEV();

                if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
                  _payload.call(instance, prevState, nextProps);
                }
              }
              partialState = _payload.call(instance, prevState, nextProps);
              {
                exitDisallowedContextReadInDEV();
              }
            } else {
              // Partial state object
              partialState = _payload;
            }

            if (partialState === null || partialState === undefined) {
              // Null and undefined are treated as no-ops.
              return prevState;
            } // Merge the partial state and the previous state.


            return _assign({}, prevState, partialState);
          }

        case ForceUpdate:
          {
            hasForceUpdate = true;
            return prevState;
          }
      }

      return prevState;
    }

    function processUpdateQueue(workInProgress, queue, props, instance, renderExpirationTime) {
      hasForceUpdate = false;
      queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);
      {
        currentlyProcessingQueue = queue;
      } // These values may change as we process the queue.

      var newBaseState = queue.baseState;
      var newFirstUpdate = null;
      var newExpirationTime = NoWork; // Iterate through the list of updates to compute the result.

      var update = queue.firstUpdate;
      var resultState = newBaseState;

      while (update !== null) {
        var updateExpirationTime = update.expirationTime;

        if (updateExpirationTime < renderExpirationTime) {
          // This update does not have sufficient priority. Skip it.
          if (newFirstUpdate === null) {
            // This is the first skipped update. It will be the first update in
            // the new list.
            newFirstUpdate = update; // Since this is the first update that was skipped, the current result
            // is the new base state.

            newBaseState = resultState;
          } // Since this update will remain in the list, update the remaining
          // expiration time.


          if (newExpirationTime < updateExpirationTime) {
            newExpirationTime = updateExpirationTime;
          }
        } else {
          // This update does have sufficient priority.
          // Mark the event time of this update as relevant to this render pass.
          // TODO: This should ideally use the true event time of this update rather than
          // its priority which is a derived and not reverseable value.
          // TODO: We should skip this update if it was already committed but currently
          // we have no way of detecting the difference between a committed and suspended
          // update here.
          markRenderEventTimeAndConfig(updateExpirationTime, update.suspenseConfig); // Process it and compute a new result.

          resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance);
          var callback = update.callback;

          if (callback !== null) {
            workInProgress.effectTag |= Callback; // Set this to null, in case it was mutated during an aborted render.

            update.nextEffect = null;

            if (queue.lastEffect === null) {
              queue.firstEffect = queue.lastEffect = update;
            } else {
              queue.lastEffect.nextEffect = update;
              queue.lastEffect = update;
            }
          }
        } // Continue to the next update.


        update = update.next;
      } // Separately, iterate though the list of captured updates.


      var newFirstCapturedUpdate = null;
      update = queue.firstCapturedUpdate;

      while (update !== null) {
        var _updateExpirationTime = update.expirationTime;

        if (_updateExpirationTime < renderExpirationTime) {
          // This update does not have sufficient priority. Skip it.
          if (newFirstCapturedUpdate === null) {
            // This is the first skipped captured update. It will be the first
            // update in the new list.
            newFirstCapturedUpdate = update; // If this is the first update that was skipped, the current result is
            // the new base state.

            if (newFirstUpdate === null) {
              newBaseState = resultState;
            }
          } // Since this update will remain in the list, update the remaining
          // expiration time.


          if (newExpirationTime < _updateExpirationTime) {
            newExpirationTime = _updateExpirationTime;
          }
        } else {
          // This update does have sufficient priority. Process it and compute
          // a new result.
          resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance);
          var _callback = update.callback;

          if (_callback !== null) {
            workInProgress.effectTag |= Callback; // Set this to null, in case it was mutated during an aborted render.

            update.nextEffect = null;

            if (queue.lastCapturedEffect === null) {
              queue.firstCapturedEffect = queue.lastCapturedEffect = update;
            } else {
              queue.lastCapturedEffect.nextEffect = update;
              queue.lastCapturedEffect = update;
            }
          }
        }

        update = update.next;
      }

      if (newFirstUpdate === null) {
        queue.lastUpdate = null;
      }

      if (newFirstCapturedUpdate === null) {
        queue.lastCapturedUpdate = null;
      } else {
        workInProgress.effectTag |= Callback;
      }

      if (newFirstUpdate === null && newFirstCapturedUpdate === null) {
        // We processed every update, without skipping. That means the new base
        // state is the same as the result state.
        newBaseState = resultState;
      }

      queue.baseState = newBaseState;
      queue.firstUpdate = newFirstUpdate;
      queue.firstCapturedUpdate = newFirstCapturedUpdate; // Set the remaining expiration time to be whatever is remaining in the queue.
      // This should be fine because the only two other things that contribute to
      // expiration time are props and context. We're already in the middle of the
      // begin phase by the time we start processing the queue, so we've already
      // dealt with the props. Context in components that specify
      // shouldComponentUpdate is tricky; but we'll have to account for
      // that regardless.

      markUnprocessedUpdateTime(newExpirationTime);
      workInProgress.expirationTime = newExpirationTime;
      workInProgress.memoizedState = resultState;
      {
        currentlyProcessingQueue = null;
      }
    }

    function callCallback(callback, context) {
      (function () {
        if (!(typeof callback === 'function')) {
          {
            throw ReactError(Error("Invalid argument passed as callback. Expected a function. Instead received: " + callback));
          }
        }
      })();

      callback.call(context);
    }

    function resetHasForceUpdateBeforeProcessing() {
      hasForceUpdate = false;
    }

    function checkHasForceUpdateAfterProcessing() {
      return hasForceUpdate;
    }

    function commitUpdateQueue(finishedWork, finishedQueue, instance, renderExpirationTime) {
      // If the finished render included captured updates, and there are still
      // lower priority updates left over, we need to keep the captured updates
      // in the queue so that they are rebased and not dropped once we process the
      // queue again at the lower priority.
      if (finishedQueue.firstCapturedUpdate !== null) {
        // Join the captured update list to the end of the normal list.
        if (finishedQueue.lastUpdate !== null) {
          finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate;
          finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate;
        } // Clear the list of captured updates.


        finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null;
      } // Commit the effects


      commitUpdateEffects(finishedQueue.firstEffect, instance);
      finishedQueue.firstEffect = finishedQueue.lastEffect = null;
      commitUpdateEffects(finishedQueue.firstCapturedEffect, instance);
      finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;
    }

    function commitUpdateEffects(effect, instance) {
      while (effect !== null) {
        var callback = effect.callback;

        if (callback !== null) {
          effect.callback = null;
          callCallback(callback, instance);
        }

        effect = effect.nextEffect;
      }
    }

    var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig;

    function requestCurrentSuspenseConfig() {
      return ReactCurrentBatchConfig.suspense;
    }

    var fakeInternalInstance = {};
    var isArray$1 = Array.isArray; // React.Component uses a shared frozen object by default.
    // We'll use it to determine whether we need to initialize legacy refs.

    var emptyRefsObject = new React.Component().refs;
    var didWarnAboutStateAssignmentForComponent;
    var didWarnAboutUninitializedState;
    var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;
    var didWarnAboutLegacyLifecyclesAndDerivedState;
    var didWarnAboutUndefinedDerivedState;
    var warnOnUndefinedDerivedState;
    var warnOnInvalidCallback$1;
    var didWarnAboutDirectlyAssigningPropsToState;
    var didWarnAboutContextTypeAndContextTypes;
    var didWarnAboutInvalidateContextType;
    {
      didWarnAboutStateAssignmentForComponent = new Set();
      didWarnAboutUninitializedState = new Set();
      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
      didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
      didWarnAboutDirectlyAssigningPropsToState = new Set();
      didWarnAboutUndefinedDerivedState = new Set();
      didWarnAboutContextTypeAndContextTypes = new Set();
      didWarnAboutInvalidateContextType = new Set();
      var didWarnOnInvalidCallback = new Set();

      warnOnInvalidCallback$1 = function (callback, callerName) {
        if (callback === null || typeof callback === 'function') {
          return;
        }

        var key = callerName + "_" + callback;

        if (!didWarnOnInvalidCallback.has(key)) {
          didWarnOnInvalidCallback.add(key);
          warningWithoutStack$1(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);
        }
      };

      warnOnUndefinedDerivedState = function (type, partialState) {
        if (partialState === undefined) {
          var componentName = getComponentName(type) || 'Component';

          if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
            didWarnAboutUndefinedDerivedState.add(componentName);
            warningWithoutStack$1(false, '%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' + 'You have returned undefined.', componentName);
          }
        }
      }; // This is so gross but it's at least non-critical and can be removed if
      // it causes problems. This is meant to give a nicer error message for
      // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
      // ...)) which otherwise throws a "_processChildContext is not a function"
      // exception.


      Object.defineProperty(fakeInternalInstance, '_processChildContext', {
        enumerable: false,
        value: function () {
          (function () {
            {
              {
                throw ReactError(Error("_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal)."));
              }
            }
          })();
        }
      });
      Object.freeze(fakeInternalInstance);
    }

    function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
      var prevState = workInProgress.memoizedState;
      {
        if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
          // Invoke the function an extra time to help detect side-effects.
          getDerivedStateFromProps(nextProps, prevState);
        }
      }
      var partialState = getDerivedStateFromProps(nextProps, prevState);
      {
        warnOnUndefinedDerivedState(ctor, partialState);
      } // Merge the partial state and the previous state.

      var memoizedState = partialState === null || partialState === undefined ? prevState : _assign({}, prevState, partialState);
      workInProgress.memoizedState = memoizedState; // Once the update queue is empty, persist the derived state onto the
      // base state.

      var updateQueue = workInProgress.updateQueue;

      if (updateQueue !== null && workInProgress.expirationTime === NoWork) {
        updateQueue.baseState = memoizedState;
      }
    }

    var classComponentUpdater = {
      isMounted: isMounted,
      enqueueSetState: function (inst, payload, callback) {
        var fiber = get(inst);
        var currentTime = requestCurrentTime();
        var suspenseConfig = requestCurrentSuspenseConfig();
        var expirationTime = computeExpirationForFiber(currentTime, fiber, suspenseConfig);
        var update = createUpdate(expirationTime, suspenseConfig);
        update.payload = payload;

        if (callback !== undefined && callback !== null) {
          {
            warnOnInvalidCallback$1(callback, 'setState');
          }
          update.callback = callback;
        }

        enqueueUpdate(fiber, update);
        scheduleWork(fiber, expirationTime);
      },
      enqueueReplaceState: function (inst, payload, callback) {
        var fiber = get(inst);
        var currentTime = requestCurrentTime();
        var suspenseConfig = requestCurrentSuspenseConfig();
        var expirationTime = computeExpirationForFiber(currentTime, fiber, suspenseConfig);
        var update = createUpdate(expirationTime, suspenseConfig);
        update.tag = ReplaceState;
        update.payload = payload;

        if (callback !== undefined && callback !== null) {
          {
            warnOnInvalidCallback$1(callback, 'replaceState');
          }
          update.callback = callback;
        }

        enqueueUpdate(fiber, update);
        scheduleWork(fiber, expirationTime);
      },
      enqueueForceUpdate: function (inst, callback) {
        var fiber = get(inst);
        var currentTime = requestCurrentTime();
        var suspenseConfig = requestCurrentSuspenseConfig();
        var expirationTime = computeExpirationForFiber(currentTime, fiber, suspenseConfig);
        var update = createUpdate(expirationTime, suspenseConfig);
        update.tag = ForceUpdate;

        if (callback !== undefined && callback !== null) {
          {
            warnOnInvalidCallback$1(callback, 'forceUpdate');
          }
          update.callback = callback;
        }

        enqueueUpdate(fiber, update);
        scheduleWork(fiber, expirationTime);
      }
    };

    function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
      var instance = workInProgress.stateNode;

      if (typeof instance.shouldComponentUpdate === 'function') {
        startPhaseTimer(workInProgress, 'shouldComponentUpdate');
        var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
        stopPhaseTimer();
        {
          !(shouldUpdate !== undefined) ? warningWithoutStack$1(false, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', getComponentName(ctor) || 'Component') : void 0;
        }
        return shouldUpdate;
      }

      if (ctor.prototype && ctor.prototype.isPureReactComponent) {
        return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
      }

      return true;
    }

    function checkClassInstance(workInProgress, ctor, newProps) {
      var instance = workInProgress.stateNode;
      {
        var name = getComponentName(ctor) || 'Component';
        var renderPresent = instance.render;

        if (!renderPresent) {
          if (ctor.prototype && typeof ctor.prototype.render === 'function') {
            warningWithoutStack$1(false, '%s(...): No `render` method found on the returned component ' + 'instance: did you accidentally return an object from the constructor?', name);
          } else {
            warningWithoutStack$1(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', name);
          }
        }

        var noGetInitialStateOnES6 = !instance.getInitialState || instance.getInitialState.isReactClassApproved || instance.state;
        !noGetInitialStateOnES6 ? warningWithoutStack$1(false, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', name) : void 0;
        var noGetDefaultPropsOnES6 = !instance.getDefaultProps || instance.getDefaultProps.isReactClassApproved;
        !noGetDefaultPropsOnES6 ? warningWithoutStack$1(false, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', name) : void 0;
        var noInstancePropTypes = !instance.propTypes;
        !noInstancePropTypes ? warningWithoutStack$1(false, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', name) : void 0;
        var noInstanceContextType = !instance.contextType;
        !noInstanceContextType ? warningWithoutStack$1(false, 'contextType was defined as an instance property on %s. Use a static ' + 'property to define contextType instead.', name) : void 0;

        if (disableLegacyContext) {
          if (ctor.childContextTypes) {
            warningWithoutStack$1(false, '%s uses the legacy childContextTypes API which is no longer supported. ' + 'Use React.createContext() instead.', name);
          }

          if (ctor.contextTypes) {
            warningWithoutStack$1(false, '%s uses the legacy contextTypes API which is no longer supported. ' + 'Use React.createContext() with static contextType instead.', name);
          }
        } else {
          var noInstanceContextTypes = !instance.contextTypes;
          !noInstanceContextTypes ? warningWithoutStack$1(false, 'contextTypes was defined as an instance property on %s. Use a static ' + 'property to define contextTypes instead.', name) : void 0;

          if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
            didWarnAboutContextTypeAndContextTypes.add(ctor);
            warningWithoutStack$1(false, '%s declares both contextTypes and contextType static properties. ' + 'The legacy contextTypes property will be ignored.', name);
          }
        }

        var noComponentShouldUpdate = typeof instance.componentShouldUpdate !== 'function';
        !noComponentShouldUpdate ? warningWithoutStack$1(false, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', name) : void 0;

        if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') {
          warningWithoutStack$1(false, '%s has a method called shouldComponentUpdate(). ' + 'shouldComponentUpdate should not be used when extending React.PureComponent. ' + 'Please extend React.Component if shouldComponentUpdate is used.', getComponentName(ctor) || 'A pure component');
        }

        var noComponentDidUnmount = typeof instance.componentDidUnmount !== 'function';
        !noComponentDidUnmount ? warningWithoutStack$1(false, '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', name) : void 0;
        var noComponentDidReceiveProps = typeof instance.componentDidReceiveProps !== 'function';
        !noComponentDidReceiveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'componentDidReceiveProps(). But there is no such lifecycle method. ' + 'If you meant to update the state in response to changing props, ' + 'use componentWillReceiveProps(). If you meant to fetch data or ' + 'run side-effects or mutations after React has updated the UI, use componentDidUpdate().', name) : void 0;
        var noComponentWillRecieveProps = typeof instance.componentWillRecieveProps !== 'function';
        !noComponentWillRecieveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', name) : void 0;
        var noUnsafeComponentWillRecieveProps = typeof instance.UNSAFE_componentWillRecieveProps !== 'function';
        !noUnsafeComponentWillRecieveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?', name) : void 0;
        var hasMutatedProps = instance.props !== newProps;
        !(instance.props === undefined || !hasMutatedProps) ? warningWithoutStack$1(false, '%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", name, name) : void 0;
        var noInstanceDefaultProps = !instance.defaultProps;
        !noInstanceDefaultProps ? warningWithoutStack$1(false, 'Setting defaultProps as an instance property on %s is not supported and will be ignored.' + ' Instead, define defaultProps as a static property on %s.', name, name) : void 0;

        if (typeof instance.getSnapshotBeforeUpdate === 'function' && typeof instance.componentDidUpdate !== 'function' && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
          didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
          warningWithoutStack$1(false, '%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' + 'This component defines getSnapshotBeforeUpdate() only.', getComponentName(ctor));
        }

        var noInstanceGetDerivedStateFromProps = typeof instance.getDerivedStateFromProps !== 'function';
        !noInstanceGetDerivedStateFromProps ? warningWithoutStack$1(false, '%s: getDerivedStateFromProps() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name) : void 0;
        var noInstanceGetDerivedStateFromCatch = typeof instance.getDerivedStateFromError !== 'function';
        !noInstanceGetDerivedStateFromCatch ? warningWithoutStack$1(false, '%s: getDerivedStateFromError() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name) : void 0;
        var noStaticGetSnapshotBeforeUpdate = typeof ctor.getSnapshotBeforeUpdate !== 'function';
        !noStaticGetSnapshotBeforeUpdate ? warningWithoutStack$1(false, '%s: getSnapshotBeforeUpdate() is defined as a static method ' + 'and will be ignored. Instead, declare it as an instance method.', name) : void 0;
        var _state = instance.state;

        if (_state && (typeof _state !== 'object' || isArray$1(_state))) {
          warningWithoutStack$1(false, '%s.state: must be set to an object or null', name);
        }

        if (typeof instance.getChildContext === 'function') {
          !(typeof ctor.childContextTypes === 'object') ? warningWithoutStack$1(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', name) : void 0;
        }
      }
    }

    function adoptClassInstance(workInProgress, instance) {
      instance.updater = classComponentUpdater;
      workInProgress.stateNode = instance; // The instance needs access to the fiber so that it can schedule updates

      set(instance, workInProgress);
      {
        instance._reactInternalInstance = fakeInternalInstance;
      }
    }

    function constructClassInstance(workInProgress, ctor, props, renderExpirationTime) {
      var isLegacyContextConsumer = false;
      var unmaskedContext = emptyContextObject;
      var context = emptyContextObject;
      var contextType = ctor.contextType;
      {
        if ('contextType' in ctor) {
          var isValid = // Allow null for conditional declaration
          contextType === null || contextType !== undefined && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === undefined; // Not a <Context.Consumer>

          if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
            didWarnAboutInvalidateContextType.add(ctor);
            var addendum = '';

            if (contextType === undefined) {
              addendum = ' However, it is set to undefined. ' + 'This can be caused by a typo or by mixing up named and default imports. ' + 'This can also happen due to a circular dependency, so ' + 'try moving the createContext() call to a separate file.';
            } else if (typeof contextType !== 'object') {
              addendum = ' However, it is set to a ' + typeof contextType + '.';
            } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {
              addendum = ' Did you accidentally pass the Context.Provider instead?';
            } else if (contextType._context !== undefined) {
              // <Context.Consumer>
              addendum = ' Did you accidentally pass the Context.Consumer instead?';
            } else {
              addendum = ' However, it is set to an object with keys {' + Object.keys(contextType).join(', ') + '}.';
            }

            warningWithoutStack$1(false, '%s defines an invalid contextType. ' + 'contextType should point to the Context object returned by React.createContext().%s', getComponentName(ctor) || 'Component', addendum);
          }
        }
      }

      if (typeof contextType === 'object' && contextType !== null) {
        context = readContext(contextType);
      } else if (!disableLegacyContext) {
        unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
        var contextTypes = ctor.contextTypes;
        isLegacyContextConsumer = contextTypes !== null && contextTypes !== undefined;
        context = isLegacyContextConsumer ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject;
      } // Instantiate twice to help detect side-effects.


      {
        if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
          new ctor(props, context); // eslint-disable-line no-new
        }
      }
      var instance = new ctor(props, context);
      var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;
      adoptClassInstance(workInProgress, instance);
      {
        if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {
          var componentName = getComponentName(ctor) || 'Component';

          if (!didWarnAboutUninitializedState.has(componentName)) {
            didWarnAboutUninitializedState.add(componentName);
            warningWithoutStack$1(false, '`%s` uses `getDerivedStateFromProps` but its initial state is ' + '%s. This is not recommended. Instead, define the initial state by ' + 'assigning an object to `this.state` in the constructor of `%s`. ' + 'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.', componentName, instance.state === null ? 'null' : 'undefined', componentName);
          }
        } // If new component APIs are defined, "unsafe" lifecycles won't be called.
        // Warn about these lifecycles if they are present.
        // Don't warn about react-lifecycles-compat polyfilled methods though.


        if (typeof ctor.getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function') {
          var foundWillMountName = null;
          var foundWillReceivePropsName = null;
          var foundWillUpdateName = null;

          if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {
            foundWillMountName = 'componentWillMount';
          } else if (typeof instance.UNSAFE_componentWillMount === 'function') {
            foundWillMountName = 'UNSAFE_componentWillMount';
          }

          if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
            foundWillReceivePropsName = 'componentWillReceiveProps';
          } else if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
            foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
          }

          if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
            foundWillUpdateName = 'componentWillUpdate';
          } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
            foundWillUpdateName = 'UNSAFE_componentWillUpdate';
          }

          if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
            var _componentName = getComponentName(ctor) || 'Component';

            var newApiName = typeof ctor.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';

            if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
              didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
              warningWithoutStack$1(false, 'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' + '%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\n' + 'The above lifecycles should be removed. Learn more about this warning here:\n' + 'https://fb.me/react-unsafe-component-lifecycles', _componentName, newApiName, foundWillMountName !== null ? "\n  " + foundWillMountName : '', foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : '', foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : '');
            }
          }
        }
      } // Cache unmasked context so we can avoid recreating masked context unless necessary.
      // ReactFiberContext usually updates this cache but can't for newly-created instances.

      if (isLegacyContextConsumer) {
        cacheContext(workInProgress, unmaskedContext, context);
      }

      return instance;
    }

    function callComponentWillMount(workInProgress, instance) {
      startPhaseTimer(workInProgress, 'componentWillMount');
      var oldState = instance.state;

      if (typeof instance.componentWillMount === 'function') {
        instance.componentWillMount();
      }

      if (typeof instance.UNSAFE_componentWillMount === 'function') {
        instance.UNSAFE_componentWillMount();
      }

      stopPhaseTimer();

      if (oldState !== instance.state) {
        {
          warningWithoutStack$1(false, '%s.componentWillMount(): Assigning directly to this.state is ' + "deprecated (except inside a component's " + 'constructor). Use setState instead.', getComponentName(workInProgress.type) || 'Component');
        }
        classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
      }
    }

    function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
      var oldState = instance.state;
      startPhaseTimer(workInProgress, 'componentWillReceiveProps');

      if (typeof instance.componentWillReceiveProps === 'function') {
        instance.componentWillReceiveProps(newProps, nextContext);
      }

      if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
        instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
      }

      stopPhaseTimer();

      if (instance.state !== oldState) {
        {
          var componentName = getComponentName(workInProgress.type) || 'Component';

          if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
            didWarnAboutStateAssignmentForComponent.add(componentName);
            warningWithoutStack$1(false, '%s.componentWillReceiveProps(): Assigning directly to ' + "this.state is deprecated (except inside a component's " + 'constructor). Use setState instead.', componentName);
          }
        }
        classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
      }
    } // Invokes the mount life-cycles on a previously never rendered instance.


    function mountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {
      {
        checkClassInstance(workInProgress, ctor, newProps);
      }
      var instance = workInProgress.stateNode;
      instance.props = newProps;
      instance.state = workInProgress.memoizedState;
      instance.refs = emptyRefsObject;
      var contextType = ctor.contextType;

      if (typeof contextType === 'object' && contextType !== null) {
        instance.context = readContext(contextType);
      } else if (disableLegacyContext) {
        instance.context = emptyContextObject;
      } else {
        var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
        instance.context = getMaskedContext(workInProgress, unmaskedContext);
      }

      {
        if (instance.state === newProps) {
          var componentName = getComponentName(ctor) || 'Component';

          if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
            didWarnAboutDirectlyAssigningPropsToState.add(componentName);
            warningWithoutStack$1(false, '%s: It is not recommended to assign props directly to state ' + "because updates to props won't be reflected in state. " + 'In most cases, it is better to use props directly.', componentName);
          }
        }

        if (workInProgress.mode & StrictMode) {
          ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);
        }

        if (warnAboutDeprecatedLifecycles) {
          ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);
        }
      }
      var updateQueue = workInProgress.updateQueue;

      if (updateQueue !== null) {
        processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
        instance.state = workInProgress.memoizedState;
      }

      var getDerivedStateFromProps = ctor.getDerivedStateFromProps;

      if (typeof getDerivedStateFromProps === 'function') {
        applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
        instance.state = workInProgress.memoizedState;
      } // In order to support react-lifecycles-compat polyfilled components,
      // Unsafe lifecycles should not be invoked for components using the new APIs.


      if (typeof ctor.getDerivedStateFromProps !== 'function' && typeof instance.getSnapshotBeforeUpdate !== 'function' && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
        callComponentWillMount(workInProgress, instance); // If we had additional state updates during this life-cycle, let's
        // process them now.

        updateQueue = workInProgress.updateQueue;

        if (updateQueue !== null) {
          processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
          instance.state = workInProgress.memoizedState;
        }
      }

      if (typeof instance.componentDidMount === 'function') {
        workInProgress.effectTag |= Update;
      }
    }

    function resumeMountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {
      var instance = workInProgress.stateNode;
      var oldProps = workInProgress.memoizedProps;
      instance.props = oldProps;
      var oldContext = instance.context;
      var contextType = ctor.contextType;
      var nextContext = emptyContextObject;

      if (typeof contextType === 'object' && contextType !== null) {
        nextContext = readContext(contextType);
      } else if (!disableLegacyContext) {
        var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
        nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);
      }

      var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
      var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what
      // ever the previously attempted to render - not the "current". However,
      // during componentDidUpdate we pass the "current" props.
      // In order to support react-lifecycles-compat polyfilled components,
      // Unsafe lifecycles should not be invoked for components using the new APIs.

      if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
        if (oldProps !== newProps || oldContext !== nextContext) {
          callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
        }
      }

      resetHasForceUpdateBeforeProcessing();
      var oldState = workInProgress.memoizedState;
      var newState = instance.state = oldState;
      var updateQueue = workInProgress.updateQueue;

      if (updateQueue !== null) {
        processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
        newState = workInProgress.memoizedState;
      }

      if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
        // If an update was already in progress, we should schedule an Update
        // effect even though we're bailing out, so that cWU/cDU are called.
        if (typeof instance.componentDidMount === 'function') {
          workInProgress.effectTag |= Update;
        }

        return false;
      }

      if (typeof getDerivedStateFromProps === 'function') {
        applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
        newState = workInProgress.memoizedState;
      }

      var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);

      if (shouldUpdate) {
        // In order to support react-lifecycles-compat polyfilled components,
        // Unsafe lifecycles should not be invoked for components using the new APIs.
        if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
          startPhaseTimer(workInProgress, 'componentWillMount');

          if (typeof instance.componentWillMount === 'function') {
            instance.componentWillMount();
          }

          if (typeof instance.UNSAFE_componentWillMount === 'function') {
            instance.UNSAFE_componentWillMount();
          }

          stopPhaseTimer();
        }

        if (typeof instance.componentDidMount === 'function') {
          workInProgress.effectTag |= Update;
        }
      } else {
        // If an update was already in progress, we should schedule an Update
        // effect even though we're bailing out, so that cWU/cDU are called.
        if (typeof instance.componentDidMount === 'function') {
          workInProgress.effectTag |= Update;
        } // If shouldComponentUpdate returned false, we should still update the
        // memoized state to indicate that this work can be reused.


        workInProgress.memoizedProps = newProps;
        workInProgress.memoizedState = newState;
      } // Update the existing instance's state, props, and context pointers even
      // if shouldComponentUpdate returns false.


      instance.props = newProps;
      instance.state = newState;
      instance.context = nextContext;
      return shouldUpdate;
    } // Invokes the update life-cycles and returns false if it shouldn't rerender.


    function updateClassInstance(current, workInProgress, ctor, newProps, renderExpirationTime) {
      var instance = workInProgress.stateNode;
      var oldProps = workInProgress.memoizedProps;
      instance.props = workInProgress.type === workInProgress.elementType ? oldProps : resolveDefaultProps(workInProgress.type, oldProps);
      var oldContext = instance.context;
      var contextType = ctor.contextType;
      var nextContext = emptyContextObject;

      if (typeof contextType === 'object' && contextType !== null) {
        nextContext = readContext(contextType);
      } else if (!disableLegacyContext) {
        var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
        nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);
      }

      var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
      var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what
      // ever the previously attempted to render - not the "current". However,
      // during componentDidUpdate we pass the "current" props.
      // In order to support react-lifecycles-compat polyfilled components,
      // Unsafe lifecycles should not be invoked for components using the new APIs.

      if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
        if (oldProps !== newProps || oldContext !== nextContext) {
          callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
        }
      }

      resetHasForceUpdateBeforeProcessing();
      var oldState = workInProgress.memoizedState;
      var newState = instance.state = oldState;
      var updateQueue = workInProgress.updateQueue;

      if (updateQueue !== null) {
        processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
        newState = workInProgress.memoizedState;
      }

      if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
        // If an update was already in progress, we should schedule an Update
        // effect even though we're bailing out, so that cWU/cDU are called.
        if (typeof instance.componentDidUpdate === 'function') {
          if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
            workInProgress.effectTag |= Update;
          }
        }

        if (typeof instance.getSnapshotBeforeUpdate === 'function') {
          if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
            workInProgress.effectTag |= Snapshot;
          }
        }

        return false;
      }

      if (typeof getDerivedStateFromProps === 'function') {
        applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
        newState = workInProgress.memoizedState;
      }

      var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);

      if (shouldUpdate) {
        // In order to support react-lifecycles-compat polyfilled components,
        // Unsafe lifecycles should not be invoked for components using the new APIs.
        if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === 'function' || typeof instance.componentWillUpdate === 'function')) {
          startPhaseTimer(workInProgress, 'componentWillUpdate');

          if (typeof instance.componentWillUpdate === 'function') {
            instance.componentWillUpdate(newProps, newState, nextContext);
          }

          if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
            instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);
          }

          stopPhaseTimer();
        }

        if (typeof instance.componentDidUpdate === 'function') {
          workInProgress.effectTag |= Update;
        }

        if (typeof instance.getSnapshotBeforeUpdate === 'function') {
          workInProgress.effectTag |= Snapshot;
        }
      } else {
        // If an update was already in progress, we should schedule an Update
        // effect even though we're bailing out, so that cWU/cDU are called.
        if (typeof instance.componentDidUpdate === 'function') {
          if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
            workInProgress.effectTag |= Update;
          }
        }

        if (typeof instance.getSnapshotBeforeUpdate === 'function') {
          if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
            workInProgress.effectTag |= Snapshot;
          }
        } // If shouldComponentUpdate returned false, we should still update the
        // memoized props/state to indicate that this work can be reused.


        workInProgress.memoizedProps = newProps;
        workInProgress.memoizedState = newState;
      } // Update the existing instance's state, props, and context pointers even
      // if shouldComponentUpdate returns false.


      instance.props = newProps;
      instance.state = newState;
      instance.context = nextContext;
      return shouldUpdate;
    }

    var didWarnAboutMaps;
    var didWarnAboutGenerators;
    var didWarnAboutStringRefs;
    var ownerHasKeyUseWarning;
    var ownerHasFunctionTypeWarning;

    var warnForMissingKey = function (child) {};

    {
      didWarnAboutMaps = false;
      didWarnAboutGenerators = false;
      didWarnAboutStringRefs = {};
      /**
       * Warn if there's no key explicitly set on dynamic arrays of children or
       * object keys are not valid. This allows us to keep track of children between
       * updates.
       */

      ownerHasKeyUseWarning = {};
      ownerHasFunctionTypeWarning = {};

      warnForMissingKey = function (child) {
        if (child === null || typeof child !== 'object') {
          return;
        }

        if (!child._store || child._store.validated || child.key != null) {
          return;
        }

        (function () {
          if (!(typeof child._store === 'object')) {
            {
              throw ReactError(Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue."));
            }
          }
        })();

        child._store.validated = true;
        var currentComponentErrorInfo = 'Each child in a list should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.' + getCurrentFiberStackInDev();

        if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
          return;
        }

        ownerHasKeyUseWarning[currentComponentErrorInfo] = true;
        warning$1(false, 'Each child in a list should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.');
      };
    }
    var isArray = Array.isArray;

    function coerceRef(returnFiber, current$$1, element) {
      var mixedRef = element.ref;

      if (mixedRef !== null && typeof mixedRef !== 'function' && typeof mixedRef !== 'object') {
        {
          // TODO: Clean this up once we turn on the string ref warning for
          // everyone, because the strict mode case will no longer be relevant
          if (returnFiber.mode & StrictMode || warnAboutStringRefs) {
            var componentName = getComponentName(returnFiber.type) || 'Component';

            if (!didWarnAboutStringRefs[componentName]) {
              if (warnAboutStringRefs) {
                warningWithoutStack$1(false, 'Component "%s" contains the string ref "%s". Support for string refs ' + 'will be removed in a future major release. We recommend using ' + 'useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://fb.me/react-strict-mode-string-ref%s', componentName, mixedRef, getStackByFiberInDevAndProd(returnFiber));
              } else {
                warningWithoutStack$1(false, 'A string ref, "%s", has been found within a strict mode tree. ' + 'String refs are a source of potential bugs and should be avoided. ' + 'We recommend using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://fb.me/react-strict-mode-string-ref%s', mixedRef, getStackByFiberInDevAndProd(returnFiber));
              }

              didWarnAboutStringRefs[componentName] = true;
            }
          }
        }

        if (element._owner) {
          var owner = element._owner;
          var inst;

          if (owner) {
            var ownerFiber = owner;

            (function () {
              if (!(ownerFiber.tag === ClassComponent)) {
                {
                  throw ReactError(Error("Function components cannot have refs. Did you mean to use React.forwardRef()?"));
                }
              }
            })();

            inst = ownerFiber.stateNode;
          }

          (function () {
            if (!inst) {
              {
                throw ReactError(Error("Missing owner for string ref " + mixedRef + ". This error is likely caused by a bug in React. Please file an issue."));
              }
            }
          })();

          var stringRef = '' + mixedRef; // Check if previous string ref matches new string ref

          if (current$$1 !== null && current$$1.ref !== null && typeof current$$1.ref === 'function' && current$$1.ref._stringRef === stringRef) {
            return current$$1.ref;
          }

          var ref = function (value) {
            var refs = inst.refs;

            if (refs === emptyRefsObject) {
              // This is a lazy pooled frozen object, so we need to initialize.
              refs = inst.refs = {};
            }

            if (value === null) {
              delete refs[stringRef];
            } else {
              refs[stringRef] = value;
            }
          };

          ref._stringRef = stringRef;
          return ref;
        } else {
          (function () {
            if (!(typeof mixedRef === 'string')) {
              {
                throw ReactError(Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null."));
              }
            }
          })();

          (function () {
            if (!element._owner) {
              {
                throw ReactError(Error("Element ref was specified as a string (" + mixedRef + ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://fb.me/react-refs-must-have-owner for more information."));
              }
            }
          })();
        }
      }

      return mixedRef;
    }

    function throwOnInvalidObjectType(returnFiber, newChild) {
      if (returnFiber.type !== 'textarea') {
        var addendum = '';
        {
          addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + getCurrentFiberStackInDev();
        }

        (function () {
          {
            {
              throw ReactError(Error("Objects are not valid as a React child (found: " + (Object.prototype.toString.call(newChild) === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : newChild) + ")." + addendum));
            }
          }
        })();
      }
    }

    function warnOnFunctionType() {
      var currentComponentErrorInfo = 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.' + getCurrentFiberStackInDev();

      if (ownerHasFunctionTypeWarning[currentComponentErrorInfo]) {
        return;
      }

      ownerHasFunctionTypeWarning[currentComponentErrorInfo] = true;
      warning$1(false, 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.');
    } // This wrapper function exists because I expect to clone the code in each path
    // to be able to optimize each path individually by branching early. This needs
    // a compiler or we can do it manually. Helpers that don't need this branching
    // live outside of this function.


    function ChildReconciler(shouldTrackSideEffects) {
      function deleteChild(returnFiber, childToDelete) {
        if (!shouldTrackSideEffects) {
          // Noop.
          return;
        } // Deletions are added in reversed order so we add it to the front.
        // At this point, the return fiber's effect list is empty except for
        // deletions, so we can just append the deletion to the list. The remaining
        // effects aren't added until the complete phase. Once we implement
        // resuming, this may not be true.


        var last = returnFiber.lastEffect;

        if (last !== null) {
          last.nextEffect = childToDelete;
          returnFiber.lastEffect = childToDelete;
        } else {
          returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
        }

        childToDelete.nextEffect = null;
        childToDelete.effectTag = Deletion;
      }

      function deleteRemainingChildren(returnFiber, currentFirstChild) {
        if (!shouldTrackSideEffects) {
          // Noop.
          return null;
        } // TODO: For the shouldClone case, this could be micro-optimized a bit by
        // assuming that after the first child we've already added everything.


        var childToDelete = currentFirstChild;

        while (childToDelete !== null) {
          deleteChild(returnFiber, childToDelete);
          childToDelete = childToDelete.sibling;
        }

        return null;
      }

      function mapRemainingChildren(returnFiber, currentFirstChild) {
        // Add the remaining children to a temporary map so that we can find them by
        // keys quickly. Implicit (null) keys get added to this set with their index
        // instead.
        var existingChildren = new Map();
        var existingChild = currentFirstChild;

        while (existingChild !== null) {
          if (existingChild.key !== null) {
            existingChildren.set(existingChild.key, existingChild);
          } else {
            existingChildren.set(existingChild.index, existingChild);
          }

          existingChild = existingChild.sibling;
        }

        return existingChildren;
      }

      function useFiber(fiber, pendingProps, expirationTime) {
        // We currently set sibling to null and index to 0 here because it is easy
        // to forget to do before returning it. E.g. for the single child case.
        var clone = createWorkInProgress(fiber, pendingProps, expirationTime);
        clone.index = 0;
        clone.sibling = null;
        return clone;
      }

      function placeChild(newFiber, lastPlacedIndex, newIndex) {
        newFiber.index = newIndex;

        if (!shouldTrackSideEffects) {
          // Noop.
          return lastPlacedIndex;
        }

        var current$$1 = newFiber.alternate;

        if (current$$1 !== null) {
          var oldIndex = current$$1.index;

          if (oldIndex < lastPlacedIndex) {
            // This is a move.
            newFiber.effectTag = Placement;
            return lastPlacedIndex;
          } else {
            // This item can stay in place.
            return oldIndex;
          }
        } else {
          // This is an insertion.
          newFiber.effectTag = Placement;
          return lastPlacedIndex;
        }
      }

      function placeSingleChild(newFiber) {
        // This is simpler for the single child case. We only need to do a
        // placement for inserting new children.
        if (shouldTrackSideEffects && newFiber.alternate === null) {
          newFiber.effectTag = Placement;
        }

        return newFiber;
      }

      function updateTextNode(returnFiber, current$$1, textContent, expirationTime) {
        if (current$$1 === null || current$$1.tag !== HostText) {
          // Insert
          var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);
          created.return = returnFiber;
          return created;
        } else {
          // Update
          var existing = useFiber(current$$1, textContent, expirationTime);
          existing.return = returnFiber;
          return existing;
        }
      }

      function updateElement(returnFiber, current$$1, element, expirationTime) {
        if (current$$1 !== null && (current$$1.elementType === element.type || // Keep this check inline so it only runs on the false path:
        isCompatibleFamilyForHotReloading(current$$1, element))) {
          // Move based on index
          var existing = useFiber(current$$1, element.props, expirationTime);
          existing.ref = coerceRef(returnFiber, current$$1, element);
          existing.return = returnFiber;
          {
            existing._debugSource = element._source;
            existing._debugOwner = element._owner;
          }
          return existing;
        } else {
          // Insert
          var created = createFiberFromElement(element, returnFiber.mode, expirationTime);
          created.ref = coerceRef(returnFiber, current$$1, element);
          created.return = returnFiber;
          return created;
        }
      }

      function updatePortal(returnFiber, current$$1, portal, expirationTime) {
        if (current$$1 === null || current$$1.tag !== HostPortal || current$$1.stateNode.containerInfo !== portal.containerInfo || current$$1.stateNode.implementation !== portal.implementation) {
          // Insert
          var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);
          created.return = returnFiber;
          return created;
        } else {
          // Update
          var existing = useFiber(current$$1, portal.children || [], expirationTime);
          existing.return = returnFiber;
          return existing;
        }
      }

      function updateFragment(returnFiber, current$$1, fragment, expirationTime, key) {
        if (current$$1 === null || current$$1.tag !== Fragment) {
          // Insert
          var created = createFiberFromFragment(fragment, returnFiber.mode, expirationTime, key);
          created.return = returnFiber;
          return created;
        } else {
          // Update
          var existing = useFiber(current$$1, fragment, expirationTime);
          existing.return = returnFiber;
          return existing;
        }
      }

      function createChild(returnFiber, newChild, expirationTime) {
        if (typeof newChild === 'string' || typeof newChild === 'number') {
          // Text nodes don't have keys. If the previous node is implicitly keyed
          // we can continue to replace it without aborting even if it is not a text
          // node.
          var created = createFiberFromText('' + newChild, returnFiber.mode, expirationTime);
          created.return = returnFiber;
          return created;
        }

        if (typeof newChild === 'object' && newChild !== null) {
          switch (newChild.$$typeof) {
            case REACT_ELEMENT_TYPE:
              {
                var _created = createFiberFromElement(newChild, returnFiber.mode, expirationTime);

                _created.ref = coerceRef(returnFiber, null, newChild);
                _created.return = returnFiber;
                return _created;
              }

            case REACT_PORTAL_TYPE:
              {
                var _created2 = createFiberFromPortal(newChild, returnFiber.mode, expirationTime);

                _created2.return = returnFiber;
                return _created2;
              }
          }

          if (isArray(newChild) || getIteratorFn(newChild)) {
            var _created3 = createFiberFromFragment(newChild, returnFiber.mode, expirationTime, null);

            _created3.return = returnFiber;
            return _created3;
          }

          throwOnInvalidObjectType(returnFiber, newChild);
        }

        {
          if (typeof newChild === 'function') {
            warnOnFunctionType();
          }
        }
        return null;
      }

      function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {
        // Update the fiber if the keys match, otherwise return null.
        var key = oldFiber !== null ? oldFiber.key : null;

        if (typeof newChild === 'string' || typeof newChild === 'number') {
          // Text nodes don't have keys. If the previous node is implicitly keyed
          // we can continue to replace it without aborting even if it is not a text
          // node.
          if (key !== null) {
            return null;
          }

          return updateTextNode(returnFiber, oldFiber, '' + newChild, expirationTime);
        }

        if (typeof newChild === 'object' && newChild !== null) {
          switch (newChild.$$typeof) {
            case REACT_ELEMENT_TYPE:
              {
                if (newChild.key === key) {
                  if (newChild.type === REACT_FRAGMENT_TYPE) {
                    return updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key);
                  }

                  return updateElement(returnFiber, oldFiber, newChild, expirationTime);
                } else {
                  return null;
                }
              }

            case REACT_PORTAL_TYPE:
              {
                if (newChild.key === key) {
                  return updatePortal(returnFiber, oldFiber, newChild, expirationTime);
                } else {
                  return null;
                }
              }
          }

          if (isArray(newChild) || getIteratorFn(newChild)) {
            if (key !== null) {
              return null;
            }

            return updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);
          }

          throwOnInvalidObjectType(returnFiber, newChild);
        }

        {
          if (typeof newChild === 'function') {
            warnOnFunctionType();
          }
        }
        return null;
      }

      function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {
        if (typeof newChild === 'string' || typeof newChild === 'number') {
          // Text nodes don't have keys, so we neither have to check the old nor
          // new node for the key. If both are text nodes, they match.
          var matchedFiber = existingChildren.get(newIdx) || null;
          return updateTextNode(returnFiber, matchedFiber, '' + newChild, expirationTime);
        }

        if (typeof newChild === 'object' && newChild !== null) {
          switch (newChild.$$typeof) {
            case REACT_ELEMENT_TYPE:
              {
                var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;

                if (newChild.type === REACT_FRAGMENT_TYPE) {
                  return updateFragment(returnFiber, _matchedFiber, newChild.props.children, expirationTime, newChild.key);
                }

                return updateElement(returnFiber, _matchedFiber, newChild, expirationTime);
              }

            case REACT_PORTAL_TYPE:
              {
                var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;

                return updatePortal(returnFiber, _matchedFiber2, newChild, expirationTime);
              }
          }

          if (isArray(newChild) || getIteratorFn(newChild)) {
            var _matchedFiber3 = existingChildren.get(newIdx) || null;

            return updateFragment(returnFiber, _matchedFiber3, newChild, expirationTime, null);
          }

          throwOnInvalidObjectType(returnFiber, newChild);
        }

        {
          if (typeof newChild === 'function') {
            warnOnFunctionType();
          }
        }
        return null;
      }
      /**
       * Warns if there is a duplicate or missing key
       */


      function warnOnInvalidKey(child, knownKeys) {
        {
          if (typeof child !== 'object' || child === null) {
            return knownKeys;
          }

          switch (child.$$typeof) {
            case REACT_ELEMENT_TYPE:
            case REACT_PORTAL_TYPE:
              warnForMissingKey(child);
              var key = child.key;

              if (typeof key !== 'string') {
                break;
              }

              if (knownKeys === null) {
                knownKeys = new Set();
                knownKeys.add(key);
                break;
              }

              if (!knownKeys.has(key)) {
                knownKeys.add(key);
                break;
              }

              warning$1(false, 'Encountered two children with the same key, `%s`. ' + 'Keys should be unique so that components maintain their identity ' + 'across updates. Non-unique keys may cause children to be ' + 'duplicated and/or omitted — the behavior is unsupported and ' + 'could change in a future version.', key);
              break;

            default:
              break;
          }
        }
        return knownKeys;
      }

      function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {
        // This algorithm can't optimize by searching from both ends since we
        // don't have backpointers on fibers. I'm trying to see how far we can get
        // with that model. If it ends up not being worth the tradeoffs, we can
        // add it later.
        // Even with a two ended optimization, we'd want to optimize for the case
        // where there are few changes and brute force the comparison instead of
        // going for the Map. It'd like to explore hitting that path first in
        // forward-only mode and only go for the Map once we notice that we need
        // lots of look ahead. This doesn't handle reversal as well as two ended
        // search but that's unusual. Besides, for the two ended optimization to
        // work on Iterables, we'd need to copy the whole set.
        // In this first iteration, we'll just live with hitting the bad case
        // (adding everything to a Map) in for every insert/move.
        // If you change this code, also update reconcileChildrenIterator() which
        // uses the same algorithm.
        {
          // First, validate keys.
          var knownKeys = null;

          for (var i = 0; i < newChildren.length; i++) {
            var child = newChildren[i];
            knownKeys = warnOnInvalidKey(child, knownKeys);
          }
        }
        var resultingFirstChild = null;
        var previousNewFiber = null;
        var oldFiber = currentFirstChild;
        var lastPlacedIndex = 0;
        var newIdx = 0;
        var nextOldFiber = null;

        for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {
          if (oldFiber.index > newIdx) {
            nextOldFiber = oldFiber;
            oldFiber = null;
          } else {
            nextOldFiber = oldFiber.sibling;
          }

          var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);

          if (newFiber === null) {
            // TODO: This breaks on empty slots like null children. That's
            // unfortunate because it triggers the slow path all the time. We need
            // a better way to communicate whether this was a miss or null,
            // boolean, undefined, etc.
            if (oldFiber === null) {
              oldFiber = nextOldFiber;
            }

            break;
          }

          if (shouldTrackSideEffects) {
            if (oldFiber && newFiber.alternate === null) {
              // We matched the slot, but we didn't reuse the existing fiber, so we
              // need to delete the existing child.
              deleteChild(returnFiber, oldFiber);
            }
          }

          lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);

          if (previousNewFiber === null) {
            // TODO: Move out of the loop. This only happens for the first run.
            resultingFirstChild = newFiber;
          } else {
            // TODO: Defer siblings if we're not at the right index for this slot.
            // I.e. if we had null values before, then we want to defer this
            // for each null value. However, we also don't want to call updateSlot
            // with the previous one.
            previousNewFiber.sibling = newFiber;
          }

          previousNewFiber = newFiber;
          oldFiber = nextOldFiber;
        }

        if (newIdx === newChildren.length) {
          // We've reached the end of the new children. We can delete the rest.
          deleteRemainingChildren(returnFiber, oldFiber);
          return resultingFirstChild;
        }

        if (oldFiber === null) {
          // If we don't have any more existing children we can choose a fast path
          // since the rest will all be insertions.
          for (; newIdx < newChildren.length; newIdx++) {
            var _newFiber = createChild(returnFiber, newChildren[newIdx], expirationTime);

            if (_newFiber === null) {
              continue;
            }

            lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);

            if (previousNewFiber === null) {
              // TODO: Move out of the loop. This only happens for the first run.
              resultingFirstChild = _newFiber;
            } else {
              previousNewFiber.sibling = _newFiber;
            }

            previousNewFiber = _newFiber;
          }

          return resultingFirstChild;
        } // Add all children to a key map for quick lookups.


        var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.

        for (; newIdx < newChildren.length; newIdx++) {
          var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], expirationTime);

          if (_newFiber2 !== null) {
            if (shouldTrackSideEffects) {
              if (_newFiber2.alternate !== null) {
                // The new fiber is a work in progress, but if there exists a
                // current, that means that we reused the fiber. We need to delete
                // it from the child list so that we don't add it to the deletion
                // list.
                existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
              }
            }

            lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);

            if (previousNewFiber === null) {
              resultingFirstChild = _newFiber2;
            } else {
              previousNewFiber.sibling = _newFiber2;
            }

            previousNewFiber = _newFiber2;
          }
        }

        if (shouldTrackSideEffects) {
          // Any existing children that weren't consumed above were deleted. We need
          // to add them to the deletion list.
          existingChildren.forEach(function (child) {
            return deleteChild(returnFiber, child);
          });
        }

        return resultingFirstChild;
      }

      function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {
        // This is the same implementation as reconcileChildrenArray(),
        // but using the iterator instead.
        var iteratorFn = getIteratorFn(newChildrenIterable);

        (function () {
          if (!(typeof iteratorFn === 'function')) {
            {
              throw ReactError(Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue."));
            }
          }
        })();

        {
          // We don't support rendering Generators because it's a mutation.
          // See https://github.com/facebook/react/issues/12995
          if (typeof Symbol === 'function' && // $FlowFixMe Flow doesn't know about toStringTag
          newChildrenIterable[Symbol.toStringTag] === 'Generator') {
            !didWarnAboutGenerators ? warning$1(false, 'Using Generators as children is unsupported and will likely yield ' + 'unexpected results because enumerating a generator mutates it. ' + 'You may convert it to an array with `Array.from()` or the ' + '`[...spread]` operator before rendering. Keep in mind ' + 'you might need to polyfill these features for older browsers.') : void 0;
            didWarnAboutGenerators = true;
          } // Warn about using Maps as children


          if (newChildrenIterable.entries === iteratorFn) {
            !didWarnAboutMaps ? warning$1(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.') : void 0;
            didWarnAboutMaps = true;
          } // First, validate keys.
          // We'll get a different iterator later for the main pass.


          var _newChildren = iteratorFn.call(newChildrenIterable);

          if (_newChildren) {
            var knownKeys = null;

            var _step = _newChildren.next();

            for (; !_step.done; _step = _newChildren.next()) {
              var child = _step.value;
              knownKeys = warnOnInvalidKey(child, knownKeys);
            }
          }
        }
        var newChildren = iteratorFn.call(newChildrenIterable);

        (function () {
          if (!(newChildren != null)) {
            {
              throw ReactError(Error("An iterable object provided no iterator."));
            }
          }
        })();

        var resultingFirstChild = null;
        var previousNewFiber = null;
        var oldFiber = currentFirstChild;
        var lastPlacedIndex = 0;
        var newIdx = 0;
        var nextOldFiber = null;
        var step = newChildren.next();

        for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {
          if (oldFiber.index > newIdx) {
            nextOldFiber = oldFiber;
            oldFiber = null;
          } else {
            nextOldFiber = oldFiber.sibling;
          }

          var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);

          if (newFiber === null) {
            // TODO: This breaks on empty slots like null children. That's
            // unfortunate because it triggers the slow path all the time. We need
            // a better way to communicate whether this was a miss or null,
            // boolean, undefined, etc.
            if (oldFiber === null) {
              oldFiber = nextOldFiber;
            }

            break;
          }

          if (shouldTrackSideEffects) {
            if (oldFiber && newFiber.alternate === null) {
              // We matched the slot, but we didn't reuse the existing fiber, so we
              // need to delete the existing child.
              deleteChild(returnFiber, oldFiber);
            }
          }

          lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);

          if (previousNewFiber === null) {
            // TODO: Move out of the loop. This only happens for the first run.
            resultingFirstChild = newFiber;
          } else {
            // TODO: Defer siblings if we're not at the right index for this slot.
            // I.e. if we had null values before, then we want to defer this
            // for each null value. However, we also don't want to call updateSlot
            // with the previous one.
            previousNewFiber.sibling = newFiber;
          }

          previousNewFiber = newFiber;
          oldFiber = nextOldFiber;
        }

        if (step.done) {
          // We've reached the end of the new children. We can delete the rest.
          deleteRemainingChildren(returnFiber, oldFiber);
          return resultingFirstChild;
        }

        if (oldFiber === null) {
          // If we don't have any more existing children we can choose a fast path
          // since the rest will all be insertions.
          for (; !step.done; newIdx++, step = newChildren.next()) {
            var _newFiber3 = createChild(returnFiber, step.value, expirationTime);

            if (_newFiber3 === null) {
              continue;
            }

            lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);

            if (previousNewFiber === null) {
              // TODO: Move out of the loop. This only happens for the first run.
              resultingFirstChild = _newFiber3;
            } else {
              previousNewFiber.sibling = _newFiber3;
            }

            previousNewFiber = _newFiber3;
          }

          return resultingFirstChild;
        } // Add all children to a key map for quick lookups.


        var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.

        for (; !step.done; newIdx++, step = newChildren.next()) {
          var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, expirationTime);

          if (_newFiber4 !== null) {
            if (shouldTrackSideEffects) {
              if (_newFiber4.alternate !== null) {
                // The new fiber is a work in progress, but if there exists a
                // current, that means that we reused the fiber. We need to delete
                // it from the child list so that we don't add it to the deletion
                // list.
                existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
              }
            }

            lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);

            if (previousNewFiber === null) {
              resultingFirstChild = _newFiber4;
            } else {
              previousNewFiber.sibling = _newFiber4;
            }

            previousNewFiber = _newFiber4;
          }
        }

        if (shouldTrackSideEffects) {
          // Any existing children that weren't consumed above were deleted. We need
          // to add them to the deletion list.
          existingChildren.forEach(function (child) {
            return deleteChild(returnFiber, child);
          });
        }

        return resultingFirstChild;
      }

      function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, expirationTime) {
        // There's no need to check for keys on text nodes since we don't have a
        // way to define them.
        if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
          // We already have an existing node so let's just update it and delete
          // the rest.
          deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
          var existing = useFiber(currentFirstChild, textContent, expirationTime);
          existing.return = returnFiber;
          return existing;
        } // The existing first child is not a text node so we need to create one
        // and delete the existing ones.


        deleteRemainingChildren(returnFiber, currentFirstChild);
        var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);
        created.return = returnFiber;
        return created;
      }

      function reconcileSingleElement(returnFiber, currentFirstChild, element, expirationTime) {
        var key = element.key;
        var child = currentFirstChild;

        while (child !== null) {
          // TODO: If key === null and child.key === null, then this only applies to
          // the first item in the list.
          if (child.key === key) {
            if (child.tag === Fragment ? element.type === REACT_FRAGMENT_TYPE : child.elementType === element.type || // Keep this check inline so it only runs on the false path:
            isCompatibleFamilyForHotReloading(child, element)) {
              deleteRemainingChildren(returnFiber, child.sibling);
              var existing = useFiber(child, element.type === REACT_FRAGMENT_TYPE ? element.props.children : element.props, expirationTime);
              existing.ref = coerceRef(returnFiber, child, element);
              existing.return = returnFiber;
              {
                existing._debugSource = element._source;
                existing._debugOwner = element._owner;
              }
              return existing;
            } else {
              deleteRemainingChildren(returnFiber, child);
              break;
            }
          } else {
            deleteChild(returnFiber, child);
          }

          child = child.sibling;
        }

        if (element.type === REACT_FRAGMENT_TYPE) {
          var created = createFiberFromFragment(element.props.children, returnFiber.mode, expirationTime, element.key);
          created.return = returnFiber;
          return created;
        } else {
          var _created4 = createFiberFromElement(element, returnFiber.mode, expirationTime);

          _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
          _created4.return = returnFiber;
          return _created4;
        }
      }

      function reconcileSinglePortal(returnFiber, currentFirstChild, portal, expirationTime) {
        var key = portal.key;
        var child = currentFirstChild;

        while (child !== null) {
          // TODO: If key === null and child.key === null, then this only applies to
          // the first item in the list.
          if (child.key === key) {
            if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
              deleteRemainingChildren(returnFiber, child.sibling);
              var existing = useFiber(child, portal.children || [], expirationTime);
              existing.return = returnFiber;
              return existing;
            } else {
              deleteRemainingChildren(returnFiber, child);
              break;
            }
          } else {
            deleteChild(returnFiber, child);
          }

          child = child.sibling;
        }

        var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);
        created.return = returnFiber;
        return created;
      } // This API will tag the children with the side-effect of the reconciliation
      // itself. They will be added to the side-effect list as we pass through the
      // children and the parent.


      function reconcileChildFibers(returnFiber, currentFirstChild, newChild, expirationTime) {
        // This function is not recursive.
        // If the top level item is an array, we treat it as a set of children,
        // not as a fragment. Nested arrays on the other hand will be treated as
        // fragment nodes. Recursion happens at the normal flow.
        // Handle top level unkeyed fragments as if they were arrays.
        // This leads to an ambiguity between <>{[...]}</> and <>...</>.
        // We treat the ambiguous cases above the same.
        var isUnkeyedTopLevelFragment = typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;

        if (isUnkeyedTopLevelFragment) {
          newChild = newChild.props.children;
        } // Handle object types


        var isObject = typeof newChild === 'object' && newChild !== null;

        if (isObject) {
          switch (newChild.$$typeof) {
            case REACT_ELEMENT_TYPE:
              return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, expirationTime));

            case REACT_PORTAL_TYPE:
              return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, expirationTime));
          }
        }

        if (typeof newChild === 'string' || typeof newChild === 'number') {
          return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, expirationTime));
        }

        if (isArray(newChild)) {
          return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);
        }

        if (getIteratorFn(newChild)) {
          return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);
        }

        if (isObject) {
          throwOnInvalidObjectType(returnFiber, newChild);
        }

        {
          if (typeof newChild === 'function') {
            warnOnFunctionType();
          }
        }

        if (typeof newChild === 'undefined' && !isUnkeyedTopLevelFragment) {
          // If the new child is undefined, and the return fiber is a composite
          // component, throw an error. If Fiber return types are disabled,
          // we already threw above.
          switch (returnFiber.tag) {
            case ClassComponent:
              {
                {
                  var instance = returnFiber.stateNode;

                  if (instance.render._isMockFunction) {
                    // We allow auto-mocks to proceed as if they're returning null.
                    break;
                  }
                }
              }
            // Intentionally fall through to the next case, which handles both
            // functions and classes
            // eslint-disable-next-lined no-fallthrough

            case FunctionComponent:
              {
                var Component = returnFiber.type;

                (function () {
                  {
                    {
                      throw ReactError(Error((Component.displayName || Component.name || 'Component') + "(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null."));
                    }
                  }
                })();
              }
          }
        } // Remaining cases are all treated as empty.


        return deleteRemainingChildren(returnFiber, currentFirstChild);
      }

      return reconcileChildFibers;
    }

    var reconcileChildFibers = ChildReconciler(true);
    var mountChildFibers = ChildReconciler(false);

    function cloneChildFibers(current$$1, workInProgress) {
      (function () {
        if (!(current$$1 === null || workInProgress.child === current$$1.child)) {
          {
            throw ReactError(Error("Resuming work not yet implemented."));
          }
        }
      })();

      if (workInProgress.child === null) {
        return;
      }

      var currentChild = workInProgress.child;
      var newChild = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
      workInProgress.child = newChild;
      newChild.return = workInProgress;

      while (currentChild.sibling !== null) {
        currentChild = currentChild.sibling;
        newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
        newChild.return = workInProgress;
      }

      newChild.sibling = null;
    } // Reset a workInProgress child set to prepare it for a second pass.


    function resetChildFibers(workInProgress, renderExpirationTime) {
      var child = workInProgress.child;

      while (child !== null) {
        resetWorkInProgress(child, renderExpirationTime);
        child = child.sibling;
      }
    }

    var NO_CONTEXT = {};
    var contextStackCursor$1 = createCursor(NO_CONTEXT);
    var contextFiberStackCursor = createCursor(NO_CONTEXT);
    var rootInstanceStackCursor = createCursor(NO_CONTEXT);

    function requiredContext(c) {
      (function () {
        if (!(c !== NO_CONTEXT)) {
          {
            throw ReactError(Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue."));
          }
        }
      })();

      return c;
    }

    function getRootHostContainer() {
      var rootInstance = requiredContext(rootInstanceStackCursor.current);
      return rootInstance;
    }

    function pushHostContainer(fiber, nextRootInstance) {
      // Push current root instance onto the stack;
      // This allows us to reset root when portals are popped.
      push(rootInstanceStackCursor, nextRootInstance, fiber); // Track the context and the Fiber that provided it.
      // This enables us to pop only Fibers that provide unique contexts.

      push(contextFiberStackCursor, fiber, fiber); // Finally, we need to push the host context to the stack.
      // However, we can't just call getRootHostContext() and push it because
      // we'd have a different number of entries on the stack depending on
      // whether getRootHostContext() throws somewhere in renderer code or not.
      // So we push an empty value first. This lets us safely unwind on errors.

      push(contextStackCursor$1, NO_CONTEXT, fiber);
      var nextRootContext = getRootHostContext(nextRootInstance); // Now that we know this function doesn't throw, replace it.

      pop(contextStackCursor$1, fiber);
      push(contextStackCursor$1, nextRootContext, fiber);
    }

    function popHostContainer(fiber) {
      pop(contextStackCursor$1, fiber);
      pop(contextFiberStackCursor, fiber);
      pop(rootInstanceStackCursor, fiber);
    }

    function getHostContext() {
      var context = requiredContext(contextStackCursor$1.current);
      return context;
    }

    function pushHostContext(fiber) {
      var rootInstance = requiredContext(rootInstanceStackCursor.current);
      var context = requiredContext(contextStackCursor$1.current);
      var nextContext = getChildHostContext(context, fiber.type, rootInstance); // Don't push this Fiber's context unless it's unique.

      if (context === nextContext) {
        return;
      } // Track the context and the Fiber that provided it.
      // This enables us to pop only Fibers that provide unique contexts.


      push(contextFiberStackCursor, fiber, fiber);
      push(contextStackCursor$1, nextContext, fiber);
    }

    function popHostContext(fiber) {
      // Do not pop unless this Fiber provided the current context.
      // pushHostContext() only pushes Fibers that provide unique contexts.
      if (contextFiberStackCursor.current !== fiber) {
        return;
      }

      pop(contextStackCursor$1, fiber);
      pop(contextFiberStackCursor, fiber);
    }

    var DefaultSuspenseContext = 0; // The Suspense Context is split into two parts. The lower bits is
    // inherited deeply down the subtree. The upper bits only affect
    // this immediate suspense boundary and gets reset each new
    // boundary or suspense list.

    var SubtreeSuspenseContextMask = 1; // Subtree Flags:
    // InvisibleParentSuspenseContext indicates that one of our parent Suspense
    // boundaries is not currently showing visible main content.
    // Either because it is already showing a fallback or is not mounted at all.
    // We can use this to determine if it is desirable to trigger a fallback at
    // the parent. If not, then we might need to trigger undesirable boundaries
    // and/or suspend the commit to avoid hiding the parent content.

    var InvisibleParentSuspenseContext = 1; // Shallow Flags:
    // ForceSuspenseFallback can be used by SuspenseList to force newly added
    // items into their fallback state during one of the render passes.

    var ForceSuspenseFallback = 2;
    var suspenseStackCursor = createCursor(DefaultSuspenseContext);

    function hasSuspenseContext(parentContext, flag) {
      return (parentContext & flag) !== 0;
    }

    function setDefaultShallowSuspenseContext(parentContext) {
      return parentContext & SubtreeSuspenseContextMask;
    }

    function setShallowSuspenseContext(parentContext, shallowContext) {
      return parentContext & SubtreeSuspenseContextMask | shallowContext;
    }

    function addSubtreeSuspenseContext(parentContext, subtreeContext) {
      return parentContext | subtreeContext;
    }

    function pushSuspenseContext(fiber, newContext) {
      push(suspenseStackCursor, newContext, fiber);
    }

    function popSuspenseContext(fiber) {
      pop(suspenseStackCursor, fiber);
    }

    function shouldCaptureSuspense(workInProgress, hasInvisibleParent) {
      // If it was the primary children that just suspended, capture and render the
      // fallback. Otherwise, don't capture and bubble to the next boundary.
      var nextState = workInProgress.memoizedState;

      if (nextState !== null) {
        if (nextState.dehydrated !== null) {
          // A dehydrated boundary always captures.
          return true;
        }

        return false;
      }

      var props = workInProgress.memoizedProps; // In order to capture, the Suspense component must have a fallback prop.

      if (props.fallback === undefined) {
        return false;
      } // Regular boundaries always capture.


      if (props.unstable_avoidThisFallback !== true) {
        return true;
      } // If it's a boundary we should avoid, then we prefer to bubble up to the
      // parent boundary if it is currently invisible.


      if (hasInvisibleParent) {
        return false;
      } // If the parent is not able to handle it, we must handle it.


      return true;
    }

    function findFirstSuspended(row) {
      var node = row;

      while (node !== null) {
        if (node.tag === SuspenseComponent) {
          var state = node.memoizedState;

          if (state !== null) {
            var dehydrated = state.dehydrated;

            if (dehydrated === null || isSuspenseInstancePending(dehydrated) || isSuspenseInstanceFallback(dehydrated)) {
              return node;
            }
          }
        } else if (node.tag === SuspenseListComponent && // revealOrder undefined can't be trusted because it don't
        // keep track of whether it suspended or not.
        node.memoizedProps.revealOrder !== undefined) {
          var didSuspend = (node.effectTag & DidCapture) !== NoEffect;

          if (didSuspend) {
            return node;
          }
        } else if (node.child !== null) {
          node.child.return = node;
          node = node.child;
          continue;
        }

        if (node === row) {
          return null;
        }

        while (node.sibling === null) {
          if (node.return === null || node.return === row) {
            return null;
          }

          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      }

      return null;
    }

    var emptyObject = {};
    var isArray$2 = Array.isArray;

    function createResponderInstance(responder, responderProps, responderState, fiber) {
      return {
        fiber: fiber,
        props: responderProps,
        responder: responder,
        rootEventTypes: null,
        state: responderState
      };
    }

    function mountEventResponder$1(responder, responderProps, fiber, respondersMap, rootContainerInstance) {
      var responderState = emptyObject;
      var getInitialState = responder.getInitialState;

      if (getInitialState !== null) {
        responderState = getInitialState(responderProps);
      }

      var responderInstance = createResponderInstance(responder, responderProps, responderState, fiber);

      if (!rootContainerInstance) {
        var node = fiber;

        while (node !== null) {
          var tag = node.tag;

          if (tag === HostComponent) {
            rootContainerInstance = node.stateNode;
            break;
          } else if (tag === HostRoot) {
            rootContainerInstance = node.stateNode.containerInfo;
            break;
          }

          node = node.return;
        }
      }

      mountResponderInstance(responder, responderInstance, responderProps, responderState, rootContainerInstance);
      respondersMap.set(responder, responderInstance);
    }

    function updateEventListener(listener, fiber, visistedResponders, respondersMap, rootContainerInstance) {
      var responder;
      var props;

      if (listener) {
        responder = listener.responder;
        props = listener.props;
      }

      (function () {
        if (!(responder && responder.$$typeof === REACT_RESPONDER_TYPE)) {
          {
            throw ReactError(Error("An invalid value was used as an event listener. Expect one or many event listeners created via React.unstable_useResponder()."));
          }
        }
      })();

      var listenerProps = props;

      if (visistedResponders.has(responder)) {
        // show warning
        {
          warning$1(false, 'Duplicate event responder "%s" found in event listeners. ' + 'Event listeners passed to elements cannot use the same event responder more than once.', responder.displayName);
        }
        return;
      }

      visistedResponders.add(responder);
      var responderInstance = respondersMap.get(responder);

      if (responderInstance === undefined) {
        // Mount (happens in either complete or commit phase)
        mountEventResponder$1(responder, listenerProps, fiber, respondersMap, rootContainerInstance);
      } else {
        // Update (happens during commit phase only)
        responderInstance.props = listenerProps;
        responderInstance.fiber = fiber;
      }
    }

    function updateEventListeners(listeners, fiber, rootContainerInstance) {
      var visistedResponders = new Set();
      var dependencies = fiber.dependencies;

      if (listeners != null) {
        if (dependencies === null) {
          dependencies = fiber.dependencies = {
            expirationTime: NoWork,
            firstContext: null,
            responders: new Map()
          };
        }

        var respondersMap = dependencies.responders;

        if (respondersMap === null) {
          respondersMap = new Map();
        }

        if (isArray$2(listeners)) {
          for (var i = 0, length = listeners.length; i < length; i++) {
            var listener = listeners[i];
            updateEventListener(listener, fiber, visistedResponders, respondersMap, rootContainerInstance);
          }
        } else {
          updateEventListener(listeners, fiber, visistedResponders, respondersMap, rootContainerInstance);
        }
      }

      if (dependencies !== null) {
        var _respondersMap = dependencies.responders;

        if (_respondersMap !== null) {
          // Unmount
          var mountedResponders = Array.from(_respondersMap.keys());

          for (var _i = 0, _length = mountedResponders.length; _i < _length; _i++) {
            var mountedResponder = mountedResponders[_i];

            if (!visistedResponders.has(mountedResponder)) {
              var responderInstance = _respondersMap.get(mountedResponder);

              unmountResponderInstance(responderInstance);

              _respondersMap.delete(mountedResponder);
            }
          }
        }
      }
    }

    function createResponderListener(responder, props) {
      var eventResponderListener = {
        responder: responder,
        props: props
      };
      {
        Object.freeze(eventResponderListener);
      }
      return eventResponderListener;
    }

    var NoEffect$1 =
    /*             */
    0;
    var UnmountSnapshot =
    /*      */
    2;
    var UnmountMutation =
    /*      */
    4;
    var MountMutation =
    /*        */
    8;
    var UnmountLayout =
    /*        */
    16;
    var MountLayout =
    /*          */
    32;
    var MountPassive =
    /*         */
    64;
    var UnmountPassive =
    /*       */
    128;
    var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
    var didWarnAboutMismatchedHooksForComponent;
    {
      didWarnAboutMismatchedHooksForComponent = new Set();
    } // These are set right before calling the component.

    var renderExpirationTime$1 = NoWork; // The work-in-progress fiber. I've named it differently to distinguish it from
    // the work-in-progress hook.

    var currentlyRenderingFiber$1 = null; // Hooks are stored as a linked list on the fiber's memoizedState field. The
    // current hook list is the list that belongs to the current fiber. The
    // work-in-progress hook list is a new list that will be added to the
    // work-in-progress fiber.

    var currentHook = null;
    var nextCurrentHook = null;
    var firstWorkInProgressHook = null;
    var workInProgressHook = null;
    var nextWorkInProgressHook = null;
    var remainingExpirationTime = NoWork;
    var componentUpdateQueue = null;
    var sideEffectTag = 0; // Updates scheduled during render will trigger an immediate re-render at the
    // end of the current pass. We can't store these updates on the normal queue,
    // because if the work is aborted, they should be discarded. Because this is
    // a relatively rare case, we also don't want to add an additional field to
    // either the hook or queue object types. So we store them in a lazily create
    // map of queue -> render-phase updates, which are discarded once the component
    // completes without re-rendering.
    // Whether an update was scheduled during the currently executing render pass.

    var didScheduleRenderPhaseUpdate = false; // Lazily created map of render-phase updates

    var renderPhaseUpdates = null; // Counter to prevent infinite loops.

    var numberOfReRenders = 0;
    var RE_RENDER_LIMIT = 25; // In DEV, this is the name of the currently executing primitive hook

    var currentHookNameInDev = null; // In DEV, this list ensures that hooks are called in the same order between renders.
    // The list stores the order of hooks used during the initial render (mount).
    // Subsequent renders (updates) reference this list.

    var hookTypesDev = null;
    var hookTypesUpdateIndexDev = -1; // In DEV, this tracks whether currently rendering component needs to ignore
    // the dependencies for Hooks that need them (e.g. useEffect or useMemo).
    // When true, such Hooks will always be "remounted". Only used during hot reload.

    var ignorePreviousDependencies = false;

    function mountHookTypesDev() {
      {
        var hookName = currentHookNameInDev;

        if (hookTypesDev === null) {
          hookTypesDev = [hookName];
        } else {
          hookTypesDev.push(hookName);
        }
      }
    }

    function updateHookTypesDev() {
      {
        var hookName = currentHookNameInDev;

        if (hookTypesDev !== null) {
          hookTypesUpdateIndexDev++;

          if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {
            warnOnHookMismatchInDev(hookName);
          }
        }
      }
    }

    function checkDepsAreArrayDev(deps) {
      {
        if (deps !== undefined && deps !== null && !Array.isArray(deps)) {
          // Verify deps, but only on mount to avoid extra checks.
          // It's unlikely their type would change as usually you define them inline.
          warning$1(false, '%s received a final argument that is not an array (instead, received `%s`). When ' + 'specified, the final argument must be an array.', currentHookNameInDev, typeof deps);
        }
      }
    }

    function warnOnHookMismatchInDev(currentHookName) {
      {
        var componentName = getComponentName(currentlyRenderingFiber$1.type);

        if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {
          didWarnAboutMismatchedHooksForComponent.add(componentName);

          if (hookTypesDev !== null) {
            var table = '';
            var secondColumnStart = 30;

            for (var i = 0; i <= hookTypesUpdateIndexDev; i++) {
              var oldHookName = hookTypesDev[i];
              var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;
              var row = i + 1 + ". " + oldHookName; // Extra space so second column lines up
              // lol @ IE not supporting String#repeat

              while (row.length < secondColumnStart) {
                row += ' ';
              }

              row += newHookName + '\n';
              table += row;
            }

            warning$1(false, 'React has detected a change in the order of Hooks called by %s. ' + 'This will lead to bugs and errors if not fixed. ' + 'For more information, read the Rules of Hooks: https://fb.me/rules-of-hooks\n\n' + '   Previous render            Next render\n' + '   ------------------------------------------------------\n' + '%s' + '   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n', componentName, table);
          }
        }
      }
    }

    function throwInvalidHookError() {
      (function () {
        {
          {
            throw ReactError(Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem."));
          }
        }
      })();
    }

    function areHookInputsEqual(nextDeps, prevDeps) {
      {
        if (ignorePreviousDependencies) {
          // Only true when this component is being hot reloaded.
          return false;
        }
      }

      if (prevDeps === null) {
        {
          warning$1(false, '%s received a final argument during this render, but not during ' + 'the previous render. Even though the final argument is optional, ' + 'its type cannot change between renders.', currentHookNameInDev);
        }
        return false;
      }

      {
        // Don't bother comparing lengths in prod because these arrays should be
        // passed inline.
        if (nextDeps.length !== prevDeps.length) {
          warning$1(false, 'The final argument passed to %s changed size between renders. The ' + 'order and size of this array must remain constant.\n\n' + 'Previous: %s\n' + 'Incoming: %s', currentHookNameInDev, "[" + prevDeps.join(', ') + "]", "[" + nextDeps.join(', ') + "]");
        }
      }

      for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
        if (is$1(nextDeps[i], prevDeps[i])) {
          continue;
        }

        return false;
      }

      return true;
    }

    function renderWithHooks(current, workInProgress, Component, props, refOrContext, nextRenderExpirationTime) {
      renderExpirationTime$1 = nextRenderExpirationTime;
      currentlyRenderingFiber$1 = workInProgress;
      nextCurrentHook = current !== null ? current.memoizedState : null;
      {
        hookTypesDev = current !== null ? current._debugHookTypes : null;
        hookTypesUpdateIndexDev = -1; // Used for hot reloading:

        ignorePreviousDependencies = current !== null && current.type !== workInProgress.type;
      } // The following should have already been reset
      // currentHook = null;
      // workInProgressHook = null;
      // remainingExpirationTime = NoWork;
      // componentUpdateQueue = null;
      // didScheduleRenderPhaseUpdate = false;
      // renderPhaseUpdates = null;
      // numberOfReRenders = 0;
      // sideEffectTag = 0;
      // TODO Warn if no hooks are used at all during mount, then some are used during update.
      // Currently we will identify the update render as a mount because nextCurrentHook === null.
      // This is tricky because it's valid for certain types of components (e.g. React.lazy)
      // Using nextCurrentHook to differentiate between mount/update only works if at least one stateful hook is used.
      // Non-stateful hooks (e.g. context) don't get added to memoizedState,
      // so nextCurrentHook would be null during updates and mounts.

      {
        if (nextCurrentHook !== null) {
          ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
        } else if (hookTypesDev !== null) {
          // This dispatcher handles an edge case where a component is updating,
          // but no stateful hooks have been used.
          // We want to match the production code behavior (which will use HooksDispatcherOnMount),
          // but with the extra DEV validation to ensure hooks ordering hasn't changed.
          // This dispatcher does that.
          ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;
        } else {
          ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;
        }
      }
      var children = Component(props, refOrContext);

      if (didScheduleRenderPhaseUpdate) {
        do {
          didScheduleRenderPhaseUpdate = false;
          numberOfReRenders += 1;
          {
            // Even when hot reloading, allow dependencies to stabilize
            // after first render to prevent infinite render phase updates.
            ignorePreviousDependencies = false;
          } // Start over from the beginning of the list

          nextCurrentHook = current !== null ? current.memoizedState : null;
          nextWorkInProgressHook = firstWorkInProgressHook;
          currentHook = null;
          workInProgressHook = null;
          componentUpdateQueue = null;
          {
            // Also validate hook order for cascading updates.
            hookTypesUpdateIndexDev = -1;
          }
          ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
          children = Component(props, refOrContext);
        } while (didScheduleRenderPhaseUpdate);

        renderPhaseUpdates = null;
        numberOfReRenders = 0;
      } // We can assume the previous dispatcher is always this one, since we set it
      // at the beginning of the render phase and there's no re-entrancy.


      ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
      var renderedWork = currentlyRenderingFiber$1;
      renderedWork.memoizedState = firstWorkInProgressHook;
      renderedWork.expirationTime = remainingExpirationTime;
      renderedWork.updateQueue = componentUpdateQueue;
      renderedWork.effectTag |= sideEffectTag;
      {
        renderedWork._debugHookTypes = hookTypesDev;
      } // This check uses currentHook so that it works the same in DEV and prod bundles.
      // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.

      var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;
      renderExpirationTime$1 = NoWork;
      currentlyRenderingFiber$1 = null;
      currentHook = null;
      nextCurrentHook = null;
      firstWorkInProgressHook = null;
      workInProgressHook = null;
      nextWorkInProgressHook = null;
      {
        currentHookNameInDev = null;
        hookTypesDev = null;
        hookTypesUpdateIndexDev = -1;
      }
      remainingExpirationTime = NoWork;
      componentUpdateQueue = null;
      sideEffectTag = 0; // These were reset above
      // didScheduleRenderPhaseUpdate = false;
      // renderPhaseUpdates = null;
      // numberOfReRenders = 0;

      (function () {
        if (!!didRenderTooFewHooks) {
          {
            throw ReactError(Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement."));
          }
        }
      })();

      return children;
    }

    function bailoutHooks(current, workInProgress, expirationTime) {
      workInProgress.updateQueue = current.updateQueue;
      workInProgress.effectTag &= ~(Passive | Update);

      if (current.expirationTime <= expirationTime) {
        current.expirationTime = NoWork;
      }
    }

    function resetHooks() {
      // We can assume the previous dispatcher is always this one, since we set it
      // at the beginning of the render phase and there's no re-entrancy.
      ReactCurrentDispatcher$1.current = ContextOnlyDispatcher; // This is used to reset the state of this module when a component throws.
      // It's also called inside mountIndeterminateComponent if we determine the
      // component is a module-style component.

      renderExpirationTime$1 = NoWork;
      currentlyRenderingFiber$1 = null;
      currentHook = null;
      nextCurrentHook = null;
      firstWorkInProgressHook = null;
      workInProgressHook = null;
      nextWorkInProgressHook = null;
      {
        hookTypesDev = null;
        hookTypesUpdateIndexDev = -1;
        currentHookNameInDev = null;
      }
      remainingExpirationTime = NoWork;
      componentUpdateQueue = null;
      sideEffectTag = 0;
      didScheduleRenderPhaseUpdate = false;
      renderPhaseUpdates = null;
      numberOfReRenders = 0;
    }

    function mountWorkInProgressHook() {
      var hook = {
        memoizedState: null,
        baseState: null,
        queue: null,
        baseUpdate: null,
        next: null
      };

      if (workInProgressHook === null) {
        // This is the first hook in the list
        firstWorkInProgressHook = workInProgressHook = hook;
      } else {
        // Append to the end of the list
        workInProgressHook = workInProgressHook.next = hook;
      }

      return workInProgressHook;
    }

    function updateWorkInProgressHook() {
      // This function is used both for updates and for re-renders triggered by a
      // render phase update. It assumes there is either a current hook we can
      // clone, or a work-in-progress hook from a previous render pass that we can
      // use as a base. When we reach the end of the base list, we must switch to
      // the dispatcher used for mounts.
      if (nextWorkInProgressHook !== null) {
        // There's already a work-in-progress. Reuse it.
        workInProgressHook = nextWorkInProgressHook;
        nextWorkInProgressHook = workInProgressHook.next;
        currentHook = nextCurrentHook;
        nextCurrentHook = currentHook !== null ? currentHook.next : null;
      } else {
        // Clone from the current hook.
        (function () {
          if (!(nextCurrentHook !== null)) {
            {
              throw ReactError(Error("Rendered more hooks than during the previous render."));
            }
          }
        })();

        currentHook = nextCurrentHook;
        var newHook = {
          memoizedState: currentHook.memoizedState,
          baseState: currentHook.baseState,
          queue: currentHook.queue,
          baseUpdate: currentHook.baseUpdate,
          next: null
        };

        if (workInProgressHook === null) {
          // This is the first hook in the list.
          workInProgressHook = firstWorkInProgressHook = newHook;
        } else {
          // Append to the end of the list.
          workInProgressHook = workInProgressHook.next = newHook;
        }

        nextCurrentHook = currentHook.next;
      }

      return workInProgressHook;
    }

    function createFunctionComponentUpdateQueue() {
      return {
        lastEffect: null
      };
    }

    function basicStateReducer(state, action) {
      return typeof action === 'function' ? action(state) : action;
    }

    function mountReducer(reducer, initialArg, init) {
      var hook = mountWorkInProgressHook();
      var initialState;

      if (init !== undefined) {
        initialState = init(initialArg);
      } else {
        initialState = initialArg;
      }

      hook.memoizedState = hook.baseState = initialState;
      var queue = hook.queue = {
        last: null,
        dispatch: null,
        lastRenderedReducer: reducer,
        lastRenderedState: initialState
      };
      var dispatch = queue.dispatch = dispatchAction.bind(null, // Flow doesn't know this is non-null, but we do.
      currentlyRenderingFiber$1, queue);
      return [hook.memoizedState, dispatch];
    }

    function updateReducer(reducer, initialArg, init) {
      var hook = updateWorkInProgressHook();
      var queue = hook.queue;

      (function () {
        if (!(queue !== null)) {
          {
            throw ReactError(Error("Should have a queue. This is likely a bug in React. Please file an issue."));
          }
        }
      })();

      queue.lastRenderedReducer = reducer;

      if (numberOfReRenders > 0) {
        // This is a re-render. Apply the new render phase updates to the previous
        // work-in-progress hook.
        var _dispatch = queue.dispatch;

        if (renderPhaseUpdates !== null) {
          // Render phase updates are stored in a map of queue -> linked list
          var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);

          if (firstRenderPhaseUpdate !== undefined) {
            renderPhaseUpdates.delete(queue);
            var newState = hook.memoizedState;
            var update = firstRenderPhaseUpdate;

            do {
              // Process this render phase update. We don't have to check the
              // priority because it will always be the same as the current
              // render's.
              var action = update.action;
              newState = reducer(newState, action);
              update = update.next;
            } while (update !== null); // Mark that the fiber performed work, but only if the new state is
            // different from the current state.


            if (!is$1(newState, hook.memoizedState)) {
              markWorkInProgressReceivedUpdate();
            }

            hook.memoizedState = newState; // Don't persist the state accumulated from the render phase updates to
            // the base state unless the queue is empty.
            // TODO: Not sure if this is the desired semantics, but it's what we
            // do for gDSFP. I can't remember why.

            if (hook.baseUpdate === queue.last) {
              hook.baseState = newState;
            }

            queue.lastRenderedState = newState;
            return [newState, _dispatch];
          }
        }

        return [hook.memoizedState, _dispatch];
      } // The last update in the entire queue


      var last = queue.last; // The last update that is part of the base state.

      var baseUpdate = hook.baseUpdate;
      var baseState = hook.baseState; // Find the first unprocessed update.

      var first;

      if (baseUpdate !== null) {
        if (last !== null) {
          // For the first update, the queue is a circular linked list where
          // `queue.last.next = queue.first`. Once the first update commits, and
          // the `baseUpdate` is no longer empty, we can unravel the list.
          last.next = null;
        }

        first = baseUpdate.next;
      } else {
        first = last !== null ? last.next : null;
      }

      if (first !== null) {
        var _newState = baseState;
        var newBaseState = null;
        var newBaseUpdate = null;
        var prevUpdate = baseUpdate;
        var _update = first;
        var didSkip = false;

        do {
          var updateExpirationTime = _update.expirationTime;

          if (updateExpirationTime < renderExpirationTime$1) {
            // Priority is insufficient. Skip this update. If this is the first
            // skipped update, the previous update/state is the new base
            // update/state.
            if (!didSkip) {
              didSkip = true;
              newBaseUpdate = prevUpdate;
              newBaseState = _newState;
            } // Update the remaining priority in the queue.


            if (updateExpirationTime > remainingExpirationTime) {
              remainingExpirationTime = updateExpirationTime;
              markUnprocessedUpdateTime(remainingExpirationTime);
            }
          } else {
            // This update does have sufficient priority.
            // Mark the event time of this update as relevant to this render pass.
            // TODO: This should ideally use the true event time of this update rather than
            // its priority which is a derived and not reverseable value.
            // TODO: We should skip this update if it was already committed but currently
            // we have no way of detecting the difference between a committed and suspended
            // update here.
            markRenderEventTimeAndConfig(updateExpirationTime, _update.suspenseConfig); // Process this update.

            if (_update.eagerReducer === reducer) {
              // If this update was processed eagerly, and its reducer matches the
              // current reducer, we can use the eagerly computed state.
              _newState = _update.eagerState;
            } else {
              var _action = _update.action;
              _newState = reducer(_newState, _action);
            }
          }

          prevUpdate = _update;
          _update = _update.next;
        } while (_update !== null && _update !== first);

        if (!didSkip) {
          newBaseUpdate = prevUpdate;
          newBaseState = _newState;
        } // Mark that the fiber performed work, but only if the new state is
        // different from the current state.


        if (!is$1(_newState, hook.memoizedState)) {
          markWorkInProgressReceivedUpdate();
        }

        hook.memoizedState = _newState;
        hook.baseUpdate = newBaseUpdate;
        hook.baseState = newBaseState;
        queue.lastRenderedState = _newState;
      }

      var dispatch = queue.dispatch;
      return [hook.memoizedState, dispatch];
    }

    function mountState(initialState) {
      var hook = mountWorkInProgressHook();

      if (typeof initialState === 'function') {
        initialState = initialState();
      }

      hook.memoizedState = hook.baseState = initialState;
      var queue = hook.queue = {
        last: null,
        dispatch: null,
        lastRenderedReducer: basicStateReducer,
        lastRenderedState: initialState
      };
      var dispatch = queue.dispatch = dispatchAction.bind(null, // Flow doesn't know this is non-null, but we do.
      currentlyRenderingFiber$1, queue);
      return [hook.memoizedState, dispatch];
    }

    function updateState(initialState) {
      return updateReducer(basicStateReducer, initialState);
    }

    function pushEffect(tag, create, destroy, deps) {
      var effect = {
        tag: tag,
        create: create,
        destroy: destroy,
        deps: deps,
        // Circular
        next: null
      };

      if (componentUpdateQueue === null) {
        componentUpdateQueue = createFunctionComponentUpdateQueue();
        componentUpdateQueue.lastEffect = effect.next = effect;
      } else {
        var lastEffect = componentUpdateQueue.lastEffect;

        if (lastEffect === null) {
          componentUpdateQueue.lastEffect = effect.next = effect;
        } else {
          var firstEffect = lastEffect.next;
          lastEffect.next = effect;
          effect.next = firstEffect;
          componentUpdateQueue.lastEffect = effect;
        }
      }

      return effect;
    }

    function mountRef(initialValue) {
      var hook = mountWorkInProgressHook();
      var ref = {
        current: initialValue
      };
      {
        Object.seal(ref);
      }
      hook.memoizedState = ref;
      return ref;
    }

    function updateRef(initialValue) {
      var hook = updateWorkInProgressHook();
      return hook.memoizedState;
    }

    function mountEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
      var hook = mountWorkInProgressHook();
      var nextDeps = deps === undefined ? null : deps;
      sideEffectTag |= fiberEffectTag;
      hook.memoizedState = pushEffect(hookEffectTag, create, undefined, nextDeps);
    }

    function updateEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
      var hook = updateWorkInProgressHook();
      var nextDeps = deps === undefined ? null : deps;
      var destroy = undefined;

      if (currentHook !== null) {
        var prevEffect = currentHook.memoizedState;
        destroy = prevEffect.destroy;

        if (nextDeps !== null) {
          var prevDeps = prevEffect.deps;

          if (areHookInputsEqual(nextDeps, prevDeps)) {
            pushEffect(NoEffect$1, create, destroy, nextDeps);
            return;
          }
        }
      }

      sideEffectTag |= fiberEffectTag;
      hook.memoizedState = pushEffect(hookEffectTag, create, destroy, nextDeps);
    }

    function mountEffect(create, deps) {
      {
        // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
        if ('undefined' !== typeof jest) {
          warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber$1);
        }
      }
      return mountEffectImpl(Update | Passive, UnmountPassive | MountPassive, create, deps);
    }

    function updateEffect(create, deps) {
      {
        // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
        if ('undefined' !== typeof jest) {
          warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber$1);
        }
      }
      return updateEffectImpl(Update | Passive, UnmountPassive | MountPassive, create, deps);
    }

    function mountLayoutEffect(create, deps) {
      return mountEffectImpl(Update, UnmountMutation | MountLayout, create, deps);
    }

    function updateLayoutEffect(create, deps) {
      return updateEffectImpl(Update, UnmountMutation | MountLayout, create, deps);
    }

    function imperativeHandleEffect(create, ref) {
      if (typeof ref === 'function') {
        var refCallback = ref;

        var _inst = create();

        refCallback(_inst);
        return function () {
          refCallback(null);
        };
      } else if (ref !== null && ref !== undefined) {
        var refObject = ref;
        {
          !refObject.hasOwnProperty('current') ? warning$1(false, 'Expected useImperativeHandle() first argument to either be a ' + 'ref callback or React.createRef() object. Instead received: %s.', 'an object with keys {' + Object.keys(refObject).join(', ') + '}') : void 0;
        }

        var _inst2 = create();

        refObject.current = _inst2;
        return function () {
          refObject.current = null;
        };
      }
    }

    function mountImperativeHandle(ref, create, deps) {
      {
        !(typeof create === 'function') ? warning$1(false, 'Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null') : void 0;
      } // TODO: If deps are provided, should we skip comparing the ref itself?

      var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;
      return mountEffectImpl(Update, UnmountMutation | MountLayout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
    }

    function updateImperativeHandle(ref, create, deps) {
      {
        !(typeof create === 'function') ? warning$1(false, 'Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null') : void 0;
      } // TODO: If deps are provided, should we skip comparing the ref itself?

      var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;
      return updateEffectImpl(Update, UnmountMutation | MountLayout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
    }

    function mountDebugValue(value, formatterFn) {// This hook is normally a no-op.
      // The react-debug-hooks package injects its own implementation
      // so that e.g. DevTools can display custom hook values.
    }

    var updateDebugValue = mountDebugValue;

    function mountCallback(callback, deps) {
      var hook = mountWorkInProgressHook();
      var nextDeps = deps === undefined ? null : deps;
      hook.memoizedState = [callback, nextDeps];
      return callback;
    }

    function updateCallback(callback, deps) {
      var hook = updateWorkInProgressHook();
      var nextDeps = deps === undefined ? null : deps;
      var prevState = hook.memoizedState;

      if (prevState !== null) {
        if (nextDeps !== null) {
          var prevDeps = prevState[1];

          if (areHookInputsEqual(nextDeps, prevDeps)) {
            return prevState[0];
          }
        }
      }

      hook.memoizedState = [callback, nextDeps];
      return callback;
    }

    function mountMemo(nextCreate, deps) {
      var hook = mountWorkInProgressHook();
      var nextDeps = deps === undefined ? null : deps;
      var nextValue = nextCreate();
      hook.memoizedState = [nextValue, nextDeps];
      return nextValue;
    }

    function updateMemo(nextCreate, deps) {
      var hook = updateWorkInProgressHook();
      var nextDeps = deps === undefined ? null : deps;
      var prevState = hook.memoizedState;

      if (prevState !== null) {
        // Assume these are defined. If they're not, areHookInputsEqual will warn.
        if (nextDeps !== null) {
          var prevDeps = prevState[1];

          if (areHookInputsEqual(nextDeps, prevDeps)) {
            return prevState[0];
          }
        }
      }

      var nextValue = nextCreate();
      hook.memoizedState = [nextValue, nextDeps];
      return nextValue;
    }

    function dispatchAction(fiber, queue, action) {
      (function () {
        if (!(numberOfReRenders < RE_RENDER_LIMIT)) {
          {
            throw ReactError(Error("Too many re-renders. React limits the number of renders to prevent an infinite loop."));
          }
        }
      })();

      {
        !(typeof arguments[3] !== 'function') ? warning$1(false, "State updates from the useState() and useReducer() Hooks don't support the " + 'second callback argument. To execute a side effect after ' + 'rendering, declare it in the component body with useEffect().') : void 0;
      }
      var alternate = fiber.alternate;

      if (fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1) {
        // This is a render phase update. Stash it in a lazily-created map of
        // queue -> linked list of updates. After this render pass, we'll restart
        // and apply the stashed updates on top of the work-in-progress hook.
        didScheduleRenderPhaseUpdate = true;
        var update = {
          expirationTime: renderExpirationTime$1,
          suspenseConfig: null,
          action: action,
          eagerReducer: null,
          eagerState: null,
          next: null
        };
        {
          update.priority = getCurrentPriorityLevel();
        }

        if (renderPhaseUpdates === null) {
          renderPhaseUpdates = new Map();
        }

        var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);

        if (firstRenderPhaseUpdate === undefined) {
          renderPhaseUpdates.set(queue, update);
        } else {
          // Append the update to the end of the list.
          var lastRenderPhaseUpdate = firstRenderPhaseUpdate;

          while (lastRenderPhaseUpdate.next !== null) {
            lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;
          }

          lastRenderPhaseUpdate.next = update;
        }
      } else {
        var currentTime = requestCurrentTime();
        var suspenseConfig = requestCurrentSuspenseConfig();
        var expirationTime = computeExpirationForFiber(currentTime, fiber, suspenseConfig);
        var _update2 = {
          expirationTime: expirationTime,
          suspenseConfig: suspenseConfig,
          action: action,
          eagerReducer: null,
          eagerState: null,
          next: null
        };
        {
          _update2.priority = getCurrentPriorityLevel();
        } // Append the update to the end of the list.

        var last = queue.last;

        if (last === null) {
          // This is the first update. Create a circular list.
          _update2.next = _update2;
        } else {
          var first = last.next;

          if (first !== null) {
            // Still circular.
            _update2.next = first;
          }

          last.next = _update2;
        }

        queue.last = _update2;

        if (fiber.expirationTime === NoWork && (alternate === null || alternate.expirationTime === NoWork)) {
          // The queue is currently empty, which means we can eagerly compute the
          // next state before entering the render phase. If the new state is the
          // same as the current state, we may be able to bail out entirely.
          var lastRenderedReducer = queue.lastRenderedReducer;

          if (lastRenderedReducer !== null) {
            var prevDispatcher;
            {
              prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            }

            try {
              var currentState = queue.lastRenderedState;
              var eagerState = lastRenderedReducer(currentState, action); // Stash the eagerly computed state, and the reducer used to compute
              // it, on the update object. If the reducer hasn't changed by the
              // time we enter the render phase, then the eager state can be used
              // without calling the reducer again.

              _update2.eagerReducer = lastRenderedReducer;
              _update2.eagerState = eagerState;

              if (is$1(eagerState, currentState)) {
                // Fast path. We can bail out without scheduling React to re-render.
                // It's still possible that we'll need to rebase this update later,
                // if the component re-renders for a different reason and by that
                // time the reducer has changed.
                return;
              }
            } catch (error) {// Suppress the error. It will throw again in the render phase.
            } finally {
              {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            }
          }
        }

        {
          // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
          if ('undefined' !== typeof jest) {
            warnIfNotScopedWithMatchingAct(fiber);
            warnIfNotCurrentlyActingUpdatesInDev(fiber);
          }
        }
        scheduleWork(fiber, expirationTime);
      }
    }

    var ContextOnlyDispatcher = {
      readContext: readContext,
      useCallback: throwInvalidHookError,
      useContext: throwInvalidHookError,
      useEffect: throwInvalidHookError,
      useImperativeHandle: throwInvalidHookError,
      useLayoutEffect: throwInvalidHookError,
      useMemo: throwInvalidHookError,
      useReducer: throwInvalidHookError,
      useRef: throwInvalidHookError,
      useState: throwInvalidHookError,
      useDebugValue: throwInvalidHookError,
      useResponder: throwInvalidHookError
    };
    var HooksDispatcherOnMountInDEV = null;
    var HooksDispatcherOnMountWithHookTypesInDEV = null;
    var HooksDispatcherOnUpdateInDEV = null;
    var InvalidNestedHooksDispatcherOnMountInDEV = null;
    var InvalidNestedHooksDispatcherOnUpdateInDEV = null;
    {
      var warnInvalidContextAccess = function () {
        warning$1(false, 'Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');
      };

      var warnInvalidHookAccess = function () {
        warning$1(false, 'Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. ' + 'You can only call Hooks at the top level of your React function. ' + 'For more information, see ' + 'https://fb.me/rules-of-hooks');
      };

      HooksDispatcherOnMountInDEV = {
        readContext: function (context, observedBits) {
          return readContext(context, observedBits);
        },
        useCallback: function (callback, deps) {
          currentHookNameInDev = 'useCallback';
          mountHookTypesDev();
          checkDepsAreArrayDev(deps);
          return mountCallback(callback, deps);
        },
        useContext: function (context, observedBits) {
          currentHookNameInDev = 'useContext';
          mountHookTypesDev();
          return readContext(context, observedBits);
        },
        useEffect: function (create, deps) {
          currentHookNameInDev = 'useEffect';
          mountHookTypesDev();
          checkDepsAreArrayDev(deps);
          return mountEffect(create, deps);
        },
        useImperativeHandle: function (ref, create, deps) {
          currentHookNameInDev = 'useImperativeHandle';
          mountHookTypesDev();
          checkDepsAreArrayDev(deps);
          return mountImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function (create, deps) {
          currentHookNameInDev = 'useLayoutEffect';
          mountHookTypesDev();
          checkDepsAreArrayDev(deps);
          return mountLayoutEffect(create, deps);
        },
        useMemo: function (create, deps) {
          currentHookNameInDev = 'useMemo';
          mountHookTypesDev();
          checkDepsAreArrayDev(deps);
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

          try {
            return mountMemo(create, deps);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useReducer: function (reducer, initialArg, init) {
          currentHookNameInDev = 'useReducer';
          mountHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

          try {
            return mountReducer(reducer, initialArg, init);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useRef: function (initialValue) {
          currentHookNameInDev = 'useRef';
          mountHookTypesDev();
          return mountRef(initialValue);
        },
        useState: function (initialState) {
          currentHookNameInDev = 'useState';
          mountHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

          try {
            return mountState(initialState);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useDebugValue: function (value, formatterFn) {
          currentHookNameInDev = 'useDebugValue';
          mountHookTypesDev();
          return mountDebugValue(value, formatterFn);
        },
        useResponder: function (responder, props) {
          currentHookNameInDev = 'useResponder';
          mountHookTypesDev();
          return createResponderListener(responder, props);
        }
      };
      HooksDispatcherOnMountWithHookTypesInDEV = {
        readContext: function (context, observedBits) {
          return readContext(context, observedBits);
        },
        useCallback: function (callback, deps) {
          currentHookNameInDev = 'useCallback';
          updateHookTypesDev();
          return mountCallback(callback, deps);
        },
        useContext: function (context, observedBits) {
          currentHookNameInDev = 'useContext';
          updateHookTypesDev();
          return readContext(context, observedBits);
        },
        useEffect: function (create, deps) {
          currentHookNameInDev = 'useEffect';
          updateHookTypesDev();
          return mountEffect(create, deps);
        },
        useImperativeHandle: function (ref, create, deps) {
          currentHookNameInDev = 'useImperativeHandle';
          updateHookTypesDev();
          return mountImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function (create, deps) {
          currentHookNameInDev = 'useLayoutEffect';
          updateHookTypesDev();
          return mountLayoutEffect(create, deps);
        },
        useMemo: function (create, deps) {
          currentHookNameInDev = 'useMemo';
          updateHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

          try {
            return mountMemo(create, deps);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useReducer: function (reducer, initialArg, init) {
          currentHookNameInDev = 'useReducer';
          updateHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

          try {
            return mountReducer(reducer, initialArg, init);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useRef: function (initialValue) {
          currentHookNameInDev = 'useRef';
          updateHookTypesDev();
          return mountRef(initialValue);
        },
        useState: function (initialState) {
          currentHookNameInDev = 'useState';
          updateHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

          try {
            return mountState(initialState);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useDebugValue: function (value, formatterFn) {
          currentHookNameInDev = 'useDebugValue';
          updateHookTypesDev();
          return mountDebugValue(value, formatterFn);
        },
        useResponder: function (responder, props) {
          currentHookNameInDev = 'useResponder';
          updateHookTypesDev();
          return createResponderListener(responder, props);
        }
      };
      HooksDispatcherOnUpdateInDEV = {
        readContext: function (context, observedBits) {
          return readContext(context, observedBits);
        },
        useCallback: function (callback, deps) {
          currentHookNameInDev = 'useCallback';
          updateHookTypesDev();
          return updateCallback(callback, deps);
        },
        useContext: function (context, observedBits) {
          currentHookNameInDev = 'useContext';
          updateHookTypesDev();
          return readContext(context, observedBits);
        },
        useEffect: function (create, deps) {
          currentHookNameInDev = 'useEffect';
          updateHookTypesDev();
          return updateEffect(create, deps);
        },
        useImperativeHandle: function (ref, create, deps) {
          currentHookNameInDev = 'useImperativeHandle';
          updateHookTypesDev();
          return updateImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function (create, deps) {
          currentHookNameInDev = 'useLayoutEffect';
          updateHookTypesDev();
          return updateLayoutEffect(create, deps);
        },
        useMemo: function (create, deps) {
          currentHookNameInDev = 'useMemo';
          updateHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

          try {
            return updateMemo(create, deps);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useReducer: function (reducer, initialArg, init) {
          currentHookNameInDev = 'useReducer';
          updateHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

          try {
            return updateReducer(reducer, initialArg, init);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useRef: function (initialValue) {
          currentHookNameInDev = 'useRef';
          updateHookTypesDev();
          return updateRef(initialValue);
        },
        useState: function (initialState) {
          currentHookNameInDev = 'useState';
          updateHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

          try {
            return updateState(initialState);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useDebugValue: function (value, formatterFn) {
          currentHookNameInDev = 'useDebugValue';
          updateHookTypesDev();
          return updateDebugValue(value, formatterFn);
        },
        useResponder: function (responder, props) {
          currentHookNameInDev = 'useResponder';
          updateHookTypesDev();
          return createResponderListener(responder, props);
        }
      };
      InvalidNestedHooksDispatcherOnMountInDEV = {
        readContext: function (context, observedBits) {
          warnInvalidContextAccess();
          return readContext(context, observedBits);
        },
        useCallback: function (callback, deps) {
          currentHookNameInDev = 'useCallback';
          warnInvalidHookAccess();
          mountHookTypesDev();
          return mountCallback(callback, deps);
        },
        useContext: function (context, observedBits) {
          currentHookNameInDev = 'useContext';
          warnInvalidHookAccess();
          mountHookTypesDev();
          return readContext(context, observedBits);
        },
        useEffect: function (create, deps) {
          currentHookNameInDev = 'useEffect';
          warnInvalidHookAccess();
          mountHookTypesDev();
          return mountEffect(create, deps);
        },
        useImperativeHandle: function (ref, create, deps) {
          currentHookNameInDev = 'useImperativeHandle';
          warnInvalidHookAccess();
          mountHookTypesDev();
          return mountImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function (create, deps) {
          currentHookNameInDev = 'useLayoutEffect';
          warnInvalidHookAccess();
          mountHookTypesDev();
          return mountLayoutEffect(create, deps);
        },
        useMemo: function (create, deps) {
          currentHookNameInDev = 'useMemo';
          warnInvalidHookAccess();
          mountHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

          try {
            return mountMemo(create, deps);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useReducer: function (reducer, initialArg, init) {
          currentHookNameInDev = 'useReducer';
          warnInvalidHookAccess();
          mountHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

          try {
            return mountReducer(reducer, initialArg, init);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useRef: function (initialValue) {
          currentHookNameInDev = 'useRef';
          warnInvalidHookAccess();
          mountHookTypesDev();
          return mountRef(initialValue);
        },
        useState: function (initialState) {
          currentHookNameInDev = 'useState';
          warnInvalidHookAccess();
          mountHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

          try {
            return mountState(initialState);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useDebugValue: function (value, formatterFn) {
          currentHookNameInDev = 'useDebugValue';
          warnInvalidHookAccess();
          mountHookTypesDev();
          return mountDebugValue(value, formatterFn);
        },
        useResponder: function (responder, props) {
          currentHookNameInDev = 'useResponder';
          warnInvalidHookAccess();
          mountHookTypesDev();
          return createResponderListener(responder, props);
        }
      };
      InvalidNestedHooksDispatcherOnUpdateInDEV = {
        readContext: function (context, observedBits) {
          warnInvalidContextAccess();
          return readContext(context, observedBits);
        },
        useCallback: function (callback, deps) {
          currentHookNameInDev = 'useCallback';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return updateCallback(callback, deps);
        },
        useContext: function (context, observedBits) {
          currentHookNameInDev = 'useContext';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return readContext(context, observedBits);
        },
        useEffect: function (create, deps) {
          currentHookNameInDev = 'useEffect';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return updateEffect(create, deps);
        },
        useImperativeHandle: function (ref, create, deps) {
          currentHookNameInDev = 'useImperativeHandle';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return updateImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function (create, deps) {
          currentHookNameInDev = 'useLayoutEffect';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return updateLayoutEffect(create, deps);
        },
        useMemo: function (create, deps) {
          currentHookNameInDev = 'useMemo';
          warnInvalidHookAccess();
          updateHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

          try {
            return updateMemo(create, deps);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useReducer: function (reducer, initialArg, init) {
          currentHookNameInDev = 'useReducer';
          warnInvalidHookAccess();
          updateHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

          try {
            return updateReducer(reducer, initialArg, init);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useRef: function (initialValue) {
          currentHookNameInDev = 'useRef';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return updateRef(initialValue);
        },
        useState: function (initialState) {
          currentHookNameInDev = 'useState';
          warnInvalidHookAccess();
          updateHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

          try {
            return updateState(initialState);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useDebugValue: function (value, formatterFn) {
          currentHookNameInDev = 'useDebugValue';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return updateDebugValue(value, formatterFn);
        },
        useResponder: function (responder, props) {
          currentHookNameInDev = 'useResponder';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return createResponderListener(responder, props);
        }
      };
    } // CommonJS interop named imports.

    var now$1 = Scheduler.unstable_now;
    var commitTime = 0;
    var profilerStartTime = -1;

    function getCommitTime() {
      return commitTime;
    }

    function recordCommitTime() {
      if (!enableProfilerTimer) {
        return;
      }

      commitTime = now$1();
    }

    function startProfilerTimer(fiber) {
      if (!enableProfilerTimer) {
        return;
      }

      profilerStartTime = now$1();

      if (fiber.actualStartTime < 0) {
        fiber.actualStartTime = now$1();
      }
    }

    function stopProfilerTimerIfRunning(fiber) {
      if (!enableProfilerTimer) {
        return;
      }

      profilerStartTime = -1;
    }

    function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {
      if (!enableProfilerTimer) {
        return;
      }

      if (profilerStartTime >= 0) {
        var elapsedTime = now$1() - profilerStartTime;
        fiber.actualDuration += elapsedTime;

        if (overrideBaseTime) {
          fiber.selfBaseDuration = elapsedTime;
        }

        profilerStartTime = -1;
      }
    } // This may have been an insertion or a hydration.


    var hydrationParentFiber = null;
    var nextHydratableInstance = null;
    var isHydrating = false;

    function warnIfHydrating() {
      {
        !!isHydrating ? warning$1(false, 'We should not be hydrating here. This is a bug in React. Please file a bug.') : void 0;
      }
    }

    function enterHydrationState(fiber) {
      if (!supportsHydration) {
        return false;
      }

      var parentInstance = fiber.stateNode.containerInfo;
      nextHydratableInstance = getFirstHydratableChild(parentInstance);
      hydrationParentFiber = fiber;
      isHydrating = true;
      return true;
    }

    function reenterHydrationStateFromDehydratedSuspenseInstance(fiber, suspenseInstance) {
      if (!supportsHydration) {
        return false;
      }

      nextHydratableInstance = getNextHydratableSibling(suspenseInstance);
      popToNextHostParent(fiber);
      isHydrating = true;
      return true;
    }

    function deleteHydratableInstance(returnFiber, instance) {
      {
        switch (returnFiber.tag) {
          case HostRoot:
            didNotHydrateContainerInstance(returnFiber.stateNode.containerInfo, instance);
            break;

          case HostComponent:
            didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance);
            break;
        }
      }
      var childToDelete = createFiberFromHostInstanceForDeletion();
      childToDelete.stateNode = instance;
      childToDelete.return = returnFiber;
      childToDelete.effectTag = Deletion; // This might seem like it belongs on progressedFirstDeletion. However,
      // these children are not part of the reconciliation list of children.
      // Even if we abort and rereconcile the children, that will try to hydrate
      // again and the nodes are still in the host tree so these will be
      // recreated.

      if (returnFiber.lastEffect !== null) {
        returnFiber.lastEffect.nextEffect = childToDelete;
        returnFiber.lastEffect = childToDelete;
      } else {
        returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
      }
    }

    function insertNonHydratedInstance(returnFiber, fiber) {
      fiber.effectTag = fiber.effectTag & ~Hydrating | Placement;
      {
        switch (returnFiber.tag) {
          case HostRoot:
            {
              var parentContainer = returnFiber.stateNode.containerInfo;

              switch (fiber.tag) {
                case HostComponent:
                  var type = fiber.type;
                  var props = fiber.pendingProps;
                  didNotFindHydratableContainerInstance(parentContainer, type, props);
                  break;

                case HostText:
                  var text = fiber.pendingProps;
                  didNotFindHydratableContainerTextInstance(parentContainer, text);
                  break;

                case SuspenseComponent:
                  break;
              }

              break;
            }

          case HostComponent:
            {
              var parentType = returnFiber.type;
              var parentProps = returnFiber.memoizedProps;
              var parentInstance = returnFiber.stateNode;

              switch (fiber.tag) {
                case HostComponent:
                  var _type = fiber.type;
                  var _props = fiber.pendingProps;
                  didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type, _props);
                  break;

                case HostText:
                  var _text = fiber.pendingProps;
                  didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text);
                  break;

                case SuspenseComponent:
                  didNotFindHydratableSuspenseInstance(parentType, parentProps, parentInstance);
                  break;
              }

              break;
            }

          default:
            return;
        }
      }
    }

    function tryHydrate(fiber, nextInstance) {
      switch (fiber.tag) {
        case HostComponent:
          {
            var type = fiber.type;
            var props = fiber.pendingProps;
            var instance = canHydrateInstance(nextInstance, type, props);

            if (instance !== null) {
              fiber.stateNode = instance;
              return true;
            }

            return false;
          }

        case HostText:
          {
            var text = fiber.pendingProps;
            var textInstance = canHydrateTextInstance(nextInstance, text);

            if (textInstance !== null) {
              fiber.stateNode = textInstance;
              return true;
            }

            return false;
          }

        case SuspenseComponent:
          {
            if (enableSuspenseServerRenderer) {
              var suspenseInstance = canHydrateSuspenseInstance(nextInstance);

              if (suspenseInstance !== null) {
                var suspenseState = {
                  dehydrated: suspenseInstance,
                  retryTime: Never
                };
                fiber.memoizedState = suspenseState; // Store the dehydrated fragment as a child fiber.
                // This simplifies the code for getHostSibling and deleting nodes,
                // since it doesn't have to consider all Suspense boundaries and
                // check if they're dehydrated ones or not.

                var dehydratedFragment = createFiberFromDehydratedFragment(suspenseInstance);
                dehydratedFragment.return = fiber;
                fiber.child = dehydratedFragment;
                return true;
              }
            }

            return false;
          }

        default:
          return false;
      }
    }

    function tryToClaimNextHydratableInstance(fiber) {
      if (!isHydrating) {
        return;
      }

      var nextInstance = nextHydratableInstance;

      if (!nextInstance) {
        // Nothing to hydrate. Make it an insertion.
        insertNonHydratedInstance(hydrationParentFiber, fiber);
        isHydrating = false;
        hydrationParentFiber = fiber;
        return;
      }

      var firstAttemptedInstance = nextInstance;

      if (!tryHydrate(fiber, nextInstance)) {
        // If we can't hydrate this instance let's try the next one.
        // We use this as a heuristic. It's based on intuition and not data so it
        // might be flawed or unnecessary.
        nextInstance = getNextHydratableSibling(firstAttemptedInstance);

        if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
          // Nothing to hydrate. Make it an insertion.
          insertNonHydratedInstance(hydrationParentFiber, fiber);
          isHydrating = false;
          hydrationParentFiber = fiber;
          return;
        } // We matched the next one, we'll now assume that the first one was
        // superfluous and we'll delete it. Since we can't eagerly delete it
        // we'll have to schedule a deletion. To do that, this node needs a dummy
        // fiber associated with it.


        deleteHydratableInstance(hydrationParentFiber, firstAttemptedInstance);
      }

      hydrationParentFiber = fiber;
      nextHydratableInstance = getFirstHydratableChild(nextInstance);
    }

    function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
      if (!supportsHydration) {
        (function () {
          {
            {
              throw ReactError(Error("Expected prepareToHydrateHostInstance() to never be called. This error is likely caused by a bug in React. Please file an issue."));
            }
          }
        })();
      }

      var instance = fiber.stateNode;
      var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber); // TODO: Type this specific to this type of component.

      fiber.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
      // is a new ref we mark this as an update.

      if (updatePayload !== null) {
        return true;
      }

      return false;
    }

    function prepareToHydrateHostTextInstance(fiber) {
      if (!supportsHydration) {
        (function () {
          {
            {
              throw ReactError(Error("Expected prepareToHydrateHostTextInstance() to never be called. This error is likely caused by a bug in React. Please file an issue."));
            }
          }
        })();
      }

      var textInstance = fiber.stateNode;
      var textContent = fiber.memoizedProps;
      var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);
      {
        if (shouldUpdate) {
          // We assume that prepareToHydrateHostTextInstance is called in a context where the
          // hydration parent is the parent host component of this host text.
          var returnFiber = hydrationParentFiber;

          if (returnFiber !== null) {
            switch (returnFiber.tag) {
              case HostRoot:
                {
                  var parentContainer = returnFiber.stateNode.containerInfo;
                  didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent);
                  break;
                }

              case HostComponent:
                {
                  var parentType = returnFiber.type;
                  var parentProps = returnFiber.memoizedProps;
                  var parentInstance = returnFiber.stateNode;
                  didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent);
                  break;
                }
            }
          }
        }
      }
      return shouldUpdate;
    }

    function prepareToHydrateHostSuspenseInstance(fiber) {
      if (!supportsHydration) {
        (function () {
          {
            {
              throw ReactError(Error("Expected prepareToHydrateHostSuspenseInstance() to never be called. This error is likely caused by a bug in React. Please file an issue."));
            }
          }
        })();
      }

      var suspenseState = fiber.memoizedState;
      var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;

      (function () {
        if (!suspenseInstance) {
          {
            throw ReactError(Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue."));
          }
        }
      })();

      hydrateSuspenseInstance(suspenseInstance, fiber);
    }

    function skipPastDehydratedSuspenseInstance(fiber) {
      if (!supportsHydration) {
        (function () {
          {
            {
              throw ReactError(Error("Expected skipPastDehydratedSuspenseInstance() to never be called. This error is likely caused by a bug in React. Please file an issue."));
            }
          }
        })();
      }

      var suspenseState = fiber.memoizedState;
      var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;

      if (suspenseInstance === null) {
        // This Suspense boundary was hydrated without a match.
        return nextHydratableInstance;
      }

      return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);
    }

    function popToNextHostParent(fiber) {
      var parent = fiber.return;

      while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== SuspenseComponent) {
        parent = parent.return;
      }

      hydrationParentFiber = parent;
    }

    function popHydrationState(fiber) {
      if (!supportsHydration) {
        return false;
      }

      if (fiber !== hydrationParentFiber) {
        // We're deeper than the current hydration context, inside an inserted
        // tree.
        return false;
      }

      if (!isHydrating) {
        // If we're not currently hydrating but we're in a hydration context, then
        // we were an insertion and now need to pop up reenter hydration of our
        // siblings.
        popToNextHostParent(fiber);
        isHydrating = true;
        return false;
      }

      var type = fiber.type; // If we have any remaining hydratable nodes, we need to delete them now.
      // We only do this deeper than head and body since they tend to have random
      // other nodes in them. We also ignore components with pure text content in
      // side of them.
      // TODO: Better heuristic.

      if (fiber.tag !== HostComponent || type !== 'head' && type !== 'body' && !shouldSetTextContent(type, fiber.memoizedProps)) {
        var nextInstance = nextHydratableInstance;

        while (nextInstance) {
          deleteHydratableInstance(fiber, nextInstance);
          nextInstance = getNextHydratableSibling(nextInstance);
        }
      }

      popToNextHostParent(fiber);

      if (fiber.tag === SuspenseComponent) {
        nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);
      } else {
        nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
      }

      return true;
    }

    function resetHydrationState() {
      if (!supportsHydration) {
        return;
      }

      hydrationParentFiber = null;
      nextHydratableInstance = null;
      isHydrating = false;
    }

    var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;
    var didReceiveUpdate = false;
    var didWarnAboutBadClass;
    var didWarnAboutModulePatternComponent;
    var didWarnAboutContextTypeOnFunctionComponent;
    var didWarnAboutGetDerivedStateOnFunctionComponent;
    var didWarnAboutFunctionRefs;
    var didWarnAboutReassigningProps;
    var didWarnAboutMaxDuration;
    var didWarnAboutRevealOrder;
    var didWarnAboutTailOptions;
    var didWarnAboutDefaultPropsOnFunctionComponent;
    {
      didWarnAboutBadClass = {};
      didWarnAboutModulePatternComponent = {};
      didWarnAboutContextTypeOnFunctionComponent = {};
      didWarnAboutGetDerivedStateOnFunctionComponent = {};
      didWarnAboutFunctionRefs = {};
      didWarnAboutReassigningProps = false;
      didWarnAboutMaxDuration = false;
      didWarnAboutRevealOrder = {};
      didWarnAboutTailOptions = {};
      didWarnAboutDefaultPropsOnFunctionComponent = {};
    }

    function reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime) {
      if (current$$1 === null) {
        // If this is a fresh new component that hasn't been rendered yet, we
        // won't update its child set by applying minimal side-effects. Instead,
        // we will add them all to the child before it gets rendered. That means
        // we can optimize this reconciliation pass by not tracking side-effects.
        workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
      } else {
        // If the current child is the same as the work in progress, it means that
        // we haven't yet started any work on these children. Therefore, we use
        // the clone algorithm to create a copy of all the current children.
        // If we had any progressed work already, that is invalid at this point so
        // let's throw it out.
        workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, nextChildren, renderExpirationTime);
      }
    }

    function forceUnmountCurrentAndReconcile(current$$1, workInProgress, nextChildren, renderExpirationTime) {
      // This function is fork of reconcileChildren. It's used in cases where we
      // want to reconcile without matching against the existing set. This has the
      // effect of all current children being unmounted; even if the type and key
      // are the same, the old child is unmounted and a new child is created.
      //
      // To do this, we're going to go through the reconcile algorithm twice. In
      // the first pass, we schedule a deletion for all the current children by
      // passing null.
      workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, null, renderExpirationTime); // In the second pass, we mount the new children. The trick here is that we
      // pass null in place of where we usually pass the current child set. This has
      // the effect of remounting all children regardless of whether their their
      // identity matches.

      workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
    }

    function updateForwardRef(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
      // TODO: current can be non-null here even if the component
      // hasn't yet mounted. This happens after the first render suspends.
      // We'll need to figure out if this is fine or can cause issues.
      {
        if (workInProgress.type !== workInProgress.elementType) {
          // Lazy component props can't be validated in createElement
          // because they're only guaranteed to be resolved here.
          var innerPropTypes = Component.propTypes;

          if (innerPropTypes) {
            checkPropTypes(innerPropTypes, nextProps, // Resolved props
            'prop', getComponentName(Component), getCurrentFiberStackInDev);
          }
        }
      }
      var render = Component.render;
      var ref = workInProgress.ref; // The rest is a fork of updateFunctionComponent

      var nextChildren;
      prepareToReadContext(workInProgress, renderExpirationTime);
      {
        ReactCurrentOwner$3.current = workInProgress;
        setCurrentPhase('render');
        nextChildren = renderWithHooks(current$$1, workInProgress, render, nextProps, ref, renderExpirationTime);

        if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
          // Only double-render components with Hooks
          if (workInProgress.memoizedState !== null) {
            nextChildren = renderWithHooks(current$$1, workInProgress, render, nextProps, ref, renderExpirationTime);
          }
        }

        setCurrentPhase(null);
      }

      if (current$$1 !== null && !didReceiveUpdate) {
        bailoutHooks(current$$1, workInProgress, renderExpirationTime);
        return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
      } // React DevTools reads this flag.


      workInProgress.effectTag |= PerformedWork;
      reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
      return workInProgress.child;
    }

    function updateMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
      if (current$$1 === null) {
        var type = Component.type;

        if (isSimpleFunctionComponent(type) && Component.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.
        Component.defaultProps === undefined) {
          var resolvedType = type;
          {
            resolvedType = resolveFunctionForHotReloading(type);
          } // If this is a plain function component without default props,
          // and with only the default shallow comparison, we upgrade it
          // to a SimpleMemoComponent to allow fast path updates.

          workInProgress.tag = SimpleMemoComponent;
          workInProgress.type = resolvedType;
          {
            validateFunctionComponentInDev(workInProgress, type);
          }
          return updateSimpleMemoComponent(current$$1, workInProgress, resolvedType, nextProps, updateExpirationTime, renderExpirationTime);
        }

        {
          var innerPropTypes = type.propTypes;

          if (innerPropTypes) {
            // Inner memo component props aren't currently validated in createElement.
            // We could move it there, but we'd still need this for lazy code path.
            checkPropTypes(innerPropTypes, nextProps, // Resolved props
            'prop', getComponentName(type), getCurrentFiberStackInDev);
          }
        }
        var child = createFiberFromTypeAndProps(Component.type, null, nextProps, null, workInProgress.mode, renderExpirationTime);
        child.ref = workInProgress.ref;
        child.return = workInProgress;
        workInProgress.child = child;
        return child;
      }

      {
        var _type = Component.type;
        var _innerPropTypes = _type.propTypes;

        if (_innerPropTypes) {
          // Inner memo component props aren't currently validated in createElement.
          // We could move it there, but we'd still need this for lazy code path.
          checkPropTypes(_innerPropTypes, nextProps, // Resolved props
          'prop', getComponentName(_type), getCurrentFiberStackInDev);
        }
      }
      var currentChild = current$$1.child; // This is always exactly one child

      if (updateExpirationTime < renderExpirationTime) {
        // This will be the props with resolved defaultProps,
        // unlike current.memoizedProps which will be the unresolved ones.
        var prevProps = currentChild.memoizedProps; // Default to shallow comparison

        var compare = Component.compare;
        compare = compare !== null ? compare : shallowEqual;

        if (compare(prevProps, nextProps) && current$$1.ref === workInProgress.ref) {
          return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
        }
      } // React DevTools reads this flag.


      workInProgress.effectTag |= PerformedWork;
      var newChild = createWorkInProgress(currentChild, nextProps, renderExpirationTime);
      newChild.ref = workInProgress.ref;
      newChild.return = workInProgress;
      workInProgress.child = newChild;
      return newChild;
    }

    function updateSimpleMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
      // TODO: current can be non-null here even if the component
      // hasn't yet mounted. This happens when the inner render suspends.
      // We'll need to figure out if this is fine or can cause issues.
      {
        if (workInProgress.type !== workInProgress.elementType) {
          // Lazy component props can't be validated in createElement
          // because they're only guaranteed to be resolved here.
          var outerMemoType = workInProgress.elementType;

          if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {
            // We warn when you define propTypes on lazy()
            // so let's just skip over it to find memo() outer wrapper.
            // Inner props for memo are validated later.
            outerMemoType = refineResolvedLazyComponent(outerMemoType);
          }

          var outerPropTypes = outerMemoType && outerMemoType.propTypes;

          if (outerPropTypes) {
            checkPropTypes(outerPropTypes, nextProps, // Resolved (SimpleMemoComponent has no defaultProps)
            'prop', getComponentName(outerMemoType), getCurrentFiberStackInDev);
          } // Inner propTypes will be validated in the function component path.

        }
      }

      if (current$$1 !== null) {
        var prevProps = current$$1.memoizedProps;

        if (shallowEqual(prevProps, nextProps) && current$$1.ref === workInProgress.ref && // Prevent bailout if the implementation changed due to hot reload:
        workInProgress.type === current$$1.type) {
          didReceiveUpdate = false;

          if (updateExpirationTime < renderExpirationTime) {
            return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
          }
        }
      }

      return updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime);
    }

    function updateFragment(current$$1, workInProgress, renderExpirationTime) {
      var nextChildren = workInProgress.pendingProps;
      reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
      return workInProgress.child;
    }

    function updateMode(current$$1, workInProgress, renderExpirationTime) {
      var nextChildren = workInProgress.pendingProps.children;
      reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
      return workInProgress.child;
    }

    function updateProfiler(current$$1, workInProgress, renderExpirationTime) {
      if (enableProfilerTimer) {
        workInProgress.effectTag |= Update;
      }

      var nextProps = workInProgress.pendingProps;
      var nextChildren = nextProps.children;
      reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
      return workInProgress.child;
    }

    function markRef(current$$1, workInProgress) {
      var ref = workInProgress.ref;

      if (current$$1 === null && ref !== null || current$$1 !== null && current$$1.ref !== ref) {
        // Schedule a Ref effect
        workInProgress.effectTag |= Ref;
      }
    }

    function updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
      {
        if (workInProgress.type !== workInProgress.elementType) {
          // Lazy component props can't be validated in createElement
          // because they're only guaranteed to be resolved here.
          var innerPropTypes = Component.propTypes;

          if (innerPropTypes) {
            checkPropTypes(innerPropTypes, nextProps, // Resolved props
            'prop', getComponentName(Component), getCurrentFiberStackInDev);
          }
        }
      }
      var context;

      if (!disableLegacyContext) {
        var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);
        context = getMaskedContext(workInProgress, unmaskedContext);
      }

      var nextChildren;
      prepareToReadContext(workInProgress, renderExpirationTime);
      {
        ReactCurrentOwner$3.current = workInProgress;
        setCurrentPhase('render');
        nextChildren = renderWithHooks(current$$1, workInProgress, Component, nextProps, context, renderExpirationTime);

        if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
          // Only double-render components with Hooks
          if (workInProgress.memoizedState !== null) {
            nextChildren = renderWithHooks(current$$1, workInProgress, Component, nextProps, context, renderExpirationTime);
          }
        }

        setCurrentPhase(null);
      }

      if (current$$1 !== null && !didReceiveUpdate) {
        bailoutHooks(current$$1, workInProgress, renderExpirationTime);
        return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
      } // React DevTools reads this flag.


      workInProgress.effectTag |= PerformedWork;
      reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
      return workInProgress.child;
    }

    function updateClassComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
      {
        if (workInProgress.type !== workInProgress.elementType) {
          // Lazy component props can't be validated in createElement
          // because they're only guaranteed to be resolved here.
          var innerPropTypes = Component.propTypes;

          if (innerPropTypes) {
            checkPropTypes(innerPropTypes, nextProps, // Resolved props
            'prop', getComponentName(Component), getCurrentFiberStackInDev);
          }
        }
      } // Push context providers early to prevent context stack mismatches.
      // During mounting we don't know the child context yet as the instance doesn't exist.
      // We will invalidate the child context in finishClassComponent() right after rendering.

      var hasContext;

      if (isContextProvider(Component)) {
        hasContext = true;
        pushContextProvider(workInProgress);
      } else {
        hasContext = false;
      }

      prepareToReadContext(workInProgress, renderExpirationTime);
      var instance = workInProgress.stateNode;
      var shouldUpdate;

      if (instance === null) {
        if (current$$1 !== null) {
          // An class component without an instance only mounts if it suspended
          // inside a non- concurrent tree, in an inconsistent state. We want to
          // tree it like a new mount, even though an empty version of it already
          // committed. Disconnect the alternate pointers.
          current$$1.alternate = null;
          workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect

          workInProgress.effectTag |= Placement;
        } // In the initial pass we might need to construct the instance.


        constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
        mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
        shouldUpdate = true;
      } else if (current$$1 === null) {
        // In a resume, we'll already have an instance we can reuse.
        shouldUpdate = resumeMountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
      } else {
        shouldUpdate = updateClassInstance(current$$1, workInProgress, Component, nextProps, renderExpirationTime);
      }

      var nextUnitOfWork = finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime);
      {
        var inst = workInProgress.stateNode;

        if (inst.props !== nextProps) {
          !didWarnAboutReassigningProps ? warning$1(false, 'It looks like %s is reassigning its own `this.props` while rendering. ' + 'This is not supported and can lead to confusing bugs.', getComponentName(workInProgress.type) || 'a component') : void 0;
          didWarnAboutReassigningProps = true;
        }
      }
      return nextUnitOfWork;
    }

    function finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime) {
      // Refs should update even if shouldComponentUpdate returns false
      markRef(current$$1, workInProgress);
      var didCaptureError = (workInProgress.effectTag & DidCapture) !== NoEffect;

      if (!shouldUpdate && !didCaptureError) {
        // Context providers should defer to sCU for rendering
        if (hasContext) {
          invalidateContextProvider(workInProgress, Component, false);
        }

        return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
      }

      var instance = workInProgress.stateNode; // Rerender

      ReactCurrentOwner$3.current = workInProgress;
      var nextChildren;

      if (didCaptureError && typeof Component.getDerivedStateFromError !== 'function') {
        // If we captured an error, but getDerivedStateFrom catch is not defined,
        // unmount all the children. componentDidCatch will schedule an update to
        // re-render a fallback. This is temporary until we migrate everyone to
        // the new API.
        // TODO: Warn in a future release.
        nextChildren = null;

        if (enableProfilerTimer) {
          stopProfilerTimerIfRunning(workInProgress);
        }
      } else {
        {
          setCurrentPhase('render');
          nextChildren = instance.render();

          if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
            instance.render();
          }

          setCurrentPhase(null);
        }
      } // React DevTools reads this flag.


      workInProgress.effectTag |= PerformedWork;

      if (current$$1 !== null && didCaptureError) {
        // If we're recovering from an error, reconcile without reusing any of
        // the existing children. Conceptually, the normal children and the children
        // that are shown on error are two different sets, so we shouldn't reuse
        // normal children even if their identities match.
        forceUnmountCurrentAndReconcile(current$$1, workInProgress, nextChildren, renderExpirationTime);
      } else {
        reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
      } // Memoize state using the values we just used to render.
      // TODO: Restructure so we never read values from the instance.


      workInProgress.memoizedState = instance.state; // The context might have changed so we need to recalculate it.

      if (hasContext) {
        invalidateContextProvider(workInProgress, Component, true);
      }

      return workInProgress.child;
    }

    function pushHostRootContext(workInProgress) {
      var root = workInProgress.stateNode;

      if (root.pendingContext) {
        pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);
      } else if (root.context) {
        // Should always be set
        pushTopLevelContextObject(workInProgress, root.context, false);
      }

      pushHostContainer(workInProgress, root.containerInfo);
    }

    function updateHostRoot(current$$1, workInProgress, renderExpirationTime) {
      pushHostRootContext(workInProgress);
      var updateQueue = workInProgress.updateQueue;

      (function () {
        if (!(updateQueue !== null)) {
          {
            throw ReactError(Error("If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue."));
          }
        }
      })();

      var nextProps = workInProgress.pendingProps;
      var prevState = workInProgress.memoizedState;
      var prevChildren = prevState !== null ? prevState.element : null;
      processUpdateQueue(workInProgress, updateQueue, nextProps, null, renderExpirationTime);
      var nextState = workInProgress.memoizedState; // Caution: React DevTools currently depends on this property
      // being called "element".

      var nextChildren = nextState.element;

      if (nextChildren === prevChildren) {
        // If the state is the same as before, that's a bailout because we had
        // no work that expires at this time.
        resetHydrationState();
        return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
      }

      var root = workInProgress.stateNode;

      if (root.hydrate && enterHydrationState(workInProgress)) {
        // If we don't have any current children this might be the first pass.
        // We always try to hydrate. If this isn't a hydration pass there won't
        // be any children to hydrate which is effectively the same thing as
        // not hydrating.
        var child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
        workInProgress.child = child;
        var node = child;

        while (node) {
          // Mark each child as hydrating. This is a fast path to know whether this
          // tree is part of a hydrating tree. This is used to determine if a child
          // node has fully mounted yet, and for scheduling event replaying.
          // Conceptually this is similar to Placement in that a new subtree is
          // inserted into the React tree here. It just happens to not need DOM
          // mutations because it already exists.
          node.effectTag = node.effectTag & ~Placement | Hydrating;
          node = node.sibling;
        }
      } else {
        // Otherwise reset hydration state in case we aborted and resumed another
        // root.
        reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
        resetHydrationState();
      }

      return workInProgress.child;
    }

    function updateHostComponent(current$$1, workInProgress, renderExpirationTime) {
      pushHostContext(workInProgress);

      if (current$$1 === null) {
        tryToClaimNextHydratableInstance(workInProgress);
      }

      var type = workInProgress.type;
      var nextProps = workInProgress.pendingProps;
      var prevProps = current$$1 !== null ? current$$1.memoizedProps : null;
      var nextChildren = nextProps.children;
      var isDirectTextChild = shouldSetTextContent(type, nextProps);

      if (isDirectTextChild) {
        // We special case a direct text child of a host node. This is a common
        // case. We won't handle it as a reified child. We will instead handle
        // this in the host environment that also have access to this prop. That
        // avoids allocating another HostText fiber and traversing it.
        nextChildren = null;
      } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {
        // If we're switching from a direct text child to a normal child, or to
        // empty, we need to schedule the text content to be reset.
        workInProgress.effectTag |= ContentReset;
      }

      markRef(current$$1, workInProgress); // Check the host config to see if the children are offscreen/hidden.

      if (workInProgress.mode & ConcurrentMode && renderExpirationTime !== Never && shouldDeprioritizeSubtree(type, nextProps)) {
        if (enableSchedulerTracing) {
          markSpawnedWork(Never);
        } // Schedule this fiber to re-render at offscreen priority. Then bailout.


        workInProgress.expirationTime = workInProgress.childExpirationTime = Never;
        return null;
      }

      reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
      return workInProgress.child;
    }

    function updateHostText(current$$1, workInProgress) {
      if (current$$1 === null) {
        tryToClaimNextHydratableInstance(workInProgress);
      } // Nothing to do here. This is terminal. We'll do the completion step
      // immediately after.


      return null;
    }

    function mountLazyComponent(_current, workInProgress, elementType, updateExpirationTime, renderExpirationTime) {
      if (_current !== null) {
        // An lazy component only mounts if it suspended inside a non-
        // concurrent tree, in an inconsistent state. We want to treat it like
        // a new mount, even though an empty version of it already committed.
        // Disconnect the alternate pointers.
        _current.alternate = null;
        workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect

        workInProgress.effectTag |= Placement;
      }

      var props = workInProgress.pendingProps; // We can't start a User Timing measurement with correct label yet.
      // Cancel and resume right after we know the tag.

      cancelWorkTimer(workInProgress);
      var Component = readLazyComponentType(elementType); // Store the unwrapped component in the type.

      workInProgress.type = Component;
      var resolvedTag = workInProgress.tag = resolveLazyComponentTag(Component);
      startWorkTimer(workInProgress);
      var resolvedProps = resolveDefaultProps(Component, props);
      var child;

      switch (resolvedTag) {
        case FunctionComponent:
          {
            {
              validateFunctionComponentInDev(workInProgress, Component);
              workInProgress.type = Component = resolveFunctionForHotReloading(Component);
            }
            child = updateFunctionComponent(null, workInProgress, Component, resolvedProps, renderExpirationTime);
            break;
          }

        case ClassComponent:
          {
            {
              workInProgress.type = Component = resolveClassForHotReloading(Component);
            }
            child = updateClassComponent(null, workInProgress, Component, resolvedProps, renderExpirationTime);
            break;
          }

        case ForwardRef:
          {
            {
              workInProgress.type = Component = resolveForwardRefForHotReloading(Component);
            }
            child = updateForwardRef(null, workInProgress, Component, resolvedProps, renderExpirationTime);
            break;
          }

        case MemoComponent:
          {
            {
              if (workInProgress.type !== workInProgress.elementType) {
                var outerPropTypes = Component.propTypes;

                if (outerPropTypes) {
                  checkPropTypes(outerPropTypes, resolvedProps, // Resolved for outer only
                  'prop', getComponentName(Component), getCurrentFiberStackInDev);
                }
              }
            }
            child = updateMemoComponent(null, workInProgress, Component, resolveDefaultProps(Component.type, resolvedProps), // The inner type can have defaults too
            updateExpirationTime, renderExpirationTime);
            break;
          }

        default:
          {
            var hint = '';
            {
              if (Component !== null && typeof Component === 'object' && Component.$$typeof === REACT_LAZY_TYPE) {
                hint = ' Did you wrap a component in React.lazy() more than once?';
              }
            } // This message intentionally doesn't mention ForwardRef or MemoComponent
            // because the fact that it's a separate type of work is an
            // implementation detail.

            (function () {
              {
                {
                  throw ReactError(Error("Element type is invalid. Received a promise that resolves to: " + Component + ". Lazy element type must resolve to a class or function." + hint));
                }
              }
            })();
          }
      }

      return child;
    }

    function mountIncompleteClassComponent(_current, workInProgress, Component, nextProps, renderExpirationTime) {
      if (_current !== null) {
        // An incomplete component only mounts if it suspended inside a non-
        // concurrent tree, in an inconsistent state. We want to treat it like
        // a new mount, even though an empty version of it already committed.
        // Disconnect the alternate pointers.
        _current.alternate = null;
        workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect

        workInProgress.effectTag |= Placement;
      } // Promote the fiber to a class and try rendering again.


      workInProgress.tag = ClassComponent; // The rest of this function is a fork of `updateClassComponent`
      // Push context providers early to prevent context stack mismatches.
      // During mounting we don't know the child context yet as the instance doesn't exist.
      // We will invalidate the child context in finishClassComponent() right after rendering.

      var hasContext;

      if (isContextProvider(Component)) {
        hasContext = true;
        pushContextProvider(workInProgress);
      } else {
        hasContext = false;
      }

      prepareToReadContext(workInProgress, renderExpirationTime);
      constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
      mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
      return finishClassComponent(null, workInProgress, Component, true, hasContext, renderExpirationTime);
    }

    function mountIndeterminateComponent(_current, workInProgress, Component, renderExpirationTime) {
      if (_current !== null) {
        // An indeterminate component only mounts if it suspended inside a non-
        // concurrent tree, in an inconsistent state. We want to treat it like
        // a new mount, even though an empty version of it already committed.
        // Disconnect the alternate pointers.
        _current.alternate = null;
        workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect

        workInProgress.effectTag |= Placement;
      }

      var props = workInProgress.pendingProps;
      var context;

      if (!disableLegacyContext) {
        var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);
        context = getMaskedContext(workInProgress, unmaskedContext);
      }

      prepareToReadContext(workInProgress, renderExpirationTime);
      var value;
      {
        if (Component.prototype && typeof Component.prototype.render === 'function') {
          var componentName = getComponentName(Component) || 'Unknown';

          if (!didWarnAboutBadClass[componentName]) {
            warningWithoutStack$1(false, "The <%s /> component appears to have a render method, but doesn't extend React.Component. " + 'This is likely to cause errors. Change %s to extend React.Component instead.', componentName, componentName);
            didWarnAboutBadClass[componentName] = true;
          }
        }

        if (workInProgress.mode & StrictMode) {
          ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);
        }

        ReactCurrentOwner$3.current = workInProgress;
        value = renderWithHooks(null, workInProgress, Component, props, context, renderExpirationTime);
      } // React DevTools reads this flag.

      workInProgress.effectTag |= PerformedWork;

      if (typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {
        {
          var _componentName = getComponentName(Component) || 'Unknown';

          if (!didWarnAboutModulePatternComponent[_componentName]) {
            warningWithoutStack$1(false, 'The <%s /> component appears to be a function component that returns a class instance. ' + 'Change %s to a class that extends React.Component instead. ' + "If you can't use a class try assigning the prototype on the function as a workaround. " + "`%s.prototype = React.Component.prototype`. Don't use an arrow function since it " + 'cannot be called with `new` by React.', _componentName, _componentName, _componentName);
            didWarnAboutModulePatternComponent[_componentName] = true;
          }
        } // Proceed under the assumption that this is a class instance

        workInProgress.tag = ClassComponent; // Throw out any hooks that were used.

        resetHooks(); // Push context providers early to prevent context stack mismatches.
        // During mounting we don't know the child context yet as the instance doesn't exist.
        // We will invalidate the child context in finishClassComponent() right after rendering.

        var hasContext = false;

        if (isContextProvider(Component)) {
          hasContext = true;
          pushContextProvider(workInProgress);
        } else {
          hasContext = false;
        }

        workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;
        var getDerivedStateFromProps = Component.getDerivedStateFromProps;

        if (typeof getDerivedStateFromProps === 'function') {
          applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, props);
        }

        adoptClassInstance(workInProgress, value);
        mountClassInstance(workInProgress, Component, props, renderExpirationTime);
        return finishClassComponent(null, workInProgress, Component, true, hasContext, renderExpirationTime);
      } else {
        // Proceed under the assumption that this is a function component
        workInProgress.tag = FunctionComponent;
        {
          if (disableLegacyContext && Component.contextTypes) {
            warningWithoutStack$1(false, '%s uses the legacy contextTypes API which is no longer supported. ' + 'Use React.createContext() with React.useContext() instead.', getComponentName(Component) || 'Unknown');
          }

          if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
            // Only double-render components with Hooks
            if (workInProgress.memoizedState !== null) {
              value = renderWithHooks(null, workInProgress, Component, props, context, renderExpirationTime);
            }
          }
        }
        reconcileChildren(null, workInProgress, value, renderExpirationTime);
        {
          validateFunctionComponentInDev(workInProgress, Component);
        }
        return workInProgress.child;
      }
    }

    function validateFunctionComponentInDev(workInProgress, Component) {
      if (Component) {
        !!Component.childContextTypes ? warningWithoutStack$1(false, '%s(...): childContextTypes cannot be defined on a function component.', Component.displayName || Component.name || 'Component') : void 0;
      }

      if (workInProgress.ref !== null) {
        var info = '';
        var ownerName = getCurrentFiberOwnerNameInDevOrNull();

        if (ownerName) {
          info += '\n\nCheck the render method of `' + ownerName + '`.';
        }

        var warningKey = ownerName || workInProgress._debugID || '';
        var debugSource = workInProgress._debugSource;

        if (debugSource) {
          warningKey = debugSource.fileName + ':' + debugSource.lineNumber;
        }

        if (!didWarnAboutFunctionRefs[warningKey]) {
          didWarnAboutFunctionRefs[warningKey] = true;
          warning$1(false, 'Function components cannot be given refs. ' + 'Attempts to access this ref will fail. ' + 'Did you mean to use React.forwardRef()?%s', info);
        }
      }

      if (warnAboutDefaultPropsOnFunctionComponents && Component.defaultProps !== undefined) {
        var componentName = getComponentName(Component) || 'Unknown';

        if (!didWarnAboutDefaultPropsOnFunctionComponent[componentName]) {
          warningWithoutStack$1(false, '%s: Support for defaultProps will be removed from function components ' + 'in a future major release. Use JavaScript default parameters instead.', componentName);
          didWarnAboutDefaultPropsOnFunctionComponent[componentName] = true;
        }
      }

      if (typeof Component.getDerivedStateFromProps === 'function') {
        var _componentName2 = getComponentName(Component) || 'Unknown';

        if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName2]) {
          warningWithoutStack$1(false, '%s: Function components do not support getDerivedStateFromProps.', _componentName2);
          didWarnAboutGetDerivedStateOnFunctionComponent[_componentName2] = true;
        }
      }

      if (typeof Component.contextType === 'object' && Component.contextType !== null) {
        var _componentName3 = getComponentName(Component) || 'Unknown';

        if (!didWarnAboutContextTypeOnFunctionComponent[_componentName3]) {
          warningWithoutStack$1(false, '%s: Function components do not support contextType.', _componentName3);
          didWarnAboutContextTypeOnFunctionComponent[_componentName3] = true;
        }
      }
    }

    var SUSPENDED_MARKER = {
      dehydrated: null,
      retryTime: Never
    };

    function shouldRemainOnFallback(suspenseContext, current$$1, workInProgress) {
      // If the context is telling us that we should show a fallback, and we're not
      // already showing content, then we should show the fallback instead.
      return hasSuspenseContext(suspenseContext, ForceSuspenseFallback) && (current$$1 === null || current$$1.memoizedState !== null);
    }

    function updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime) {
      var mode = workInProgress.mode;
      var nextProps = workInProgress.pendingProps; // This is used by DevTools to force a boundary to suspend.

      {
        if (shouldSuspend(workInProgress)) {
          workInProgress.effectTag |= DidCapture;
        }
      }
      var suspenseContext = suspenseStackCursor.current;
      var nextDidTimeout = false;
      var didSuspend = (workInProgress.effectTag & DidCapture) !== NoEffect;

      if (didSuspend || shouldRemainOnFallback(suspenseContext, current$$1, workInProgress)) {
        // Something in this boundary's subtree already suspended. Switch to
        // rendering the fallback children.
        nextDidTimeout = true;
        workInProgress.effectTag &= ~DidCapture;
      } else {
        // Attempting the main content
        if (current$$1 === null || current$$1.memoizedState !== null) {
          // This is a new mount or this boundary is already showing a fallback state.
          // Mark this subtree context as having at least one invisible parent that could
          // handle the fallback state.
          // Boundaries without fallbacks or should be avoided are not considered since
          // they cannot handle preferred fallback states.
          if (nextProps.fallback !== undefined && nextProps.unstable_avoidThisFallback !== true) {
            suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);
          }
        }
      }

      suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
      pushSuspenseContext(workInProgress, suspenseContext);
      {
        if ('maxDuration' in nextProps) {
          if (!didWarnAboutMaxDuration) {
            didWarnAboutMaxDuration = true;
            warning$1(false, 'maxDuration has been removed from React. ' + 'Remove the maxDuration prop.');
          }
        }
      } // This next part is a bit confusing. If the children timeout, we switch to
      // showing the fallback children in place of the "primary" children.
      // However, we don't want to delete the primary children because then their
      // state will be lost (both the React state and the host state, e.g.
      // uncontrolled form inputs). Instead we keep them mounted and hide them.
      // Both the fallback children AND the primary children are rendered at the
      // same time. Once the primary children are un-suspended, we can delete
      // the fallback children — don't need to preserve their state.
      //
      // The two sets of children are siblings in the host environment, but
      // semantically, for purposes of reconciliation, they are two separate sets.
      // So we store them using two fragment fibers.
      //
      // However, we want to avoid allocating extra fibers for every placeholder.
      // They're only necessary when the children time out, because that's the
      // only time when both sets are mounted.
      //
      // So, the extra fragment fibers are only used if the children time out.
      // Otherwise, we render the primary children directly. This requires some
      // custom reconciliation logic to preserve the state of the primary
      // children. It's essentially a very basic form of re-parenting.

      if (current$$1 === null) {
        if (enableSuspenseServerRenderer) {
          // If we're currently hydrating, try to hydrate this boundary.
          // But only if this has a fallback.
          if (nextProps.fallback !== undefined) {
            tryToClaimNextHydratableInstance(workInProgress); // This could've been a dehydrated suspense component.

            var suspenseState = workInProgress.memoizedState;

            if (suspenseState !== null) {
              var dehydrated = suspenseState.dehydrated;

              if (dehydrated !== null) {
                return mountDehydratedSuspenseComponent(workInProgress, dehydrated, renderExpirationTime);
              }
            }
          }
        } // This is the initial mount. This branch is pretty simple because there's
        // no previous state that needs to be preserved.


        if (nextDidTimeout) {
          // Mount separate fragments for primary and fallback children.
          var nextFallbackChildren = nextProps.fallback;
          var primaryChildFragment = createFiberFromFragment(null, mode, NoWork, null);
          primaryChildFragment.return = workInProgress;

          if ((workInProgress.mode & BatchedMode) === NoMode) {
            // Outside of batched mode, we commit the effects from the
            // partially completed, timed-out tree, too.
            var progressedState = workInProgress.memoizedState;
            var progressedPrimaryChild = progressedState !== null ? workInProgress.child.child : workInProgress.child;
            primaryChildFragment.child = progressedPrimaryChild;
            var progressedChild = progressedPrimaryChild;

            while (progressedChild !== null) {
              progressedChild.return = primaryChildFragment;
              progressedChild = progressedChild.sibling;
            }
          }

          var fallbackChildFragment = createFiberFromFragment(nextFallbackChildren, mode, renderExpirationTime, null);
          fallbackChildFragment.return = workInProgress;
          primaryChildFragment.sibling = fallbackChildFragment; // Skip the primary children, and continue working on the
          // fallback children.

          workInProgress.memoizedState = SUSPENDED_MARKER;
          workInProgress.child = primaryChildFragment;
          return fallbackChildFragment;
        } else {
          // Mount the primary children without an intermediate fragment fiber.
          var nextPrimaryChildren = nextProps.children;
          workInProgress.memoizedState = null;
          return workInProgress.child = mountChildFibers(workInProgress, null, nextPrimaryChildren, renderExpirationTime);
        }
      } else {
        // This is an update. This branch is more complicated because we need to
        // ensure the state of the primary children is preserved.
        var prevState = current$$1.memoizedState;

        if (prevState !== null) {
          if (enableSuspenseServerRenderer) {
            var _dehydrated = prevState.dehydrated;

            if (_dehydrated !== null) {
              if (!didSuspend) {
                return updateDehydratedSuspenseComponent(current$$1, workInProgress, _dehydrated, prevState, renderExpirationTime);
              } else if (workInProgress.memoizedState !== null) {
                // Something suspended and we should still be in dehydrated mode.
                // Leave the existing child in place.
                workInProgress.child = current$$1.child; // The dehydrated completion pass expects this flag to be there
                // but the normal suspense pass doesn't.

                workInProgress.effectTag |= DidCapture;
                return null;
              } else {
                // Suspended but we should no longer be in dehydrated mode.
                // Therefore we now have to render the fallback. Wrap the children
                // in a fragment fiber to keep them separate from the fallback
                // children.
                var _nextFallbackChildren = nextProps.fallback;

                var _primaryChildFragment = createFiberFromFragment( // It shouldn't matter what the pending props are because we aren't
                // going to render this fragment.
                null, mode, NoWork, null);

                _primaryChildFragment.return = workInProgress; // This is always null since we never want the previous child
                // that we're not going to hydrate.

                _primaryChildFragment.child = null;

                if ((workInProgress.mode & BatchedMode) === NoMode) {
                  // Outside of batched mode, we commit the effects from the
                  // partially completed, timed-out tree, too.
                  var _progressedChild = _primaryChildFragment.child = workInProgress.child;

                  while (_progressedChild !== null) {
                    _progressedChild.return = _primaryChildFragment;
                    _progressedChild = _progressedChild.sibling;
                  }
                } else {
                  // We will have dropped the effect list which contains the deletion.
                  // We need to reconcile to delete the current child.
                  reconcileChildFibers(workInProgress, current$$1.child, null, renderExpirationTime);
                } // Because primaryChildFragment is a new fiber that we're inserting as the
                // parent of a new tree, we need to set its treeBaseDuration.


                if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
                  // treeBaseDuration is the sum of all the child tree base durations.
                  var treeBaseDuration = 0;
                  var hiddenChild = _primaryChildFragment.child;

                  while (hiddenChild !== null) {
                    treeBaseDuration += hiddenChild.treeBaseDuration;
                    hiddenChild = hiddenChild.sibling;
                  }

                  _primaryChildFragment.treeBaseDuration = treeBaseDuration;
                } // Create a fragment from the fallback children, too.


                var _fallbackChildFragment = createFiberFromFragment(_nextFallbackChildren, mode, renderExpirationTime, null);

                _fallbackChildFragment.return = workInProgress;
                _primaryChildFragment.sibling = _fallbackChildFragment;
                _fallbackChildFragment.effectTag |= Placement;
                _primaryChildFragment.childExpirationTime = NoWork;
                workInProgress.memoizedState = SUSPENDED_MARKER;
                workInProgress.child = _primaryChildFragment; // Skip the primary children, and continue working on the
                // fallback children.

                return _fallbackChildFragment;
              }
            }
          } // The current tree already timed out. That means each child set is
          // wrapped in a fragment fiber.


          var currentPrimaryChildFragment = current$$1.child;
          var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;

          if (nextDidTimeout) {
            // Still timed out. Reuse the current primary children by cloning
            // its fragment. We're going to skip over these entirely.
            var _nextFallbackChildren2 = nextProps.fallback;

            var _primaryChildFragment2 = createWorkInProgress(currentPrimaryChildFragment, currentPrimaryChildFragment.pendingProps, NoWork);

            _primaryChildFragment2.return = workInProgress;

            if ((workInProgress.mode & BatchedMode) === NoMode) {
              // Outside of batched mode, we commit the effects from the
              // partially completed, timed-out tree, too.
              var _progressedState = workInProgress.memoizedState;

              var _progressedPrimaryChild = _progressedState !== null ? workInProgress.child.child : workInProgress.child;

              if (_progressedPrimaryChild !== currentPrimaryChildFragment.child) {
                _primaryChildFragment2.child = _progressedPrimaryChild;
                var _progressedChild2 = _progressedPrimaryChild;

                while (_progressedChild2 !== null) {
                  _progressedChild2.return = _primaryChildFragment2;
                  _progressedChild2 = _progressedChild2.sibling;
                }
              }
            } // Because primaryChildFragment is a new fiber that we're inserting as the
            // parent of a new tree, we need to set its treeBaseDuration.


            if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
              // treeBaseDuration is the sum of all the child tree base durations.
              var _treeBaseDuration = 0;
              var _hiddenChild = _primaryChildFragment2.child;

              while (_hiddenChild !== null) {
                _treeBaseDuration += _hiddenChild.treeBaseDuration;
                _hiddenChild = _hiddenChild.sibling;
              }

              _primaryChildFragment2.treeBaseDuration = _treeBaseDuration;
            } // Clone the fallback child fragment, too. These we'll continue
            // working on.


            var _fallbackChildFragment2 = createWorkInProgress(currentFallbackChildFragment, _nextFallbackChildren2, currentFallbackChildFragment.expirationTime);

            _fallbackChildFragment2.return = workInProgress;
            _primaryChildFragment2.sibling = _fallbackChildFragment2;
            _primaryChildFragment2.childExpirationTime = NoWork; // Skip the primary children, and continue working on the
            // fallback children.

            workInProgress.memoizedState = SUSPENDED_MARKER;
            workInProgress.child = _primaryChildFragment2;
            return _fallbackChildFragment2;
          } else {
            // No longer suspended. Switch back to showing the primary children,
            // and remove the intermediate fragment fiber.
            var _nextPrimaryChildren = nextProps.children;
            var currentPrimaryChild = currentPrimaryChildFragment.child;
            var primaryChild = reconcileChildFibers(workInProgress, currentPrimaryChild, _nextPrimaryChildren, renderExpirationTime); // If this render doesn't suspend, we need to delete the fallback
            // children. Wait until the complete phase, after we've confirmed the
            // fallback is no longer needed.
            // TODO: Would it be better to store the fallback fragment on
            // the stateNode?
            // Continue rendering the children, like we normally do.

            workInProgress.memoizedState = null;
            return workInProgress.child = primaryChild;
          }
        } else {
          // The current tree has not already timed out. That means the primary
          // children are not wrapped in a fragment fiber.
          var _currentPrimaryChild = current$$1.child;

          if (nextDidTimeout) {
            // Timed out. Wrap the children in a fragment fiber to keep them
            // separate from the fallback children.
            var _nextFallbackChildren3 = nextProps.fallback;

            var _primaryChildFragment3 = createFiberFromFragment( // It shouldn't matter what the pending props are because we aren't
            // going to render this fragment.
            null, mode, NoWork, null);

            _primaryChildFragment3.return = workInProgress;
            _primaryChildFragment3.child = _currentPrimaryChild;

            if (_currentPrimaryChild !== null) {
              _currentPrimaryChild.return = _primaryChildFragment3;
            } // Even though we're creating a new fiber, there are no new children,
            // because we're reusing an already mounted tree. So we don't need to
            // schedule a placement.
            // primaryChildFragment.effectTag |= Placement;


            if ((workInProgress.mode & BatchedMode) === NoMode) {
              // Outside of batched mode, we commit the effects from the
              // partially completed, timed-out tree, too.
              var _progressedState2 = workInProgress.memoizedState;

              var _progressedPrimaryChild2 = _progressedState2 !== null ? workInProgress.child.child : workInProgress.child;

              _primaryChildFragment3.child = _progressedPrimaryChild2;
              var _progressedChild3 = _progressedPrimaryChild2;

              while (_progressedChild3 !== null) {
                _progressedChild3.return = _primaryChildFragment3;
                _progressedChild3 = _progressedChild3.sibling;
              }
            } // Because primaryChildFragment is a new fiber that we're inserting as the
            // parent of a new tree, we need to set its treeBaseDuration.


            if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
              // treeBaseDuration is the sum of all the child tree base durations.
              var _treeBaseDuration2 = 0;
              var _hiddenChild2 = _primaryChildFragment3.child;

              while (_hiddenChild2 !== null) {
                _treeBaseDuration2 += _hiddenChild2.treeBaseDuration;
                _hiddenChild2 = _hiddenChild2.sibling;
              }

              _primaryChildFragment3.treeBaseDuration = _treeBaseDuration2;
            } // Create a fragment from the fallback children, too.


            var _fallbackChildFragment3 = createFiberFromFragment(_nextFallbackChildren3, mode, renderExpirationTime, null);

            _fallbackChildFragment3.return = workInProgress;
            _primaryChildFragment3.sibling = _fallbackChildFragment3;
            _fallbackChildFragment3.effectTag |= Placement;
            _primaryChildFragment3.childExpirationTime = NoWork; // Skip the primary children, and continue working on the
            // fallback children.

            workInProgress.memoizedState = SUSPENDED_MARKER;
            workInProgress.child = _primaryChildFragment3;
            return _fallbackChildFragment3;
          } else {
            // Still haven't timed out.  Continue rendering the children, like we
            // normally do.
            workInProgress.memoizedState = null;
            var _nextPrimaryChildren2 = nextProps.children;
            return workInProgress.child = reconcileChildFibers(workInProgress, _currentPrimaryChild, _nextPrimaryChildren2, renderExpirationTime);
          }
        }
      }
    }

    function retrySuspenseComponentWithoutHydrating(current$$1, workInProgress, renderExpirationTime) {
      // We're now not suspended nor dehydrated.
      workInProgress.memoizedState = null; // Retry with the full children.

      var nextProps = workInProgress.pendingProps;
      var nextChildren = nextProps.children; // This will ensure that the children get Placement effects and
      // that the old child gets a Deletion effect.
      // We could also call forceUnmountCurrentAndReconcile.

      reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
      return workInProgress.child;
    }

    function mountDehydratedSuspenseComponent(workInProgress, suspenseInstance, renderExpirationTime) {
      // During the first pass, we'll bail out and not drill into the children.
      // Instead, we'll leave the content in place and try to hydrate it later.
      if ((workInProgress.mode & BatchedMode) === NoMode) {
        {
          warning$1(false, 'Cannot hydrate Suspense in legacy mode. Switch from ' + 'ReactDOM.hydrate(element, container) to ' + 'ReactDOM.unstable_createSyncRoot(container, { hydrate: true })' + '.render(element) or remove the Suspense components from ' + 'the server rendered components.');
        }
        workInProgress.expirationTime = Sync;
      } else if (isSuspenseInstanceFallback(suspenseInstance)) {
        // This is a client-only boundary. Since we won't get any content from the server
        // for this, we need to schedule that at a higher priority based on when it would
        // have timed out. In theory we could render it in this pass but it would have the
        // wrong priority associated with it and will prevent hydration of parent path.
        // Instead, we'll leave work left on it to render it in a separate commit.
        // TODO This time should be the time at which the server rendered response that is
        // a parent to this boundary was displayed. However, since we currently don't have
        // a protocol to transfer that time, we'll just estimate it by using the current
        // time. This will mean that Suspense timeouts are slightly shifted to later than
        // they should be.
        var serverDisplayTime = requestCurrentTime(); // Schedule a normal pri update to render this content.

        var newExpirationTime = computeAsyncExpiration(serverDisplayTime);

        if (enableSchedulerTracing) {
          markSpawnedWork(newExpirationTime);
        }

        workInProgress.expirationTime = newExpirationTime;
      } else {
        // We'll continue hydrating the rest at offscreen priority since we'll already
        // be showing the right content coming from the server, it is no rush.
        workInProgress.expirationTime = Never;

        if (enableSchedulerTracing) {
          markSpawnedWork(Never);
        }
      }

      return null;
    }

    function updateDehydratedSuspenseComponent(current$$1, workInProgress, suspenseInstance, suspenseState, renderExpirationTime) {
      // We should never be hydrating at this point because it is the first pass,
      // but after we've already committed once.
      warnIfHydrating();

      if ((workInProgress.mode & BatchedMode) === NoMode) {
        return retrySuspenseComponentWithoutHydrating(current$$1, workInProgress, renderExpirationTime);
      }

      if (isSuspenseInstanceFallback(suspenseInstance)) {
        // This boundary is in a permanent fallback state. In this case, we'll never
        // get an update and we'll never be able to hydrate the final content. Let's just try the
        // client side render instead.
        return retrySuspenseComponentWithoutHydrating(current$$1, workInProgress, renderExpirationTime);
      } // We use childExpirationTime to indicate that a child might depend on context, so if
      // any context has changed, we need to treat is as if the input might have changed.


      var hasContextChanged$$1 = current$$1.childExpirationTime >= renderExpirationTime;

      if (didReceiveUpdate || hasContextChanged$$1) {
        // This boundary has changed since the first render. This means that we are now unable to
        // hydrate it. We might still be able to hydrate it using an earlier expiration time, if
        // we are rendering at lower expiration than sync.
        if (renderExpirationTime < Sync) {
          if (suspenseState.retryTime <= renderExpirationTime) {
            // This render is even higher pri than we've seen before, let's try again
            // at even higher pri.
            var attemptHydrationAtExpirationTime = renderExpirationTime + 1;
            suspenseState.retryTime = attemptHydrationAtExpirationTime;
            scheduleWork(current$$1, attemptHydrationAtExpirationTime); // TODO: Early abort this render.
          } else {// We have already tried to ping at a higher priority than we're rendering with
              // so if we got here, we must have failed to hydrate at those levels. We must
              // now give up. Instead, we're going to delete the whole subtree and instead inject
              // a new real Suspense boundary to take its place, which may render content
              // or fallback. This might suspend for a while and if it does we might still have
              // an opportunity to hydrate before this pass commits.
            }
        } // If we have scheduled higher pri work above, this will probably just abort the render
        // since we now have higher priority work, but in case it doesn't, we need to prepare to
        // render something, if we time out. Even if that requires us to delete everything and
        // skip hydration.
        // Delay having to do this as long as the suspense timeout allows us.


        renderDidSuspendDelayIfPossible();
        return retrySuspenseComponentWithoutHydrating(current$$1, workInProgress, renderExpirationTime);
      } else if (isSuspenseInstancePending(suspenseInstance)) {
        // This component is still pending more data from the server, so we can't hydrate its
        // content. We treat it as if this component suspended itself. It might seem as if
        // we could just try to render it client-side instead. However, this will perform a
        // lot of unnecessary work and is unlikely to complete since it often will suspend
        // on missing data anyway. Additionally, the server might be able to render more
        // than we can on the client yet. In that case we'd end up with more fallback states
        // on the client than if we just leave it alone. If the server times out or errors
        // these should update this boundary to the permanent Fallback state instead.
        // Mark it as having captured (i.e. suspended).
        workInProgress.effectTag |= DidCapture; // Leave the child in place. I.e. the dehydrated fragment.

        workInProgress.child = current$$1.child; // Register a callback to retry this boundary once the server has sent the result.

        registerSuspenseInstanceRetry(suspenseInstance, retryDehydratedSuspenseBoundary.bind(null, current$$1));
        return null;
      } else {
        // This is the first attempt.
        reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress, suspenseInstance);
        var nextProps = workInProgress.pendingProps;
        var nextChildren = nextProps.children;
        var child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
        var node = child;

        while (node) {
          // Mark each child as hydrating. This is a fast path to know whether this
          // tree is part of a hydrating tree. This is used to determine if a child
          // node has fully mounted yet, and for scheduling event replaying.
          // Conceptually this is similar to Placement in that a new subtree is
          // inserted into the React tree here. It just happens to not need DOM
          // mutations because it already exists.
          node.effectTag |= Hydrating;
          node = node.sibling;
        }

        workInProgress.child = child;
        return workInProgress.child;
      }
    }

    function propagateSuspenseContextChange(workInProgress, firstChild, renderExpirationTime) {
      // Mark any Suspense boundaries with fallbacks as having work to do.
      // If they were previously forced into fallbacks, they may now be able
      // to unblock.
      var node = firstChild;

      while (node !== null) {
        if (node.tag === SuspenseComponent) {
          var state = node.memoizedState;

          if (state !== null) {
            if (node.expirationTime < renderExpirationTime) {
              node.expirationTime = renderExpirationTime;
            }

            var alternate = node.alternate;

            if (alternate !== null && alternate.expirationTime < renderExpirationTime) {
              alternate.expirationTime = renderExpirationTime;
            }

            scheduleWorkOnParentPath(node.return, renderExpirationTime);
          }
        } else if (node.child !== null) {
          node.child.return = node;
          node = node.child;
          continue;
        }

        if (node === workInProgress) {
          return;
        }

        while (node.sibling === null) {
          if (node.return === null || node.return === workInProgress) {
            return;
          }

          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      }
    }

    function findLastContentRow(firstChild) {
      // This is going to find the last row among these children that is already
      // showing content on the screen, as opposed to being in fallback state or
      // new. If a row has multiple Suspense boundaries, any of them being in the
      // fallback state, counts as the whole row being in a fallback state.
      // Note that the "rows" will be workInProgress, but any nested children
      // will still be current since we haven't rendered them yet. The mounted
      // order may not be the same as the new order. We use the new order.
      var row = firstChild;
      var lastContentRow = null;

      while (row !== null) {
        var currentRow = row.alternate; // New rows can't be content rows.

        if (currentRow !== null && findFirstSuspended(currentRow) === null) {
          lastContentRow = row;
        }

        row = row.sibling;
      }

      return lastContentRow;
    }

    function validateRevealOrder(revealOrder) {
      {
        if (revealOrder !== undefined && revealOrder !== 'forwards' && revealOrder !== 'backwards' && revealOrder !== 'together' && !didWarnAboutRevealOrder[revealOrder]) {
          didWarnAboutRevealOrder[revealOrder] = true;

          if (typeof revealOrder === 'string') {
            switch (revealOrder.toLowerCase()) {
              case 'together':
              case 'forwards':
              case 'backwards':
                {
                  warning$1(false, '"%s" is not a valid value for revealOrder on <SuspenseList />. ' + 'Use lowercase "%s" instead.', revealOrder, revealOrder.toLowerCase());
                  break;
                }

              case 'forward':
              case 'backward':
                {
                  warning$1(false, '"%s" is not a valid value for revealOrder on <SuspenseList />. ' + 'React uses the -s suffix in the spelling. Use "%ss" instead.', revealOrder, revealOrder.toLowerCase());
                  break;
                }

              default:
                warning$1(false, '"%s" is not a supported revealOrder on <SuspenseList />. ' + 'Did you mean "together", "forwards" or "backwards"?', revealOrder);
                break;
            }
          } else {
            warning$1(false, '%s is not a supported value for revealOrder on <SuspenseList />. ' + 'Did you mean "together", "forwards" or "backwards"?', revealOrder);
          }
        }
      }
    }

    function validateTailOptions(tailMode, revealOrder) {
      {
        if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {
          if (tailMode !== 'collapsed' && tailMode !== 'hidden') {
            didWarnAboutTailOptions[tailMode] = true;
            warning$1(false, '"%s" is not a supported value for tail on <SuspenseList />. ' + 'Did you mean "collapsed" or "hidden"?', tailMode);
          } else if (revealOrder !== 'forwards' && revealOrder !== 'backwards') {
            didWarnAboutTailOptions[tailMode] = true;
            warning$1(false, '<SuspenseList tail="%s" /> is only valid if revealOrder is ' + '"forwards" or "backwards". ' + 'Did you mean to specify revealOrder="forwards"?', tailMode);
          }
        }
      }
    }

    function validateSuspenseListNestedChild(childSlot, index) {
      {
        var isArray = Array.isArray(childSlot);
        var isIterable = !isArray && typeof getIteratorFn(childSlot) === 'function';

        if (isArray || isIterable) {
          var type = isArray ? 'array' : 'iterable';
          warning$1(false, 'A nested %s was passed to row #%s in <SuspenseList />. Wrap it in ' + 'an additional SuspenseList to configure its revealOrder: ' + '<SuspenseList revealOrder=...> ... ' + '<SuspenseList revealOrder=...>{%s}</SuspenseList> ... ' + '</SuspenseList>', type, index, type);
          return false;
        }
      }
      return true;
    }

    function validateSuspenseListChildren(children, revealOrder) {
      {
        if ((revealOrder === 'forwards' || revealOrder === 'backwards') && children !== undefined && children !== null && children !== false) {
          if (Array.isArray(children)) {
            for (var i = 0; i < children.length; i++) {
              if (!validateSuspenseListNestedChild(children[i], i)) {
                return;
              }
            }
          } else {
            var iteratorFn = getIteratorFn(children);

            if (typeof iteratorFn === 'function') {
              var childrenIterator = iteratorFn.call(children);

              if (childrenIterator) {
                var step = childrenIterator.next();
                var _i = 0;

                for (; !step.done; step = childrenIterator.next()) {
                  if (!validateSuspenseListNestedChild(step.value, _i)) {
                    return;
                  }

                  _i++;
                }
              }
            } else {
              warning$1(false, 'A single row was passed to a <SuspenseList revealOrder="%s" />. ' + 'This is not useful since it needs multiple rows. ' + 'Did you mean to pass multiple children or an array?', revealOrder);
            }
          }
        }
      }
    }

    function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {
      var renderState = workInProgress.memoizedState;

      if (renderState === null) {
        workInProgress.memoizedState = {
          isBackwards: isBackwards,
          rendering: null,
          last: lastContentRow,
          tail: tail,
          tailExpiration: 0,
          tailMode: tailMode
        };
      } else {
        // We can reuse the existing object from previous renders.
        renderState.isBackwards = isBackwards;
        renderState.rendering = null;
        renderState.last = lastContentRow;
        renderState.tail = tail;
        renderState.tailExpiration = 0;
        renderState.tailMode = tailMode;
      }
    } // This can end up rendering this component multiple passes.
    // The first pass splits the children fibers into two sets. A head and tail.
    // We first render the head. If anything is in fallback state, we do another
    // pass through beginWork to rerender all children (including the tail) with
    // the force suspend context. If the first render didn't have anything in
    // in fallback state. Then we render each row in the tail one-by-one.
    // That happens in the completeWork phase without going back to beginWork.


    function updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime) {
      var nextProps = workInProgress.pendingProps;
      var revealOrder = nextProps.revealOrder;
      var tailMode = nextProps.tail;
      var newChildren = nextProps.children;
      validateRevealOrder(revealOrder);
      validateTailOptions(tailMode, revealOrder);
      validateSuspenseListChildren(newChildren, revealOrder);
      reconcileChildren(current$$1, workInProgress, newChildren, renderExpirationTime);
      var suspenseContext = suspenseStackCursor.current;
      var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);

      if (shouldForceFallback) {
        suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
        workInProgress.effectTag |= DidCapture;
      } else {
        var didSuspendBefore = current$$1 !== null && (current$$1.effectTag & DidCapture) !== NoEffect;

        if (didSuspendBefore) {
          // If we previously forced a fallback, we need to schedule work
          // on any nested boundaries to let them know to try to render
          // again. This is the same as context updating.
          propagateSuspenseContextChange(workInProgress, workInProgress.child, renderExpirationTime);
        }

        suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
      }

      pushSuspenseContext(workInProgress, suspenseContext);

      if ((workInProgress.mode & BatchedMode) === NoMode) {
        // Outside of batched mode, SuspenseList doesn't work so we just
        // use make it a noop by treating it as the default revealOrder.
        workInProgress.memoizedState = null;
      } else {
        switch (revealOrder) {
          case 'forwards':
            {
              var lastContentRow = findLastContentRow(workInProgress.child);
              var tail;

              if (lastContentRow === null) {
                // The whole list is part of the tail.
                // TODO: We could fast path by just rendering the tail now.
                tail = workInProgress.child;
                workInProgress.child = null;
              } else {
                // Disconnect the tail rows after the content row.
                // We're going to render them separately later.
                tail = lastContentRow.sibling;
                lastContentRow.sibling = null;
              }

              initSuspenseListRenderState(workInProgress, false, // isBackwards
              tail, lastContentRow, tailMode);
              break;
            }

          case 'backwards':
            {
              // We're going to find the first row that has existing content.
              // At the same time we're going to reverse the list of everything
              // we pass in the meantime. That's going to be our tail in reverse
              // order.
              var _tail = null;
              var row = workInProgress.child;
              workInProgress.child = null;

              while (row !== null) {
                var currentRow = row.alternate; // New rows can't be content rows.

                if (currentRow !== null && findFirstSuspended(currentRow) === null) {
                  // This is the beginning of the main content.
                  workInProgress.child = row;
                  break;
                }

                var nextRow = row.sibling;
                row.sibling = _tail;
                _tail = row;
                row = nextRow;
              } // TODO: If workInProgress.child is null, we can continue on the tail immediately.


              initSuspenseListRenderState(workInProgress, true, // isBackwards
              _tail, null, // last
              tailMode);
              break;
            }

          case 'together':
            {
              initSuspenseListRenderState(workInProgress, false, // isBackwards
              null, // tail
              null, // last
              undefined);
              break;
            }

          default:
            {
              // The default reveal order is the same as not having
              // a boundary.
              workInProgress.memoizedState = null;
            }
        }
      }

      return workInProgress.child;
    }

    function updatePortalComponent(current$$1, workInProgress, renderExpirationTime) {
      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
      var nextChildren = workInProgress.pendingProps;

      if (current$$1 === null) {
        // Portals are special because we don't append the children during mount
        // but at commit. Therefore we need to track insertions which the normal
        // flow doesn't do during mount. This doesn't happen at the root because
        // the root always starts with a "current" with a null child.
        // TODO: Consider unifying this with how the root works.
        workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
      } else {
        reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
      }

      return workInProgress.child;
    }

    function updateContextProvider(current$$1, workInProgress, renderExpirationTime) {
      var providerType = workInProgress.type;
      var context = providerType._context;
      var newProps = workInProgress.pendingProps;
      var oldProps = workInProgress.memoizedProps;
      var newValue = newProps.value;
      {
        var providerPropTypes = workInProgress.type.propTypes;

        if (providerPropTypes) {
          checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider', getCurrentFiberStackInDev);
        }
      }
      pushProvider(workInProgress, newValue);

      if (oldProps !== null) {
        var oldValue = oldProps.value;
        var changedBits = calculateChangedBits(context, newValue, oldValue);

        if (changedBits === 0) {
          // No change. Bailout early if children are the same.
          if (oldProps.children === newProps.children && !hasContextChanged()) {
            return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
          }
        } else {
          // The context value changed. Search for matching consumers and schedule
          // them to update.
          propagateContextChange(workInProgress, context, changedBits, renderExpirationTime);
        }
      }

      var newChildren = newProps.children;
      reconcileChildren(current$$1, workInProgress, newChildren, renderExpirationTime);
      return workInProgress.child;
    }

    var hasWarnedAboutUsingContextAsConsumer = false;

    function updateContextConsumer(current$$1, workInProgress, renderExpirationTime) {
      var context = workInProgress.type; // The logic below for Context differs depending on PROD or DEV mode. In
      // DEV mode, we create a separate object for Context.Consumer that acts
      // like a proxy to Context. This proxy object adds unnecessary code in PROD
      // so we use the old behaviour (Context.Consumer references Context) to
      // reduce size and overhead. The separate object references context via
      // a property called "_context", which also gives us the ability to check
      // in DEV mode if this property exists or not and warn if it does not.

      {
        if (context._context === undefined) {
          // This may be because it's a Context (rather than a Consumer).
          // Or it may be because it's older React where they're the same thing.
          // We only want to warn if we're sure it's a new React.
          if (context !== context.Consumer) {
            if (!hasWarnedAboutUsingContextAsConsumer) {
              hasWarnedAboutUsingContextAsConsumer = true;
              warning$1(false, 'Rendering <Context> directly is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
            }
          }
        } else {
          context = context._context;
        }
      }
      var newProps = workInProgress.pendingProps;
      var render = newProps.children;
      {
        !(typeof render === 'function') ? warningWithoutStack$1(false, 'A context consumer was rendered with multiple children, or a child ' + "that isn't a function. A context consumer expects a single child " + 'that is a function. If you did pass a function, make sure there ' + 'is no trailing or leading whitespace around it.') : void 0;
      }
      prepareToReadContext(workInProgress, renderExpirationTime);
      var newValue = readContext(context, newProps.unstable_observedBits);
      var newChildren;
      {
        ReactCurrentOwner$3.current = workInProgress;
        setCurrentPhase('render');
        newChildren = render(newValue);
        setCurrentPhase(null);
      } // React DevTools reads this flag.

      workInProgress.effectTag |= PerformedWork;
      reconcileChildren(current$$1, workInProgress, newChildren, renderExpirationTime);
      return workInProgress.child;
    }

    function updateFundamentalComponent$1(current$$1, workInProgress, renderExpirationTime) {
      var fundamentalImpl = workInProgress.type.impl;

      if (fundamentalImpl.reconcileChildren === false) {
        return null;
      }

      var nextProps = workInProgress.pendingProps;
      var nextChildren = nextProps.children;
      reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
      return workInProgress.child;
    }

    function updateScopeComponent(current$$1, workInProgress, renderExpirationTime) {
      var nextProps = workInProgress.pendingProps;
      var nextChildren = nextProps.children;
      reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
      return workInProgress.child;
    }

    function markWorkInProgressReceivedUpdate() {
      didReceiveUpdate = true;
    }

    function bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) {
      cancelWorkTimer(workInProgress);

      if (current$$1 !== null) {
        // Reuse previous dependencies
        workInProgress.dependencies = current$$1.dependencies;
      }

      if (enableProfilerTimer) {
        // Don't update "base" render times for bailouts.
        stopProfilerTimerIfRunning(workInProgress);
      }

      var updateExpirationTime = workInProgress.expirationTime;

      if (updateExpirationTime !== NoWork) {
        markUnprocessedUpdateTime(updateExpirationTime);
      } // Check if the children have any pending work.


      var childExpirationTime = workInProgress.childExpirationTime;

      if (childExpirationTime < renderExpirationTime) {
        // The children don't have any work either. We can skip them.
        // TODO: Once we add back resuming, we should check if the children are
        // a work-in-progress set. If so, we need to transfer their effects.
        return null;
      } else {
        // This fiber doesn't have work, but its subtree does. Clone the child
        // fibers and continue.
        cloneChildFibers(current$$1, workInProgress);
        return workInProgress.child;
      }
    }

    function remountFiber(current$$1, oldWorkInProgress, newWorkInProgress) {
      {
        var returnFiber = oldWorkInProgress.return;

        if (returnFiber === null) {
          throw new Error('Cannot swap the root fiber.');
        } // Disconnect from the old current.
        // It will get deleted.


        current$$1.alternate = null;
        oldWorkInProgress.alternate = null; // Connect to the new tree.

        newWorkInProgress.index = oldWorkInProgress.index;
        newWorkInProgress.sibling = oldWorkInProgress.sibling;
        newWorkInProgress.return = oldWorkInProgress.return;
        newWorkInProgress.ref = oldWorkInProgress.ref; // Replace the child/sibling pointers above it.

        if (oldWorkInProgress === returnFiber.child) {
          returnFiber.child = newWorkInProgress;
        } else {
          var prevSibling = returnFiber.child;

          if (prevSibling === null) {
            throw new Error('Expected parent to have a child.');
          }

          while (prevSibling.sibling !== oldWorkInProgress) {
            prevSibling = prevSibling.sibling;

            if (prevSibling === null) {
              throw new Error('Expected to find the previous sibling.');
            }
          }

          prevSibling.sibling = newWorkInProgress;
        } // Delete the old fiber and place the new one.
        // Since the old fiber is disconnected, we have to schedule it manually.


        var last = returnFiber.lastEffect;

        if (last !== null) {
          last.nextEffect = current$$1;
          returnFiber.lastEffect = current$$1;
        } else {
          returnFiber.firstEffect = returnFiber.lastEffect = current$$1;
        }

        current$$1.nextEffect = null;
        current$$1.effectTag = Deletion;
        newWorkInProgress.effectTag |= Placement; // Restart work from the new fiber.

        return newWorkInProgress;
      }
    }

    function beginWork$1(current$$1, workInProgress, renderExpirationTime) {
      var updateExpirationTime = workInProgress.expirationTime;
      {
        if (workInProgress._debugNeedsRemount && current$$1 !== null) {
          // This will restart the begin phase with a new fiber.
          return remountFiber(current$$1, workInProgress, createFiberFromTypeAndProps(workInProgress.type, workInProgress.key, workInProgress.pendingProps, workInProgress._debugOwner || null, workInProgress.mode, workInProgress.expirationTime));
        }
      }

      if (current$$1 !== null) {
        var oldProps = current$$1.memoizedProps;
        var newProps = workInProgress.pendingProps;

        if (oldProps !== newProps || hasContextChanged() || // Force a re-render if the implementation changed due to hot reload:
        workInProgress.type !== current$$1.type) {
          // If props or context changed, mark the fiber as having performed work.
          // This may be unset if the props are determined to be equal later (memo).
          didReceiveUpdate = true;
        } else if (updateExpirationTime < renderExpirationTime) {
          didReceiveUpdate = false; // This fiber does not have any pending work. Bailout without entering
          // the begin phase. There's still some bookkeeping we that needs to be done
          // in this optimized path, mostly pushing stuff onto the stack.

          switch (workInProgress.tag) {
            case HostRoot:
              pushHostRootContext(workInProgress);
              resetHydrationState();
              break;

            case HostComponent:
              pushHostContext(workInProgress);

              if (workInProgress.mode & ConcurrentMode && renderExpirationTime !== Never && shouldDeprioritizeSubtree(workInProgress.type, newProps)) {
                if (enableSchedulerTracing) {
                  markSpawnedWork(Never);
                } // Schedule this fiber to re-render at offscreen priority. Then bailout.


                workInProgress.expirationTime = workInProgress.childExpirationTime = Never;
                return null;
              }

              break;

            case ClassComponent:
              {
                var Component = workInProgress.type;

                if (isContextProvider(Component)) {
                  pushContextProvider(workInProgress);
                }

                break;
              }

            case HostPortal:
              pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
              break;

            case ContextProvider:
              {
                var newValue = workInProgress.memoizedProps.value;
                pushProvider(workInProgress, newValue);
                break;
              }

            case Profiler:
              if (enableProfilerTimer) {
                workInProgress.effectTag |= Update;
              }

              break;

            case SuspenseComponent:
              {
                var state = workInProgress.memoizedState;

                if (state !== null) {
                  if (enableSuspenseServerRenderer) {
                    if (state.dehydrated !== null) {
                      pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // We know that this component will suspend again because if it has
                      // been unsuspended it has committed as a resolved Suspense component.
                      // If it needs to be retried, it should have work scheduled on it.

                      workInProgress.effectTag |= DidCapture;
                      break;
                    }
                  } // If this boundary is currently timed out, we need to decide
                  // whether to retry the primary children, or to skip over it and
                  // go straight to the fallback. Check the priority of the primary
                  // child fragment.


                  var primaryChildFragment = workInProgress.child;
                  var primaryChildExpirationTime = primaryChildFragment.childExpirationTime;

                  if (primaryChildExpirationTime !== NoWork && primaryChildExpirationTime >= renderExpirationTime) {
                    // The primary children have pending work. Use the normal path
                    // to attempt to render the primary children again.
                    return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);
                  } else {
                    pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // The primary children do not have pending work with sufficient
                    // priority. Bailout.

                    var child = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);

                    if (child !== null) {
                      // The fallback children have pending work. Skip over the
                      // primary children and work on the fallback.
                      return child.sibling;
                    } else {
                      return null;
                    }
                  }
                } else {
                  pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
                }

                break;
              }

            case SuspenseListComponent:
              {
                var didSuspendBefore = (current$$1.effectTag & DidCapture) !== NoEffect;
                var hasChildWork = workInProgress.childExpirationTime >= renderExpirationTime;

                if (didSuspendBefore) {
                  if (hasChildWork) {
                    // If something was in fallback state last time, and we have all the
                    // same children then we're still in progressive loading state.
                    // Something might get unblocked by state updates or retries in the
                    // tree which will affect the tail. So we need to use the normal
                    // path to compute the correct tail.
                    return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
                  } // If none of the children had any work, that means that none of
                  // them got retried so they'll still be blocked in the same way
                  // as before. We can fast bail out.


                  workInProgress.effectTag |= DidCapture;
                } // If nothing suspended before and we're rendering the same children,
                // then the tail doesn't matter. Anything new that suspends will work
                // in the "together" mode, so we can continue from the state we had.


                var renderState = workInProgress.memoizedState;

                if (renderState !== null) {
                  // Reset to the "together" mode in case we've started a different
                  // update in the past but didn't complete it.
                  renderState.rendering = null;
                  renderState.tail = null;
                }

                pushSuspenseContext(workInProgress, suspenseStackCursor.current);

                if (hasChildWork) {
                  break;
                } else {
                  // If none of the children had any work, that means that none of
                  // them got retried so they'll still be blocked in the same way
                  // as before. We can fast bail out.
                  return null;
                }
              }
          }

          return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
        } else {
          // An update was scheduled on this fiber, but there are no new props
          // nor legacy context. Set this to false. If an update queue or context
          // consumer produces a changed value, it will set this to true. Otherwise,
          // the component will assume the children have not changed and bail out.
          didReceiveUpdate = false;
        }
      } else {
        didReceiveUpdate = false;
      } // Before entering the begin phase, clear the expiration time.


      workInProgress.expirationTime = NoWork;

      switch (workInProgress.tag) {
        case IndeterminateComponent:
          {
            return mountIndeterminateComponent(current$$1, workInProgress, workInProgress.type, renderExpirationTime);
          }

        case LazyComponent:
          {
            var elementType = workInProgress.elementType;
            return mountLazyComponent(current$$1, workInProgress, elementType, updateExpirationTime, renderExpirationTime);
          }

        case FunctionComponent:
          {
            var _Component = workInProgress.type;
            var unresolvedProps = workInProgress.pendingProps;
            var resolvedProps = workInProgress.elementType === _Component ? unresolvedProps : resolveDefaultProps(_Component, unresolvedProps);
            return updateFunctionComponent(current$$1, workInProgress, _Component, resolvedProps, renderExpirationTime);
          }

        case ClassComponent:
          {
            var _Component2 = workInProgress.type;
            var _unresolvedProps = workInProgress.pendingProps;

            var _resolvedProps = workInProgress.elementType === _Component2 ? _unresolvedProps : resolveDefaultProps(_Component2, _unresolvedProps);

            return updateClassComponent(current$$1, workInProgress, _Component2, _resolvedProps, renderExpirationTime);
          }

        case HostRoot:
          return updateHostRoot(current$$1, workInProgress, renderExpirationTime);

        case HostComponent:
          return updateHostComponent(current$$1, workInProgress, renderExpirationTime);

        case HostText:
          return updateHostText(current$$1, workInProgress);

        case SuspenseComponent:
          return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);

        case HostPortal:
          return updatePortalComponent(current$$1, workInProgress, renderExpirationTime);

        case ForwardRef:
          {
            var type = workInProgress.type;
            var _unresolvedProps2 = workInProgress.pendingProps;

            var _resolvedProps2 = workInProgress.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);

            return updateForwardRef(current$$1, workInProgress, type, _resolvedProps2, renderExpirationTime);
          }

        case Fragment:
          return updateFragment(current$$1, workInProgress, renderExpirationTime);

        case Mode:
          return updateMode(current$$1, workInProgress, renderExpirationTime);

        case Profiler:
          return updateProfiler(current$$1, workInProgress, renderExpirationTime);

        case ContextProvider:
          return updateContextProvider(current$$1, workInProgress, renderExpirationTime);

        case ContextConsumer:
          return updateContextConsumer(current$$1, workInProgress, renderExpirationTime);

        case MemoComponent:
          {
            var _type2 = workInProgress.type;
            var _unresolvedProps3 = workInProgress.pendingProps; // Resolve outer props first, then resolve inner props.

            var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);

            {
              if (workInProgress.type !== workInProgress.elementType) {
                var outerPropTypes = _type2.propTypes;

                if (outerPropTypes) {
                  checkPropTypes(outerPropTypes, _resolvedProps3, // Resolved for outer only
                  'prop', getComponentName(_type2), getCurrentFiberStackInDev);
                }
              }
            }
            _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);
            return updateMemoComponent(current$$1, workInProgress, _type2, _resolvedProps3, updateExpirationTime, renderExpirationTime);
          }

        case SimpleMemoComponent:
          {
            return updateSimpleMemoComponent(current$$1, workInProgress, workInProgress.type, workInProgress.pendingProps, updateExpirationTime, renderExpirationTime);
          }

        case IncompleteClassComponent:
          {
            var _Component3 = workInProgress.type;
            var _unresolvedProps4 = workInProgress.pendingProps;

            var _resolvedProps4 = workInProgress.elementType === _Component3 ? _unresolvedProps4 : resolveDefaultProps(_Component3, _unresolvedProps4);

            return mountIncompleteClassComponent(current$$1, workInProgress, _Component3, _resolvedProps4, renderExpirationTime);
          }

        case SuspenseListComponent:
          {
            return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
          }

        case FundamentalComponent:
          {
            if (enableFundamentalAPI) {
              return updateFundamentalComponent$1(current$$1, workInProgress, renderExpirationTime);
            }

            break;
          }

        case ScopeComponent:
          {
            if (enableScopeAPI) {
              return updateScopeComponent(current$$1, workInProgress, renderExpirationTime);
            }

            break;
          }
      }

      (function () {
        {
          {
            throw ReactError(Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in React. Please file an issue."));
          }
        }
      })();
    }

    function createFundamentalStateInstance(currentFiber, props, impl, state) {
      return {
        currentFiber: currentFiber,
        impl: impl,
        instance: null,
        prevProps: null,
        props: props,
        state: state
      };
    }

    function isFiberSuspenseAndTimedOut(fiber) {
      return fiber.tag === SuspenseComponent && fiber.memoizedState !== null;
    }

    function getSuspenseFallbackChild(fiber) {
      return fiber.child.sibling.child;
    }

    function collectScopedNodes(node, fn, scopedNodes) {
      if (enableScopeAPI) {
        if (node.tag === HostComponent) {
          var _type = node.type,
              memoizedProps = node.memoizedProps;

          if (fn(_type, memoizedProps) === true) {
            scopedNodes.push(getPublicInstance(node.stateNode));
          }
        }

        var child = node.child;

        if (isFiberSuspenseAndTimedOut(node)) {
          child = getSuspenseFallbackChild(node);
        }

        if (child !== null) {
          collectScopedNodesFromChildren(child, fn, scopedNodes);
        }
      }
    }

    function collectScopedNodesFromChildren(startingChild, fn, scopedNodes) {
      var child = startingChild;

      while (child !== null) {
        collectScopedNodes(child, fn, scopedNodes);
        child = child.sibling;
      }
    }

    function collectNearestScopeMethods(node, scope, childrenScopes) {
      if (isValidScopeNode(node, scope)) {
        childrenScopes.push(node.stateNode.methods);
      } else {
        var child = node.child;

        if (isFiberSuspenseAndTimedOut(node)) {
          child = getSuspenseFallbackChild(node);
        }

        if (child !== null) {
          collectNearestChildScopeMethods(child, scope, childrenScopes);
        }
      }
    }

    function collectNearestChildScopeMethods(startingChild, scope, childrenScopes) {
      var child = startingChild;

      while (child !== null) {
        collectNearestScopeMethods(child, scope, childrenScopes);
        child = child.sibling;
      }
    }

    function isValidScopeNode(node, scope) {
      return node.tag === ScopeComponent && node.type === scope;
    }

    function createScopeMethods(scope, instance) {
      var fn = scope.fn;
      return {
        getChildren: function () {
          var currentFiber = instance.fiber;
          var child = currentFiber.child;
          var childrenScopes = [];

          if (child !== null) {
            collectNearestChildScopeMethods(child, scope, childrenScopes);
          }

          return childrenScopes.length === 0 ? null : childrenScopes;
        },
        getChildrenFromRoot: function () {
          var currentFiber = instance.fiber;
          var node = currentFiber;

          while (node !== null) {
            var parent = node.return;

            if (parent === null) {
              break;
            }

            node = parent;

            if (node.tag === ScopeComponent && node.type === scope) {
              break;
            }
          }

          var childrenScopes = [];
          collectNearestChildScopeMethods(node.child, scope, childrenScopes);
          return childrenScopes.length === 0 ? null : childrenScopes;
        },
        getParent: function () {
          var node = instance.fiber.return;

          while (node !== null) {
            if (node.tag === ScopeComponent && node.type === scope) {
              return node.stateNode.methods;
            }

            node = node.return;
          }

          return null;
        },
        getProps: function () {
          var currentFiber = instance.fiber;
          return currentFiber.memoizedProps;
        },
        getScopedNodes: function () {
          var currentFiber = instance.fiber;
          var child = currentFiber.child;
          var scopedNodes = [];

          if (child !== null) {
            collectScopedNodesFromChildren(child, fn, scopedNodes);
          }

          return scopedNodes.length === 0 ? null : scopedNodes;
        }
      };
    }

    function markUpdate(workInProgress) {
      // Tag the fiber with an update effect. This turns a Placement into
      // a PlacementAndUpdate.
      workInProgress.effectTag |= Update;
    }

    function markRef$1(workInProgress) {
      workInProgress.effectTag |= Ref;
    }

    var appendAllChildren;
    var updateHostContainer;
    var updateHostComponent$1;
    var updateHostText$1;

    if (supportsMutation) {
      // Mutation mode
      appendAllChildren = function (parent, workInProgress, needsVisibilityToggle, isHidden) {
        // We only have the top Fiber that was created but we need recurse down its
        // children to find all the terminal nodes.
        var node = workInProgress.child;

        while (node !== null) {
          if (node.tag === HostComponent || node.tag === HostText) {
            appendInitialChild(parent, node.stateNode);
          } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {
            appendInitialChild(parent, node.stateNode.instance);
          } else if (node.tag === HostPortal) {// If we have a portal child, then we don't want to traverse
            // down its children. Instead, we'll get insertions from each child in
            // the portal directly.
          } else if (node.child !== null) {
            node.child.return = node;
            node = node.child;
            continue;
          }

          if (node === workInProgress) {
            return;
          }

          while (node.sibling === null) {
            if (node.return === null || node.return === workInProgress) {
              return;
            }

            node = node.return;
          }

          node.sibling.return = node.return;
          node = node.sibling;
        }
      };

      updateHostContainer = function (workInProgress) {// Noop
      };

      updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {
        // If we have an alternate, that means this is an update and we need to
        // schedule a side-effect to do the updates.
        var oldProps = current.memoizedProps;

        if (oldProps === newProps) {
          // In mutation mode, this is sufficient for a bailout because
          // we won't touch this node even if children changed.
          return;
        } // If we get updated because one of our children updated, we don't
        // have newProps so we'll have to reuse them.
        // TODO: Split the update API as separate for the props vs. children.
        // Even better would be if children weren't special cased at all tho.


        var instance = workInProgress.stateNode;
        var currentHostContext = getHostContext(); // TODO: Experiencing an error where oldProps is null. Suggests a host
        // component is hitting the resume path. Figure out why. Possibly
        // related to `hidden`.

        var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext); // TODO: Type this specific to this type of component.

        workInProgress.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
        // is a new ref we mark this as an update. All the work is done in commitWork.

        if (updatePayload) {
          markUpdate(workInProgress);
        }
      };

      updateHostText$1 = function (current, workInProgress, oldText, newText) {
        // If the text differs, mark it as an update. All the work in done in commitWork.
        if (oldText !== newText) {
          markUpdate(workInProgress);
        }
      };
    } else if (supportsPersistence) {
      // Persistent host tree mode
      appendAllChildren = function (parent, workInProgress, needsVisibilityToggle, isHidden) {
        // We only have the top Fiber that was created but we need recurse down its
        // children to find all the terminal nodes.
        var node = workInProgress.child;

        while (node !== null) {
          // eslint-disable-next-line no-labels
          branches: if (node.tag === HostComponent) {
            var instance = node.stateNode;

            if (needsVisibilityToggle && isHidden) {
              // This child is inside a timed out tree. Hide it.
              var props = node.memoizedProps;
              var type = node.type;
              instance = cloneHiddenInstance(instance, type, props, node);
            }

            appendInitialChild(parent, instance);
          } else if (node.tag === HostText) {
            var _instance = node.stateNode;

            if (needsVisibilityToggle && isHidden) {
              // This child is inside a timed out tree. Hide it.
              var text = node.memoizedProps;
              _instance = cloneHiddenTextInstance(_instance, text, node);
            }

            appendInitialChild(parent, _instance);
          } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {
            var _instance2 = node.stateNode.instance;

            if (needsVisibilityToggle && isHidden) {
              // This child is inside a timed out tree. Hide it.
              var _props = node.memoizedProps;
              var _type = node.type;
              _instance2 = cloneHiddenInstance(_instance2, _type, _props, node);
            }

            appendInitialChild(parent, _instance2);
          } else if (node.tag === HostPortal) {// If we have a portal child, then we don't want to traverse
            // down its children. Instead, we'll get insertions from each child in
            // the portal directly.
          } else if (node.tag === SuspenseComponent) {
            if ((node.effectTag & Update) !== NoEffect) {
              // Need to toggle the visibility of the primary children.
              var newIsHidden = node.memoizedState !== null;

              if (newIsHidden) {
                var primaryChildParent = node.child;

                if (primaryChildParent !== null) {
                  if (primaryChildParent.child !== null) {
                    primaryChildParent.child.return = primaryChildParent;
                    appendAllChildren(parent, primaryChildParent, true, newIsHidden);
                  }

                  var fallbackChildParent = primaryChildParent.sibling;

                  if (fallbackChildParent !== null) {
                    fallbackChildParent.return = node;
                    node = fallbackChildParent;
                    continue;
                  }
                }
              }
            }

            if (node.child !== null) {
              // Continue traversing like normal
              node.child.return = node;
              node = node.child;
              continue;
            }
          } else if (node.child !== null) {
            node.child.return = node;
            node = node.child;
            continue;
          } // $FlowFixMe This is correct but Flow is confused by the labeled break.


          node = node;

          if (node === workInProgress) {
            return;
          }

          while (node.sibling === null) {
            if (node.return === null || node.return === workInProgress) {
              return;
            }

            node = node.return;
          }

          node.sibling.return = node.return;
          node = node.sibling;
        }
      }; // An unfortunate fork of appendAllChildren because we have two different parent types.


      var appendAllChildrenToContainer = function (containerChildSet, workInProgress, needsVisibilityToggle, isHidden) {
        // We only have the top Fiber that was created but we need recurse down its
        // children to find all the terminal nodes.
        var node = workInProgress.child;

        while (node !== null) {
          // eslint-disable-next-line no-labels
          branches: if (node.tag === HostComponent) {
            var instance = node.stateNode;

            if (needsVisibilityToggle && isHidden) {
              // This child is inside a timed out tree. Hide it.
              var props = node.memoizedProps;
              var type = node.type;
              instance = cloneHiddenInstance(instance, type, props, node);
            }

            appendChildToContainerChildSet(containerChildSet, instance);
          } else if (node.tag === HostText) {
            var _instance3 = node.stateNode;

            if (needsVisibilityToggle && isHidden) {
              // This child is inside a timed out tree. Hide it.
              var text = node.memoizedProps;
              _instance3 = cloneHiddenTextInstance(_instance3, text, node);
            }

            appendChildToContainerChildSet(containerChildSet, _instance3);
          } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {
            var _instance4 = node.stateNode.instance;

            if (needsVisibilityToggle && isHidden) {
              // This child is inside a timed out tree. Hide it.
              var _props2 = node.memoizedProps;
              var _type2 = node.type;
              _instance4 = cloneHiddenInstance(_instance4, _type2, _props2, node);
            }

            appendChildToContainerChildSet(containerChildSet, _instance4);
          } else if (node.tag === HostPortal) {// If we have a portal child, then we don't want to traverse
            // down its children. Instead, we'll get insertions from each child in
            // the portal directly.
          } else if (node.tag === SuspenseComponent) {
            if ((node.effectTag & Update) !== NoEffect) {
              // Need to toggle the visibility of the primary children.
              var newIsHidden = node.memoizedState !== null;

              if (newIsHidden) {
                var primaryChildParent = node.child;

                if (primaryChildParent !== null) {
                  if (primaryChildParent.child !== null) {
                    primaryChildParent.child.return = primaryChildParent;
                    appendAllChildrenToContainer(containerChildSet, primaryChildParent, true, newIsHidden);
                  }

                  var fallbackChildParent = primaryChildParent.sibling;

                  if (fallbackChildParent !== null) {
                    fallbackChildParent.return = node;
                    node = fallbackChildParent;
                    continue;
                  }
                }
              }
            }

            if (node.child !== null) {
              // Continue traversing like normal
              node.child.return = node;
              node = node.child;
              continue;
            }
          } else if (node.child !== null) {
            node.child.return = node;
            node = node.child;
            continue;
          } // $FlowFixMe This is correct but Flow is confused by the labeled break.


          node = node;

          if (node === workInProgress) {
            return;
          }

          while (node.sibling === null) {
            if (node.return === null || node.return === workInProgress) {
              return;
            }

            node = node.return;
          }

          node.sibling.return = node.return;
          node = node.sibling;
        }
      };

      updateHostContainer = function (workInProgress) {
        var portalOrRoot = workInProgress.stateNode;
        var childrenUnchanged = workInProgress.firstEffect === null;

        if (childrenUnchanged) {// No changes, just reuse the existing instance.
        } else {
          var container = portalOrRoot.containerInfo;
          var newChildSet = createContainerChildSet(container); // If children might have changed, we have to add them all to the set.

          appendAllChildrenToContainer(newChildSet, workInProgress, false, false);
          portalOrRoot.pendingChildren = newChildSet; // Schedule an update on the container to swap out the container.

          markUpdate(workInProgress);
          finalizeContainerChildren(container, newChildSet);
        }
      };

      updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {
        var currentInstance = current.stateNode;
        var oldProps = current.memoizedProps; // If there are no effects associated with this node, then none of our children had any updates.
        // This guarantees that we can reuse all of them.

        var childrenUnchanged = workInProgress.firstEffect === null;

        if (childrenUnchanged && oldProps === newProps) {
          // No changes, just reuse the existing instance.
          // Note that this might release a previous clone.
          workInProgress.stateNode = currentInstance;
          return;
        }

        var recyclableInstance = workInProgress.stateNode;
        var currentHostContext = getHostContext();
        var updatePayload = null;

        if (oldProps !== newProps) {
          updatePayload = prepareUpdate(recyclableInstance, type, oldProps, newProps, rootContainerInstance, currentHostContext);
        }

        if (childrenUnchanged && updatePayload === null) {
          // No changes, just reuse the existing instance.
          // Note that this might release a previous clone.
          workInProgress.stateNode = currentInstance;
          return;
        }

        var newInstance = cloneInstance(currentInstance, updatePayload, type, oldProps, newProps, workInProgress, childrenUnchanged, recyclableInstance);

        if (finalizeInitialChildren(newInstance, type, newProps, rootContainerInstance, currentHostContext)) {
          markUpdate(workInProgress);
        }

        workInProgress.stateNode = newInstance;

        if (childrenUnchanged) {
          // If there are no other effects in this tree, we need to flag this node as having one.
          // Even though we're not going to use it for anything.
          // Otherwise parents won't know that there are new children to propagate upwards.
          markUpdate(workInProgress);
        } else {
          // If children might have changed, we have to add them all to the set.
          appendAllChildren(newInstance, workInProgress, false, false);
        }
      };

      updateHostText$1 = function (current, workInProgress, oldText, newText) {
        if (oldText !== newText) {
          // If the text content differs, we'll create a new text instance for it.
          var rootContainerInstance = getRootHostContainer();
          var currentHostContext = getHostContext();
          workInProgress.stateNode = createTextInstance(newText, rootContainerInstance, currentHostContext, workInProgress); // We'll have to mark it as having an effect, even though we won't use the effect for anything.
          // This lets the parents know that at least one of their children has changed.

          markUpdate(workInProgress);
        }
      };
    } else {
      // No host operations
      updateHostContainer = function (workInProgress) {// Noop
      };

      updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {// Noop
      };

      updateHostText$1 = function (current, workInProgress, oldText, newText) {// Noop
      };
    }

    function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
      switch (renderState.tailMode) {
        case 'hidden':
          {
            // Any insertions at the end of the tail list after this point
            // should be invisible. If there are already mounted boundaries
            // anything before them are not considered for collapsing.
            // Therefore we need to go through the whole tail to find if
            // there are any.
            var tailNode = renderState.tail;
            var lastTailNode = null;

            while (tailNode !== null) {
              if (tailNode.alternate !== null) {
                lastTailNode = tailNode;
              }

              tailNode = tailNode.sibling;
            } // Next we're simply going to delete all insertions after the
            // last rendered item.


            if (lastTailNode === null) {
              // All remaining items in the tail are insertions.
              renderState.tail = null;
            } else {
              // Detach the insertion after the last node that was already
              // inserted.
              lastTailNode.sibling = null;
            }

            break;
          }

        case 'collapsed':
          {
            // Any insertions at the end of the tail list after this point
            // should be invisible. If there are already mounted boundaries
            // anything before them are not considered for collapsing.
            // Therefore we need to go through the whole tail to find if
            // there are any.
            var _tailNode = renderState.tail;
            var _lastTailNode = null;

            while (_tailNode !== null) {
              if (_tailNode.alternate !== null) {
                _lastTailNode = _tailNode;
              }

              _tailNode = _tailNode.sibling;
            } // Next we're simply going to delete all insertions after the
            // last rendered item.


            if (_lastTailNode === null) {
              // All remaining items in the tail are insertions.
              if (!hasRenderedATailFallback && renderState.tail !== null) {
                // We suspended during the head. We want to show at least one
                // row at the tail. So we'll keep on and cut off the rest.
                renderState.tail.sibling = null;
              } else {
                renderState.tail = null;
              }
            } else {
              // Detach the insertion after the last node that was already
              // inserted.
              _lastTailNode.sibling = null;
            }

            break;
          }
      }
    }

    function completeWork(current, workInProgress, renderExpirationTime) {
      var newProps = workInProgress.pendingProps;

      switch (workInProgress.tag) {
        case IndeterminateComponent:
          break;

        case LazyComponent:
          break;

        case SimpleMemoComponent:
        case FunctionComponent:
          break;

        case ClassComponent:
          {
            var Component = workInProgress.type;

            if (isContextProvider(Component)) {
              popContext(workInProgress);
            }

            break;
          }

        case HostRoot:
          {
            popHostContainer(workInProgress);
            popTopLevelContextObject(workInProgress);
            var fiberRoot = workInProgress.stateNode;

            if (fiberRoot.pendingContext) {
              fiberRoot.context = fiberRoot.pendingContext;
              fiberRoot.pendingContext = null;
            }

            if (current === null || current.child === null) {
              // If we hydrated, pop so that we can delete any remaining children
              // that weren't hydrated.
              var wasHydrated = popHydrationState(workInProgress);

              if (wasHydrated) {
                // If we hydrated, then we'll need to schedule an update for
                // the commit side-effects on the root.
                markUpdate(workInProgress);
              }
            }

            updateHostContainer(workInProgress);
            break;
          }

        case HostComponent:
          {
            popHostContext(workInProgress);
            var rootContainerInstance = getRootHostContainer();
            var type = workInProgress.type;

            if (current !== null && workInProgress.stateNode != null) {
              updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance);

              if (enableFlareAPI) {
                var prevListeners = current.memoizedProps.listeners;
                var nextListeners = newProps.listeners;

                if (prevListeners !== nextListeners) {
                  markUpdate(workInProgress);
                }
              }

              if (current.ref !== workInProgress.ref) {
                markRef$1(workInProgress);
              }
            } else {
              if (!newProps) {
                (function () {
                  if (!(workInProgress.stateNode !== null)) {
                    {
                      throw ReactError(Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."));
                    }
                  }
                })(); // This can happen when we abort work.


                break;
              }

              var currentHostContext = getHostContext(); // TODO: Move createInstance to beginWork and keep it on a context
              // "stack" as the parent. Then append children as we go in beginWork
              // or completeWork depending on we want to add then top->down or
              // bottom->up. Top->down is faster in IE11.

              var _wasHydrated = popHydrationState(workInProgress);

              if (_wasHydrated) {
                // TODO: Move this and createInstance step into the beginPhase
                // to consolidate.
                if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, currentHostContext)) {
                  // If changes to the hydrated node needs to be applied at the
                  // commit-phase we mark this as such.
                  markUpdate(workInProgress);
                }

                if (enableFlareAPI) {
                  var listeners = newProps.listeners;

                  if (listeners != null) {
                    updateEventListeners(listeners, workInProgress, rootContainerInstance);
                  }
                }
              } else {
                var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);
                appendAllChildren(instance, workInProgress, false, false); // This needs to be set before we mount Flare event listeners

                workInProgress.stateNode = instance;

                if (enableFlareAPI) {
                  var _listeners = newProps.listeners;

                  if (_listeners != null) {
                    updateEventListeners(_listeners, workInProgress, rootContainerInstance);
                  }
                } // Certain renderers require commit-time effects for initial mount.
                // (eg DOM renderer supports auto-focus for certain elements).
                // Make sure such renderers get scheduled for later work.


                if (finalizeInitialChildren(instance, type, newProps, rootContainerInstance, currentHostContext)) {
                  markUpdate(workInProgress);
                }
              }

              if (workInProgress.ref !== null) {
                // If there is a ref on a host node we need to schedule a callback
                markRef$1(workInProgress);
              }
            }

            break;
          }

        case HostText:
          {
            var newText = newProps;

            if (current && workInProgress.stateNode != null) {
              var oldText = current.memoizedProps; // If we have an alternate, that means this is an update and we need
              // to schedule a side-effect to do the updates.

              updateHostText$1(current, workInProgress, oldText, newText);
            } else {
              if (typeof newText !== 'string') {
                (function () {
                  if (!(workInProgress.stateNode !== null)) {
                    {
                      throw ReactError(Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."));
                    }
                  }
                })(); // This can happen when we abort work.

              }

              var _rootContainerInstance = getRootHostContainer();

              var _currentHostContext = getHostContext();

              var _wasHydrated2 = popHydrationState(workInProgress);

              if (_wasHydrated2) {
                if (prepareToHydrateHostTextInstance(workInProgress)) {
                  markUpdate(workInProgress);
                }
              } else {
                workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress);
              }
            }

            break;
          }

        case ForwardRef:
          break;

        case SuspenseComponent:
          {
            popSuspenseContext(workInProgress);
            var nextState = workInProgress.memoizedState;

            if (enableSuspenseServerRenderer) {
              if (nextState !== null && nextState.dehydrated !== null) {
                if (current === null) {
                  var _wasHydrated3 = popHydrationState(workInProgress);

                  (function () {
                    if (!_wasHydrated3) {
                      {
                        throw ReactError(Error("A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React."));
                      }
                    }
                  })();

                  prepareToHydrateHostSuspenseInstance(workInProgress);

                  if (enableSchedulerTracing) {
                    markSpawnedWork(Never);
                  }

                  return null;
                } else {
                  // We should never have been in a hydration state if we didn't have a current.
                  // However, in some of those paths, we might have reentered a hydration state
                  // and then we might be inside a hydration state. In that case, we'll need to
                  // exit out of it.
                  resetHydrationState();

                  if ((workInProgress.effectTag & DidCapture) === NoEffect) {
                    // This boundary did not suspend so it's now hydrated and unsuspended.
                    workInProgress.memoizedState = null;
                  } // If nothing suspended, we need to schedule an effect to mark this boundary
                  // as having hydrated so events know that they're free be invoked.
                  // It's also a signal to replay events and the suspense callback.
                  // If something suspended, schedule an effect to attach retry listeners.
                  // So we might as well always mark this.


                  workInProgress.effectTag |= Update;
                  return null;
                }
              }
            }

            if ((workInProgress.effectTag & DidCapture) !== NoEffect) {
              // Something suspended. Re-render with the fallback children.
              workInProgress.expirationTime = renderExpirationTime; // Do not reset the effect list.

              return workInProgress;
            }

            var nextDidTimeout = nextState !== null;
            var prevDidTimeout = false;

            if (current === null) {
              // In cases where we didn't find a suitable hydration boundary we never
              // put this in dehydrated mode, but we still need to pop the hydration
              // state since we might be inside the insertion tree.
              popHydrationState(workInProgress);
            } else {
              var prevState = current.memoizedState;
              prevDidTimeout = prevState !== null;

              if (!nextDidTimeout && prevState !== null) {
                // We just switched from the fallback to the normal children.
                // Delete the fallback.
                // TODO: Would it be better to store the fallback fragment on
                // the stateNode during the begin phase?
                var currentFallbackChild = current.child.sibling;

                if (currentFallbackChild !== null) {
                  // Deletions go at the beginning of the return fiber's effect list
                  var first = workInProgress.firstEffect;

                  if (first !== null) {
                    workInProgress.firstEffect = currentFallbackChild;
                    currentFallbackChild.nextEffect = first;
                  } else {
                    workInProgress.firstEffect = workInProgress.lastEffect = currentFallbackChild;
                    currentFallbackChild.nextEffect = null;
                  }

                  currentFallbackChild.effectTag = Deletion;
                }
              }
            }

            if (nextDidTimeout && !prevDidTimeout) {
              // If this subtreee is running in batched mode we can suspend,
              // otherwise we won't suspend.
              // TODO: This will still suspend a synchronous tree if anything
              // in the concurrent tree already suspended during this render.
              // This is a known bug.
              if ((workInProgress.mode & BatchedMode) !== NoMode) {
                // TODO: Move this back to throwException because this is too late
                // if this is a large tree which is common for initial loads. We
                // don't know if we should restart a render or not until we get
                // this marker, and this is too late.
                // If this render already had a ping or lower pri updates,
                // and this is the first time we know we're going to suspend we
                // should be able to immediately restart from within throwException.
                var hasInvisibleChildContext = current === null && workInProgress.memoizedProps.unstable_avoidThisFallback !== true;

                if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) {
                  // If this was in an invisible tree or a new render, then showing
                  // this boundary is ok.
                  renderDidSuspend();
                } else {
                  // Otherwise, we're going to have to hide content so we should
                  // suspend for longer if possible.
                  renderDidSuspendDelayIfPossible();
                }
              }
            }

            if (supportsPersistence) {
              // TODO: Only schedule updates if not prevDidTimeout.
              if (nextDidTimeout) {
                // If this boundary just timed out, schedule an effect to attach a
                // retry listener to the proimse. This flag is also used to hide the
                // primary children.
                workInProgress.effectTag |= Update;
              }
            }

            if (supportsMutation) {
              // TODO: Only schedule updates if these values are non equal, i.e. it changed.
              if (nextDidTimeout || prevDidTimeout) {
                // If this boundary just timed out, schedule an effect to attach a
                // retry listener to the proimse. This flag is also used to hide the
                // primary children. In mutation mode, we also need the flag to
                // *unhide* children that were previously hidden, so check if the
                // is currently timed out, too.
                workInProgress.effectTag |= Update;
              }
            }

            if (enableSuspenseCallback && workInProgress.updateQueue !== null && workInProgress.memoizedProps.suspenseCallback != null) {
              // Always notify the callback
              workInProgress.effectTag |= Update;
            }

            break;
          }

        case Fragment:
          break;

        case Mode:
          break;

        case Profiler:
          break;

        case HostPortal:
          popHostContainer(workInProgress);
          updateHostContainer(workInProgress);
          break;

        case ContextProvider:
          // Pop provider fiber
          popProvider(workInProgress);
          break;

        case ContextConsumer:
          break;

        case MemoComponent:
          break;

        case IncompleteClassComponent:
          {
            // Same as class component case. I put it down here so that the tags are
            // sequential to ensure this switch is compiled to a jump table.
            var _Component = workInProgress.type;

            if (isContextProvider(_Component)) {
              popContext(workInProgress);
            }

            break;
          }

        case SuspenseListComponent:
          {
            popSuspenseContext(workInProgress);
            var renderState = workInProgress.memoizedState;

            if (renderState === null) {
              // We're running in the default, "independent" mode. We don't do anything
              // in this mode.
              break;
            }

            var didSuspendAlready = (workInProgress.effectTag & DidCapture) !== NoEffect;
            var renderedTail = renderState.rendering;

            if (renderedTail === null) {
              // We just rendered the head.
              if (!didSuspendAlready) {
                // This is the first pass. We need to figure out if anything is still
                // suspended in the rendered set.
                // If new content unsuspended, but there's still some content that
                // didn't. Then we need to do a second pass that forces everything
                // to keep showing their fallbacks.
                // We might be suspended if something in this render pass suspended, or
                // something in the previous committed pass suspended. Otherwise,
                // there's no chance so we can skip the expensive call to
                // findFirstSuspended.
                var cannotBeSuspended = renderHasNotSuspendedYet() && (current === null || (current.effectTag & DidCapture) === NoEffect);

                if (!cannotBeSuspended) {
                  var row = workInProgress.child;

                  while (row !== null) {
                    var suspended = findFirstSuspended(row);

                    if (suspended !== null) {
                      didSuspendAlready = true;
                      workInProgress.effectTag |= DidCapture;
                      cutOffTailIfNeeded(renderState, false); // If this is a newly suspended tree, it might not get committed as
                      // part of the second pass. In that case nothing will subscribe to
                      // its thennables. Instead, we'll transfer its thennables to the
                      // SuspenseList so that it can retry if they resolve.
                      // There might be multiple of these in the list but since we're
                      // going to wait for all of them anyway, it doesn't really matter
                      // which ones gets to ping. In theory we could get clever and keep
                      // track of how many dependencies remain but it gets tricky because
                      // in the meantime, we can add/remove/change items and dependencies.
                      // We might bail out of the loop before finding any but that
                      // doesn't matter since that means that the other boundaries that
                      // we did find already has their listeners attached.

                      var newThennables = suspended.updateQueue;

                      if (newThennables !== null) {
                        workInProgress.updateQueue = newThennables;
                        workInProgress.effectTag |= Update;
                      } // Rerender the whole list, but this time, we'll force fallbacks
                      // to stay in place.
                      // Reset the effect list before doing the second pass since that's now invalid.


                      workInProgress.firstEffect = workInProgress.lastEffect = null; // Reset the child fibers to their original state.

                      resetChildFibers(workInProgress, renderExpirationTime); // Set up the Suspense Context to force suspense and immediately
                      // rerender the children.

                      pushSuspenseContext(workInProgress, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback));
                      return workInProgress.child;
                    }

                    row = row.sibling;
                  }
                }
              } else {
                cutOffTailIfNeeded(renderState, false);
              } // Next we're going to render the tail.

            } else {
              // Append the rendered row to the child list.
              if (!didSuspendAlready) {
                var _suspended = findFirstSuspended(renderedTail);

                if (_suspended !== null) {
                  workInProgress.effectTag |= DidCapture;
                  didSuspendAlready = true;
                  cutOffTailIfNeeded(renderState, true); // This might have been modified.

                  if (renderState.tail === null && renderState.tailMode === 'hidden') {
                    // We need to delete the row we just rendered.
                    // Ensure we transfer the update queue to the parent.
                    var _newThennables = _suspended.updateQueue;

                    if (_newThennables !== null) {
                      workInProgress.updateQueue = _newThennables;
                      workInProgress.effectTag |= Update;
                    } // Reset the effect list to what it w as before we rendered this
                    // child. The nested children have already appended themselves.


                    var lastEffect = workInProgress.lastEffect = renderState.lastEffect; // Remove any effects that were appended after this point.

                    if (lastEffect !== null) {
                      lastEffect.nextEffect = null;
                    } // We're done.


                    return null;
                  }
                } else if (now() > renderState.tailExpiration && renderExpirationTime > Never) {
                  // We have now passed our CPU deadline and we'll just give up further
                  // attempts to render the main content and only render fallbacks.
                  // The assumption is that this is usually faster.
                  workInProgress.effectTag |= DidCapture;
                  didSuspendAlready = true;
                  cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this
                  // to get it started back up to attempt the next item. If we can show
                  // them, then they really have the same priority as this render.
                  // So we'll pick it back up the very next render pass once we've had
                  // an opportunity to yield for paint.

                  var nextPriority = renderExpirationTime - 1;
                  workInProgress.expirationTime = workInProgress.childExpirationTime = nextPriority;

                  if (enableSchedulerTracing) {
                    markSpawnedWork(nextPriority);
                  }
                }
              }

              if (renderState.isBackwards) {
                // The effect list of the backwards tail will have been added
                // to the end. This breaks the guarantee that life-cycles fire in
                // sibling order but that isn't a strong guarantee promised by React.
                // Especially since these might also just pop in during future commits.
                // Append to the beginning of the list.
                renderedTail.sibling = workInProgress.child;
                workInProgress.child = renderedTail;
              } else {
                var previousSibling = renderState.last;

                if (previousSibling !== null) {
                  previousSibling.sibling = renderedTail;
                } else {
                  workInProgress.child = renderedTail;
                }

                renderState.last = renderedTail;
              }
            }

            if (renderState.tail !== null) {
              // We still have tail rows to render.
              if (renderState.tailExpiration === 0) {
                // Heuristic for how long we're willing to spend rendering rows
                // until we just give up and show what we have so far.
                var TAIL_EXPIRATION_TIMEOUT_MS = 500;
                renderState.tailExpiration = now() + TAIL_EXPIRATION_TIMEOUT_MS;
              } // Pop a row.


              var next = renderState.tail;
              renderState.rendering = next;
              renderState.tail = next.sibling;
              renderState.lastEffect = workInProgress.lastEffect;
              next.sibling = null; // Restore the context.
              // TODO: We can probably just avoid popping it instead and only
              // setting it the first time we go from not suspended to suspended.

              var suspenseContext = suspenseStackCursor.current;

              if (didSuspendAlready) {
                suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
              } else {
                suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
              }

              pushSuspenseContext(workInProgress, suspenseContext); // Do a pass over the next row.

              return next;
            }

            break;
          }

        case FundamentalComponent:
          {
            if (enableFundamentalAPI) {
              var fundamentalImpl = workInProgress.type.impl;
              var fundamentalInstance = workInProgress.stateNode;

              if (fundamentalInstance === null) {
                var getInitialState = fundamentalImpl.getInitialState;
                var fundamentalState;

                if (getInitialState !== undefined) {
                  fundamentalState = getInitialState(newProps);
                }

                fundamentalInstance = workInProgress.stateNode = createFundamentalStateInstance(workInProgress, newProps, fundamentalImpl, fundamentalState || {});

                var _instance5 = getFundamentalComponentInstance(fundamentalInstance);

                fundamentalInstance.instance = _instance5;

                if (fundamentalImpl.reconcileChildren === false) {
                  return null;
                }

                appendAllChildren(_instance5, workInProgress, false, false);
                mountFundamentalComponent(fundamentalInstance);
              } else {
                // We fire update in commit phase
                var prevProps = fundamentalInstance.props;
                fundamentalInstance.prevProps = prevProps;
                fundamentalInstance.props = newProps;
                fundamentalInstance.currentFiber = workInProgress;

                if (supportsPersistence) {
                  var _instance6 = cloneFundamentalInstance(fundamentalInstance);

                  fundamentalInstance.instance = _instance6;
                  appendAllChildren(_instance6, workInProgress, false, false);
                }

                var shouldUpdate = shouldUpdateFundamentalComponent(fundamentalInstance);

                if (shouldUpdate) {
                  markUpdate(workInProgress);
                }
              }
            }

            break;
          }

        case ScopeComponent:
          {
            if (enableScopeAPI) {
              if (current === null) {
                var _type3 = workInProgress.type;
                var scopeInstance = {
                  fiber: workInProgress,
                  methods: null
                };
                workInProgress.stateNode = scopeInstance;
                scopeInstance.methods = createScopeMethods(_type3, scopeInstance);

                if (enableFlareAPI) {
                  var _listeners2 = newProps.listeners;

                  if (_listeners2 != null) {
                    var _rootContainerInstance2 = getRootHostContainer();

                    updateEventListeners(_listeners2, workInProgress, _rootContainerInstance2);
                  }
                }

                if (workInProgress.ref !== null) {
                  markRef$1(workInProgress);
                  markUpdate(workInProgress);
                }
              } else {
                if (enableFlareAPI) {
                  var _prevListeners = current.memoizedProps.listeners;
                  var _nextListeners = newProps.listeners;

                  if (_prevListeners !== _nextListeners || workInProgress.ref !== null) {
                    markUpdate(workInProgress);
                  }
                } else {
                  if (workInProgress.ref !== null) {
                    markUpdate(workInProgress);
                  }
                }

                if (current.ref !== workInProgress.ref) {
                  markRef$1(workInProgress);
                }
              }
            }

            break;
          }

        default:
          (function () {
            {
              {
                throw ReactError(Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in React. Please file an issue."));
              }
            }
          })();

      }

      return null;
    }

    function unwindWork(workInProgress, renderExpirationTime) {
      switch (workInProgress.tag) {
        case ClassComponent:
          {
            var Component = workInProgress.type;

            if (isContextProvider(Component)) {
              popContext(workInProgress);
            }

            var effectTag = workInProgress.effectTag;

            if (effectTag & ShouldCapture) {
              workInProgress.effectTag = effectTag & ~ShouldCapture | DidCapture;
              return workInProgress;
            }

            return null;
          }

        case HostRoot:
          {
            popHostContainer(workInProgress);
            popTopLevelContextObject(workInProgress);
            var _effectTag = workInProgress.effectTag;

            (function () {
              if (!((_effectTag & DidCapture) === NoEffect)) {
                {
                  throw ReactError(Error("The root failed to unmount after an error. This is likely a bug in React. Please file an issue."));
                }
              }
            })();

            workInProgress.effectTag = _effectTag & ~ShouldCapture | DidCapture;
            return workInProgress;
          }

        case HostComponent:
          {
            // TODO: popHydrationState
            popHostContext(workInProgress);
            return null;
          }

        case SuspenseComponent:
          {
            popSuspenseContext(workInProgress);

            if (enableSuspenseServerRenderer) {
              var suspenseState = workInProgress.memoizedState;

              if (suspenseState !== null && suspenseState.dehydrated !== null) {
                (function () {
                  if (!(workInProgress.alternate !== null)) {
                    {
                      throw ReactError(Error("Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue."));
                    }
                  }
                })();

                resetHydrationState();
              }
            }

            var _effectTag2 = workInProgress.effectTag;

            if (_effectTag2 & ShouldCapture) {
              workInProgress.effectTag = _effectTag2 & ~ShouldCapture | DidCapture; // Captured a suspense effect. Re-render the boundary.

              return workInProgress;
            }

            return null;
          }

        case SuspenseListComponent:
          {
            popSuspenseContext(workInProgress); // SuspenseList doesn't actually catch anything. It should've been
            // caught by a nested boundary. If not, it should bubble through.

            return null;
          }

        case HostPortal:
          popHostContainer(workInProgress);
          return null;

        case ContextProvider:
          popProvider(workInProgress);
          return null;

        default:
          return null;
      }
    }

    function unwindInterruptedWork(interruptedWork) {
      switch (interruptedWork.tag) {
        case ClassComponent:
          {
            var childContextTypes = interruptedWork.type.childContextTypes;

            if (childContextTypes !== null && childContextTypes !== undefined) {
              popContext(interruptedWork);
            }

            break;
          }

        case HostRoot:
          {
            popHostContainer(interruptedWork);
            popTopLevelContextObject(interruptedWork);
            break;
          }

        case HostComponent:
          {
            popHostContext(interruptedWork);
            break;
          }

        case HostPortal:
          popHostContainer(interruptedWork);
          break;

        case SuspenseComponent:
          popSuspenseContext(interruptedWork);
          break;

        case SuspenseListComponent:
          popSuspenseContext(interruptedWork);
          break;

        case ContextProvider:
          popProvider(interruptedWork);
          break;

        default:
          break;
      }
    }

    function createCapturedValue(value, source) {
      // If the value is an error, call this function immediately after it is thrown
      // so the stack is accurate.
      return {
        value: value,
        source: source,
        stack: getStackByFiberInDevAndProd(source)
      };
    } // This module is forked in different environments.
    // By default, return `true` to log errors to the console.
    // Forks can return `false` if this isn't desirable.


    function showErrorDialog(capturedError) {
      return true;
    }

    function logCapturedError(capturedError) {
      var logError = showErrorDialog(capturedError); // Allow injected showErrorDialog() to prevent default console.error logging.
      // This enables renderers like ReactNative to better manage redbox behavior.

      if (logError === false) {
        return;
      }

      var error = capturedError.error;
      {
        var componentName = capturedError.componentName,
            componentStack = capturedError.componentStack,
            errorBoundaryName = capturedError.errorBoundaryName,
            errorBoundaryFound = capturedError.errorBoundaryFound,
            willRetry = capturedError.willRetry; // Browsers support silencing uncaught errors by calling
        // `preventDefault()` in window `error` handler.
        // We record this information as an expando on the error.

        if (error != null && error._suppressLogging) {
          if (errorBoundaryFound && willRetry) {
            // The error is recoverable and was silenced.
            // Ignore it and don't print the stack addendum.
            // This is handy for testing error boundaries without noise.
            return;
          } // The error is fatal. Since the silencing might have
          // been accidental, we'll surface it anyway.
          // However, the browser would have silenced the original error
          // so we'll print it first, and then print the stack addendum.


          console.error(error); // For a more detailed description of this block, see:
          // https://github.com/facebook/react/pull/13384
        }

        var componentNameMessage = componentName ? "The above error occurred in the <" + componentName + "> component:" : 'The above error occurred in one of your React components:';
        var errorBoundaryMessage; // errorBoundaryFound check is sufficient; errorBoundaryName check is to satisfy Flow.

        if (errorBoundaryFound && errorBoundaryName) {
          if (willRetry) {
            errorBoundaryMessage = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + errorBoundaryName + ".");
          } else {
            errorBoundaryMessage = "This error was initially handled by the error boundary " + errorBoundaryName + ".\n" + "Recreating the tree from scratch failed so React will unmount the tree.";
          }
        } else {
          errorBoundaryMessage = 'Consider adding an error boundary to your tree to customize error handling behavior.\n' + 'Visit https://fb.me/react-error-boundaries to learn more about error boundaries.';
        }

        var combinedMessage = "" + componentNameMessage + componentStack + "\n\n" + ("" + errorBoundaryMessage); // In development, we provide our own message with just the component stack.
        // We don't include the original error message and JS stack because the browser
        // has already printed it. Even if the application swallows the error, it is still
        // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.

        console.error(combinedMessage);
      }
    }

    var didWarnAboutUndefinedSnapshotBeforeUpdate = null;
    {
      didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
    }
    var PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;

    function logError(boundary, errorInfo) {
      var source = errorInfo.source;
      var stack = errorInfo.stack;

      if (stack === null && source !== null) {
        stack = getStackByFiberInDevAndProd(source);
      }

      var capturedError = {
        componentName: source !== null ? getComponentName(source.type) : null,
        componentStack: stack !== null ? stack : '',
        error: errorInfo.value,
        errorBoundary: null,
        errorBoundaryName: null,
        errorBoundaryFound: false,
        willRetry: false
      };

      if (boundary !== null && boundary.tag === ClassComponent) {
        capturedError.errorBoundary = boundary.stateNode;
        capturedError.errorBoundaryName = getComponentName(boundary.type);
        capturedError.errorBoundaryFound = true;
        capturedError.willRetry = true;
      }

      try {
        logCapturedError(capturedError);
      } catch (e) {
        // This method must not throw, or React internal state will get messed up.
        // If console.error is overridden, or logCapturedError() shows a dialog that throws,
        // we want to report this error outside of the normal stack as a last resort.
        // https://github.com/facebook/react/issues/13188
        setTimeout(function () {
          throw e;
        });
      }
    }

    var callComponentWillUnmountWithTimer = function (current$$1, instance) {
      startPhaseTimer(current$$1, 'componentWillUnmount');
      instance.props = current$$1.memoizedProps;
      instance.state = current$$1.memoizedState;
      instance.componentWillUnmount();
      stopPhaseTimer();
    }; // Capture errors so they don't interrupt unmounting.


    function safelyCallComponentWillUnmount(current$$1, instance) {
      {
        invokeGuardedCallback(null, callComponentWillUnmountWithTimer, null, current$$1, instance);

        if (hasCaughtError()) {
          var unmountError = clearCaughtError();
          captureCommitPhaseError(current$$1, unmountError);
        }
      }
    }

    function safelyDetachRef(current$$1) {
      var ref = current$$1.ref;

      if (ref !== null) {
        if (typeof ref === 'function') {
          {
            invokeGuardedCallback(null, ref, null, null);

            if (hasCaughtError()) {
              var refError = clearCaughtError();
              captureCommitPhaseError(current$$1, refError);
            }
          }
        } else {
          ref.current = null;
        }
      }
    }

    function safelyCallDestroy(current$$1, destroy) {
      {
        invokeGuardedCallback(null, destroy, null);

        if (hasCaughtError()) {
          var error = clearCaughtError();
          captureCommitPhaseError(current$$1, error);
        }
      }
    }

    function commitBeforeMutationLifeCycles(current$$1, finishedWork) {
      switch (finishedWork.tag) {
        case FunctionComponent:
        case ForwardRef:
        case SimpleMemoComponent:
          {
            commitHookEffectList(UnmountSnapshot, NoEffect$1, finishedWork);
            return;
          }

        case ClassComponent:
          {
            if (finishedWork.effectTag & Snapshot) {
              if (current$$1 !== null) {
                var prevProps = current$$1.memoizedProps;
                var prevState = current$$1.memoizedState;
                startPhaseTimer(finishedWork, 'getSnapshotBeforeUpdate');
                var instance = finishedWork.stateNode; // We could update instance props and state here,
                // but instead we rely on them being set during last render.
                // TODO: revisit this when we implement resuming.

                {
                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                    !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                    !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                  }
                }
                var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);
                {
                  var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;

                  if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {
                    didWarnSet.add(finishedWork.type);
                    warningWithoutStack$1(false, '%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' + 'must be returned. You have returned undefined.', getComponentName(finishedWork.type));
                  }
                }
                instance.__reactInternalSnapshotBeforeUpdate = snapshot;
                stopPhaseTimer();
              }
            }

            return;
          }

        case HostRoot:
        case HostComponent:
        case HostText:
        case HostPortal:
        case IncompleteClassComponent:
          // Nothing to do for these component types
          return;

        default:
          {
            (function () {
              {
                {
                  throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
                }
              }
            })();
          }
      }
    }

    function commitHookEffectList(unmountTag, mountTag, finishedWork) {
      var updateQueue = finishedWork.updateQueue;
      var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;

      if (lastEffect !== null) {
        var firstEffect = lastEffect.next;
        var effect = firstEffect;

        do {
          if ((effect.tag & unmountTag) !== NoEffect$1) {
            // Unmount
            var destroy = effect.destroy;
            effect.destroy = undefined;

            if (destroy !== undefined) {
              destroy();
            }
          }

          if ((effect.tag & mountTag) !== NoEffect$1) {
            // Mount
            var create = effect.create;
            effect.destroy = create();
            {
              var _destroy = effect.destroy;

              if (_destroy !== undefined && typeof _destroy !== 'function') {
                var addendum = void 0;

                if (_destroy === null) {
                  addendum = ' You returned null. If your effect does not require clean ' + 'up, return undefined (or nothing).';
                } else if (typeof _destroy.then === 'function') {
                  addendum = '\n\nIt looks like you wrote useEffect(async () => ...) or returned a Promise. ' + 'Instead, write the async function inside your effect ' + 'and call it immediately:\n\n' + 'useEffect(() => {\n' + '  async function fetchData() {\n' + '    // You can await here\n' + '    const response = await MyAPI.getData(someId);\n' + '    // ...\n' + '  }\n' + '  fetchData();\n' + "}, [someId]); // Or [] if effect doesn't need props or state\n\n" + 'Learn more about data fetching with Hooks: https://fb.me/react-hooks-data-fetching';
                } else {
                  addendum = ' You returned: ' + _destroy;
                }

                warningWithoutStack$1(false, 'An effect function must not return anything besides a function, ' + 'which is used for clean-up.%s%s', addendum, getStackByFiberInDevAndProd(finishedWork));
              }
            }
          }

          effect = effect.next;
        } while (effect !== firstEffect);
      }
    }

    function commitPassiveHookEffects(finishedWork) {
      if ((finishedWork.effectTag & Passive) !== NoEffect) {
        switch (finishedWork.tag) {
          case FunctionComponent:
          case ForwardRef:
          case SimpleMemoComponent:
            {
              commitHookEffectList(UnmountPassive, NoEffect$1, finishedWork);
              commitHookEffectList(NoEffect$1, MountPassive, finishedWork);
              break;
            }

          default:
            break;
        }
      }
    }

    function commitLifeCycles(finishedRoot, current$$1, finishedWork, committedExpirationTime) {
      switch (finishedWork.tag) {
        case FunctionComponent:
        case ForwardRef:
        case SimpleMemoComponent:
          {
            commitHookEffectList(UnmountLayout, MountLayout, finishedWork);
            break;
          }

        case ClassComponent:
          {
            var instance = finishedWork.stateNode;

            if (finishedWork.effectTag & Update) {
              if (current$$1 === null) {
                startPhaseTimer(finishedWork, 'componentDidMount'); // We could update instance props and state here,
                // but instead we rely on them being set during last render.
                // TODO: revisit this when we implement resuming.

                {
                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                    !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                    !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                  }
                }
                instance.componentDidMount();
                stopPhaseTimer();
              } else {
                var prevProps = finishedWork.elementType === finishedWork.type ? current$$1.memoizedProps : resolveDefaultProps(finishedWork.type, current$$1.memoizedProps);
                var prevState = current$$1.memoizedState;
                startPhaseTimer(finishedWork, 'componentDidUpdate'); // We could update instance props and state here,
                // but instead we rely on them being set during last render.
                // TODO: revisit this when we implement resuming.

                {
                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                    !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                    !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                  }
                }
                instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                stopPhaseTimer();
              }
            }

            var updateQueue = finishedWork.updateQueue;

            if (updateQueue !== null) {
              {
                if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                  !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                  !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                }
              } // We could update instance props and state here,
              // but instead we rely on them being set during last render.
              // TODO: revisit this when we implement resuming.

              commitUpdateQueue(finishedWork, updateQueue, instance, committedExpirationTime);
            }

            return;
          }

        case HostRoot:
          {
            var _updateQueue = finishedWork.updateQueue;

            if (_updateQueue !== null) {
              var _instance = null;

              if (finishedWork.child !== null) {
                switch (finishedWork.child.tag) {
                  case HostComponent:
                    _instance = getPublicInstance(finishedWork.child.stateNode);
                    break;

                  case ClassComponent:
                    _instance = finishedWork.child.stateNode;
                    break;
                }
              }

              commitUpdateQueue(finishedWork, _updateQueue, _instance, committedExpirationTime);
            }

            return;
          }

        case HostComponent:
          {
            var _instance2 = finishedWork.stateNode; // Renderers may schedule work to be done after host components are mounted
            // (eg DOM renderer may schedule auto-focus for inputs and form controls).
            // These effects should only be committed when components are first mounted,
            // aka when there is no current/alternate.

            if (current$$1 === null && finishedWork.effectTag & Update) {
              var type = finishedWork.type;
              var props = finishedWork.memoizedProps;
              commitMount(_instance2, type, props, finishedWork);
            }

            return;
          }

        case HostText:
          {
            // We have no life-cycles associated with text.
            return;
          }

        case HostPortal:
          {
            // We have no life-cycles associated with portals.
            return;
          }

        case Profiler:
          {
            if (enableProfilerTimer) {
              var onRender = finishedWork.memoizedProps.onRender;

              if (typeof onRender === 'function') {
                if (enableSchedulerTracing) {
                  onRender(finishedWork.memoizedProps.id, current$$1 === null ? 'mount' : 'update', finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, getCommitTime(), finishedRoot.memoizedInteractions);
                } else {
                  onRender(finishedWork.memoizedProps.id, current$$1 === null ? 'mount' : 'update', finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, getCommitTime());
                }
              }
            }

            return;
          }

        case SuspenseComponent:
          {
            commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
            return;
          }

        case SuspenseListComponent:
        case IncompleteClassComponent:
        case FundamentalComponent:
        case ScopeComponent:
          return;

        default:
          {
            (function () {
              {
                {
                  throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
                }
              }
            })();
          }
      }
    }

    function hideOrUnhideAllChildren(finishedWork, isHidden) {
      if (supportsMutation) {
        // We only have the top Fiber that was inserted but we need to recurse down its
        // children to find all the terminal nodes.
        var node = finishedWork;

        while (true) {
          if (node.tag === HostComponent) {
            var instance = node.stateNode;

            if (isHidden) {
              hideInstance(instance);
            } else {
              unhideInstance(node.stateNode, node.memoizedProps);
            }
          } else if (node.tag === HostText) {
            var _instance3 = node.stateNode;

            if (isHidden) {
              hideTextInstance(_instance3);
            } else {
              unhideTextInstance(_instance3, node.memoizedProps);
            }
          } else if (node.tag === SuspenseComponent && node.memoizedState !== null && node.memoizedState.dehydrated === null) {
            // Found a nested Suspense component that timed out. Skip over the
            // primary child fragment, which should remain hidden.
            var fallbackChildFragment = node.child.sibling;
            fallbackChildFragment.return = node;
            node = fallbackChildFragment;
            continue;
          } else if (node.child !== null) {
            node.child.return = node;
            node = node.child;
            continue;
          }

          if (node === finishedWork) {
            return;
          }

          while (node.sibling === null) {
            if (node.return === null || node.return === finishedWork) {
              return;
            }

            node = node.return;
          }

          node.sibling.return = node.return;
          node = node.sibling;
        }
      }
    }

    function commitAttachRef(finishedWork) {
      var ref = finishedWork.ref;

      if (ref !== null) {
        var instance = finishedWork.stateNode;
        var instanceToUse;

        switch (finishedWork.tag) {
          case HostComponent:
            instanceToUse = getPublicInstance(instance);
            break;

          default:
            instanceToUse = instance;
        } // Moved outside to ensure DCE works with this flag


        if (enableScopeAPI && finishedWork.tag === ScopeComponent) {
          instanceToUse = instance.methods;
        }

        if (typeof ref === 'function') {
          ref(instanceToUse);
        } else {
          {
            if (!ref.hasOwnProperty('current')) {
              warningWithoutStack$1(false, 'Unexpected ref object provided for %s. ' + 'Use either a ref-setter function or React.createRef().%s', getComponentName(finishedWork.type), getStackByFiberInDevAndProd(finishedWork));
            }
          }
          ref.current = instanceToUse;
        }
      }
    }

    function commitDetachRef(current$$1) {
      var currentRef = current$$1.ref;

      if (currentRef !== null) {
        if (typeof currentRef === 'function') {
          currentRef(null);
        } else {
          currentRef.current = null;
        }
      }
    } // User-originating errors (lifecycles and refs) should not interrupt
    // deletion, so don't let them throw. Host-originating errors should
    // interrupt deletion, so it's okay


    function commitUnmount(finishedRoot, current$$1, renderPriorityLevel) {
      onCommitUnmount(current$$1);

      switch (current$$1.tag) {
        case FunctionComponent:
        case ForwardRef:
        case MemoComponent:
        case SimpleMemoComponent:
          {
            var updateQueue = current$$1.updateQueue;

            if (updateQueue !== null) {
              var lastEffect = updateQueue.lastEffect;

              if (lastEffect !== null) {
                var firstEffect = lastEffect.next; // When the owner fiber is deleted, the destroy function of a passive
                // effect hook is called during the synchronous commit phase. This is
                // a concession to implementation complexity. Calling it in the
                // passive effect phase (like they usually are, when dependencies
                // change during an update) would require either traversing the
                // children of the deleted fiber again, or including unmount effects
                // as part of the fiber effect list.
                //
                // Because this is during the sync commit phase, we need to change
                // the priority.
                //
                // TODO: Reconsider this implementation trade off.

                var priorityLevel = renderPriorityLevel > NormalPriority ? NormalPriority : renderPriorityLevel;
                runWithPriority$2(priorityLevel, function () {
                  var effect = firstEffect;

                  do {
                    var destroy = effect.destroy;

                    if (destroy !== undefined) {
                      safelyCallDestroy(current$$1, destroy);
                    }

                    effect = effect.next;
                  } while (effect !== firstEffect);
                });
              }
            }

            break;
          }

        case ClassComponent:
          {
            safelyDetachRef(current$$1);
            var instance = current$$1.stateNode;

            if (typeof instance.componentWillUnmount === 'function') {
              safelyCallComponentWillUnmount(current$$1, instance);
            }

            return;
          }

        case HostComponent:
          {
            if (enableFlareAPI) {
              var dependencies = current$$1.dependencies;

              if (dependencies !== null) {
                var respondersMap = dependencies.responders;

                if (respondersMap !== null) {
                  var responderInstances = Array.from(respondersMap.values());

                  for (var i = 0, length = responderInstances.length; i < length; i++) {
                    var responderInstance = responderInstances[i];
                    unmountResponderInstance(responderInstance);
                  }

                  dependencies.responders = null;
                }
              }
            }

            safelyDetachRef(current$$1);
            return;
          }

        case HostPortal:
          {
            // TODO: this is recursive.
            // We are also not using this parent because
            // the portal will get pushed immediately.
            if (supportsMutation) {
              unmountHostComponents(finishedRoot, current$$1, renderPriorityLevel);
            } else if (supportsPersistence) {
              emptyPortalContainer(current$$1);
            }

            return;
          }

        case FundamentalComponent:
          {
            if (enableFundamentalAPI) {
              var fundamentalInstance = current$$1.stateNode;

              if (fundamentalInstance !== null) {
                unmountFundamentalComponent(fundamentalInstance);
                current$$1.stateNode = null;
              }
            }

            return;
          }

        case DehydratedFragment:
          {
            if (enableSuspenseCallback) {
              var hydrationCallbacks = finishedRoot.hydrationCallbacks;

              if (hydrationCallbacks !== null) {
                var onDeleted = hydrationCallbacks.onDeleted;

                if (onDeleted) {
                  onDeleted(current$$1.stateNode);
                }
              }
            }

            return;
          }

        case ScopeComponent:
          {
            if (enableScopeAPI) {
              safelyDetachRef(current$$1);
            }
          }
      }
    }

    function commitNestedUnmounts(finishedRoot, root, renderPriorityLevel) {
      // While we're inside a removed host node we don't want to call
      // removeChild on the inner nodes because they're removed by the top
      // call anyway. We also want to call componentWillUnmount on all
      // composites before this host node is removed from the tree. Therefore
      // we do an inner loop while we're still inside the host node.
      var node = root;

      while (true) {
        commitUnmount(finishedRoot, node, renderPriorityLevel); // Visit children because they may contain more composite or host nodes.
        // Skip portals because commitUnmount() currently visits them recursively.

        if (node.child !== null && ( // If we use mutation we drill down into portals using commitUnmount above.
        // If we don't use mutation we drill down into portals here instead.
        !supportsMutation || node.tag !== HostPortal)) {
          node.child.return = node;
          node = node.child;
          continue;
        }

        if (node === root) {
          return;
        }

        while (node.sibling === null) {
          if (node.return === null || node.return === root) {
            return;
          }

          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      }
    }

    function detachFiber(current$$1) {
      var alternate = current$$1.alternate; // Cut off the return pointers to disconnect it from the tree. Ideally, we
      // should clear the child pointer of the parent alternate to let this
      // get GC:ed but we don't know which for sure which parent is the current
      // one so we'll settle for GC:ing the subtree of this child. This child
      // itself will be GC:ed when the parent updates the next time.

      current$$1.return = null;
      current$$1.child = null;
      current$$1.memoizedState = null;
      current$$1.updateQueue = null;
      current$$1.dependencies = null;
      current$$1.alternate = null;
      current$$1.firstEffect = null;
      current$$1.lastEffect = null;
      current$$1.pendingProps = null;
      current$$1.memoizedProps = null;

      if (alternate !== null) {
        detachFiber(alternate);
      }
    }

    function emptyPortalContainer(current$$1) {
      if (!supportsPersistence) {
        return;
      }

      var portal = current$$1.stateNode;
      var containerInfo = portal.containerInfo;
      var emptyChildSet = createContainerChildSet(containerInfo);
      replaceContainerChildren(containerInfo, emptyChildSet);
    }

    function commitContainer(finishedWork) {
      if (!supportsPersistence) {
        return;
      }

      switch (finishedWork.tag) {
        case ClassComponent:
        case HostComponent:
        case HostText:
        case FundamentalComponent:
          {
            return;
          }

        case HostRoot:
        case HostPortal:
          {
            var portalOrRoot = finishedWork.stateNode;
            var containerInfo = portalOrRoot.containerInfo,
                pendingChildren = portalOrRoot.pendingChildren;
            replaceContainerChildren(containerInfo, pendingChildren);
            return;
          }

        default:
          {
            (function () {
              {
                {
                  throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
                }
              }
            })();
          }
      }
    }

    function getHostParentFiber(fiber) {
      var parent = fiber.return;

      while (parent !== null) {
        if (isHostParent(parent)) {
          return parent;
        }

        parent = parent.return;
      }

      (function () {
        {
          {
            throw ReactError(Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue."));
          }
        }
      })();
    }

    function isHostParent(fiber) {
      return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
    }

    function getHostSibling(fiber) {
      // We're going to search forward into the tree until we find a sibling host
      // node. Unfortunately, if multiple insertions are done in a row we have to
      // search past them. This leads to exponential search for the next sibling.
      // TODO: Find a more efficient way to do this.
      var node = fiber;

      siblings: while (true) {
        // If we didn't find anything, let's try the next sibling.
        while (node.sibling === null) {
          if (node.return === null || isHostParent(node.return)) {
            // If we pop out of the root or hit the parent the fiber we are the
            // last sibling.
            return null;
          }

          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;

        while (node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedFragment) {
          // If it is not host node and, we might have a host node inside it.
          // Try to search down until we find one.
          if (node.effectTag & Placement) {
            // If we don't have a child, try the siblings instead.
            continue siblings;
          } // If we don't have a child, try the siblings instead.
          // We also skip portals because they are not part of this host tree.


          if (node.child === null || node.tag === HostPortal) {
            continue siblings;
          } else {
            node.child.return = node;
            node = node.child;
          }
        } // Check if this host node is stable or about to be placed.


        if (!(node.effectTag & Placement)) {
          // Found it!
          return node.stateNode;
        }
      }
    }

    function commitPlacement(finishedWork) {
      if (!supportsMutation) {
        return;
      } // Recursively insert all host nodes into the parent.


      var parentFiber = getHostParentFiber(finishedWork); // Note: these two variables *must* always be updated together.

      var parent;
      var isContainer;
      var parentStateNode = parentFiber.stateNode;

      switch (parentFiber.tag) {
        case HostComponent:
          parent = parentStateNode;
          isContainer = false;
          break;

        case HostRoot:
          parent = parentStateNode.containerInfo;
          isContainer = true;
          break;

        case HostPortal:
          parent = parentStateNode.containerInfo;
          isContainer = true;
          break;

        case FundamentalComponent:
          if (enableFundamentalAPI) {
            parent = parentStateNode.instance;
            isContainer = false;
          }

        // eslint-disable-next-line-no-fallthrough

        default:
          (function () {
            {
              {
                throw ReactError(Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue."));
              }
            }
          })();

      }

      if (parentFiber.effectTag & ContentReset) {
        // Reset the text content of the parent before doing any insertions
        resetTextContent(parent); // Clear ContentReset from the effect tag

        parentFiber.effectTag &= ~ContentReset;
      }

      var before = getHostSibling(finishedWork); // We only have the top Fiber that was inserted but we need to recurse down its
      // children to find all the terminal nodes.

      var node = finishedWork;

      while (true) {
        var isHost = node.tag === HostComponent || node.tag === HostText;

        if (isHost || enableFundamentalAPI && node.tag === FundamentalComponent) {
          var stateNode = isHost ? node.stateNode : node.stateNode.instance;

          if (before) {
            if (isContainer) {
              insertInContainerBefore(parent, stateNode, before);
            } else {
              insertBefore(parent, stateNode, before);
            }
          } else {
            if (isContainer) {
              appendChildToContainer(parent, stateNode);
            } else {
              appendChild(parent, stateNode);
            }
          }
        } else if (node.tag === HostPortal) {// If the insertion itself is a portal, then we don't want to traverse
          // down its children. Instead, we'll get insertions from each child in
          // the portal directly.
        } else if (node.child !== null) {
          node.child.return = node;
          node = node.child;
          continue;
        }

        if (node === finishedWork) {
          return;
        }

        while (node.sibling === null) {
          if (node.return === null || node.return === finishedWork) {
            return;
          }

          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      }
    }

    function unmountHostComponents(finishedRoot, current$$1, renderPriorityLevel) {
      // We only have the top Fiber that was deleted but we need to recurse down its
      // children to find all the terminal nodes.
      var node = current$$1; // Each iteration, currentParent is populated with node's host parent if not
      // currentParentIsValid.

      var currentParentIsValid = false; // Note: these two variables *must* always be updated together.

      var currentParent;
      var currentParentIsContainer;

      while (true) {
        if (!currentParentIsValid) {
          var parent = node.return;

          findParent: while (true) {
            (function () {
              if (!(parent !== null)) {
                {
                  throw ReactError(Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue."));
                }
              }
            })();

            var parentStateNode = parent.stateNode;

            switch (parent.tag) {
              case HostComponent:
                currentParent = parentStateNode;
                currentParentIsContainer = false;
                break findParent;

              case HostRoot:
                currentParent = parentStateNode.containerInfo;
                currentParentIsContainer = true;
                break findParent;

              case HostPortal:
                currentParent = parentStateNode.containerInfo;
                currentParentIsContainer = true;
                break findParent;

              case FundamentalComponent:
                if (enableFundamentalAPI) {
                  currentParent = parentStateNode.instance;
                  currentParentIsContainer = false;
                }

            }

            parent = parent.return;
          }

          currentParentIsValid = true;
        }

        if (node.tag === HostComponent || node.tag === HostText) {
          commitNestedUnmounts(finishedRoot, node, renderPriorityLevel); // After all the children have unmounted, it is now safe to remove the
          // node from the tree.

          if (currentParentIsContainer) {
            removeChildFromContainer(currentParent, node.stateNode);
          } else {
            removeChild(currentParent, node.stateNode);
          } // Don't visit children because we already visited them.

        } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {
          var fundamentalNode = node.stateNode.instance;
          commitNestedUnmounts(finishedRoot, node, renderPriorityLevel); // After all the children have unmounted, it is now safe to remove the
          // node from the tree.

          if (currentParentIsContainer) {
            removeChildFromContainer(currentParent, fundamentalNode);
          } else {
            removeChild(currentParent, fundamentalNode);
          }
        } else if (enableSuspenseServerRenderer && node.tag === DehydratedFragment) {
          if (enableSuspenseCallback) {
            var hydrationCallbacks = finishedRoot.hydrationCallbacks;

            if (hydrationCallbacks !== null) {
              var onDeleted = hydrationCallbacks.onDeleted;

              if (onDeleted) {
                onDeleted(node.stateNode);
              }
            }
          } // Delete the dehydrated suspense boundary and all of its content.


          if (currentParentIsContainer) {
            clearSuspenseBoundaryFromContainer(currentParent, node.stateNode);
          } else {
            clearSuspenseBoundary(currentParent, node.stateNode);
          }
        } else if (node.tag === HostPortal) {
          if (node.child !== null) {
            // When we go into a portal, it becomes the parent to remove from.
            // We will reassign it back when we pop the portal on the way up.
            currentParent = node.stateNode.containerInfo;
            currentParentIsContainer = true; // Visit children because portals might contain host components.

            node.child.return = node;
            node = node.child;
            continue;
          }
        } else {
          commitUnmount(finishedRoot, node, renderPriorityLevel); // Visit children because we may find more host components below.

          if (node.child !== null) {
            node.child.return = node;
            node = node.child;
            continue;
          }
        }

        if (node === current$$1) {
          return;
        }

        while (node.sibling === null) {
          if (node.return === null || node.return === current$$1) {
            return;
          }

          node = node.return;

          if (node.tag === HostPortal) {
            // When we go out of the portal, we need to restore the parent.
            // Since we don't keep a stack of them, we will search for it.
            currentParentIsValid = false;
          }
        }

        node.sibling.return = node.return;
        node = node.sibling;
      }
    }

    function commitDeletion(finishedRoot, current$$1, renderPriorityLevel) {
      if (supportsMutation) {
        // Recursively delete all host nodes from the parent.
        // Detach refs and call componentWillUnmount() on the whole subtree.
        unmountHostComponents(finishedRoot, current$$1, renderPriorityLevel);
      } else {
        // Detach refs and call componentWillUnmount() on the whole subtree.
        commitNestedUnmounts(finishedRoot, current$$1, renderPriorityLevel);
      }

      detachFiber(current$$1);
    }

    function commitWork(current$$1, finishedWork) {
      if (!supportsMutation) {
        switch (finishedWork.tag) {
          case FunctionComponent:
          case ForwardRef:
          case MemoComponent:
          case SimpleMemoComponent:
            {
              // Note: We currently never use MountMutation, but useLayout uses
              // UnmountMutation.
              commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
              return;
            }

          case Profiler:
            {
              return;
            }

          case SuspenseComponent:
            {
              commitSuspenseComponent(finishedWork);
              attachSuspenseRetryListeners(finishedWork);
              return;
            }

          case SuspenseListComponent:
            {
              attachSuspenseRetryListeners(finishedWork);
              return;
            }

          case HostRoot:
            {
              if (supportsHydration) {
                var root = finishedWork.stateNode;

                if (root.hydrate) {
                  // We've just hydrated. No need to hydrate again.
                  root.hydrate = false;
                  commitHydratedContainer(root.containerInfo);
                }
              }

              break;
            }
        }

        commitContainer(finishedWork);
        return;
      }

      switch (finishedWork.tag) {
        case FunctionComponent:
        case ForwardRef:
        case MemoComponent:
        case SimpleMemoComponent:
          {
            // Note: We currently never use MountMutation, but useLayout uses
            // UnmountMutation.
            commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
            return;
          }

        case ClassComponent:
          {
            return;
          }

        case HostComponent:
          {
            var instance = finishedWork.stateNode;

            if (instance != null) {
              // Commit the work prepared earlier.
              var newProps = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
              // as the newProps. The updatePayload will contain the real change in
              // this case.

              var oldProps = current$$1 !== null ? current$$1.memoizedProps : newProps;
              var type = finishedWork.type; // TODO: Type the updateQueue to be specific to host components.

              var updatePayload = finishedWork.updateQueue;
              finishedWork.updateQueue = null;

              if (updatePayload !== null) {
                commitUpdate(instance, updatePayload, type, oldProps, newProps, finishedWork);
              }

              if (enableFlareAPI) {
                var prevListeners = oldProps.listeners;
                var nextListeners = newProps.listeners;

                if (prevListeners !== nextListeners) {
                  updateEventListeners(nextListeners, finishedWork, null);
                }
              }
            }

            return;
          }

        case HostText:
          {
            (function () {
              if (!(finishedWork.stateNode !== null)) {
                {
                  throw ReactError(Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue."));
                }
              }
            })();

            var textInstance = finishedWork.stateNode;
            var newText = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
            // as the newProps. The updatePayload will contain the real change in
            // this case.

            var oldText = current$$1 !== null ? current$$1.memoizedProps : newText;
            commitTextUpdate(textInstance, oldText, newText);
            return;
          }

        case HostRoot:
          {
            if (supportsHydration) {
              var _root = finishedWork.stateNode;

              if (_root.hydrate) {
                // We've just hydrated. No need to hydrate again.
                _root.hydrate = false;
                commitHydratedContainer(_root.containerInfo);
              }
            }

            return;
          }

        case Profiler:
          {
            return;
          }

        case SuspenseComponent:
          {
            commitSuspenseComponent(finishedWork);
            attachSuspenseRetryListeners(finishedWork);
            return;
          }

        case SuspenseListComponent:
          {
            attachSuspenseRetryListeners(finishedWork);
            return;
          }

        case IncompleteClassComponent:
          {
            return;
          }

        case FundamentalComponent:
          {
            if (enableFundamentalAPI) {
              var fundamentalInstance = finishedWork.stateNode;
              updateFundamentalComponent(fundamentalInstance);
            }

            return;
          }

        case ScopeComponent:
          {
            if (enableScopeAPI) {
              var scopeInstance = finishedWork.stateNode;
              scopeInstance.fiber = finishedWork;

              if (enableFlareAPI) {
                var _newProps = finishedWork.memoizedProps;

                var _oldProps = current$$1 !== null ? current$$1.memoizedProps : _newProps;

                var _prevListeners = _oldProps.listeners;
                var _nextListeners = _newProps.listeners;

                if (_prevListeners !== _nextListeners) {
                  updateEventListeners(_nextListeners, finishedWork, null);
                }
              }
            }

            return;
          }

        default:
          {
            (function () {
              {
                {
                  throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
                }
              }
            })();
          }
      }
    }

    function commitSuspenseComponent(finishedWork) {
      var newState = finishedWork.memoizedState;
      var newDidTimeout;
      var primaryChildParent = finishedWork;

      if (newState === null) {
        newDidTimeout = false;
      } else {
        newDidTimeout = true;
        primaryChildParent = finishedWork.child;
        markCommitTimeOfFallback();
      }

      if (supportsMutation && primaryChildParent !== null) {
        hideOrUnhideAllChildren(primaryChildParent, newDidTimeout);
      }

      if (enableSuspenseCallback && newState !== null) {
        var suspenseCallback = finishedWork.memoizedProps.suspenseCallback;

        if (typeof suspenseCallback === 'function') {
          var thenables = finishedWork.updateQueue;

          if (thenables !== null) {
            suspenseCallback(new Set(thenables));
          }
        } else {
          if (suspenseCallback !== undefined) {
            warning$1(false, 'Unexpected type for suspenseCallback.');
          }
        }
      }
    }

    function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {
      if (!supportsHydration) {
        return;
      }

      var newState = finishedWork.memoizedState;

      if (newState === null) {
        var current$$1 = finishedWork.alternate;

        if (current$$1 !== null) {
          var prevState = current$$1.memoizedState;

          if (prevState !== null) {
            var suspenseInstance = prevState.dehydrated;

            if (suspenseInstance !== null) {
              commitHydratedSuspenseInstance(suspenseInstance);

              if (enableSuspenseCallback) {
                var hydrationCallbacks = finishedRoot.hydrationCallbacks;

                if (hydrationCallbacks !== null) {
                  var onHydrated = hydrationCallbacks.onHydrated;

                  if (onHydrated) {
                    onHydrated(suspenseInstance);
                  }
                }
              }
            }
          }
        }
      }
    }

    function attachSuspenseRetryListeners(finishedWork) {
      // If this boundary just timed out, then it will have a set of thenables.
      // For each thenable, attach a listener so that when it resolves, React
      // attempts to re-render the boundary in the primary (pre-timeout) state.
      var thenables = finishedWork.updateQueue;

      if (thenables !== null) {
        finishedWork.updateQueue = null;
        var retryCache = finishedWork.stateNode;

        if (retryCache === null) {
          retryCache = finishedWork.stateNode = new PossiblyWeakSet();
        }

        thenables.forEach(function (thenable) {
          // Memoize using the boundary fiber to prevent redundant listeners.
          var retry = resolveRetryThenable.bind(null, finishedWork, thenable);

          if (!retryCache.has(thenable)) {
            if (enableSchedulerTracing) {
              if (thenable.__reactDoNotTraceInteractions !== true) {
                retry = tracing.unstable_wrap(retry);
              }
            }

            retryCache.add(thenable);
            thenable.then(retry, retry);
          }
        });
      }
    }

    function commitResetTextContent(current$$1) {
      if (!supportsMutation) {
        return;
      }

      resetTextContent(current$$1.stateNode);
    }

    var PossiblyWeakMap$1 = typeof WeakMap === 'function' ? WeakMap : Map;

    function createRootErrorUpdate(fiber, errorInfo, expirationTime) {
      var update = createUpdate(expirationTime, null); // Unmount the root by rendering null.

      update.tag = CaptureUpdate; // Caution: React DevTools currently depends on this property
      // being called "element".

      update.payload = {
        element: null
      };
      var error = errorInfo.value;

      update.callback = function () {
        onUncaughtError(error);
        logError(fiber, errorInfo);
      };

      return update;
    }

    function createClassErrorUpdate(fiber, errorInfo, expirationTime) {
      var update = createUpdate(expirationTime, null);
      update.tag = CaptureUpdate;
      var getDerivedStateFromError = fiber.type.getDerivedStateFromError;

      if (typeof getDerivedStateFromError === 'function') {
        var error = errorInfo.value;

        update.payload = function () {
          logError(fiber, errorInfo);
          return getDerivedStateFromError(error);
        };
      }

      var inst = fiber.stateNode;

      if (inst !== null && typeof inst.componentDidCatch === 'function') {
        update.callback = function callback() {
          {
            markFailedErrorBoundaryForHotReloading(fiber);
          }

          if (typeof getDerivedStateFromError !== 'function') {
            // To preserve the preexisting retry behavior of error boundaries,
            // we keep track of which ones already failed during this batch.
            // This gets reset before we yield back to the browser.
            // TODO: Warn in strict mode if getDerivedStateFromError is
            // not defined.
            markLegacyErrorBoundaryAsFailed(this); // Only log here if componentDidCatch is the only error boundary method defined

            logError(fiber, errorInfo);
          }

          var error = errorInfo.value;
          var stack = errorInfo.stack;
          this.componentDidCatch(error, {
            componentStack: stack !== null ? stack : ''
          });
          {
            if (typeof getDerivedStateFromError !== 'function') {
              // If componentDidCatch is the only error boundary method defined,
              // then it needs to call setState to recover from errors.
              // If no state update is scheduled then the boundary will swallow the error.
              !(fiber.expirationTime === Sync) ? warningWithoutStack$1(false, '%s: Error boundaries should implement getDerivedStateFromError(). ' + 'In that method, return a state update to display an error message or fallback UI.', getComponentName(fiber.type) || 'Unknown') : void 0;
            }
          }
        };
      } else {
        update.callback = function () {
          markFailedErrorBoundaryForHotReloading(fiber);
        };
      }

      return update;
    }

    function attachPingListener(root, renderExpirationTime, thenable) {
      // Attach a listener to the promise to "ping" the root and retry. But
      // only if one does not already exist for the current render expiration
      // time (which acts like a "thread ID" here).
      var pingCache = root.pingCache;
      var threadIDs;

      if (pingCache === null) {
        pingCache = root.pingCache = new PossiblyWeakMap$1();
        threadIDs = new Set();
        pingCache.set(thenable, threadIDs);
      } else {
        threadIDs = pingCache.get(thenable);

        if (threadIDs === undefined) {
          threadIDs = new Set();
          pingCache.set(thenable, threadIDs);
        }
      }

      if (!threadIDs.has(renderExpirationTime)) {
        // Memoize using the thread ID to prevent redundant listeners.
        threadIDs.add(renderExpirationTime);
        var ping = pingSuspendedRoot.bind(null, root, thenable, renderExpirationTime);
        thenable.then(ping, ping);
      }
    }

    function throwException(root, returnFiber, sourceFiber, value, renderExpirationTime) {
      // The source fiber did not complete.
      sourceFiber.effectTag |= Incomplete; // Its effect list is no longer valid.

      sourceFiber.firstEffect = sourceFiber.lastEffect = null;

      if (value !== null && typeof value === 'object' && typeof value.then === 'function') {
        // This is a thenable.
        var thenable = value;
        checkForWrongSuspensePriorityInDEV(sourceFiber);
        var hasInvisibleParentBoundary = hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext); // Schedule the nearest Suspense to re-render the timed out view.

        var _workInProgress = returnFiber;

        do {
          if (_workInProgress.tag === SuspenseComponent && shouldCaptureSuspense(_workInProgress, hasInvisibleParentBoundary)) {
            // Found the nearest boundary.
            // Stash the promise on the boundary fiber. If the boundary times out, we'll
            // attach another listener to flip the boundary back to its normal state.
            var thenables = _workInProgress.updateQueue;

            if (thenables === null) {
              var updateQueue = new Set();
              updateQueue.add(thenable);
              _workInProgress.updateQueue = updateQueue;
            } else {
              thenables.add(thenable);
            } // If the boundary is outside of batched mode, we should *not*
            // suspend the commit. Pretend as if the suspended component rendered
            // null and keep rendering. In the commit phase, we'll schedule a
            // subsequent synchronous update to re-render the Suspense.
            //
            // Note: It doesn't matter whether the component that suspended was
            // inside a batched mode tree. If the Suspense is outside of it, we
            // should *not* suspend the commit.


            if ((_workInProgress.mode & BatchedMode) === NoMode) {
              _workInProgress.effectTag |= DidCapture; // We're going to commit this fiber even though it didn't complete.
              // But we shouldn't call any lifecycle methods or callbacks. Remove
              // all lifecycle effect tags.

              sourceFiber.effectTag &= ~(LifecycleEffectMask | Incomplete);

              if (sourceFiber.tag === ClassComponent) {
                var currentSourceFiber = sourceFiber.alternate;

                if (currentSourceFiber === null) {
                  // This is a new mount. Change the tag so it's not mistaken for a
                  // completed class component. For example, we should not call
                  // componentWillUnmount if it is deleted.
                  sourceFiber.tag = IncompleteClassComponent;
                } else {
                  // When we try rendering again, we should not reuse the current fiber,
                  // since it's known to be in an inconsistent state. Use a force update to
                  // prevent a bail out.
                  var update = createUpdate(Sync, null);
                  update.tag = ForceUpdate;
                  enqueueUpdate(sourceFiber, update);
                }
              } // The source fiber did not complete. Mark it with Sync priority to
              // indicate that it still has pending work.


              sourceFiber.expirationTime = Sync; // Exit without suspending.

              return;
            } // Confirmed that the boundary is in a concurrent mode tree. Continue
            // with the normal suspend path.
            //
            // After this we'll use a set of heuristics to determine whether this
            // render pass will run to completion or restart or "suspend" the commit.
            // The actual logic for this is spread out in different places.
            //
            // This first principle is that if we're going to suspend when we complete
            // a root, then we should also restart if we get an update or ping that
            // might unsuspend it, and vice versa. The only reason to suspend is
            // because you think you might want to restart before committing. However,
            // it doesn't make sense to restart only while in the period we're suspended.
            //
            // Restarting too aggressively is also not good because it starves out any
            // intermediate loading state. So we use heuristics to determine when.
            // Suspense Heuristics
            //
            // If nothing threw a Promise or all the same fallbacks are already showing,
            // then don't suspend/restart.
            //
            // If this is an initial render of a new tree of Suspense boundaries and
            // those trigger a fallback, then don't suspend/restart. We want to ensure
            // that we can show the initial loading state as quickly as possible.
            //
            // If we hit a "Delayed" case, such as when we'd switch from content back into
            // a fallback, then we should always suspend/restart. SuspenseConfig applies to
            // this case. If none is defined, JND is used instead.
            //
            // If we're already showing a fallback and it gets "retried", allowing us to show
            // another level, but there's still an inner boundary that would show a fallback,
            // then we suspend/restart for 500ms since the last time we showed a fallback
            // anywhere in the tree. This effectively throttles progressive loading into a
            // consistent train of commits. This also gives us an opportunity to restart to
            // get to the completed state slightly earlier.
            //
            // If there's ambiguity due to batching it's resolved in preference of:
            // 1) "delayed", 2) "initial render", 3) "retry".
            //
            // We want to ensure that a "busy" state doesn't get force committed. We want to
            // ensure that new initial loading states can commit as soon as possible.


            attachPingListener(root, renderExpirationTime, thenable);
            _workInProgress.effectTag |= ShouldCapture;
            _workInProgress.expirationTime = renderExpirationTime;
            return;
          } // This boundary already captured during this render. Continue to the next
          // boundary.


          _workInProgress = _workInProgress.return;
        } while (_workInProgress !== null); // No boundary was found. Fallthrough to error mode.
        // TODO: Use invariant so the message is stripped in prod?


        value = new Error((getComponentName(sourceFiber.type) || 'A React component') + ' suspended while rendering, but no fallback UI was specified.\n' + '\n' + 'Add a <Suspense fallback=...> component higher in the tree to ' + 'provide a loading indicator or placeholder to display.' + getStackByFiberInDevAndProd(sourceFiber));
      } // We didn't find a boundary that could handle this type of exception. Start
      // over and traverse parent path again, this time treating the exception
      // as an error.


      renderDidError();
      value = createCapturedValue(value, sourceFiber);
      var workInProgress = returnFiber;

      do {
        switch (workInProgress.tag) {
          case HostRoot:
            {
              var _errorInfo = value;
              workInProgress.effectTag |= ShouldCapture;
              workInProgress.expirationTime = renderExpirationTime;

              var _update = createRootErrorUpdate(workInProgress, _errorInfo, renderExpirationTime);

              enqueueCapturedUpdate(workInProgress, _update);
              return;
            }

          case ClassComponent:
            // Capture and retry
            var errorInfo = value;
            var ctor = workInProgress.type;
            var instance = workInProgress.stateNode;

            if ((workInProgress.effectTag & DidCapture) === NoEffect && (typeof ctor.getDerivedStateFromError === 'function' || instance !== null && typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance))) {
              workInProgress.effectTag |= ShouldCapture;
              workInProgress.expirationTime = renderExpirationTime; // Schedule the error boundary to re-render using updated state

              var _update2 = createClassErrorUpdate(workInProgress, errorInfo, renderExpirationTime);

              enqueueCapturedUpdate(workInProgress, _update2);
              return;
            }

            break;

          default:
            break;
        }

        workInProgress = workInProgress.return;
      } while (workInProgress !== null);
    }

    var ceil = Math.ceil;
    var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
    var ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner;
    var IsSomeRendererActing = ReactSharedInternals.IsSomeRendererActing;
    var NoContext =
    /*                    */
    0;
    var BatchedContext =
    /*               */
    1;
    var EventContext =
    /*                 */
    2;
    var DiscreteEventContext =
    /*         */
    4;
    var LegacyUnbatchedContext =
    /*       */
    8;
    var RenderContext =
    /*                */
    16;
    var CommitContext =
    /*                */
    32;
    var RootIncomplete = 0;
    var RootFatalErrored = 1;
    var RootErrored = 2;
    var RootSuspended = 3;
    var RootSuspendedWithDelay = 4;
    var RootCompleted = 5;
    var RootLocked = 6; // Describes where we are in the React execution stack

    var executionContext = NoContext; // The root we're working on

    var workInProgressRoot = null; // The fiber we're working on

    var workInProgress = null; // The expiration time we're rendering

    var renderExpirationTime = NoWork; // Whether to root completed, errored, suspended, etc.

    var workInProgressRootExitStatus = RootIncomplete; // A fatal error, if one is thrown

    var workInProgressRootFatalError = null; // Most recent event time among processed updates during this render.
    // This is conceptually a time stamp but expressed in terms of an ExpirationTime
    // because we deal mostly with expiration times in the hot path, so this avoids
    // the conversion happening in the hot path.

    var workInProgressRootLatestProcessedExpirationTime = Sync;
    var workInProgressRootLatestSuspenseTimeout = Sync;
    var workInProgressRootCanSuspendUsingConfig = null; // The work left over by components that were visited during this render. Only
    // includes unprocessed updates, not work in bailed out children.

    var workInProgressRootNextUnprocessedUpdateTime = NoWork; // If we're pinged while rendering we don't always restart immediately.
    // This flag determines if it might be worthwhile to restart if an opportunity
    // happens latere.

    var workInProgressRootHasPendingPing = false; // The most recent time we committed a fallback. This lets us ensure a train
    // model where we don't commit new loading states in too quick succession.

    var globalMostRecentFallbackTime = 0;
    var FALLBACK_THROTTLE_MS = 500;
    var nextEffect = null;
    var hasUncaughtError = false;
    var firstUncaughtError = null;
    var legacyErrorBoundariesThatAlreadyFailed = null;
    var rootDoesHavePassiveEffects = false;
    var rootWithPendingPassiveEffects = null;
    var pendingPassiveEffectsRenderPriority = NoPriority;
    var pendingPassiveEffectsExpirationTime = NoWork;
    var rootsWithPendingDiscreteUpdates = null; // Use these to prevent an infinite loop of nested updates

    var NESTED_UPDATE_LIMIT = 50;
    var nestedUpdateCount = 0;
    var rootWithNestedUpdates = null;
    var NESTED_PASSIVE_UPDATE_LIMIT = 50;
    var nestedPassiveUpdateCount = 0;
    var interruptedBy = null; // Marks the need to reschedule pending interactions at these expiration times
    // during the commit phase. This enables them to be traced across components
    // that spawn new work during render. E.g. hidden boundaries, suspended SSR
    // hydration or SuspenseList.

    var spawnedWorkDuringRender = null; // Expiration times are computed by adding to the current time (the start
    // time). However, if two updates are scheduled within the same event, we
    // should treat their start times as simultaneous, even if the actual clock
    // time has advanced between the first and second call.
    // In other words, because expiration times determine how updates are batched,
    // we want all updates of like priority that occur within the same event to
    // receive the same expiration time. Otherwise we get tearing.

    var currentEventTime = NoWork;

    function requestCurrentTime() {
      if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
        // We're inside React, so it's fine to read the actual time.
        return msToExpirationTime(now());
      } // We're not inside React, so we may be in the middle of a browser event.


      if (currentEventTime !== NoWork) {
        // Use the same start time for all updates until we enter React again.
        return currentEventTime;
      } // This is the first update since React yielded. Compute a new start time.


      currentEventTime = msToExpirationTime(now());
      return currentEventTime;
    }

    function computeExpirationForFiber(currentTime, fiber, suspenseConfig) {
      var mode = fiber.mode;

      if ((mode & BatchedMode) === NoMode) {
        return Sync;
      }

      var priorityLevel = getCurrentPriorityLevel();

      if ((mode & ConcurrentMode) === NoMode) {
        return priorityLevel === ImmediatePriority ? Sync : Batched;
      }

      if ((executionContext & RenderContext) !== NoContext) {
        // Use whatever time we're already rendering
        // TODO: Should there be a way to opt out, like with `runWithPriority`?
        return renderExpirationTime;
      }

      var expirationTime;

      if (suspenseConfig !== null) {
        // Compute an expiration time based on the Suspense timeout.
        expirationTime = computeSuspenseExpiration(currentTime, suspenseConfig.timeoutMs | 0 || LOW_PRIORITY_EXPIRATION);
      } else {
        // Compute an expiration time based on the Scheduler priority.
        switch (priorityLevel) {
          case ImmediatePriority:
            expirationTime = Sync;
            break;

          case UserBlockingPriority$2:
            // TODO: Rename this to computeUserBlockingExpiration
            expirationTime = computeInteractiveExpiration(currentTime);
            break;

          case NormalPriority:
          case LowPriority:
            // TODO: Handle LowPriority
            // TODO: Rename this to... something better.
            expirationTime = computeAsyncExpiration(currentTime);
            break;

          case IdlePriority:
            expirationTime = Idle;
            break;

          default:
            (function () {
              {
                {
                  throw ReactError(Error("Expected a valid priority level"));
                }
              }
            })();

        }
      } // If we're in the middle of rendering a tree, do not update at the same
      // expiration time that is already rendering.
      // TODO: We shouldn't have to do this if the update is on a different root.
      // Refactor computeExpirationForFiber + scheduleUpdate so we have access to
      // the root when we check for this condition.


      if (workInProgressRoot !== null && expirationTime === renderExpirationTime) {
        // This is a trick to move this update into a separate batch
        expirationTime -= 1;
      }

      return expirationTime;
    }

    var lastUniqueAsyncExpiration = NoWork;

    function computeUniqueAsyncExpiration() {
      var currentTime = requestCurrentTime();
      var result = computeAsyncExpiration(currentTime);

      if (result <= lastUniqueAsyncExpiration) {
        // Since we assume the current time monotonically increases, we only hit
        // this branch when computeUniqueAsyncExpiration is fired multiple times
        // within a 200ms window (or whatever the async bucket size is).
        result -= 1;
      }

      lastUniqueAsyncExpiration = result;
      return result;
    }

    function scheduleUpdateOnFiber(fiber, expirationTime) {
      checkForNestedUpdates();
      warnAboutInvalidUpdatesOnClassComponentsInDEV(fiber);
      var root = markUpdateTimeFromFiberToRoot(fiber, expirationTime);

      if (root === null) {
        warnAboutUpdateOnUnmountedFiberInDEV(fiber);
        return;
      }

      checkForInterruption(fiber, expirationTime);
      recordScheduleUpdate(); // TODO: computeExpirationForFiber also reads the priority. Pass the
      // priority as an argument to that function and this one.

      var priorityLevel = getCurrentPriorityLevel();

      if (expirationTime === Sync) {
        if ( // Check if we're inside unbatchedUpdates
        (executionContext & LegacyUnbatchedContext) !== NoContext && // Check if we're not already rendering
        (executionContext & (RenderContext | CommitContext)) === NoContext) {
          // Register pending interactions on the root to avoid losing traced interaction data.
          schedulePendingInteractions(root, expirationTime); // This is a legacy edge case. The initial mount of a ReactDOM.render-ed
          // root inside of batchedUpdates should be synchronous, but layout updates
          // should be deferred until the end of the batch.

          performSyncWorkOnRoot(root);
        } else {
          ensureRootIsScheduled(root);
          schedulePendingInteractions(root, expirationTime);

          if (executionContext === NoContext) {
            // Flush the synchronous work now, unless we're already working or inside
            // a batch. This is intentionally inside scheduleUpdateOnFiber instead of
            // scheduleCallbackForFiber to preserve the ability to schedule a callback
            // without immediately flushing it. We only do this for user-initiated
            // updates, to preserve historical behavior of sync mode.
            flushSyncCallbackQueue();
          }
        }
      } else {
        ensureRootIsScheduled(root);
        schedulePendingInteractions(root, expirationTime);
      }

      if ((executionContext & DiscreteEventContext) !== NoContext && ( // Only updates at user-blocking priority or greater are considered
      // discrete, even inside a discrete event.
      priorityLevel === UserBlockingPriority$2 || priorityLevel === ImmediatePriority)) {
        // This is the result of a discrete event. Track the lowest priority
        // discrete update per root so we can flush them early, if needed.
        if (rootsWithPendingDiscreteUpdates === null) {
          rootsWithPendingDiscreteUpdates = new Map([[root, expirationTime]]);
        } else {
          var lastDiscreteTime = rootsWithPendingDiscreteUpdates.get(root);

          if (lastDiscreteTime === undefined || lastDiscreteTime > expirationTime) {
            rootsWithPendingDiscreteUpdates.set(root, expirationTime);
          }
        }
      }
    }

    var scheduleWork = scheduleUpdateOnFiber; // This is split into a separate function so we can mark a fiber with pending
    // work without treating it as a typical update that originates from an event;
    // e.g. retrying a Suspense boundary isn't an update, but it does schedule work
    // on a fiber.

    function markUpdateTimeFromFiberToRoot(fiber, expirationTime) {
      // Update the source fiber's expiration time
      if (fiber.expirationTime < expirationTime) {
        fiber.expirationTime = expirationTime;
      }

      var alternate = fiber.alternate;

      if (alternate !== null && alternate.expirationTime < expirationTime) {
        alternate.expirationTime = expirationTime;
      } // Walk the parent path to the root and update the child expiration time.


      var node = fiber.return;
      var root = null;

      if (node === null && fiber.tag === HostRoot) {
        root = fiber.stateNode;
      } else {
        while (node !== null) {
          alternate = node.alternate;

          if (node.childExpirationTime < expirationTime) {
            node.childExpirationTime = expirationTime;

            if (alternate !== null && alternate.childExpirationTime < expirationTime) {
              alternate.childExpirationTime = expirationTime;
            }
          } else if (alternate !== null && alternate.childExpirationTime < expirationTime) {
            alternate.childExpirationTime = expirationTime;
          }

          if (node.return === null && node.tag === HostRoot) {
            root = node.stateNode;
            break;
          }

          node = node.return;
        }
      }

      if (root !== null) {
        if (workInProgressRoot === root) {
          // Received an update to a tree that's in the middle of rendering. Mark
          // that's unprocessed work on this root.
          markUnprocessedUpdateTime(expirationTime);

          if (workInProgressRootExitStatus === RootSuspendedWithDelay) {
            // The root already suspended with a delay, which means this render
            // definitely won't finish. Since we have a new update, let's mark it as
            // suspended now, right before marking the incoming update. This has the
            // effect of interrupting the current render and switching to the update.
            // TODO: This happens to work when receiving an update during the render
            // phase, because of the trick inside computeExpirationForFiber to
            // subtract 1 from `renderExpirationTime` to move it into a
            // separate bucket. But we should probably model it with an exception,
            // using the same mechanism we use to force hydration of a subtree.
            // TODO: This does not account for low pri updates that were already
            // scheduled before the root started rendering. Need to track the next
            // pending expiration time (perhaps by backtracking the return path) and
            // then trigger a restart in the `renderDidSuspendDelayIfPossible` path.
            markRootSuspendedAtTime(root, renderExpirationTime);
          }
        } // Mark that the root has a pending update.


        markRootUpdatedAtTime(root, expirationTime);
      }

      return root;
    }

    function getNextRootExpirationTimeToWorkOn(root) {
      // Determines the next expiration time that the root should render, taking
      // into account levels that may be suspended, or levels that may have
      // received a ping.
      var lastExpiredTime = root.lastExpiredTime;

      if (lastExpiredTime !== NoWork) {
        return lastExpiredTime;
      } // "Pending" refers to any update that hasn't committed yet, including if it
      // suspended. The "suspended" range is therefore a subset.


      var firstPendingTime = root.firstPendingTime;

      if (!isRootSuspendedAtTime(root, firstPendingTime)) {
        // The highest priority pending time is not suspended. Let's work on that.
        return firstPendingTime;
      } // If the first pending time is suspended, check if there's a lower priority
      // pending level that we know about. Or check if we received a ping. Work
      // on whichever is higher priority.


      var lastPingedTime = root.lastPingedTime;
      var nextKnownPendingLevel = root.nextKnownPendingLevel;
      return lastPingedTime > nextKnownPendingLevel ? lastPingedTime : nextKnownPendingLevel;
    } // Use this function to schedule a task for a root. There's only one task per
    // root; if a task was already scheduled, we'll check to make sure the
    // expiration time of the existing task is the same as the expiration time of
    // the next level that the root has work on. This function is called on every
    // update, and right before exiting a task.


    function ensureRootIsScheduled(root) {
      var lastExpiredTime = root.lastExpiredTime;

      if (lastExpiredTime !== NoWork) {
        // Special case: Expired work should flush synchronously.
        root.callbackExpirationTime = Sync;
        root.callbackPriority = ImmediatePriority;
        root.callbackNode = scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));
        return;
      }

      var expirationTime = getNextRootExpirationTimeToWorkOn(root);
      var existingCallbackNode = root.callbackNode;

      if (expirationTime === NoWork) {
        // There's nothing to work on.
        if (existingCallbackNode !== null) {
          root.callbackNode = null;
          root.callbackExpirationTime = NoWork;
          root.callbackPriority = NoPriority;
        }

        return;
      } // TODO: If this is an update, we already read the current time. Pass the
      // time as an argument.


      var currentTime = requestCurrentTime();
      var priorityLevel = inferPriorityFromExpirationTime(currentTime, expirationTime); // If there's an existing render task, confirm it has the correct priority and
      // expiration time. Otherwise, we'll cancel it and schedule a new one.

      if (existingCallbackNode !== null) {
        var existingCallbackPriority = root.callbackPriority;
        var existingCallbackExpirationTime = root.callbackExpirationTime;

        if ( // Callback must have the exact same expiration time.
        existingCallbackExpirationTime === expirationTime && // Callback must have greater or equal priority.
        existingCallbackPriority >= priorityLevel) {
          // Existing callback is sufficient.
          return;
        } // Need to schedule a new task.
        // TODO: Instead of scheduling a new task, we should be able to change the
        // priority of the existing one.


        cancelCallback(existingCallbackNode);
      }

      root.callbackExpirationTime = expirationTime;
      root.callbackPriority = priorityLevel;
      var callbackNode;

      if (expirationTime === Sync) {
        // Sync React callbacks are scheduled on a special internal queue
        callbackNode = scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));
      } else if (disableSchedulerTimeoutBasedOnReactExpirationTime) {
        callbackNode = scheduleCallback(priorityLevel, performConcurrentWorkOnRoot.bind(null, root));
      } else {
        callbackNode = scheduleCallback(priorityLevel, performConcurrentWorkOnRoot.bind(null, root), // Compute a task timeout based on the expiration time. This also affects
        // ordering because tasks are processed in timeout order.
        {
          timeout: expirationTimeToMs(expirationTime) - now()
        });
      }

      root.callbackNode = callbackNode;
    } // This is the entry point for every concurrent task, i.e. anything that
    // goes through Scheduler.


    function performConcurrentWorkOnRoot(root, didTimeout) {
      // Since we know we're in a React event, we can clear the current
      // event time. The next update will compute a new event time.
      currentEventTime = NoWork;

      if (didTimeout) {
        // The render task took too long to complete. Mark the current time as
        // expired to synchronously render all expired work in a single batch.
        var currentTime = requestCurrentTime();
        markRootExpiredAtTime(root, currentTime); // This will schedule a synchronous callback.

        ensureRootIsScheduled(root);
        return null;
      } // Determine the next expiration time to work on, using the fields stored
      // on the root.


      var expirationTime = getNextRootExpirationTimeToWorkOn(root);

      if (expirationTime !== NoWork) {
        var originalCallbackNode = root.callbackNode;

        (function () {
          if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
            {
              throw ReactError(Error("Should not already be working."));
            }
          }
        })();

        flushPassiveEffects(); // If the root or expiration time have changed, throw out the existing stack
        // and prepare a fresh one. Otherwise we'll continue where we left off.

        if (root !== workInProgressRoot || expirationTime !== renderExpirationTime) {
          prepareFreshStack(root, expirationTime);
          startWorkOnPendingInteractions(root, expirationTime);
        } // If we have a work-in-progress fiber, it means there's still work to do
        // in this root.


        if (workInProgress !== null) {
          var prevExecutionContext = executionContext;
          executionContext |= RenderContext;
          var prevDispatcher = pushDispatcher(root);
          var prevInteractions = pushInteractions(root);
          startWorkLoopTimer(workInProgress);

          do {
            try {
              workLoopConcurrent();
              break;
            } catch (thrownValue) {
              handleError(root, thrownValue);
            }
          } while (true);

          resetContextDependencies();
          executionContext = prevExecutionContext;
          popDispatcher(prevDispatcher);

          if (enableSchedulerTracing) {
            popInteractions(prevInteractions);
          }

          if (workInProgressRootExitStatus === RootFatalErrored) {
            var fatalError = workInProgressRootFatalError;
            stopInterruptedWorkLoopTimer();
            prepareFreshStack(root, expirationTime);
            markRootSuspendedAtTime(root, expirationTime);
            ensureRootIsScheduled(root);
            throw fatalError;
          }

          if (workInProgress !== null) {
            // There's still work left over. Exit without committing.
            stopInterruptedWorkLoopTimer();
          } else {
            // We now have a consistent tree. The next step is either to commit it,
            // or, if something suspended, wait to commit it after a timeout.
            stopFinishedWorkLoopTimer();
            var finishedWork = root.finishedWork = root.current.alternate;
            root.finishedExpirationTime = expirationTime;
            resolveLocksOnRoot(root, expirationTime);
            finishConcurrentRender(root, finishedWork, workInProgressRootExitStatus, expirationTime);
          }

          ensureRootIsScheduled(root);

          if (root.callbackNode === originalCallbackNode) {
            // The task node scheduled for this root is the same one that's
            // currently executed. Need to return a continuation.
            return performConcurrentWorkOnRoot.bind(null, root);
          }
        }
      }

      return null;
    }

    function finishConcurrentRender(root, finishedWork, exitStatus, expirationTime) {
      // Set this to null to indicate there's no in-progress render.
      workInProgressRoot = null;

      switch (exitStatus) {
        case RootIncomplete:
        case RootFatalErrored:
          {
            (function () {
              {
                {
                  throw ReactError(Error("Root did not complete. This is a bug in React."));
                }
              }
            })();
          }
        // Flow knows about invariant, so it complains if I add a break
        // statement, but eslint doesn't know about invariant, so it complains
        // if I do. eslint-disable-next-line no-fallthrough

        case RootErrored:
          {
            if (expirationTime !== Idle) {
              // If this was an async render, the error may have happened due to
              // a mutation in a concurrent event. Try rendering one more time,
              // synchronously, to see if the error goes away. If there are
              // lower priority updates, let's include those, too, in case they
              // fix the inconsistency. Render at Idle to include all updates.
              markRootExpiredAtTime(root, Idle);
              break;
            } // Commit the root in its errored state.


            commitRoot(root);
            break;
          }

        case RootSuspended:
          {
            markRootSuspendedAtTime(root, expirationTime);
            var lastSuspendedTime = root.lastSuspendedTime;

            if (expirationTime === lastSuspendedTime) {
              root.nextKnownPendingLevel = getRemainingExpirationTime(finishedWork);
            }

            flushSuspensePriorityWarningInDEV(); // We have an acceptable loading state. We need to figure out if we
            // should immediately commit it or wait a bit.
            // If we have processed new updates during this render, we may now
            // have a new loading state ready. We want to ensure that we commit
            // that as soon as possible.

            var hasNotProcessedNewUpdates = workInProgressRootLatestProcessedExpirationTime === Sync;

            if (hasNotProcessedNewUpdates && // do not delay if we're inside an act() scope
            !(true && flushSuspenseFallbacksInTests && IsThisRendererActing.current)) {
              // If we have not processed any new updates during this pass, then
              // this is either a retry of an existing fallback state or a
              // hidden tree. Hidden trees shouldn't be batched with other work
              // and after that's fixed it can only be a retry. We're going to
              // throttle committing retries so that we don't show too many
              // loading states too quickly.
              var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(); // Don't bother with a very short suspense time.

              if (msUntilTimeout > 10) {
                if (workInProgressRootHasPendingPing) {
                  var lastPingedTime = root.lastPingedTime;

                  if (lastPingedTime === NoWork || lastPingedTime >= expirationTime) {
                    // This render was pinged but we didn't get to restart
                    // earlier so try restarting now instead.
                    root.lastPingedTime = expirationTime;
                    prepareFreshStack(root, expirationTime);
                    break;
                  }
                }

                var nextTime = getNextRootExpirationTimeToWorkOn(root);

                if (nextTime !== NoWork && nextTime !== expirationTime) {
                  // There's additional work on this root.
                  break;
                }

                if (lastSuspendedTime !== NoWork && lastSuspendedTime !== expirationTime) {
                  // We should prefer to render the fallback of at the last
                  // suspended level. Ping the last suspended level to try
                  // rendering it again.
                  root.lastPingedTime = lastSuspendedTime;
                  break;
                } // The render is suspended, it hasn't timed out, and there's no
                // lower priority work to do. Instead of committing the fallback
                // immediately, wait for more data to arrive.


                root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root), msUntilTimeout);
                break;
              }
            } // The work expired. Commit immediately.


            commitRoot(root);
            break;
          }

        case RootSuspendedWithDelay:
          {
            markRootSuspendedAtTime(root, expirationTime);
            var _lastSuspendedTime = root.lastSuspendedTime;

            if (expirationTime === _lastSuspendedTime) {
              root.nextKnownPendingLevel = getRemainingExpirationTime(finishedWork);
            }

            flushSuspensePriorityWarningInDEV();

            if ( // do not delay if we're inside an act() scope
            !(true && flushSuspenseFallbacksInTests && IsThisRendererActing.current)) {
              // We're suspended in a state that should be avoided. We'll try to
              // avoid committing it for as long as the timeouts let us.
              if (workInProgressRootHasPendingPing) {
                var _lastPingedTime = root.lastPingedTime;

                if (_lastPingedTime === NoWork || _lastPingedTime >= expirationTime) {
                  // This render was pinged but we didn't get to restart earlier
                  // so try restarting now instead.
                  root.lastPingedTime = expirationTime;
                  prepareFreshStack(root, expirationTime);
                  break;
                }
              }

              var _nextTime = getNextRootExpirationTimeToWorkOn(root);

              if (_nextTime !== NoWork && _nextTime !== expirationTime) {
                // There's additional work on this root.
                break;
              }

              if (_lastSuspendedTime !== NoWork && _lastSuspendedTime !== expirationTime) {
                // We should prefer to render the fallback of at the last
                // suspended level. Ping the last suspended level to try
                // rendering it again.
                root.lastPingedTime = _lastSuspendedTime;
                break;
              }

              var _msUntilTimeout;

              if (workInProgressRootLatestSuspenseTimeout !== Sync) {
                // We have processed a suspense config whose expiration time we
                // can use as the timeout.
                _msUntilTimeout = expirationTimeToMs(workInProgressRootLatestSuspenseTimeout) - now();
              } else if (workInProgressRootLatestProcessedExpirationTime === Sync) {
                // This should never normally happen because only new updates
                // cause delayed states, so we should have processed something.
                // However, this could also happen in an offscreen tree.
                _msUntilTimeout = 0;
              } else {
                // If we don't have a suspense config, we're going to use a
                // heuristic to determine how long we can suspend.
                var eventTimeMs = inferTimeFromExpirationTime(workInProgressRootLatestProcessedExpirationTime);
                var currentTimeMs = now();
                var timeUntilExpirationMs = expirationTimeToMs(expirationTime) - currentTimeMs;
                var timeElapsed = currentTimeMs - eventTimeMs;

                if (timeElapsed < 0) {
                  // We get this wrong some time since we estimate the time.
                  timeElapsed = 0;
                }

                _msUntilTimeout = jnd(timeElapsed) - timeElapsed; // Clamp the timeout to the expiration time. TODO: Once the
                // event time is exact instead of inferred from expiration time
                // we don't need this.

                if (timeUntilExpirationMs < _msUntilTimeout) {
                  _msUntilTimeout = timeUntilExpirationMs;
                }
              } // Don't bother with a very short suspense time.


              if (_msUntilTimeout > 10) {
                // The render is suspended, it hasn't timed out, and there's no
                // lower priority work to do. Instead of committing the fallback
                // immediately, wait for more data to arrive.
                root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root), _msUntilTimeout);
                break;
              }
            } // The work expired. Commit immediately.


            commitRoot(root);
            break;
          }

        case RootCompleted:
          {
            // The work completed. Ready to commit.
            if ( // do not delay if we're inside an act() scope
            !(true && flushSuspenseFallbacksInTests && IsThisRendererActing.current) && workInProgressRootLatestProcessedExpirationTime !== Sync && workInProgressRootCanSuspendUsingConfig !== null) {
              // If we have exceeded the minimum loading delay, which probably
              // means we have shown a spinner already, we might have to suspend
              // a bit longer to ensure that the spinner is shown for
              // enough time.
              var _msUntilTimeout2 = computeMsUntilSuspenseLoadingDelay(workInProgressRootLatestProcessedExpirationTime, expirationTime, workInProgressRootCanSuspendUsingConfig);

              if (_msUntilTimeout2 > 10) {
                markRootSuspendedAtTime(root, expirationTime);
                root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root), _msUntilTimeout2);
                break;
              }
            }

            commitRoot(root);
            break;
          }

        case RootLocked:
          {
            // This root has a lock that prevents it from committing. Exit. If
            // we begin work on the root again, without any intervening updates,
            // it will finish without doing additional work.
            markRootSuspendedAtTime(root, expirationTime);
            break;
          }

        default:
          {
            (function () {
              {
                {
                  throw ReactError(Error("Unknown root exit status."));
                }
              }
            })();
          }
      }
    } // This is the entry point for synchronous tasks that don't go
    // through Scheduler


    function performSyncWorkOnRoot(root) {
      // Check if there's expired work on this root. Otherwise, render at Sync.
      var lastExpiredTime = root.lastExpiredTime;
      var expirationTime = lastExpiredTime !== NoWork ? lastExpiredTime : Sync;

      if (root.finishedExpirationTime === expirationTime) {
        // There's already a pending commit at this expiration time.
        // TODO: This is poorly factored. This case only exists for the
        // batch.commit() API.
        commitRoot(root);
      } else {
        (function () {
          if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
            {
              throw ReactError(Error("Should not already be working."));
            }
          }
        })();

        flushPassiveEffects(); // If the root or expiration time have changed, throw out the existing stack
        // and prepare a fresh one. Otherwise we'll continue where we left off.

        if (root !== workInProgressRoot || expirationTime !== renderExpirationTime) {
          prepareFreshStack(root, expirationTime);
          startWorkOnPendingInteractions(root, expirationTime);
        } // If we have a work-in-progress fiber, it means there's still work to do
        // in this root.


        if (workInProgress !== null) {
          var prevExecutionContext = executionContext;
          executionContext |= RenderContext;
          var prevDispatcher = pushDispatcher(root);
          var prevInteractions = pushInteractions(root);
          startWorkLoopTimer(workInProgress);

          do {
            try {
              workLoopSync();
              break;
            } catch (thrownValue) {
              handleError(root, thrownValue);
            }
          } while (true);

          resetContextDependencies();
          executionContext = prevExecutionContext;
          popDispatcher(prevDispatcher);

          if (enableSchedulerTracing) {
            popInteractions(prevInteractions);
          }

          if (workInProgressRootExitStatus === RootFatalErrored) {
            var fatalError = workInProgressRootFatalError;
            stopInterruptedWorkLoopTimer();
            prepareFreshStack(root, expirationTime);
            markRootSuspendedAtTime(root, expirationTime);
            ensureRootIsScheduled(root);
            throw fatalError;
          }

          if (workInProgress !== null) {
            // This is a sync render, so we should have finished the whole tree.
            (function () {
              {
                {
                  throw ReactError(Error("Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue."));
                }
              }
            })();
          } else {
            // We now have a consistent tree. Because this is a sync render, we
            // will commit it even if something suspended. The only exception is
            // if the root is locked (using the unstable_createBatch API).
            stopFinishedWorkLoopTimer();
            root.finishedWork = root.current.alternate;
            root.finishedExpirationTime = expirationTime;
            resolveLocksOnRoot(root, expirationTime);
            finishSyncRender(root, workInProgressRootExitStatus, expirationTime);
          } // Before exiting, make sure there's a callback scheduled for the next
          // pending level.


          ensureRootIsScheduled(root);
        }
      }

      return null;
    }

    function finishSyncRender(root, exitStatus, expirationTime) {
      if (exitStatus === RootLocked) {
        // This root has a lock that prevents it from committing. Exit. If we
        // begin work on the root again, without any intervening updates, it
        // will finish without doing additional work.
        markRootSuspendedAtTime(root, expirationTime);
      } else {
        // Set this to null to indicate there's no in-progress render.
        workInProgressRoot = null;
        {
          if (exitStatus === RootSuspended || exitStatus === RootSuspendedWithDelay) {
            flushSuspensePriorityWarningInDEV();
          }
        }
        commitRoot(root);
      }
    }

    function flushRoot(root, expirationTime) {
      if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
        (function () {
          {
            {
              throw ReactError(Error("work.commit(): Cannot commit while already rendering. This likely means you attempted to commit from inside a lifecycle method."));
            }
          }
        })();
      }

      markRootExpiredAtTime(root, expirationTime);
      ensureRootIsScheduled(root);
      flushSyncCallbackQueue();
    }

    function flushDiscreteUpdates() {
      // TODO: Should be able to flush inside batchedUpdates, but not inside `act`.
      // However, `act` uses `batchedUpdates`, so there's no way to distinguish
      // those two cases. Need to fix this before exposing flushDiscreteUpdates
      // as a public API.
      if ((executionContext & (BatchedContext | RenderContext | CommitContext)) !== NoContext) {
        if (true && (executionContext & RenderContext) !== NoContext) {
          warning$1(false, 'unstable_flushDiscreteUpdates: Cannot flush updates when React is ' + 'already rendering.');
        } // We're already rendering, so we can't synchronously flush pending work.
        // This is probably a nested event dispatch triggered by a lifecycle/effect,
        // like `el.focus()`. Exit.


        return;
      }

      flushPendingDiscreteUpdates(); // If the discrete updates scheduled passive effects, flush them now so that
      // they fire before the next serial event.

      flushPassiveEffects();
    }

    function resolveLocksOnRoot(root, expirationTime) {
      var firstBatch = root.firstBatch;

      if (firstBatch !== null && firstBatch._defer && firstBatch._expirationTime >= expirationTime) {
        scheduleCallback(NormalPriority, function () {
          firstBatch._onComplete();

          return null;
        });
        workInProgressRootExitStatus = RootLocked;
      }
    }

    function flushPendingDiscreteUpdates() {
      if (rootsWithPendingDiscreteUpdates !== null) {
        // For each root with pending discrete updates, schedule a callback to
        // immediately flush them.
        var roots = rootsWithPendingDiscreteUpdates;
        rootsWithPendingDiscreteUpdates = null;
        roots.forEach(function (expirationTime, root) {
          markRootExpiredAtTime(root, expirationTime);
          ensureRootIsScheduled(root);
        }); // Now flush the immediate queue.

        flushSyncCallbackQueue();
      }
    }

    function batchedUpdates$1(fn, a) {
      var prevExecutionContext = executionContext;
      executionContext |= BatchedContext;

      try {
        return fn(a);
      } finally {
        executionContext = prevExecutionContext;

        if (executionContext === NoContext) {
          // Flush the immediate callbacks that were scheduled during this batch
          flushSyncCallbackQueue();
        }
      }
    }

    function batchedEventUpdates$1(fn, a) {
      var prevExecutionContext = executionContext;
      executionContext |= EventContext;

      try {
        return fn(a);
      } finally {
        executionContext = prevExecutionContext;

        if (executionContext === NoContext) {
          // Flush the immediate callbacks that were scheduled during this batch
          flushSyncCallbackQueue();
        }
      }
    }

    function discreteUpdates$1(fn, a, b, c) {
      var prevExecutionContext = executionContext;
      executionContext |= DiscreteEventContext;

      try {
        // Should this
        return runWithPriority$2(UserBlockingPriority$2, fn.bind(null, a, b, c));
      } finally {
        executionContext = prevExecutionContext;

        if (executionContext === NoContext) {
          // Flush the immediate callbacks that were scheduled during this batch
          flushSyncCallbackQueue();
        }
      }
    }

    function unbatchedUpdates(fn, a) {
      var prevExecutionContext = executionContext;
      executionContext &= ~BatchedContext;
      executionContext |= LegacyUnbatchedContext;

      try {
        return fn(a);
      } finally {
        executionContext = prevExecutionContext;

        if (executionContext === NoContext) {
          // Flush the immediate callbacks that were scheduled during this batch
          flushSyncCallbackQueue();
        }
      }
    }

    function flushSync(fn, a) {
      if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
        (function () {
          {
            {
              throw ReactError(Error("flushSync was called from inside a lifecycle method. It cannot be called when React is already rendering."));
            }
          }
        })();
      }

      var prevExecutionContext = executionContext;
      executionContext |= BatchedContext;

      try {
        return runWithPriority$2(ImmediatePriority, fn.bind(null, a));
      } finally {
        executionContext = prevExecutionContext; // Flush the immediate callbacks that were scheduled during this batch.
        // Note that this will happen even if batchedUpdates is higher up
        // the stack.

        flushSyncCallbackQueue();
      }
    }

    function flushControlled(fn) {
      var prevExecutionContext = executionContext;
      executionContext |= BatchedContext;

      try {
        runWithPriority$2(ImmediatePriority, fn);
      } finally {
        executionContext = prevExecutionContext;

        if (executionContext === NoContext) {
          // Flush the immediate callbacks that were scheduled during this batch
          flushSyncCallbackQueue();
        }
      }
    }

    function prepareFreshStack(root, expirationTime) {
      root.finishedWork = null;
      root.finishedExpirationTime = NoWork;
      var timeoutHandle = root.timeoutHandle;

      if (timeoutHandle !== noTimeout) {
        // The root previous suspended and scheduled a timeout to commit a fallback
        // state. Now that we have additional work, cancel the timeout.
        root.timeoutHandle = noTimeout; // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above

        cancelTimeout(timeoutHandle);
      }

      if (workInProgress !== null) {
        var interruptedWork = workInProgress.return;

        while (interruptedWork !== null) {
          unwindInterruptedWork(interruptedWork);
          interruptedWork = interruptedWork.return;
        }
      }

      workInProgressRoot = root;
      workInProgress = createWorkInProgress(root.current, null, expirationTime);
      renderExpirationTime = expirationTime;
      workInProgressRootExitStatus = RootIncomplete;
      workInProgressRootFatalError = null;
      workInProgressRootLatestProcessedExpirationTime = Sync;
      workInProgressRootLatestSuspenseTimeout = Sync;
      workInProgressRootCanSuspendUsingConfig = null;
      workInProgressRootNextUnprocessedUpdateTime = NoWork;
      workInProgressRootHasPendingPing = false;

      if (enableSchedulerTracing) {
        spawnedWorkDuringRender = null;
      }

      {
        ReactStrictModeWarnings.discardPendingWarnings();
        componentsThatTriggeredHighPriSuspend = null;
      }
    }

    function handleError(root, thrownValue) {
      do {
        try {
          // Reset module-level state that was set during the render phase.
          resetContextDependencies();
          resetHooks();

          if (workInProgress === null || workInProgress.return === null) {
            // Expected to be working on a non-root fiber. This is a fatal error
            // because there's no ancestor that can handle it; the root is
            // supposed to capture all errors that weren't caught by an error
            // boundary.
            workInProgressRootExitStatus = RootFatalErrored;
            workInProgressRootFatalError = thrownValue;
            return null;
          }

          if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
            // Record the time spent rendering before an error was thrown. This
            // avoids inaccurate Profiler durations in the case of a
            // suspended render.
            stopProfilerTimerIfRunningAndRecordDelta(workInProgress, true);
          }

          throwException(root, workInProgress.return, workInProgress, thrownValue, renderExpirationTime);
          workInProgress = completeUnitOfWork(workInProgress);
        } catch (yetAnotherThrownValue) {
          // Something in the return path also threw.
          thrownValue = yetAnotherThrownValue;
          continue;
        } // Return to the normal work loop.


        return;
      } while (true);
    }

    function pushDispatcher(root) {
      var prevDispatcher = ReactCurrentDispatcher.current;
      ReactCurrentDispatcher.current = ContextOnlyDispatcher;

      if (prevDispatcher === null) {
        // The React isomorphic package does not include a default dispatcher.
        // Instead the first renderer will lazily attach one, in order to give
        // nicer error messages.
        return ContextOnlyDispatcher;
      } else {
        return prevDispatcher;
      }
    }

    function popDispatcher(prevDispatcher) {
      ReactCurrentDispatcher.current = prevDispatcher;
    }

    function pushInteractions(root) {
      if (enableSchedulerTracing) {
        var prevInteractions = tracing.__interactionsRef.current;
        tracing.__interactionsRef.current = root.memoizedInteractions;
        return prevInteractions;
      }

      return null;
    }

    function popInteractions(prevInteractions) {
      if (enableSchedulerTracing) {
        tracing.__interactionsRef.current = prevInteractions;
      }
    }

    function markCommitTimeOfFallback() {
      globalMostRecentFallbackTime = now();
    }

    function markRenderEventTimeAndConfig(expirationTime, suspenseConfig) {
      if (expirationTime < workInProgressRootLatestProcessedExpirationTime && expirationTime > Idle) {
        workInProgressRootLatestProcessedExpirationTime = expirationTime;
      }

      if (suspenseConfig !== null) {
        if (expirationTime < workInProgressRootLatestSuspenseTimeout && expirationTime > Idle) {
          workInProgressRootLatestSuspenseTimeout = expirationTime; // Most of the time we only have one config and getting wrong is not bad.

          workInProgressRootCanSuspendUsingConfig = suspenseConfig;
        }
      }
    }

    function markUnprocessedUpdateTime(expirationTime) {
      if (expirationTime > workInProgressRootNextUnprocessedUpdateTime) {
        workInProgressRootNextUnprocessedUpdateTime = expirationTime;
      }
    }

    function renderDidSuspend() {
      if (workInProgressRootExitStatus === RootIncomplete) {
        workInProgressRootExitStatus = RootSuspended;
      }
    }

    function renderDidSuspendDelayIfPossible() {
      if (workInProgressRootExitStatus === RootIncomplete || workInProgressRootExitStatus === RootSuspended) {
        workInProgressRootExitStatus = RootSuspendedWithDelay;
      } // Check if there's a lower priority update somewhere else in the tree.


      if (workInProgressRootNextUnprocessedUpdateTime !== NoWork && workInProgressRoot !== null) {
        // Mark the current render as suspended, and then mark that there's a
        // pending update.
        // TODO: This should immediately interrupt the current render, instead
        // of waiting until the next time we yield.
        markRootSuspendedAtTime(workInProgressRoot, renderExpirationTime);
        markRootUpdatedAtTime(workInProgressRoot, workInProgressRootNextUnprocessedUpdateTime);
      }
    }

    function renderDidError() {
      if (workInProgressRootExitStatus !== RootCompleted) {
        workInProgressRootExitStatus = RootErrored;
      }
    } // Called during render to determine if anything has suspended.
    // Returns false if we're not sure.


    function renderHasNotSuspendedYet() {
      // If something errored or completed, we can't really be sure,
      // so those are false.
      return workInProgressRootExitStatus === RootIncomplete;
    }

    function inferTimeFromExpirationTime(expirationTime) {
      // We don't know exactly when the update was scheduled, but we can infer an
      // approximate start time from the expiration time.
      var earliestExpirationTimeMs = expirationTimeToMs(expirationTime);
      return earliestExpirationTimeMs - LOW_PRIORITY_EXPIRATION;
    }

    function inferTimeFromExpirationTimeWithSuspenseConfig(expirationTime, suspenseConfig) {
      // We don't know exactly when the update was scheduled, but we can infer an
      // approximate start time from the expiration time by subtracting the timeout
      // that was added to the event time.
      var earliestExpirationTimeMs = expirationTimeToMs(expirationTime);
      return earliestExpirationTimeMs - (suspenseConfig.timeoutMs | 0 || LOW_PRIORITY_EXPIRATION);
    } // The work loop is an extremely hot path. Tell Closure not to inline it.

    /** @noinline */


    function workLoopSync() {
      // Already timed out, so perform work without checking if we need to yield.
      while (workInProgress !== null) {
        workInProgress = performUnitOfWork(workInProgress);
      }
    }
    /** @noinline */


    function workLoopConcurrent() {
      // Perform work until Scheduler asks us to yield
      while (workInProgress !== null && !shouldYield()) {
        workInProgress = performUnitOfWork(workInProgress);
      }
    }

    function performUnitOfWork(unitOfWork) {
      // The current, flushed, state of this fiber is the alternate. Ideally
      // nothing should rely on this, but relying on it here means that we don't
      // need an additional field on the work in progress.
      var current$$1 = unitOfWork.alternate;
      startWorkTimer(unitOfWork);
      setCurrentFiber(unitOfWork);
      var next;

      if (enableProfilerTimer && (unitOfWork.mode & ProfileMode) !== NoMode) {
        startProfilerTimer(unitOfWork);
        next = beginWork$$1(current$$1, unitOfWork, renderExpirationTime);
        stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);
      } else {
        next = beginWork$$1(current$$1, unitOfWork, renderExpirationTime);
      }

      resetCurrentFiber();
      unitOfWork.memoizedProps = unitOfWork.pendingProps;

      if (next === null) {
        // If this doesn't spawn new work, complete the current work.
        next = completeUnitOfWork(unitOfWork);
      }

      ReactCurrentOwner$2.current = null;
      return next;
    }

    function completeUnitOfWork(unitOfWork) {
      // Attempt to complete the current unit of work, then move to the next
      // sibling. If there are no more siblings, return to the parent fiber.
      workInProgress = unitOfWork;

      do {
        // The current, flushed, state of this fiber is the alternate. Ideally
        // nothing should rely on this, but relying on it here means that we don't
        // need an additional field on the work in progress.
        var current$$1 = workInProgress.alternate;
        var returnFiber = workInProgress.return; // Check if the work completed or if something threw.

        if ((workInProgress.effectTag & Incomplete) === NoEffect) {
          setCurrentFiber(workInProgress);
          var next = void 0;

          if (!enableProfilerTimer || (workInProgress.mode & ProfileMode) === NoMode) {
            next = completeWork(current$$1, workInProgress, renderExpirationTime);
          } else {
            startProfilerTimer(workInProgress);
            next = completeWork(current$$1, workInProgress, renderExpirationTime); // Update render duration assuming we didn't error.

            stopProfilerTimerIfRunningAndRecordDelta(workInProgress, false);
          }

          stopWorkTimer(workInProgress);
          resetCurrentFiber();
          resetChildExpirationTime(workInProgress);

          if (next !== null) {
            // Completing this fiber spawned new work. Work on that next.
            return next;
          }

          if (returnFiber !== null && // Do not append effects to parents if a sibling failed to complete
          (returnFiber.effectTag & Incomplete) === NoEffect) {
            // Append all the effects of the subtree and this fiber onto the effect
            // list of the parent. The completion order of the children affects the
            // side-effect order.
            if (returnFiber.firstEffect === null) {
              returnFiber.firstEffect = workInProgress.firstEffect;
            }

            if (workInProgress.lastEffect !== null) {
              if (returnFiber.lastEffect !== null) {
                returnFiber.lastEffect.nextEffect = workInProgress.firstEffect;
              }

              returnFiber.lastEffect = workInProgress.lastEffect;
            } // If this fiber had side-effects, we append it AFTER the children's
            // side-effects. We can perform certain side-effects earlier if needed,
            // by doing multiple passes over the effect list. We don't want to
            // schedule our own side-effect on our own list because if end up
            // reusing children we'll schedule this effect onto itself since we're
            // at the end.


            var effectTag = workInProgress.effectTag; // Skip both NoWork and PerformedWork tags when creating the effect
            // list. PerformedWork effect is read by React DevTools but shouldn't be
            // committed.

            if (effectTag > PerformedWork) {
              if (returnFiber.lastEffect !== null) {
                returnFiber.lastEffect.nextEffect = workInProgress;
              } else {
                returnFiber.firstEffect = workInProgress;
              }

              returnFiber.lastEffect = workInProgress;
            }
          }
        } else {
          // This fiber did not complete because something threw. Pop values off
          // the stack without entering the complete phase. If this is a boundary,
          // capture values if possible.
          var _next = unwindWork(workInProgress, renderExpirationTime); // Because this fiber did not complete, don't reset its expiration time.


          if (enableProfilerTimer && (workInProgress.mode & ProfileMode) !== NoMode) {
            // Record the render duration for the fiber that errored.
            stopProfilerTimerIfRunningAndRecordDelta(workInProgress, false); // Include the time spent working on failed children before continuing.

            var actualDuration = workInProgress.actualDuration;
            var child = workInProgress.child;

            while (child !== null) {
              actualDuration += child.actualDuration;
              child = child.sibling;
            }

            workInProgress.actualDuration = actualDuration;
          }

          if (_next !== null) {
            // If completing this work spawned new work, do that next. We'll come
            // back here again.
            // Since we're restarting, remove anything that is not a host effect
            // from the effect tag.
            // TODO: The name stopFailedWorkTimer is misleading because Suspense
            // also captures and restarts.
            stopFailedWorkTimer(workInProgress);
            _next.effectTag &= HostEffectMask;
            return _next;
          }

          stopWorkTimer(workInProgress);

          if (returnFiber !== null) {
            // Mark the parent fiber as incomplete and clear its effect list.
            returnFiber.firstEffect = returnFiber.lastEffect = null;
            returnFiber.effectTag |= Incomplete;
          }
        }

        var siblingFiber = workInProgress.sibling;

        if (siblingFiber !== null) {
          // If there is more work to do in this returnFiber, do that next.
          return siblingFiber;
        } // Otherwise, return to the parent


        workInProgress = returnFiber;
      } while (workInProgress !== null); // We've reached the root.


      if (workInProgressRootExitStatus === RootIncomplete) {
        workInProgressRootExitStatus = RootCompleted;
      }

      return null;
    }

    function getRemainingExpirationTime(fiber) {
      var updateExpirationTime = fiber.expirationTime;
      var childExpirationTime = fiber.childExpirationTime;
      return updateExpirationTime > childExpirationTime ? updateExpirationTime : childExpirationTime;
    }

    function resetChildExpirationTime(completedWork) {
      if (renderExpirationTime !== Never && completedWork.childExpirationTime === Never) {
        // The children of this component are hidden. Don't bubble their
        // expiration times.
        return;
      }

      var newChildExpirationTime = NoWork; // Bubble up the earliest expiration time.

      if (enableProfilerTimer && (completedWork.mode & ProfileMode) !== NoMode) {
        // In profiling mode, resetChildExpirationTime is also used to reset
        // profiler durations.
        var actualDuration = completedWork.actualDuration;
        var treeBaseDuration = completedWork.selfBaseDuration; // When a fiber is cloned, its actualDuration is reset to 0. This value will
        // only be updated if work is done on the fiber (i.e. it doesn't bailout).
        // When work is done, it should bubble to the parent's actualDuration. If
        // the fiber has not been cloned though, (meaning no work was done), then
        // this value will reflect the amount of time spent working on a previous
        // render. In that case it should not bubble. We determine whether it was
        // cloned by comparing the child pointer.

        var shouldBubbleActualDurations = completedWork.alternate === null || completedWork.child !== completedWork.alternate.child;
        var child = completedWork.child;

        while (child !== null) {
          var childUpdateExpirationTime = child.expirationTime;
          var childChildExpirationTime = child.childExpirationTime;

          if (childUpdateExpirationTime > newChildExpirationTime) {
            newChildExpirationTime = childUpdateExpirationTime;
          }

          if (childChildExpirationTime > newChildExpirationTime) {
            newChildExpirationTime = childChildExpirationTime;
          }

          if (shouldBubbleActualDurations) {
            actualDuration += child.actualDuration;
          }

          treeBaseDuration += child.treeBaseDuration;
          child = child.sibling;
        }

        completedWork.actualDuration = actualDuration;
        completedWork.treeBaseDuration = treeBaseDuration;
      } else {
        var _child = completedWork.child;

        while (_child !== null) {
          var _childUpdateExpirationTime = _child.expirationTime;
          var _childChildExpirationTime = _child.childExpirationTime;

          if (_childUpdateExpirationTime > newChildExpirationTime) {
            newChildExpirationTime = _childUpdateExpirationTime;
          }

          if (_childChildExpirationTime > newChildExpirationTime) {
            newChildExpirationTime = _childChildExpirationTime;
          }

          _child = _child.sibling;
        }
      }

      completedWork.childExpirationTime = newChildExpirationTime;
    }

    function commitRoot(root) {
      var renderPriorityLevel = getCurrentPriorityLevel();
      runWithPriority$2(ImmediatePriority, commitRootImpl.bind(null, root, renderPriorityLevel));
      return null;
    }

    function commitRootImpl(root, renderPriorityLevel) {
      flushPassiveEffects();
      flushRenderPhaseStrictModeWarningsInDEV();

      (function () {
        if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
          {
            throw ReactError(Error("Should not already be working."));
          }
        }
      })();

      var finishedWork = root.finishedWork;
      var expirationTime = root.finishedExpirationTime;

      if (finishedWork === null) {
        return null;
      }

      root.finishedWork = null;
      root.finishedExpirationTime = NoWork;

      (function () {
        if (!(finishedWork !== root.current)) {
          {
            throw ReactError(Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue."));
          }
        }
      })(); // commitRoot never returns a continuation; it always finishes synchronously.
      // So we can clear these now to allow a new callback to be scheduled.


      root.callbackNode = null;
      root.callbackExpirationTime = NoWork;
      root.callbackPriority = NoPriority;
      root.nextKnownPendingLevel = NoWork;
      startCommitTimer(); // Update the first and last pending times on this root. The new first
      // pending time is whatever is left on the root fiber.

      var remainingExpirationTimeBeforeCommit = getRemainingExpirationTime(finishedWork);
      markRootFinishedAtTime(root, expirationTime, remainingExpirationTimeBeforeCommit);

      if (root === workInProgressRoot) {
        // We can reset these now that they are finished.
        workInProgressRoot = null;
        workInProgress = null;
        renderExpirationTime = NoWork;
      } else {} // This indicates that the last root we worked on is not the same one that
      // we're committing now. This most commonly happens when a suspended root
      // times out.
      // Get the list of effects.


      var firstEffect;

      if (finishedWork.effectTag > PerformedWork) {
        // A fiber's effect list consists only of its children, not itself. So if
        // the root has an effect, we need to add it to the end of the list. The
        // resulting list is the set that would belong to the root's parent, if it
        // had one; that is, all the effects in the tree including the root.
        if (finishedWork.lastEffect !== null) {
          finishedWork.lastEffect.nextEffect = finishedWork;
          firstEffect = finishedWork.firstEffect;
        } else {
          firstEffect = finishedWork;
        }
      } else {
        // There is no effect on the root.
        firstEffect = finishedWork.firstEffect;
      }

      if (firstEffect !== null) {
        var prevExecutionContext = executionContext;
        executionContext |= CommitContext;
        var prevInteractions = pushInteractions(root); // Reset this to null before calling lifecycles

        ReactCurrentOwner$2.current = null; // The commit phase is broken into several sub-phases. We do a separate pass
        // of the effect list for each phase: all mutation effects come before all
        // layout effects, and so on.
        // The first phase a "before mutation" phase. We use this phase to read the
        // state of the host tree right before we mutate it. This is where
        // getSnapshotBeforeUpdate is called.

        startCommitSnapshotEffectsTimer();
        prepareForCommit(root.containerInfo);
        nextEffect = firstEffect;

        do {
          {
            invokeGuardedCallback(null, commitBeforeMutationEffects, null);

            if (hasCaughtError()) {
              (function () {
                if (!(nextEffect !== null)) {
                  {
                    throw ReactError(Error("Should be working on an effect."));
                  }
                }
              })();

              var error = clearCaughtError();
              captureCommitPhaseError(nextEffect, error);
              nextEffect = nextEffect.nextEffect;
            }
          }
        } while (nextEffect !== null);

        stopCommitSnapshotEffectsTimer();

        if (enableProfilerTimer) {
          // Mark the current commit time to be shared by all Profilers in this
          // batch. This enables them to be grouped later.
          recordCommitTime();
        } // The next phase is the mutation phase, where we mutate the host tree.


        startCommitHostEffectsTimer();
        nextEffect = firstEffect;

        do {
          {
            invokeGuardedCallback(null, commitMutationEffects, null, root, renderPriorityLevel);

            if (hasCaughtError()) {
              (function () {
                if (!(nextEffect !== null)) {
                  {
                    throw ReactError(Error("Should be working on an effect."));
                  }
                }
              })();

              var _error = clearCaughtError();

              captureCommitPhaseError(nextEffect, _error);
              nextEffect = nextEffect.nextEffect;
            }
          }
        } while (nextEffect !== null);

        stopCommitHostEffectsTimer();
        resetAfterCommit(root.containerInfo); // The work-in-progress tree is now the current tree. This must come after
        // the mutation phase, so that the previous tree is still current during
        // componentWillUnmount, but before the layout phase, so that the finished
        // work is current during componentDidMount/Update.

        root.current = finishedWork; // The next phase is the layout phase, where we call effects that read
        // the host tree after it's been mutated. The idiomatic use case for this is
        // layout, but class component lifecycles also fire here for legacy reasons.

        startCommitLifeCyclesTimer();
        nextEffect = firstEffect;

        do {
          {
            invokeGuardedCallback(null, commitLayoutEffects, null, root, expirationTime);

            if (hasCaughtError()) {
              (function () {
                if (!(nextEffect !== null)) {
                  {
                    throw ReactError(Error("Should be working on an effect."));
                  }
                }
              })();

              var _error2 = clearCaughtError();

              captureCommitPhaseError(nextEffect, _error2);
              nextEffect = nextEffect.nextEffect;
            }
          }
        } while (nextEffect !== null);

        stopCommitLifeCyclesTimer();
        nextEffect = null; // Tell Scheduler to yield at the end of the frame, so the browser has an
        // opportunity to paint.

        requestPaint();

        if (enableSchedulerTracing) {
          popInteractions(prevInteractions);
        }

        executionContext = prevExecutionContext;
      } else {
        // No effects.
        root.current = finishedWork; // Measure these anyway so the flamegraph explicitly shows that there were
        // no effects.
        // TODO: Maybe there's a better way to report this.

        startCommitSnapshotEffectsTimer();
        stopCommitSnapshotEffectsTimer();

        if (enableProfilerTimer) {
          recordCommitTime();
        }

        startCommitHostEffectsTimer();
        stopCommitHostEffectsTimer();
        startCommitLifeCyclesTimer();
        stopCommitLifeCyclesTimer();
      }

      stopCommitTimer();
      var rootDidHavePassiveEffects = rootDoesHavePassiveEffects;

      if (rootDoesHavePassiveEffects) {
        // This commit has passive effects. Stash a reference to them. But don't
        // schedule a callback until after flushing layout work.
        rootDoesHavePassiveEffects = false;
        rootWithPendingPassiveEffects = root;
        pendingPassiveEffectsExpirationTime = expirationTime;
        pendingPassiveEffectsRenderPriority = renderPriorityLevel;
      } else {
        // We are done with the effect chain at this point so let's clear the
        // nextEffect pointers to assist with GC. If we have passive effects, we'll
        // clear this in flushPassiveEffects.
        nextEffect = firstEffect;

        while (nextEffect !== null) {
          var nextNextEffect = nextEffect.nextEffect;
          nextEffect.nextEffect = null;
          nextEffect = nextNextEffect;
        }
      } // Check if there's remaining work on this root


      var remainingExpirationTime = root.firstPendingTime;

      if (remainingExpirationTime !== NoWork) {
        if (enableSchedulerTracing) {
          if (spawnedWorkDuringRender !== null) {
            var expirationTimes = spawnedWorkDuringRender;
            spawnedWorkDuringRender = null;

            for (var i = 0; i < expirationTimes.length; i++) {
              scheduleInteractions(root, expirationTimes[i], root.memoizedInteractions);
            }
          }

          schedulePendingInteractions(root, remainingExpirationTime);
        }
      } else {
        // If there's no remaining work, we can clear the set of already failed
        // error boundaries.
        legacyErrorBoundariesThatAlreadyFailed = null;
      }

      if (enableSchedulerTracing) {
        if (!rootDidHavePassiveEffects) {
          // If there are no passive effects, then we can complete the pending interactions.
          // Otherwise, we'll wait until after the passive effects are flushed.
          // Wait to do this until after remaining work has been scheduled,
          // so that we don't prematurely signal complete for interactions when there's e.g. hidden work.
          finishPendingInteractions(root, expirationTime);
        }
      }

      if (remainingExpirationTime === Sync) {
        // Count the number of times the root synchronously re-renders without
        // finishing. If there are too many, it indicates an infinite update loop.
        if (root === rootWithNestedUpdates) {
          nestedUpdateCount++;
        } else {
          nestedUpdateCount = 0;
          rootWithNestedUpdates = root;
        }
      } else {
        nestedUpdateCount = 0;
      }

      onCommitRoot(finishedWork.stateNode, expirationTime); // Always call this before exiting `commitRoot`, to ensure that any
      // additional work on this root is scheduled.

      ensureRootIsScheduled(root);

      if (hasUncaughtError) {
        hasUncaughtError = false;
        var _error3 = firstUncaughtError;
        firstUncaughtError = null;
        throw _error3;
      }

      if ((executionContext & LegacyUnbatchedContext) !== NoContext) {
        // This is a legacy edge case. We just committed the initial mount of
        // a ReactDOM.render-ed root inside of batchedUpdates. The commit fired
        // synchronously, but layout updates should be deferred until the end
        // of the batch.
        return null;
      } // If layout work was scheduled, flush it now.


      flushSyncCallbackQueue();
      return null;
    }

    function commitBeforeMutationEffects() {
      while (nextEffect !== null) {
        var effectTag = nextEffect.effectTag;

        if ((effectTag & Snapshot) !== NoEffect) {
          setCurrentFiber(nextEffect);
          recordEffect();
          var current$$1 = nextEffect.alternate;
          commitBeforeMutationLifeCycles(current$$1, nextEffect);
          resetCurrentFiber();
        }

        if ((effectTag & Passive) !== NoEffect) {
          // If there are passive effects, schedule a callback to flush at
          // the earliest opportunity.
          if (!rootDoesHavePassiveEffects) {
            rootDoesHavePassiveEffects = true;
            scheduleCallback(NormalPriority, function () {
              flushPassiveEffects();
              return null;
            });
          }
        }

        nextEffect = nextEffect.nextEffect;
      }
    }

    function commitMutationEffects(root, renderPriorityLevel) {
      // TODO: Should probably move the bulk of this function to commitWork.
      while (nextEffect !== null) {
        setCurrentFiber(nextEffect);
        var effectTag = nextEffect.effectTag;

        if (effectTag & ContentReset) {
          commitResetTextContent(nextEffect);
        }

        if (effectTag & Ref) {
          var current$$1 = nextEffect.alternate;

          if (current$$1 !== null) {
            commitDetachRef(current$$1);
          }
        } // The following switch statement is only concerned about placement,
        // updates, and deletions. To avoid needing to add a case for every possible
        // bitmap value, we remove the secondary effects from the effect tag and
        // switch on that value.


        var primaryEffectTag = effectTag & (Placement | Update | Deletion | Hydrating);

        switch (primaryEffectTag) {
          case Placement:
            {
              commitPlacement(nextEffect); // Clear the "placement" from effect tag so that we know that this is
              // inserted, before any life-cycles like componentDidMount gets called.
              // TODO: findDOMNode doesn't rely on this any more but isMounted does
              // and isMounted is deprecated anyway so we should be able to kill this.

              nextEffect.effectTag &= ~Placement;
              break;
            }

          case PlacementAndUpdate:
            {
              // Placement
              commitPlacement(nextEffect); // Clear the "placement" from effect tag so that we know that this is
              // inserted, before any life-cycles like componentDidMount gets called.

              nextEffect.effectTag &= ~Placement; // Update

              var _current = nextEffect.alternate;
              commitWork(_current, nextEffect);
              break;
            }

          case Hydrating:
            {
              nextEffect.effectTag &= ~Hydrating;
              break;
            }

          case HydratingAndUpdate:
            {
              nextEffect.effectTag &= ~Hydrating; // Update

              var _current2 = nextEffect.alternate;
              commitWork(_current2, nextEffect);
              break;
            }

          case Update:
            {
              var _current3 = nextEffect.alternate;
              commitWork(_current3, nextEffect);
              break;
            }

          case Deletion:
            {
              commitDeletion(root, nextEffect, renderPriorityLevel);
              break;
            }
        } // TODO: Only record a mutation effect if primaryEffectTag is non-zero.


        recordEffect();
        resetCurrentFiber();
        nextEffect = nextEffect.nextEffect;
      }
    }

    function commitLayoutEffects(root, committedExpirationTime) {
      // TODO: Should probably move the bulk of this function to commitWork.
      while (nextEffect !== null) {
        setCurrentFiber(nextEffect);
        var effectTag = nextEffect.effectTag;

        if (effectTag & (Update | Callback)) {
          recordEffect();
          var current$$1 = nextEffect.alternate;
          commitLifeCycles(root, current$$1, nextEffect, committedExpirationTime);
        }

        if (effectTag & Ref) {
          recordEffect();
          commitAttachRef(nextEffect);
        }

        resetCurrentFiber();
        nextEffect = nextEffect.nextEffect;
      }
    }

    function flushPassiveEffects() {
      if (pendingPassiveEffectsRenderPriority !== NoPriority) {
        var priorityLevel = pendingPassiveEffectsRenderPriority > NormalPriority ? NormalPriority : pendingPassiveEffectsRenderPriority;
        pendingPassiveEffectsRenderPriority = NoPriority;
        return runWithPriority$2(priorityLevel, flushPassiveEffectsImpl);
      }
    }

    function flushPassiveEffectsImpl() {
      if (rootWithPendingPassiveEffects === null) {
        return false;
      }

      var root = rootWithPendingPassiveEffects;
      var expirationTime = pendingPassiveEffectsExpirationTime;
      rootWithPendingPassiveEffects = null;
      pendingPassiveEffectsExpirationTime = NoWork;

      (function () {
        if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
          {
            throw ReactError(Error("Cannot flush passive effects while already rendering."));
          }
        }
      })();

      var prevExecutionContext = executionContext;
      executionContext |= CommitContext;
      var prevInteractions = pushInteractions(root); // Note: This currently assumes there are no passive effects on the root
      // fiber, because the root is not part of its own effect list. This could
      // change in the future.

      var effect = root.current.firstEffect;

      while (effect !== null) {
        {
          setCurrentFiber(effect);
          invokeGuardedCallback(null, commitPassiveHookEffects, null, effect);

          if (hasCaughtError()) {
            (function () {
              if (!(effect !== null)) {
                {
                  throw ReactError(Error("Should be working on an effect."));
                }
              }
            })();

            var error = clearCaughtError();
            captureCommitPhaseError(effect, error);
          }

          resetCurrentFiber();
        }
        var nextNextEffect = effect.nextEffect; // Remove nextEffect pointer to assist GC

        effect.nextEffect = null;
        effect = nextNextEffect;
      }

      if (enableSchedulerTracing) {
        popInteractions(prevInteractions);
        finishPendingInteractions(root, expirationTime);
      }

      executionContext = prevExecutionContext;
      flushSyncCallbackQueue(); // If additional passive effects were scheduled, increment a counter. If this
      // exceeds the limit, we'll fire a warning.

      nestedPassiveUpdateCount = rootWithPendingPassiveEffects === null ? 0 : nestedPassiveUpdateCount + 1;
      return true;
    }

    function isAlreadyFailedLegacyErrorBoundary(instance) {
      return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
    }

    function markLegacyErrorBoundaryAsFailed(instance) {
      if (legacyErrorBoundariesThatAlreadyFailed === null) {
        legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);
      } else {
        legacyErrorBoundariesThatAlreadyFailed.add(instance);
      }
    }

    function prepareToThrowUncaughtError(error) {
      if (!hasUncaughtError) {
        hasUncaughtError = true;
        firstUncaughtError = error;
      }
    }

    var onUncaughtError = prepareToThrowUncaughtError;

    function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
      var errorInfo = createCapturedValue(error, sourceFiber);
      var update = createRootErrorUpdate(rootFiber, errorInfo, Sync);
      enqueueUpdate(rootFiber, update);
      var root = markUpdateTimeFromFiberToRoot(rootFiber, Sync);

      if (root !== null) {
        ensureRootIsScheduled(root);
        schedulePendingInteractions(root, Sync);
      }
    }

    function captureCommitPhaseError(sourceFiber, error) {
      if (sourceFiber.tag === HostRoot) {
        // Error was thrown at the root. There is no parent, so the root
        // itself should capture it.
        captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);
        return;
      }

      var fiber = sourceFiber.return;

      while (fiber !== null) {
        if (fiber.tag === HostRoot) {
          captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error);
          return;
        } else if (fiber.tag === ClassComponent) {
          var ctor = fiber.type;
          var instance = fiber.stateNode;

          if (typeof ctor.getDerivedStateFromError === 'function' || typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {
            var errorInfo = createCapturedValue(error, sourceFiber);
            var update = createClassErrorUpdate(fiber, errorInfo, // TODO: This is always sync
            Sync);
            enqueueUpdate(fiber, update);
            var root = markUpdateTimeFromFiberToRoot(fiber, Sync);

            if (root !== null) {
              ensureRootIsScheduled(root);
              schedulePendingInteractions(root, Sync);
            }

            return;
          }
        }

        fiber = fiber.return;
      }
    }

    function pingSuspendedRoot(root, thenable, suspendedTime) {
      var pingCache = root.pingCache;

      if (pingCache !== null) {
        // The thenable resolved, so we no longer need to memoize, because it will
        // never be thrown again.
        pingCache.delete(thenable);
      }

      if (workInProgressRoot === root && renderExpirationTime === suspendedTime) {
        // Received a ping at the same priority level at which we're currently
        // rendering. We might want to restart this render. This should mirror
        // the logic of whether or not a root suspends once it completes.
        // TODO: If we're rendering sync either due to Sync, Batched or expired,
        // we should probably never restart.
        // If we're suspended with delay, we'll always suspend so we can always
        // restart. If we're suspended without any updates, it might be a retry.
        // If it's early in the retry we can restart. We can't know for sure
        // whether we'll eventually process an update during this render pass,
        // but it's somewhat unlikely that we get to a ping before that, since
        // getting to the root most update is usually very fast.
        if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && workInProgressRootLatestProcessedExpirationTime === Sync && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) {
          // Restart from the root. Don't need to schedule a ping because
          // we're already working on this tree.
          prepareFreshStack(root, renderExpirationTime);
        } else {
          // Even though we can't restart right now, we might get an
          // opportunity later. So we mark this render as having a ping.
          workInProgressRootHasPendingPing = true;
        }

        return;
      }

      if (!isRootSuspendedAtTime(root, suspendedTime)) {
        // The root is no longer suspended at this time.
        return;
      }

      var lastPingedTime = root.lastPingedTime;

      if (lastPingedTime !== NoWork && lastPingedTime < suspendedTime) {
        // There's already a lower priority ping scheduled.
        return;
      } // Mark the time at which this ping was scheduled.


      root.lastPingedTime = suspendedTime;

      if (root.finishedExpirationTime === suspendedTime) {
        // If there's a pending fallback waiting to commit, throw it away.
        root.finishedExpirationTime = NoWork;
        root.finishedWork = null;
      }

      ensureRootIsScheduled(root);
      schedulePendingInteractions(root, suspendedTime);
    }

    function retryTimedOutBoundary(boundaryFiber, retryTime) {
      // The boundary fiber (a Suspense component or SuspenseList component)
      // previously was rendered in its fallback state. One of the promises that
      // suspended it has resolved, which means at least part of the tree was
      // likely unblocked. Try rendering again, at a new expiration time.
      if (retryTime === Never) {
        var suspenseConfig = null; // Retries don't carry over the already committed update.

        var currentTime = requestCurrentTime();
        retryTime = computeExpirationForFiber(currentTime, boundaryFiber, suspenseConfig);
      } // TODO: Special case idle priority?


      var root = markUpdateTimeFromFiberToRoot(boundaryFiber, retryTime);

      if (root !== null) {
        ensureRootIsScheduled(root);
        schedulePendingInteractions(root, retryTime);
      }
    }

    function retryDehydratedSuspenseBoundary(boundaryFiber) {
      var suspenseState = boundaryFiber.memoizedState;
      var retryTime = Never;

      if (suspenseState !== null) {
        retryTime = suspenseState.retryTime;
      }

      retryTimedOutBoundary(boundaryFiber, retryTime);
    }

    function resolveRetryThenable(boundaryFiber, thenable) {
      var retryTime = Never; // Default

      var retryCache;

      if (enableSuspenseServerRenderer) {
        switch (boundaryFiber.tag) {
          case SuspenseComponent:
            retryCache = boundaryFiber.stateNode;
            var suspenseState = boundaryFiber.memoizedState;

            if (suspenseState !== null) {
              retryTime = suspenseState.retryTime;
            }

            break;

          case SuspenseListComponent:
            retryCache = boundaryFiber.stateNode;
            break;

          default:
            (function () {
              {
                {
                  throw ReactError(Error("Pinged unknown suspense boundary type. This is probably a bug in React."));
                }
              }
            })();

        }
      } else {
        retryCache = boundaryFiber.stateNode;
      }

      if (retryCache !== null) {
        // The thenable resolved, so we no longer need to memoize, because it will
        // never be thrown again.
        retryCache.delete(thenable);
      }

      retryTimedOutBoundary(boundaryFiber, retryTime);
    } // Computes the next Just Noticeable Difference (JND) boundary.
    // The theory is that a person can't tell the difference between small differences in time.
    // Therefore, if we wait a bit longer than necessary that won't translate to a noticeable
    // difference in the experience. However, waiting for longer might mean that we can avoid
    // showing an intermediate loading state. The longer we have already waited, the harder it
    // is to tell small differences in time. Therefore, the longer we've already waited,
    // the longer we can wait additionally. At some point we have to give up though.
    // We pick a train model where the next boundary commits at a consistent schedule.
    // These particular numbers are vague estimates. We expect to adjust them based on research.


    function jnd(timeElapsed) {
      return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3000 ? 3000 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;
    }

    function computeMsUntilSuspenseLoadingDelay(mostRecentEventTime, committedExpirationTime, suspenseConfig) {
      var busyMinDurationMs = suspenseConfig.busyMinDurationMs | 0;

      if (busyMinDurationMs <= 0) {
        return 0;
      }

      var busyDelayMs = suspenseConfig.busyDelayMs | 0; // Compute the time until this render pass would expire.

      var currentTimeMs = now();
      var eventTimeMs = inferTimeFromExpirationTimeWithSuspenseConfig(mostRecentEventTime, suspenseConfig);
      var timeElapsed = currentTimeMs - eventTimeMs;

      if (timeElapsed <= busyDelayMs) {
        // If we haven't yet waited longer than the initial delay, we don't
        // have to wait any additional time.
        return 0;
      }

      var msUntilTimeout = busyDelayMs + busyMinDurationMs - timeElapsed; // This is the value that is passed to `setTimeout`.

      return msUntilTimeout;
    }

    function checkForNestedUpdates() {
      if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
        nestedUpdateCount = 0;
        rootWithNestedUpdates = null;

        (function () {
          {
            {
              throw ReactError(Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops."));
            }
          }
        })();
      }

      {
        if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {
          nestedPassiveUpdateCount = 0;
          warning$1(false, 'Maximum update depth exceeded. This can happen when a component ' + "calls setState inside useEffect, but useEffect either doesn't " + 'have a dependency array, or one of the dependencies changes on ' + 'every render.');
        }
      }
    }

    function flushRenderPhaseStrictModeWarningsInDEV() {
      {
        ReactStrictModeWarnings.flushLegacyContextWarning();

        if (warnAboutDeprecatedLifecycles) {
          ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
        }
      }
    }

    function stopFinishedWorkLoopTimer() {
      var didCompleteRoot = true;
      stopWorkLoopTimer(interruptedBy, didCompleteRoot);
      interruptedBy = null;
    }

    function stopInterruptedWorkLoopTimer() {
      // TODO: Track which fiber caused the interruption.
      var didCompleteRoot = false;
      stopWorkLoopTimer(interruptedBy, didCompleteRoot);
      interruptedBy = null;
    }

    function checkForInterruption(fiberThatReceivedUpdate, updateExpirationTime) {
      if (enableUserTimingAPI && workInProgressRoot !== null && updateExpirationTime > renderExpirationTime) {
        interruptedBy = fiberThatReceivedUpdate;
      }
    }

    var didWarnStateUpdateForUnmountedComponent = null;

    function warnAboutUpdateOnUnmountedFiberInDEV(fiber) {
      {
        var tag = fiber.tag;

        if (tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent) {
          // Only warn for user-defined components, not internal ones like Suspense.
          return;
        } // We show the whole stack but dedupe on the top component's name because
        // the problematic code almost always lies inside that component.


        var componentName = getComponentName(fiber.type) || 'ReactComponent';

        if (didWarnStateUpdateForUnmountedComponent !== null) {
          if (didWarnStateUpdateForUnmountedComponent.has(componentName)) {
            return;
          }

          didWarnStateUpdateForUnmountedComponent.add(componentName);
        } else {
          didWarnStateUpdateForUnmountedComponent = new Set([componentName]);
        }

        warningWithoutStack$1(false, "Can't perform a React state update on an unmounted component. This " + 'is a no-op, but it indicates a memory leak in your application. To ' + 'fix, cancel all subscriptions and asynchronous tasks in %s.%s', tag === ClassComponent ? 'the componentWillUnmount method' : 'a useEffect cleanup function', getStackByFiberInDevAndProd(fiber));
      }
    }

    var beginWork$$1;

    if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
      var dummyFiber = null;

      beginWork$$1 = function (current$$1, unitOfWork, expirationTime) {
        // If a component throws an error, we replay it again in a synchronously
        // dispatched event, so that the debugger will treat it as an uncaught
        // error See ReactErrorUtils for more information.
        // Before entering the begin phase, copy the work-in-progress onto a dummy
        // fiber. If beginWork throws, we'll use this to reset the state.
        var originalWorkInProgressCopy = assignFiberPropertiesInDEV(dummyFiber, unitOfWork);

        try {
          return beginWork$1(current$$1, unitOfWork, expirationTime);
        } catch (originalError) {
          if (originalError !== null && typeof originalError === 'object' && typeof originalError.then === 'function') {
            // Don't replay promises. Treat everything else like an error.
            throw originalError;
          } // Keep this code in sync with renderRoot; any changes here must have
          // corresponding changes there.


          resetContextDependencies();
          resetHooks(); // Unwind the failed stack frame

          unwindInterruptedWork(unitOfWork); // Restore the original properties of the fiber.

          assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);

          if (enableProfilerTimer && unitOfWork.mode & ProfileMode) {
            // Reset the profiler timer.
            startProfilerTimer(unitOfWork);
          } // Run beginWork again.


          invokeGuardedCallback(null, beginWork$1, null, current$$1, unitOfWork, expirationTime);

          if (hasCaughtError()) {
            var replayError = clearCaughtError(); // `invokeGuardedCallback` sometimes sets an expando `_suppressLogging`.
            // Rethrow this error instead of the original one.

            throw replayError;
          } else {
            // This branch is reachable if the render phase is impure.
            throw originalError;
          }
        }
      };
    } else {
      beginWork$$1 = beginWork$1;
    }

    var didWarnAboutUpdateInRender = false;
    var didWarnAboutUpdateInGetChildContext = false;

    function warnAboutInvalidUpdatesOnClassComponentsInDEV(fiber) {
      {
        if (fiber.tag === ClassComponent) {
          switch (phase) {
            case 'getChildContext':
              if (didWarnAboutUpdateInGetChildContext) {
                return;
              }

              warningWithoutStack$1(false, 'setState(...): Cannot call setState() inside getChildContext()');
              didWarnAboutUpdateInGetChildContext = true;
              break;

            case 'render':
              if (didWarnAboutUpdateInRender) {
                return;
              }

              warningWithoutStack$1(false, 'Cannot update during an existing state transition (such as ' + 'within `render`). Render methods should be a pure function of ' + 'props and state.');
              didWarnAboutUpdateInRender = true;
              break;
          }
        }
      }
    } // a 'shared' variable that changes when act() opens/closes in tests.


    var IsThisRendererActing = {
      current: false
    };

    function warnIfNotScopedWithMatchingAct(fiber) {
      {
        if (warnsIfNotActing === true && IsSomeRendererActing.current === true && IsThisRendererActing.current !== true) {
          warningWithoutStack$1(false, "It looks like you're using the wrong act() around your test interactions.\n" + 'Be sure to use the matching version of act() corresponding to your renderer:\n\n' + '// for react-dom:\n' + "import {act} from 'react-dom/test-utils';\n" + '// ...\n' + 'act(() => ...);\n\n' + '// for react-test-renderer:\n' + "import TestRenderer from 'react-test-renderer';\n" + 'const {act} = TestRenderer;\n' + '// ...\n' + 'act(() => ...);' + '%s', getStackByFiberInDevAndProd(fiber));
        }
      }
    }

    function warnIfNotCurrentlyActingEffectsInDEV(fiber) {
      {
        if (warnsIfNotActing === true && (fiber.mode & StrictMode) !== NoMode && IsSomeRendererActing.current === false && IsThisRendererActing.current === false) {
          warningWithoutStack$1(false, 'An update to %s ran an effect, but was not wrapped in act(...).\n\n' + 'When testing, code that causes React state updates should be ' + 'wrapped into act(...):\n\n' + 'act(() => {\n' + '  /* fire events that update state */\n' + '});\n' + '/* assert on the output */\n\n' + "This ensures that you're testing the behavior the user would see " + 'in the browser.' + ' Learn more at https://fb.me/react-wrap-tests-with-act' + '%s', getComponentName(fiber.type), getStackByFiberInDevAndProd(fiber));
        }
      }
    }

    function warnIfNotCurrentlyActingUpdatesInDEV(fiber) {
      {
        if (warnsIfNotActing === true && executionContext === NoContext && IsSomeRendererActing.current === false && IsThisRendererActing.current === false) {
          warningWithoutStack$1(false, 'An update to %s inside a test was not wrapped in act(...).\n\n' + 'When testing, code that causes React state updates should be ' + 'wrapped into act(...):\n\n' + 'act(() => {\n' + '  /* fire events that update state */\n' + '});\n' + '/* assert on the output */\n\n' + "This ensures that you're testing the behavior the user would see " + 'in the browser.' + ' Learn more at https://fb.me/react-wrap-tests-with-act' + '%s', getComponentName(fiber.type), getStackByFiberInDevAndProd(fiber));
        }
      }
    }

    var warnIfNotCurrentlyActingUpdatesInDev = warnIfNotCurrentlyActingUpdatesInDEV; // In tests, we want to enforce a mocked scheduler.

    var didWarnAboutUnmockedScheduler = false; // TODO Before we release concurrent mode, revisit this and decide whether a mocked
    // scheduler is the actual recommendation. The alternative could be a testing build,
    // a new lib, or whatever; we dunno just yet. This message is for early adopters
    // to get their tests right.

    function warnIfUnmockedScheduler(fiber) {
      {
        if (didWarnAboutUnmockedScheduler === false && Scheduler.unstable_flushAllWithoutAsserting === undefined) {
          if (fiber.mode & BatchedMode || fiber.mode & ConcurrentMode) {
            didWarnAboutUnmockedScheduler = true;
            warningWithoutStack$1(false, 'In Concurrent or Sync modes, the "scheduler" module needs to be mocked ' + 'to guarantee consistent behaviour across tests and browsers. ' + 'For example, with jest: \n' + "jest.mock('scheduler', () => require('scheduler/unstable_mock'));\n\n" + 'For more info, visit https://fb.me/react-mock-scheduler');
          } else if (warnAboutUnmockedScheduler === true) {
            didWarnAboutUnmockedScheduler = true;
            warningWithoutStack$1(false, 'Starting from React v17, the "scheduler" module will need to be mocked ' + 'to guarantee consistent behaviour across tests and browsers. ' + 'For example, with jest: \n' + "jest.mock('scheduler', () => require('scheduler/unstable_mock'));\n\n" + 'For more info, visit https://fb.me/react-mock-scheduler');
          }
        }
      }
    }

    var componentsThatTriggeredHighPriSuspend = null;

    function checkForWrongSuspensePriorityInDEV(sourceFiber) {
      {
        var currentPriorityLevel = getCurrentPriorityLevel();

        if ((sourceFiber.mode & ConcurrentMode) !== NoEffect && (currentPriorityLevel === UserBlockingPriority$2 || currentPriorityLevel === ImmediatePriority)) {
          var workInProgressNode = sourceFiber;

          while (workInProgressNode !== null) {
            // Add the component that triggered the suspense
            var current$$1 = workInProgressNode.alternate;

            if (current$$1 !== null) {
              // TODO: warn component that triggers the high priority
              // suspend is the HostRoot
              switch (workInProgressNode.tag) {
                case ClassComponent:
                  // Loop through the component's update queue and see whether the component
                  // has triggered any high priority updates
                  var updateQueue = current$$1.updateQueue;

                  if (updateQueue !== null) {
                    var update = updateQueue.firstUpdate;

                    while (update !== null) {
                      var priorityLevel = update.priority;

                      if (priorityLevel === UserBlockingPriority$2 || priorityLevel === ImmediatePriority) {
                        if (componentsThatTriggeredHighPriSuspend === null) {
                          componentsThatTriggeredHighPriSuspend = new Set([getComponentName(workInProgressNode.type)]);
                        } else {
                          componentsThatTriggeredHighPriSuspend.add(getComponentName(workInProgressNode.type));
                        }

                        break;
                      }

                      update = update.next;
                    }
                  }

                  break;

                case FunctionComponent:
                case ForwardRef:
                case SimpleMemoComponent:
                  if (workInProgressNode.memoizedState !== null && workInProgressNode.memoizedState.baseUpdate !== null) {
                    var _update = workInProgressNode.memoizedState.baseUpdate; // Loop through the functional component's memoized state to see whether
                    // the component has triggered any high pri updates

                    while (_update !== null) {
                      var priority = _update.priority;

                      if (priority === UserBlockingPriority$2 || priority === ImmediatePriority) {
                        if (componentsThatTriggeredHighPriSuspend === null) {
                          componentsThatTriggeredHighPriSuspend = new Set([getComponentName(workInProgressNode.type)]);
                        } else {
                          componentsThatTriggeredHighPriSuspend.add(getComponentName(workInProgressNode.type));
                        }

                        break;
                      }

                      if (_update.next === workInProgressNode.memoizedState.baseUpdate) {
                        break;
                      }

                      _update = _update.next;
                    }
                  }

                  break;

                default:
                  break;
              }
            }

            workInProgressNode = workInProgressNode.return;
          }
        }
      }
    }

    function flushSuspensePriorityWarningInDEV() {
      {
        if (componentsThatTriggeredHighPriSuspend !== null) {
          var componentNames = [];
          componentsThatTriggeredHighPriSuspend.forEach(function (name) {
            return componentNames.push(name);
          });
          componentsThatTriggeredHighPriSuspend = null;

          if (componentNames.length > 0) {
            warningWithoutStack$1(false, '%s triggered a user-blocking update that suspended.' + '\n\n' + 'The fix is to split the update into multiple parts: a user-blocking ' + 'update to provide immediate feedback, and another update that ' + 'triggers the bulk of the changes.' + '\n\n' + 'Refer to the documentation for useSuspenseTransition to learn how ' + 'to implement this pattern.', // TODO: Add link to React docs with more information, once it exists
            componentNames.sort().join(', '));
          }
        }
      }
    }

    function computeThreadID(root, expirationTime) {
      // Interaction threads are unique per root and expiration time.
      return expirationTime * 1000 + root.interactionThreadID;
    }

    function markSpawnedWork(expirationTime) {
      if (!enableSchedulerTracing) {
        return;
      }

      if (spawnedWorkDuringRender === null) {
        spawnedWorkDuringRender = [expirationTime];
      } else {
        spawnedWorkDuringRender.push(expirationTime);
      }
    }

    function scheduleInteractions(root, expirationTime, interactions) {
      if (!enableSchedulerTracing) {
        return;
      }

      if (interactions.size > 0) {
        var pendingInteractionMap = root.pendingInteractionMap;
        var pendingInteractions = pendingInteractionMap.get(expirationTime);

        if (pendingInteractions != null) {
          interactions.forEach(function (interaction) {
            if (!pendingInteractions.has(interaction)) {
              // Update the pending async work count for previously unscheduled interaction.
              interaction.__count++;
            }

            pendingInteractions.add(interaction);
          });
        } else {
          pendingInteractionMap.set(expirationTime, new Set(interactions)); // Update the pending async work count for the current interactions.

          interactions.forEach(function (interaction) {
            interaction.__count++;
          });
        }

        var subscriber = tracing.__subscriberRef.current;

        if (subscriber !== null) {
          var threadID = computeThreadID(root, expirationTime);
          subscriber.onWorkScheduled(interactions, threadID);
        }
      }
    }

    function schedulePendingInteractions(root, expirationTime) {
      // This is called when work is scheduled on a root.
      // It associates the current interactions with the newly-scheduled expiration.
      // They will be restored when that expiration is later committed.
      if (!enableSchedulerTracing) {
        return;
      }

      scheduleInteractions(root, expirationTime, tracing.__interactionsRef.current);
    }

    function startWorkOnPendingInteractions(root, expirationTime) {
      // This is called when new work is started on a root.
      if (!enableSchedulerTracing) {
        return;
      } // Determine which interactions this batch of work currently includes, So that
      // we can accurately attribute time spent working on it, And so that cascading
      // work triggered during the render phase will be associated with it.


      var interactions = new Set();
      root.pendingInteractionMap.forEach(function (scheduledInteractions, scheduledExpirationTime) {
        if (scheduledExpirationTime >= expirationTime) {
          scheduledInteractions.forEach(function (interaction) {
            return interactions.add(interaction);
          });
        }
      }); // Store the current set of interactions on the FiberRoot for a few reasons:
      // We can re-use it in hot functions like renderRoot() without having to
      // recalculate it. We will also use it in commitWork() to pass to any Profiler
      // onRender() hooks. This also provides DevTools with a way to access it when
      // the onCommitRoot() hook is called.

      root.memoizedInteractions = interactions;

      if (interactions.size > 0) {
        var subscriber = tracing.__subscriberRef.current;

        if (subscriber !== null) {
          var threadID = computeThreadID(root, expirationTime);

          try {
            subscriber.onWorkStarted(interactions, threadID);
          } catch (error) {
            // If the subscriber throws, rethrow it in a separate task
            scheduleCallback(ImmediatePriority, function () {
              throw error;
            });
          }
        }
      }
    }

    function finishPendingInteractions(root, committedExpirationTime) {
      if (!enableSchedulerTracing) {
        return;
      }

      var earliestRemainingTimeAfterCommit = root.firstPendingTime;
      var subscriber;

      try {
        subscriber = tracing.__subscriberRef.current;

        if (subscriber !== null && root.memoizedInteractions.size > 0) {
          var threadID = computeThreadID(root, committedExpirationTime);
          subscriber.onWorkStopped(root.memoizedInteractions, threadID);
        }
      } catch (error) {
        // If the subscriber throws, rethrow it in a separate task
        scheduleCallback(ImmediatePriority, function () {
          throw error;
        });
      } finally {
        // Clear completed interactions from the pending Map.
        // Unless the render was suspended or cascading work was scheduled,
        // In which case– leave pending interactions until the subsequent render.
        var pendingInteractionMap = root.pendingInteractionMap;
        pendingInteractionMap.forEach(function (scheduledInteractions, scheduledExpirationTime) {
          // Only decrement the pending interaction count if we're done.
          // If there's still work at the current priority,
          // That indicates that we are waiting for suspense data.
          if (scheduledExpirationTime > earliestRemainingTimeAfterCommit) {
            pendingInteractionMap.delete(scheduledExpirationTime);
            scheduledInteractions.forEach(function (interaction) {
              interaction.__count--;

              if (subscriber !== null && interaction.__count === 0) {
                try {
                  subscriber.onInteractionScheduledWorkCompleted(interaction);
                } catch (error) {
                  // If the subscriber throws, rethrow it in a separate task
                  scheduleCallback(ImmediatePriority, function () {
                    throw error;
                  });
                }
              }
            });
          }
        });
      }
    }

    var onCommitFiberRoot = null;
    var onCommitFiberUnmount = null;
    var hasLoggedError = false;
    var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';

    function injectInternals(internals) {
      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
        // No DevTools
        return false;
      }

      var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;

      if (hook.isDisabled) {
        // This isn't a real property on the hook, but it can be set to opt out
        // of DevTools integration and associated warnings and logs.
        // https://github.com/facebook/react/issues/3877
        return true;
      }

      if (!hook.supportsFiber) {
        {
          warningWithoutStack$1(false, 'The installed version of React DevTools is too old and will not work ' + 'with the current version of React. Please update React DevTools. ' + 'https://fb.me/react-devtools');
        } // DevTools exists, even though it doesn't support Fiber.

        return true;
      }

      try {
        var rendererID = hook.inject(internals); // We have successfully injected, so now it is safe to set up hooks.

        onCommitFiberRoot = function (root, expirationTime) {
          try {
            var didError = (root.current.effectTag & DidCapture) === DidCapture;

            if (enableProfilerTimer) {
              var currentTime = requestCurrentTime();
              var priorityLevel = inferPriorityFromExpirationTime(currentTime, expirationTime);
              hook.onCommitFiberRoot(rendererID, root, priorityLevel, didError);
            } else {
              hook.onCommitFiberRoot(rendererID, root, undefined, didError);
            }
          } catch (err) {
            if (true && !hasLoggedError) {
              hasLoggedError = true;
              warningWithoutStack$1(false, 'React DevTools encountered an error: %s', err);
            }
          }
        };

        onCommitFiberUnmount = function (fiber) {
          try {
            hook.onCommitFiberUnmount(rendererID, fiber);
          } catch (err) {
            if (true && !hasLoggedError) {
              hasLoggedError = true;
              warningWithoutStack$1(false, 'React DevTools encountered an error: %s', err);
            }
          }
        };
      } catch (err) {
        // Catch all errors because it is unsafe to throw during initialization.
        {
          warningWithoutStack$1(false, 'React DevTools encountered an error: %s.', err);
        }
      } // DevTools exists


      return true;
    }

    function onCommitRoot(root, expirationTime) {
      if (typeof onCommitFiberRoot === 'function') {
        onCommitFiberRoot(root, expirationTime);
      }
    }

    function onCommitUnmount(fiber) {
      if (typeof onCommitFiberUnmount === 'function') {
        onCommitFiberUnmount(fiber);
      }
    }

    var hasBadMapPolyfill;
    {
      hasBadMapPolyfill = false;

      try {
        var nonExtensibleObject = Object.preventExtensions({});
        var testMap = new Map([[nonExtensibleObject, null]]);
        var testSet = new Set([nonExtensibleObject]); // This is necessary for Rollup to not consider these unused.
        // https://github.com/rollup/rollup/issues/1771
        // TODO: we can remove these if Rollup fixes the bug.

        testMap.set(0, 0);
        testSet.add(0);
      } catch (e) {
        // TODO: Consider warning about bad polyfills
        hasBadMapPolyfill = true;
      }
    }
    var debugCounter = 1;

    function FiberNode(tag, pendingProps, key, mode) {
      // Instance
      this.tag = tag;
      this.key = key;
      this.elementType = null;
      this.type = null;
      this.stateNode = null; // Fiber

      this.return = null;
      this.child = null;
      this.sibling = null;
      this.index = 0;
      this.ref = null;
      this.pendingProps = pendingProps;
      this.memoizedProps = null;
      this.updateQueue = null;
      this.memoizedState = null;
      this.dependencies = null;
      this.mode = mode; // Effects

      this.effectTag = NoEffect;
      this.nextEffect = null;
      this.firstEffect = null;
      this.lastEffect = null;
      this.expirationTime = NoWork;
      this.childExpirationTime = NoWork;
      this.alternate = null;

      if (enableProfilerTimer) {
        // Note: The following is done to avoid a v8 performance cliff.
        //
        // Initializing the fields below to smis and later updating them with
        // double values will cause Fibers to end up having separate shapes.
        // This behavior/bug has something to do with Object.preventExtension().
        // Fortunately this only impacts DEV builds.
        // Unfortunately it makes React unusably slow for some applications.
        // To work around this, initialize the fields below with doubles.
        //
        // Learn more about this here:
        // https://github.com/facebook/react/issues/14365
        // https://bugs.chromium.org/p/v8/issues/detail?id=8538
        this.actualDuration = Number.NaN;
        this.actualStartTime = Number.NaN;
        this.selfBaseDuration = Number.NaN;
        this.treeBaseDuration = Number.NaN; // It's okay to replace the initial doubles with smis after initialization.
        // This won't trigger the performance cliff mentioned above,
        // and it simplifies other profiler code (including DevTools).

        this.actualDuration = 0;
        this.actualStartTime = -1;
        this.selfBaseDuration = 0;
        this.treeBaseDuration = 0;
      } // This is normally DEV-only except www when it adds listeners.
      // TODO: remove the User Timing integration in favor of Root Events.


      if (enableUserTimingAPI) {
        this._debugID = debugCounter++;
        this._debugIsCurrentlyTiming = false;
      }

      {
        this._debugSource = null;
        this._debugOwner = null;
        this._debugNeedsRemount = false;
        this._debugHookTypes = null;

        if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {
          Object.preventExtensions(this);
        }
      }
    } // This is a constructor function, rather than a POJO constructor, still
    // please ensure we do the following:
    // 1) Nobody should add any instance methods on this. Instance methods can be
    //    more difficult to predict when they get optimized and they are almost
    //    never inlined properly in static compilers.
    // 2) Nobody should rely on `instanceof Fiber` for type testing. We should
    //    always know when it is a fiber.
    // 3) We might want to experiment with using numeric keys since they are easier
    //    to optimize in a non-JIT environment.
    // 4) We can easily go from a constructor to a createFiber object literal if that
    //    is faster.
    // 5) It should be easy to port this to a C struct and keep a C implementation
    //    compatible.


    var createFiber = function (tag, pendingProps, key, mode) {
      // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
      return new FiberNode(tag, pendingProps, key, mode);
    };

    function shouldConstruct(Component) {
      var prototype = Component.prototype;
      return !!(prototype && prototype.isReactComponent);
    }

    function isSimpleFunctionComponent(type) {
      return typeof type === 'function' && !shouldConstruct(type) && type.defaultProps === undefined;
    }

    function resolveLazyComponentTag(Component) {
      if (typeof Component === 'function') {
        return shouldConstruct(Component) ? ClassComponent : FunctionComponent;
      } else if (Component !== undefined && Component !== null) {
        var $$typeof = Component.$$typeof;

        if ($$typeof === REACT_FORWARD_REF_TYPE) {
          return ForwardRef;
        }

        if ($$typeof === REACT_MEMO_TYPE) {
          return MemoComponent;
        }
      }

      return IndeterminateComponent;
    } // This is used to create an alternate fiber to do work on.


    function createWorkInProgress(current, pendingProps, expirationTime) {
      var workInProgress = current.alternate;

      if (workInProgress === null) {
        // We use a double buffering pooling technique because we know that we'll
        // only ever need at most two versions of a tree. We pool the "other" unused
        // node that we're free to reuse. This is lazily created to avoid allocating
        // extra objects for things that are never updated. It also allow us to
        // reclaim the extra memory if needed.
        workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);
        workInProgress.elementType = current.elementType;
        workInProgress.type = current.type;
        workInProgress.stateNode = current.stateNode;
        {
          // DEV-only fields
          workInProgress._debugID = current._debugID;
          workInProgress._debugSource = current._debugSource;
          workInProgress._debugOwner = current._debugOwner;
          workInProgress._debugHookTypes = current._debugHookTypes;
        }
        workInProgress.alternate = current;
        current.alternate = workInProgress;
      } else {
        workInProgress.pendingProps = pendingProps; // We already have an alternate.
        // Reset the effect tag.

        workInProgress.effectTag = NoEffect; // The effect list is no longer valid.

        workInProgress.nextEffect = null;
        workInProgress.firstEffect = null;
        workInProgress.lastEffect = null;

        if (enableProfilerTimer) {
          // We intentionally reset, rather than copy, actualDuration & actualStartTime.
          // This prevents time from endlessly accumulating in new commits.
          // This has the downside of resetting values for different priority renders,
          // But works for yielding (the common case) and should support resuming.
          workInProgress.actualDuration = 0;
          workInProgress.actualStartTime = -1;
        }
      }

      workInProgress.childExpirationTime = current.childExpirationTime;
      workInProgress.expirationTime = current.expirationTime;
      workInProgress.child = current.child;
      workInProgress.memoizedProps = current.memoizedProps;
      workInProgress.memoizedState = current.memoizedState;
      workInProgress.updateQueue = current.updateQueue; // Clone the dependencies object. This is mutated during the render phase, so
      // it cannot be shared with the current fiber.

      var currentDependencies = current.dependencies;
      workInProgress.dependencies = currentDependencies === null ? null : {
        expirationTime: currentDependencies.expirationTime,
        firstContext: currentDependencies.firstContext,
        responders: currentDependencies.responders
      }; // These will be overridden during the parent's reconciliation

      workInProgress.sibling = current.sibling;
      workInProgress.index = current.index;
      workInProgress.ref = current.ref;

      if (enableProfilerTimer) {
        workInProgress.selfBaseDuration = current.selfBaseDuration;
        workInProgress.treeBaseDuration = current.treeBaseDuration;
      }

      {
        workInProgress._debugNeedsRemount = current._debugNeedsRemount;

        switch (workInProgress.tag) {
          case IndeterminateComponent:
          case FunctionComponent:
          case SimpleMemoComponent:
            workInProgress.type = resolveFunctionForHotReloading(current.type);
            break;

          case ClassComponent:
            workInProgress.type = resolveClassForHotReloading(current.type);
            break;

          case ForwardRef:
            workInProgress.type = resolveForwardRefForHotReloading(current.type);
            break;

          default:
            break;
        }
      }
      return workInProgress;
    } // Used to reuse a Fiber for a second pass.


    function resetWorkInProgress(workInProgress, renderExpirationTime) {
      // This resets the Fiber to what createFiber or createWorkInProgress would
      // have set the values to before during the first pass. Ideally this wouldn't
      // be necessary but unfortunately many code paths reads from the workInProgress
      // when they should be reading from current and writing to workInProgress.
      // We assume pendingProps, index, key, ref, return are still untouched to
      // avoid doing another reconciliation.
      // Reset the effect tag but keep any Placement tags, since that's something
      // that child fiber is setting, not the reconciliation.
      workInProgress.effectTag &= Placement; // The effect list is no longer valid.

      workInProgress.nextEffect = null;
      workInProgress.firstEffect = null;
      workInProgress.lastEffect = null;
      var current = workInProgress.alternate;

      if (current === null) {
        // Reset to createFiber's initial values.
        workInProgress.childExpirationTime = NoWork;
        workInProgress.expirationTime = renderExpirationTime;
        workInProgress.child = null;
        workInProgress.memoizedProps = null;
        workInProgress.memoizedState = null;
        workInProgress.updateQueue = null;
        workInProgress.dependencies = null;

        if (enableProfilerTimer) {
          // Note: We don't reset the actualTime counts. It's useful to accumulate
          // actual time across multiple render passes.
          workInProgress.selfBaseDuration = 0;
          workInProgress.treeBaseDuration = 0;
        }
      } else {
        // Reset to the cloned values that createWorkInProgress would've.
        workInProgress.childExpirationTime = current.childExpirationTime;
        workInProgress.expirationTime = current.expirationTime;
        workInProgress.child = current.child;
        workInProgress.memoizedProps = current.memoizedProps;
        workInProgress.memoizedState = current.memoizedState;
        workInProgress.updateQueue = current.updateQueue; // Clone the dependencies object. This is mutated during the render phase, so
        // it cannot be shared with the current fiber.

        var currentDependencies = current.dependencies;
        workInProgress.dependencies = currentDependencies === null ? null : {
          expirationTime: currentDependencies.expirationTime,
          firstContext: currentDependencies.firstContext,
          responders: currentDependencies.responders
        };

        if (enableProfilerTimer) {
          // Note: We don't reset the actualTime counts. It's useful to accumulate
          // actual time across multiple render passes.
          workInProgress.selfBaseDuration = current.selfBaseDuration;
          workInProgress.treeBaseDuration = current.treeBaseDuration;
        }
      }

      return workInProgress;
    }

    function createHostRootFiber(tag) {
      var mode;

      if (tag === ConcurrentRoot) {
        mode = ConcurrentMode | BatchedMode | StrictMode;
      } else if (tag === BatchedRoot) {
        mode = BatchedMode | StrictMode;
      } else {
        mode = NoMode;
      }

      if (enableProfilerTimer && isDevToolsPresent) {
        // Always collect profile timings when DevTools are present.
        // This enables DevTools to start capturing timing at any point–
        // Without some nodes in the tree having empty base times.
        mode |= ProfileMode;
      }

      return createFiber(HostRoot, null, null, mode);
    }

    function createFiberFromTypeAndProps(type, // React$ElementType
    key, pendingProps, owner, mode, expirationTime) {
      var fiber;
      var fiberTag = IndeterminateComponent; // The resolved type is set if we know what the final type will be. I.e. it's not lazy.

      var resolvedType = type;

      if (typeof type === 'function') {
        if (shouldConstruct(type)) {
          fiberTag = ClassComponent;
          {
            resolvedType = resolveClassForHotReloading(resolvedType);
          }
        } else {
          {
            resolvedType = resolveFunctionForHotReloading(resolvedType);
          }
        }
      } else if (typeof type === 'string') {
        fiberTag = HostComponent;
      } else {
        getTag: switch (type) {
          case REACT_FRAGMENT_TYPE:
            return createFiberFromFragment(pendingProps.children, mode, expirationTime, key);

          case REACT_CONCURRENT_MODE_TYPE:
            fiberTag = Mode;
            mode |= ConcurrentMode | BatchedMode | StrictMode;
            break;

          case REACT_STRICT_MODE_TYPE:
            fiberTag = Mode;
            mode |= StrictMode;
            break;

          case REACT_PROFILER_TYPE:
            return createFiberFromProfiler(pendingProps, mode, expirationTime, key);

          case REACT_SUSPENSE_TYPE:
            return createFiberFromSuspense(pendingProps, mode, expirationTime, key);

          case REACT_SUSPENSE_LIST_TYPE:
            return createFiberFromSuspenseList(pendingProps, mode, expirationTime, key);

          default:
            {
              if (typeof type === 'object' && type !== null) {
                switch (type.$$typeof) {
                  case REACT_PROVIDER_TYPE:
                    fiberTag = ContextProvider;
                    break getTag;

                  case REACT_CONTEXT_TYPE:
                    // This is a consumer
                    fiberTag = ContextConsumer;
                    break getTag;

                  case REACT_FORWARD_REF_TYPE:
                    fiberTag = ForwardRef;
                    {
                      resolvedType = resolveForwardRefForHotReloading(resolvedType);
                    }
                    break getTag;

                  case REACT_MEMO_TYPE:
                    fiberTag = MemoComponent;
                    break getTag;

                  case REACT_LAZY_TYPE:
                    fiberTag = LazyComponent;
                    resolvedType = null;
                    break getTag;

                  case REACT_FUNDAMENTAL_TYPE:
                    if (enableFundamentalAPI) {
                      return createFiberFromFundamental(type, pendingProps, mode, expirationTime, key);
                    }

                    break;

                  case REACT_SCOPE_TYPE:
                    if (enableScopeAPI) {
                      return createFiberFromScope(type, pendingProps, mode, expirationTime, key);
                    }

                }
              }

              var info = '';
              {
                if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
                  info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and " + 'named imports.';
                }

                var ownerName = owner ? getComponentName(owner.type) : null;

                if (ownerName) {
                  info += '\n\nCheck the render method of `' + ownerName + '`.';
                }
              }

              (function () {
                {
                  {
                    throw ReactError(Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (type == null ? type : typeof type) + "." + info));
                  }
                }
              })();
            }
        }
      }

      fiber = createFiber(fiberTag, pendingProps, key, mode);
      fiber.elementType = type;
      fiber.type = resolvedType;
      fiber.expirationTime = expirationTime;
      return fiber;
    }

    function createFiberFromElement(element, mode, expirationTime) {
      var owner = null;
      {
        owner = element._owner;
      }
      var type = element.type;
      var key = element.key;
      var pendingProps = element.props;
      var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, expirationTime);
      {
        fiber._debugSource = element._source;
        fiber._debugOwner = element._owner;
      }
      return fiber;
    }

    function createFiberFromFragment(elements, mode, expirationTime, key) {
      var fiber = createFiber(Fragment, elements, key, mode);
      fiber.expirationTime = expirationTime;
      return fiber;
    }

    function createFiberFromFundamental(fundamentalComponent, pendingProps, mode, expirationTime, key) {
      var fiber = createFiber(FundamentalComponent, pendingProps, key, mode);
      fiber.elementType = fundamentalComponent;
      fiber.type = fundamentalComponent;
      fiber.expirationTime = expirationTime;
      return fiber;
    }

    function createFiberFromScope(scope, pendingProps, mode, expirationTime, key) {
      var fiber = createFiber(ScopeComponent, pendingProps, key, mode);
      fiber.type = scope;
      fiber.elementType = scope;
      fiber.expirationTime = expirationTime;
      return fiber;
    }

    function createFiberFromProfiler(pendingProps, mode, expirationTime, key) {
      {
        if (typeof pendingProps.id !== 'string' || typeof pendingProps.onRender !== 'function') {
          warningWithoutStack$1(false, 'Profiler must specify an "id" string and "onRender" function as props');
        }
      }
      var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode); // TODO: The Profiler fiber shouldn't have a type. It has a tag.

      fiber.elementType = REACT_PROFILER_TYPE;
      fiber.type = REACT_PROFILER_TYPE;
      fiber.expirationTime = expirationTime;
      return fiber;
    }

    function createFiberFromSuspense(pendingProps, mode, expirationTime, key) {
      var fiber = createFiber(SuspenseComponent, pendingProps, key, mode); // TODO: The SuspenseComponent fiber shouldn't have a type. It has a tag.
      // This needs to be fixed in getComponentName so that it relies on the tag
      // instead.

      fiber.type = REACT_SUSPENSE_TYPE;
      fiber.elementType = REACT_SUSPENSE_TYPE;
      fiber.expirationTime = expirationTime;
      return fiber;
    }

    function createFiberFromSuspenseList(pendingProps, mode, expirationTime, key) {
      var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);
      {
        // TODO: The SuspenseListComponent fiber shouldn't have a type. It has a tag.
        // This needs to be fixed in getComponentName so that it relies on the tag
        // instead.
        fiber.type = REACT_SUSPENSE_LIST_TYPE;
      }
      fiber.elementType = REACT_SUSPENSE_LIST_TYPE;
      fiber.expirationTime = expirationTime;
      return fiber;
    }

    function createFiberFromText(content, mode, expirationTime) {
      var fiber = createFiber(HostText, content, null, mode);
      fiber.expirationTime = expirationTime;
      return fiber;
    }

    function createFiberFromHostInstanceForDeletion() {
      var fiber = createFiber(HostComponent, null, null, NoMode); // TODO: These should not need a type.

      fiber.elementType = 'DELETED';
      fiber.type = 'DELETED';
      return fiber;
    }

    function createFiberFromDehydratedFragment(dehydratedNode) {
      var fiber = createFiber(DehydratedFragment, null, null, NoMode);
      fiber.stateNode = dehydratedNode;
      return fiber;
    }

    function createFiberFromPortal(portal, mode, expirationTime) {
      var pendingProps = portal.children !== null ? portal.children : [];
      var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
      fiber.expirationTime = expirationTime;
      fiber.stateNode = {
        containerInfo: portal.containerInfo,
        pendingChildren: null,
        // Used by persistent updates
        implementation: portal.implementation
      };
      return fiber;
    } // Used for stashing WIP properties to replay failed work in DEV.


    function assignFiberPropertiesInDEV(target, source) {
      if (target === null) {
        // This Fiber's initial properties will always be overwritten.
        // We only use a Fiber to ensure the same hidden class so DEV isn't slow.
        target = createFiber(IndeterminateComponent, null, null, NoMode);
      } // This is intentionally written as a list of all properties.
      // We tried to use Object.assign() instead but this is called in
      // the hottest path, and Object.assign() was too slow:
      // https://github.com/facebook/react/issues/12502
      // This code is DEV-only so size is not a concern.


      target.tag = source.tag;
      target.key = source.key;
      target.elementType = source.elementType;
      target.type = source.type;
      target.stateNode = source.stateNode;
      target.return = source.return;
      target.child = source.child;
      target.sibling = source.sibling;
      target.index = source.index;
      target.ref = source.ref;
      target.pendingProps = source.pendingProps;
      target.memoizedProps = source.memoizedProps;
      target.updateQueue = source.updateQueue;
      target.memoizedState = source.memoizedState;
      target.dependencies = source.dependencies;
      target.mode = source.mode;
      target.effectTag = source.effectTag;
      target.nextEffect = source.nextEffect;
      target.firstEffect = source.firstEffect;
      target.lastEffect = source.lastEffect;
      target.expirationTime = source.expirationTime;
      target.childExpirationTime = source.childExpirationTime;
      target.alternate = source.alternate;

      if (enableProfilerTimer) {
        target.actualDuration = source.actualDuration;
        target.actualStartTime = source.actualStartTime;
        target.selfBaseDuration = source.selfBaseDuration;
        target.treeBaseDuration = source.treeBaseDuration;
      }

      target._debugID = source._debugID;
      target._debugSource = source._debugSource;
      target._debugOwner = source._debugOwner;
      target._debugIsCurrentlyTiming = source._debugIsCurrentlyTiming;
      target._debugNeedsRemount = source._debugNeedsRemount;
      target._debugHookTypes = source._debugHookTypes;
      return target;
    }

    function FiberRootNode(containerInfo, tag, hydrate) {
      this.tag = tag;
      this.current = null;
      this.containerInfo = containerInfo;
      this.pendingChildren = null;
      this.pingCache = null;
      this.finishedExpirationTime = NoWork;
      this.finishedWork = null;
      this.timeoutHandle = noTimeout;
      this.context = null;
      this.pendingContext = null;
      this.hydrate = hydrate;
      this.firstBatch = null;
      this.callbackNode = null;
      this.callbackPriority = NoPriority;
      this.firstPendingTime = NoWork;
      this.firstSuspendedTime = NoWork;
      this.lastSuspendedTime = NoWork;
      this.nextKnownPendingLevel = NoWork;
      this.lastPingedTime = NoWork;
      this.lastExpiredTime = NoWork;

      if (enableSchedulerTracing) {
        this.interactionThreadID = tracing.unstable_getThreadID();
        this.memoizedInteractions = new Set();
        this.pendingInteractionMap = new Map();
      }

      if (enableSuspenseCallback) {
        this.hydrationCallbacks = null;
      }
    }

    function createFiberRoot(containerInfo, tag, hydrate, hydrationCallbacks) {
      var root = new FiberRootNode(containerInfo, tag, hydrate);

      if (enableSuspenseCallback) {
        root.hydrationCallbacks = hydrationCallbacks;
      } // Cyclic construction. This cheats the type system right now because
      // stateNode is any.


      var uninitializedFiber = createHostRootFiber(tag);
      root.current = uninitializedFiber;
      uninitializedFiber.stateNode = root;
      return root;
    }

    function isRootSuspendedAtTime(root, expirationTime) {
      var firstSuspendedTime = root.firstSuspendedTime;
      var lastSuspendedTime = root.lastSuspendedTime;
      return firstSuspendedTime !== NoWork && firstSuspendedTime >= expirationTime && lastSuspendedTime <= expirationTime;
    }

    function markRootSuspendedAtTime(root, expirationTime) {
      var firstSuspendedTime = root.firstSuspendedTime;
      var lastSuspendedTime = root.lastSuspendedTime;

      if (firstSuspendedTime < expirationTime) {
        root.firstSuspendedTime = expirationTime;
      }

      if (lastSuspendedTime > expirationTime || firstSuspendedTime === NoWork) {
        root.lastSuspendedTime = expirationTime;
      }

      if (expirationTime <= root.lastPingedTime) {
        root.lastPingedTime = NoWork;
      }

      if (expirationTime <= root.lastExpiredTime) {
        root.lastExpiredTime = NoWork;
      }
    }

    function markRootUpdatedAtTime(root, expirationTime) {
      // Update the range of pending times
      var firstPendingTime = root.firstPendingTime;

      if (expirationTime > firstPendingTime) {
        root.firstPendingTime = expirationTime;
      } // Update the range of suspended times. Treat everything lower priority or
      // equal to this update as unsuspended.


      var firstSuspendedTime = root.firstSuspendedTime;

      if (firstSuspendedTime !== NoWork) {
        if (expirationTime >= firstSuspendedTime) {
          // The entire suspended range is now unsuspended.
          root.firstSuspendedTime = root.lastSuspendedTime = root.nextKnownPendingLevel = NoWork;
        } else if (expirationTime >= root.lastSuspendedTime) {
          root.lastSuspendedTime = expirationTime + 1;
        } // This is a pending level. Check if it's higher priority than the next
        // known pending level.


        if (expirationTime > root.nextKnownPendingLevel) {
          root.nextKnownPendingLevel = expirationTime;
        }
      }
    }

    function markRootFinishedAtTime(root, finishedExpirationTime, remainingExpirationTime) {
      // Update the range of pending times
      root.firstPendingTime = remainingExpirationTime; // Update the range of suspended times. Treat everything higher priority or
      // equal to this update as unsuspended.

      if (finishedExpirationTime <= root.lastSuspendedTime) {
        // The entire suspended range is now unsuspended.
        root.firstSuspendedTime = root.lastSuspendedTime = root.nextKnownPendingLevel = NoWork;
      } else if (finishedExpirationTime <= root.firstSuspendedTime) {
        // Part of the suspended range is now unsuspended. Narrow the range to
        // include everything between the unsuspended time (non-inclusive) and the
        // last suspended time.
        root.firstSuspendedTime = finishedExpirationTime - 1;
      }

      if (finishedExpirationTime <= root.lastPingedTime) {
        // Clear the pinged time
        root.lastPingedTime = NoWork;
      }

      if (finishedExpirationTime <= root.lastExpiredTime) {
        // Clear the expired time
        root.lastExpiredTime = NoWork;
      }
    }

    function markRootExpiredAtTime(root, expirationTime) {
      var lastExpiredTime = root.lastExpiredTime;

      if (lastExpiredTime === NoWork || lastExpiredTime > expirationTime) {
        root.lastExpiredTime = expirationTime;
      }
    } // This lets us hook into Fiber to debug what it's doing.
    // See https://github.com/facebook/react/pull/8033.
    // This is not part of the public API, not even for React DevTools.
    // You may only inject a debugTool if you work on React Fiber itself.


    var ReactFiberInstrumentation = {
      debugTool: null
    };
    var ReactFiberInstrumentation_1 = ReactFiberInstrumentation;
    var didWarnAboutNestedUpdates;
    var didWarnAboutFindNodeInStrictMode;
    {
      didWarnAboutNestedUpdates = false;
      didWarnAboutFindNodeInStrictMode = {};
    }

    function getContextForSubtree(parentComponent) {
      if (!parentComponent) {
        return emptyContextObject;
      }

      var fiber = get(parentComponent);
      var parentContext = findCurrentUnmaskedContext(fiber);

      if (fiber.tag === ClassComponent) {
        var Component = fiber.type;

        if (isContextProvider(Component)) {
          return processChildContext(fiber, Component, parentContext);
        }
      }

      return parentContext;
    }

    function scheduleRootUpdate(current$$1, element, expirationTime, suspenseConfig, callback) {
      {
        if (phase === 'render' && current !== null && !didWarnAboutNestedUpdates) {
          didWarnAboutNestedUpdates = true;
          warningWithoutStack$1(false, 'Render methods should be a pure function of props and state; ' + 'triggering nested component updates from render is not allowed. ' + 'If necessary, trigger nested updates in componentDidUpdate.\n\n' + 'Check the render method of %s.', getComponentName(current.type) || 'Unknown');
        }
      }
      var update = createUpdate(expirationTime, suspenseConfig); // Caution: React DevTools currently depends on this property
      // being called "element".

      update.payload = {
        element: element
      };
      callback = callback === undefined ? null : callback;

      if (callback !== null) {
        !(typeof callback === 'function') ? warningWithoutStack$1(false, 'render(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callback) : void 0;
        update.callback = callback;
      }

      enqueueUpdate(current$$1, update);
      scheduleWork(current$$1, expirationTime);
      return expirationTime;
    }

    function updateContainerAtExpirationTime(element, container, parentComponent, expirationTime, suspenseConfig, callback) {
      // TODO: If this is a nested container, this won't be the root.
      var current$$1 = container.current;
      {
        if (ReactFiberInstrumentation_1.debugTool) {
          if (current$$1.alternate === null) {
            ReactFiberInstrumentation_1.debugTool.onMountContainer(container);
          } else if (element === null) {
            ReactFiberInstrumentation_1.debugTool.onUnmountContainer(container);
          } else {
            ReactFiberInstrumentation_1.debugTool.onUpdateContainer(container);
          }
        }
      }
      var context = getContextForSubtree(parentComponent);

      if (container.context === null) {
        container.context = context;
      } else {
        container.pendingContext = context;
      }

      return scheduleRootUpdate(current$$1, element, expirationTime, suspenseConfig, callback);
    }

    function findHostInstance(component) {
      var fiber = get(component);

      if (fiber === undefined) {
        if (typeof component.render === 'function') {
          (function () {
            {
              {
                throw ReactError(Error("Unable to find node on an unmounted component."));
              }
            }
          })();
        } else {
          (function () {
            {
              {
                throw ReactError(Error("Argument appears to not be a ReactComponent. Keys: " + Object.keys(component)));
              }
            }
          })();
        }
      }

      var hostFiber = findCurrentHostFiber(fiber);

      if (hostFiber === null) {
        return null;
      }

      return hostFiber.stateNode;
    }

    function findHostInstanceWithWarning(component, methodName) {
      {
        var fiber = get(component);

        if (fiber === undefined) {
          if (typeof component.render === 'function') {
            (function () {
              {
                {
                  throw ReactError(Error("Unable to find node on an unmounted component."));
                }
              }
            })();
          } else {
            (function () {
              {
                {
                  throw ReactError(Error("Argument appears to not be a ReactComponent. Keys: " + Object.keys(component)));
                }
              }
            })();
          }
        }

        var hostFiber = findCurrentHostFiber(fiber);

        if (hostFiber === null) {
          return null;
        }

        if (hostFiber.mode & StrictMode) {
          var componentName = getComponentName(fiber.type) || 'Component';

          if (!didWarnAboutFindNodeInStrictMode[componentName]) {
            didWarnAboutFindNodeInStrictMode[componentName] = true;

            if (fiber.mode & StrictMode) {
              warningWithoutStack$1(false, '%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which is inside StrictMode. ' + 'Instead, add a ref directly to the element you want to reference. ' + 'Learn more about using refs safely here: ' + 'https://fb.me/react-strict-mode-find-node%s', methodName, methodName, componentName, getStackByFiberInDevAndProd(hostFiber));
            } else {
              warningWithoutStack$1(false, '%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which renders StrictMode children. ' + 'Instead, add a ref directly to the element you want to reference. ' + 'Learn more about using refs safely here: ' + 'https://fb.me/react-strict-mode-find-node%s', methodName, methodName, componentName, getStackByFiberInDevAndProd(hostFiber));
            }
          }
        }

        return hostFiber.stateNode;
      }
      return findHostInstance(component);
    }

    function createContainer(containerInfo, tag, hydrate, hydrationCallbacks) {
      return createFiberRoot(containerInfo, tag, hydrate, hydrationCallbacks);
    }

    function updateContainer(element, container, parentComponent, callback) {
      var current$$1 = container.current;
      var currentTime = requestCurrentTime();
      {
        // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
        if ('undefined' !== typeof jest) {
          warnIfUnmockedScheduler(current$$1);
          warnIfNotScopedWithMatchingAct(current$$1);
        }
      }
      var suspenseConfig = requestCurrentSuspenseConfig();
      var expirationTime = computeExpirationForFiber(currentTime, current$$1, suspenseConfig);
      return updateContainerAtExpirationTime(element, container, parentComponent, expirationTime, suspenseConfig, callback);
    }

    function getPublicRootInstance(container) {
      var containerFiber = container.current;

      if (!containerFiber.child) {
        return null;
      }

      switch (containerFiber.child.tag) {
        case HostComponent:
          return getPublicInstance(containerFiber.child.stateNode);

        default:
          return containerFiber.child.stateNode;
      }
    }

    function attemptSynchronousHydration$1(fiber) {
      switch (fiber.tag) {
        case HostRoot:
          var root = fiber.stateNode;

          if (root.hydrate) {
            // Flush the first scheduled "update".
            flushRoot(root, root.firstPendingTime);
          }

          break;

        case SuspenseComponent:
          flushSync(function () {
            return scheduleWork(fiber, Sync);
          });
          break;
      }
    }

    function findHostInstanceWithNoPortals(fiber) {
      var hostFiber = findCurrentHostFiberWithNoPortals(fiber);

      if (hostFiber === null) {
        return null;
      }

      if (hostFiber.tag === FundamentalComponent) {
        return hostFiber.stateNode.instance;
      }

      return hostFiber.stateNode;
    }

    var shouldSuspendImpl = function (fiber) {
      return false;
    };

    function shouldSuspend(fiber) {
      return shouldSuspendImpl(fiber);
    }

    var overrideHookState = null;
    var overrideProps = null;
    var scheduleUpdate = null;
    var setSuspenseHandler = null;
    {
      var copyWithSetImpl = function (obj, path, idx, value) {
        if (idx >= path.length) {
          return value;
        }

        var key = path[idx];
        var updated = Array.isArray(obj) ? obj.slice() : _assign({}, obj); // $FlowFixMe number or string is fine here

        updated[key] = copyWithSetImpl(obj[key], path, idx + 1, value);
        return updated;
      };

      var copyWithSet = function (obj, path, value) {
        return copyWithSetImpl(obj, path, 0, value);
      }; // Support DevTools editable values for useState and useReducer.


      overrideHookState = function (fiber, id, path, value) {
        // For now, the "id" of stateful hooks is just the stateful hook index.
        // This may change in the future with e.g. nested hooks.
        var currentHook = fiber.memoizedState;

        while (currentHook !== null && id > 0) {
          currentHook = currentHook.next;
          id--;
        }

        if (currentHook !== null) {
          var newState = copyWithSet(currentHook.memoizedState, path, value);
          currentHook.memoizedState = newState;
          currentHook.baseState = newState; // We aren't actually adding an update to the queue,
          // because there is no update we can add for useReducer hooks that won't trigger an error.
          // (There's no appropriate action type for DevTools overrides.)
          // As a result though, React will see the scheduled update as a noop and bailout.
          // Shallow cloning props works as a workaround for now to bypass the bailout check.

          fiber.memoizedProps = _assign({}, fiber.memoizedProps);
          scheduleWork(fiber, Sync);
        }
      }; // Support DevTools props for function components, forwardRef, memo, host components, etc.


      overrideProps = function (fiber, path, value) {
        fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);

        if (fiber.alternate) {
          fiber.alternate.pendingProps = fiber.pendingProps;
        }

        scheduleWork(fiber, Sync);
      };

      scheduleUpdate = function (fiber) {
        scheduleWork(fiber, Sync);
      };

      setSuspenseHandler = function (newShouldSuspendImpl) {
        shouldSuspendImpl = newShouldSuspendImpl;
      };
    }

    function injectIntoDevTools(devToolsConfig) {
      var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
      var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
      return injectInternals(_assign({}, devToolsConfig, {
        overrideHookState: overrideHookState,
        overrideProps: overrideProps,
        setSuspenseHandler: setSuspenseHandler,
        scheduleUpdate: scheduleUpdate,
        currentDispatcherRef: ReactCurrentDispatcher,
        findHostInstanceByFiber: function (fiber) {
          var hostFiber = findCurrentHostFiber(fiber);

          if (hostFiber === null) {
            return null;
          }

          return hostFiber.stateNode;
        },
        findFiberByHostInstance: function (instance) {
          if (!findFiberByHostInstance) {
            // Might not be implemented by the renderer.
            return null;
          }

          return findFiberByHostInstance(instance);
        },
        // React Refresh
        findHostInstancesForRefresh: findHostInstancesForRefresh,
        scheduleRefresh: scheduleRefresh,
        scheduleRoot: scheduleRoot,
        setRefreshHandler: setRefreshHandler,
        // Enables DevTools to append owner stacks to error messages in DEV mode.
        getCurrentFiber: function () {
          return current;
        }
      }));
    } // This file intentionally does *not* have the Flow annotation.
    // Don't add it. See `./inline-typed.js` for an explanation.


    function createPortal$1(children, containerInfo, // TODO: figure out the API for cross-renderer implementation.
    implementation) {
      var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
      return {
        // This tag allow us to uniquely identify this as a React Portal
        $$typeof: REACT_PORTAL_TYPE,
        key: key == null ? null : '' + key,
        children: children,
        containerInfo: containerInfo,
        implementation: implementation
      };
    } // TODO: this is special because it gets imported during build.


    var ReactVersion = '16.10.2'; // TODO: This type is shared between the reconciler and ReactDOM, but will
    // eventually be lifted out to the renderer.

    setAttemptSynchronousHydration(attemptSynchronousHydration$1);
    var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
    var topLevelUpdateWarnings;
    var warnOnInvalidCallback;
    var didWarnAboutUnstableCreatePortal = false;
    {
      if (typeof Map !== 'function' || // $FlowIssue Flow incorrectly thinks Map has no prototype
      Map.prototype == null || typeof Map.prototype.forEach !== 'function' || typeof Set !== 'function' || // $FlowIssue Flow incorrectly thinks Set has no prototype
      Set.prototype == null || typeof Set.prototype.clear !== 'function' || typeof Set.prototype.forEach !== 'function') {
        warningWithoutStack$1(false, 'React depends on Map and Set built-in types. Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
      }

      topLevelUpdateWarnings = function (container) {
        if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
          var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer._internalRoot.current);

          if (hostInstance) {
            !(hostInstance.parentNode === container) ? warningWithoutStack$1(false, 'render(...): It looks like the React-rendered content of this ' + 'container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + 'ReactDOM.unmountComponentAtNode to empty a container.') : void 0;
          }
        }

        var isRootRenderedBySomeReact = !!container._reactRootContainer;
        var rootEl = getReactRootElementInContainer(container);
        var hasNonRootReactChild = !!(rootEl && getInstanceFromNode$1(rootEl));
        !(!hasNonRootReactChild || isRootRenderedBySomeReact) ? warningWithoutStack$1(false, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;
        !(container.nodeType !== ELEMENT_NODE || !container.tagName || container.tagName.toUpperCase() !== 'BODY') ? warningWithoutStack$1(false, 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;
      };

      warnOnInvalidCallback = function (callback, callerName) {
        !(callback === null || typeof callback === 'function') ? warningWithoutStack$1(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback) : void 0;
      };
    }
    setRestoreImplementation(restoreControlledState$$1);

    function ReactBatch(root) {
      var expirationTime = computeUniqueAsyncExpiration();
      this._expirationTime = expirationTime;
      this._root = root;
      this._next = null;
      this._callbacks = null;
      this._didComplete = false;
      this._hasChildren = false;
      this._children = null;
      this._defer = true;
    }

    ReactBatch.prototype.render = function (children) {
      var _this = this;

      (function () {
        if (!_this._defer) {
          {
            throw ReactError(Error("batch.render: Cannot render a batch that already committed."));
          }
        }
      })();

      this._hasChildren = true;
      this._children = children;
      var internalRoot = this._root._internalRoot;
      var expirationTime = this._expirationTime;
      var work = new ReactWork();
      updateContainerAtExpirationTime(children, internalRoot, null, expirationTime, null, work._onCommit);
      return work;
    };

    ReactBatch.prototype.then = function (onComplete) {
      if (this._didComplete) {
        onComplete();
        return;
      }

      var callbacks = this._callbacks;

      if (callbacks === null) {
        callbacks = this._callbacks = [];
      }

      callbacks.push(onComplete);
    };

    ReactBatch.prototype.commit = function () {
      var _this2 = this;

      var internalRoot = this._root._internalRoot;
      var firstBatch = internalRoot.firstBatch;

      (function () {
        if (!(_this2._defer && firstBatch !== null)) {
          {
            throw ReactError(Error("batch.commit: Cannot commit a batch multiple times."));
          }
        }
      })();

      if (!this._hasChildren) {
        // This batch is empty. Return.
        this._next = null;
        this._defer = false;
        return;
      }

      var expirationTime = this._expirationTime; // Ensure this is the first batch in the list.

      if (firstBatch !== this) {
        // This batch is not the earliest batch. We need to move it to the front.
        // Update its expiration time to be the expiration time of the earliest
        // batch, so that we can flush it without flushing the other batches.
        if (this._hasChildren) {
          expirationTime = this._expirationTime = firstBatch._expirationTime; // Rendering this batch again ensures its children will be the final state
          // when we flush (updates are processed in insertion order: last
          // update wins).
          // TODO: This forces a restart. Should we print a warning?

          this.render(this._children);
        } // Remove the batch from the list.


        var previous = null;
        var batch = firstBatch;

        while (batch !== this) {
          previous = batch;
          batch = batch._next;
        }

        (function () {
          if (!(previous !== null)) {
            {
              throw ReactError(Error("batch.commit: Cannot commit a batch multiple times."));
            }
          }
        })();

        previous._next = batch._next; // Add it to the front.

        this._next = firstBatch;
        firstBatch = internalRoot.firstBatch = this;
      } // Synchronously flush all the work up to this batch's expiration time.


      this._defer = false;
      flushRoot(internalRoot, expirationTime); // Pop the batch from the list.

      var next = this._next;
      this._next = null;
      firstBatch = internalRoot.firstBatch = next; // Append the next earliest batch's children to the update queue.

      if (firstBatch !== null && firstBatch._hasChildren) {
        firstBatch.render(firstBatch._children);
      }
    };

    ReactBatch.prototype._onComplete = function () {
      if (this._didComplete) {
        return;
      }

      this._didComplete = true;
      var callbacks = this._callbacks;

      if (callbacks === null) {
        return;
      } // TODO: Error handling.


      for (var i = 0; i < callbacks.length; i++) {
        var _callback = callbacks[i];

        _callback();
      }
    };

    function ReactWork() {
      this._callbacks = null;
      this._didCommit = false; // TODO: Avoid need to bind by replacing callbacks in the update queue with
      // list of Work objects.

      this._onCommit = this._onCommit.bind(this);
    }

    ReactWork.prototype.then = function (onCommit) {
      if (this._didCommit) {
        onCommit();
        return;
      }

      var callbacks = this._callbacks;

      if (callbacks === null) {
        callbacks = this._callbacks = [];
      }

      callbacks.push(onCommit);
    };

    ReactWork.prototype._onCommit = function () {
      if (this._didCommit) {
        return;
      }

      this._didCommit = true;
      var callbacks = this._callbacks;

      if (callbacks === null) {
        return;
      } // TODO: Error handling.


      for (var i = 0; i < callbacks.length; i++) {
        var _callback2 = callbacks[i];

        (function () {
          if (!(typeof _callback2 === 'function')) {
            {
              throw ReactError(Error("Invalid argument passed as callback. Expected a function. Instead received: " + _callback2));
            }
          }
        })();

        _callback2();
      }
    };

    function createRootImpl(container, tag, options) {
      // Tag is either LegacyRoot or Concurrent Root
      var hydrate = options != null && options.hydrate === true;
      var hydrationCallbacks = options != null && options.hydrationOptions || null;
      var root = createContainer(container, tag, hydrate, hydrationCallbacks);
      markContainerAsRoot(root.current, container);

      if (hydrate && tag !== LegacyRoot) {
        var doc = container.nodeType === DOCUMENT_NODE ? container : container.ownerDocument;
        eagerlyTrapReplayableEvents(doc);
      }

      return root;
    }

    function ReactSyncRoot(container, tag, options) {
      this._internalRoot = createRootImpl(container, tag, options);
    }

    function ReactRoot(container, options) {
      this._internalRoot = createRootImpl(container, ConcurrentRoot, options);
    }

    ReactRoot.prototype.render = ReactSyncRoot.prototype.render = function (children, callback) {
      var root = this._internalRoot;
      var work = new ReactWork();
      callback = callback === undefined ? null : callback;
      {
        warnOnInvalidCallback(callback, 'render');
      }

      if (callback !== null) {
        work.then(callback);
      }

      updateContainer(children, root, null, work._onCommit);
      return work;
    };

    ReactRoot.prototype.unmount = ReactSyncRoot.prototype.unmount = function (callback) {
      var root = this._internalRoot;
      var work = new ReactWork();
      callback = callback === undefined ? null : callback;
      {
        warnOnInvalidCallback(callback, 'render');
      }

      if (callback !== null) {
        work.then(callback);
      }

      updateContainer(null, root, null, work._onCommit);
      return work;
    }; // Sync roots cannot create batches. Only concurrent ones.


    ReactRoot.prototype.createBatch = function () {
      var batch = new ReactBatch(this);
      var expirationTime = batch._expirationTime;
      var internalRoot = this._internalRoot;
      var firstBatch = internalRoot.firstBatch;

      if (firstBatch === null) {
        internalRoot.firstBatch = batch;
        batch._next = null;
      } else {
        // Insert sorted by expiration time then insertion order
        var insertAfter = null;
        var insertBefore = firstBatch;

        while (insertBefore !== null && insertBefore._expirationTime >= expirationTime) {
          insertAfter = insertBefore;
          insertBefore = insertBefore._next;
        }

        batch._next = insertBefore;

        if (insertAfter !== null) {
          insertAfter._next = batch;
        }
      }

      return batch;
    };
    /**
     * True if the supplied DOM node is a valid node element.
     *
     * @param {?DOMElement} node The candidate DOM node.
     * @return {boolean} True if the DOM is a valid DOM node.
     * @internal
     */


    function isValidContainer(node) {
      return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));
    }

    function getReactRootElementInContainer(container) {
      if (!container) {
        return null;
      }

      if (container.nodeType === DOCUMENT_NODE) {
        return container.documentElement;
      } else {
        return container.firstChild;
      }
    }

    function shouldHydrateDueToLegacyHeuristic(container) {
      var rootElement = getReactRootElementInContainer(container);
      return !!(rootElement && rootElement.nodeType === ELEMENT_NODE && rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME));
    }

    setBatchingImplementation(batchedUpdates$1, discreteUpdates$1, flushDiscreteUpdates, batchedEventUpdates$1);
    var warnedAboutHydrateAPI = false;

    function legacyCreateRootFromDOMContainer(container, forceHydrate) {
      var shouldHydrate = forceHydrate || shouldHydrateDueToLegacyHeuristic(container); // First clear any existing content.

      if (!shouldHydrate) {
        var warned = false;
        var rootSibling;

        while (rootSibling = container.lastChild) {
          {
            if (!warned && rootSibling.nodeType === ELEMENT_NODE && rootSibling.hasAttribute(ROOT_ATTRIBUTE_NAME)) {
              warned = true;
              warningWithoutStack$1(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.');
            }
          }
          container.removeChild(rootSibling);
        }
      }

      {
        if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {
          warnedAboutHydrateAPI = true;
          lowPriorityWarningWithoutStack$1(false, 'render(): Calling ReactDOM.render() to hydrate server-rendered markup ' + 'will stop working in React v17. Replace the ReactDOM.render() call ' + 'with ReactDOM.hydrate() if you want React to attach to the server HTML.');
        }
      } // Legacy roots are not batched.

      return new ReactSyncRoot(container, LegacyRoot, shouldHydrate ? {
        hydrate: true
      } : undefined);
    }

    function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
      {
        topLevelUpdateWarnings(container);
        warnOnInvalidCallback(callback === undefined ? null : callback, 'render');
      } // TODO: Without `any` type, Flow says "Property cannot be accessed on any
      // member of intersection type." Whyyyyyy.

      var root = container._reactRootContainer;
      var fiberRoot;

      if (!root) {
        // Initial mount
        root = container._reactRootContainer = legacyCreateRootFromDOMContainer(container, forceHydrate);
        fiberRoot = root._internalRoot;

        if (typeof callback === 'function') {
          var originalCallback = callback;

          callback = function () {
            var instance = getPublicRootInstance(fiberRoot);
            originalCallback.call(instance);
          };
        } // Initial mount should not be batched.


        unbatchedUpdates(function () {
          updateContainer(children, fiberRoot, parentComponent, callback);
        });
      } else {
        fiberRoot = root._internalRoot;

        if (typeof callback === 'function') {
          var _originalCallback = callback;

          callback = function () {
            var instance = getPublicRootInstance(fiberRoot);

            _originalCallback.call(instance);
          };
        } // Update


        updateContainer(children, fiberRoot, parentComponent, callback);
      }

      return getPublicRootInstance(fiberRoot);
    }

    function createPortal$$1(children, container) {
      var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

      (function () {
        if (!isValidContainer(container)) {
          {
            throw ReactError(Error("Target container is not a DOM element."));
          }
        }
      })(); // TODO: pass ReactDOM portal implementation as third argument


      return createPortal$1(children, container, null, key);
    }

    var ReactDOM = {
      createPortal: createPortal$$1,
      findDOMNode: function (componentOrElement) {
        {
          var owner = ReactCurrentOwner.current;

          if (owner !== null && owner.stateNode !== null) {
            var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;
            !warnedAboutRefsInRender ? warningWithoutStack$1(false, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(owner.type) || 'A component') : void 0;
            owner.stateNode._warnedAboutRefsInRender = true;
          }
        }

        if (componentOrElement == null) {
          return null;
        }

        if (componentOrElement.nodeType === ELEMENT_NODE) {
          return componentOrElement;
        }

        {
          return findHostInstanceWithWarning(componentOrElement, 'findDOMNode');
        }
        return findHostInstance(componentOrElement);
      },
      hydrate: function (element, container, callback) {
        (function () {
          if (!isValidContainer(container)) {
            {
              throw ReactError(Error("Target container is not a DOM element."));
            }
          }
        })();

        {
          !!container._reactHasBeenPassedToCreateRootDEV ? warningWithoutStack$1(false, 'You are calling ReactDOM.hydrate() on a container that was previously ' + 'passed to ReactDOM.%s(). This is not supported. ' + 'Did you mean to call createRoot(container, {hydrate: true}).render(element)?', enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot') : void 0;
        } // TODO: throw or warn if we couldn't hydrate?

        return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);
      },
      render: function (element, container, callback) {
        (function () {
          if (!isValidContainer(container)) {
            {
              throw ReactError(Error("Target container is not a DOM element."));
            }
          }
        })();

        {
          !!container._reactHasBeenPassedToCreateRootDEV ? warningWithoutStack$1(false, 'You are calling ReactDOM.render() on a container that was previously ' + 'passed to ReactDOM.%s(). This is not supported. ' + 'Did you mean to call root.render(element)?', enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot') : void 0;
        }
        return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);
      },
      unstable_renderSubtreeIntoContainer: function (parentComponent, element, containerNode, callback) {
        (function () {
          if (!isValidContainer(containerNode)) {
            {
              throw ReactError(Error("Target container is not a DOM element."));
            }
          }
        })();

        (function () {
          if (!(parentComponent != null && has(parentComponent))) {
            {
              throw ReactError(Error("parentComponent must be a valid React Component"));
            }
          }
        })();

        return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
      },
      unmountComponentAtNode: function (container) {
        (function () {
          if (!isValidContainer(container)) {
            {
              throw ReactError(Error("unmountComponentAtNode(...): Target container is not a DOM element."));
            }
          }
        })();

        {
          !!container._reactHasBeenPassedToCreateRootDEV ? warningWithoutStack$1(false, 'You are calling ReactDOM.unmountComponentAtNode() on a container that was previously ' + 'passed to ReactDOM.%s(). This is not supported. Did you mean to call root.unmount()?', enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot') : void 0;
        }

        if (container._reactRootContainer) {
          {
            var rootEl = getReactRootElementInContainer(container);
            var renderedByDifferentReact = rootEl && !getInstanceFromNode$1(rootEl);
            !!renderedByDifferentReact ? warningWithoutStack$1(false, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by another copy of React.') : void 0;
          } // Unmount should not be batched.

          unbatchedUpdates(function () {
            legacyRenderSubtreeIntoContainer(null, null, container, false, function () {
              container._reactRootContainer = null;
            });
          }); // If you call unmountComponentAtNode twice in quick succession, you'll
          // get `true` twice. That's probably fine?

          return true;
        } else {
          {
            var _rootEl = getReactRootElementInContainer(container);

            var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode$1(_rootEl)); // Check if the container itself is a React root node.

            var isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainer(container.parentNode) && !!container.parentNode._reactRootContainer;
            !!hasNonRootReactChild ? warningWithoutStack$1(false, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
          }
          return false;
        }
      },
      // Temporary alias since we already shipped React 16 RC with it.
      // TODO: remove in React 17.
      unstable_createPortal: function () {
        if (!didWarnAboutUnstableCreatePortal) {
          didWarnAboutUnstableCreatePortal = true;
          lowPriorityWarningWithoutStack$1(false, 'The ReactDOM.unstable_createPortal() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactDOM.createPortal() instead. It has the exact same API, ' + 'but without the "unstable_" prefix.');
        }

        return createPortal$$1.apply(void 0, arguments);
      },
      unstable_batchedUpdates: batchedUpdates$1,
      // TODO remove this legacy method, unstable_discreteUpdates replaces it
      unstable_interactiveUpdates: function (fn, a, b, c) {
        flushDiscreteUpdates();
        return discreteUpdates$1(fn, a, b, c);
      },
      unstable_discreteUpdates: discreteUpdates$1,
      unstable_flushDiscreteUpdates: flushDiscreteUpdates,
      flushSync: flushSync,
      unstable_createRoot: createRoot,
      unstable_createSyncRoot: createSyncRoot,
      unstable_flushControlled: flushControlled,
      __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
        // Keep in sync with ReactDOMUnstableNativeDependencies.js
        // ReactTestUtils.js, and ReactTestUtilsAct.js. This is an array for better minification.
        Events: [getInstanceFromNode$1, getNodeFromInstance$1, getFiberCurrentPropsFromNode$1, injection.injectEventPluginsByName, eventNameDispatchConfigs, accumulateTwoPhaseDispatches, accumulateDirectDispatches, enqueueStateRestore, restoreStateIfNeeded, dispatchEvent, runEventsInBatch, flushPassiveEffects, IsThisRendererActing]
      }
    };

    function createRoot(container, options) {
      var functionName = enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot';

      (function () {
        if (!isValidContainer(container)) {
          {
            throw ReactError(Error(functionName + "(...): Target container is not a DOM element."));
          }
        }
      })();

      warnIfReactDOMContainerInDEV(container);
      return new ReactRoot(container, options);
    }

    function createSyncRoot(container, options) {
      var functionName = enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot';

      (function () {
        if (!isValidContainer(container)) {
          {
            throw ReactError(Error(functionName + "(...): Target container is not a DOM element."));
          }
        }
      })();

      warnIfReactDOMContainerInDEV(container);
      return new ReactSyncRoot(container, BatchedRoot, options);
    }

    function warnIfReactDOMContainerInDEV(container) {
      {
        !!container._reactRootContainer ? warningWithoutStack$1(false, 'You are calling ReactDOM.%s() on a container that was previously ' + 'passed to ReactDOM.render(). This is not supported.', enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot') : void 0;
        container._reactHasBeenPassedToCreateRootDEV = true;
      }
    }

    if (enableStableConcurrentModeAPIs) {
      ReactDOM.createRoot = createRoot;
      ReactDOM.createSyncRoot = createSyncRoot;
    }

    var foundDevTools = injectIntoDevTools({
      findFiberByHostInstance: getClosestInstanceFromNode,
      bundleType: 1,
      version: ReactVersion,
      rendererPackageName: 'react-dom'
    });
    {
      if (!foundDevTools && canUseDOM && window.top === window.self) {
        // If we're in Chrome or Firefox, provide a download link if not installed.
        if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
          var protocol = window.location.protocol; // Don't warn in exotic cases like chrome-extension://.

          if (/^(https?|file):$/.test(protocol)) {
            console.info('%cDownload the React DevTools ' + 'for a better development experience: ' + 'https://fb.me/react-devtools' + (protocol === 'file:' ? '\nYou might need to use a local HTTP server (instead of file://): ' + 'https://fb.me/react-devtools-faq' : ''), 'font-weight:bold');
          }
        }
      }
    }
    var ReactDOM$2 = Object.freeze({
      default: ReactDOM
    });
    var ReactDOM$3 = ReactDOM$2 && ReactDOM || ReactDOM$2; // TODO: decide on the top-level export form.
    // This is hacky but makes it work with both Rollup and Jest.

    var reactDom = ReactDOM$3.default || ReactDOM$3;
    module.exports = reactDom;
  })();
}
},{"react":"../node_modules/react/index.js","object-assign":"../node_modules/object-assign/index.js","scheduler":"../node_modules/scheduler/index.js","prop-types/checkPropTypes":"../node_modules/prop-types/checkPropTypes.js","scheduler/tracing":"../node_modules/scheduler/tracing.js"}],"../node_modules/react-dom/index.js":[function(require,module,exports) {
'use strict';

function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {
    return;
  }

  if ("development" !== 'production') {
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
  }

  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}

if ("development" === 'production') {
  // DCE check should happen before ReactDOM bundle executes so that
  // DevTools can report bad minification during injection.
  checkDCE();
  module.exports = require('./cjs/react-dom.production.min.js');
} else {
  module.exports = require('./cjs/react-dom.development.js');
}
},{"./cjs/react-dom.development.js":"../node_modules/react-dom/cjs/react-dom.development.js"}],"../node_modules/dayjs/dayjs.min.js":[function(require,module,exports) {
var define;
!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):t.dayjs=n()}(this,function(){"use strict";var t="millisecond",n="second",e="minute",r="hour",i="day",s="week",u="month",a="quarter",o="year",h=/^(\d{4})-?(\d{1,2})-?(\d{0,2})[^0-9]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?.?(\d{1,3})?$/,f=/\[([^\]]+)]|Y{2,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,c=function(t,n,e){var r=String(t);return!r||r.length>=n?t:""+Array(n+1-r.length).join(e)+t},d={s:c,z:function(t){var n=-t.utcOffset(),e=Math.abs(n),r=Math.floor(e/60),i=e%60;return(n<=0?"+":"-")+c(r,2,"0")+":"+c(i,2,"0")},m:function(t,n){var e=12*(n.year()-t.year())+(n.month()-t.month()),r=t.clone().add(e,u),i=n-r<0,s=t.clone().add(e+(i?-1:1),u);return Number(-(e+(n-r)/(i?r-s:s-r))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(h){return{M:u,y:o,w:s,d:i,h:r,m:e,s:n,ms:t,Q:a}[h]||String(h||"").toLowerCase().replace(/s$/,"")},u:function(t){return void 0===t}},$={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_")},l="en",m={};m[l]=$;var y=function(t){return t instanceof v},M=function(t,n,e){var r;if(!t)return l;if("string"==typeof t)m[t]&&(r=t),n&&(m[t]=n,r=t);else{var i=t.name;m[i]=t,r=i}return e||(l=r),r},g=function(t,n,e){if(y(t))return t.clone();var r=n?"string"==typeof n?{format:n,pl:e}:n:{};return r.date=t,new v(r)},D=d;D.l=M,D.i=y,D.w=function(t,n){return g(t,{locale:n.$L,utc:n.$u})};var v=function(){function c(t){this.$L=this.$L||M(t.locale,null,!0),this.parse(t)}var d=c.prototype;return d.parse=function(t){this.$d=function(t){var n=t.date,e=t.utc;if(null===n)return new Date(NaN);if(D.u(n))return new Date;if(n instanceof Date)return new Date(n);if("string"==typeof n&&!/Z$/i.test(n)){var r=n.match(h);if(r)return e?new Date(Date.UTC(r[1],r[2]-1,r[3]||1,r[4]||0,r[5]||0,r[6]||0,r[7]||0)):new Date(r[1],r[2]-1,r[3]||1,r[4]||0,r[5]||0,r[6]||0,r[7]||0)}return new Date(n)}(t),this.init()},d.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},d.$utils=function(){return D},d.isValid=function(){return!("Invalid Date"===this.$d.toString())},d.isSame=function(t,n){var e=g(t);return this.startOf(n)<=e&&e<=this.endOf(n)},d.isAfter=function(t,n){return g(t)<this.startOf(n)},d.isBefore=function(t,n){return this.endOf(n)<g(t)},d.$g=function(t,n,e){return D.u(t)?this[n]:this.set(e,t)},d.year=function(t){return this.$g(t,"$y",o)},d.month=function(t){return this.$g(t,"$M",u)},d.day=function(t){return this.$g(t,"$W",i)},d.date=function(t){return this.$g(t,"$D","date")},d.hour=function(t){return this.$g(t,"$H",r)},d.minute=function(t){return this.$g(t,"$m",e)},d.second=function(t){return this.$g(t,"$s",n)},d.millisecond=function(n){return this.$g(n,"$ms",t)},d.unix=function(){return Math.floor(this.valueOf()/1e3)},d.valueOf=function(){return this.$d.getTime()},d.startOf=function(t,a){var h=this,f=!!D.u(a)||a,c=D.p(t),d=function(t,n){var e=D.w(h.$u?Date.UTC(h.$y,n,t):new Date(h.$y,n,t),h);return f?e:e.endOf(i)},$=function(t,n){return D.w(h.toDate()[t].apply(h.toDate(),(f?[0,0,0,0]:[23,59,59,999]).slice(n)),h)},l=this.$W,m=this.$M,y=this.$D,M="set"+(this.$u?"UTC":"");switch(c){case o:return f?d(1,0):d(31,11);case u:return f?d(1,m):d(0,m+1);case s:var g=this.$locale().weekStart||0,v=(l<g?l+7:l)-g;return d(f?y-v:y+(6-v),m);case i:case"date":return $(M+"Hours",0);case r:return $(M+"Minutes",1);case e:return $(M+"Seconds",2);case n:return $(M+"Milliseconds",3);default:return this.clone()}},d.endOf=function(t){return this.startOf(t,!1)},d.$set=function(s,a){var h,f=D.p(s),c="set"+(this.$u?"UTC":""),d=(h={},h[i]=c+"Date",h.date=c+"Date",h[u]=c+"Month",h[o]=c+"FullYear",h[r]=c+"Hours",h[e]=c+"Minutes",h[n]=c+"Seconds",h[t]=c+"Milliseconds",h)[f],$=f===i?this.$D+(a-this.$W):a;if(f===u||f===o){var l=this.clone().set("date",1);l.$d[d]($),l.init(),this.$d=l.set("date",Math.min(this.$D,l.daysInMonth())).toDate()}else d&&this.$d[d]($);return this.init(),this},d.set=function(t,n){return this.clone().$set(t,n)},d.get=function(t){return this[D.p(t)]()},d.add=function(t,a){var h,f=this;t=Number(t);var c=D.p(a),d=function(n){var e=g(f);return D.w(e.date(e.date()+Math.round(n*t)),f)};if(c===u)return this.set(u,this.$M+t);if(c===o)return this.set(o,this.$y+t);if(c===i)return d(1);if(c===s)return d(7);var $=(h={},h[e]=6e4,h[r]=36e5,h[n]=1e3,h)[c]||1,l=this.valueOf()+t*$;return D.w(l,this)},d.subtract=function(t,n){return this.add(-1*t,n)},d.format=function(t){var n=this;if(!this.isValid())return"Invalid Date";var e=t||"YYYY-MM-DDTHH:mm:ssZ",r=D.z(this),i=this.$locale(),s=this.$H,u=this.$m,a=this.$M,o=i.weekdays,h=i.months,c=function(t,r,i,s){return t&&(t[r]||t(n,e))||i[r].substr(0,s)},d=function(t){return D.s(s%12||12,t,"0")},$=i.meridiem||function(t,n,e){var r=t<12?"AM":"PM";return e?r.toLowerCase():r},l={YY:String(this.$y).slice(-2),YYYY:this.$y,M:a+1,MM:D.s(a+1,2,"0"),MMM:c(i.monthsShort,a,h,3),MMMM:h[a]||h(this,e),D:this.$D,DD:D.s(this.$D,2,"0"),d:String(this.$W),dd:c(i.weekdaysMin,this.$W,o,2),ddd:c(i.weekdaysShort,this.$W,o,3),dddd:o[this.$W],H:String(s),HH:D.s(s,2,"0"),h:d(1),hh:d(2),a:$(s,u,!0),A:$(s,u,!1),m:String(u),mm:D.s(u,2,"0"),s:String(this.$s),ss:D.s(this.$s,2,"0"),SSS:D.s(this.$ms,3,"0"),Z:r};return e.replace(f,function(t,n){return n||l[t]||r.replace(":","")})},d.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},d.diff=function(t,h,f){var c,d=D.p(h),$=g(t),l=6e4*($.utcOffset()-this.utcOffset()),m=this-$,y=D.m(this,$);return y=(c={},c[o]=y/12,c[u]=y,c[a]=y/3,c[s]=(m-l)/6048e5,c[i]=(m-l)/864e5,c[r]=m/36e5,c[e]=m/6e4,c[n]=m/1e3,c)[d]||m,f?y:D.a(y)},d.daysInMonth=function(){return this.endOf(u).$D},d.$locale=function(){return m[this.$L]},d.locale=function(t,n){if(!t)return this.$L;var e=this.clone();return e.$L=M(t,n,!0),e},d.clone=function(){return D.w(this.toDate(),this)},d.toDate=function(){return new Date(this.$d)},d.toJSON=function(){return this.isValid()?this.toISOString():null},d.toISOString=function(){return this.$d.toISOString()},d.toString=function(){return this.$d.toUTCString()},c}();return g.prototype=v.prototype,g.extend=function(t,n){return t(n,v,g),g},g.locale=M,g.isDayjs=y,g.unix=function(t){return g(1e3*t)},g.en=m[l],g.Ls=m,g});

},{}],"resume.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _default = {
  about: {
    name: "Willy Liu",
    email: "willyjliu@gmail.com",
    phone: "+46 73-405 8888",
    github: "willwull"
  },
  professionalExperiences: [{
    title: "Front End Engineer Intern",
    company: "Facebook",
    date: "Jul 2019 - Oct 2019",
    location: "London",
    description: "\n        Front-end JavaScript for WhatsApp using React, Redux, Flow.\n        The internship involved implementing new features for WhatsApp for KaiOS,\n        which is used by over 37 million users worldwide.\n\n        KaiOS is a mobile operating system for low-end feature phones,\n        so there was a big focus on performance and memory.\n      "
  }, {
    title: "Teaching Assistant",
    company: "KTH",
    date: "Jan 2019 - Jun 2019",
    location: "Stockholm",
    description: "\n        Teaching assistant for the course \"Interaction Programming and the Dynamic Web\" (DH2642).\n\n        This course contains contents ranging from basic web development with HTML and CSS\n        to responsive web apps with modern front-end frameworks like React, Angular and Vue.\n        I work with taking lab presentations, grading, and coaching students in their projects.\n      "
  }, {
    title: "Developer",
    company: "Ericsson",
    date: "Jun 2017 - Dec 2018",
    location: "Stockholm",
    description: "\n        Developer intern working in a small team on creating a new desktop\n        application with chat, audio calling, video calling and screen sharing\n        as an internal communication platform within Ericsson.\n      "
  }],
  education: [{
    title: "Master's degree in Computer Science",
    company: "KTH",
    date: "2018 - 2020",
    location: "Stockholm",
    description: "\n        Master's program in Computer Science, subtrack Software Technology.\n\n        Planned graduation by June 2020.\n      "
  }, {
    title: "Bachelors's degree in Computer Science",
    company: "KTH",
    date: "2015 - 2018",
    location: "Stockholm",
    description: "\n        Degree program in Computer Science (\"Civilingenj\xF6r Datateknik\").\n\n        Thesis: Evaluating Classroom Evacuation with Crowd Simulation\n      "
  }],
  skills: [{
    title: "Languages",
    description: "\n        Swedish, English, Mandarin Chinese\n      "
  }, {
    title: "Programming",
    description: "\n        JavaScript, Swift, Java, C#, Python, PHP, SQL, Git\n      "
  }],
  extraCurricular: [{
    title: "Art Director",
    company: "Studs",
    location: "Stockholm",
    date: "Fall 2018 - Summer 2019",
    description: "\n        Studs (KTH Study Trip) is a platform that connects companies with KTH students\n        that are close to graduating.\n\n        I was Art Director and part of the IT group, responsible for UI design\n        for web and mobile, web development and developing the iOS app which allowed\n        members to see all events and see other members' location and share status updates.\n      "
  }]
};
exports.default = _default;
},{}],"../node_modules/@fortawesome/fontawesome-svg-core/index.es.js":[function(require,module,exports) {
var global = arguments[3];
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toHtml = toHtml;
exports.findIconDefinition = findIconDefinition;
exports.parse = exports.dom = exports.library = exports.counter = exports.text = exports.layer = exports.config = exports.noAuto = exports.icon = void 0;

function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function (obj) { return typeof obj; }; } else { _typeof2 = function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function (obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function (obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

function _iterableToArrayLimit(arr, i) {
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}

var noop = function noop() {};

var _WINDOW = {};
var _DOCUMENT = {};
var _MUTATION_OBSERVER = null;
var _PERFORMANCE = {
  mark: noop,
  measure: noop
};

try {
  if (typeof window !== 'undefined') _WINDOW = window;
  if (typeof document !== 'undefined') _DOCUMENT = document;
  if (typeof MutationObserver !== 'undefined') _MUTATION_OBSERVER = MutationObserver;
  if (typeof performance !== 'undefined') _PERFORMANCE = performance;
} catch (e) {}

var _ref = _WINDOW.navigator || {},
    _ref$userAgent = _ref.userAgent,
    userAgent = _ref$userAgent === void 0 ? '' : _ref$userAgent;

var WINDOW = _WINDOW;
var DOCUMENT = _DOCUMENT;
var MUTATION_OBSERVER = _MUTATION_OBSERVER;
var PERFORMANCE = _PERFORMANCE;
var IS_BROWSER = !!WINDOW.document;
var IS_DOM = !!DOCUMENT.documentElement && !!DOCUMENT.head && typeof DOCUMENT.addEventListener === 'function' && typeof DOCUMENT.createElement === 'function';
var IS_IE = ~userAgent.indexOf('MSIE') || ~userAgent.indexOf('Trident/');
var NAMESPACE_IDENTIFIER = '___FONT_AWESOME___';
var UNITS_IN_GRID = 16;
var DEFAULT_FAMILY_PREFIX = 'fa';
var DEFAULT_REPLACEMENT_CLASS = 'svg-inline--fa';
var DATA_FA_I2SVG = 'data-fa-i2svg';
var DATA_FA_PSEUDO_ELEMENT = 'data-fa-pseudo-element';
var DATA_FA_PSEUDO_ELEMENT_PENDING = 'data-fa-pseudo-element-pending';
var DATA_PREFIX = 'data-prefix';
var DATA_ICON = 'data-icon';
var HTML_CLASS_I2SVG_BASE_CLASS = 'fontawesome-i2svg';
var MUTATION_APPROACH_ASYNC = 'async';
var TAGNAMES_TO_SKIP_FOR_PSEUDOELEMENTS = ['HTML', 'HEAD', 'STYLE', 'SCRIPT'];

var PRODUCTION = function () {
  try {
    return "development" === 'production';
  } catch (e) {
    return false;
  }
}();

var PREFIX_TO_STYLE = {
  'fas': 'solid',
  'far': 'regular',
  'fal': 'light',
  'fad': 'duotone',
  'fab': 'brands',
  'fa': 'solid'
};
var STYLE_TO_PREFIX = {
  'solid': 'fas',
  'regular': 'far',
  'light': 'fal',
  'duotone': 'fad',
  'brands': 'fab'
};
var LAYERS_TEXT_CLASSNAME = 'fa-layers-text';
var FONT_FAMILY_PATTERN = /Font Awesome 5 (Solid|Regular|Light|Duotone|Brands|Free|Pro)/;
var FONT_WEIGHT_TO_PREFIX = {
  '900': 'fas',
  '400': 'far',
  'normal': 'far',
  '300': 'fal'
};
var oneToTen = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
var oneToTwenty = oneToTen.concat([11, 12, 13, 14, 15, 16, 17, 18, 19, 20]);
var ATTRIBUTES_WATCHED_FOR_MUTATION = ['class', 'data-prefix', 'data-icon', 'data-fa-transform', 'data-fa-mask'];
var DUOTONE_CLASSES = {
  GROUP: 'group',
  SWAP_OPACITY: 'swap-opacity',
  PRIMARY: 'primary',
  SECONDARY: 'secondary'
};
var RESERVED_CLASSES = ['xs', 'sm', 'lg', 'fw', 'ul', 'li', 'border', 'pull-left', 'pull-right', 'spin', 'pulse', 'rotate-90', 'rotate-180', 'rotate-270', 'flip-horizontal', 'flip-vertical', 'flip-both', 'stack', 'stack-1x', 'stack-2x', 'inverse', 'layers', 'layers-text', 'layers-counter', DUOTONE_CLASSES.GROUP, DUOTONE_CLASSES.SWAP_OPACITY, DUOTONE_CLASSES.PRIMARY, DUOTONE_CLASSES.SECONDARY].concat(oneToTen.map(function (n) {
  return "".concat(n, "x");
})).concat(oneToTwenty.map(function (n) {
  return "w-".concat(n);
}));
var initial = WINDOW.FontAwesomeConfig || {};

function getAttrConfig(attr) {
  var element = DOCUMENT.querySelector('script[' + attr + ']');

  if (element) {
    return element.getAttribute(attr);
  }
}

function coerce(val) {
  // Getting an empty string will occur if the attribute is set on the HTML tag but without a value
  // We'll assume that this is an indication that it should be toggled to true
  // For example <script data-search-pseudo-elements src="..."></script>
  if (val === '') return true;
  if (val === 'false') return false;
  if (val === 'true') return true;
  return val;
}

if (DOCUMENT && typeof DOCUMENT.querySelector === 'function') {
  var attrs = [['data-family-prefix', 'familyPrefix'], ['data-replacement-class', 'replacementClass'], ['data-auto-replace-svg', 'autoReplaceSvg'], ['data-auto-add-css', 'autoAddCss'], ['data-auto-a11y', 'autoA11y'], ['data-search-pseudo-elements', 'searchPseudoElements'], ['data-observe-mutations', 'observeMutations'], ['data-mutate-approach', 'mutateApproach'], ['data-keep-original-source', 'keepOriginalSource'], ['data-measure-performance', 'measurePerformance'], ['data-show-missing-icons', 'showMissingIcons']];
  attrs.forEach(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2),
        attr = _ref2[0],
        key = _ref2[1];

    var val = coerce(getAttrConfig(attr));

    if (val !== undefined && val !== null) {
      initial[key] = val;
    }
  });
}

var _default = {
  familyPrefix: DEFAULT_FAMILY_PREFIX,
  replacementClass: DEFAULT_REPLACEMENT_CLASS,
  autoReplaceSvg: true,
  autoAddCss: true,
  autoA11y: true,
  searchPseudoElements: false,
  observeMutations: true,
  mutateApproach: 'async',
  keepOriginalSource: true,
  measurePerformance: false,
  showMissingIcons: true
};

var _config = _objectSpread({}, _default, initial);

if (!_config.autoReplaceSvg) _config.observeMutations = false;

var config = _objectSpread({}, _config);

exports.config = config;
WINDOW.FontAwesomeConfig = config;
var w = WINDOW || {};
if (!w[NAMESPACE_IDENTIFIER]) w[NAMESPACE_IDENTIFIER] = {};
if (!w[NAMESPACE_IDENTIFIER].styles) w[NAMESPACE_IDENTIFIER].styles = {};
if (!w[NAMESPACE_IDENTIFIER].hooks) w[NAMESPACE_IDENTIFIER].hooks = {};
if (!w[NAMESPACE_IDENTIFIER].shims) w[NAMESPACE_IDENTIFIER].shims = [];
var namespace = w[NAMESPACE_IDENTIFIER];
var functions = [];

var listener = function listener() {
  DOCUMENT.removeEventListener('DOMContentLoaded', listener);
  loaded = 1;
  functions.map(function (fn) {
    return fn();
  });
};

var loaded = false;

if (IS_DOM) {
  loaded = (DOCUMENT.documentElement.doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(DOCUMENT.readyState);
  if (!loaded) DOCUMENT.addEventListener('DOMContentLoaded', listener);
}

function domready(fn) {
  if (!IS_DOM) return;
  loaded ? setTimeout(fn, 0) : functions.push(fn);
}

var PENDING = 'pending';
var SETTLED = 'settled';
var FULFILLED = 'fulfilled';
var REJECTED = 'rejected';

var NOOP = function NOOP() {};

var isNode = typeof global !== 'undefined' && typeof global.process !== 'undefined' && typeof global.process.emit === 'function';
var asyncSetTimer = typeof setImmediate === 'undefined' ? setTimeout : setImmediate;
var asyncQueue = [];
var asyncTimer;

function asyncFlush() {
  // run promise callbacks
  for (var i = 0; i < asyncQueue.length; i++) {
    asyncQueue[i][0](asyncQueue[i][1]);
  } // reset async asyncQueue


  asyncQueue = [];
  asyncTimer = false;
}

function asyncCall(callback, arg) {
  asyncQueue.push([callback, arg]);

  if (!asyncTimer) {
    asyncTimer = true;
    asyncSetTimer(asyncFlush, 0);
  }
}

function invokeResolver(resolver, promise) {
  function resolvePromise(value) {
    resolve(promise, value);
  }

  function rejectPromise(reason) {
    reject(promise, reason);
  }

  try {
    resolver(resolvePromise, rejectPromise);
  } catch (e) {
    rejectPromise(e);
  }
}

function invokeCallback(subscriber) {
  var owner = subscriber.owner;
  var settled = owner._state;
  var value = owner._data;
  var callback = subscriber[settled];
  var promise = subscriber.then;

  if (typeof callback === 'function') {
    settled = FULFILLED;

    try {
      value = callback(value);
    } catch (e) {
      reject(promise, e);
    }
  }

  if (!handleThenable(promise, value)) {
    if (settled === FULFILLED) {
      resolve(promise, value);
    }

    if (settled === REJECTED) {
      reject(promise, value);
    }
  }
}

function handleThenable(promise, value) {
  var resolved;

  try {
    if (promise === value) {
      throw new TypeError('A promises callback cannot return that same promise.');
    }

    if (value && (typeof value === 'function' || _typeof(value) === 'object')) {
      // then should be retrieved only once
      var then = value.then;

      if (typeof then === 'function') {
        then.call(value, function (val) {
          if (!resolved) {
            resolved = true;

            if (value === val) {
              fulfill(promise, val);
            } else {
              resolve(promise, val);
            }
          }
        }, function (reason) {
          if (!resolved) {
            resolved = true;
            reject(promise, reason);
          }
        });
        return true;
      }
    }
  } catch (e) {
    if (!resolved) {
      reject(promise, e);
    }

    return true;
  }

  return false;
}

function resolve(promise, value) {
  if (promise === value || !handleThenable(promise, value)) {
    fulfill(promise, value);
  }
}

function fulfill(promise, value) {
  if (promise._state === PENDING) {
    promise._state = SETTLED;
    promise._data = value;
    asyncCall(publishFulfillment, promise);
  }
}

function reject(promise, reason) {
  if (promise._state === PENDING) {
    promise._state = SETTLED;
    promise._data = reason;
    asyncCall(publishRejection, promise);
  }
}

function publish(promise) {
  promise._then = promise._then.forEach(invokeCallback);
}

function publishFulfillment(promise) {
  promise._state = FULFILLED;
  publish(promise);
}

function publishRejection(promise) {
  promise._state = REJECTED;
  publish(promise);

  if (!promise._handled && isNode) {
    global.process.emit('unhandledRejection', promise._data, promise);
  }
}

function notifyRejectionHandled(promise) {
  global.process.emit('rejectionHandled', promise);
}
/**
 * @class
 */


function P(resolver) {
  if (typeof resolver !== 'function') {
    throw new TypeError('Promise resolver ' + resolver + ' is not a function');
  }

  if (this instanceof P === false) {
    throw new TypeError('Failed to construct \'Promise\': Please use the \'new\' operator, this object constructor cannot be called as a function.');
  }

  this._then = [];
  invokeResolver(resolver, this);
}

P.prototype = {
  constructor: P,
  _state: PENDING,
  _then: null,
  _data: undefined,
  _handled: false,
  then: function then(onFulfillment, onRejection) {
    var subscriber = {
      owner: this,
      then: new this.constructor(NOOP),
      fulfilled: onFulfillment,
      rejected: onRejection
    };

    if ((onRejection || onFulfillment) && !this._handled) {
      this._handled = true;

      if (this._state === REJECTED && isNode) {
        asyncCall(notifyRejectionHandled, this);
      }
    }

    if (this._state === FULFILLED || this._state === REJECTED) {
      // already resolved, call callback async
      asyncCall(invokeCallback, subscriber);
    } else {
      // subscribe
      this._then.push(subscriber);
    }

    return subscriber.then;
  },
  catch: function _catch(onRejection) {
    return this.then(null, onRejection);
  }
};

P.all = function (promises) {
  if (!Array.isArray(promises)) {
    throw new TypeError('You must pass an array to Promise.all().');
  }

  return new P(function (resolve, reject) {
    var results = [];
    var remaining = 0;

    function resolver(index) {
      remaining++;
      return function (value) {
        results[index] = value;

        if (! --remaining) {
          resolve(results);
        }
      };
    }

    for (var i = 0, promise; i < promises.length; i++) {
      promise = promises[i];

      if (promise && typeof promise.then === 'function') {
        promise.then(resolver(i), reject);
      } else {
        results[i] = promise;
      }
    }

    if (!remaining) {
      resolve(results);
    }
  });
};

P.race = function (promises) {
  if (!Array.isArray(promises)) {
    throw new TypeError('You must pass an array to Promise.race().');
  }

  return new P(function (resolve, reject) {
    for (var i = 0, promise; i < promises.length; i++) {
      promise = promises[i];

      if (promise && typeof promise.then === 'function') {
        promise.then(resolve, reject);
      } else {
        resolve(promise);
      }
    }
  });
};

P.resolve = function (value) {
  if (value && _typeof(value) === 'object' && value.constructor === P) {
    return value;
  }

  return new P(function (resolve) {
    resolve(value);
  });
};

P.reject = function (reason) {
  return new P(function (resolve, reject) {
    reject(reason);
  });
};

var picked = typeof Promise === 'function' ? Promise : P;
var d = UNITS_IN_GRID;
var meaninglessTransform = {
  size: 16,
  x: 0,
  y: 0,
  rotate: 0,
  flipX: false,
  flipY: false
};

function isReserved(name) {
  return ~RESERVED_CLASSES.indexOf(name);
}

function insertCss(css) {
  if (!css || !IS_DOM) {
    return;
  }

  var style = DOCUMENT.createElement('style');
  style.setAttribute('type', 'text/css');
  style.innerHTML = css;
  var headChildren = DOCUMENT.head.childNodes;
  var beforeChild = null;

  for (var i = headChildren.length - 1; i > -1; i--) {
    var child = headChildren[i];
    var tagName = (child.tagName || '').toUpperCase();

    if (['STYLE', 'LINK'].indexOf(tagName) > -1) {
      beforeChild = child;
    }
  }

  DOCUMENT.head.insertBefore(style, beforeChild);
  return css;
}

var idPool = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';

function nextUniqueId() {
  var size = 12;
  var id = '';

  while (size-- > 0) {
    id += idPool[Math.random() * 62 | 0];
  }

  return id;
}

function toArray(obj) {
  var array = [];

  for (var i = (obj || []).length >>> 0; i--;) {
    array[i] = obj[i];
  }

  return array;
}

function classArray(node) {
  if (node.classList) {
    return toArray(node.classList);
  } else {
    return (node.getAttribute('class') || '').split(' ').filter(function (i) {
      return i;
    });
  }
}

function getIconName(familyPrefix, cls) {
  var parts = cls.split('-');
  var prefix = parts[0];
  var iconName = parts.slice(1).join('-');

  if (prefix === familyPrefix && iconName !== '' && !isReserved(iconName)) {
    return iconName;
  } else {
    return null;
  }
}

function htmlEscape(str) {
  return "".concat(str).replace(/&/g, '&amp;').replace(/"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
}

function joinAttributes(attributes) {
  return Object.keys(attributes || {}).reduce(function (acc, attributeName) {
    return acc + "".concat(attributeName, "=\"").concat(htmlEscape(attributes[attributeName]), "\" ");
  }, '').trim();
}

function joinStyles(styles) {
  return Object.keys(styles || {}).reduce(function (acc, styleName) {
    return acc + "".concat(styleName, ": ").concat(styles[styleName], ";");
  }, '');
}

function transformIsMeaningful(transform) {
  return transform.size !== meaninglessTransform.size || transform.x !== meaninglessTransform.x || transform.y !== meaninglessTransform.y || transform.rotate !== meaninglessTransform.rotate || transform.flipX || transform.flipY;
}

function transformForSvg(_ref) {
  var transform = _ref.transform,
      containerWidth = _ref.containerWidth,
      iconWidth = _ref.iconWidth;
  var outer = {
    transform: "translate(".concat(containerWidth / 2, " 256)")
  };
  var innerTranslate = "translate(".concat(transform.x * 32, ", ").concat(transform.y * 32, ") ");
  var innerScale = "scale(".concat(transform.size / 16 * (transform.flipX ? -1 : 1), ", ").concat(transform.size / 16 * (transform.flipY ? -1 : 1), ") ");
  var innerRotate = "rotate(".concat(transform.rotate, " 0 0)");
  var inner = {
    transform: "".concat(innerTranslate, " ").concat(innerScale, " ").concat(innerRotate)
  };
  var path = {
    transform: "translate(".concat(iconWidth / 2 * -1, " -256)")
  };
  return {
    outer: outer,
    inner: inner,
    path: path
  };
}

function transformForCss(_ref2) {
  var transform = _ref2.transform,
      _ref2$width = _ref2.width,
      width = _ref2$width === void 0 ? UNITS_IN_GRID : _ref2$width,
      _ref2$height = _ref2.height,
      height = _ref2$height === void 0 ? UNITS_IN_GRID : _ref2$height,
      _ref2$startCentered = _ref2.startCentered,
      startCentered = _ref2$startCentered === void 0 ? false : _ref2$startCentered;
  var val = '';

  if (startCentered && IS_IE) {
    val += "translate(".concat(transform.x / d - width / 2, "em, ").concat(transform.y / d - height / 2, "em) ");
  } else if (startCentered) {
    val += "translate(calc(-50% + ".concat(transform.x / d, "em), calc(-50% + ").concat(transform.y / d, "em)) ");
  } else {
    val += "translate(".concat(transform.x / d, "em, ").concat(transform.y / d, "em) ");
  }

  val += "scale(".concat(transform.size / d * (transform.flipX ? -1 : 1), ", ").concat(transform.size / d * (transform.flipY ? -1 : 1), ") ");
  val += "rotate(".concat(transform.rotate, "deg) ");
  return val;
}

var ALL_SPACE = {
  x: 0,
  y: 0,
  width: '100%',
  height: '100%'
};

function fillBlack(abstract) {
  var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

  if (abstract.attributes && (abstract.attributes.fill || force)) {
    abstract.attributes.fill = 'black';
  }

  return abstract;
}

function deGroup(abstract) {
  if (abstract.tag === 'g') {
    return abstract.children;
  } else {
    return [abstract];
  }
}

function makeIconMasking(_ref) {
  var children = _ref.children,
      attributes = _ref.attributes,
      main = _ref.main,
      mask = _ref.mask,
      transform = _ref.transform;
  var mainWidth = main.width,
      mainPath = main.icon;
  var maskWidth = mask.width,
      maskPath = mask.icon;
  var trans = transformForSvg({
    transform: transform,
    containerWidth: maskWidth,
    iconWidth: mainWidth
  });
  var maskRect = {
    tag: 'rect',
    attributes: _objectSpread({}, ALL_SPACE, {
      fill: 'white'
    })
  };
  var maskInnerGroupChildrenMixin = mainPath.children ? {
    children: mainPath.children.map(fillBlack)
  } : {};
  var maskInnerGroup = {
    tag: 'g',
    attributes: _objectSpread({}, trans.inner),
    children: [fillBlack(_objectSpread({
      tag: mainPath.tag,
      attributes: _objectSpread({}, mainPath.attributes, trans.path)
    }, maskInnerGroupChildrenMixin))]
  };
  var maskOuterGroup = {
    tag: 'g',
    attributes: _objectSpread({}, trans.outer),
    children: [maskInnerGroup]
  };
  var maskId = "mask-".concat(nextUniqueId());
  var clipId = "clip-".concat(nextUniqueId());
  var maskTag = {
    tag: 'mask',
    attributes: _objectSpread({}, ALL_SPACE, {
      id: maskId,
      maskUnits: 'userSpaceOnUse',
      maskContentUnits: 'userSpaceOnUse'
    }),
    children: [maskRect, maskOuterGroup]
  };
  var defs = {
    tag: 'defs',
    children: [{
      tag: 'clipPath',
      attributes: {
        id: clipId
      },
      children: deGroup(maskPath)
    }, maskTag]
  };
  children.push(defs, {
    tag: 'rect',
    attributes: _objectSpread({
      fill: 'currentColor',
      'clip-path': "url(#".concat(clipId, ")"),
      mask: "url(#".concat(maskId, ")")
    }, ALL_SPACE)
  });
  return {
    children: children,
    attributes: attributes
  };
}

function makeIconStandard(_ref) {
  var children = _ref.children,
      attributes = _ref.attributes,
      main = _ref.main,
      transform = _ref.transform,
      styles = _ref.styles;
  var styleString = joinStyles(styles);

  if (styleString.length > 0) {
    attributes['style'] = styleString;
  }

  if (transformIsMeaningful(transform)) {
    var trans = transformForSvg({
      transform: transform,
      containerWidth: main.width,
      iconWidth: main.width
    });
    children.push({
      tag: 'g',
      attributes: _objectSpread({}, trans.outer),
      children: [{
        tag: 'g',
        attributes: _objectSpread({}, trans.inner),
        children: [{
          tag: main.icon.tag,
          children: main.icon.children,
          attributes: _objectSpread({}, main.icon.attributes, trans.path)
        }]
      }]
    });
  } else {
    children.push(main.icon);
  }

  return {
    children: children,
    attributes: attributes
  };
}

function asIcon(_ref) {
  var children = _ref.children,
      main = _ref.main,
      mask = _ref.mask,
      attributes = _ref.attributes,
      styles = _ref.styles,
      transform = _ref.transform;

  if (transformIsMeaningful(transform) && main.found && !mask.found) {
    var width = main.width,
        height = main.height;
    var offset = {
      x: width / height / 2,
      y: 0.5
    };
    attributes['style'] = joinStyles(_objectSpread({}, styles, {
      'transform-origin': "".concat(offset.x + transform.x / 16, "em ").concat(offset.y + transform.y / 16, "em")
    }));
  }

  return [{
    tag: 'svg',
    attributes: attributes,
    children: children
  }];
}

function asSymbol(_ref) {
  var prefix = _ref.prefix,
      iconName = _ref.iconName,
      children = _ref.children,
      attributes = _ref.attributes,
      symbol = _ref.symbol;
  var id = symbol === true ? "".concat(prefix, "-").concat(config.familyPrefix, "-").concat(iconName) : symbol;
  return [{
    tag: 'svg',
    attributes: {
      style: 'display: none;'
    },
    children: [{
      tag: 'symbol',
      attributes: _objectSpread({}, attributes, {
        id: id
      }),
      children: children
    }]
  }];
}

function makeInlineSvgAbstract(params) {
  var _params$icons = params.icons,
      main = _params$icons.main,
      mask = _params$icons.mask,
      prefix = params.prefix,
      iconName = params.iconName,
      transform = params.transform,
      symbol = params.symbol,
      title = params.title,
      extra = params.extra,
      _params$watchable = params.watchable,
      watchable = _params$watchable === void 0 ? false : _params$watchable;

  var _ref = mask.found ? mask : main,
      width = _ref.width,
      height = _ref.height;

  var widthClass = "fa-w-".concat(Math.ceil(width / height * 16));
  var attrClass = [config.replacementClass, iconName ? "".concat(config.familyPrefix, "-").concat(iconName) : '', widthClass].filter(function (c) {
    return extra.classes.indexOf(c) === -1;
  }).concat(extra.classes).join(' ');
  var content = {
    children: [],
    attributes: _objectSpread({}, extra.attributes, {
      'data-prefix': prefix,
      'data-icon': iconName,
      'class': attrClass,
      'role': extra.attributes.role || 'img',
      'xmlns': 'http://www.w3.org/2000/svg',
      'viewBox': "0 0 ".concat(width, " ").concat(height)
    })
  };

  if (watchable) {
    content.attributes[DATA_FA_I2SVG] = '';
  }

  if (title) content.children.push({
    tag: 'title',
    attributes: {
      id: content.attributes['aria-labelledby'] || "title-".concat(nextUniqueId())
    },
    children: [title]
  });

  var args = _objectSpread({}, content, {
    prefix: prefix,
    iconName: iconName,
    main: main,
    mask: mask,
    transform: transform,
    symbol: symbol,
    styles: extra.styles
  });

  var _ref2 = mask.found && main.found ? makeIconMasking(args) : makeIconStandard(args),
      children = _ref2.children,
      attributes = _ref2.attributes;

  args.children = children;
  args.attributes = attributes;

  if (symbol) {
    return asSymbol(args);
  } else {
    return asIcon(args);
  }
}

function makeLayersTextAbstract(params) {
  var content = params.content,
      width = params.width,
      height = params.height,
      transform = params.transform,
      title = params.title,
      extra = params.extra,
      _params$watchable2 = params.watchable,
      watchable = _params$watchable2 === void 0 ? false : _params$watchable2;

  var attributes = _objectSpread({}, extra.attributes, title ? {
    'title': title
  } : {}, {
    'class': extra.classes.join(' ')
  });

  if (watchable) {
    attributes[DATA_FA_I2SVG] = '';
  }

  var styles = _objectSpread({}, extra.styles);

  if (transformIsMeaningful(transform)) {
    styles['transform'] = transformForCss({
      transform: transform,
      startCentered: true,
      width: width,
      height: height
    });
    styles['-webkit-transform'] = styles['transform'];
  }

  var styleString = joinStyles(styles);

  if (styleString.length > 0) {
    attributes['style'] = styleString;
  }

  var val = [];
  val.push({
    tag: 'span',
    attributes: attributes,
    children: [content]
  });

  if (title) {
    val.push({
      tag: 'span',
      attributes: {
        class: 'sr-only'
      },
      children: [title]
    });
  }

  return val;
}

function makeLayersCounterAbstract(params) {
  var content = params.content,
      title = params.title,
      extra = params.extra;

  var attributes = _objectSpread({}, extra.attributes, title ? {
    'title': title
  } : {}, {
    'class': extra.classes.join(' ')
  });

  var styleString = joinStyles(extra.styles);

  if (styleString.length > 0) {
    attributes['style'] = styleString;
  }

  var val = [];
  val.push({
    tag: 'span',
    attributes: attributes,
    children: [content]
  });

  if (title) {
    val.push({
      tag: 'span',
      attributes: {
        class: 'sr-only'
      },
      children: [title]
    });
  }

  return val;
}

var noop$1 = function noop() {};

var p = config.measurePerformance && PERFORMANCE && PERFORMANCE.mark && PERFORMANCE.measure ? PERFORMANCE : {
  mark: noop$1,
  measure: noop$1
};
var preamble = "FA \"5.11.2\"";

var begin = function begin(name) {
  p.mark("".concat(preamble, " ").concat(name, " begins"));
  return function () {
    return end(name);
  };
};

var end = function end(name) {
  p.mark("".concat(preamble, " ").concat(name, " ends"));
  p.measure("".concat(preamble, " ").concat(name), "".concat(preamble, " ").concat(name, " begins"), "".concat(preamble, " ").concat(name, " ends"));
};

var perf = {
  begin: begin,
  end: end
};
/**
 * Internal helper to bind a function known to have 4 arguments
 * to a given context.
 */

var bindInternal4 = function bindInternal4(func, thisContext) {
  return function (a, b, c, d) {
    return func.call(thisContext, a, b, c, d);
  };
};
/**
 * # Reduce
 *
 * A fast object `.reduce()` implementation.
 *
 * @param  {Object}   subject      The object to reduce over.
 * @param  {Function} fn           The reducer function.
 * @param  {mixed}    initialValue The initial value for the reducer, defaults to subject[0].
 * @param  {Object}   thisContext  The context for the reducer.
 * @return {mixed}                 The final result.
 */


var reduce = function fastReduceObject(subject, fn, initialValue, thisContext) {
  var keys = Object.keys(subject),
      length = keys.length,
      iterator = thisContext !== undefined ? bindInternal4(fn, thisContext) : fn,
      i,
      key,
      result;

  if (initialValue === undefined) {
    i = 1;
    result = subject[keys[0]];
  } else {
    i = 0;
    result = initialValue;
  }

  for (; i < length; i++) {
    key = keys[i];
    result = iterator(result, subject[key], key, subject);
  }

  return result;
};

function toHex(unicode) {
  var result = '';

  for (var i = 0; i < unicode.length; i++) {
    var hex = unicode.charCodeAt(i).toString(16);
    result += ('000' + hex).slice(-4);
  }

  return result;
}

function defineIcons(prefix, icons) {
  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var _params$skipHooks = params.skipHooks,
      skipHooks = _params$skipHooks === void 0 ? false : _params$skipHooks;
  var normalized = Object.keys(icons).reduce(function (acc, iconName) {
    var icon = icons[iconName];
    var expanded = !!icon.icon;

    if (expanded) {
      acc[icon.iconName] = icon.icon;
    } else {
      acc[iconName] = icon;
    }

    return acc;
  }, {});

  if (typeof namespace.hooks.addPack === 'function' && !skipHooks) {
    namespace.hooks.addPack(prefix, normalized);
  } else {
    namespace.styles[prefix] = _objectSpread({}, namespace.styles[prefix] || {}, normalized);
  }
  /**
   * Font Awesome 4 used the prefix of `fa` for all icons. With the introduction
   * of new styles we needed to differentiate between them. Prefix `fa` is now an alias
   * for `fas` so we'll easy the upgrade process for our users by automatically defining
   * this as well.
   */


  if (prefix === 'fas') {
    defineIcons('fa', icons);
  }
}

var styles = namespace.styles,
    shims = namespace.shims;
var _byUnicode = {};
var _byLigature = {};
var _byOldName = {};

var build = function build() {
  var lookup = function lookup(reducer) {
    return reduce(styles, function (o, style, prefix) {
      o[prefix] = reduce(style, reducer, {});
      return o;
    }, {});
  };

  _byUnicode = lookup(function (acc, icon, iconName) {
    if (icon[3]) {
      acc[icon[3]] = iconName;
    }

    return acc;
  });
  _byLigature = lookup(function (acc, icon, iconName) {
    var ligatures = icon[2];
    acc[iconName] = iconName;
    ligatures.forEach(function (ligature) {
      acc[ligature] = iconName;
    });
    return acc;
  });
  var hasRegular = 'far' in styles;
  _byOldName = reduce(shims, function (acc, shim) {
    var oldName = shim[0];
    var prefix = shim[1];
    var iconName = shim[2];

    if (prefix === 'far' && !hasRegular) {
      prefix = 'fas';
    }

    acc[oldName] = {
      prefix: prefix,
      iconName: iconName
    };
    return acc;
  }, {});
};

build();

function byUnicode(prefix, unicode) {
  return (_byUnicode[prefix] || {})[unicode];
}

function byLigature(prefix, ligature) {
  return (_byLigature[prefix] || {})[ligature];
}

function byOldName(name) {
  return _byOldName[name] || {
    prefix: null,
    iconName: null
  };
}

var styles$1 = namespace.styles;

var emptyCanonicalIcon = function emptyCanonicalIcon() {
  return {
    prefix: null,
    iconName: null,
    rest: []
  };
};

function getCanonicalIcon(values) {
  return values.reduce(function (acc, cls) {
    var iconName = getIconName(config.familyPrefix, cls);

    if (styles$1[cls]) {
      acc.prefix = cls;
    } else if (config.autoFetchSvg && ['fas', 'far', 'fal', 'fad', 'fab', 'fa'].indexOf(cls) > -1) {
      acc.prefix = cls;
    } else if (iconName) {
      var shim = acc.prefix === 'fa' ? byOldName(iconName) : {};
      acc.iconName = shim.iconName || iconName;
      acc.prefix = shim.prefix || acc.prefix;
    } else if (cls !== config.replacementClass && cls.indexOf('fa-w-') !== 0) {
      acc.rest.push(cls);
    }

    return acc;
  }, emptyCanonicalIcon());
}

function iconFromMapping(mapping, prefix, iconName) {
  if (mapping && mapping[prefix] && mapping[prefix][iconName]) {
    return {
      prefix: prefix,
      iconName: iconName,
      icon: mapping[prefix][iconName]
    };
  }
}

function toHtml(abstractNodes) {
  var tag = abstractNodes.tag,
      _abstractNodes$attrib = abstractNodes.attributes,
      attributes = _abstractNodes$attrib === void 0 ? {} : _abstractNodes$attrib,
      _abstractNodes$childr = abstractNodes.children,
      children = _abstractNodes$childr === void 0 ? [] : _abstractNodes$childr;

  if (typeof abstractNodes === 'string') {
    return htmlEscape(abstractNodes);
  } else {
    return "<".concat(tag, " ").concat(joinAttributes(attributes), ">").concat(children.map(toHtml).join(''), "</").concat(tag, ">");
  }
}

var noop$2 = function noop() {};

function isWatched(node) {
  var i2svg = node.getAttribute ? node.getAttribute(DATA_FA_I2SVG) : null;
  return typeof i2svg === 'string';
}

function getMutator() {
  if (config.autoReplaceSvg === true) {
    return mutators.replace;
  }

  var mutator = mutators[config.autoReplaceSvg];
  return mutator || mutators.replace;
}

var mutators = {
  replace: function replace(mutation) {
    var node = mutation[0];
    var abstract = mutation[1];
    var newOuterHTML = abstract.map(function (a) {
      return toHtml(a);
    }).join('\n');

    if (node.parentNode && node.outerHTML) {
      node.outerHTML = newOuterHTML + (config.keepOriginalSource && node.tagName.toLowerCase() !== 'svg' ? "<!-- ".concat(node.outerHTML, " -->") : '');
    } else if (node.parentNode) {
      var newNode = document.createElement('span');
      node.parentNode.replaceChild(newNode, node);
      newNode.outerHTML = newOuterHTML;
    }
  },
  nest: function nest(mutation) {
    var node = mutation[0];
    var abstract = mutation[1]; // If we already have a replaced node we do not want to continue nesting within it.
    // Short-circuit to the standard replacement

    if (~classArray(node).indexOf(config.replacementClass)) {
      return mutators.replace(mutation);
    }

    var forSvg = new RegExp("".concat(config.familyPrefix, "-.*"));
    delete abstract[0].attributes.style;
    delete abstract[0].attributes.id;
    var splitClasses = abstract[0].attributes.class.split(' ').reduce(function (acc, cls) {
      if (cls === config.replacementClass || cls.match(forSvg)) {
        acc.toSvg.push(cls);
      } else {
        acc.toNode.push(cls);
      }

      return acc;
    }, {
      toNode: [],
      toSvg: []
    });
    abstract[0].attributes.class = splitClasses.toSvg.join(' ');
    var newInnerHTML = abstract.map(function (a) {
      return toHtml(a);
    }).join('\n');
    node.setAttribute('class', splitClasses.toNode.join(' '));
    node.setAttribute(DATA_FA_I2SVG, '');
    node.innerHTML = newInnerHTML;
  }
};

function performOperationSync(op) {
  op();
}

function perform(mutations, callback) {
  var callbackFunction = typeof callback === 'function' ? callback : noop$2;

  if (mutations.length === 0) {
    callbackFunction();
  } else {
    var frame = performOperationSync;

    if (config.mutateApproach === MUTATION_APPROACH_ASYNC) {
      frame = WINDOW.requestAnimationFrame || performOperationSync;
    }

    frame(function () {
      var mutator = getMutator();
      var mark = perf.begin('mutate');
      mutations.map(mutator);
      mark();
      callbackFunction();
    });
  }
}

var disabled = false;

function disableObservation() {
  disabled = true;
}

function enableObservation() {
  disabled = false;
}

var mo = null;

function observe(options) {
  if (!MUTATION_OBSERVER) {
    return;
  }

  if (!config.observeMutations) {
    return;
  }

  var treeCallback = options.treeCallback,
      nodeCallback = options.nodeCallback,
      pseudoElementsCallback = options.pseudoElementsCallback,
      _options$observeMutat = options.observeMutationsRoot,
      observeMutationsRoot = _options$observeMutat === void 0 ? DOCUMENT : _options$observeMutat;
  mo = new MUTATION_OBSERVER(function (objects) {
    if (disabled) return;
    toArray(objects).forEach(function (mutationRecord) {
      if (mutationRecord.type === 'childList' && mutationRecord.addedNodes.length > 0 && !isWatched(mutationRecord.addedNodes[0])) {
        if (config.searchPseudoElements) {
          pseudoElementsCallback(mutationRecord.target);
        }

        treeCallback(mutationRecord.target);
      }

      if (mutationRecord.type === 'attributes' && mutationRecord.target.parentNode && config.searchPseudoElements) {
        pseudoElementsCallback(mutationRecord.target.parentNode);
      }

      if (mutationRecord.type === 'attributes' && isWatched(mutationRecord.target) && ~ATTRIBUTES_WATCHED_FOR_MUTATION.indexOf(mutationRecord.attributeName)) {
        if (mutationRecord.attributeName === 'class') {
          var _getCanonicalIcon = getCanonicalIcon(classArray(mutationRecord.target)),
              prefix = _getCanonicalIcon.prefix,
              iconName = _getCanonicalIcon.iconName;

          if (prefix) mutationRecord.target.setAttribute('data-prefix', prefix);
          if (iconName) mutationRecord.target.setAttribute('data-icon', iconName);
        } else {
          nodeCallback(mutationRecord.target);
        }
      }
    });
  });
  if (!IS_DOM) return;
  mo.observe(observeMutationsRoot, {
    childList: true,
    attributes: true,
    characterData: true,
    subtree: true
  });
}

function disconnect() {
  if (!mo) return;
  mo.disconnect();
}

function styleParser(node) {
  var style = node.getAttribute('style');
  var val = [];

  if (style) {
    val = style.split(';').reduce(function (acc, style) {
      var styles = style.split(':');
      var prop = styles[0];
      var value = styles.slice(1);

      if (prop && value.length > 0) {
        acc[prop] = value.join(':').trim();
      }

      return acc;
    }, {});
  }

  return val;
}

function classParser(node) {
  var existingPrefix = node.getAttribute('data-prefix');
  var existingIconName = node.getAttribute('data-icon');
  var innerText = node.innerText !== undefined ? node.innerText.trim() : '';
  var val = getCanonicalIcon(classArray(node));

  if (existingPrefix && existingIconName) {
    val.prefix = existingPrefix;
    val.iconName = existingIconName;
  }

  if (val.prefix && innerText.length > 1) {
    val.iconName = byLigature(val.prefix, node.innerText);
  } else if (val.prefix && innerText.length === 1) {
    val.iconName = byUnicode(val.prefix, toHex(node.innerText));
  }

  return val;
}

var parseTransformString = function parseTransformString(transformString) {
  var transform = {
    size: 16,
    x: 0,
    y: 0,
    flipX: false,
    flipY: false,
    rotate: 0
  };

  if (!transformString) {
    return transform;
  } else {
    return transformString.toLowerCase().split(' ').reduce(function (acc, n) {
      var parts = n.toLowerCase().split('-');
      var first = parts[0];
      var rest = parts.slice(1).join('-');

      if (first && rest === 'h') {
        acc.flipX = true;
        return acc;
      }

      if (first && rest === 'v') {
        acc.flipY = true;
        return acc;
      }

      rest = parseFloat(rest);

      if (isNaN(rest)) {
        return acc;
      }

      switch (first) {
        case 'grow':
          acc.size = acc.size + rest;
          break;

        case 'shrink':
          acc.size = acc.size - rest;
          break;

        case 'left':
          acc.x = acc.x - rest;
          break;

        case 'right':
          acc.x = acc.x + rest;
          break;

        case 'up':
          acc.y = acc.y - rest;
          break;

        case 'down':
          acc.y = acc.y + rest;
          break;

        case 'rotate':
          acc.rotate = acc.rotate + rest;
          break;
      }

      return acc;
    }, transform);
  }
};

function transformParser(node) {
  return parseTransformString(node.getAttribute('data-fa-transform'));
}

function symbolParser(node) {
  var symbol = node.getAttribute('data-fa-symbol');
  return symbol === null ? false : symbol === '' ? true : symbol;
}

function attributesParser(node) {
  var extraAttributes = toArray(node.attributes).reduce(function (acc, attr) {
    if (acc.name !== 'class' && acc.name !== 'style') {
      acc[attr.name] = attr.value;
    }

    return acc;
  }, {});
  var title = node.getAttribute('title');

  if (config.autoA11y) {
    if (title) {
      extraAttributes['aria-labelledby'] = "".concat(config.replacementClass, "-title-").concat(nextUniqueId());
    } else {
      extraAttributes['aria-hidden'] = 'true';
      extraAttributes['focusable'] = 'false';
    }
  }

  return extraAttributes;
}

function maskParser(node) {
  var mask = node.getAttribute('data-fa-mask');

  if (!mask) {
    return emptyCanonicalIcon();
  } else {
    return getCanonicalIcon(mask.split(' ').map(function (i) {
      return i.trim();
    }));
  }
}

function blankMeta() {
  return {
    iconName: null,
    title: null,
    prefix: null,
    transform: meaninglessTransform,
    symbol: false,
    mask: null,
    extra: {
      classes: [],
      styles: {},
      attributes: {}
    }
  };
}

function parseMeta(node) {
  var _classParser = classParser(node),
      iconName = _classParser.iconName,
      prefix = _classParser.prefix,
      extraClasses = _classParser.rest;

  var extraStyles = styleParser(node);
  var transform = transformParser(node);
  var symbol = symbolParser(node);
  var extraAttributes = attributesParser(node);
  var mask = maskParser(node);
  return {
    iconName: iconName,
    title: node.getAttribute('title'),
    prefix: prefix,
    transform: transform,
    symbol: symbol,
    mask: mask,
    extra: {
      classes: extraClasses,
      styles: extraStyles,
      attributes: extraAttributes
    }
  };
}

function MissingIcon(error) {
  this.name = 'MissingIcon';
  this.message = error || 'Icon unavailable';
  this.stack = new Error().stack;
}

MissingIcon.prototype = Object.create(Error.prototype);
MissingIcon.prototype.constructor = MissingIcon;
var FILL = {
  fill: 'currentColor'
};
var ANIMATION_BASE = {
  attributeType: 'XML',
  repeatCount: 'indefinite',
  dur: '2s'
};
var RING = {
  tag: 'path',
  attributes: _objectSpread({}, FILL, {
    d: 'M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z'
  })
};

var OPACITY_ANIMATE = _objectSpread({}, ANIMATION_BASE, {
  attributeName: 'opacity'
});

var DOT = {
  tag: 'circle',
  attributes: _objectSpread({}, FILL, {
    cx: '256',
    cy: '364',
    r: '28'
  }),
  children: [{
    tag: 'animate',
    attributes: _objectSpread({}, ANIMATION_BASE, {
      attributeName: 'r',
      values: '28;14;28;28;14;28;'
    })
  }, {
    tag: 'animate',
    attributes: _objectSpread({}, OPACITY_ANIMATE, {
      values: '1;0;1;1;0;1;'
    })
  }]
};
var QUESTION = {
  tag: 'path',
  attributes: _objectSpread({}, FILL, {
    opacity: '1',
    d: 'M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z'
  }),
  children: [{
    tag: 'animate',
    attributes: _objectSpread({}, OPACITY_ANIMATE, {
      values: '1;0;0;0;0;1;'
    })
  }]
};
var EXCLAMATION = {
  tag: 'path',
  attributes: _objectSpread({}, FILL, {
    opacity: '0',
    d: 'M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z'
  }),
  children: [{
    tag: 'animate',
    attributes: _objectSpread({}, OPACITY_ANIMATE, {
      values: '0;0;1;1;0;0;'
    })
  }]
};
var missing = {
  tag: 'g',
  children: [RING, DOT, QUESTION, EXCLAMATION]
};
var styles$2 = namespace.styles;

function asFoundIcon(icon) {
  var width = icon[0];
  var height = icon[1];

  var _icon$slice = icon.slice(4),
      _icon$slice2 = _slicedToArray(_icon$slice, 1),
      vectorData = _icon$slice2[0];

  var element = null;

  if (Array.isArray(vectorData)) {
    element = {
      tag: 'g',
      attributes: {
        class: "".concat(config.familyPrefix, "-").concat(DUOTONE_CLASSES.GROUP)
      },
      children: [{
        tag: 'path',
        attributes: {
          class: "".concat(config.familyPrefix, "-").concat(DUOTONE_CLASSES.SECONDARY),
          fill: 'currentColor',
          d: vectorData[0]
        }
      }, {
        tag: 'path',
        attributes: {
          class: "".concat(config.familyPrefix, "-").concat(DUOTONE_CLASSES.PRIMARY),
          fill: 'currentColor',
          d: vectorData[1]
        }
      }]
    };
  } else {
    element = {
      tag: 'path',
      attributes: {
        fill: 'currentColor',
        d: vectorData
      }
    };
  }

  return {
    found: true,
    width: width,
    height: height,
    icon: element
  };
}

function findIcon(iconName, prefix) {
  return new picked(function (resolve, reject) {
    var val = {
      found: false,
      width: 512,
      height: 512,
      icon: missing
    };

    if (iconName && prefix && styles$2[prefix] && styles$2[prefix][iconName]) {
      var icon = styles$2[prefix][iconName];
      return resolve(asFoundIcon(icon));
    }

    var headers = {};

    if (_typeof(WINDOW.FontAwesomeKitConfig) === 'object' && typeof window.FontAwesomeKitConfig.token === 'string') {
      headers['fa-kit-token'] = WINDOW.FontAwesomeKitConfig.token;
    }

    if (iconName && prefix && !config.showMissingIcons) {
      reject(new MissingIcon("Icon is missing for prefix ".concat(prefix, " with icon name ").concat(iconName)));
    } else {
      resolve(val);
    }
  });
}

var styles$3 = namespace.styles;

function generateSvgReplacementMutation(node, nodeMeta) {
  var iconName = nodeMeta.iconName,
      title = nodeMeta.title,
      prefix = nodeMeta.prefix,
      transform = nodeMeta.transform,
      symbol = nodeMeta.symbol,
      mask = nodeMeta.mask,
      extra = nodeMeta.extra;
  return new picked(function (resolve, reject) {
    picked.all([findIcon(iconName, prefix), findIcon(mask.iconName, mask.prefix)]).then(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 2),
          main = _ref2[0],
          mask = _ref2[1];

      resolve([node, makeInlineSvgAbstract({
        icons: {
          main: main,
          mask: mask
        },
        prefix: prefix,
        iconName: iconName,
        transform: transform,
        symbol: symbol,
        mask: mask,
        title: title,
        extra: extra,
        watchable: true
      })]);
    });
  });
}

function generateLayersText(node, nodeMeta) {
  var title = nodeMeta.title,
      transform = nodeMeta.transform,
      extra = nodeMeta.extra;
  var width = null;
  var height = null;

  if (IS_IE) {
    var computedFontSize = parseInt(getComputedStyle(node).fontSize, 10);
    var boundingClientRect = node.getBoundingClientRect();
    width = boundingClientRect.width / computedFontSize;
    height = boundingClientRect.height / computedFontSize;
  }

  if (config.autoA11y && !title) {
    extra.attributes['aria-hidden'] = 'true';
  }

  return picked.resolve([node, makeLayersTextAbstract({
    content: node.innerHTML,
    width: width,
    height: height,
    transform: transform,
    title: title,
    extra: extra,
    watchable: true
  })]);
}

function generateMutation(node) {
  var nodeMeta = parseMeta(node);

  if (~nodeMeta.extra.classes.indexOf(LAYERS_TEXT_CLASSNAME)) {
    return generateLayersText(node, nodeMeta);
  } else {
    return generateSvgReplacementMutation(node, nodeMeta);
  }
}

function onTree(root) {
  var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
  if (!IS_DOM) return;
  var htmlClassList = DOCUMENT.documentElement.classList;

  var hclAdd = function hclAdd(suffix) {
    return htmlClassList.add("".concat(HTML_CLASS_I2SVG_BASE_CLASS, "-").concat(suffix));
  };

  var hclRemove = function hclRemove(suffix) {
    return htmlClassList.remove("".concat(HTML_CLASS_I2SVG_BASE_CLASS, "-").concat(suffix));
  };

  var prefixes = config.autoFetchSvg ? Object.keys(PREFIX_TO_STYLE) : Object.keys(styles$3);
  var prefixesDomQuery = [".".concat(LAYERS_TEXT_CLASSNAME, ":not([").concat(DATA_FA_I2SVG, "])")].concat(prefixes.map(function (p) {
    return ".".concat(p, ":not([").concat(DATA_FA_I2SVG, "])");
  })).join(', ');

  if (prefixesDomQuery.length === 0) {
    return;
  }

  var candidates = [];

  try {
    candidates = toArray(root.querySelectorAll(prefixesDomQuery));
  } catch (e) {// noop
  }

  if (candidates.length > 0) {
    hclAdd('pending');
    hclRemove('complete');
  } else {
    return;
  }

  var mark = perf.begin('onTree');
  var mutations = candidates.reduce(function (acc, node) {
    try {
      var mutation = generateMutation(node);

      if (mutation) {
        acc.push(mutation);
      }
    } catch (e) {
      if (!PRODUCTION) {
        if (e instanceof MissingIcon) {
          console.error(e);
        }
      }
    }

    return acc;
  }, []);
  return new picked(function (resolve, reject) {
    picked.all(mutations).then(function (resolvedMutations) {
      perform(resolvedMutations, function () {
        hclAdd('active');
        hclAdd('complete');
        hclRemove('pending');
        if (typeof callback === 'function') callback();
        mark();
        resolve();
      });
    }).catch(function () {
      mark();
      reject();
    });
  });
}

function onNode(node) {
  var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
  generateMutation(node).then(function (mutation) {
    if (mutation) {
      perform([mutation], callback);
    }
  });
}

function replaceForPosition(node, position) {
  var pendingAttribute = "".concat(DATA_FA_PSEUDO_ELEMENT_PENDING).concat(position.replace(':', '-'));
  return new picked(function (resolve, reject) {
    if (node.getAttribute(pendingAttribute) !== null) {
      // This node is already being processed
      return resolve();
    }

    var children = toArray(node.children);
    var alreadyProcessedPseudoElement = children.filter(function (c) {
      return c.getAttribute(DATA_FA_PSEUDO_ELEMENT) === position;
    })[0];
    var styles = WINDOW.getComputedStyle(node, position);
    var fontFamily = styles.getPropertyValue('font-family').match(FONT_FAMILY_PATTERN);
    var fontWeight = styles.getPropertyValue('font-weight');

    if (alreadyProcessedPseudoElement && !fontFamily) {
      // If we've already processed it but the current computed style does not result in a font-family,
      // that probably means that a class name that was previously present to make the icon has been
      // removed. So we now should delete the icon.
      node.removeChild(alreadyProcessedPseudoElement);
      return resolve();
    } else if (fontFamily) {
      var content = styles.getPropertyValue('content');
      var prefix = ~['Solid', 'Regular', 'Light', 'Duotone', 'Brands'].indexOf(fontFamily[1]) ? STYLE_TO_PREFIX[fontFamily[1].toLowerCase()] : FONT_WEIGHT_TO_PREFIX[fontWeight];
      var hexValue = toHex(content.length === 3 ? content.substr(1, 1) : content);
      var iconName = byUnicode(prefix, hexValue);
      var iconIdentifier = iconName; // Only convert the pseudo element in this :before/:after position into an icon if we haven't
      // already done so with the same prefix and iconName

      if (iconName && (!alreadyProcessedPseudoElement || alreadyProcessedPseudoElement.getAttribute(DATA_PREFIX) !== prefix || alreadyProcessedPseudoElement.getAttribute(DATA_ICON) !== iconIdentifier)) {
        node.setAttribute(pendingAttribute, iconIdentifier);

        if (alreadyProcessedPseudoElement) {
          // Delete the old one, since we're replacing it with a new one
          node.removeChild(alreadyProcessedPseudoElement);
        }

        var meta = blankMeta();
        var extra = meta.extra;
        extra.attributes[DATA_FA_PSEUDO_ELEMENT] = position;
        findIcon(iconName, prefix).then(function (main) {
          var abstract = makeInlineSvgAbstract(_objectSpread({}, meta, {
            icons: {
              main: main,
              mask: emptyCanonicalIcon()
            },
            prefix: prefix,
            iconName: iconIdentifier,
            extra: extra,
            watchable: true
          }));
          var element = DOCUMENT.createElement('svg');

          if (position === ':before') {
            node.insertBefore(element, node.firstChild);
          } else {
            node.appendChild(element);
          }

          element.outerHTML = abstract.map(function (a) {
            return toHtml(a);
          }).join('\n');
          node.removeAttribute(pendingAttribute);
          resolve();
        }).catch(reject);
      } else {
        resolve();
      }
    } else {
      resolve();
    }
  });
}

function replace(node) {
  return picked.all([replaceForPosition(node, ':before'), replaceForPosition(node, ':after')]);
}

function processable(node) {
  return node.parentNode !== document.head && !~TAGNAMES_TO_SKIP_FOR_PSEUDOELEMENTS.indexOf(node.tagName.toUpperCase()) && !node.getAttribute(DATA_FA_PSEUDO_ELEMENT) && (!node.parentNode || node.parentNode.tagName !== 'svg');
}

function searchPseudoElements(root) {
  if (!IS_DOM) return;
  return new picked(function (resolve, reject) {
    var operations = toArray(root.querySelectorAll('*')).filter(processable).map(replace);
    var end = perf.begin('searchPseudoElements');
    disableObservation();
    picked.all(operations).then(function () {
      end();
      enableObservation();
      resolve();
    }).catch(function () {
      end();
      enableObservation();
      reject();
    });
  });
}

var baseStyles = "svg:not(:root).svg-inline--fa {\n  overflow: visible;\n}\n\n.svg-inline--fa {\n  display: inline-block;\n  font-size: inherit;\n  height: 1em;\n  overflow: visible;\n  vertical-align: -0.125em;\n}\n.svg-inline--fa.fa-lg {\n  vertical-align: -0.225em;\n}\n.svg-inline--fa.fa-w-1 {\n  width: 0.0625em;\n}\n.svg-inline--fa.fa-w-2 {\n  width: 0.125em;\n}\n.svg-inline--fa.fa-w-3 {\n  width: 0.1875em;\n}\n.svg-inline--fa.fa-w-4 {\n  width: 0.25em;\n}\n.svg-inline--fa.fa-w-5 {\n  width: 0.3125em;\n}\n.svg-inline--fa.fa-w-6 {\n  width: 0.375em;\n}\n.svg-inline--fa.fa-w-7 {\n  width: 0.4375em;\n}\n.svg-inline--fa.fa-w-8 {\n  width: 0.5em;\n}\n.svg-inline--fa.fa-w-9 {\n  width: 0.5625em;\n}\n.svg-inline--fa.fa-w-10 {\n  width: 0.625em;\n}\n.svg-inline--fa.fa-w-11 {\n  width: 0.6875em;\n}\n.svg-inline--fa.fa-w-12 {\n  width: 0.75em;\n}\n.svg-inline--fa.fa-w-13 {\n  width: 0.8125em;\n}\n.svg-inline--fa.fa-w-14 {\n  width: 0.875em;\n}\n.svg-inline--fa.fa-w-15 {\n  width: 0.9375em;\n}\n.svg-inline--fa.fa-w-16 {\n  width: 1em;\n}\n.svg-inline--fa.fa-w-17 {\n  width: 1.0625em;\n}\n.svg-inline--fa.fa-w-18 {\n  width: 1.125em;\n}\n.svg-inline--fa.fa-w-19 {\n  width: 1.1875em;\n}\n.svg-inline--fa.fa-w-20 {\n  width: 1.25em;\n}\n.svg-inline--fa.fa-pull-left {\n  margin-right: 0.3em;\n  width: auto;\n}\n.svg-inline--fa.fa-pull-right {\n  margin-left: 0.3em;\n  width: auto;\n}\n.svg-inline--fa.fa-border {\n  height: 1.5em;\n}\n.svg-inline--fa.fa-li {\n  width: 2em;\n}\n.svg-inline--fa.fa-fw {\n  width: 1.25em;\n}\n\n.fa-layers svg.svg-inline--fa {\n  bottom: 0;\n  left: 0;\n  margin: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n\n.fa-layers {\n  display: inline-block;\n  height: 1em;\n  position: relative;\n  text-align: center;\n  vertical-align: -0.125em;\n  width: 1em;\n}\n.fa-layers svg.svg-inline--fa {\n  -webkit-transform-origin: center center;\n          transform-origin: center center;\n}\n\n.fa-layers-counter, .fa-layers-text {\n  display: inline-block;\n  position: absolute;\n  text-align: center;\n}\n\n.fa-layers-text {\n  left: 50%;\n  top: 50%;\n  -webkit-transform: translate(-50%, -50%);\n          transform: translate(-50%, -50%);\n  -webkit-transform-origin: center center;\n          transform-origin: center center;\n}\n\n.fa-layers-counter {\n  background-color: #ff253a;\n  border-radius: 1em;\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box;\n  color: #fff;\n  height: 1.5em;\n  line-height: 1;\n  max-width: 5em;\n  min-width: 1.5em;\n  overflow: hidden;\n  padding: 0.25em;\n  right: 0;\n  text-overflow: ellipsis;\n  top: 0;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: top right;\n          transform-origin: top right;\n}\n\n.fa-layers-bottom-right {\n  bottom: 0;\n  right: 0;\n  top: auto;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: bottom right;\n          transform-origin: bottom right;\n}\n\n.fa-layers-bottom-left {\n  bottom: 0;\n  left: 0;\n  right: auto;\n  top: auto;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: bottom left;\n          transform-origin: bottom left;\n}\n\n.fa-layers-top-right {\n  right: 0;\n  top: 0;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: top right;\n          transform-origin: top right;\n}\n\n.fa-layers-top-left {\n  left: 0;\n  right: auto;\n  top: 0;\n  -webkit-transform: scale(0.25);\n          transform: scale(0.25);\n  -webkit-transform-origin: top left;\n          transform-origin: top left;\n}\n\n.fa-lg {\n  font-size: 1.3333333333em;\n  line-height: 0.75em;\n  vertical-align: -0.0667em;\n}\n\n.fa-xs {\n  font-size: 0.75em;\n}\n\n.fa-sm {\n  font-size: 0.875em;\n}\n\n.fa-1x {\n  font-size: 1em;\n}\n\n.fa-2x {\n  font-size: 2em;\n}\n\n.fa-3x {\n  font-size: 3em;\n}\n\n.fa-4x {\n  font-size: 4em;\n}\n\n.fa-5x {\n  font-size: 5em;\n}\n\n.fa-6x {\n  font-size: 6em;\n}\n\n.fa-7x {\n  font-size: 7em;\n}\n\n.fa-8x {\n  font-size: 8em;\n}\n\n.fa-9x {\n  font-size: 9em;\n}\n\n.fa-10x {\n  font-size: 10em;\n}\n\n.fa-fw {\n  text-align: center;\n  width: 1.25em;\n}\n\n.fa-ul {\n  list-style-type: none;\n  margin-left: 2.5em;\n  padding-left: 0;\n}\n.fa-ul > li {\n  position: relative;\n}\n\n.fa-li {\n  left: -2em;\n  position: absolute;\n  text-align: center;\n  width: 2em;\n  line-height: inherit;\n}\n\n.fa-border {\n  border: solid 0.08em #eee;\n  border-radius: 0.1em;\n  padding: 0.2em 0.25em 0.15em;\n}\n\n.fa-pull-left {\n  float: left;\n}\n\n.fa-pull-right {\n  float: right;\n}\n\n.fa.fa-pull-left,\n.fas.fa-pull-left,\n.far.fa-pull-left,\n.fal.fa-pull-left,\n.fab.fa-pull-left {\n  margin-right: 0.3em;\n}\n.fa.fa-pull-right,\n.fas.fa-pull-right,\n.far.fa-pull-right,\n.fal.fa-pull-right,\n.fab.fa-pull-right {\n  margin-left: 0.3em;\n}\n\n.fa-spin {\n  -webkit-animation: fa-spin 2s infinite linear;\n          animation: fa-spin 2s infinite linear;\n}\n\n.fa-pulse {\n  -webkit-animation: fa-spin 1s infinite steps(8);\n          animation: fa-spin 1s infinite steps(8);\n}\n\n@-webkit-keyframes fa-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n\n@keyframes fa-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n.fa-rotate-90 {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=1)\";\n  -webkit-transform: rotate(90deg);\n          transform: rotate(90deg);\n}\n\n.fa-rotate-180 {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=2)\";\n  -webkit-transform: rotate(180deg);\n          transform: rotate(180deg);\n}\n\n.fa-rotate-270 {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=3)\";\n  -webkit-transform: rotate(270deg);\n          transform: rotate(270deg);\n}\n\n.fa-flip-horizontal {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)\";\n  -webkit-transform: scale(-1, 1);\n          transform: scale(-1, 1);\n}\n\n.fa-flip-vertical {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)\";\n  -webkit-transform: scale(1, -1);\n          transform: scale(1, -1);\n}\n\n.fa-flip-both, .fa-flip-horizontal.fa-flip-vertical {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)\";\n  -webkit-transform: scale(-1, -1);\n          transform: scale(-1, -1);\n}\n\n:root .fa-rotate-90,\n:root .fa-rotate-180,\n:root .fa-rotate-270,\n:root .fa-flip-horizontal,\n:root .fa-flip-vertical,\n:root .fa-flip-both {\n  -webkit-filter: none;\n          filter: none;\n}\n\n.fa-stack {\n  display: inline-block;\n  height: 2em;\n  position: relative;\n  width: 2.5em;\n}\n\n.fa-stack-1x,\n.fa-stack-2x {\n  bottom: 0;\n  left: 0;\n  margin: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n\n.svg-inline--fa.fa-stack-1x {\n  height: 1em;\n  width: 1.25em;\n}\n.svg-inline--fa.fa-stack-2x {\n  height: 2em;\n  width: 2.5em;\n}\n\n.fa-inverse {\n  color: #fff;\n}\n\n.sr-only {\n  border: 0;\n  clip: rect(0, 0, 0, 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n.sr-only-focusable:active, .sr-only-focusable:focus {\n  clip: auto;\n  height: auto;\n  margin: 0;\n  overflow: visible;\n  position: static;\n  width: auto;\n}\n\n.svg-inline--fa .fa-primary {\n  fill: var(--fa-primary-color, currentColor);\n  opacity: 1;\n  opacity: var(--fa-primary-opacity, 1);\n}\n\n.svg-inline--fa .fa-secondary {\n  fill: var(--fa-secondary-color, currentColor);\n  opacity: 0.4;\n  opacity: var(--fa-secondary-opacity, 0.4);\n}\n\n.svg-inline--fa.fa-swap-opacity .fa-primary {\n  opacity: 0.4;\n  opacity: var(--fa-secondary-opacity, 0.4);\n}\n\n.svg-inline--fa.fa-swap-opacity .fa-secondary {\n  opacity: 1;\n  opacity: var(--fa-primary-opacity, 1);\n}\n\n.svg-inline--fa mask .fa-primary,\n.svg-inline--fa mask .fa-secondary {\n  fill: black;\n}\n\n.fad.fa-inverse {\n  color: #fff;\n}";

function css() {
  var dfp = DEFAULT_FAMILY_PREFIX;
  var drc = DEFAULT_REPLACEMENT_CLASS;
  var fp = config.familyPrefix;
  var rc = config.replacementClass;
  var s = baseStyles;

  if (fp !== dfp || rc !== drc) {
    var dPatt = new RegExp("\\.".concat(dfp, "\\-"), 'g');
    var customPropPatt = new RegExp("\\--".concat(dfp, "\\-"), 'g');
    var rPatt = new RegExp("\\.".concat(drc), 'g');
    s = s.replace(dPatt, ".".concat(fp, "-")).replace(customPropPatt, "--".concat(fp, "-")).replace(rPatt, ".".concat(rc));
  }

  return s;
}

var Library =
/*#__PURE__*/
function () {
  function Library() {
    _classCallCheck(this, Library);

    this.definitions = {};
  }

  _createClass(Library, [{
    key: "add",
    value: function add() {
      var _this = this;

      for (var _len = arguments.length, definitions = new Array(_len), _key = 0; _key < _len; _key++) {
        definitions[_key] = arguments[_key];
      }

      var additions = definitions.reduce(this._pullDefinitions, {});
      Object.keys(additions).forEach(function (key) {
        _this.definitions[key] = _objectSpread({}, _this.definitions[key] || {}, additions[key]);
        defineIcons(key, additions[key]);
        build();
      });
    }
  }, {
    key: "reset",
    value: function reset() {
      this.definitions = {};
    }
  }, {
    key: "_pullDefinitions",
    value: function _pullDefinitions(additions, definition) {
      var normalized = definition.prefix && definition.iconName && definition.icon ? {
        0: definition
      } : definition;
      Object.keys(normalized).map(function (key) {
        var _normalized$key = normalized[key],
            prefix = _normalized$key.prefix,
            iconName = _normalized$key.iconName,
            icon = _normalized$key.icon;
        if (!additions[prefix]) additions[prefix] = {};
        additions[prefix][iconName] = icon;
      });
      return additions;
    }
  }]);

  return Library;
}();

function ensureCss() {
  if (config.autoAddCss && !_cssInserted) {
    insertCss(css());
    _cssInserted = true;
  }
}

function apiObject(val, abstractCreator) {
  Object.defineProperty(val, 'abstract', {
    get: abstractCreator
  });
  Object.defineProperty(val, 'html', {
    get: function get() {
      return val.abstract.map(function (a) {
        return toHtml(a);
      });
    }
  });
  Object.defineProperty(val, 'node', {
    get: function get() {
      if (!IS_DOM) return;
      var container = DOCUMENT.createElement('div');
      container.innerHTML = val.html;
      return container.children;
    }
  });
  return val;
}

function findIconDefinition(iconLookup) {
  var _iconLookup$prefix = iconLookup.prefix,
      prefix = _iconLookup$prefix === void 0 ? 'fa' : _iconLookup$prefix,
      iconName = iconLookup.iconName;
  if (!iconName) return;
  return iconFromMapping(library.definitions, prefix, iconName) || iconFromMapping(namespace.styles, prefix, iconName);
}

function resolveIcons(next) {
  return function (maybeIconDefinition) {
    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var iconDefinition = (maybeIconDefinition || {}).icon ? maybeIconDefinition : findIconDefinition(maybeIconDefinition || {});
    var mask = params.mask;

    if (mask) {
      mask = (mask || {}).icon ? mask : findIconDefinition(mask || {});
    }

    return next(iconDefinition, _objectSpread({}, params, {
      mask: mask
    }));
  };
}

var library = new Library();
exports.library = library;

var noAuto = function noAuto() {
  config.autoReplaceSvg = false;
  config.observeMutations = false;
  disconnect();
};

exports.noAuto = noAuto;
var _cssInserted = false;
var dom = {
  i2svg: function i2svg() {
    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    if (IS_DOM) {
      ensureCss();
      var _params$node = params.node,
          node = _params$node === void 0 ? DOCUMENT : _params$node,
          _params$callback = params.callback,
          callback = _params$callback === void 0 ? function () {} : _params$callback;

      if (config.searchPseudoElements) {
        searchPseudoElements(node);
      }

      return onTree(node, callback);
    } else {
      return picked.reject('Operation requires a DOM of some kind.');
    }
  },
  css: css,
  insertCss: function insertCss$$1() {
    if (!_cssInserted) {
      insertCss(css());
      _cssInserted = true;
    }
  },
  watch: function watch() {
    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var autoReplaceSvgRoot = params.autoReplaceSvgRoot,
        observeMutationsRoot = params.observeMutationsRoot;

    if (config.autoReplaceSvg === false) {
      config.autoReplaceSvg = true;
    }

    config.observeMutations = true;
    domready(function () {
      autoReplace({
        autoReplaceSvgRoot: autoReplaceSvgRoot
      });
      observe({
        treeCallback: onTree,
        nodeCallback: onNode,
        pseudoElementsCallback: searchPseudoElements,
        observeMutationsRoot: observeMutationsRoot
      });
    });
  }
};
exports.dom = dom;
var parse = {
  transform: function transform(transformString) {
    return parseTransformString(transformString);
  }
};
exports.parse = parse;
var icon = resolveIcons(function (iconDefinition) {
  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var _params$transform = params.transform,
      transform = _params$transform === void 0 ? meaninglessTransform : _params$transform,
      _params$symbol = params.symbol,
      symbol = _params$symbol === void 0 ? false : _params$symbol,
      _params$mask = params.mask,
      mask = _params$mask === void 0 ? null : _params$mask,
      _params$title = params.title,
      title = _params$title === void 0 ? null : _params$title,
      _params$classes = params.classes,
      classes = _params$classes === void 0 ? [] : _params$classes,
      _params$attributes = params.attributes,
      attributes = _params$attributes === void 0 ? {} : _params$attributes,
      _params$styles = params.styles,
      styles = _params$styles === void 0 ? {} : _params$styles;
  if (!iconDefinition) return;
  var prefix = iconDefinition.prefix,
      iconName = iconDefinition.iconName,
      icon = iconDefinition.icon;
  return apiObject(_objectSpread({
    type: 'icon'
  }, iconDefinition), function () {
    ensureCss();

    if (config.autoA11y) {
      if (title) {
        attributes['aria-labelledby'] = "".concat(config.replacementClass, "-title-").concat(nextUniqueId());
      } else {
        attributes['aria-hidden'] = 'true';
        attributes['focusable'] = 'false';
      }
    }

    return makeInlineSvgAbstract({
      icons: {
        main: asFoundIcon(icon),
        mask: mask ? asFoundIcon(mask.icon) : {
          found: false,
          width: null,
          height: null,
          icon: {}
        }
      },
      prefix: prefix,
      iconName: iconName,
      transform: _objectSpread({}, meaninglessTransform, transform),
      symbol: symbol,
      title: title,
      extra: {
        attributes: attributes,
        styles: styles,
        classes: classes
      }
    });
  });
});
exports.icon = icon;

var text = function text(content) {
  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var _params$transform2 = params.transform,
      transform = _params$transform2 === void 0 ? meaninglessTransform : _params$transform2,
      _params$title2 = params.title,
      title = _params$title2 === void 0 ? null : _params$title2,
      _params$classes2 = params.classes,
      classes = _params$classes2 === void 0 ? [] : _params$classes2,
      _params$attributes2 = params.attributes,
      attributes = _params$attributes2 === void 0 ? {} : _params$attributes2,
      _params$styles2 = params.styles,
      styles = _params$styles2 === void 0 ? {} : _params$styles2;
  return apiObject({
    type: 'text',
    content: content
  }, function () {
    ensureCss();
    return makeLayersTextAbstract({
      content: content,
      transform: _objectSpread({}, meaninglessTransform, transform),
      title: title,
      extra: {
        attributes: attributes,
        styles: styles,
        classes: ["".concat(config.familyPrefix, "-layers-text")].concat(_toConsumableArray(classes))
      }
    });
  });
};

exports.text = text;

var counter = function counter(content) {
  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var _params$title3 = params.title,
      title = _params$title3 === void 0 ? null : _params$title3,
      _params$classes3 = params.classes,
      classes = _params$classes3 === void 0 ? [] : _params$classes3,
      _params$attributes3 = params.attributes,
      attributes = _params$attributes3 === void 0 ? {} : _params$attributes3,
      _params$styles3 = params.styles,
      styles = _params$styles3 === void 0 ? {} : _params$styles3;
  return apiObject({
    type: 'counter',
    content: content
  }, function () {
    ensureCss();
    return makeLayersCounterAbstract({
      content: content.toString(),
      title: title,
      extra: {
        attributes: attributes,
        styles: styles,
        classes: ["".concat(config.familyPrefix, "-layers-counter")].concat(_toConsumableArray(classes))
      }
    });
  });
};

exports.counter = counter;

var layer = function layer(assembler) {
  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var _params$classes4 = params.classes,
      classes = _params$classes4 === void 0 ? [] : _params$classes4;
  return apiObject({
    type: 'layer'
  }, function () {
    ensureCss();
    var children = [];
    assembler(function (args) {
      Array.isArray(args) ? args.map(function (a) {
        children = children.concat(a.abstract);
      }) : children = children.concat(args.abstract);
    });
    return [{
      tag: 'span',
      attributes: {
        class: ["".concat(config.familyPrefix, "-layers")].concat(_toConsumableArray(classes)).join(' ')
      },
      children: children
    }];
  });
};

exports.layer = layer;
var api = {
  noAuto: noAuto,
  config: config,
  dom: dom,
  library: library,
  parse: parse,
  findIconDefinition: findIconDefinition,
  icon: icon,
  text: text,
  counter: counter,
  layer: layer,
  toHtml: toHtml
};

var autoReplace = function autoReplace() {
  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var _params$autoReplaceSv = params.autoReplaceSvgRoot,
      autoReplaceSvgRoot = _params$autoReplaceSv === void 0 ? DOCUMENT : _params$autoReplaceSv;
  if ((Object.keys(namespace.styles).length > 0 || config.autoFetchSvg) && IS_DOM && config.autoReplaceSvg) api.dom.i2svg({
    node: autoReplaceSvgRoot
  });
};
},{}],"../node_modules/react-is/cjs/react-is.development.js":[function(require,module,exports) {
/** @license React v16.10.2
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
'use strict';

if ("development" !== "production") {
  (function () {
    'use strict';

    Object.defineProperty(exports, '__esModule', {
      value: true
    }); // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.

    var hasSymbol = typeof Symbol === 'function' && Symbol.for;
    var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
    var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
    var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
    var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
    var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
    var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
    var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
    // (unstable) APIs that have been removed. Can we remove the symbols?

    var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
    var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
    var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
    var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
    var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
    var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
    var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
    var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
    var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
    var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

    function isValidElementType(type) {
      return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE);
    }
    /**
     * Forked from fbjs/warning:
     * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
     *
     * Only change is we use console.warn instead of console.error,
     * and do nothing when 'console' is not supported.
     * This really simplifies the code.
     * ---
     * Similar to invariant but only logs a warning if the condition is not met.
     * This can be used to log issues in development environments in critical
     * paths. Removing the logging code for production environments will keep the
     * same logic and follow the same code paths.
     */


    var lowPriorityWarningWithoutStack = function () {};

    {
      var printWarning = function (format) {
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        var argIndex = 0;
        var message = 'Warning: ' + format.replace(/%s/g, function () {
          return args[argIndex++];
        });

        if (typeof console !== 'undefined') {
          console.warn(message);
        }

        try {
          // --- Welcome to debugging React ---
          // This error was thrown as a convenience so that you can use this stack
          // to find the callsite that caused this warning to fire.
          throw new Error(message);
        } catch (x) {}
      };

      lowPriorityWarningWithoutStack = function (condition, format) {
        if (format === undefined) {
          throw new Error('`lowPriorityWarningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');
        }

        if (!condition) {
          for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
            args[_key2 - 2] = arguments[_key2];
          }

          printWarning.apply(void 0, [format].concat(args));
        }
      };
    }
    var lowPriorityWarningWithoutStack$1 = lowPriorityWarningWithoutStack;

    function typeOf(object) {
      if (typeof object === 'object' && object !== null) {
        var $$typeof = object.$$typeof;

        switch ($$typeof) {
          case REACT_ELEMENT_TYPE:
            var type = object.type;

            switch (type) {
              case REACT_ASYNC_MODE_TYPE:
              case REACT_CONCURRENT_MODE_TYPE:
              case REACT_FRAGMENT_TYPE:
              case REACT_PROFILER_TYPE:
              case REACT_STRICT_MODE_TYPE:
              case REACT_SUSPENSE_TYPE:
                return type;

              default:
                var $$typeofType = type && type.$$typeof;

                switch ($$typeofType) {
                  case REACT_CONTEXT_TYPE:
                  case REACT_FORWARD_REF_TYPE:
                  case REACT_PROVIDER_TYPE:
                    return $$typeofType;

                  default:
                    return $$typeof;
                }

            }

          case REACT_LAZY_TYPE:
          case REACT_MEMO_TYPE:
          case REACT_PORTAL_TYPE:
            return $$typeof;
        }
      }

      return undefined;
    } // AsyncMode is deprecated along with isAsyncMode


    var AsyncMode = REACT_ASYNC_MODE_TYPE;
    var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
    var ContextConsumer = REACT_CONTEXT_TYPE;
    var ContextProvider = REACT_PROVIDER_TYPE;
    var Element = REACT_ELEMENT_TYPE;
    var ForwardRef = REACT_FORWARD_REF_TYPE;
    var Fragment = REACT_FRAGMENT_TYPE;
    var Lazy = REACT_LAZY_TYPE;
    var Memo = REACT_MEMO_TYPE;
    var Portal = REACT_PORTAL_TYPE;
    var Profiler = REACT_PROFILER_TYPE;
    var StrictMode = REACT_STRICT_MODE_TYPE;
    var Suspense = REACT_SUSPENSE_TYPE;
    var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

    function isAsyncMode(object) {
      {
        if (!hasWarnedAboutDeprecatedIsAsyncMode) {
          hasWarnedAboutDeprecatedIsAsyncMode = true;
          lowPriorityWarningWithoutStack$1(false, 'The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
        }
      }
      return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
    }

    function isConcurrentMode(object) {
      return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
    }

    function isContextConsumer(object) {
      return typeOf(object) === REACT_CONTEXT_TYPE;
    }

    function isContextProvider(object) {
      return typeOf(object) === REACT_PROVIDER_TYPE;
    }

    function isElement(object) {
      return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }

    function isForwardRef(object) {
      return typeOf(object) === REACT_FORWARD_REF_TYPE;
    }

    function isFragment(object) {
      return typeOf(object) === REACT_FRAGMENT_TYPE;
    }

    function isLazy(object) {
      return typeOf(object) === REACT_LAZY_TYPE;
    }

    function isMemo(object) {
      return typeOf(object) === REACT_MEMO_TYPE;
    }

    function isPortal(object) {
      return typeOf(object) === REACT_PORTAL_TYPE;
    }

    function isProfiler(object) {
      return typeOf(object) === REACT_PROFILER_TYPE;
    }

    function isStrictMode(object) {
      return typeOf(object) === REACT_STRICT_MODE_TYPE;
    }

    function isSuspense(object) {
      return typeOf(object) === REACT_SUSPENSE_TYPE;
    }

    exports.typeOf = typeOf;
    exports.AsyncMode = AsyncMode;
    exports.ConcurrentMode = ConcurrentMode;
    exports.ContextConsumer = ContextConsumer;
    exports.ContextProvider = ContextProvider;
    exports.Element = Element;
    exports.ForwardRef = ForwardRef;
    exports.Fragment = Fragment;
    exports.Lazy = Lazy;
    exports.Memo = Memo;
    exports.Portal = Portal;
    exports.Profiler = Profiler;
    exports.StrictMode = StrictMode;
    exports.Suspense = Suspense;
    exports.isValidElementType = isValidElementType;
    exports.isAsyncMode = isAsyncMode;
    exports.isConcurrentMode = isConcurrentMode;
    exports.isContextConsumer = isContextConsumer;
    exports.isContextProvider = isContextProvider;
    exports.isElement = isElement;
    exports.isForwardRef = isForwardRef;
    exports.isFragment = isFragment;
    exports.isLazy = isLazy;
    exports.isMemo = isMemo;
    exports.isPortal = isPortal;
    exports.isProfiler = isProfiler;
    exports.isStrictMode = isStrictMode;
    exports.isSuspense = isSuspense;
  })();
}
},{}],"../node_modules/react-is/index.js":[function(require,module,exports) {
'use strict';

if ("development" === 'production') {
  module.exports = require('./cjs/react-is.production.min.js');
} else {
  module.exports = require('./cjs/react-is.development.js');
}
},{"./cjs/react-is.development.js":"../node_modules/react-is/cjs/react-is.development.js"}],"../node_modules/prop-types/factoryWithTypeCheckers.js":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
'use strict';

var ReactIs = require('react-is');

var assign = require('object-assign');

var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');

var checkPropTypes = require('./checkPropTypes');

var has = Function.call.bind(Object.prototype.hasOwnProperty);

var printWarning = function () {};

if ("development" !== 'production') {
  printWarning = function (text) {
    var message = 'Warning: ' + text;

    if (typeof console !== 'undefined') {
      console.error(message);
    }

    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

function emptyFunctionThatReturnsNull() {
  return null;
}

module.exports = function (isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */

  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);

    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }
  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */


  var ANONYMOUS = '<<anonymous>>'; // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.

  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),
    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    elementType: createElementTypeTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker
  };
  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */

  /*eslint-disable no-self-compare*/

  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */


  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  } // Make `instanceof Error` still work for returned errors.


  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if ("development" !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }

    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
          err.name = 'Invariant Violation';
          throw err;
        } else if ("development" !== 'production' && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;

          if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
          manualPropTypeWarningCount < 3) {
            printWarning('You are manually calling a React.PropTypes validation ' + 'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.');
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }

      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }

          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }

        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);
    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);

      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }

      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }

      var propValue = props[propName];

      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }

      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);

        if (error instanceof Error) {
          return error;
        }
      }

      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];

      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }

      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function createElementTypeTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];

      if (!ReactIs.isValidElementType(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
      }

      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }

      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      if ("development" !== 'production') {
        if (arguments.length > 1) {
          printWarning('Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' + 'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).');
        } else {
          printWarning('Invalid argument supplied to oneOf, expected an array.');
        }
      }

      return emptyFunctionThatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];

      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
        var type = getPreciseType(value);

        if (type === 'symbol') {
          return String(value);
        }

        return value;
      });
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }

    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }

      var propValue = props[propName];
      var propType = getPropType(propValue);

      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }

      for (var key in propValue) {
        if (has(propValue, key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);

          if (error instanceof Error) {
            return error;
          }
        }
      }

      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      "development" !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunctionThatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];

      if (typeof checker !== 'function') {
        printWarning('Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.');
        return emptyFunctionThatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];

        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }

    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }

      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);

      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }

      for (var key in shapeTypes) {
        var checker = shapeTypes[key];

        if (!checker) {
          continue;
        }

        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);

        if (error) {
          return error;
        }
      }

      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);

      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      } // We need to check all keys in case some are required but missing from
      // props.


      var allKeys = assign({}, props[propName], shapeTypes);

      for (var key in allKeys) {
        var checker = shapeTypes[key];

        if (!checker) {
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
        }

        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);

        if (error) {
          return error;
        }
      }

      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;

      case 'boolean':
        return !propValue;

      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }

        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);

        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;

          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;

              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;

      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    } // falsy value can't be a Symbol


    if (!propValue) {
      return false;
    } // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'


    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    } // Fallback for non-spec compliant Symbols which are polyfilled.


    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  } // Equivalent of `typeof` but with special handling for array and regexp.


  function getPropType(propValue) {
    var propType = typeof propValue;

    if (Array.isArray(propValue)) {
      return 'array';
    }

    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }

    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }

    return propType;
  } // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.


  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }

    var propType = getPropType(propValue);

    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }

    return propType;
  } // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"


  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);

    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;

      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;

      default:
        return type;
    }
  } // Returns class name of the object, if any.


  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }

    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
  ReactPropTypes.PropTypes = ReactPropTypes;
  return ReactPropTypes;
};
},{"react-is":"../node_modules/react-is/index.js","object-assign":"../node_modules/object-assign/index.js","./lib/ReactPropTypesSecret":"../node_modules/prop-types/lib/ReactPropTypesSecret.js","./checkPropTypes":"../node_modules/prop-types/checkPropTypes.js"}],"../node_modules/prop-types/index.js":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
if ("development" !== 'production') {
  var ReactIs = require('react-is'); // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod


  var throwOnDirectAccess = true;
  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = require('./factoryWithThrowingShims')();
}
},{"react-is":"../node_modules/react-is/index.js","./factoryWithTypeCheckers":"../node_modules/prop-types/factoryWithTypeCheckers.js"}],"../node_modules/@fortawesome/react-fontawesome/index.es.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FontAwesomeIcon = FontAwesomeIcon;

var _fontawesomeSvgCore = require("@fortawesome/fontawesome-svg-core");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function (obj) {
      return typeof obj;
    };
  } else {
    _typeof = function (obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];

    return arr2;
  }
}

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
} // Get CSS class list from a props object


function classList(props) {
  var _classes;

  var spin = props.spin,
      pulse = props.pulse,
      fixedWidth = props.fixedWidth,
      inverse = props.inverse,
      border = props.border,
      listItem = props.listItem,
      flip = props.flip,
      size = props.size,
      rotation = props.rotation,
      pull = props.pull; // map of CSS class names to properties

  var classes = (_classes = {
    'fa-spin': spin,
    'fa-pulse': pulse,
    'fa-fw': fixedWidth,
    'fa-inverse': inverse,
    'fa-border': border,
    'fa-li': listItem,
    'fa-flip-horizontal': flip === 'horizontal' || flip === 'both',
    'fa-flip-vertical': flip === 'vertical' || flip === 'both'
  }, _defineProperty(_classes, "fa-".concat(size), typeof size !== 'undefined' && size !== null), _defineProperty(_classes, "fa-rotate-".concat(rotation), typeof rotation !== 'undefined' && rotation !== null), _defineProperty(_classes, "fa-pull-".concat(pull), typeof pull !== 'undefined' && pull !== null), _defineProperty(_classes, 'fa-swap-opacity', props.swapOpacity), _classes); // map over all the keys in the classes object
  // return an array of the keys where the value for the key is not null

  return Object.keys(classes).map(function (key) {
    return classes[key] ? key : null;
  }).filter(function (key) {
    return key;
  });
} // Camelize taken from humps
// humps is copyright © 2012+ Dom Christie
// Released under the MIT license.
// Performant way to determine if object coerces to a number


function _isNumerical(obj) {
  obj = obj - 0; // eslint-disable-next-line no-self-compare

  return obj === obj;
}

function camelize(string) {
  if (_isNumerical(string)) {
    return string;
  } // eslint-disable-next-line no-useless-escape


  string = string.replace(/[\-_\s]+(.)?/g, function (match, chr) {
    return chr ? chr.toUpperCase() : '';
  }); // Ensure 1st char is always lowercase

  return string.substr(0, 1).toLowerCase() + string.substr(1);
}

function capitalize(val) {
  return val.charAt(0).toUpperCase() + val.slice(1);
}

function styleToObject(style) {
  return style.split(';').map(function (s) {
    return s.trim();
  }).filter(function (s) {
    return s;
  }).reduce(function (acc, pair) {
    var i = pair.indexOf(':');
    var prop = camelize(pair.slice(0, i));
    var value = pair.slice(i + 1).trim();
    prop.startsWith('webkit') ? acc[capitalize(prop)] = value : acc[prop] = value;
    return acc;
  }, {});
}

function convert(createElement, element) {
  var extraProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  if (typeof element === 'string') {
    return element;
  }

  var children = (element.children || []).map(function (child) {
    return convert(createElement, child);
  });
  var mixins = Object.keys(element.attributes || {}).reduce(function (acc, key) {
    var val = element.attributes[key];

    switch (key) {
      case 'class':
        acc.attrs['className'] = val;
        delete element.attributes['class'];
        break;

      case 'style':
        acc.attrs['style'] = styleToObject(val);
        break;

      default:
        if (key.indexOf('aria-') === 0 || key.indexOf('data-') === 0) {
          acc.attrs[key.toLowerCase()] = val;
        } else {
          acc.attrs[camelize(key)] = val;
        }

    }

    return acc;
  }, {
    attrs: {}
  });

  var _extraProps$style = extraProps.style,
      existingStyle = _extraProps$style === void 0 ? {} : _extraProps$style,
      remaining = _objectWithoutProperties(extraProps, ["style"]);

  mixins.attrs['style'] = _objectSpread({}, mixins.attrs['style'], existingStyle);
  return createElement.apply(void 0, [element.tag, _objectSpread({}, mixins.attrs, remaining)].concat(_toConsumableArray(children)));
}

var PRODUCTION = false;

try {
  PRODUCTION = "development" === 'production';
} catch (e) {}

function log() {
  if (!PRODUCTION && console && typeof console.error === 'function') {
    var _console;

    (_console = console).error.apply(_console, arguments);
  }
} // Normalize icon arguments


function normalizeIconArgs(icon$$1) {
  // if the icon is null, there's nothing to do
  if (icon$$1 === null) {
    return null;
  } // if the icon is an object and has a prefix and an icon name, return it


  if (_typeof(icon$$1) === 'object' && icon$$1.prefix && icon$$1.iconName) {
    return icon$$1;
  } // if it's an array with length of two


  if (Array.isArray(icon$$1) && icon$$1.length === 2) {
    // use the first item as prefix, second as icon name
    return {
      prefix: icon$$1[0],
      iconName: icon$$1[1]
    };
  } // if it's a string, use it as the icon name


  if (typeof icon$$1 === 'string') {
    return {
      prefix: 'fas',
      iconName: icon$$1
    };
  }
} // creates an object with a key of key
// and a value of value
// if certain conditions are met


function objectWithKey(key, value) {
  // if the value is a non-empty array
  // or it's not an array but it is truthy
  // then create the object with the key and the value
  // if not, return an empty array
  return Array.isArray(value) && value.length > 0 || !Array.isArray(value) && value ? _defineProperty({}, key, value) : {};
}

function FontAwesomeIcon(props) {
  var iconArgs = props.icon,
      maskArgs = props.mask,
      symbol = props.symbol,
      className = props.className,
      title = props.title;
  var iconLookup = normalizeIconArgs(iconArgs);
  var classes = objectWithKey('classes', [].concat(_toConsumableArray(classList(props)), _toConsumableArray(className.split(' '))));
  var transform = objectWithKey('transform', typeof props.transform === 'string' ? _fontawesomeSvgCore.parse.transform(props.transform) : props.transform);
  var mask = objectWithKey('mask', normalizeIconArgs(maskArgs));
  var renderedIcon = (0, _fontawesomeSvgCore.icon)(iconLookup, _objectSpread({}, classes, transform, mask, {
    symbol: symbol,
    title: title
  }));

  if (!renderedIcon) {
    log('Could not find icon', iconLookup);
    return null;
  }

  var abstract = renderedIcon.abstract;
  var extraProps = {};
  Object.keys(props).forEach(function (key) {
    if (!FontAwesomeIcon.defaultProps.hasOwnProperty(key)) {
      extraProps[key] = props[key];
    }
  });
  return convertCurry(abstract[0], extraProps);
}

FontAwesomeIcon.displayName = 'FontAwesomeIcon';
FontAwesomeIcon.propTypes = {
  border: _propTypes.default.bool,
  className: _propTypes.default.string,
  mask: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array, _propTypes.default.string]),
  fixedWidth: _propTypes.default.bool,
  inverse: _propTypes.default.bool,
  flip: _propTypes.default.oneOf(['horizontal', 'vertical', 'both']),
  icon: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array, _propTypes.default.string]),
  listItem: _propTypes.default.bool,
  pull: _propTypes.default.oneOf(['right', 'left']),
  pulse: _propTypes.default.bool,
  rotation: _propTypes.default.oneOf([90, 180, 270]),
  size: _propTypes.default.oneOf(['lg', 'xs', 'sm', '1x', '2x', '3x', '4x', '5x', '6x', '7x', '8x', '9x', '10x']),
  spin: _propTypes.default.bool,
  symbol: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string]),
  title: _propTypes.default.string,
  transform: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object]),
  swapOpacity: _propTypes.default.bool
};
FontAwesomeIcon.defaultProps = {
  border: false,
  className: '',
  mask: null,
  fixedWidth: false,
  inverse: false,
  flip: null,
  icon: null,
  listItem: false,
  pull: null,
  pulse: false,
  rotation: null,
  size: null,
  spin: false,
  symbol: false,
  title: '',
  transform: null,
  swapOpacity: false
};
var convertCurry = convert.bind(null, _react.default.createElement);
},{"@fortawesome/fontawesome-svg-core":"../node_modules/@fortawesome/fontawesome-svg-core/index.es.js","prop-types":"../node_modules/prop-types/index.js","react":"../node_modules/react/index.js"}],"TextWithIcon.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactFontawesome = require("@fortawesome/react-fontawesome");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TextWithIcon(_ref) {
  var icon = _ref.icon,
      children = _ref.children;
  return _react.default.createElement("span", null, _react.default.createElement(_reactFontawesome.FontAwesomeIcon, {
    icon: ["fad", icon],
    className: "icon"
  }), " ", children);
}

var _default = TextWithIcon;
exports.default = _default;
},{"react":"../node_modules/react/index.js","@fortawesome/react-fontawesome":"../node_modules/@fortawesome/react-fontawesome/index.es.js"}],"Header.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _TextWithIcon = _interopRequireDefault(require("./TextWithIcon"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Header(_ref) {
  var aboutData = _ref.aboutData;
  var name = aboutData.name,
      phone = aboutData.phone,
      email = aboutData.email,
      github = aboutData.github;
  return _react.default.createElement("div", {
    className: "header-container"
  }, _react.default.createElement("h1", null, name), _react.default.createElement("div", {
    className: "header-info"
  }, _react.default.createElement(_TextWithIcon.default, {
    icon: "phone"
  }, phone), _react.default.createElement(_TextWithIcon.default, {
    icon: "envelope"
  }, _react.default.createElement("a", {
    href: "mailto:".concat(email)
  }, email)), _react.default.createElement(_TextWithIcon.default, {
    icon: "link"
  }, _react.default.createElement("a", {
    href: "https://github.com/".concat(github)
  }, "github.com/".concat(github)))));
}

var _default = Header;
exports.default = _default;
},{"react":"../node_modules/react/index.js","./TextWithIcon":"TextWithIcon.js"}],"Section.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _TextWithIcon = _interopRequireDefault(require("./TextWithIcon"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Section(_ref) {
  var title = _ref.title,
      icon = _ref.icon,
      children = _ref.children;
  return _react.default.createElement("section", null, _react.default.createElement("h2", null, _react.default.createElement(_TextWithIcon.default, {
    icon: icon
  }, title)), children);
}

var _default = Section;
exports.default = _default;
},{"react":"../node_modules/react/index.js","./TextWithIcon":"TextWithIcon.js"}],"Entry.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Entry(_ref) {
  var entry = _ref.entry;
  var title = entry.title,
      company = entry.company,
      date = entry.date,
      description = entry.description,
      location = entry.location;
  return _react.default.createElement("div", {
    className: "entry"
  }, _react.default.createElement("div", null, _react.default.createElement("b", null, title), _react.default.createElement("br", null), company, " - ", location, _react.default.createElement("br", null), date), _react.default.createElement("div", null, description.split("\n\n").map(function (str) {
    return str.trim();
  }).map(function (paragraph) {
    return _react.default.createElement("p", {
      key: paragraph
    }, paragraph);
  })));
}

var _default = Entry;
exports.default = _default;
},{"react":"../node_modules/react/index.js"}],"SkillEntry.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function SkillEntry(_ref) {
  var entry = _ref.entry;
  var title = entry.title,
      description = entry.description;
  return _react.default.createElement("div", {
    className: "entry"
  }, _react.default.createElement("div", null, _react.default.createElement("b", null, title)), _react.default.createElement("div", null, description.split("\n\n").map(function (str) {
    return str.trim();
  }).map(function (paragraph) {
    return _react.default.createElement("p", {
      key: paragraph
    }, paragraph);
  })));
}

var _default = SkillEntry;
exports.default = _default;
},{"react":"../node_modules/react/index.js"}],"Page.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _dayjs = _interopRequireDefault(require("dayjs"));

var _resume = _interopRequireDefault(require("./resume"));

var _Header = _interopRequireDefault(require("./Header"));

var _Section = _interopRequireDefault(require("./Section"));

var _Entry = _interopRequireDefault(require("./Entry"));

var _SkillEntry = _interopRequireDefault(require("./SkillEntry"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function Page() {
  (0, _react.useEffect)(function () {
    var name = _resume.default.about.name.replace(/\s+/g, "-");

    var dateString = (0, _dayjs.default)().format("MMM-YYYY");
    document.title = "".concat(name, "-").concat(dateString);
  }, []);
  return _react.default.createElement("div", {
    className: "cv"
  }, _react.default.createElement(_Header.default, {
    aboutData: _resume.default.about
  }), _react.default.createElement(_Section.default, {
    icon: "laptop-code",
    title: "Professional experience"
  }, _resume.default.professionalExperiences.map(function (entry) {
    return _react.default.createElement(_Entry.default, {
      key: entry.title,
      entry: entry
    });
  })), _react.default.createElement(_Section.default, {
    icon: "graduation-cap",
    title: "Education"
  }, _resume.default.education.map(function (entry) {
    return _react.default.createElement(_Entry.default, {
      key: entry.title,
      entry: entry
    });
  })), _react.default.createElement(_Section.default, {
    icon: "heart",
    title: "Extracurricular activities"
  }, _resume.default.extraCurricular.map(function (entry) {
    return _react.default.createElement(_Entry.default, {
      key: entry.title,
      entry: entry
    });
  })), _react.default.createElement(_Section.default, {
    icon: "check",
    title: "Skills"
  }, _resume.default.skills.map(function (entry) {
    return _react.default.createElement(_SkillEntry.default, {
      key: entry.title,
      entry: entry
    });
  })));
}

var _default = Page;
exports.default = _default;
},{"react":"../node_modules/react/index.js","dayjs":"../node_modules/dayjs/dayjs.min.js","./resume":"resume.js","./Header":"Header.js","./Section":"Section.js","./Entry":"Entry.js","./SkillEntry":"SkillEntry.js"}],"../node_modules/parcel-bundler/src/builtins/bundle-url.js":[function(require,module,exports) {
var bundleURL = null;

function getBundleURLCached() {
  if (!bundleURL) {
    bundleURL = getBundleURL();
  }

  return bundleURL;
}

function getBundleURL() {
  // Attempt to find the URL of the current script and use that as the base URL
  try {
    throw new Error();
  } catch (err) {
    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\/\/[^)\n]+/g);

    if (matches) {
      return getBaseURL(matches[0]);
    }
  }

  return '/';
}

function getBaseURL(url) {
  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\/\/.+)\/[^/]+$/, '$1') + '/';
}

exports.getBundleURL = getBundleURLCached;
exports.getBaseURL = getBaseURL;
},{}],"../node_modules/parcel-bundler/src/builtins/css-loader.js":[function(require,module,exports) {
var bundle = require('./bundle-url');

function updateLink(link) {
  var newLink = link.cloneNode();

  newLink.onload = function () {
    link.remove();
  };

  newLink.href = link.href.split('?')[0] + '?' + Date.now();
  link.parentNode.insertBefore(newLink, link.nextSibling);
}

var cssTimeout = null;

function reloadCSS() {
  if (cssTimeout) {
    return;
  }

  cssTimeout = setTimeout(function () {
    var links = document.querySelectorAll('link[rel="stylesheet"]');

    for (var i = 0; i < links.length; i++) {
      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {
        updateLink(links[i]);
      }
    }

    cssTimeout = null;
  }, 50);
}

module.exports = reloadCSS;
},{"./bundle-url":"../node_modules/parcel-bundler/src/builtins/bundle-url.js"}],"index.css":[function(require,module,exports) {
var reloadCSS = require('_css_loader');

module.hot.dispose(reloadCSS);
module.hot.accept(reloadCSS);
},{"_css_loader":"../node_modules/parcel-bundler/src/builtins/css-loader.js"}],"../node_modules/@fortawesome/pro-duotone-svg-icons/index.es.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.faBabyCarriage = exports.faBaby = exports.faAxeBattle = exports.faAxe = exports.faAward = exports.faAudioDescription = exports.faAtomAlt = exports.faAtom = exports.faAtlas = exports.faAt = exports.faAsterisk = exports.faAssistiveListeningSystems = exports.faArrowsV = exports.faArrowsH = exports.faArrowsAltV = exports.faArrowsAltH = exports.faArrowsAlt = exports.faArrows = exports.faArrowUp = exports.faArrowToTop = exports.faArrowToRight = exports.faArrowToLeft = exports.faArrowToBottom = exports.faArrowSquareUp = exports.faArrowSquareRight = exports.faArrowSquareLeft = exports.faArrowSquareDown = exports.faArrowRight = exports.faArrowLeft = exports.faArrowFromTop = exports.faArrowFromRight = exports.faArrowFromLeft = exports.faArrowFromBottom = exports.faArrowDown = exports.faArrowCircleUp = exports.faArrowCircleRight = exports.faArrowCircleLeft = exports.faArrowCircleDown = exports.faArrowAltUp = exports.faArrowAltToTop = exports.faArrowAltToRight = exports.faArrowAltToLeft = exports.faArrowAltToBottom = exports.faArrowAltSquareUp = exports.faArrowAltSquareRight = exports.faArrowAltSquareLeft = exports.faArrowAltSquareDown = exports.faArrowAltRight = exports.faArrowAltLeft = exports.faArrowAltFromTop = exports.faArrowAltFromRight = exports.faArrowAltFromLeft = exports.faArrowAltFromBottom = exports.faArrowAltDown = exports.faArrowAltCircleUp = exports.faArrowAltCircleRight = exports.faArrowAltCircleLeft = exports.faArrowAltCircleDown = exports.faArchway = exports.faArchive = exports.faAppleCrate = exports.faAppleAlt = exports.faAnkh = exports.faAngry = exports.faAngleUp = exports.faAngleRight = exports.faAngleLeft = exports.faAngleDown = exports.faAngleDoubleUp = exports.faAngleDoubleRight = exports.faAngleDoubleLeft = exports.faAngleDoubleDown = exports.faAngel = exports.faAnchor = exports.faAnalytics = exports.faAmpGuitar = exports.faAmericanSignLanguageInterpreting = exports.faAmbulance = exports.faAllergies = exports.faAlignSlash = exports.faAlignRight = exports.faAlignLeft = exports.faAlignJustify = exports.faAlignCenter = exports.faAlicorn = exports.faAlbumCollection = exports.faAlbum = exports.faAlarmSnooze = exports.faAlarmPlus = exports.faAlarmExclamation = exports.faAlarmClock = exports.faAirFreshener = exports.faAdjust = exports.faAddressCard = exports.faAddressBook = exports.faAd = exports.faAcorn = exports.faAbacus = exports.prefix = exports.fad = void 0;
exports.faBoxBallot = exports.faBoxAlt = exports.faBox = exports.faBowlingPins = exports.faBowlingBall = exports.faBowArrow = exports.faBorderTop = exports.faBorderStyleAlt = exports.faBorderStyle = exports.faBorderRight = exports.faBorderOuter = exports.faBorderNone = exports.faBorderLeft = exports.faBorderInner = exports.faBorderCenterV = exports.faBorderCenterH = exports.faBorderBottom = exports.faBorderAll = exports.faBoothCurtain = exports.faBoot = exports.faBoombox = exports.faBooksMedical = exports.faBooks = exports.faBookmark = exports.faBookUser = exports.faBookSpells = exports.faBookReader = exports.faBookOpen = exports.faBookMedical = exports.faBookHeart = exports.faBookDead = exports.faBookAlt = exports.faBook = exports.faBong = exports.faBoneBreak = exports.faBone = exports.faBomb = exports.faBolt = exports.faBold = exports.faBlog = exports.faBlind = exports.faBlenderPhone = exports.faBlender = exports.faBlanket = exports.faBirthdayCake = exports.faBiohazard = exports.faBinoculars = exports.faBikingMountain = exports.faBiking = exports.faBicycle = exports.faBible = exports.faBezierCurve = exports.faBetamax = exports.faBells = exports.faBellSlash = exports.faBellSchoolSlash = exports.faBellSchool = exports.faBellPlus = exports.faBellExclamation = exports.faBell = exports.faBeer = exports.faBed = exports.faBatteryThreeQuarters = exports.faBatterySlash = exports.faBatteryQuarter = exports.faBatteryHalf = exports.faBatteryFull = exports.faBatteryEmpty = exports.faBatteryBolt = exports.faBath = exports.faBat = exports.faBasketballHoop = exports.faBasketballBall = exports.faBaseballBall = exports.faBaseball = exports.faBars = exports.faBarcodeScan = exports.faBarcodeRead = exports.faBarcodeAlt = exports.faBarcode = exports.faBanjo = exports.faBandAid = exports.faBan = exports.faBallotCheck = exports.faBallot = exports.faBallPile = exports.faBalanceScaleRight = exports.faBalanceScaleLeft = exports.faBalanceScale = exports.faBagsShopping = exports.faBadgerHoney = exports.faBadgeSheriff = exports.faBadgePercent = exports.faBadgeDollar = exports.faBadgeCheck = exports.faBadge = exports.faBacon = exports.faBackward = exports.faBackspace = exports.faBackpack = void 0;
exports.faChair = exports.faCertificate = exports.faCctv = exports.faCauldron = exports.faCat = exports.faCassetteTape = exports.faCashRegister = exports.faCartPlus = exports.faCartArrowDown = exports.faCars = exports.faCarrot = exports.faCaretUp = exports.faCaretSquareUp = exports.faCaretSquareRight = exports.faCaretSquareLeft = exports.faCaretSquareDown = exports.faCaretRight = exports.faCaretLeft = exports.faCaretDown = exports.faCaretCircleUp = exports.faCaretCircleRight = exports.faCaretCircleLeft = exports.faCaretCircleDown = exports.faCarWash = exports.faCarTilt = exports.faCarSide = exports.faCarMechanic = exports.faCarGarage = exports.faCarCrash = exports.faCarBus = exports.faCarBump = exports.faCarBuilding = exports.faCarBattery = exports.faCarAlt = exports.faCar = exports.faCapsules = exports.faCannabis = exports.faCandyCorn = exports.faCandyCane = exports.faCandleHolder = exports.faCampground = exports.faCampfire = exports.faCameraRetro = exports.faCameraPolaroid = exports.faCameraMovie = exports.faCameraAlt = exports.faCamera = exports.faCamcorder = exports.faCalendarWeek = exports.faCalendarTimes = exports.faCalendarStar = exports.faCalendarPlus = exports.faCalendarMinus = exports.faCalendarExclamation = exports.faCalendarEdit = exports.faCalendarDay = exports.faCalendarCheck = exports.faCalendarAlt = exports.faCalendar = exports.faCalculatorAlt = exports.faCalculator = exports.faCactus = exports.faCabinetFiling = exports.faBusinessTime = exports.faBusSchool = exports.faBusAlt = exports.faBus = exports.faBurrito = exports.faBurn = exports.faBurgerSoda = exports.faBullseyePointer = exports.faBullseyeArrow = exports.faBullseye = exports.faBullhorn = exports.faBuilding = exports.faBug = exports.faBrush = exports.faBrowser = exports.faBroom = exports.faBroadcastTower = exports.faBringFront = exports.faBringForward = exports.faBriefcaseMedical = exports.faBriefcase = exports.faBreadSlice = exports.faBreadLoaf = exports.faBrain = exports.faBraille = exports.faBracketsCurly = exports.faBrackets = exports.faBoxingGlove = exports.faBoxesAlt = exports.faBoxes = exports.faBoxUsd = exports.faBoxUp = exports.faBoxOpen = exports.faBoxHeart = exports.faBoxFull = exports.faBoxFragile = exports.faBoxCheck = void 0;
exports.faCoffeeTogo = exports.faCoffee = exports.faCodeMerge = exports.faCodeCommit = exports.faCodeBranch = exports.faCode = exports.faCocktail = exports.faClub = exports.faCloudsSun = exports.faCloudsMoon = exports.faClouds = exports.faCloudUploadAlt = exports.faCloudUpload = exports.faCloudSunRain = exports.faCloudSun = exports.faCloudSnow = exports.faCloudSleet = exports.faCloudShowersHeavy = exports.faCloudShowers = exports.faCloudRainbow = exports.faCloudRain = exports.faCloudMusic = exports.faCloudMoonRain = exports.faCloudMoon = exports.faCloudMeatball = exports.faCloudHailMixed = exports.faCloudHail = exports.faCloudDrizzle = exports.faCloudDownloadAlt = exports.faCloudDownload = exports.faCloud = exports.faClosedCaptioning = exports.faClone = exports.faClock = exports.faClipboardUser = exports.faClipboardPrescription = exports.faClipboardListCheck = exports.faClipboardList = exports.faClipboardCheck = exports.faClipboard = exports.faClinicMedical = exports.faClawMarks = exports.faClarinet = exports.faCity = exports.faCircleNotch = exports.faCircle = exports.faChurch = exports.faChimney = exports.faChild = exports.faChevronUp = exports.faChevronSquareUp = exports.faChevronSquareRight = exports.faChevronSquareLeft = exports.faChevronSquareDown = exports.faChevronRight = exports.faChevronLeft = exports.faChevronDown = exports.faChevronDoubleUp = exports.faChevronDoubleRight = exports.faChevronDoubleLeft = exports.faChevronDoubleDown = exports.faChevronCircleUp = exports.faChevronCircleRight = exports.faChevronCircleLeft = exports.faChevronCircleDown = exports.faChessRookAlt = exports.faChessRook = exports.faChessQueenAlt = exports.faChessQueen = exports.faChessPawnAlt = exports.faChessPawn = exports.faChessKnightAlt = exports.faChessKnight = exports.faChessKingAlt = exports.faChessKing = exports.faChessClockAlt = exports.faChessClock = exports.faChessBoard = exports.faChessBishopAlt = exports.faChessBishop = exports.faChess = exports.faCheeseburger = exports.faCheeseSwiss = exports.faCheese = exports.faCheckSquare = exports.faCheckDouble = exports.faCheckCircle = exports.faCheck = exports.faChartScatter = exports.faChartPieAlt = exports.faChartPie = exports.faChartNetwork = exports.faChartLineDown = exports.faChartLine = exports.faChartBar = exports.faChartArea = exports.faChargingStation = exports.faChalkboardTeacher = exports.faChalkboard = exports.faChairOffice = void 0;
exports.faDiceFour = exports.faDiceFive = exports.faDiceD8 = exports.faDiceD6 = exports.faDiceD4 = exports.faDiceD20 = exports.faDiceD12 = exports.faDiceD10 = exports.faDice = exports.faDiamond = exports.faDiagnoses = exports.faDharmachakra = exports.faDewpoint = exports.faDesktopAlt = exports.faDesktop = exports.faDemocrat = exports.faDeerRudolph = exports.faDeer = exports.faDebug = exports.faDeaf = exports.faDatabase = exports.faDagger = exports.faCut = exports.faCurling = exports.faCubes = exports.faCube = exports.faCrutches = exports.faCrutch = exports.faCrown = exports.faCrow = exports.faCrosshairs = exports.faCross = exports.faCropAlt = exports.faCrop = exports.faCroissant = exports.faCricket = exports.faCreditCardFront = exports.faCreditCardBlank = exports.faCreditCard = exports.faCowbellMore = exports.faCowbell = exports.faCow = exports.faCouch = exports.faCorn = exports.faCopyright = exports.faCopy = exports.faCookieBite = exports.faCookie = exports.faConveyorBeltAlt = exports.faConveyorBelt = exports.faContainerStorage = exports.faConstruction = exports.faConciergeBell = exports.faComputerSpeaker = exports.faComputerClassic = exports.faCompressWide = exports.faCompressArrowsAlt = exports.faCompressAlt = exports.faCompress = exports.faCompassSlash = exports.faCompass = exports.faCompactDisc = exports.faCommentsDollar = exports.faCommentsAltDollar = exports.faCommentsAlt = exports.faComments = exports.faCommentTimes = exports.faCommentSmile = exports.faCommentSlash = exports.faCommentPlus = exports.faCommentMusic = exports.faCommentMinus = exports.faCommentMedical = exports.faCommentLines = exports.faCommentExclamation = exports.faCommentEdit = exports.faCommentDots = exports.faCommentDollar = exports.faCommentCheck = exports.faCommentAltTimes = exports.faCommentAltSmile = exports.faCommentAltSlash = exports.faCommentAltPlus = exports.faCommentAltMusic = exports.faCommentAltMinus = exports.faCommentAltMedical = exports.faCommentAltLines = exports.faCommentAltExclamation = exports.faCommentAltEdit = exports.faCommentAltDots = exports.faCommentAltDollar = exports.faCommentAltCheck = exports.faCommentAlt = exports.faComment = exports.faColumns = exports.faCoins = exports.faCoin = exports.faCogs = exports.faCog = exports.faCoffin = void 0;
exports.faFighterJet = exports.faFieldHockey = exports.faFemale = exports.faFeatherAlt = exports.faFeather = exports.faFax = exports.faFastForward = exports.faFastBackward = exports.faFarm = exports.faFan = exports.faEyeSlash = exports.faEyeEvil = exports.faEyeDropper = exports.faEye = exports.faExternalLinkSquareAlt = exports.faExternalLinkSquare = exports.faExternalLinkAlt = exports.faExternalLink = exports.faExpandWide = exports.faExpandArrowsAlt = exports.faExpandArrows = exports.faExpandAlt = exports.faExpand = exports.faExclamationTriangle = exports.faExclamationSquare = exports.faExclamationCircle = exports.faExclamation = exports.faExchangeAlt = exports.faExchange = exports.faEuroSign = exports.faEthernet = exports.faEraser = exports.faEquals = exports.faEnvelopeSquare = exports.faEnvelopeOpenText = exports.faEnvelopeOpenDollar = exports.faEnvelopeOpen = exports.faEnvelope = exports.faEngineWarning = exports.faEmptySet = exports.faEllipsisVAlt = exports.faEllipsisV = exports.faEllipsisHAlt = exports.faEllipsisH = exports.faElephant = exports.faEject = exports.faEggFried = exports.faEgg = exports.faEdit = exports.faEclipseAlt = exports.faEclipse = exports.faEarMuffs = exports.faEar = exports.faDungeon = exports.faDumpsterFire = exports.faDumpster = exports.faDumbbell = exports.faDuck = exports.faDryerAlt = exports.faDryer = exports.faDrumstickBite = exports.faDrumstick = exports.faDrumSteelpan = exports.faDrum = exports.faDroneAlt = exports.faDrone = exports.faDreidel = exports.faDrawSquare = exports.faDrawPolygon = exports.faDrawCircle = exports.faDragon = exports.faDraftingCompass = exports.faDownload = exports.faDove = exports.faDotCircle = exports.faDoorOpen = exports.faDoorClosed = exports.faDonate = exports.faDollyFlatbedEmpty = exports.faDollyFlatbedAlt = exports.faDollyFlatbed = exports.faDollyEmpty = exports.faDolly = exports.faDollarSign = exports.faDogLeashed = exports.faDog = exports.faDoNotEnter = exports.faDna = exports.faDizzy = exports.faDivide = exports.faDisease = exports.faDiscDrive = exports.faDirections = exports.faDiploma = exports.faDigitalTachograph = exports.faDigging = exports.faDiceTwo = exports.faDiceThree = exports.faDiceSix = exports.faDiceOne = void 0;
exports.faGavel = exports.faGasPumpSlash = exports.faGasPump = exports.faGamepadAlt = exports.faGamepad = exports.faGameConsoleHandheld = exports.faGameBoardAlt = exports.faGameBoard = exports.faFutbol = exports.faFunnelDollar = exports.faFunction = exports.faFrownOpen = exports.faFrown = exports.faFrostyHead = exports.faFrog = exports.faFrenchFries = exports.faFragile = exports.faForward = exports.faForklift = exports.faFootballHelmet = exports.faFootballBall = exports.faFontCase = exports.faFontAwesomeLogoFull = exports.faFont = exports.faFolders = exports.faFolderTree = exports.faFolderTimes = exports.faFolderPlus = exports.faFolderOpen = exports.faFolderMinus = exports.faFolder = exports.faFog = exports.faFluxCapacitor = exports.faFlute = exports.faFlushed = exports.faFlowerTulip = exports.faFlowerDaffodil = exports.faFlower = exports.faFlaskPotion = exports.faFlaskPoison = exports.faFlask = exports.faFlashlight = exports.faFlame = exports.faFlagUsa = exports.faFlagCheckered = exports.faFlagAlt = exports.faFlag = exports.faFistRaised = exports.faFishCooked = exports.faFish = exports.faFirstAid = exports.faFireplace = exports.faFireSmoke = exports.faFireExtinguisher = exports.faFireAlt = exports.faFire = exports.faFingerprint = exports.faFilter = exports.faFilmCanister = exports.faFilmAlt = exports.faFilm = exports.faFillDrip = exports.faFill = exports.faFilesMedical = exports.faFileWord = exports.faFileVideo = exports.faFileUser = exports.faFileUpload = exports.faFileTimes = exports.faFileSpreadsheet = exports.faFileSignature = exports.faFileSearch = exports.faFilePrescription = exports.faFilePowerpoint = exports.faFilePlus = exports.faFilePdf = exports.faFileMusic = exports.faFileMinus = exports.faFileMedicalAlt = exports.faFileMedical = exports.faFileInvoiceDollar = exports.faFileInvoice = exports.faFileImport = exports.faFileImage = exports.faFileExport = exports.faFileExclamation = exports.faFileExcel = exports.faFileEdit = exports.faFileDownload = exports.faFileCsv = exports.faFileContract = exports.faFileCode = exports.faFileCheck = exports.faFileChartPie = exports.faFileChartLine = exports.faFileCertificate = exports.faFileAudio = exports.faFileArchive = exports.faFileAlt = exports.faFile = void 0;
exports.faHdd = exports.faHaykal = exports.faHatWizard = exports.faHatWitch = exports.faHatWinter = exports.faHatSanta = exports.faHatCowboySide = exports.faHatCowboy = exports.faHatChef = exports.faHashtag = exports.faHardHat = exports.faHanukiah = exports.faHandshakeAlt = exports.faHandshake = exports.faHandsUsd = exports.faHandsHelping = exports.faHandsHeart = exports.faHands = exports.faHandSpock = exports.faHandScissors = exports.faHandRock = exports.faHandReceiving = exports.faHandPointer = exports.faHandPointUp = exports.faHandPointRight = exports.faHandPointLeft = exports.faHandPointDown = exports.faHandPeace = exports.faHandPaper = exports.faHandMiddleFinger = exports.faHandLizard = exports.faHandHoldingWater = exports.faHandHoldingUsd = exports.faHandHoldingSeedling = exports.faHandHoldingMagic = exports.faHandHoldingHeart = exports.faHandHoldingBox = exports.faHandHolding = exports.faHandHeart = exports.faHamsa = exports.faHammerWar = exports.faHammer = exports.faHamburger = exports.faH4 = exports.faH3 = exports.faH2 = exports.faH1 = exports.faHSquare = exports.faGuitars = exports.faGuitarElectric = exports.faGuitar = exports.faGripVertical = exports.faGripLinesVertical = exports.faGripLines = exports.faGripHorizontal = exports.faGrinWink = exports.faGrinTongueWink = exports.faGrinTongueSquint = exports.faGrinTongue = exports.faGrinTears = exports.faGrinStars = exports.faGrinSquintTears = exports.faGrinSquint = exports.faGrinHearts = exports.faGrinBeamSweat = exports.faGrinBeam = exports.faGrinAlt = exports.faGrin = exports.faGrimace = exports.faGreaterThanEqual = exports.faGreaterThan = exports.faGramophone = exports.faGraduationCap = exports.faGopuram = exports.faGolfClub = exports.faGolfBall = exports.faGlobeStand = exports.faGlobeSnow = exports.faGlobeEurope = exports.faGlobeAsia = exports.faGlobeAmericas = exports.faGlobeAfrica = exports.faGlobe = exports.faGlassesAlt = exports.faGlasses = exports.faGlassWhiskeyRocks = exports.faGlassWhiskey = exports.faGlassMartiniAlt = exports.faGlassMartini = exports.faGlassCitrus = exports.faGlassCheers = exports.faGlassChampagne = exports.faGlass = exports.faGingerbreadMan = exports.faGifts = exports.faGiftCard = exports.faGift = exports.faGhost = exports.faGenderless = exports.faGem = void 0;
exports.faKissWinkHeart = exports.faKissBeam = exports.faKiss = exports.faKidneys = exports.faKhanda = exports.faKeynote = exports.faKeyboard = exports.faKeySkeleton = exports.faKey = exports.faKerning = exports.faKazoo = exports.faKaaba = exports.faJug = exports.faJoystick = exports.faJournalWhills = exports.faJoint = exports.faJedi = exports.faJackOLantern = exports.faItalic = exports.faIslandTropical = exports.faInventory = exports.faIntersection = exports.faIntegral = exports.faInhaler = exports.faInfoSquare = exports.faInfoCircle = exports.faInfo = exports.faInfinity = exports.faIndustryAlt = exports.faIndustry = exports.faIndent = exports.faInboxOut = exports.faInboxIn = exports.faInbox = exports.faImages = exports.faImagePolaroid = exports.faImage = exports.faIgloo = exports.faIdCardAlt = exports.faIdCard = exports.faIdBadge = exports.faIconsAlt = exports.faIcons = exports.faIcicles = exports.faIceSkate = exports.faIceCream = exports.faICursor = exports.faHurricane = exports.faHumidity = exports.faHryvnia = exports.faHouseFlood = exports.faHouseDamage = exports.faHourglassStart = exports.faHourglassHalf = exports.faHourglassEnd = exports.faHourglass = exports.faHotel = exports.faHotdog = exports.faHotTub = exports.faHospitals = exports.faHospitalUser = exports.faHospitalSymbol = exports.faHospitalAlt = exports.faHospital = exports.faHorseSaddle = exports.faHorseHead = exports.faHorse = exports.faHorizontalRule = exports.faHoodCloak = exports.faHomeLgAlt = exports.faHomeLg = exports.faHomeHeart = exports.faHomeAlt = exports.faHome = exports.faHollyBerry = exports.faHockeySticks = exports.faHockeyPuck = exports.faHockeyMask = exports.faHistory = exports.faHippo = exports.faHiking = exports.faHighlighter = exports.faHexagon = exports.faHelmetBattle = exports.faHelicopter = exports.faHeartbeat = exports.faHeartSquare = exports.faHeartRate = exports.faHeartCircle = exports.faHeartBroken = exports.faHeart = exports.faHeadset = exports.faHeadphonesAlt = exports.faHeadphones = exports.faHeading = exports.faHeadVr = exports.faHeadSideMedical = exports.faHeadSideHeadphones = exports.faHeadSideBrain = exports.faHeadSide = void 0;
exports.faMeat = exports.faMask = exports.faMarsStrokeV = exports.faMarsStrokeH = exports.faMarsStroke = exports.faMarsDouble = exports.faMars = exports.faMarker = exports.faMapSigns = exports.faMapPin = exports.faMapMarkerTimes = exports.faMapMarkerSmile = exports.faMapMarkerSlash = exports.faMapMarkerQuestion = exports.faMapMarkerPlus = exports.faMapMarkerMinus = exports.faMapMarkerExclamation = exports.faMapMarkerEdit = exports.faMapMarkerCheck = exports.faMapMarkerAltSlash = exports.faMapMarkerAlt = exports.faMapMarker = exports.faMapMarkedAlt = exports.faMapMarked = exports.faMap = exports.faMandolin = exports.faMale = exports.faMailbox = exports.faMailBulk = exports.faMagnet = exports.faMagic = exports.faMace = exports.faLungs = exports.faLuggageCart = exports.faLuchador = exports.faLowVision = exports.faLoveseat = exports.faLongArrowUp = exports.faLongArrowRight = exports.faLongArrowLeft = exports.faLongArrowDown = exports.faLongArrowAltUp = exports.faLongArrowAltRight = exports.faLongArrowAltLeft = exports.faLongArrowAltDown = exports.faLockOpenAlt = exports.faLockOpen = exports.faLockAlt = exports.faLock = exports.faLocationSlash = exports.faLocationCircle = exports.faLocationArrow = exports.faLocation = exports.faListUl = exports.faListOl = exports.faListMusic = exports.faListAlt = exports.faList = exports.faLiraSign = exports.faLips = exports.faLink = exports.faLineHeight = exports.faLineColumns = exports.faLightsHoliday = exports.faLightbulbSlash = exports.faLightbulbOn = exports.faLightbulbExclamation = exports.faLightbulbDollar = exports.faLightbulb = exports.faLifeRing = exports.faLevelUpAlt = exports.faLevelUp = exports.faLevelDownAlt = exports.faLevelDown = exports.faLessThanEqual = exports.faLessThan = exports.faLemon = exports.faLeafOak = exports.faLeafMaple = exports.faLeafHeart = exports.faLeaf = exports.faLayerPlus = exports.faLayerMinus = exports.faLayerGroup = exports.faLaughWink = exports.faLaughSquint = exports.faLaughBeam = exports.faLaugh = exports.faLasso = exports.faLaptopMedical = exports.faLaptopCode = exports.faLaptop = exports.faLanguage = exports.faLandmarkAlt = exports.faLandmark = exports.faLamp = exports.faLambda = exports.faKnifeKitchen = exports.faKiwiBird = exports.faKite = void 0;
exports.faPaw = exports.faPauseCircle = exports.faPause = exports.faPaste = exports.faPastafarianism = exports.faPassport = exports.faParkingSlash = exports.faParkingCircleSlash = exports.faParkingCircle = exports.faParking = exports.faParagraphRtl = exports.faParagraph = exports.faParachuteBox = exports.faPaperclip = exports.faPaperPlane = exports.faPalletAlt = exports.faPallet = exports.faPalette = exports.faPaintRoller = exports.faPaintBrushAlt = exports.faPaintBrush = exports.faPager = exports.faPageBreak = exports.faOverline = exports.faOutdent = exports.faOtter = exports.faOrnament = exports.faOmega = exports.faOm = exports.faOilTemp = exports.faOilCan = exports.faOctagon = exports.faObjectUngroup = exports.faObjectGroup = exports.faNotesMedical = exports.faNotEqual = exports.faNewspaper = exports.faNeuter = exports.faNetworkWired = exports.faNarwhal = exports.faMusicSlash = exports.faMusicAltSlash = exports.faMusicAlt = exports.faMusic = exports.faMugTea = exports.faMugMarshmallows = exports.faMugHot = exports.faMug = exports.faMp3Player = exports.faMousePointer = exports.faMouseAlt = exports.faMouse = exports.faMountains = exports.faMountain = exports.faMotorcycle = exports.faMosque = exports.faMortarPestle = exports.faMoonStars = exports.faMoonCloud = exports.faMoon = exports.faMonument = exports.faMonkey = exports.faMonitorHeartRate = exports.faMoneyCheckEditAlt = exports.faMoneyCheckEdit = exports.faMoneyCheckAlt = exports.faMoneyCheck = exports.faMoneyBillWaveAlt = exports.faMoneyBillWave = exports.faMoneyBillAlt = exports.faMoneyBill = exports.faMobileAndroidAlt = exports.faMobileAndroid = exports.faMobileAlt = exports.faMobile = exports.faMitten = exports.faMistletoe = exports.faMinusSquare = exports.faMinusOctagon = exports.faMinusHexagon = exports.faMinusCircle = exports.faMinus = exports.faMindShare = exports.faMicroscope = exports.faMicrophoneStand = exports.faMicrophoneSlash = exports.faMicrophoneAltSlash = exports.faMicrophoneAlt = exports.faMicrophone = exports.faMicrochip = exports.faMeteor = exports.faMercury = exports.faMenorah = exports.faMemory = exports.faMehRollingEyes = exports.faMehBlank = exports.faMeh = exports.faMegaphone = exports.faMedkit = exports.faMedal = void 0;
exports.faRaindrops = exports.faRainbow = exports.faRadioAlt = exports.faRadio = exports.faRadiationAlt = exports.faRadiation = exports.faRacquet = exports.faRabbitFast = exports.faRabbit = exports.faQuran = exports.faQuoteRight = exports.faQuoteLeft = exports.faQuidditch = exports.faQuestionSquare = exports.faQuestionCircle = exports.faQuestion = exports.faQrcode = exports.faPuzzlePiece = exports.faPumpkin = exports.faProjector = exports.faProjectDiagram = exports.faProcedures = exports.faPrintSlash = exports.faPrintSearch = exports.faPrint = exports.faPresentation = exports.faPrescriptionBottleAlt = exports.faPrescriptionBottle = exports.faPrescription = exports.faPrayingHands = exports.faPray = exports.faPowerOff = exports.faPoundSign = exports.faPortrait = exports.faPopcorn = exports.faPoop = exports.faPooStorm = exports.faPoo = exports.faPollPeople = exports.faPollH = exports.faPoll = exports.faPodiumStar = exports.faPodium = exports.faPodcast = exports.faPlusSquare = exports.faPlusOctagon = exports.faPlusHexagon = exports.faPlusCircle = exports.faPlus = exports.faPlug = exports.faPlayCircle = exports.faPlay = exports.faPlaneDeparture = exports.faPlaneArrival = exports.faPlaneAlt = exports.faPlane = exports.faPlaceOfWorship = exports.faPizzaSlice = exports.faPizza = exports.faPills = exports.faPiggyBank = exports.faPig = exports.faPie = exports.faPianoKeyboard = exports.faPiano = exports.faPi = exports.faPhotoVideo = exports.faPhoneVolume = exports.faPhoneSquareAlt = exports.faPhoneSquare = exports.faPhoneSlash = exports.faPhoneRotary = exports.faPhonePlus = exports.faPhoneOffice = exports.faPhoneLaptop = exports.faPhoneAlt = exports.faPhone = exports.faPersonSign = exports.faPersonDollyEmpty = exports.faPersonDolly = exports.faPersonCarry = exports.faPersonBooth = exports.faPercentage = exports.faPercent = exports.faPepperHot = exports.faPeopleCarry = exports.faPennant = exports.faPencilRuler = exports.faPencilPaintbrush = exports.faPencilAlt = exports.faPencil = exports.faPenSquare = exports.faPenNib = exports.faPenFancy = exports.faPenAlt = exports.faPen = exports.faPegasus = exports.faPeace = exports.faPawClaws = exports.faPawAlt = void 0;
exports.faShoppingCart = exports.faShoppingBasket = exports.faShoppingBag = exports.faShoePrints = exports.faShishKebab = exports.faShippingTimed = exports.faShippingFast = exports.faShip = exports.faShieldCross = exports.faShieldCheck = exports.faShieldAlt = exports.faShield = exports.faShekelSign = exports.faSheep = exports.faShareSquare = exports.faShareAltSquare = exports.faShareAlt = exports.faShareAll = exports.faShare = exports.faShapes = exports.faServer = exports.faSendBackward = exports.faSendBack = exports.faSeedling = exports.faSearchPlus = exports.faSearchMinus = exports.faSearchLocation = exports.faSearchDollar = exports.faSearch = exports.faSdCard = exports.faScythe = exports.faScrubber = exports.faScrollOld = exports.faScroll = exports.faScrewdriver = exports.faSchool = exports.faScarf = exports.faScarecrow = exports.faScannerTouchscreen = exports.faScannerKeyboard = exports.faScannerImage = exports.faScanner = exports.faScalpelPath = exports.faScalpel = exports.faSaxophone = exports.faSaxHot = exports.faSave = exports.faSausage = exports.faSatelliteDish = exports.faSatellite = exports.faSandwich = exports.faSalad = exports.faSadTear = exports.faSadCry = exports.faSackDollar = exports.faSack = exports.faRv = exports.faRupeeSign = exports.faRunning = exports.faRulerVertical = exports.faRulerTriangle = exports.faRulerHorizontal = exports.faRulerCombined = exports.faRuler = exports.faRubleSign = exports.faRssSquare = exports.faRss = exports.faRouter = exports.faRouteInterstate = exports.faRouteHighway = exports.faRoute = exports.faRocket = exports.faRobot = exports.faRoad = exports.faRingsWedding = exports.faRing = exports.faRibbon = exports.faRetweetAlt = exports.faRetweet = exports.faRestroom = exports.faRepublican = exports.faReplyAll = exports.faReply = exports.faRepeatAlt = exports.faRepeat1Alt = exports.faRepeat1 = exports.faRepeat = exports.faRemoveFormat = exports.faRegistered = exports.faRedoAlt = exports.faRedo = exports.faRecycle = exports.faRectangleWide = exports.faRectanglePortrait = exports.faRectangleLandscape = exports.faRecordVinyl = exports.faReceipt = exports.faRandom = exports.faRampLoading = exports.faRam = void 0;
exports.faSpiderWeb = exports.faSpiderBlackWidow = exports.faSpider = exports.faSpellCheck = exports.faSpeakers = exports.faSpeaker = exports.faSparkles = exports.faSpade = exports.faSpaceShuttle = exports.faSpa = exports.faSoup = exports.faSortUp = exports.faSortSizeUpAlt = exports.faSortSizeUp = exports.faSortSizeDownAlt = exports.faSortSizeDown = exports.faSortShapesUpAlt = exports.faSortShapesUp = exports.faSortShapesDownAlt = exports.faSortShapesDown = exports.faSortNumericUpAlt = exports.faSortNumericUp = exports.faSortNumericDownAlt = exports.faSortNumericDown = exports.faSortDown = exports.faSortAmountUpAlt = exports.faSortAmountUp = exports.faSortAmountDownAlt = exports.faSortAmountDown = exports.faSortAlt = exports.faSortAlphaUpAlt = exports.faSortAlphaUp = exports.faSortAlphaDownAlt = exports.faSortAlphaDown = exports.faSort = exports.faSolarPanel = exports.faSocks = exports.faSnowplow = exports.faSnowmobile = exports.faSnowman = exports.faSnowflakes = exports.faSnowflake = exports.faSnowboarding = exports.faSnowBlowing = exports.faSnooze = exports.faSnake = exports.faSms = exports.faSmokingBan = exports.faSmoking = exports.faSmoke = exports.faSmog = exports.faSmileWink = exports.faSmilePlus = exports.faSmileBeam = exports.faSmile = exports.faSlidersVSquare = exports.faSlidersV = exports.faSlidersHSquare = exports.faSlidersH = exports.faSleigh = exports.faSledding = exports.faSlash = exports.faSkullCrossbones = exports.faSkullCow = exports.faSkull = exports.faSkiingNordic = exports.faSkiing = exports.faSkiLift = exports.faSkiJump = exports.faSkeleton = exports.faSkating = exports.faSitemap = exports.faSimCard = exports.faSignature = exports.faSignalStream = exports.faSignalSlash = exports.faSignalAltSlash = exports.faSignalAlt3 = exports.faSignalAlt2 = exports.faSignalAlt1 = exports.faSignalAlt = exports.faSignal4 = exports.faSignal3 = exports.faSignal2 = exports.faSignal1 = exports.faSignal = exports.faSignOutAlt = exports.faSignOut = exports.faSignLanguage = exports.faSignInAlt = exports.faSignIn = exports.faSign = exports.faSigma = exports.faSickle = exports.faShuttlecock = exports.faShuttleVan = exports.faShredder = exports.faShower = exports.faShovelSnow = exports.faShovel = void 0;
exports.faTextHeight = exports.faText = exports.faTerminal = exports.faTennisBall = exports.faTenge = exports.faTemperatureLow = exports.faTemperatureHot = exports.faTemperatureHigh = exports.faTemperatureFrigid = exports.faTeethOpen = exports.faTeeth = exports.faTaxi = exports.faTasksAlt = exports.faTasks = exports.faTape = exports.faTanakh = exports.faTally = exports.faTags = exports.faTag = exports.faTaco = exports.faTachometerSlowest = exports.faTachometerSlow = exports.faTachometerFastest = exports.faTachometerFast = exports.faTachometerAverage = exports.faTachometerAltSlowest = exports.faTachometerAltSlow = exports.faTachometerAltFastest = exports.faTachometerAltFast = exports.faTachometerAltAverage = exports.faTachometerAlt = exports.faTachometer = exports.faTablets = exports.faTabletRugged = exports.faTabletAndroidAlt = exports.faTabletAndroid = exports.faTabletAlt = exports.faTablet = exports.faTableTennis = exports.faTable = exports.faSyringe = exports.faSyncAlt = exports.faSync = exports.faSynagogue = exports.faSwords = exports.faSword = exports.faSwimmingPool = exports.faSwimmer = exports.faSwatchbook = exports.faSurprise = exports.faSuperscript = exports.faSunset = exports.faSunrise = exports.faSunglasses = exports.faSunHaze = exports.faSunDust = exports.faSunCloud = exports.faSun = exports.faSuitcaseRolling = exports.faSuitcase = exports.faSubway = exports.faSubscript = exports.faStroopwafel = exports.faStrikethrough = exports.faStretcher = exports.faStreetView = exports.faStream = exports.faStoreAlt = exports.faStore = exports.faStopwatch = exports.faStopCircle = exports.faStop = exports.faStomach = exports.faStocking = exports.faStickyNote = exports.faStethoscope = exports.faStepForward = exports.faStepBackward = exports.faSteeringWheel = exports.faSteak = exports.faStars = exports.faStarOfLife = exports.faStarOfDavid = exports.faStarHalfAlt = exports.faStarHalf = exports.faStarExclamation = exports.faStarChristmas = exports.faStarAndCrescent = exports.faStar = exports.faStamp = exports.faStaff = exports.faSquirrel = exports.faSquareRootAlt = exports.faSquareRoot = exports.faSquareFull = exports.faSquare = exports.faSprayCan = exports.faSplotch = exports.faSpinnerThird = exports.faSpinner = void 0;
exports.faUnderline = exports.faUmbrellaBeach = exports.faUmbrella = exports.faTypewriter = exports.faTvRetro = exports.faTvMusic = exports.faTvAlt = exports.faTv = exports.faTurtle = exports.faTurntable = exports.faTurkey = exports.faTty = exports.faTshirt = exports.faTrumpet = exports.faTruckRamp = exports.faTruckPlow = exports.faTruckPickup = exports.faTruckMoving = exports.faTruckMonster = exports.faTruckLoading = exports.faTruckCouch = exports.faTruckContainer = exports.faTruck = exports.faTrophyAlt = exports.faTrophy = exports.faTriangleMusic = exports.faTriangle = exports.faTrees = exports.faTreePalm = exports.faTreeLarge = exports.faTreeDecorated = exports.faTreeChristmas = exports.faTreeAlt = exports.faTree = exports.faTreasureChest = exports.faTrashUndoAlt = exports.faTrashUndo = exports.faTrashRestoreAlt = exports.faTrashRestore = exports.faTrashAlt = exports.faTrash = exports.faTransgenderAlt = exports.faTransgender = exports.faTram = exports.faTrain = exports.faTrafficLightStop = exports.faTrafficLightSlow = exports.faTrafficLightGo = exports.faTrafficLight = exports.faTrafficCone = exports.faTrademark = exports.faTractor = exports.faTornado = exports.faToriiGate = exports.faTorah = exports.faToothbrush = exports.faTooth = exports.faTools = exports.faToolbox = exports.faTombstoneAlt = exports.faTombstone = exports.faToiletPaperAlt = exports.faToiletPaper = exports.faToilet = exports.faToggleOn = exports.faToggleOff = exports.faTired = exports.faTireRugged = exports.faTirePressureWarning = exports.faTireFlat = exports.faTire = exports.faTintSlash = exports.faTint = exports.faTimesSquare = exports.faTimesOctagon = exports.faTimesHexagon = exports.faTimesCircle = exports.faTimes = exports.faTilde = exports.faTicketAlt = exports.faTicket = exports.faThunderstormSun = exports.faThunderstormMoon = exports.faThunderstorm = exports.faThumbtack = exports.faThumbsUp = exports.faThumbsDown = exports.faTheta = exports.faThermometerThreeQuarters = exports.faThermometerQuarter = exports.faThermometerHalf = exports.faThermometerFull = exports.faThermometerEmpty = exports.faThermometer = exports.faTheaterMasks = exports.faThList = exports.faThLarge = exports.faTh = exports.faTextWidth = exports.faTextSize = void 0;
exports.faWaveformPath = exports.faWaveform = exports.faWaveTriangle = exports.faWaveSquare = exports.faWaveSine = exports.faWaterRise = exports.faWaterLower = exports.faWater = exports.faWatchFitness = exports.faWatchCalculator = exports.faWatch = exports.faWasher = exports.faWarehouseAlt = exports.faWarehouse = exports.faWandMagic = exports.faWand = exports.faWallet = exports.faWalking = exports.faWalkieTalkie = exports.faWalker = exports.faWagonCovered = exports.faVrCardboard = exports.faVoteYea = exports.faVoteNay = exports.faVolumeUp = exports.faVolumeSlash = exports.faVolumeOff = exports.faVolumeMute = exports.faVolumeDown = exports.faVolume = exports.faVolleyballBall = exports.faVolcano = exports.faVoicemail = exports.faViolin = exports.faVihara = exports.faVideoSlash = exports.faVideoPlus = exports.faVideo = exports.faVials = exports.faVial = exports.faVhs = exports.faVenusMars = exports.faVenusDouble = exports.faVenus = exports.faVectorSquare = exports.faValueAbsolute = exports.faUtensilsAlt = exports.faUtensils = exports.faUtensilSpoon = exports.faUtensilKnife = exports.faUtensilFork = exports.faUsersMedical = exports.faUsersCrown = exports.faUsersCog = exports.faUsersClass = exports.faUsers = exports.faUserTimes = exports.faUserTie = exports.faUserTag = exports.faUserSlash = exports.faUserShield = exports.faUserSecret = exports.faUserPlus = exports.faUserNurse = exports.faUserNinja = exports.faUserMusic = exports.faUserMinus = exports.faUserMdChat = exports.faUserMd = exports.faUserLock = exports.faUserInjured = exports.faUserHeadset = exports.faUserHardHat = exports.faUserGraduate = exports.faUserFriends = exports.faUserEdit = exports.faUserCrown = exports.faUserCowboy = exports.faUserCog = exports.faUserClock = exports.faUserCircle = exports.faUserCheck = exports.faUserChart = exports.faUserAstronaut = exports.faUserAltSlash = exports.faUserAlt = exports.faUser = exports.faUsdSquare = exports.faUsdCircle = exports.faUsbDrive = exports.faUpload = exports.faUnlockAlt = exports.faUnlock = exports.faUnlink = exports.faUniversity = exports.faUniversalAccess = exports.faUnion = exports.faUnicorn = exports.faUndoAlt = exports.faUndo = void 0;
exports.faYinYang = exports.faYenSign = exports.faXRay = exports.faWrench = exports.faWreath = exports.faWonSign = exports.faWineGlassAlt = exports.faWineGlass = exports.faWineBottle = exports.faWindsock = exports.faWindowRestore = exports.faWindowMinimize = exports.faWindowMaximize = exports.faWindowClose = exports.faWindowAlt = exports.faWindow = exports.faWindWarning = exports.faWindTurbine = exports.faWind = exports.faWifiSlash = exports.faWifi2 = exports.faWifi1 = exports.faWifi = exports.faWhistle = exports.faWheelchair = exports.faWheat = exports.faWhale = exports.faWeightHanging = exports.faWeight = exports.faWebcamSlash = exports.faWebcam = void 0;
var prefix = "fad";
exports.prefix = prefix;
var faAbacus = {
  prefix: 'fad',
  iconName: 'abacus',
  icon: [576, 512, [], "f640", ["M192 440h-32v-48h32zM160 72v48h32V72zm96 160v48h32v-48zm-96 0v48h32v-48zm96 208h160v-48H256zm96-160h128v-48H352zM544 0a32 32 0 0 0-32 32v464a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V32a32 32 0 0 0-32-32zM416 72H256v48h160zM32 0A32 32 0 0 0 0 32v464a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V32A32 32 0 0 0 32 0z", "M144 32h-32a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zm96 0h-32a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zm-96 160h-32a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-96a16 16 0 0 0-16-16zm192 0h-32a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-96a16 16 0 0 0-16-16zm-96 0h-32a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-96a16 16 0 0 0-16-16zM464 32h-32a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM144 352h-32a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-96a16 16 0 0 0-16-16zm96 0h-32a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-96a16 16 0 0 0-16-16zm224 0h-32a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-96a16 16 0 0 0-16-16z"]]
};
exports.faAbacus = faAbacus;
var faAcorn = {
  prefix: 'fad',
  iconName: 'acorn',
  icon: [448, 512, [], "f6ae", ["M32 256h384a258.87 258.87 0 0 1-143.11 231.55L224 512l-48.89-24.45A258.87 258.87 0 0 1 32 256z", "M448 160v32a32 32 0 0 1-32 32H32a32 32 0 0 1-32-32v-32a96 96 0 0 1 96-96h106a132.41 132.41 0 0 1 29.41-58.64 15.7 15.7 0 0 1 11.31-5.3 15.44 15.44 0 0 1 12 4.72L266 16.1a16 16 0 0 1 .66 21.9 84.32 84.32 0 0 0-15.16 26H352a96 96 0 0 1 96 96z"]]
};
exports.faAcorn = faAcorn;
var faAd = {
  prefix: 'fad',
  iconName: 'ad',
  icon: [512, 512, [], "f641", ["M352 256a24 24 0 1 0 24 24 24 24 0 0 0-24-24zm-194.48 16h37L176 218.78zM464 64H48a48 48 0 0 0-48 48v288a48 48 0 0 0 48 48h416a48 48 0 0 0 48-48V112a48 48 0 0 0-48-48zM250.58 352h-16.94a16 16 0 0 1-15.12-10.75L211.15 320h-70.29l-7.38 21.25A16 16 0 0 1 118.36 352h-16.94a16 16 0 0 1-15.12-21.25L140 176.12A24 24 0 0 1 162.67 160h26.66A24 24 0 0 1 212 176.13l53.69 154.62A16 16 0 0 1 250.58 352zM424 336a16 16 0 0 1-16 16h-16a15.74 15.74 0 0 1-12-5.68A72 72 0 1 1 352 208a71.05 71.05 0 0 1 24 4.42V176a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16z", "M212 176.13A24 24 0 0 0 189.33 160h-26.66A24 24 0 0 0 140 176.12L86.3 330.75A16 16 0 0 0 101.42 352h16.94a16 16 0 0 0 15.12-10.75l7.38-21.25h70.29l7.37 21.25A16 16 0 0 0 233.64 352h16.94a16 16 0 0 0 15.11-21.25zM157.52 272L176 218.78 194.48 272zM408 160h-16a16 16 0 0 0-16 16v36.42a71.05 71.05 0 0 0-24-4.42 72 72 0 1 0 28 138.32 15.74 15.74 0 0 0 12 5.68h16a16 16 0 0 0 16-16V176a16 16 0 0 0-16-16zm-56 144a24 24 0 1 1 24-24 24 24 0 0 1-24 24z"]]
};
exports.faAd = faAd;
var faAddressBook = {
  prefix: 'fad',
  iconName: 'address-book',
  icon: [448, 512, [], "f2b9", ["M416 48a48 48 0 0 0-48-48H48A48 48 0 0 0 0 48v416a48 48 0 0 0 48 48h320a48 48 0 0 0 48-48zm-208 80a64 64 0 1 1-64 64 64.06 64.06 0 0 1 64-64zm112 236.8c0 10.6-10 19.2-22.4 19.2H118.4C106 384 96 375.4 96 364.8v-19.2c0-31.8 30.1-57.6 67.2-57.6h5a103 103 0 0 0 79.6 0h5c37.1 0 67.2 25.8 67.2 57.6z", "M252.8 288h-5a103 103 0 0 1-79.6 0h-5c-37.1 0-67.2 25.8-67.2 57.6v19.2c0 10.6 10 19.2 22.4 19.2h179.2c12.4 0 22.4-8.6 22.4-19.2v-19.2c0-31.8-30.1-57.6-67.2-57.6zM208 256a64 64 0 1 0-64-64 64.06 64.06 0 0 0 64 64zm228-32h-20v64h20a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm0 128h-20v64h20a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm0-256h-20v64h20a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12z"]]
};
exports.faAddressBook = faAddressBook;
var faAddressCard = {
  prefix: 'fad',
  iconName: 'address-card',
  icon: [576, 512, [], "f2bb", ["M528 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h480a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-352 96a64 64 0 1 1-64 64 64.06 64.06 0 0 1 64-64zm112 236.8c0 10.6-10 19.2-22.4 19.2H86.4C74 384 64 375.4 64 364.8v-19.2c0-31.8 30.1-57.6 67.2-57.6h5a103 103 0 0 0 79.6 0h5c37.1 0 67.2 25.8 67.2 57.6zM512 312a8 8 0 0 1-8 8H360a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h144a8 8 0 0 1 8 8zm0-64a8 8 0 0 1-8 8H360a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h144a8 8 0 0 1 8 8zm0-64a8 8 0 0 1-8 8H360a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h144a8 8 0 0 1 8 8z", "M176 256a64 64 0 1 0-64-64 64.06 64.06 0 0 0 64 64zm44.8 32h-5a103 103 0 0 1-79.6 0h-5C94.1 288 64 313.8 64 345.6v19.2c0 10.6 10 19.2 22.4 19.2h179.2c12.4 0 22.4-8.6 22.4-19.2v-19.2c0-31.8-30.1-57.6-67.2-57.6z"]]
};
exports.faAddressCard = faAddressCard;
var faAdjust = {
  prefix: 'fad',
  iconName: 'adjust',
  icon: [512, 512, [], "f042", ["M504 256c0 137-111 248-248 248V8c137 0 248 111 248 248z", "M256 8v496C119 504 8 393 8 256S119 8 256 8z"]]
};
exports.faAdjust = faAdjust;
var faAirFreshener = {
  prefix: 'fad',
  iconName: 'air-freshener',
  icon: [384, 512, [], "f5d0", ["M304 432v32H80v-32h224m32-48H48a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16h288a16 16 0 0 0 16-16v-96a16 16 0 0 0-16-16z", "M378.94 321.41L284.7 224h49.22c15.3 0 23.66-16.6 13.86-27.53L234.45 70A47.45 47.45 0 0 0 240 48a48 48 0 0 0-96 0 47.45 47.45 0 0 0 5.55 22L36.22 196.47C26.42 207.4 34.78 224 50.08 224H99.3L5.06 321.41C-6.69 333.56 3.34 352 21.7 352H160v32h64v-32h138.3c18.36 0 28.39-18.44 16.64-30.59zM192 64a16 16 0 1 1 16-16 16 16 0 0 1-16 16z"]]
};
exports.faAirFreshener = faAirFreshener;
var faAlarmClock = {
  prefix: 'fad',
  iconName: 'alarm-clock',
  icon: [512, 512, [], "f34e", ["M474.49 462.06L434.55 422a223.25 223.25 0 0 0 44.61-134c0-123.71-99.9-224-223.14-224S32.88 164.29 32.88 288a223.25 223.25 0 0 0 44.61 134l-39.95 40.06a16.05 16.05 0 0 0 0 22.63l22.54 22.62a15.9 15.9 0 0 0 22.47.07l.07-.07 39.94-40.09a221.26 221.26 0 0 0 266.92 0l39.94 40.09a15.9 15.9 0 0 0 22.47.07l.07-.07 22.53-22.62a16 16 0 0 0 0-22.63zM346 355.51l-20 25a16 16 0 0 1-22.49 2.5L239 331.39a40 40 0 0 1-15-31.23V176a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16v112.62L343.5 333a16 16 0 0 1 2.5 22.51z", "M1 96a95.08 95.08 0 0 0 15.24 51.26L161.57 25.68A95 95 0 0 0 96.62 0C43.83 0 1 43 1 96zm342.5 237L288 288.62V176a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v124.16a40 40 0 0 0 15 31.23L303.51 383a16 16 0 0 0 22.49-2.5l20-25a16 16 0 0 0-2.5-22.5zM415.38 0a95.08 95.08 0 0 0-64.93 25.66l145.33 121.57A95.13 95.13 0 0 0 511 96c0-53-42.83-96-95.62-96z"]]
};
exports.faAlarmClock = faAlarmClock;
var faAlarmExclamation = {
  prefix: 'fad',
  iconName: 'alarm-exclamation',
  icon: [512, 512, [], "f843", ["M434.55 422a223.27 223.27 0 0 0 44.61-134c0-123.71-99.9-224-223.14-224S32.88 164.29 32.88 288a223.27 223.27 0 0 0 44.61 134l-39.95 40.06a16.05 16.05 0 0 0 0 22.63l22.54 22.62a15.89 15.89 0 0 0 22.54 0l39.94-40.09a221.27 221.27 0 0 0 266.92 0l39.94 40.09a15.89 15.89 0 0 0 22.54 0l22.53-22.62a16 16 0 0 0 0-22.63zM256 416a32 32 0 1 1 31.88-32A31.91 31.91 0 0 1 256 416zm38.05-238.4l-12.75 128a15.91 15.91 0 0 1-15.82 14.4h-18.93a15.92 15.92 0 0 1-15.84-14.4L218 177.6a16 16 0 0 1 15.8-17.6h44.42a15.92 15.92 0 0 1 15.84 17.6z", "M1 96a95.11 95.11 0 0 0 15.24 51.26L161.57 25.68A95 95 0 0 0 96.62 0C43.83 0 1 43 1 96zM415.38 0a95.09 95.09 0 0 0-64.93 25.66l145.33 121.57A95.13 95.13 0 0 0 511 96c0-53-42.83-96-95.62-96zM256 352a32 32 0 1 0 31.88 32A31.91 31.91 0 0 0 256 352zm22.21-192H233.8a16 16 0 0 0-15.8 17.6l12.76 128a15.92 15.92 0 0 0 15.79 14.4h18.93a15.91 15.91 0 0 0 15.83-14.4l12.75-128a15.92 15.92 0 0 0-15.84-17.6z"]]
};
exports.faAlarmExclamation = faAlarmExclamation;
var faAlarmPlus = {
  prefix: 'fad',
  iconName: 'alarm-plus',
  icon: [512, 512, [], "f844", ["M435.25 422A222.7 222.7 0 0 0 480 288c0-123.71-100.3-224-224-224S32 164.29 32 288a222.7 222.7 0 0 0 44.79 134l-40.1 40.09a16 16 0 0 0 0 22.63l22.62 22.62a16 16 0 0 0 22.63 0L122 467.22a222.82 222.82 0 0 0 268 0l40.1 40.09a16 16 0 0 0 22.63 0l22.62-22.62a16 16 0 0 0 0-22.63zM368 296a16 16 0 0 1-16 16h-72v72a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-72h-72a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16h72v-72a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v72h72a16 16 0 0 1 16 16z", "M352 264h-72v-72a16 16 0 0 0-16-16h-16a16 16 0 0 0-16 16v72h-72a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h72v72a16 16 0 0 0 16 16h16a16 16 0 0 0 16-16v-72h72a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16zM96 0A96 96 0 0 0 0 96a94.81 94.81 0 0 0 15.3 51.26L161.2 25.68A95.61 95.61 0 0 0 96 0zm320 0a95.68 95.68 0 0 0-65.18 25.66l145.9 121.57A94.93 94.93 0 0 0 512 96a96 96 0 0 0-96-96z"]]
};
exports.faAlarmPlus = faAlarmPlus;
var faAlarmSnooze = {
  prefix: 'fad',
  iconName: 'alarm-snooze',
  icon: [512, 512, [], "f845", ["M434.55 422a223.27 223.27 0 0 0 44.61-134c0-123.71-99.91-224-223.14-224S32.88 164.29 32.88 288a223.21 223.21 0 0 0 44.61 134l-39.95 40.06a16.05 16.05 0 0 0 0 22.63l22.54 22.62a15.89 15.89 0 0 0 22.54 0l39.94-40.09a221.25 221.25 0 0 0 266.91 0l39.95 40.09a15.89 15.89 0 0 0 22.54 0l22.53-22.62a16 16 0 0 0 0-22.63zM338.4 223L242 344h77.77a16 16 0 0 1 15.93 16v16a16 16 0 0 1-15.93 16H192.23a24 24 0 0 1-18.67-39L270 232h-77.77a16 16 0 0 1-15.94-16v-16a16 16 0 0 1 15.94-16h127.51a24 24 0 0 1 18.66 39z", "M319.74 184H192.23a16 16 0 0 0-15.94 16v16a16 16 0 0 0 15.94 16H270l-96.44 121a24 24 0 0 0 18.67 39h127.51a16 16 0 0 0 15.93-16v-16a16 16 0 0 0-15.93-16H242l96.4-121a24 24 0 0 0-18.66-39zM1 96a95.11 95.11 0 0 0 15.24 51.26L161.57 25.68A95 95 0 0 0 96.62 0C43.83 0 1 43 1 96zM415.38 0a95.09 95.09 0 0 0-64.93 25.66l145.32 121.57A95.14 95.14 0 0 0 511 96c0-53-42.84-96-95.62-96z"]]
};
exports.faAlarmSnooze = faAlarmSnooze;
var faAlbum = {
  prefix: 'fad',
  iconName: 'album',
  icon: [448, 512, [], "f89f", ["M416 32H32A32 32 0 0 0 0 64v384a32 32 0 0 0 32 32h384a32 32 0 0 0 32-32V64a32 32 0 0 0-32-32zM224 416a160 160 0 1 1 160-160 160 160 0 0 1-160 160z", "M224 96a160 160 0 1 0 160 160A160 160 0 0 0 224 96zm0 192a32 32 0 1 1 32-32 32 32 0 0 1-32 32z"]]
};
exports.faAlbum = faAlbum;
var faAlbumCollection = {
  prefix: 'fad',
  iconName: 'album-collection',
  icon: [512, 512, [], "f8a0", ["M480 160H32A32 32 0 0 0 .13 194.9l26.19 288A32 32 0 0 0 58.18 512h395.64a32 32 0 0 0 31.86-29.1l26.19-288A32 32 0 0 0 480 160zM256 472.89c-94.26 0-174.39-54.53-179.2-125.15C71.71 273.1 151.82 209.4 256 209.4s184.29 63.7 179.2 138.34c-4.81 70.63-84.93 125.15-179.2 125.15z", "M480 24a24 24 0 0 0-24-24H56a24 24 0 0 0-24 24v24h448zm-8 56H40a24 24 0 0 0-24 24v24h480v-24a24 24 0 0 0-24-24zM256 209.4c-104.18 0-184.29 63.7-179.19 138.34 4.81 70.62 84.94 125.15 179.2 125.15s174.38-54.52 179.19-125.15C440.29 273.1 360.18 209.4 256 209.4zm0 160.06c-16.36 0-29.73-9.68-29.86-21.72s13.23-22.09 29.86-22.09 30 9.93 29.87 22.09-13.51 21.72-29.87 21.72z"]]
};
exports.faAlbumCollection = faAlbumCollection;
var faAlicorn = {
  prefix: 'fad',
  iconName: 'alicorn',
  icon: [640, 512, [], "f6b0", ["M64.36 215.74A39.94 39.94 0 0 0 48 248v56a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16v-56a88 88 0 0 1 88-88h.45a95.57 95.57 0 0 0-24.09 55.74zM632 32H531.93a52.6 52.6 0 0 1-10.28 8.3c5.11 5.38 9.91 10.47 13.69 14.5a31.76 31.76 0 0 1 8.58 21.8v6.74l92.49-36.69A8 8 0 0 0 632 32z", "M535.34 54.8c-3.78-4-8.58-9.12-13.69-14.5 11.06-6.84 19.5-17.49 22.18-30.66A8.09 8.09 0 0 0 535.9 0h-120C346.67 0 288 64 288 128h-.08c-63.92 0-104.2-36.78-127.66-90.27-3.22-7.35-13.61-7.76-17-.5A158.37 158.37 0 0 0 128 105.1c0 67 51 136.25 128 150.9-96.87 0-138.75-73.3-153.39-109a96 96 0 0 0-8.16 147.09l-25.63 68.39a63.94 63.94 0 0 0-2.16 38l24.85 99.41A16 16 0 0 0 107 512h66a16 16 0 0 0 15.52-19.88l-26.33-105.26L186 323.27l102 22.31V496a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16V318.22A111.55 111.55 0 0 0 416 240c0-.22-.07-.42-.08-.64V136.89l16 7.11 18.9 37.7a32 32 0 0 0 40.49 15.37l32.55-13A32 32 0 0 0 544 154.31l-.06-77.71a31.76 31.76 0 0 0-8.6-21.8zM479.92 96a16 16 0 1 1 16-16 16 16 0 0 1-16 16z"]]
};
exports.faAlicorn = faAlicorn;
var faAlignCenter = {
  prefix: 'fad',
  iconName: 'align-center',
  icon: [448, 512, [], "f037", ["M108.1 96h231.81A12.09 12.09 0 0 0 352 83.9V44.09A12.09 12.09 0 0 0 339.91 32H108.1A12.09 12.09 0 0 0 96 44.09V83.9A12.1 12.1 0 0 0 108.1 96zm231.81 256A12.09 12.09 0 0 0 352 339.9v-39.81A12.09 12.09 0 0 0 339.91 288H108.1A12.09 12.09 0 0 0 96 300.09v39.81a12.1 12.1 0 0 0 12.1 12.1z", "M432 160H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0 256H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z"]]
};
exports.faAlignCenter = faAlignCenter;
var faAlignJustify = {
  prefix: 'fad',
  iconName: 'align-justify',
  icon: [448, 512, [], "f039", ["M432 416H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-256H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z", "M432 288H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-256H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z"]]
};
exports.faAlignJustify = faAlignJustify;
var faAlignLeft = {
  prefix: 'fad',
  iconName: 'align-left',
  icon: [448, 512, [], "f036", ["M12.83 352h262.34A12.82 12.82 0 0 0 288 339.17v-38.34A12.82 12.82 0 0 0 275.17 288H12.83A12.82 12.82 0 0 0 0 300.83v38.34A12.82 12.82 0 0 0 12.83 352zm0-256h262.34A12.82 12.82 0 0 0 288 83.17V44.83A12.82 12.82 0 0 0 275.17 32H12.83A12.82 12.82 0 0 0 0 44.83v38.34A12.82 12.82 0 0 0 12.83 96z", "M432 160H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0 256H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z"]]
};
exports.faAlignLeft = faAlignLeft;
var faAlignRight = {
  prefix: 'fad',
  iconName: 'align-right',
  icon: [448, 512, [], "f038", ["M435.17 32H172.83A12.82 12.82 0 0 0 160 44.83v38.34A12.82 12.82 0 0 0 172.83 96h262.34A12.82 12.82 0 0 0 448 83.17V44.83A12.82 12.82 0 0 0 435.17 32zm0 256H172.83A12.82 12.82 0 0 0 160 300.83v38.34A12.82 12.82 0 0 0 172.83 352h262.34A12.82 12.82 0 0 0 448 339.17v-38.34A12.82 12.82 0 0 0 435.17 288z", "M16 224h416a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm416 192H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z"]]
};
exports.faAlignRight = faAlignRight;
var faAlignSlash = {
  prefix: 'fad',
  iconName: 'align-slash',
  icon: [640, 512, [], "f846", ["M528 352h-31.46l-82.81-64H528a16 16 0 0 1 16 16v32a16 16 0 0 1-16 16zM96 304v32a16 16 0 0 0 16 16h175.21l-82.8-64H112a16 16 0 0 0-16 16zM528 96a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16H112a15.82 15.82 0 0 0-15 11.18L165.31 96zM112 416a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h340.83L370 416zm416-256H248.12l82.81 64H528a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z", "M633.82 458.1L45.46 3.38A16 16 0 0 0 23 6.19L3.37 31.46a16 16 0 0 0 2.81 22.45l588.36 454.72a16 16 0 0 0 22.46-2.81l19.64-25.27a16 16 0 0 0-2.82-22.45z"]]
};
exports.faAlignSlash = faAlignSlash;
var faAllergies = {
  prefix: 'fad',
  iconName: 'allergies',
  icon: [448, 512, [], "f461", ["M416 112a32.09 32.09 0 0 0-32 32v72a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8V64a32 32 0 0 0-64 0v152a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8V32a32 32 0 0 0-64 0v184a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8V64a32 32 0 1 0-64 0v241l-23.6-32.49a40 40 0 0 0-64.73 47.03L133.28 492.2a48.08 48.08 0 0 0 38.8 19.8H369.7a47.93 47.93 0 0 0 46.7-37l26.5-112.68A201.29 201.29 0 0 0 448 320V144a32.09 32.09 0 0 0-32-32zM176 288a16 16 0 1 1-16 16 16 16 0 0 1 16-16zm0 127.92a16 16 0 1 1 16-16 16 16 0 0 1-16 16zM240 448a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm0-96.07a16 16 0 1 1 16-16 16 16 0 0 1-16 16zM304 384a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm32 63.91a16 16 0 1 1 16-16 16 16 0 0 1-16 16zM368 320a16 16 0 1 1 16-16 16 16 0 0 1-16 16z", "M176 288a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm64 128a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm64-64a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm64-64a16 16 0 1 0 16 16 16 16 0 0 0-16-16z"]]
};
exports.faAllergies = faAllergies;
var faAmbulance = {
  prefix: 'fad',
  iconName: 'ambulance',
  icon: [640, 512, [], "f0f9", ["M464 352a80 80 0 1 0 80 80 80 80 0 0 0-80-80zm-288 0a80 80 0 1 0 80 80 80 80 0 0 0-80-80zm120-224h-56V72a8 8 0 0 0-8-8h-48a8 8 0 0 0-8 8v56h-56a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8h56v56a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8v-56h56a8 8 0 0 0 8-8v-48a8 8 0 0 0-8-8z", "M624 352h-16V243.9a48 48 0 0 0-14.1-33.9L494 110.1A48 48 0 0 0 460.1 96H416V48a48 48 0 0 0-48-48H48A48 48 0 0 0 0 48v320a48 48 0 0 0 48 48h18.16C74 361.93 119.78 320 176 320s102.54 41.86 110.38 96h67.24c7.85-54.14 54.1-96 110.38-96s102 41.93 109.84 96H624a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM304 184a8 8 0 0 1-8 8h-56v56a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8v-56h-56a8 8 0 0 1-8-8v-48a8 8 0 0 1 8-8h56V72a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v56h56a8 8 0 0 1 8 8zm256 72H416V144h44.1l99.9 99.9z"]]
};
exports.faAmbulance = faAmbulance;
var faAmericanSignLanguageInterpreting = {
  prefix: 'fad',
  iconName: 'american-sign-language-interpreting',
  icon: [640, 512, [], "f2a3", ["M638.14 227.07l-44.46-89.31a17.72 17.72 0 0 0-23.89-7.76l-66.41 33.49-92.8-8.66c-37.93 0-67.93 21.55-82 51.07-8.6 18 5.18 38.24 23.61 38.24-18.47 0-32.19 20.26-23.61 38.23 14.37 30.23 43 50.79 85.57 50.79a83.33 83.33 0 0 1-64.74-3.9 26.81 26.81 0 0 0-23.34 48.28c29.37 14.31 62 16.9 88.08 11.16A112.86 112.86 0 0 1 370 404a26.35 26.35 0 0 0-23 29.86c2.18 17.49 19.71 25.68 29.73 23.16a166.69 166.69 0 0 0 74.19-28.19 179.23 179.23 0 0 1-32.51 35.73 26.72 26.72 0 0 0 33.9 41.3A222.5 222.5 0 0 0 532 358.51L573.12 284l58.07-33.21a18.27 18.27 0 0 0 6.95-23.72zm-229.23 52.74a35.57 35.57 0 0 1-32.23-20.37 26.52 26.52 0 0 0-23.34-15.35 26.52 26.52 0 0 0 23.34-15.35 35.57 35.57 0 0 1 32.23-20.37c17.76 0 35.57 14.2 35.57 35.72v.22a35.54 35.54 0 0 1-35.57 35.5z", "M313.89 134.53c-29.37-14.31-62-16.9-88.08-11.16A112.54 112.54 0 0 1 270 108a26.72 26.72 0 0 0-6.67-53 166.79 166.79 0 0 0-74.19 28.18 179.46 179.46 0 0 1 32.51-35.72 26.73 26.73 0 0 0 3.61-37.67 26.44 26.44 0 0 0-37.51-3.63A222.47 222.47 0 0 0 108 153.5L66.88 228 8.81 261.22a18.27 18.27 0 0 0-6.95 23.72l44.46 89.3a17.72 17.72 0 0 0 23.89 7.81l66.41-33.48s93.91 8.65 94.47 8.65a89.4 89.4 0 0 0 80.3-51.07c8.59-18-5.19-38.23-23.62-38.23 18.47 0 32.19-20.26 23.62-38.23-14.37-30.23-43-50.79-85.58-50.79a83.29 83.29 0 0 1 64.74 3.91 26.81 26.81 0 0 0 23.34-48.28zm-82.8 97.67a35.57 35.57 0 0 1 32.23 20.37 26.52 26.52 0 0 0 23.34 15.35 26.52 26.52 0 0 0-23.34 15.35 35.59 35.59 0 0 1-32.23 20.37c-17.76 0-35.57-14.2-35.57-35.72v-.22a35.54 35.54 0 0 1 35.57-35.5z"]]
};
exports.faAmericanSignLanguageInterpreting = faAmericanSignLanguageInterpreting;
var faAmpGuitar = {
  prefix: 'fad',
  iconName: 'amp-guitar',
  icon: [512, 512, [], "f8a1", ["M321 403a16 16 0 1 0-16-16 16 16 0 0 0 16 16zm-64-128a16 16 0 0 0 16-16h-32a16 16 0 0 0 16 16zm-32 96a16 16 0 1 0-16-16 16 16 0 0 0 16 16zm32-64a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm0 96a16 16 0 1 0-16-16 16 16 0 0 0 16 16zm32-32a16 16 0 1 0-16-16 16 16 0 0 0 16 16zm64 0a16 16 0 1 0-16-16 16 16 0 0 0 16 16zm32 32a16 16 0 1 0-16-16 16 16 0 0 0 16 16zm-64-128a16 16 0 0 0 16-16h-32a16 16 0 0 0 16 16zm0 32a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm32 0a16 16 0 1 0-16-16 16 16 0 0 0 16 16zm-64 0a16 16 0 1 0-16-16 16 16 0 0 0 16 16zm-160 0a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm-32 32a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm288-32a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm-256 96a16 16 0 1 0-16-16 16 16 0 0 0 16 16zm288-96a16 16 0 1 0-16-16 16 16 0 0 0 16 16zm-224-32a16 16 0 0 0 16-16h-32a16 16 0 0 0 16 16zm-32 32a16 16 0 1 0-16-16 16 16 0 0 0 16 16zm64 0a16 16 0 1 0-16-16 16 16 0 0 0 16 16zm-32 0a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm0 96a16 16 0 1 0-16-16 16 16 0 0 0 16 16zm-32-32a16 16 0 1 0-16-16 16 16 0 0 0 16 16zm-32-96a16 16 0 0 0 16-16h-32a16 16 0 0 0 16 16zm224 128a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm-32 32a16 16 0 0 0-16 16h32a16 16 0 0 0-16-16zm-64 0a16 16 0 0 0-16 16h32a16 16 0 0 0-16-16zm32-32a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm96 32a16 16 0 0 0-16 16h32a16 16 0 0 0-16-16zm32-32a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm16-144a16 16 0 0 0 16 16v-16zM225 403a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm208-80a16 16 0 0 0 16 16v-32a16 16 0 0 0-16 16zm0 64a16 16 0 0 0 16 16v-32a16 16 0 0 0-16 16zm-48-112a16 16 0 0 0 16-16h-32a16 16 0 0 0 16 16zm48 176h16v-16a16 16 0 0 0-16 16zM81 259H65v16a16 16 0 0 0 16-16zm0 64a16 16 0 0 0-16-16v32a16 16 0 0 0 16-16zm336 48a16 16 0 1 0-16-16 16 16 0 0 0 16 16zM97 307a16 16 0 1 0-16-16 16 16 0 0 0 16 16zm-16 80a16 16 0 0 0-16-16v32a16 16 0 0 0 16-16zm48 48a16 16 0 0 0-16 16h32a16 16 0 0 0-16-16zm-64 0v16h16a16 16 0 0 0-16-16zm128 0a16 16 0 0 0-16 16h32a16 16 0 0 0-16-16zm-32-32a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm-64 0a16 16 0 1 0 16 16 16 16 0 0 0-16-16zM257 51c26.89 0 54 14.79 76.25 32h70.25C378.75 55.71 322.51 3 257 3S135.25 55.71 110.5 83h70.25C203 65.79 230.12 51 257 51z", "M465 83H49a48 48 0 0 0-48 48v336a48 48 0 0 0 48 48h416a48 48 0 0 0 48-48V131a48 48 0 0 0-48-48zm-120 64a24 24 0 1 1-24 24 24 24 0 0 1 24-24zm-176 0a24 24 0 1 1-24 24 24 24 0 0 1 24-24zm-80 0a24 24 0 1 1-24 24 24 24 0 0 1 24-24zm360 304H65V259h384zm-24-256a24 24 0 1 1 24-24 24 24 0 0 1-24 24z"]]
};
exports.faAmpGuitar = faAmpGuitar;
var faAnalytics = {
  prefix: 'fad',
  iconName: 'analytics',
  icon: [576, 512, [], "f643", ["M510.62 92.63l-95.32 76.28a48.66 48.66 0 0 1 .7 7.09 48 48 0 0 1-96 0 47.44 47.44 0 0 1 .71-7.1l-95.33-76.27a45.11 45.11 0 0 1-29.66 1.59l-101.5 101.5A47.9 47.9 0 1 1 48 160a47.87 47.87 0 0 1 12.28 1.78l101.5-101.5A47.87 47.87 0 0 1 160 48a48 48 0 0 1 96 0 47.44 47.44 0 0 1-.71 7.1l95.32 76.26a46.5 46.5 0 0 1 34.76 0l95.34-76.27A48.66 48.66 0 0 1 480 48a48.36 48.36 0 1 1 30.62 44.63z", "M400 320h-64a16 16 0 0 0-16 16v160a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16V336a16 16 0 0 0-16-16zm160-128h-64a16 16 0 0 0-16 16v288a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16V208a16 16 0 0 0-16-16zm-320 0h-64a16 16 0 0 0-16 16v288a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16V208a16 16 0 0 0-16-16zM80 352H16a16 16 0 0 0-16 16v128a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16V368a16 16 0 0 0-16-16z"]]
};
exports.faAnalytics = faAnalytics;
var faAnchor = {
  prefix: 'fad',
  iconName: 'anchor',
  icon: [576, 512, [], "f13d", ["M372 192h-52v-5.47A96 96 0 0 0 384 96c0-52.22-42.36-95.25-94.58-96A96 96 0 0 0 256 186.54V192h-52a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h168a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zM288 64a32 32 0 1 1-32 32 32 32 0 0 1 32-32z", "M564 352h-32.51C509.63 454.62 394.61 512 288 512c-106.41 0-221.58-57.27-243.46-160H12a12 12 0 0 1-8.51-20.49l67.26-67a12.07 12.07 0 0 1 17 0l67.26 67a12 12 0 0 1-8.46 20.49h-35.26c20.37 54.34 85.47 86.62 144.61 94V288h64.22v158c59.36-7.43 124.26-39.7 144.62-94h-35.26a12 12 0 0 1-8.48-20.49l67.26-67a12.07 12.07 0 0 1 17 0l67.26 67A12 12 0 0 1 564 352z"]]
};
exports.faAnchor = faAnchor;
var faAngel = {
  prefix: 'fad',
  iconName: 'angel',
  icon: [576, 512, [], "f779", ["M384 64c0 2.3-3.3 6.1-9.1 10.3a117.38 117.38 0 0 1 16.6 27.1C406.74 90.9 416 78 416 64c0-35.3-57.3-64-128-64S160 28.7 160 64c0 14 9.3 26.9 24.5 37.4a108.79 108.79 0 0 1 16.6-27.1c-5.8-4.1-9.1-7.9-9.1-10.3 0-8 34-32 96-32s96 24 96 32zm187.77 389.1l-38.17-78.6a49.38 49.38 0 0 1 0-43.1c4.79-9.8 8.69-16.7 11.89-22.1C555 292.7 560 282.8 560 256c0-51.1-46.87-96-100.35-96a93 93 0 0 0-66.26 28.1l-72.54 73.27a103.63 103.63 0 0 1 60 52.13L480 512h55.6a40.29 40.29 0 0 0 34.18-19 41.12 41.12 0 0 0 1.99-39.9zM116.34 160C62.86 160 16 204.9 16 256c0 26.8 5 36.7 14.52 53.3 3.2 5.4 7.1 12.3 11.89 22.1a49.38 49.38 0 0 1 0 43.1L4.23 453.1a41.12 41.12 0 0 0 2 39.9 40.29 40.29 0 0 0 34.17 19H96l99.22-198.5a103.63 103.63 0 0 1 60-52.13L182.6 188.1a93 93 0 0 0-66.26-28.1z", "M288 224a80 80 0 1 0-80-80 80 80 0 0 0 80 80zm93.4 89.54a104.58 104.58 0 0 0-186.8 0L96 512h384z"]]
};
exports.faAngel = faAngel;
var faAngleDoubleDown = {
  prefix: 'fad',
  iconName: 'angle-double-down',
  icon: [320, 512, [], "f103", ["M143 256L7.05 120.37a23.78 23.78 0 0 1 0-33.8L29.64 64a23.94 23.94 0 0 1 33.89 0l96.37 96.13L256.27 64a23.94 23.94 0 0 1 33.89 0L313 86.47a23.78 23.78 0 0 1 0 33.8L177 255.88a23.94 23.94 0 0 1-34 .1z", "M143 447.89L7.05 312.34a23.77 23.77 0 0 1 0-33.79L29.74 256a23.94 23.94 0 0 1 33.89 0L160 352.11l96.47-96a23.94 23.94 0 0 1 33.89 0L313 278.65a23.77 23.77 0 0 1 0 33.79L177 448a24 24 0 0 1-34-.11z"]]
};
exports.faAngleDoubleDown = faAngleDoubleDown;
var faAngleDoubleLeft = {
  prefix: 'fad',
  iconName: 'angle-double-left',
  icon: [448, 512, [], "f100", ["M224 239l135.61-136a23.78 23.78 0 0 1 33.8 0L416 125.64a23.94 23.94 0 0 1 0 33.89l-96.16 96.37L416 352.27a23.94 23.94 0 0 1 0 33.89L393.53 409a23.78 23.78 0 0 1-33.8 0L224.12 273a23.94 23.94 0 0 1-.1-34z", "M32.11 239l135.55-136a23.77 23.77 0 0 1 33.79 0L224 125.74a23.94 23.94 0 0 1 0 33.89L127.89 256l96 96.47a23.94 23.94 0 0 1 0 33.89L201.35 409a23.77 23.77 0 0 1-33.79 0L32 273a24 24 0 0 1 .11-34z"]]
};
exports.faAngleDoubleLeft = faAngleDoubleLeft;
var faAngleDoubleRight = {
  prefix: 'fad',
  iconName: 'angle-double-right',
  icon: [448, 512, [], "f101", ["M224 273L88.37 409a23.78 23.78 0 0 1-33.8 0L32 386.36a23.94 23.94 0 0 1 0-33.89l96.13-96.37L32 159.73a23.94 23.94 0 0 1 0-33.89l22.44-22.79a23.78 23.78 0 0 1 33.8 0L223.88 239a23.94 23.94 0 0 1 .1 34z", "M415.89 273L280.34 409a23.77 23.77 0 0 1-33.79 0L224 386.26a23.94 23.94 0 0 1 0-33.89L320.11 256l-96-96.47a23.94 23.94 0 0 1 0-33.89l22.52-22.59a23.77 23.77 0 0 1 33.79 0L416 239a24 24 0 0 1-.11 34z"]]
};
exports.faAngleDoubleRight = faAngleDoubleRight;
var faAngleDoubleUp = {
  prefix: 'fad',
  iconName: 'angle-double-up',
  icon: [320, 512, [], "f102", ["M177 256l136 135.63a23.78 23.78 0 0 1 0 33.8L290.36 448a23.94 23.94 0 0 1-33.89 0l-96.37-96.16L63.73 448a23.94 23.94 0 0 1-33.89 0L7.05 425.53a23.78 23.78 0 0 1 0-33.8L143 256.12a23.94 23.94 0 0 1 34-.1z", "M177 64.11l136 135.55a23.77 23.77 0 0 1 0 33.79L290.26 256a23.94 23.94 0 0 1-33.89 0L160 159.89l-96.47 96a23.94 23.94 0 0 1-33.89 0L7.05 233.35a23.77 23.77 0 0 1 0-33.79L143 64a24 24 0 0 1 34 .11z"]]
};
exports.faAngleDoubleUp = faAngleDoubleUp;
var faAngleDown = {
  prefix: 'fad',
  iconName: 'angle-down',
  icon: [320, 512, [], "f107", ["M160 256.14l-56.51 56.47-96.44-96.15a23.77 23.77 0 0 1-.18-33.61l.18-.18 22.59-22.51a23.94 23.94 0 0 1 33.85 0z", "M313 182.57L290.21 160a23.94 23.94 0 0 0-33.85 0L103.47 312.61 143 352l.06.06a24 24 0 0 0 33.93-.16L313 216.36l.18-.17a23.78 23.78 0 0 0-.18-33.62z"]]
};
exports.faAngleDown = faAngleDown;
var faAngleLeft = {
  prefix: 'fad',
  iconName: 'angle-left',
  icon: [256, 512, [], "f104", ["M223.83 352.44a24 24 0 0 1 0 33.86L201.32 409l-.18.18a23.76 23.76 0 0 1-33.6-.18l-96.15-96.5 56.47-56.5z", "M167.81 102.87l-.17.18L32.11 239a24 24 0 0 0-.17 33.93l.06.07 39.39 39.51L224 159.66a23.92 23.92 0 0 0 0-33.84l-22.54-22.74a23.77 23.77 0 0 0-33.62-.23z"]]
};
exports.faAngleLeft = faAngleLeft;
var faAngleRight = {
  prefix: 'fad',
  iconName: 'angle-right',
  icon: [256, 512, [], "f105", ["M128.14 256l56.47 56.49L88.46 409a23.76 23.76 0 0 1-33.6.18l-.18-.18-22.51-22.68a23.92 23.92 0 0 1 0-33.84z", "M54.58 103.07L32 125.81a23.92 23.92 0 0 0 0 33.84L184.61 312.5 224 273l.06-.06a24 24 0 0 0-.16-33.94L88.37 103l-.17-.18a23.78 23.78 0 0 0-33.62.22z"]]
};
exports.faAngleRight = faAngleRight;
var faAngleUp = {
  prefix: 'fad',
  iconName: 'angle-up',
  icon: [320, 512, [], "f106", ["M63.52 351.84a23.94 23.94 0 0 1-33.85 0L7.05 329.33l-.18-.18a23.77 23.77 0 0 1 .18-33.61l96.42-96.15L160 255.86z", "M313.13 295.81l-.18-.17L177 160.11a24 24 0 0 0-34-.11l-39.51 39.39L256.33 352a23.94 23.94 0 0 0 33.85 0L313 329.43a23.78 23.78 0 0 0 .13-33.62z"]]
};
exports.faAngleUp = faAngleUp;
var faAngry = {
  prefix: 'fad',
  iconName: 'angry',
  icon: [496, 512, [], "f556", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8ZM136,240a31.87,31.87,0,0,1,10.22-23.43l-30.82-9.24a16,16,0,0,1,9.2-30.66l80,24A16,16,0,0,1,200,232h-1a32,32,0,1,1-63,8ZM304.32,394.05c-27.93-33.26-84.59-33.26-112.62,0-13.57,16.23-38.38-4.18-24.72-20.41a105.93,105.93,0,0,1,162,0C342.81,390.07,317.79,410.09,304.32,394.05ZM381.6,207.33,350,216.8A32,32,0,1,1,297,232a16,16,0,0,1-4.61-31.32l80-24a16,16,0,1,1,9.2,30.65h0Z", "M204.6,200.67l-80-24a16,16,0,0,0-9.2,30.66h0l30.82,9.24A32,32,0,1,0,199,232h1a16,16,0,0,0,4.59-31.33ZM392.33,187.4a16,16,0,0,0-19.93-10.72h0l-80,24A16,16,0,0,0,297,232a32,32,0,1,0,53-15.2l31.58-9.47a16,16,0,0,0,10.76-19.9h0Z"]]
};
exports.faAngry = faAngry;
var faAnkh = {
  prefix: 'fad',
  iconName: 'ankh',
  icon: [320, 512, [], "f644", ["M296 256H24a24 24 0 0 0-24 24v32a24 24 0 0 0 24 24h272a24 24 0 0 0 24-24v-32a24 24 0 0 0-24-24z", "M120 488a24 24 0 0 0 24 24h32a24 24 0 0 0 24-24V336h-80zM160 0C89.31 0 32 55.63 32 144c0 37.65 15.54 78 36.62 112h182.76C272.46 222 288 181.65 288 144 288 55.63 230.69 0 160 0zm0 244.87c-20.86-22.72-48-66.21-48-100.87 0-39.48 18.39-64 48-64s48 24.52 48 64c0 34.66-27.14 78.14-48 100.87z"]]
};
exports.faAnkh = faAnkh;
var faAppleAlt = {
  prefix: 'fad',
  iconName: 'apple-alt',
  icon: [448, 512, [], "f5d1", ["M295.92 88q-14 13-37 19a116.69 116.69 0 0 1-35 5l-15-1a128.32 128.32 0 0 1 0-32q4-36 23-55 14-13 37-19a116.69 116.69 0 0 1 35-5l15 1 1 15a117.29 117.29 0 0 1-5 35q-6 23-19 37z", "M350.86 129q39 7 63.92 42 22 31 30 78a248.7 248.7 0 0 1-1 86q-12 71-47.94 119-43 58-107.87 58-16 0-35-10a56.45 56.45 0 0 0-57.97 0q-19 10-35 10-64.85 0-107.8-58-36-48-47.94-119a248.7 248.7 0 0 1-1-86q8-47 30-78 25-35 63.92-42 24-4 65.92 7 36 10 60.93 24 25-14 60.93-24 41.93-11 65.9-7z"]]
};
exports.faAppleAlt = faAppleAlt;
var faAppleCrate = {
  prefix: 'fad',
  iconName: 'apple-crate',
  icon: [512, 512, [], "f6b1", ["M424.17 80.61c-18.13-3-51.9 6.18-72.49 17.69-17-9.52-42.45-17-61.15-17.79 1.82 2.21 3.83 4.17 5.5 6.58 20.84 30.15 25.74 72.3 22.17 104.91H478c5.25-39.47-5.16-102.65-53.83-111.39zM210.53 50.47C221.82 38.28 225 18.44 223.75.25c-12.88-.86-35.67-.12-50 13.28-16.55 16.6-13.75 46.36-13.24 50.22C179 65 198.28 61.9 210.53 50.47zm191.69 0c11.29-12.19 14.43-32 13.22-50.22-12.88-.86-35.67-.12-50 13.28-16.53 16.6-13.77 46.36-13.22 50.22 18.45 1.25 37.78-1.85 50-13.28zM232.48 80.61c-18.13-3-51.9 6.18-72.48 17.69-20.66-11.56-54.43-20.71-72.48-17.69C38.91 89.34 28.53 152.88 33.7 192h252.6c5.26-39.47-5.15-102.65-53.82-111.39z", "M496 224H16a16 16 0 0 0-16 16v112h512V240a16 16 0 0 0-16-16zM64 304a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm384 0a16 16 0 1 1 16-16 16 16 0 0 1-16 16zM0 496a16 16 0 0 0 16 16h480a16 16 0 0 0 16-16V384H0zm448-64a16 16 0 1 1-16 16 16 16 0 0 1 16-16zm-384 0a16 16 0 1 1-16 16 16 16 0 0 1 16-16z"]]
};
exports.faAppleCrate = faAppleCrate;
var faArchive = {
  prefix: 'fad',
  iconName: 'archive',
  icon: [512, 512, [], "f187", ["M32 160v288a32 32 0 0 0 32 32h384a32 32 0 0 0 32-32V160zm288 84a12 12 0 0 1-12 12H204a12 12 0 0 1-12-12v-8a12 12 0 0 1 12-12h104a12 12 0 0 1 12 12z", "M512 64v48a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16V64a32 32 0 0 1 32-32h448a32 32 0 0 1 32 32z"]]
};
exports.faArchive = faArchive;
var faArchway = {
  prefix: 'fad',
  iconName: 'archway',
  icon: [576, 512, [], "f557", ["M576 16v32a16 16 0 0 1-16 16H16A16 16 0 0 1 0 48V16A16 16 0 0 1 16 0h544a16 16 0 0 1 16 16z", "M576 464v32a16 16 0 0 1-16 16H400a16 16 0 0 1-16-16V320a96 96 0 0 0-192 0v176a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h16V96h512v352h16a16 16 0 0 1 16 16z"]]
};
exports.faArchway = faArchway;
var faArrowAltCircleDown = {
  prefix: 'fad',
  iconName: 'arrow-alt-circle-down',
  icon: [512, 512, [], "f358", ["M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm124.41 268.32L264.52 390.48a12.08 12.08 0 0 1-17 0L131.59 276.32c-7.67-7.49-2.22-20.48 8.57-20.48h71.51V140a12.08 12.08 0 0 1 12.1-12h64.56a12.08 12.08 0 0 1 12.1 12v115.84h71.41c10.79 0 16.24 12.89 8.57 20.48z", "M223.77 128h64.56a12.08 12.08 0 0 1 12.1 12v115.84h71.41c10.79 0 16.24 12.89 8.57 20.48L264.52 390.48a12.08 12.08 0 0 1-17 0L131.59 276.32c-7.67-7.49-2.22-20.48 8.57-20.48h71.51V140a12.08 12.08 0 0 1 12.1-12z"]]
};
exports.faArrowAltCircleDown = faArrowAltCircleDown;
var faArrowAltCircleLeft = {
  prefix: 'fad',
  iconName: 'arrow-alt-circle-left',
  icon: [512, 512, [], "f359", ["M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm128 280.33a12.08 12.08 0 0 1-12 12.1H256.16v71.41c0 10.79-12.89 16.24-20.48 8.57L121.52 264.52a12.08 12.08 0 0 1 0-17l114.16-115.93c7.49-7.67 20.48-2.22 20.48 8.57v71.51H372a12.08 12.08 0 0 1 12 12.1z", "M384 223.77v64.56a12.08 12.08 0 0 1-12 12.1H256.16v71.41c0 10.79-12.89 16.24-20.48 8.57L121.52 264.52a12.08 12.08 0 0 1 0-17l114.16-115.93c7.49-7.67 20.48-2.22 20.48 8.57v71.51H372a12.08 12.08 0 0 1 12 12.1z"]]
};
exports.faArrowAltCircleLeft = faArrowAltCircleLeft;
var faArrowAltCircleRight = {
  prefix: 'fad',
  iconName: 'arrow-alt-circle-right',
  icon: [512, 512, [], "f35a", ["M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm134.48 256.52L276.32 380.41c-7.49 7.67-20.48 2.22-20.48-8.57v-71.51H140a12.08 12.08 0 0 1-12-12.1v-64.56a12.08 12.08 0 0 1 12-12.1h115.84v-71.41c0-10.79 12.89-16.24 20.48-8.57l114.16 115.89a12.08 12.08 0 0 1 0 17.04z", "M128 288.23v-64.56a12.08 12.08 0 0 1 12-12.1h115.84v-71.41c0-10.79 12.89-16.24 20.48-8.57l114.16 115.89a12.08 12.08 0 0 1 0 17L276.32 380.41c-7.49 7.67-20.48 2.22-20.48-8.57v-71.51H140a12.08 12.08 0 0 1-12-12.1z"]]
};
exports.faArrowAltCircleRight = faArrowAltCircleRight;
var faArrowAltCircleUp = {
  prefix: 'fad',
  iconName: 'arrow-alt-circle-up',
  icon: [512, 512, [], "f35b", ["M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm115.84 248.16h-71.51V372a12.08 12.08 0 0 1-12.1 12h-64.56a12.08 12.08 0 0 1-12.1-12V256.16h-71.41c-10.79 0-16.24-12.89-8.57-20.48l115.89-114.16a12.08 12.08 0 0 1 17 0l115.93 114.16c7.67 7.49 2.22 20.48-8.57 20.48z", "M288.23 384h-64.56a12.08 12.08 0 0 1-12.1-12V256.16h-71.41c-10.79 0-16.24-12.89-8.57-20.48l115.89-114.16a12.08 12.08 0 0 1 17 0l115.93 114.16c7.67 7.49 2.22 20.48-8.57 20.48h-71.51V372a12.08 12.08 0 0 1-12.1 12z"]]
};
exports.faArrowAltCircleUp = faArrowAltCircleUp;
var faArrowAltDown = {
  prefix: 'fad',
  iconName: 'arrow-alt-down',
  icon: [448, 512, [], "f354", ["M288,56V256H159.88V56a24,24,0,0,1,24-24H264A24,24,0,0,1,288,56Z", "M408.93,297,241,473a24.09,24.09,0,0,1-34,0L39.07,297c-15.11-15.09-4.4-41,17-41H391.93C413.35,256,424,281.76,408.93,297Z"]]
};
exports.faArrowAltDown = faArrowAltDown;
var faArrowAltFromBottom = {
  prefix: 'fad',
  iconName: 'arrow-alt-from-bottom',
  icon: [384, 512, [], "f346", ["M360 480H24a24 24 0 0 1-24-24v-16a24 24 0 0 1 24-24h336a24 24 0 0 1 24 24v16a24 24 0 0 1-24 24z", "M232 384h-80a23.94 23.94 0 0 1-24-24V224H40.3c-17.8 0-26.8-21.51-14.2-34.11L178.4 37.63a19.36 19.36 0 0 1 27.3 0l152.1 152.23c12.6 12.6 3.7 34.11-14.1 34.11H256V360a23.94 23.94 0 0 1-24 24z"]]
};
exports.faArrowAltFromBottom = faArrowAltFromBottom;
var faArrowAltFromLeft = {
  prefix: 'fad',
  iconName: 'arrow-alt-from-left',
  icon: [448, 512, [], "f347", ["M0 424V88a23.94 23.94 0 0 1 24-24h16a23.94 23.94 0 0 1 24 24v336a23.94 23.94 0 0 1-24 24H24a23.94 23.94 0 0 1-24-24z", "M96 296v-80a23.94 23.94 0 0 1 24-24h136v-87.8c0-17.8 21.51-26.7 34.11-14.1l152.26 152.2a19.36 19.36 0 0 1 0 27.3L290.14 421.8c-12.6 12.6-34.11 3.7-34.11-14.1V320H120a23.94 23.94 0 0 1-24-24z"]]
};
exports.faArrowAltFromLeft = faArrowAltFromLeft;
var faArrowAltFromRight = {
  prefix: 'fad',
  iconName: 'arrow-alt-from-right',
  icon: [448, 512, [], "f348", ["M448 88v336a23.94 23.94 0 0 1-24 24h-16a23.94 23.94 0 0 1-24-24V88a23.94 23.94 0 0 1 24-24h16a23.94 23.94 0 0 1 24 24z", "M352 215.89V296a24 24 0 0 1-24 24H192v88c0 17.82-21.51 26.73-34.11 14.12L5.63 269.67a19.4 19.4 0 0 1 0-27.34L157.86 89.91C170.46 77.3 192 86.21 192 104v87.83h136a24 24 0 0 1 24 24.06z"]]
};
exports.faArrowAltFromRight = faArrowAltFromRight;
var faArrowAltFromTop = {
  prefix: 'fad',
  iconName: 'arrow-alt-from-top',
  icon: [384, 512, [], "f349", ["M384 56v16a23.94 23.94 0 0 1-24 24H24A23.94 23.94 0 0 1 0 72V56a23.94 23.94 0 0 1 24-24h336a23.94 23.94 0 0 1 24 24z", "M151.89 128H232a24 24 0 0 1 24 24v136h88c17.82 0 26.73 21.51 14.12 34.11L205.67 474.37a19.4 19.4 0 0 1-27.34 0L25.91 322.14C13.3 309.54 22.21 288 40 288h87.83V152a24 24 0 0 1 24.06-24z"]]
};
exports.faArrowAltFromTop = faArrowAltFromTop;
var faArrowAltLeft = {
  prefix: 'fad',
  iconName: 'arrow-alt-left',
  icon: [448, 512, [], "f355", ["M424 320H224V191.89h200a24 24 0 0 1 24 24V296a24 24 0 0 1-24 24z", "M183 440.92L7 273a24.06 24.06 0 0 1 0-34L183 71.09c15.1-15.11 41-4.4 41 17v335.83c0 21.42-25.76 32.13-41 17z"]]
};
exports.faArrowAltLeft = faArrowAltLeft;
var faArrowAltRight = {
  prefix: 'fad',
  iconName: 'arrow-alt-right',
  icon: [448, 512, [], "f356", ["M24 192h200v128.14H24a24 24 0 0 1-24-24V216a24 24 0 0 1 24-24z", "M265 71.11L441 239a24.08 24.08 0 0 1 0 34L265 440.94c-15.1 15.11-41 4.4-41-17V88.11c0-21.42 25.75-32.11 41-17z"]]
};
exports.faArrowAltRight = faArrowAltRight;
var faArrowAltSquareDown = {
  prefix: 'fad',
  iconName: 'arrow-alt-square-down',
  icon: [448, 512, [], "f350", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-51.58 244.32l-116 115.16a12.08 12.08 0 0 1-17 0L99.58 276.32c-7.66-7.49-2.21-20.32 8.57-20.32h71.49V140a12.07 12.07 0 0 1 12.1-12h64.52a12.07 12.07 0 0 1 12.1 12v116h71.49c10.78 0 16.23 12.83 8.57 20.32z", "M191.74 128h64.52a12.07 12.07 0 0 1 12.1 12v116h71.49c10.78 0 16.23 12.83 8.57 20.32l-116 115.16a12.08 12.08 0 0 1-17 0L99.58 276.32c-7.66-7.49-2.21-20.32 8.57-20.32h71.49V140a12.07 12.07 0 0 1 12.1-12z"]]
};
exports.faArrowAltSquareDown = faArrowAltSquareDown;
var faArrowAltSquareLeft = {
  prefix: 'fad',
  iconName: 'arrow-alt-square-left',
  icon: [448, 512, [], "f351", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-48 256.26a12.07 12.07 0 0 1-12 12.1H224v71.49c0 10.78-12.83 16.23-20.32 8.57L88.52 264.47a12.08 12.08 0 0 1 0-17l115.16-115.89c7.49-7.66 20.32-2.21 20.32 8.57v71.49h116a12.07 12.07 0 0 1 12 12.1z", "M352 223.74v64.52a12.07 12.07 0 0 1-12 12.1H224v71.49c0 10.78-12.83 16.23-20.32 8.57L88.52 264.47a12.08 12.08 0 0 1 0-17l115.16-115.89c7.49-7.66 20.32-2.21 20.32 8.57v71.49h116a12.07 12.07 0 0 1 12 12.1z"]]
};
exports.faArrowAltSquareLeft = faArrowAltSquareLeft;
var faArrowAltSquareRight = {
  prefix: 'fad',
  iconName: 'arrow-alt-square-right',
  icon: [448, 512, [], "f352", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-40.52 232.57L244.32 380.42c-7.49 7.66-20.32 2.21-20.32-8.57v-71.49H108a12.07 12.07 0 0 1-12-12.1v-64.52a12.07 12.07 0 0 1 12-12.1h116v-71.49c0-10.78 12.83-16.23 20.32-8.57l115.16 116a12.08 12.08 0 0 1 0 16.99z", "M96 288.26v-64.52a12.07 12.07 0 0 1 12-12.1h116v-71.49c0-10.78 12.83-16.23 20.32-8.57l115.16 116a12.08 12.08 0 0 1 0 17L244.32 380.42c-7.49 7.66-20.32 2.21-20.32-8.57v-71.49H108a12.07 12.07 0 0 1-12-12.1z"]]
};
exports.faArrowAltSquareRight = faArrowAltSquareRight;
var faArrowAltSquareUp = {
  prefix: 'fad',
  iconName: 'arrow-alt-square-up',
  icon: [448, 512, [], "f353", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-60.15 224h-71.49v116a12.07 12.07 0 0 1-12.1 12h-64.52a12.07 12.07 0 0 1-12.1-12V256h-71.49c-10.78 0-16.23-12.83-8.57-20.32l116-115.16a12.08 12.08 0 0 1 17 0l115.84 115.16c7.66 7.49 2.21 20.32-8.57 20.32z", "M256.26 384h-64.52a12.07 12.07 0 0 1-12.1-12V256h-71.49c-10.78 0-16.23-12.83-8.57-20.32l116-115.16a12.08 12.08 0 0 1 17 0l115.84 115.16c7.66 7.49 2.21 20.32-8.57 20.32h-71.49v116a12.07 12.07 0 0 1-12.1 12z"]]
};
exports.faArrowAltSquareUp = faArrowAltSquareUp;
var faArrowAltToBottom = {
  prefix: 'fad',
  iconName: 'arrow-alt-to-bottom',
  icon: [384, 512, [], "f34a", ["M360 480H24a24 24 0 0 1-24-24v-16a24 24 0 0 1 24-24h336a24 24 0 0 1 24 24v16a24 24 0 0 1-24 24z", "M151.92 32h80a23.94 23.94 0 0 1 24 24v136h87.7c17.8 0 26.8 21.51 14.2 34.11l-152.3 152.26a19.36 19.36 0 0 1-27.3 0L26.12 226.14c-12.6-12.6-3.7-34.11 14.1-34.11h87.7V56a23.94 23.94 0 0 1 24-24z"]]
};
exports.faArrowAltToBottom = faArrowAltToBottom;
var faArrowAltToLeft = {
  prefix: 'fad',
  iconName: 'arrow-alt-to-left',
  icon: [448, 512, [], "f34b", ["M0 424V88a23.94 23.94 0 0 1 24-24h16a23.94 23.94 0 0 1 24 24v336a23.94 23.94 0 0 1-24 24H24a23.94 23.94 0 0 1-24-24z", "M448 215.9v80a23.94 23.94 0 0 1-24 24H288v87.8c0 17.8-21.51 26.7-34.11 14.1L101.63 269.6a19.36 19.36 0 0 1 0-27.3L253.86 90.1c12.6-12.6 34.14-3.7 34.14 14.1v87.7h136a23.94 23.94 0 0 1 24 24z"]]
};
exports.faArrowAltToLeft = faArrowAltToLeft;
var faArrowAltToRight = {
  prefix: 'fad',
  iconName: 'arrow-alt-to-right',
  icon: [448, 512, [], "f34c", ["M448 88v336a23.94 23.94 0 0 1-24 24h-16a23.94 23.94 0 0 1-24-24V88a23.94 23.94 0 0 1 24-24h16a23.94 23.94 0 0 1 24 24z", "M0 296.11V216a24 24 0 0 1 24-24h136v-88c0-17.82 21.51-26.73 34.11-14.12l152.26 152.45a19.4 19.4 0 0 1 0 27.34L194.14 422.09C181.54 434.7 160 425.79 160 408v-87.86H24a24 24 0 0 1-24-24.03z"]]
};
exports.faArrowAltToRight = faArrowAltToRight;
var faArrowAltToTop = {
  prefix: 'fad',
  iconName: 'arrow-alt-to-top',
  icon: [384, 512, [], "f34d", ["M24 32h336a23.94 23.94 0 0 1 24 23.88V72a23.94 23.94 0 0 1-23.88 24H24A23.94 23.94 0 0 1 0 72.12V56a23.94 23.94 0 0 1 23.88-24z", "M232.11 480H152a24 24 0 0 1-24-24V320H40c-17.82 0-26.73-21.51-14.12-34.11l152.45-152.26a19.4 19.4 0 0 1 27.34 0l152.42 152.23C370.7 298.46 361.79 320 344 320h-87.83v136a24 24 0 0 1-24 24z"]]
};
exports.faArrowAltToTop = faArrowAltToTop;
var faArrowAltUp = {
  prefix: 'fad',
  iconName: 'arrow-alt-up',
  icon: [448, 512, [], "f357", ["M160,456V256H288.11V456a24,24,0,0,1-24,24H184A24,24,0,0,1,160,456Z", "M39.05,215,207,39a24.08,24.08,0,0,1,34,0L408.92,215c15.11,15.09,4.4,41-17,41H56.05C34.63,256,24,230.3,39.05,215Z"]]
};
exports.faArrowAltUp = faArrowAltUp;
var faArrowCircleDown = {
  prefix: 'fad',
  iconName: 'arrow-circle-down',
  icon: [512, 512, [], "f0ab", ["M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm149.6 263.6L272.9 404.3a23.9 23.9 0 0 1-33.9 0L106.4 271.6a23.9 23.9 0 0 1 0-33.9l10.9-11a24 24 0 0 1 34.3.4l72.4 75.5V120a23.94 23.94 0 0 1 24-24h16a23.94 23.94 0 0 1 24 24v182.6l72.4-75.5a24 24 0 0 1 34.3-.4l10.9 11a23.9 23.9 0 0 1 0 33.9z", "M360.4 227.1a24 24 0 0 1 34.3-.4l10.9 11a23.9 23.9 0 0 1 0 33.9L272.9 404.3a23.9 23.9 0 0 1-33.9 0L106.4 271.6a23.9 23.9 0 0 1 0-33.9l10.9-11a24 24 0 0 1 34.3.4l72.4 75.5V120a23.94 23.94 0 0 1 24-24h16a23.94 23.94 0 0 1 24 24v182.6l72.4-75.5z"]]
};
exports.faArrowCircleDown = faArrowCircleDown;
var faArrowCircleLeft = {
  prefix: 'fad',
  iconName: 'arrow-circle-left',
  icon: [512, 512, [], "f0a8", ["M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm160 256a23.94 23.94 0 0 1-24 24H209.4l75.5 72.4a24 24 0 0 1 .4 34.3l-11 10.9a23.9 23.9 0 0 1-33.9 0L107.7 272.9a23.9 23.9 0 0 1 0-33.9l132.7-132.6a23.9 23.9 0 0 1 33.9 0l11 10.9a24 24 0 0 1-.4 34.3L209.4 224H392a23.94 23.94 0 0 1 24 24z", "M285.3 394.7l-11 10.9a23.9 23.9 0 0 1-33.9 0L107.7 272.9a23.9 23.9 0 0 1 0-33.9l132.7-132.6a23.9 23.9 0 0 1 33.9 0l11 10.9a24 24 0 0 1-.4 34.3L209.4 224H392a23.94 23.94 0 0 1 24 24v16a23.94 23.94 0 0 1-24 24H209.4l75.5 72.4a24 24 0 0 1 .4 34.3z"]]
};
exports.faArrowCircleLeft = faArrowCircleLeft;
var faArrowCircleRight = {
  prefix: 'fad',
  iconName: 'arrow-circle-right',
  icon: [512, 512, [], "f0a9", ["M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm148.3 265L271.6 405.6a23.9 23.9 0 0 1-33.9 0l-11-10.9a24 24 0 0 1 .4-34.3l75.5-72.4H120a23.94 23.94 0 0 1-24-24v-16a23.94 23.94 0 0 1 24-24h182.6l-75.5-72.4a24.15 24.15 0 0 1-.4-34.4l11-10.9a23.9 23.9 0 0 1 33.9 0l132.7 132.8a23.9 23.9 0 0 1 0 33.9z", "M226.7 117.2l11-10.9a23.9 23.9 0 0 1 33.9 0l132.7 132.8a23.9 23.9 0 0 1 0 33.9L271.6 405.6a23.9 23.9 0 0 1-33.9 0l-11-10.9a24 24 0 0 1 .4-34.3l75.5-72.4H120a23.94 23.94 0 0 1-24-24v-16a23.94 23.94 0 0 1 24-24h182.6l-75.5-72.4a24.15 24.15 0 0 1-.4-34.4z"]]
};
exports.faArrowCircleRight = faArrowCircleRight;
var faArrowCircleUp = {
  prefix: 'fad',
  iconName: 'arrow-circle-up',
  icon: [512, 512, [], "f0aa", ["M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm149.6 266.3l-10.9 11a24 24 0 0 1-34.3-.4L288 209.4V392a23.94 23.94 0 0 1-24 24h-16a23.94 23.94 0 0 1-24-24V209.4l-72.4 75.5a24.15 24.15 0 0 1-34.4.4l-10.9-11a23.9 23.9 0 0 1 0-33.9l132.8-132.7a23.9 23.9 0 0 1 33.9 0l132.6 132.7a23.9 23.9 0 0 1 0 33.9z", "M117.2 285.3l-10.9-11a23.9 23.9 0 0 1 0-33.9l132.8-132.7a23.9 23.9 0 0 1 33.9 0l132.6 132.7a23.9 23.9 0 0 1 0 33.9l-10.9 11a24 24 0 0 1-34.3-.4L288 209.4V392a23.94 23.94 0 0 1-24 24h-16a23.94 23.94 0 0 1-24-24V209.4l-72.4 75.5a24.15 24.15 0 0 1-34.4.4z"]]
};
exports.faArrowCircleUp = faArrowCircleUp;
var faArrowDown = {
  prefix: 'fad',
  iconName: 'arrow-down',
  icon: [448, 512, [], "f063", ["M265 56v286.4L224 384l-41-41.59V56c0-13.3 11-24 24.63-24h32.82A24.22 24.22 0 0 1 265 56z", "M441.48 278.31c-.23.24-.47.48-.71.71L241.44 473a25 25 0 0 1-34.78 0L7.23 279a23.38 23.38 0 0 1-.7-33.11c.22-.24.46-.47.7-.7L30 223.06a25.13 25.13 0 0 1 35.18.4L224 384.19l158.8-160.73a24.94 24.94 0 0 1 35.18-.4l22.78 22.15a23.38 23.38 0 0 1 .72 33.1z"]]
};
exports.faArrowDown = faArrowDown;
var faArrowFromBottom = {
  prefix: 'fad',
  iconName: 'arrow-from-bottom',
  icon: [384, 512, [], "f342", ["M360 480H24a23.94 23.94 0 0 1-24-24v-16a23.94 23.94 0 0 1 24-24h336a23.94 23.94 0 0 1 24 24v16a23.94 23.94 0 0 1-24 24z", "M56.13 225.48l-17.06-17a23.86 23.86 0 0 1 0-33.91L175 39.05a24 24 0 0 1 34 0l135.93 135.52a23.86 23.86 0 0 1 0 33.91l-17.06 17a24 24 0 0 1-34 0l-65.81-65.61V360A24 24 0 0 1 204 384h-24.09a24 24 0 0 1-24.07-24V159.87L90 225.48a23.9 23.9 0 0 1-33.87 0z"]]
};
exports.faArrowFromBottom = faArrowFromBottom;
var faArrowFromLeft = {
  prefix: 'fad',
  iconName: 'arrow-from-left',
  icon: [448, 512, [], "f343", ["M0 424V88a23.94 23.94 0 0 1 24-24h16a23.94 23.94 0 0 1 24 24v336a23.94 23.94 0 0 1-24 24H24a23.94 23.94 0 0 1-24-24z", "M254.52 120.13l17-17.06a23.86 23.86 0 0 1 33.91 0L441 239a24 24 0 0 1 0 34L305.43 408.93a23.86 23.86 0 0 1-33.91 0l-17-17.06a24 24 0 0 1 0-34l65.61-65.81H120A24 24 0 0 1 96 268v-24.09a24 24 0 0 1 24-24.07h200.13L254.52 154a23.9 23.9 0 0 1 0-33.87z"]]
};
exports.faArrowFromLeft = faArrowFromLeft;
var faArrowFromRight = {
  prefix: 'fad',
  iconName: 'arrow-from-right',
  icon: [448, 512, [], "f344", ["M448 88v336a23.94 23.94 0 0 1-24 24h-16a23.94 23.94 0 0 1-24-24V88a23.94 23.94 0 0 1 24-24h16a23.94 23.94 0 0 1 24 24z", "M193.48 391.87l-17 17.06a23.86 23.86 0 0 1-33.91 0L7.05 273a24 24 0 0 1 0-34l135.52-135.93a23.86 23.86 0 0 1 33.91 0l17 17.06a24 24 0 0 1 0 34l-65.61 65.81H328A24 24 0 0 1 352 244v24.08a24 24 0 0 1-24 24.07H127.87L193.48 358a23.9 23.9 0 0 1 0 33.87z"]]
};
exports.faArrowFromRight = faArrowFromRight;
var faArrowFromTop = {
  prefix: 'fad',
  iconName: 'arrow-from-top',
  icon: [384, 512, [], "f345", ["M24 32h336a23.94 23.94 0 0 1 24 24v16a23.94 23.94 0 0 1-24 24H24A23.94 23.94 0 0 1 0 72V56a23.94 23.94 0 0 1 24-24z", "M327.87 286.52l17.06 17a23.86 23.86 0 0 1 0 33.91L209 473a24 24 0 0 1-34 0L39.07 337.43a23.86 23.86 0 0 1 0-33.91l17.06-17a24 24 0 0 1 34 0l65.81 65.61V152A24 24 0 0 1 180 128h24.08a24 24 0 0 1 24.07 24v200.13L294 286.52a23.9 23.9 0 0 1 33.87 0z"]]
};
exports.faArrowFromTop = faArrowFromTop;
var faArrowLeft = {
  prefix: 'fad',
  iconName: 'arrow-left',
  icon: [448, 512, [], "f060", ["M424 297H137.6L96 256l41.59-41H424c13.3 0 24 11 24 24.63v32.82A24.22 24.22 0 0 1 424 297z", "M201.69 473.48l-.71-.71L7 273.44a25 25 0 0 1 0-34.78L201 39.23a23.38 23.38 0 0 1 33.11-.7c.24.22.47.46.7.7L256.94 62a25.13 25.13 0 0 1-.4 35.18L95.81 256l160.73 158.8a24.94 24.94 0 0 1 .4 35.18l-22.15 22.78a23.38 23.38 0 0 1-33.1.72z"]]
};
exports.faArrowLeft = faArrowLeft;
var faArrowRight = {
  prefix: 'fad',
  iconName: 'arrow-right',
  icon: [448, 512, [], "f061", ["M24 215h286.4l41.6 41-41.59 41H24c-13.3 0-24-11-24-24.63v-32.82A24.22 24.22 0 0 1 24 215z", "M246.31 38.52c.24.23.48.47.71.71L441 238.56a25 25 0 0 1 0 34.78L247 472.77a23.38 23.38 0 0 1-33.11.7c-.24-.22-.47-.46-.7-.7L191.06 450a25.13 25.13 0 0 1 .4-35.18L352.19 256 191.46 97.2a24.94 24.94 0 0 1-.4-35.18l22.15-22.78a23.38 23.38 0 0 1 33.1-.72z"]]
};
exports.faArrowRight = faArrowRight;
var faArrowSquareDown = {
  prefix: 'fad',
  iconName: 'arrow-square-down',
  icon: [448, 512, [], "f339", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-26.4 239.6L240.9 404.3a23.9 23.9 0 0 1-33.9 0L74.4 271.6a23.9 23.9 0 0 1 0-33.9l10.9-11a24 24 0 0 1 34.3.4l72.4 75.5V120a23.94 23.94 0 0 1 24-24h16a23.94 23.94 0 0 1 24 24v182.6l72.4-75.5a24 24 0 0 1 34.3-.4l10.9 11a23.9 23.9 0 0 1 0 33.9z", "M328.4 227.1a24 24 0 0 1 34.3-.4l10.9 11a23.9 23.9 0 0 1 0 33.9L240.9 404.3a23.9 23.9 0 0 1-33.9 0L74.4 271.6a23.9 23.9 0 0 1 0-33.9l10.9-11a24 24 0 0 1 34.3.4l72.4 75.5V120a23.94 23.94 0 0 1 24-24h16a23.94 23.94 0 0 1 24 24v182.6l72.4-75.5z"]]
};
exports.faArrowSquareDown = faArrowSquareDown;
var faArrowSquareLeft = {
  prefix: 'fad',
  iconName: 'arrow-square-left',
  icon: [448, 512, [], "f33a", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-16 232a23.94 23.94 0 0 1-24 24H177.4l75.5 72.4a24 24 0 0 1 .4 34.3l-11 10.9a23.9 23.9 0 0 1-33.9 0L75.7 272.9a23.9 23.9 0 0 1 0-33.9l132.7-132.6a23.9 23.9 0 0 1 33.9 0l11 10.9a24 24 0 0 1-.4 34.3L177.4 224H360a23.94 23.94 0 0 1 24 24z", "M253.3 394.7l-11 10.9a23.9 23.9 0 0 1-33.9 0L75.7 272.9a23.9 23.9 0 0 1 0-33.9l132.7-132.6a23.9 23.9 0 0 1 33.9 0l11 10.9a24 24 0 0 1-.4 34.3L177.4 224H360a23.94 23.94 0 0 1 24 24v16a23.94 23.94 0 0 1-24 24H177.4l75.5 72.4a24 24 0 0 1 .4 34.3z"]]
};
exports.faArrowSquareLeft = faArrowSquareLeft;
var faArrowSquareRight = {
  prefix: 'fad',
  iconName: 'arrow-square-right',
  icon: [448, 512, [], "f33b", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-27.7 241L239.6 405.6a23.9 23.9 0 0 1-33.9 0l-11-10.9a24 24 0 0 1 .4-34.3l75.5-72.4H88a23.94 23.94 0 0 1-24-24v-16a23.94 23.94 0 0 1 24-24h182.6l-75.5-72.4a24.15 24.15 0 0 1-.4-34.4l11-10.9a23.9 23.9 0 0 1 33.9 0l132.7 132.8a23.9 23.9 0 0 1 0 33.9z", "M194.7 117.2l11-10.9a23.9 23.9 0 0 1 33.9 0l132.7 132.8a23.9 23.9 0 0 1 0 33.9L239.6 405.6a23.9 23.9 0 0 1-33.9 0l-11-10.9a24 24 0 0 1 .4-34.3l75.5-72.4H88a23.94 23.94 0 0 1-24-24v-16a23.94 23.94 0 0 1 24-24h182.6l-75.5-72.4a24.15 24.15 0 0 1-.4-34.4z"]]
};
exports.faArrowSquareRight = faArrowSquareRight;
var faArrowSquareUp = {
  prefix: 'fad',
  iconName: 'arrow-square-up',
  icon: [448, 512, [], "f33c", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-26.4 242.3l-10.9 11a24 24 0 0 1-34.3-.4L256 209.4V392a23.94 23.94 0 0 1-24 24h-16a23.94 23.94 0 0 1-24-24V209.4l-72.4 75.5a24.15 24.15 0 0 1-34.4.4l-10.9-11a23.9 23.9 0 0 1 0-33.9l132.8-132.7a23.9 23.9 0 0 1 33.9 0l132.6 132.7a23.9 23.9 0 0 1 0 33.9z", "M85.2 285.3l-10.9-11a23.9 23.9 0 0 1 0-33.9l132.8-132.7a23.9 23.9 0 0 1 33.9 0l132.6 132.7a23.9 23.9 0 0 1 0 33.9l-10.9 11a24 24 0 0 1-34.3-.4L256 209.4V392a23.94 23.94 0 0 1-24 24h-16a23.94 23.94 0 0 1-24-24V209.4l-72.4 75.5a24.15 24.15 0 0 1-34.4.4z"]]
};
exports.faArrowSquareUp = faArrowSquareUp;
var faArrowToBottom = {
  prefix: 'fad',
  iconName: 'arrow-to-bottom',
  icon: [384, 512, [], "f33d", ["M360 480H24a23.94 23.94 0 0 1-24-23.88V440a23.94 23.94 0 0 1 23.88-24H360a23.94 23.94 0 0 1 24 23.88V456a23.94 23.94 0 0 1-23.88 24z", "M327.87 190.52l17.06 17a23.86 23.86 0 0 1 .17 33.74l-.17.17L209 377a24 24 0 0 1-33.94.06L175 377 39.07 241.43a23.86 23.86 0 0 1-.17-33.74l.17-.17 17.06-17a24 24 0 0 1 33.94-.06l.06.06 65.81 65.61V56a24 24 0 0 1 24-24h24.14a24 24 0 0 1 24.07 23.93v200.2L294 190.52a23.91 23.91 0 0 1 33.8-.07z"]]
};
exports.faArrowToBottom = faArrowToBottom;
var faArrowToLeft = {
  prefix: 'fad',
  iconName: 'arrow-to-left',
  icon: [448, 512, [], "f33e", ["M0 424V88a23.94 23.94 0 0 1 24-24h16a23.94 23.94 0 0 1 24 24v336a23.94 23.94 0 0 1-24 24H24a23.94 23.94 0 0 1-24-24z", "M289.48 391.87l-17 17.06a23.86 23.86 0 0 1-33.91 0L103.05 273a24 24 0 0 1 0-34l135.52-135.93a23.86 23.86 0 0 1 33.91 0l17 17.06a24 24 0 0 1 0 34l-65.61 65.81H424A24 24 0 0 1 448 244v24.08a24 24 0 0 1-24 24.07H223.87L289.48 358a23.9 23.9 0 0 1 0 33.87z"]]
};
exports.faArrowToLeft = faArrowToLeft;
var faArrowToRight = {
  prefix: 'fad',
  iconName: 'arrow-to-right',
  icon: [448, 512, [], "f340", ["M448 88v336a23.94 23.94 0 0 1-24 24h-16a23.94 23.94 0 0 1-24-24V88a23.94 23.94 0 0 1 24-24h16a23.94 23.94 0 0 1 24 24z", "M158.52 120.13l17-17.06a23.86 23.86 0 0 1 33.91 0L345 239a24 24 0 0 1 0 34L209.43 408.93a23.86 23.86 0 0 1-33.91 0l-17-17.06a24 24 0 0 1 0-34l65.61-65.81H24A24 24 0 0 1 0 268v-24.09a24 24 0 0 1 24-24.07h200.13L158.52 154a23.9 23.9 0 0 1 0-33.87z"]]
};
exports.faArrowToRight = faArrowToRight;
var faArrowToTop = {
  prefix: 'fad',
  iconName: 'arrow-to-top',
  icon: [384, 512, [], "f341", ["M24 32h336a23.94 23.94 0 0 1 24 24v16a23.94 23.94 0 0 1-24 24H24A23.94 23.94 0 0 1 0 72V56a23.94 23.94 0 0 1 24-24z", "M56.13 321.48l-17.06-17a23.86 23.86 0 0 1 0-33.91L175 135.05a24 24 0 0 1 34 0l135.93 135.52a23.86 23.86 0 0 1 0 33.91l-17.06 17a24 24 0 0 1-34 0l-65.81-65.61V456A24 24 0 0 1 204 480h-24.09a24 24 0 0 1-24.07-24V255.87L90 321.48a23.9 23.9 0 0 1-33.87 0z"]]
};
exports.faArrowToTop = faArrowToTop;
var faArrowUp = {
  prefix: 'fad',
  iconName: 'arrow-up',
  icon: [448, 512, [], "f062", ["M183 456V169.6l41-41.6 41 41.59V456c0 13.3-11 24-24.63 24h-32.82A24.22 24.22 0 0 1 183 456z", "M6.52 233.69c.23-.24.47-.48.71-.71L206.56 39a25 25 0 0 1 34.78 0l199.43 194a23.38 23.38 0 0 1 .7 33.11c-.22.24-.46.47-.7.7L418 288.94a25.13 25.13 0 0 1-35.18-.4L224 127.81 65.2 288.54a24.94 24.94 0 0 1-35.18.4L7.23 266.79a23.38 23.38 0 0 1-.71-33.1z"]]
};
exports.faArrowUp = faArrowUp;
var faArrows = {
  prefix: 'fad',
  iconName: 'arrows',
  icon: [512, 512, [], "f047", ["M440 256l-34.68 32H288v117.34L256 440l-32-34.68V288H106.66L72 256l34.68-32H224V106.66L256 72l32 34.67V224h117.34z", "M128.57 170.71l-.46-.47-10.83-10.84a24 24 0 0 0-33.93 0l-74 74a32 32 0 0 0 0 45.24l74 74a24 24 0 0 0 33.93 0l10.83-10.84.46-.47a24 24 0 0 0-.93-33.92L72 256l55.66-51.37a24 24 0 0 0 .91-33.92zm374.05 62.67l-74-74a24 24 0 0 0-33.93 0l-10.83 10.84-.46.47a24 24 0 0 0 .93 33.92L440 256l-55.66 51.37a24 24 0 0 0-.93 33.92l.46.47 10.83 10.84a24 24 0 0 0 33.93 0l74-74a32 32 0 0 0 0-45.24zM341.76 383.89l-.47-.46a24 24 0 0 0-33.92.93L256 440l-51.37-55.66a24 24 0 0 0-33.92-.93l-.47.46-10.84 10.85a24 24 0 0 0 0 33.93l74 74a32 32 0 0 0 45.24 0l74-74a24 24 0 0 0 0-33.93zM278.62 9.38a32 32 0 0 0-45.24 0l-74 74a24 24 0 0 0 0 33.93l10.84 10.83.47.46a24 24 0 0 0 33.92-.93L256 72l51.37 55.66a24 24 0 0 0 33.92.93l.47-.46 10.84-10.83a24 24 0 0 0 0-33.93z"]]
};
exports.faArrows = faArrows;
var faArrowsAlt = {
  prefix: 'fad',
  iconName: 'arrows-alt',
  icon: [512, 512, [], "f0b2", ["M384 288h-96v96h-64v-96h-96v-64h96v-96h64v96h96z", "M504.93 239.07l-79.7-79C410 145 384 155.67 384 177v158c0 21.34 26 32 41.23 16.93l79.7-79 .2-.2a23.8 23.8 0 0 0-.2-33.66zm-418.16-79l-79.7 79-.2.2a23.8 23.8 0 0 0 .2 33.66l79.7 79C102 367 128 356.33 128 335V177c0-21.34-26-32-41.23-16.93zM335 384H177c-21.34 0-32 26-16.93 41.23l79 79.7.2.2a23.8 23.8 0 0 0 33.66-.2l79-79.7C367 410 356.33 384 335 384zM272.93 7.07l-.2-.2a23.8 23.8 0 0 0-33.66.2l-79 79.7C145 102 155.67 128 177 128h158c21.34 0 32-26 16.93-41.23z"]]
};
exports.faArrowsAlt = faArrowsAlt;
var faArrowsAltH = {
  prefix: 'fad',
  iconName: 'arrows-alt-h',
  icon: [512, 512, [], "f337", ["M134.1 216H378v80H134.1z", "M378 170v172c0 21.41 25.88 32.1 41 17l86-86a24 24 0 0 0 0-33.94L419 153c-15.17-15-41-4.36-41 17zM134.1 342V170.11c0-21.41-25.88-32.1-41-17l-86.1 86A24 24 0 0 0 7 273l86.1 86c15.15 15.06 41 4.37 41-17z"]]
};
exports.faArrowsAltH = faArrowsAltH;
var faArrowsAltV = {
  prefix: 'fad',
  iconName: 'arrows-alt-v',
  icon: [256, 512, [], "f338", ["M88 378V134.08h80V378z", "M42 134.08h171.94c21.4 0 32.09-25.87 17-41L145 7a24 24 0 0 0-33.89 0L25 93.09c-15 15.15-4.32 40.99 17 40.99zM213.94 378H42.14c-21.4 0-32.09 25.88-17 41l86 86a24 24 0 0 0 33.86 0l85.93-86c15.07-15.23 4.4-41-16.99-41z"]]
};
exports.faArrowsAltV = faArrowsAltV;
var faArrowsH = {
  prefix: 'fad',
  iconName: 'arrows-h',
  icon: [512, 512, [], "f07e", ["M405.66 288H106.34l-33.77-32 33.77-32h299.32l33.77 32z", "M358.59 146.37a23.93 23.93 0 0 0 .94 33.92l79.9 75.71-79.9 75.71a23.93 23.93 0 0 0-.94 33.92L369.9 377a24.15 24.15 0 0 0 34.1 0l98.65-98.36a31.92 31.92 0 0 0 0-45.24L404 135a24.15 24.15 0 0 0-34.05 0zM153.41 365.63a23.93 23.93 0 0 0-.94-33.92L72.57 256l79.9-75.71a23.93 23.93 0 0 0 .94-33.92L142.1 135a24.15 24.15 0 0 0-34 0L9.4 233.38a31.92 31.92 0 0 0 0 45.24L108.05 377a24.15 24.15 0 0 0 34.05 0z"]]
};
exports.faArrowsH = faArrowsH;
var faArrowsV = {
  prefix: 'fad',
  iconName: 'arrows-v',
  icon: [256, 512, [], "f07d", ["M160 106.34v299.32l-32 33.77-32-33.77V106.34l32-33.77z", "M18.37 153.41a23.93 23.93 0 0 0 33.92-.94L128 72.57l75.71 79.9a23.93 23.93 0 0 0 33.92.94L249 142.1a24.15 24.15 0 0 0 0-34L150.62 9.4a31.92 31.92 0 0 0-45.24 0L7 108.05a24.15 24.15 0 0 0 0 34.05zm219.26 205.18a23.93 23.93 0 0 0-33.92.94L128 439.43l-75.71-79.9a23.93 23.93 0 0 0-33.92-.94L7 369.9A24.15 24.15 0 0 0 7 404l98.36 98.65a31.92 31.92 0 0 0 45.24 0L249 404a24.15 24.15 0 0 0 0-34.05z"]]
};
exports.faArrowsV = faArrowsV;
var faAssistiveListeningSystems = {
  prefix: 'fad',
  iconName: 'assistive-listening-systems',
  icon: [512, 512, [], "f2a2", ["M160 320a32 32 0 1 0 32 32 32 32 0 0 0-32-32zM32 448a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm480-192.52c-1.88-115-75.8-217-184-254a28 28 0 1 0-18.1 53C395.79 83.86 454.5 165 456 256.46v3.55a28 28 0 0 0 56 0v-4.53zM39 393l80 80 34-34-80-80z", "M240 236a24 24 0 0 1 24 24 28 28 0 0 0 56 0 80 80 0 0 0-160 0 28 28 0 0 0 56 0 24 24 0 0 1 24-24zm0-152c-97 0-176 79-176 176a28 28 0 0 0 56 0 120 120 0 0 1 240 0c0 75.16-71 70.31-72 143.62v.38a52.06 52.06 0 0 1-52 52 28 28 0 0 0 0 56 108.12 108.12 0 0 0 108-107.77c.59-34.43 72-48.23 72-144.23 0-97-78.95-176-176-176z"]]
};
exports.faAssistiveListeningSystems = faAssistiveListeningSystems;
var faAsterisk = {
  prefix: 'fad',
  iconName: 'asterisk',
  icon: [512, 512, [], "f069", ["M479 177.64l-.41.23-182.5 100.45 3.45 209.17A24 24 0 0 1 276.06 512h-39.55a24 24 0 0 1-24-24v-.52L216 278 33.47 177.91A24 24 0 0 1 24 145.32l.25-.45 19.5-33.74a24.07 24.07 0 0 1 32.89-8.75l.38.23L256 208l179-105.39a24.07 24.07 0 0 1 33.05 8.12l.23.4 19.5 33.74a24 24 0 0 1-8.78 32.77z", "M488 366.68l-.25.45-19.5 33.74a24.07 24.07 0 0 1-32.89 8.75l-.38-.23L256 304 77 409.39a24.07 24.07 0 0 1-33-8.12l-.23-.4-19.5-33.74a24 24 0 0 1 8.83-32.77l.41-.23 182.4-100.45-3.45-209.17A24 24 0 0 1 235.94 0h39.55a24 24 0 0 1 24 24v.52L296 234l182.53 100.09a24 24 0 0 1 9.47 32.59z"]]
};
exports.faAsterisk = faAsterisk;
var faAt = {
  prefix: 'fad',
  iconName: 'at',
  icon: [512, 512, [], "f1fa", ["M440 232c0-102.38-83.86-160-184-160-101.46 0-184 82.54-184 184s82.54 184 184 184a184.46 184.46 0 0 0 99.41-29.13 23.94 23.94 0 0 1 31.37 5.13L397 428.4a24.94 24.94 0 0 1 1.61 2.21 24 24 0 0 1-7.2 33.17A248.76 248.76 0 0 1 256 504C118.92 504 8 393.08 8 256S118.94 8 256 8c138 0 248 87.65 248 224 0 68.32-33.63 133.22-120 145.37v-62c35.72-5.27 56-45.37 56-83.37z", "M391.79 164.58a24 24 0 0 0-19-28.14 24.26 24.26 0 0 0-4.58-.44h-45a13.52 13.52 0 0 0-13.43 12v.09c-14.69-17.9-40.45-21.77-60-21.77-74.55 0-137.8 62.22-137.8 151.45 0 65.3 36.79 105.87 96 105.87 27 0 57.37-15.64 75-38.33 9.52 34.1 40.61 34.1 70.71 34.1a217.39 217.39 0 0 0 30.29-2v-62c-.72.1-1.44.22-2.17.3-17.35-.45-16.91-12.85-13.48-30zM234.32 312.43c-22.25 0-36.07-15.62-36.07-40.77 0-45 30.78-72.73 58.63-72.73 22.29 0 35.6 15.24 35.6 40.77 0 45.06-33.87 72.73-58.16 72.73z"]]
};
exports.faAt = faAt;
var faAtlas = {
  prefix: 'fad',
  iconName: 'atlas',
  icon: [448, 512, [], "f558", ["M96 448c-19.2 0-32-12.8-32-32s16-32 32-32h319.33c-1.93 16.24-1.76 48.38.53 64z", "M224 97.31c-7.69 7.45-20.77 34.42-23.43 78.69h46.87c-2.67-44.26-15.75-71.24-23.44-78.69zM318.38 208h-39.09c-1.49 27-6.54 51.35-14.21 70.41a95.85 95.85 0 0 0 53.3-70.41zm0-32a95.87 95.87 0 0 0-53.3-70.41c7.68 19.06 12.72 43.41 14.21 70.41zM182.92 278.41C175.24 259.35 170.2 235 168.71 208h-39.09a95.85 95.85 0 0 0 53.3 70.41zM247.43 208h-46.87c2.66 44.26 15.74 71.24 23.43 78.69 7.7-7.45 20.78-34.43 23.44-78.69zM96 384h328a24 24 0 0 0 24-24V32a32 32 0 0 0-32-32H96A96 96 0 0 0 0 96v320a96 96 0 0 0 96 96h328a24 24 0 0 0 24-24v-16a24 24 0 0 0-24-24H96c-19.2 0-32-12.8-32-32s16-32 32-32zM224 64A128 128 0 1 1 96 192 128 128 0 0 1 224 64zm-41.08 41.59a95.85 95.85 0 0 0-53.3 70.41h39.09c1.49-27 6.53-51.35 14.21-70.41z"]]
};
exports.faAtlas = faAtlas;
var faAtom = {
  prefix: 'fad',
  iconName: 'atom',
  icon: [448, 512, [], "f5d2", ["M371 139.78a383.51 383.51 0 0 0-19.86-61.63c38.56-.12 69.15 11.36 85.18 35.28 33 49.19-6.09 135.37-88.62 208.33A501.57 501.57 0 0 0 352 256q0-12.88-.63-25.46c29.83-34.13 43.09-64.7 31.85-81.46a25.19 25.19 0 0 0-12.22-9.3zm12.88 192.14c4.46 12.6 4.49 23.27-.69 31-7.22 10.79-23.59 14.35-45.75 11.63-2 7.73-4.24 15.24-6.64 22.48v.07q-2.38 7.22-5 14.08l-.05.12q-3.93 10.32-8.38 19.78c54.26 8.29 98.5-1.95 119-32.51 19.19-28.64 14-69.81-10-113.62a428.39 428.39 0 0 1-42.46 46.97zM287 289.47q-13.14 10-27.56 19.69c-11.94 8-23.86 15.37-35.61 22-11.75-6.68-23.68-14-35.63-22C100.21 250.1 44.8 178.43 64.47 149.08s107-5.29 195 53.76c9.59 6.44 18.8 13 27.56 19.69-.12-2-.24-3.95-.38-5.92v-.37q-.18-2.61-.39-5.19c0-.34-.05-.68-.08-1q-.19-2.43-.42-4.83l-.06-.72q-.53-5.62-1.15-11.1c0-.19 0-.38-.07-.58-.19-1.62-.39-3.23-.59-4.83 0-.25-.06-.51-.1-.77q-1-8.1-2.3-15.85c0-.16-.06-.32-.08-.48-.27-1.61-.54-3.21-.82-4.8l-.06-.32q-1.38-7.73-3-15l-.06-.26a332.53 332.53 0 0 0-3.43-14.19c-111.13-67-225.69-78.07-262.69-22.86-39.35 58.69 23.9 170.12 141.26 248.85.59.41 1.19.8 1.79 1.19-44.09 15.5-78.48 16.5-89.93-.58-5.18-7.73-5.14-18.4-.68-31a427.57 427.57 0 0 1-42.42-47c-24 43.8-29.21 85-10 113.62 37 55.21 151.56 44.14 262.69-22.86 6.51-24.52 11.08-53.98 12.94-86.21z", "M256 256a32 32 0 1 0-32 32 32 32 0 0 0 32-32zm-91.7-69.28c-8.46-3.64-16.7-6.81-24.6-9.44-13.62-4.54-26.07-7.43-36.09-8.37q-1.33 7.38-2.45 15a190.32 190.32 0 0 0 18 24.11 368.85 368.85 0 0 0 41 40 541.33 541.33 0 0 1 4.14-61.3zM224 0c-28.86 0-55.49 19.11-76.91 51.35a382.81 382.81 0 0 1 62.12 17.81A25.41 25.41 0 0 1 224 64c35.35 0 64 86 64 192s-28.65 192-64 192a25.41 25.41 0 0 1-14.79-5.16 382.81 382.81 0 0 1-62.12 17.81C168.51 492.89 195.14 512 224 512c70.69 0 128-114.62 128-256S294.69 0 224 0z"]]
};
exports.faAtom = faAtom;
var faAtomAlt = {
  prefix: 'fad',
  iconName: 'atom-alt',
  icon: [448, 512, [], "f5d3", ["M224 80.64c83.21-51.73 163.1-64.92 201.7-26.33S451.09 172.79 399.37 256a514.73 514.73 0 0 0-37.88-52.89c27.77-47.21 36.63-86.73 19.38-104-29.4-29.39-123.46 17-210.09 103.65a651.68 651.68 0 0 0-26.58 28.19 430.51 430.51 0 0 1-28.13-40.75c-2.73-4.52-5.16-8.79-7.34-12.82q8.65-9.45 17.93-18.74a584.93 584.93 0 0 1 44.46-40.16q3.21-2.61 6.44-5.16l.26-.2q9.81-7.73 19.66-14.78l.2-.14q3-2.13 6-4.2l1.23-.84c1.68-1.16 3.37-2.31 5-3.44l1.43-1c1.76-1.17 3.52-2.33 5.28-3.46l1-.64q3.17-1.99 6.38-3.98zM224 224a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm53.22 85.22q-14 14-28.18 26.57a403.3 403.3 0 0 0 53 35.21c.17.1.34.18.51.27q9.45-8.65 18.74-17.93a582.54 582.54 0 0 0 40.15-44.45A466.42 466.42 0 0 0 324.83 256a625.1 625.1 0 0 1-47.61 53.22zm-106.1 84.28c-47.22 27.76-86.74 36.62-104 19.37s-8.39-56.77 19.37-104A516.23 516.23 0 0 1 48.64 256c-51.72 83.22-64.92 163.09-26.33 201.69S140.78 483.08 224 431.36a516.23 516.23 0 0 1-52.88-37.86z", "M425.69 457.69c-53.76 53.76-187.64 7-299-104.35S-31.45 108.07 22.31 54.31C60.91 15.72 140.78 28.92 224 80.64a516.23 516.23 0 0 0-52.87 37.86c-47.22-27.76-86.74-36.62-104-19.37-29.39 29.4 17 123.46 103.65 210.09s180.69 133 210.09 103.65-17-123.46-103.65-210.09q-14-14-28.2-26.58a433.78 433.78 0 0 1 40.76-28.13c4.52-2.73 8.79-5.16 12.82-7.34q9.45 8.66 18.74 17.93c111.39 111.39 158.11 245.27 104.35 299.03z"]]
};
exports.faAtomAlt = faAtomAlt;
var faAudioDescription = {
  prefix: 'fad',
  iconName: 'audio-description',
  icon: [512, 512, [], "f29e", ["M159 223.47c-1.22 5.24-2.59 10.82-3.87 15.24l-9 30.65h25.57l-8.83-30.65c-1.26-4.42-2.64-9.99-3.87-15.24zM464 64H48a48 48 0 0 0-48 48v288a48 48 0 0 0 48 48h416a48 48 0 0 0 48-48V112a48 48 0 0 0-48-48zM234.1 352h-29.17a12 12 0 0 1-11.53-8.6l-8.79-30h-51.37l-8.57 29.91a12 12 0 0 1-11.54 8.69H84a12 12 0 0 1-11.35-15.86l57.09-168a12 12 0 0 1 11.37-8.14H177a12 12 0 0 1 11.36 8.14l57.1 168A12 12 0 0 1 234.1 352zm97.1 0h-57.37a12 12 0 0 1-12-12V172a12 12 0 0 1 12-12h57.37c61 0 99 36.64 99 95.61 0 59.46-38 96.39-99 96.39zm-1.8-145.39h-14.52v98.78h14.52c29.77 0 46.17-17.68 46.17-49.78s-17.49-49-46.17-49z", "M188.36 168.14A12 12 0 0 0 177 160h-35.89a12 12 0 0 0-11.37 8.14l-57.09 168A12 12 0 0 0 84 352h29.13a12 12 0 0 0 11.54-8.69l8.57-29.91h51.37l8.79 30a12 12 0 0 0 11.53 8.6h29.17a12 12 0 0 0 11.36-15.86zm-42.22 101.22l9-30.65c1.28-4.42 2.65-10 3.87-15.24 1.22 5.25 2.6 10.82 3.87 15.24l8.83 30.65zM331.2 160h-57.37a12 12 0 0 0-12 12v168a12 12 0 0 0 12 12h57.37c61 0 99-36.93 99-96.39-.04-58.97-37.96-95.61-99-95.61zm-1.8 145.39h-14.52v-98.78h14.52c28.68 0 46.17 16.77 46.17 49s-16.4 49.78-46.17 49.78z"]]
};
exports.faAudioDescription = faAudioDescription;
var faAward = {
  prefix: 'fad',
  iconName: 'award',
  icon: [384, 512, [], "f559", ["M382.78 448.69L324 304.23a40.63 40.63 0 0 1-22.23 15.62C280 325.78 278.26 324.44 263 340a39.72 39.72 0 0 1-49.73 5.82 39.68 39.68 0 0 0-42.53 0A39.73 39.73 0 0 1 121 340c-14.73-15-16.4-14-38.73-20.12a40.54 40.54 0 0 1-22.07-15.4L1.2 448.7a16 16 0 0 0 15.43 22l52.69-2 36.22 38.3a16 16 0 0 0 22.62.61A16.23 16.23 0 0 0 132 502l60.15-147.1L252 502a16 16 0 0 0 26.43 5l36.25-38.28 52.69 2A16 16 0 0 0 384 455.33a16.23 16.23 0 0 0-1.22-6.64zM192 240a64 64 0 1 0-64-64 64 64 0 0 0 64 64z", "M366.62 152.72a41.51 41.51 0 0 0-10.42-39.59c-20.41-20.77-18.47-17.35-25.95-45.74a40.66 40.66 0 0 0-28.47-29c-27.88-7.61-24.52-5.62-45-26.41A39.79 39.79 0 0 0 218 1.39c-27.92 7.6-24 7.6-51.95 0A39.8 39.8 0 0 0 127.16 12c-20.41 20.78-17 18.8-44.94 26.41a40.66 40.66 0 0 0-28.47 29c-7.47 28.39-5.54 25-25.95 45.75a41.46 41.46 0 0 0-10.42 39.58c7.47 28.36 7.48 24.4 0 52.82a41.52 41.52 0 0 0 10.42 39.57c20.41 20.78 18.47 17.35 26 45.75a40.64 40.64 0 0 0 28.47 29C104.6 326 106.27 325 121 340a39.74 39.74 0 0 0 49.74 5.82 39.68 39.68 0 0 1 42.53 0A39.73 39.73 0 0 0 263 340c15.28-15.55 17-14.21 38.79-20.14a40.64 40.64 0 0 0 28.47-29c7.48-28.4 5.54-25 25.95-45.75a41.49 41.49 0 0 0 10.42-39.58c-7.48-28.36-7.49-24.4-.01-52.81zM192 272a96 96 0 1 1 96-96 96 96 0 0 1-96 96z"]]
};
exports.faAward = faAward;
var faAxe = {
  prefix: 'fad',
  iconName: 'axe',
  icon: [640, 512, [], "f6b2", ["M592 160v32c0 97.05-79 176-176 176h-32v48h32c123.71 0 224-100.29 224-224v-32zM4.69 439.43a16 16 0 0 0 0 22.63L50 507.31a16 16 0 0 0 22.63 0l235.82-235.87-67.88-67.88zM507.31 72.57a16 16 0 0 0 0-22.63L462.06 4.69a16 16 0 0 0-22.63 0l-34.5 34.5 67.88 67.88z", "M384 301.74L233.37 151.11a32 32 0 0 1 0-45.25l96.49-96.49a32 32 0 0 1 45.26 0L525.74 160H560v32c0 79.4-64.6 144-144 144h-32z"]]
};
exports.faAxe = faAxe;
var faAxeBattle = {
  prefix: 'fad',
  iconName: 'axe-battle',
  icon: [512, 512, [], "f6b3", ["M512 160.92C505.16 99.16 478.4 44.29 438.94 4.7c-9.21-9.25-23.89-4.12-27.06 9-12 49.67-47.25 88.27-91.88 101.23v154.18c44.63 13 79.85 51.56 91.88 101.23 3.17 13.08 17.85 18.21 27.06 9 39.46-39.59 66.22-94.45 73.06-156.22L449.24 192zM101 13.66C97.86.58 83.32-4.54 74.2 4.7 28.67 50.83 0 117.62 0 192s28.67 141.17 74.2 187.3c9.13 9.25 23.66 4.12 26.8-9 11.92-49.67 46.79-88.27 91-101.23V114.89c-44.21-12.96-79.08-51.56-91-101.23z", "M288 80v416a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V80a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16z"]]
};
exports.faAxeBattle = faAxeBattle;
var faBaby = {
  prefix: 'fad',
  iconName: 'baby',
  icon: [384, 512, [], "f77c", ["M272.07 288v48L216 400h-48l-55.93-64-.07-48z", "M192 160a80 80 0 1 0-80-80 80 80 0 0 0 80 80zm-52.46 259L168 400l-55.93-64v-.06l-.07.06-57.33 49a40 40 0 0 0-3 59.24l56 56a40 40 0 1 0 56.56-56.56zM376 143.19a39.81 39.81 0 0 0-55.86-7.88l-40.5 28.39a152.31 152.31 0 0 1-175.28 0l-40.47-28.39a40 40 0 0 0-48 63.9q1 .78 2.13 1.5l40.49 28.5A231.24 231.24 0 0 0 112 257.1V288h160v-30.9a231.24 231.24 0 0 0 53.49-27.89l40.51-28.5q1.09-.72 2.13-1.5a40.08 40.08 0 0 0 7.87-56.02zM328.33 385L272 336l-56 64 27.46 19-24.74 24.75a40 40 0 1 0 56.57 56.56l56-56a40 40 0 0 0-3-59.24z"]]
};
exports.faBaby = faBaby;
var faBabyCarriage = {
  prefix: 'fad',
  iconName: 'baby-carriage',
  icon: [512, 512, [], "f77d", ["M96 384a64 64 0 1 0 64 64 64 64 0 0 0-64-64zm256 0a64 64 0 1 0 64 64 64 64 0 0 0-64-64zM90.8 7.61C35.3 51.91 0 118 0 192h256L144.8 17c-11.3-17.79-37.2-22.79-54-9.39z", "M496 96h-48a64.06 64.06 0 0 0-64 64v64H0a191.44 191.44 0 0 0 56.82 136.34 96.07 96.07 0 0 1 129.68 55.58c1.83.05 3.66.08 5.5.08h64c1.84 0 3.67 0 5.5-.08a96.07 96.07 0 0 1 129.68-55.58A191.44 191.44 0 0 0 448 224v-64h48a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z"]]
};
exports.faBabyCarriage = faBabyCarriage;
var faBackpack = {
  prefix: 'fad',
  iconName: 'backpack',
  icon: [448, 512, [], "f5d4", ["M320 320H128a32 32 0 0 0-32 32v32h256v-32a32 32 0 0 0-32-32zM136 208h176a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H136a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8z", "M96 512h256v-96H96zM320 80h-8V56a56.06 56.06 0 0 0-56-56h-64a56.06 56.06 0 0 0-56 56v24h-8A128 128 0 0 0 0 208v240a64 64 0 0 0 64 64V352a64.07 64.07 0 0 1 64-64h192a64.07 64.07 0 0 1 64 64v160a64 64 0 0 0 64-64V208A128 128 0 0 0 320 80zM184 56a8 8 0 0 1 8-8h64a8 8 0 0 1 8 8v24h-80zm136 144a8 8 0 0 1-8 8H136a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h176a8 8 0 0 1 8 8z"]]
};
exports.faBackpack = faBackpack;
var faBackspace = {
  prefix: 'fad',
  iconName: 'backspace',
  icon: [640, 512, [], "f55a", ["M576 64H205.26A64 64 0 0 0 160 82.75L9.38 233.37a32 32 0 0 0 0 45.25L160 429.25A64 64 0 0 0 205.25 448H576a64 64 0 0 0 64-64V128a64 64 0 0 0-64-64zm-84.69 254.06a16 16 0 0 1 0 22.63l-22.62 22.62a16 16 0 0 1-22.63 0L384 301.25l-62.06 62.06a16 16 0 0 1-22.63 0l-22.62-22.62a16 16 0 0 1 0-22.63L338.75 256l-62.06-62.06a16 16 0 0 1 0-22.63l22.62-22.62a16 16 0 0 1 22.63 0L384 210.75l62.06-62.06a16 16 0 0 1 22.63 0l22.62 22.62a16 16 0 0 1 0 22.63L429.25 256z", "M491.31 318.06a16 16 0 0 1 0 22.63l-22.62 22.62a16 16 0 0 1-22.63 0L384 301.25l-62.06 62.06a16 16 0 0 1-22.63 0l-22.62-22.62a16 16 0 0 1 0-22.63L338.75 256l-62.06-62.06a16 16 0 0 1 0-22.63l22.62-22.62a16 16 0 0 1 22.63 0L384 210.75l62.06-62.06a16 16 0 0 1 22.63 0l22.62 22.62a16 16 0 0 1 0 22.63L429.25 256z"]]
};
exports.faBackspace = faBackspace;
var faBackward = {
  prefix: 'fad',
  iconName: 'backward',
  icon: [512, 512, [], "f04a", ["M512 96v320c0 27.39-31.9 41.79-52.51 24.59L288 297.69v-83.38L459.49 71.45C480.1 54.25 512 68.65 512 96z", "M11.48 231.41l192-160C224.1 54.25 256 68.65 256 96v320c0 27.39-31.9 41.79-52.51 24.59l-192-160a32.07 32.07 0 0 1-.01-49.18z"]]
};
exports.faBackward = faBackward;
var faBacon = {
  prefix: 'fad',
  iconName: 'bacon',
  icon: [576, 512, [], "f7e5", ["M9.09 407.62C-3.61 395-3 374 10.88 362.56c36.33-30 66.2-41.1 91.06-50.36 9.17-3.41 69-19.26 98.72-98.09 8.61-22.81 46.34-134.59 189-187.73 15.85-5.91 27.36-10.2 41-20.3a31 31 0 0 1 40.14 2.83l26.31 26.14C467 62.7 444.24 71.37 420.38 80.37 392.08 91 362.81 102 323 141.75s-50.76 69.05-61.37 97.34c-9.85 26.31-19.16 51.12-54.05 86s-59.65 44.16-85.91 54c-26 9.76-53 20.13-88.17 52.73zM566.92 104.4l-24.44-24.2c-35.19 32.64-62.17 43-88.24 52.8-26.26 9.85-51.06 19.16-85.95 54s-44.19 59.69-54 86c-10.64 28.33-21.62 57.56-61.41 97.34s-69 50.73-97.3 61.32c-23.85 9-46.59 17.65-76.68 45.3l26.32 26.14a31 31 0 0 0 40.18 2.82c13.6-10.06 25.09-14.34 40.94-20.24 142.19-53 180-164.11 188.93-187.7 29.73-78.79 89.52-94.67 98.73-98.11 24.87-9.28 54.74-20.41 91.11-50.42 13.89-11.4 14.51-32.45 1.81-45.05z", "M252.88 370.34c-39.79 39.78-69 50.73-97.3 61.32-23.86 9-46.6 17.66-76.71 45.33l-45.33-45.16c35.17-32.6 62.17-43 88.17-52.73 26.26-9.84 51.05-19.12 85.91-54s44.2-59.7 54.05-86c10.61-28.29 21.59-57.54 61.37-97.34s69-50.77 97.34-61.38c23.88-9 46.64-17.68 76.79-45.37l45.31 45.2c-35.19 32.64-62.17 43-88.24 52.8-26.26 9.85-51.06 19.16-85.95 54s-44.19 59.69-54 86c-10.64 28.32-21.62 57.55-61.41 97.33z"]]
};
exports.faBacon = faBacon;
var faBadge = {
  prefix: 'fad',
  iconName: 'badge',
  icon: [512, 512, [], "f335", ["M512 256a88 88 0 0 0-57.09-82.41 88 88 0 0 0-116.5-116.5 88 88 0 0 0-164.82 0 88 88 0 0 0-116.5 116.5 88 88 0 0 0 0 164.82 88 88 0 0 0 116.5 116.5 88 88 0 0 0 164.82 0 88 88 0 0 0 116.5-116.5A88 88 0 0 0 512 256zm-122.23 55.42a55.67 55.67 0 0 1-78.36 78.37 55.68 55.68 0 0 1-110.82 0 55.68 55.68 0 0 1-78.36-78.37 55.69 55.69 0 0 1 0-110.84 55.68 55.68 0 0 1 78.36-78.37 55.68 55.68 0 0 1 110.82 0 55.68 55.68 0 0 1 78.36 78.37 55.69 55.69 0 0 1 0 110.84z", "M389.77 311.42a55.67 55.67 0 0 1-78.36 78.37 55.68 55.68 0 0 1-110.82 0 55.68 55.68 0 0 1-78.36-78.37 55.69 55.69 0 0 1 0-110.84 55.68 55.68 0 0 1 78.36-78.37 55.68 55.68 0 0 1 110.82 0 55.68 55.68 0 0 1 78.36 78.37 55.69 55.69 0 0 1 0 110.84z"]]
};
exports.faBadge = faBadge;
var faBadgeCheck = {
  prefix: 'fad',
  iconName: 'badge-check',
  icon: [512, 512, [], "f336", ["M512 256a88 88 0 0 0-57.1-82.4A88 88 0 0 0 338.4 57.1a88 88 0 0 0-164.8 0A88 88 0 0 0 57.1 173.6a88 88 0 0 0 0 164.8 88 88 0 0 0 116.5 116.5 88 88 0 0 0 164.8 0 88 88 0 0 0 116.5-116.5A88 88 0 0 0 512 256zm-144.8-44.25l-131 130a11 11 0 0 1-15.55-.06l-75.72-76.33a11 11 0 0 1 .06-15.56L171 224a11 11 0 0 1 15.56.06l42.15 42.49 97.2-96.42a11 11 0 0 1 15.55.06l25.82 26a11 11 0 0 1-.08 15.56z", "M367.2 211.75l-131 130a11 11 0 0 1-15.55-.06l-75.72-76.33a11 11 0 0 1 .06-15.56L171 224a11 11 0 0 1 15.56.06l42.15 42.49 97.2-96.42a11 11 0 0 1 15.55.06l25.82 26a11 11 0 0 1-.06 15.56z"]]
};
exports.faBadgeCheck = faBadgeCheck;
var faBadgeDollar = {
  prefix: 'fad',
  iconName: 'badge-dollar',
  icon: [512, 512, [], "f645", ["M512 256a88 88 0 0 0-57.1-82.4A88 88 0 0 0 338.4 57.1a88 88 0 0 0-164.8 0A88 88 0 0 0 57.1 173.6a88 88 0 0 0 0 164.8 88 88 0 0 0 116.5 116.5 88 88 0 0 0 164.8 0 88 88 0 0 0 116.5-116.5A88 88 0 0 0 512 256zm-232 94.44V368a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-17.73a73 73 0 0 1-31.78-11.46c-6.22-4.11-6.82-13.11-1.55-18.38l17.52-17.52c3.74-3.74 9.31-4.24 14.11-2a24.52 24.52 0 0 0 10.26 2.22h32.78a8.43 8.43 0 0 0 2.32-16.53l-50.07-14.3c-22.25-6.35-40-24.71-42.91-47.67a56.27 56.27 0 0 1 49.32-63V144a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v17.73a73 73 0 0 1 31.78 11.46c6.22 4.11 6.82 13.11 1.55 18.38l-17.52 17.52c-3.74 3.74-9.31 4.24-14.11 2a24.54 24.54 0 0 0-10.26-2.22h-32.78a8.43 8.43 0 0 0-2.32 16.53l50.07 14.3c22.25 6.36 40 24.71 42.91 47.67A56.27 56.27 0 0 1 280 350.44z", "M280 350.44V368a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-17.73a73 73 0 0 1-31.78-11.46c-6.22-4.11-6.82-13.11-1.55-18.38l17.52-17.52c3.74-3.74 9.31-4.24 14.11-2a24.52 24.52 0 0 0 10.26 2.22h32.78a8.43 8.43 0 0 0 2.32-16.53l-50.07-14.3c-22.25-6.35-40-24.71-42.91-47.67a56.27 56.27 0 0 1 49.32-63V144a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v17.73a73 73 0 0 1 31.78 11.46c6.22 4.11 6.82 13.11 1.55 18.38l-17.52 17.52c-3.74 3.74-9.31 4.24-14.11 2a24.54 24.54 0 0 0-10.26-2.22h-32.78a8.43 8.43 0 0 0-2.32 16.53l50.07 14.3c22.25 6.36 40 24.71 42.91 47.67a56.27 56.27 0 0 1-49.32 63z"]]
};
exports.faBadgeDollar = faBadgeDollar;
var faBadgePercent = {
  prefix: 'fad',
  iconName: 'badge-percent',
  icon: [512, 512, [], "f646", ["M512 256a88 88 0 0 0-57.1-82.4A88 88 0 0 0 338.4 57.1a88 88 0 0 0-164.8 0A88 88 0 0 0 57.1 173.6a88 88 0 0 0 0 164.8 88 88 0 0 0 116.5 116.5 88 88 0 0 0 164.8 0 88 88 0 0 0 116.5-116.5A88 88 0 0 0 512 256zm-320-96a32 32 0 1 1-32 32 32 32 0 0 1 32-32zm12.28 181.65a16 16 0 0 1-22.63 0l-11.31-11.31a16 16 0 0 1 0-22.63l137.37-137.37a16 16 0 0 1 22.63 0l11.31 11.31a16 16 0 0 1 0 22.63zM320 352a32 32 0 1 1 32-32 32 32 0 0 1-32 32z", "M192 160a32 32 0 1 1-32 32 32 32 0 0 1 32-32zm12.28 181.65a16 16 0 0 1-22.63 0l-11.31-11.31a16 16 0 0 1 0-22.63l137.37-137.37a16 16 0 0 1 22.63 0l11.31 11.31a16 16 0 0 1 0 22.63zM320 352a32 32 0 1 1 32-32 32 32 0 0 1-32 32z"]]
};
exports.faBadgePercent = faBadgePercent;
var faBadgeSheriff = {
  prefix: 'fad',
  iconName: 'badge-sheriff',
  icon: [512, 512, [], "f8a2", ["M440 192a40 40 0 1 0-40-40 40 40 0 0 0 40 40zM72 320a40 40 0 1 0 40 40 40 40 0 0 0-40-40zm0-208a40 40 0 1 0 40 40 40 40 0 0 0-40-40zm368 208a40 40 0 1 0 40 40 40 40 0 0 0-40-40zM256 0a40 40 0 1 0 40 40 40 40 0 0 0-40-40zm0 432a40 40 0 1 0 40 40 40 40 0 0 0-40-40z", "M428.79 322.26l-39.46-66.32 39.43-66.21C412.26 184.8 400 170.11 400 152c0-2.84 1.05-5.33 1.62-8h-78.88l-43.15-72.55C272.9 76.47 265 80 256 80s-16.78-3.49-23.44-8.45L189.41 144h-79c.57 2.67 1.62 5.16 1.62 8 0 18.12-12.28 32.82-28.79 37.74l39.46 66.32-39.46 66.21C99.74 327.2 112 341.89 112 360c0 2.84-1 5.33-1.62 8h78.88l43.15 72.55C239.1 435.53 247 432 256 432s16.78 3.49 23.44 8.45L322.59 368h79c-.57-2.67-1.62-5.16-1.62-8 .03-18.12 12.31-32.82 28.82-37.74zM256 320a64 64 0 1 1 64-64 64 64 0 0 1-64 64z"]]
};
exports.faBadgeSheriff = faBadgeSheriff;
var faBadgerHoney = {
  prefix: 'fad',
  iconName: 'badger-honey',
  icon: [640, 512, [], "f6b4", ["M619.83 124.94c-57.65-32.65-71-50.67-115.56-69.92A103.7 103.7 0 0 0 463 46.47a111.24 111.24 0 0 0-55.45 15.21c-17.06 9.79-35.9 16.79-55 16.79h-227a127.66 127.66 0 0 0-51.86 11c5.66 20.73 20.06 55 42.62 84.79 30.11 39.85 56.45 48.21 73.24 48.21h45.47a69.64 69.64 0 0 0 30-6.82l102-61.74.53-.25c29.8-14.33 59.14-27.19 90-27.19h164.71c-.78-.53-1.6-1.06-2.43-1.53zm-78.24 113.53l16 32 16-32 7-14.11-41.89 8.34z", "M622.25 126.47H457.58c-30.86 0-60.2 12.86-90 27.19l-.53.25-102 61.74a69.64 69.64 0 0 1-30 6.82h-45.47c-16.79 0-43.13-8.36-73.24-48.21-22.56-29.79-37-64.06-42.62-84.79a128 128 0 0 0-76.14 117v16a16 16 0 0 0 16 16h20c7.82 33.38 28.08 64.24 53.56 81.17l-21.49 57.3a64 64 0 0 0-2.16 38l14.09 35.41a16 16 0 0 0 15.52 12.12h63.77a15.48 15.48 0 0 0 3.84-.48 16 16 0 0 0 11.64-19.4l-15.55-41.26 33-66.86h105.69l23 115.14a16 16 0 0 0 15.69 12.86h63.37a16 16 0 0 0 15.69-19.1l-27-135c64-43.1 119.18-66.48 152.43-75.67l41.94-8.34c22.4-2.82 33-2.82 40.79-19 7.32-15.11 16.16-35.79 16.16-47.62.02-12.86-5.85-24.68-15.31-31.27zm-128.67 54a23.94 23.94 0 0 1-23.46-29H517a23.5 23.5 0 0 1 .54 5 24 24 0 0 1-23.96 24z"]]
};
exports.faBadgerHoney = faBadgerHoney;
var faBagsShopping = {
  prefix: 'fad',
  iconName: 'bags-shopping',
  icon: [576, 512, [], "f847", ["M448 192a32 32 0 0 0-32-32h-96V96a96 96 0 0 0-192 0v64H32a32 32 0 0 0-32 32v256a32 32 0 0 0 32 32h128V256a32 32 0 0 1 32-32h256zm-176-32h-96V96a48 48 0 0 1 96 0zm200 160h-16a8 8 0 0 0-8 8v24a64.07 64.07 0 0 1-70.38 63.69c-33.25-3.23-57.62-33.12-57.62-66.53V328a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v20.66c0 48.79 35 92.32 83.37 98.53A96.12 96.12 0 0 0 480 352v-24a8 8 0 0 0-8-8z", "M544 256H224a32 32 0 0 0-32 32v192a32 32 0 0 0 32 32h320a32 32 0 0 0 32-32V288a32 32 0 0 0-32-32zm-64 96a96.12 96.12 0 0 1-108.63 95.19C323 441 288 397.45 288 348.66V328a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v21.16c0 33.41 24.37 63.3 57.62 66.53A64.07 64.07 0 0 0 448 352v-24a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8z"]]
};
exports.faBagsShopping = faBagsShopping;
var faBalanceScale = {
  prefix: 'fad',
  iconName: 'balance-scale',
  icon: [640, 512, [], "f24e", ["M544 464v32a16 16 0 0 1-16 16H112a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h176V153.25A80.06 80.06 0 0 1 241.61 96H112a16 16 0 0 1-16-16V48a16 16 0 0 1 16-16h144.36a79.28 79.28 0 0 1 127.28 0H528a16 16 0 0 1 16 16v32a16 16 0 0 1-16 16H398.39A80.06 80.06 0 0 1 352 153.25V448h176a16 16 0 0 1 16 16z", "M256 336c0-16.18 1.34-8.73-85-181.51-17.65-35.29-68.19-35.36-85.87 0C-2.06 328.75 0 320.33 0 336c0 44.18 57.31 80 128 80s128-35.82 128-80zM128 176l72 144H56zm512 160c0-16.18 1.34-8.73-85.05-181.51-17.65-35.29-68.19-35.36-85.87 0C381.94 328.75 384 320.33 384 336c0 44.18 57.31 80 128 80s128-35.82 128-80zm-200-16l72-144 72 144z"]]
};
exports.faBalanceScale = faBalanceScale;
var faBalanceScaleLeft = {
  prefix: 'fad',
  iconName: 'balance-scale-left',
  icon: [640, 512, [], "f515", ["M544 464v32a16 16 0 0 1-16 16H304a16 16 0 0 1-16-16V153.25a80.48 80.48 0 0 1-13-7.12l-142 47.63a16 16 0 0 1-20.26-10.08l-10.17-30.34a16 16 0 0 1 10.08-20.26L241 90a79.06 79.06 0 0 1-1-10 80 80 0 0 1 80-80c29.69 0 55.3 16.36 69.11 40.37L507 .84a16 16 0 0 1 20.26 10.08l10.17 30.34a16 16 0 0 1-10.08 20.26l-132 44.26A79.94 79.94 0 0 1 352 153.25V448h176a16 16 0 0 1 16 16z", "M640 304c0-16.18 1.34-8.73-85.05-181.51-17.65-35.29-68.19-35.36-85.87 0C381.94 296.75 384 288.33 384 304c0 44.18 57.31 80 128 80s128-35.82 128-80zm-200-16l72-144 72 144zm-269.07-37.51c-17.65-35.29-68.19-35.36-85.87 0C-2.06 424.75 0 416.33 0 432c0 44.18 57.31 80 128 80s128-35.82 128-80c0-16.18 1.32-8.73-85.07-181.51zM56 416l72-144 72 144z"]]
};
exports.faBalanceScaleLeft = faBalanceScaleLeft;
var faBalanceScaleRight = {
  prefix: 'fad',
  iconName: 'balance-scale-right',
  icon: [640, 512, [], "f516", ["M112 448h176V153.24a79.91 79.91 0 0 1-43.38-47.47l-132-44.26a16 16 0 0 1-10.08-20.26l10.16-30.34A16 16 0 0 1 133 .83l117.89 39.54C264.7 16.36 290.31 0 320 0a80 80 0 0 1 80 80 79.06 79.06 0 0 1-1 10l128.4 43.05a16 16 0 0 1 10.08 20.26l-10.18 30.37a16 16 0 0 1-20.3 10.08l-142-47.63a80.48 80.48 0 0 1-13 7.12V496a16 16 0 0 1-16 16H112a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16z", "M0 304c0 44.18 57.31 80 128 80s128-35.82 128-80c0-15.67 2.08-7.25-85-181.51-17.68-35.36-68.22-35.29-85.87 0C-1.32 295.27 0 287.82 0 304zm56-16l72-144 72 144zm328 144c0 44.18 57.31 80 128 80s128-35.82 128-80c0-15.67 2.08-7.25-85.05-181.51-17.68-35.36-68.22-35.29-85.87 0C382.68 423.27 384 415.82 384 432zm56-16l72-144 72 144z"]]
};
exports.faBalanceScaleRight = faBalanceScaleRight;
var faBallPile = {
  prefix: 'fad',
  iconName: 'ball-pile',
  icon: [576, 512, [], "f77e", ["M176 168a80 80 0 1 0 80 80 80 80 0 0 0-80-80zm224 0a80 80 0 1 0 80 80 80 80 0 0 0-80-80z", "M80 352a80 80 0 1 0 80 80 80 80 0 0 0-80-80zM288 0a80 80 0 1 0 80 80 80 80 0 0 0-80-80zm0 352a80 80 0 1 0 80 80 80 80 0 0 0-80-80zm208 0a80 80 0 1 0 80 80 80 80 0 0 0-80-80z"]]
};
exports.faBallPile = faBallPile;
var faBallot = {
  prefix: 'fad',
  iconName: 'ballot',
  icon: [384, 512, [], "f732", ["M360 0H24A23.94 23.94 0 0 0 0 24v464a23.94 23.94 0 0 0 24 24h336a23.94 23.94 0 0 0 24-24V24a23.94 23.94 0 0 0-24-24zM128 400a16 16 0 0 1-16 16H80a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16zm0-128a16 16 0 0 1-16 16H80a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16zm0-128a16 16 0 0 1-16 16H80a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16zm192 248a8 8 0 0 1-8 8H168a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h144a8 8 0 0 1 8 8zm0-128a8 8 0 0 1-8 8H168a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h144a8 8 0 0 1 8 8zm0-128a8 8 0 0 1-8 8H168a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h144a8 8 0 0 1 8 8z", "M112 352H80a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-128H80a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-128H80a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z"]]
};
exports.faBallot = faBallot;
var faBallotCheck = {
  prefix: 'fad',
  iconName: 'ballot-check',
  icon: [384, 512, [], "f733", ["M360 0H24A23.94 23.94 0 0 0 0 24v464a23.94 23.94 0 0 0 24 24h336a23.94 23.94 0 0 0 24-24V24a23.94 23.94 0 0 0-24-24zM161.7 202.4l12.6 12.7a5.37 5.37 0 0 1 0 7.6l-64.2 63.6a5.37 5.37 0 0 1-7.6 0L65.6 249a5.37 5.37 0 0 1 0-7.6l12.7-12.6a5.37 5.37 0 0 1 7.6 0l20.6 20.8 47.6-47.2a5.37 5.37 0 0 1 7.6 0zM64 112a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16v32a16 16 0 0 1-16 16H80a16 16 0 0 1-16-16zm64 288a16 16 0 0 1-16 16H80a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16zm192-8a8 8 0 0 1-8 8H168a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h144a8 8 0 0 1 8 8zm-9.6-120H170.2s29.2-30.2 30.4-32h109.7c5.3 0 9.6 3.6 9.6 8v16h.1c0 4.4-4.3 8-9.6 8zm9.6-136a8 8 0 0 1-8 8H168a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h144a8 8 0 0 1 8 8z", "M80 160h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H80a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm94.3 55.1l-12.6-12.7a5.37 5.37 0 0 0-7.6 0l-47.6 47.2-20.6-20.8a5.37 5.37 0 0 0-7.6 0l-12.7 12.6a5.37 5.37 0 0 0 0 7.6l36.9 37.3a5.37 5.37 0 0 0 7.6 0l64.2-63.6a5.37 5.37 0 0 0 0-7.6zM112 352H80a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z"]]
};
exports.faBallotCheck = faBallotCheck;
var faBan = {
  prefix: 'fad',
  iconName: 'ban',
  icon: [512, 512, [], "f05e", ["M406.78 361.53a186.53 186.53 0 0 1-45.25 45.25L105.22 150.47a186.53 186.53 0 0 1 45.25-45.25z", "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm130.11 378.11A184 184 0 1 1 440 256a182.82 182.82 0 0 1-53.89 130.11z"]]
};
exports.faBan = faBan;
var faBandAid = {
  prefix: 'fad',
  iconName: 'band-aid',
  icon: [640, 512, [], "f462", ["M0 160v192a64.05 64.05 0 0 0 64 64h96V96H64a64.05 64.05 0 0 0-64 64zm576-64h-96v320h96a64.05 64.05 0 0 0 64-64V160a64.05 64.05 0 0 0-64-64zM192 416h256V96H192zm176-232a24 24 0 1 1-24 24 23.94 23.94 0 0 1 24-24zm0 96a24 24 0 1 1-24 24 23.94 23.94 0 0 1 24-24zm-96-96a24 24 0 1 1-24 24 23.94 23.94 0 0 1 24-24zm0 96a24 24 0 1 1-24 24 23.94 23.94 0 0 1 24-24z", "M160 416h32V96h-32zM448 96v320h32V96z"]]
};
exports.faBandAid = faBandAid;
var faBanjo = {
  prefix: 'fad',
  iconName: 'banjo',
  icon: [512, 512, [], "f8a3", ["M192 200A120 120 0 1 1 72 320a120.13 120.13 0 0 1 120-120m0-48a168 168 0 1 0 168 168 168 168 0 0 0-168-168z", "M194.34 381.66l11.31-11.31a8 8 0 0 0 0-11.32L153 306.35a8 8 0 0 0-11.32 0l-11.31 11.31a8 8 0 0 0 0 11.31L183 381.66a8 8 0 0 0 11.34 0zM502.63 39L473.05 9.37a32 32 0 0 0-45.26 0l-46.31 46.32A35.26 35.26 0 0 0 373 69.48l-12.19 36.59L286 180.79A168.81 168.81 0 0 1 331.29 226l74.88-74.88L442.52 139a35.12 35.12 0 0 0 13.79-8.52l46.32-46.31a32 32 0 0 0 0-45.17zM56.48 221.48a168.39 168.39 0 0 1 37-37l-.23-.23a26.18 26.18 0 0 0-37 37zm0 197l-.23.22a26.18 26.18 0 1 0 37 37l.23-.23a168 168 0 0 1-37-36.95zm-30.3-124.7a26.18 26.18 0 0 0 0 52.36h.46C25.29 337.59 24 329 24 320s1.29-17.59 2.64-26.18zm301.34 124.7a168 168 0 0 1-37 37l.23.23a26.18 26.18 0 1 0 37-37zm30.3-124.7h-.46C358.71 302.41 360 311 360 320s-1.29 17.59-2.64 26.18h.46a26.18 26.18 0 0 0 0-52.36zm-192 191.54v.46a26.18 26.18 0 0 0 52.36 0v-.46C209.59 486.71 201 488 192 488s-17.59-1.29-26.18-2.64zM192 128a26.18 26.18 0 0 0-26.18 26.18v.46C174.41 153.29 183 152 192 152s17.59 1.29 26.18 2.64v-.46A26.19 26.19 0 0 0 192 128z"]]
};
exports.faBanjo = faBanjo;
var faBarcode = {
  prefix: 'fad',
  iconName: 'barcode',
  icon: [512, 512, [], "f02a", ["M179.71 447.73h8.86V64h-8.86zm36 0h8.86V64h-8.86zm-116.85 0h8.85V64h-8.85zm-72 0H36V64h-9.14zM494 64v384h18V64zm-53.71 383.73h26.85V64h-26.85zm-144 0h18V64h-18zm72 0h18V64h-18z", "M134.86 447.73h17.71V64h-17.71zm62.85 0h8.86V64h-8.86zM0 448h18V64H0zm54-.27h8.86V64H54zm341.14 0h18V64h-18zM476 64v383.73h9.14V64zM251.43 447.73h18V64h-18zm80.86 0h18V64h-18z"]]
};
exports.faBarcode = faBarcode;
var faBarcodeAlt = {
  prefix: 'fad',
  iconName: 'barcode-alt',
  icon: [640, 512, [], "f463", ["M592 0H48A48 48 0 0 0 0 48v416a48 48 0 0 0 48 48h544a48 48 0 0 0 48-48V48a48 48 0 0 0-48-48zM160 408a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8V104a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8zm64 0a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8V104a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8zm64 0a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8V104a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8zm128 0a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8V104a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8zm128 0a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8V104a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8z", "M152 96h-48a8 8 0 0 0-8 8v304a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8V104a8 8 0 0 0-8-8zm64 0h-16a8 8 0 0 0-8 8v304a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8V104a8 8 0 0 0-8-8zm64 0h-16a8 8 0 0 0-8 8v304a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8V104a8 8 0 0 0-8-8zm128 0h-48a8 8 0 0 0-8 8v304a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8V104a8 8 0 0 0-8-8zm128 0h-48a8 8 0 0 0-8 8v304a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8V104a8 8 0 0 0-8-8z"]]
};
exports.faBarcodeAlt = faBarcodeAlt;
var faBarcodeRead = {
  prefix: 'fad',
  iconName: 'barcode-read',
  icon: [640, 512, [], "f464", ["M144 448H64v-80a16 16 0 0 0-16-16H16a16 16 0 0 0-16 16v128a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-448H16A16 16 0 0 0 0 16v128a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V64h80a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16zm480 0H496a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h80v80a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16zm0 352h-32a16 16 0 0 0-16 16v80h-80a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16V368a16 16 0 0 0-16-16z", "M184 128h-48a8 8 0 0 0-8 8v240a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8V136a8 8 0 0 0-8-8zm64 0h-16a8 8 0 0 0-8 8v240a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8V136a8 8 0 0 0-8-8zm160 0h-48a8 8 0 0 0-8 8v240a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8V136a8 8 0 0 0-8-8zm-96 0h-16a8 8 0 0 0-8 8v240a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8V136a8 8 0 0 0-8-8zm192 0h-48a8 8 0 0 0-8 8v240a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8V136a8 8 0 0 0-8-8z"]]
};
exports.faBarcodeRead = faBarcodeRead;
var faBarcodeScan = {
  prefix: 'fad',
  iconName: 'barcode-scan',
  icon: [640, 512, [], "f465", ["M280 0h-48a8 8 0 0 0-8 8v152h64V8a8 8 0 0 0-8-8zM152 0H72a8 8 0 0 0-8 8v152h96V8a8 8 0 0 0-8-8zM64 504a8 8 0 0 0 8 8h80a8 8 0 0 0 8-8V352H64zM472 0h-48a8 8 0 0 0-8 8v152h64V8a8 8 0 0 0-8-8zm96 0h-48a8 8 0 0 0-8 8v152h64V8a8 8 0 0 0-8-8zM376 0h-16a8 8 0 0 0-8 8v152h32V8a8 8 0 0 0-8-8zm136 504a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8V352h-64zm-288 0a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8V352h-64zm192 0a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8V352h-64zm-64 0a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8V352h-32z", "M640 232v48a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8v-48a8 8 0 0 1 8-8h624a8 8 0 0 1 8 8z"]]
};
exports.faBarcodeScan = faBarcodeScan;
var faBars = {
  prefix: 'fad',
  iconName: 'bars',
  icon: [448, 512, [], "f0c9", ["M16 288h416a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16z", "M432 384H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-320H16A16 16 0 0 0 0 80v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16z"]]
};
exports.faBars = faBars;
var faBaseball = {
  prefix: 'fad',
  iconName: 'baseball',
  icon: [640, 512, [], "f432", ["M123 354.88L169 419c15.9-9.1 32.3-17.5 48.8-25.5L162 315.68c-12.63 13.5-25.53 26.6-39 39.2zm372-2.8a80 80 0 1 0 79.8 80 79.87 79.87 0 0 0-79.8-80z", "M629.67 56.08l-23.9-33.4A53.82 53.82 0 0 0 530 10.48l-212 156.3c-69.1 50.9-112.4 99.8-137.2 128.3l62.2 86.7c34.6-15.2 93.7-41.8 162.8-92.7l212.1-156.2c24.1-17.8 29.37-52.2 11.77-76.8zm-583.3 361.6c-19.2-24.1-36.6-9-37.4-8.4A24 24 0 0 0 5.27 443l47.9 60a23.87 23.87 0 0 0 33.7 3.7c2.8-2.2 17.5-16.5 2.3-35.6 8.2-5.9 24.6-18.2 56.4-37.9l-43.2-60.3c-30 25.98-47 38.18-56 44.78z"]]
};
exports.faBaseball = faBaseball;
var faBaseballBall = {
  prefix: 'fad',
  iconName: 'baseball-ball',
  icon: [496, 512, [], "f433", ["M441.77,101.1a213.51,213.51,0,0,0-44,60.42l-.12.24-28.75-14,.09-.19A245.85,245.85,0,0,1,420.13,77.5C323.91-15.33,171.4-15.14,75.4,77.91a244.73,244.73,0,0,1,50.72,68.79L97.51,160.9a212.83,212.83,0,0,0-43.58-59.31,248,248,0,0,0,.33,309.22,213.57,213.57,0,0,0,43.91-60.36l.11-.24L127,364.26l-.09.19a245.76,245.76,0,0,1-51.12,70c96.2,92.86,248.71,92.72,344.73-.32a244.66,244.66,0,0,1-50.76-68.83l28.65-14.25A212.72,212.72,0,0,0,442,410.46a248.06,248.06,0,0,0-.34-309.36ZM139.25,334.49l-30.33-10.2A212.09,212.09,0,0,0,120,256.52a214.18,214.18,0,0,0-11.69-69.79l30.26-10.4A245.62,245.62,0,0,1,152,256.52,243.74,243.74,0,0,1,139.25,334.49Zm218.13,1.14a245.26,245.26,0,0,1-.67-158.16L387,187.67a213.39,213.39,0,0,0,.6,137.56Z", "M98.17,350.45a214.1,214.1,0,0,1-43.91,60.36,250.37,250.37,0,0,0,21.56,23.67,245.93,245.93,0,0,0,51.13-70l.09-.19-28.76-14ZM97.51,160.9l28.65-14.25A244.73,244.73,0,0,0,75.44,77.86a249.19,249.19,0,0,0-21.52,23.71A213.3,213.3,0,0,1,97.51,160.9Zm300.28.62a213.51,213.51,0,0,1,44-60.42,250.36,250.36,0,0,0-21.57-23.66A245.73,245.73,0,0,0,369,147.52l-.09.19,28.75,14ZM376,255.44A212.18,212.18,0,0,1,387,187.67l-30.33-10.2a245.26,245.26,0,0,0,.67,158.16l30.26-10.4a213.85,213.85,0,0,1-11.71-69.79Zm22.5,95.63L369.8,365.32a244.59,244.59,0,0,0,50.77,68.84,250.19,250.19,0,0,0,21.51-23.7A212.63,212.63,0,0,1,398.45,351.07ZM108.32,186.73A214.44,214.44,0,0,1,120,256.52a212.1,212.1,0,0,1-11.09,67.77l30.33,10.2a243.61,243.61,0,0,0,12.76-78,245.62,245.62,0,0,0-13.43-80.19Z"]]
};
exports.faBaseballBall = faBaseballBall;
var faBasketballBall = {
  prefix: 'fad',
  iconName: 'basketball-ball',
  icon: [496, 512, [], "f434", ["M216,10.05A247,247,0,0,0,84.33,69.7l79.89,79.89A212.33,212.33,0,0,0,216,10.05ZM186.89,172.26,248,233.37,411.67,69.7A247,247,0,0,0,248,8v2a244.13,244.13,0,0,1-61.11,162.26ZM280,502a247,247,0,0,0,131.67-59.7l-79.89-79.89A212.38,212.38,0,0,0,280,502ZM434.3,92.33,270.63,256l61.11,61.11A244.18,244.18,0,0,1,494,256h2A247,247,0,0,0,434.3,92.33Zm0,327.34A247,247,0,0,0,494,288a212.33,212.33,0,0,0-139.54,51.78ZM309.11,339.74,248,278.63,84.33,442.3A247,247,0,0,0,248,504v-2A244.13,244.13,0,0,1,309.11,339.74ZM61.7,92.33A247,247,0,0,0,2.05,224a212.33,212.33,0,0,0,139.54-51.78ZM164.26,194.89A244.13,244.13,0,0,1,2,256H0A247,247,0,0,0,61.7,419.67L225.37,256Z", "M280,502a249.84,249.84,0,0,1-32,2v-2a244.13,244.13,0,0,1,61.11-162.26L248,278.63,84.33,442.3A249.14,249.14,0,0,1,61.7,419.67L225.37,256l-61.11-61.11A244.13,244.13,0,0,1,2,256H0a249.89,249.89,0,0,1,2.05-32,212.33,212.33,0,0,0,139.54-51.78L61.7,92.33A249.14,249.14,0,0,1,84.33,69.7l79.89,79.89A212.33,212.33,0,0,0,216,10.05,249.89,249.89,0,0,1,248,8v2a244.13,244.13,0,0,1-61.11,162.26L248,233.37,411.67,69.7A249.14,249.14,0,0,1,434.3,92.33L270.63,256l61.11,61.11A244.18,244.18,0,0,1,494,256h2a249.84,249.84,0,0,1-2,32,212.33,212.33,0,0,0-139.54,51.78l79.89,79.89a249.14,249.14,0,0,1-22.63,22.63l-79.89-79.89A212.39,212.39,0,0,0,280,502Z"]]
};
exports.faBasketballBall = faBasketballBall;
var faBasketballHoop = {
  prefix: 'fad',
  iconName: 'basketball-hoop',
  icon: [640, 512, [], "f435", ["M192 176h256v-48H192zm446.83 26.76C638.13 200.72 571.32 0 320 0S1.87 200.72 1.17 202.76c-1.6 10.39-1.1-8.66-1.1 132.35 0 23.23 13.6 44 34.71 52.78L139 431.6 130.15 288H104a40 40 0 0 1-40-40v-32a40 40 0 0 1 40-40h56V96h320v80h56a40 40 0 0 1 40 40v32a40 40 0 0 1-40 40h-26.15L501 431.6l104.21-43.71c21.11-8.76 34.71-29.55 34.71-52.78.01-141.01.51-121.96-1.09-132.35z", "M445.27 319.9L408.63 288h-47.07L320 329.4 278.44 288h-47.07l-36.64 31.9-2.51-31.9H160l18.27 224L254 440.4l66 71.6 66.05-71.6 75.68 71.6L480 288h-32.22zm-240.5 124.3l-4.32-53.5 30 27.9zm48.38-48.2l-46.88-43.6 48.79-42.5 42.25 42.1zM320 458.1l-43.36-40.3L320 374.6l43.36 43.2zM342.69 352l42.25-42.1 48.79 42.5-46.88 43.6zm92.54 92.2l-25.69-25.6 30-27.9zM536 208H104a8 8 0 0 0-8 8v32a8 8 0 0 0 8 8h432a8 8 0 0 0 8-8v-32a8 8 0 0 0-8-8z"]]
};
exports.faBasketballHoop = faBasketballHoop;
var faBat = {
  prefix: 'fad',
  iconName: 'bat',
  icon: [640, 512, [], "f6b5", ["M411.83 175.3L320 230.4l-91.83-55.1L256 64l42.66 32h42.67L384 64z", "M640 320l-49.63-16.54a64 64 0 0 0-73.49 25.21L480 384l-11.82-11.82a64 64 0 0 0-90.51 0 65.74 65.74 0 0 0-5.95 6.86L320 448l-51.72-69a64 64 0 0 0-89.6-12.8 64.73 64.73 0 0 0-6.86 5.95L160 384l-36.89-55.33a64 64 0 0 0-73.49-25.21L0 320l81.55-190.31a32 32 0 0 1 42-16.8 32.58 32.58 0 0 1 3.86 2L320 230.4l192.56-115.53a32 32 0 0 1 43.91 11 32.58 32.58 0 0 1 2 3.86z"]]
};
exports.faBat = faBat;
var faBath = {
  prefix: 'fad',
  iconName: 'bath',
  icon: [512, 512, [], "f2cd", ["M80 256H32V112a80 80 0 0 1 145.74-45.51 67.84 67.84 0 0 1 64.18 15.36 12 12 0 0 1 16.42.49l11.32 11.32a12 12 0 0 1 0 17l-95 95a12 12 0 0 1-17 0l-11.32-11.32a12 12 0 0 1-.49-16.43 68 68 0 0 1-6.83-83A32 32 0 0 0 80 112z", "M512 280v16a24 24 0 0 1-24 24h-8v32a95.76 95.76 0 0 1-32 71.55V456a24 24 0 0 1-24 24h-16a24 24 0 0 1-24-24v-8H128v8a24 24 0 0 1-24 24H88a24 24 0 0 1-24-24v-32.45A95.76 95.76 0 0 1 32 352v-32h-8a24 24 0 0 1-24-24v-16a24 24 0 0 1 24-24h464a24 24 0 0 1 24 24z"]]
};
exports.faBath = faBath;
var faBatteryBolt = {
  prefix: 'fad',
  iconName: 'battery-bolt',
  icon: [640, 512, [], "f376", ["M64 160h92.28l7.66-64H48a48 48 0 0 0-48 48v224a48 48 0 0 0 48 48h180.61l14.17-64H64zm552 0h-8v-16a48 48 0 0 0-48-48H405.38l-9.95 48h33.35a65.73 65.73 0 0 1 43.11 16H544v64h32v64h-32v64H427.17l-36.62 64H560a48 48 0 0 0 48-48v-16h8a24 24 0 0 0 24-24V184a24 24 0 0 0-24-24z", "M445.39 223.52l-140.77 246A19 19 0 0 1 288 480c-12.26 0-21.55-12.56-18.67-25.84l36.84-166.39h-95c-11.6 0-20.56-11.18-19-23.77l25.6-213.78C219 39.79 227.18 32 236.8 32h108.8c12.6 0 21.8 13.09 18.55 26.41L336.46 192h92.32c14.78 0 24.01 17.55 16.61 31.52z"]]
};
exports.faBatteryBolt = faBatteryBolt;
var faBatteryEmpty = {
  prefix: 'fad',
  iconName: 'battery-empty',
  icon: [640, 512, [], "f244", ["M616 160h-8v-16a48 48 0 0 0-48-48H48a48 48 0 0 0-48 48v224a48 48 0 0 0 48 48h512a48 48 0 0 0 48-48v-16h8a24 24 0 0 0 24-24V184a24 24 0 0 0-24-24zm-40 128h-32v64H64V160h480v64h32z", ""]]
};
exports.faBatteryEmpty = faBatteryEmpty;
var faBatteryFull = {
  prefix: 'fad',
  iconName: 'battery-full',
  icon: [640, 512, [], "f240", ["M616 160h-8v-16a48 48 0 0 0-48-48H48a48 48 0 0 0-48 48v224a48 48 0 0 0 48 48h512a48 48 0 0 0 48-48v-16h8a24 24 0 0 0 24-24V184a24 24 0 0 0-24-24zm-40 128h-32v64H64V160h480v64h32z", "M512 320H96V192h416z"]]
};
exports.faBatteryFull = faBatteryFull;
var faBatteryHalf = {
  prefix: 'fad',
  iconName: 'battery-half',
  icon: [640, 512, [], "f242", ["M616 160h-8v-16a48 48 0 0 0-48-48H48a48 48 0 0 0-48 48v224a48 48 0 0 0 48 48h512a48 48 0 0 0 48-48v-16h8a24 24 0 0 0 24-24V184a24 24 0 0 0-24-24zm-40 128h-32v64H64V160h480v64h32z", "M320 320H96V192h224z"]]
};
exports.faBatteryHalf = faBatteryHalf;
var faBatteryQuarter = {
  prefix: 'fad',
  iconName: 'battery-quarter',
  icon: [640, 512, [], "f243", ["M616 160h-8v-16a48 48 0 0 0-48-48H48a48 48 0 0 0-48 48v224a48 48 0 0 0 48 48h512a48 48 0 0 0 48-48v-16h8a24 24 0 0 0 24-24V184a24 24 0 0 0-24-24zm-40 128h-32v64H64V160h480v64h32z", "M224 320H96V192h128z"]]
};
exports.faBatteryQuarter = faBatteryQuarter;
var faBatterySlash = {
  prefix: 'fad',
  iconName: 'battery-slash',
  icon: [640, 512, [], "f377", ["M165.31 96H560a48 48 0 0 1 48 48v16h8a24 24 0 0 1 24 24v144a24 24 0 0 1-24 24h-8v16a48 48 0 0 1-32.14 45.31L496.54 352H544v-64h32v-64h-32v-64H248.12zM64 352V179.49l-62.13-48A47.37 47.37 0 0 0 0 144v224a48 48 0 0 0 48 48h322l-82.81-64z", "M633.83 458.11L45.47 3.38A16 16 0 0 0 23 6.17L3.37 31.46a16 16 0 0 0 2.81 22.45l588.35 454.73a16 16 0 0 0 22.47-2.79l19.64-25.27a16 16 0 0 0-2.81-22.47z"]]
};
exports.faBatterySlash = faBatterySlash;
var faBatteryThreeQuarters = {
  prefix: 'fad',
  iconName: 'battery-three-quarters',
  icon: [640, 512, [], "f241", ["M616 160h-8v-16a48 48 0 0 0-48-48H48a48 48 0 0 0-48 48v224a48 48 0 0 0 48 48h512a48 48 0 0 0 48-48v-16h8a24 24 0 0 0 24-24V184a24 24 0 0 0-24-24zm-40 128h-32v64H64V160h480v64h32z", "M416 320H96V192h320z"]]
};
exports.faBatteryThreeQuarters = faBatteryThreeQuarters;
var faBed = {
  prefix: 'fad',
  iconName: 'bed',
  icon: [640, 512, [], "f236", ["M528 128H304a16 16 0 0 0-16 16v144h352v-48a112 112 0 0 0-112-112zM176 96a80 80 0 1 0 80 80 80 80 0 0 0-80-80z", "M640 288v144a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-48H64v48a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16V80a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16v208z"]]
};
exports.faBed = faBed;
var faBeer = {
  prefix: 'fad',
  iconName: 'beer',
  icon: [448, 512, [], "f0fc", ["M368 96h-48V56a24 24 0 0 0-24-24H24A24 24 0 0 0 0 56v400a24 24 0 0 0 24 24h272a24 24 0 0 0 24-24v-42.11l80.61-36a80.08 80.08 0 0 0 47.39-73V176a80.09 80.09 0 0 0-80-80zM128 368a16 16 0 0 1-32 0V144a16 16 0 0 1 32 0zm96 0a16 16 0 0 1-32 0V144a16 16 0 0 1 32 0zm160-63.14a16 16 0 0 1-9.48 14.61L320 343.8V160h48a16 16 0 0 1 16 16z", "M208 128a16 16 0 0 0-16 16v224a16 16 0 0 0 32 0V144a16 16 0 0 0-16-16zm-96 0a16 16 0 0 0-16 16v224a16 16 0 0 0 32 0V144a16 16 0 0 0-16-16z"]]
};
exports.faBeer = faBeer;
var faBell = {
  prefix: 'fad',
  iconName: 'bell',
  icon: [448, 512, [], "f0f3", ["M448 384c-.1 16.4-13 32-32.1 32H32.08C13 416 .09 400.4 0 384a31.25 31.25 0 0 1 8.61-21.71c19.32-20.76 55.47-52 55.47-154.29 0-77.7 54.48-139.9 127.94-155.16V32a32 32 0 1 1 64 0v20.84C329.42 68.1 383.9 130.3 383.9 208c0 102.3 36.15 133.53 55.47 154.29A31.27 31.27 0 0 1 448 384z", "M160 448h128a64 64 0 0 1-128 0z"]]
};
exports.faBell = faBell;
var faBellExclamation = {
  prefix: 'fad',
  iconName: 'bell-exclamation',
  icon: [448, 512, [], "f848", ["M439.39 362.29c-19.32-20.76-55.47-52-55.47-154.29 0-77.7-54.48-139.9-127.94-155.16V32a32 32 0 1 0-64 0v20.84C118.56 68.1 64.08 130.3 64.08 208c0 102.3-36.15 133.53-55.47 154.29A31.24 31.24 0 0 0 0 384c.11 16.4 13 32 32.1 32h383.8c19.12 0 32-15.6 32.1-32a31.23 31.23 0 0 0-8.61-21.71zM224 352a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm38.2-206.4l-12.8 96a16 16 0 0 1-15.9 14.4h-19a16 16 0 0 1-15.9-14.4l-12.8-96a16.06 16.06 0 0 1 15.9-17.6h44.6a16 16 0 0 1 15.89 17.6z", "M160 448a64 64 0 1 0 128 0zm64-160a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm-9.5-32h19a16 16 0 0 0 15.9-14.4l12.8-96a16 16 0 0 0-15.9-17.6h-44.6a16.06 16.06 0 0 0-15.9 17.6l12.8 96a16 16 0 0 0 15.89 14.4z"]]
};
exports.faBellExclamation = faBellExclamation;
var faBellPlus = {
  prefix: 'fad',
  iconName: 'bell-plus',
  icon: [448, 512, [], "f849", ["M439.39 361.29c-19.32-20.76-55.47-52-55.47-154.29 0-77.7-54.48-139.9-127.94-155.16V31a32 32 0 1 0-64 0v20.84C118.56 67.1 64.08 129.3 64.08 207c0 102.3-36.15 133.53-55.47 154.29A31.24 31.24 0 0 0 0 383c.11 16.4 13 32 32.1 32h383.8c19.12 0 32-15.6 32.1-32a31.23 31.23 0 0 0-8.61-21.71zM320 247a16 16 0 0 1-16 16h-56v56a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-56h-56a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16h56v-56a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v56h56a16 16 0 0 1 16 16z", "M224 511a64 64 0 0 0 64-64H160a64 64 0 0 0 64 64zm80-296h-56v-56a16 16 0 0 0-16-16h-16a16 16 0 0 0-16 16v56h-56a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h56v56a16 16 0 0 0 16 16h16a16 16 0 0 0 16-16v-56h56a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16z"]]
};
exports.faBellPlus = faBellPlus;
var faBellSchool = {
  prefix: 'fad',
  iconName: 'bell-school',
  icon: [512, 512, [], "f5d5", ["M464 320a48 48 0 0 0-27.14 87.55A40.07 40.07 0 0 1 400 432h-48v48h48a88.08 88.08 0 0 0 86-69.56A47.86 47.86 0 0 0 464 320zM208 160a48 48 0 1 0 48 48 48 48 0 0 0-48-48z", "M208 0C93.12 0 0 93.12 0 208s93.12 208 208 208 208-93.12 208-208S322.88 0 208 0zm0 288a80 80 0 1 1 80-80 80.09 80.09 0 0 1-80 80zM64 399.54V480a32 32 0 0 0 32 32h224a32 32 0 0 0 32-32v-80.46a238.18 238.18 0 0 1-288 0z"]]
};
exports.faBellSchool = faBellSchool;
var faBellSchoolSlash = {
  prefix: 'fad',
  iconName: 'bell-school-slash',
  icon: [640, 512, [], "f5d6", ["M486.36 344.13a48 48 0 1 1 75.23 58.14zM272 160a47.69 47.69 0 0 0-18.87 3.88l66.33 51.26A48 48 0 0 0 272 160zm78.19 240.67L66 181a209.13 209.13 0 0 0-2 27c0 114.88 93.12 208 208 208a207.23 207.23 0 0 0 78.19-15.33zM272 448a238.41 238.41 0 0 1-144-48.46V480a32 32 0 0 0 32 32h224a32 32 0 0 0 32-32v-28.47l-37.66-29.11A236.49 236.49 0 0 1 272 448zm-46.21-305.26a80 80 0 0 1 121 93.54l103 79.63A207 207 0 0 0 480 208C480 93.12 386.88 0 272 0a207.34 207.34 0 0 0-149.22 63.13z", "M633.82 458.09L45.47 3.38A16 16 0 0 0 23 6.17L3.37 31.46a16 16 0 0 0 2.81 22.45l588.34 454.71a16 16 0 0 0 22.48-2.79l19.64-25.27a16 16 0 0 0-2.82-22.47z"]]
};
exports.faBellSchoolSlash = faBellSchoolSlash;
var faBellSlash = {
  prefix: 'fad',
  iconName: 'bell-slash',
  icon: [640, 512, [], "f1f6", ["M370 416H128.1c-19.12 0-32-15.6-32.1-32a31.24 31.24 0 0 1 8.61-21.71c16.21-17.42 44-42.79 52.62-110.75zm173.64-27.59A32.49 32.49 0 0 0 544 384a31.23 31.23 0 0 0-8.61-21.71c-19.32-20.76-55.47-52-55.47-154.29 0-77.7-54.48-139.9-127.94-155.16V32a32 32 0 1 0-64 0v20.84c-40.31 8.37-74.89 30.89-97.9 62.33zM320 512a64 64 0 0 0 64-64H256a64 64 0 0 0 64 64z", "M633.82 458.09L45.47 3.38A16 16 0 0 0 23 6.17L3.37 31.46a16 16 0 0 0 2.81 22.45l588.34 454.71a16 16 0 0 0 22.48-2.79l19.64-25.27a16 16 0 0 0-2.82-22.47z"]]
};
exports.faBellSlash = faBellSlash;
var faBells = {
  prefix: 'fad',
  iconName: 'bells',
  icon: [640, 512, [], "f77f", ["M117.3 119.08c-.8 2.1-14.7 40.5-15.4 42.71-29.2 80.31-66.4 94.55-87.4 105.28C-5.6 277.4-5 307.78 17.5 316l243.3 88.84c8.4-19.25 19.5-45.72-3.3-108.49L242 253.57c-27.9-76.91 5-161 73.7-200.34a130.82 130.82 0 0 0-27.4-14.17c-69.25-25.19-145.77 10.62-171 80.02zM543.77 411L428.1 453a63.76 63.76 0 0 0 115.67-42z", "M137.85 444.14a63.73 63.73 0 0 0 73.83-23.2L96.23 378.83a63.78 63.78 0 0 0 41.62 65.31zM625.55 299c-21-10.73-58.33-25-87.44-105.28-.8-2.2-14.7-40.61-15.4-42.72C497.4 81.63 420.88 45.84 351.64 71.1s-104.92 102-79.73 171.37c.8 2.11 14.81 40.52 15.61 42.72 29.21 80.32 9.7 115.22.5 137-8.8 20.76 11.21 43.72 33.72 35.5L622.45 348c20.55-7.55 24.9-37.74 3.1-49z"]]
};
exports.faBells = faBells;
var faBetamax = {
  prefix: 'fad',
  iconName: 'betamax',
  icon: [512, 512, [], "f8a4", ["M0 160v240a48 48 0 0 0 48 48h416a48 48 0 0 0 48-48V160zm144 224a80 80 0 1 1 80-80 80 80 0 0 1-80 80zm304 0H288V224h160z", "M496 64H16A16 16 0 0 0 0 80v80h512V80a16 16 0 0 0-16-16zM144 224a80 80 0 1 0 80 80 80 80 0 0 0-80-80zm0 112a32 32 0 1 1 32-32 32 32 0 0 1-32 32z"]]
};
exports.faBetamax = faBetamax;
var faBezierCurve = {
  prefix: 'fad',
  iconName: 'bezier-curve',
  icon: [640, 512, [], "f55b", ["M368 32h-96a32 32 0 0 0-32 32v96a32 32 0 0 0 32 32h96a32 32 0 0 0 32-32V64a32 32 0 0 0-32-32zM160 320H64a32 32 0 0 0-32 32v96a32 32 0 0 0 32 32h96a32 32 0 0 0 32-32v-96a32 32 0 0 0-32-32zm416 0h-96a32 32 0 0 0-32 32v96a32 32 0 0 0 32 32h96a32 32 0 0 0 32-32v-96a32 32 0 0 0-32-32z", "M208 88h-84.75a64 64 0 1 0 0 48H203A232.21 232.21 0 0 0 93.44 288h49.4a183.69 183.69 0 0 1 71-101.56A63.28 63.28 0 0 1 208 160zm368-40a63.93 63.93 0 0 0-59.25 40H432v72a63.43 63.43 0 0 1-5.88 26.44 183.69 183.69 0 0 1 71 101.56h49.4A232.21 232.21 0 0 0 437 136h79.73A64 64 0 1 0 576 48z"]]
};
exports.faBezierCurve = faBezierCurve;
var faBible = {
  prefix: 'fad',
  iconName: 'bible',
  icon: [448, 512, [], "f647", ["M96 448c-19.2 0-32-12.8-32-32s16-32 32-32h319.33c-1.93 16.24-1.76 48.38.53 64z", "M96 384h328a24 24 0 0 0 24-24V32a32 32 0 0 0-32-32H96A96 96 0 0 0 0 96v320a96 96 0 0 0 96 96h328a24 24 0 0 0 24-24v-16a24 24 0 0 0-24-24H96c-19.2 0-32-12.8-32-32s16-32 32-32zm48-240a16 16 0 0 1 16-16h48V80a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16v48h48a16 16 0 0 1 16 16v32a16 16 0 0 1-16 16h-48v112a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V192h-48a16 16 0 0 1-16-16z"]]
};
exports.faBible = faBible;
var faBicycle = {
  prefix: 'fad',
  iconName: 'bicycle',
  icon: [640, 512, [], "f206", ["M255 304h-48.61a79.82 79.82 0 0 0-19.64-38.23L212.63 224A127.74 127.74 0 0 1 255 304zm257-112a127.54 127.54 0 0 0-45.93 8.5l26.07 42a80.25 80.25 0 1 1-40.74 25.37l-26.09-42A128 128 0 1 0 512 192zM201.3 352a80 80 0 1 1-56.2-110.14l26.21-42.34A128 128 0 1 0 252 352z", "M495.83 339.45a16 16 0 0 0 22 5.16l13.6-8.44a16 16 0 0 0 5.15-22L388.39 75.34A24 24 0 0 0 368 64h-64a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h50.65l14.9 24H256v-16a16 16 0 0 0-16-16h-87.46c-13.44 0-24.77 11-24.53 24.44A24 24 0 0 0 152 152h48.73L99.6 315.37A24 24 0 0 0 120 352h184a24 24 0 0 0 20.41-11.37l86-138.86zM290.63 304H163.09l74.28-120h127.55z"]]
};
exports.faBicycle = faBicycle;
var faBiking = {
  prefix: 'fad',
  iconName: 'biking',
  icon: [640, 512, [], "f84a", ["M512 256a128 128 0 1 0 128 128 128 128 0 0 0-128-128zm0 192a64 64 0 1 1 64-64 64 64 0 0 1-64 64zM128 256a128 128 0 1 0 128 128 128 128 0 0 0-128-128zm0 192a64 64 0 1 1 64-64 64 64 0 0 1-64 64z", "M400 96a48 48 0 1 0-48-48 48 48 0 0 0 48 48zm80 64h-52.78L356 103a31.94 31.94 0 0 0-40.81.68l-112 96a32 32 0 0 0 3.08 50.92L288 305.12V416a32 32 0 0 0 64 0V288a32 32 0 0 0-14.25-26.62l-41.36-27.57 58.25-49.92L396 217a31.9 31.9 0 0 0 20 7h64a32 32 0 0 0 0-64z"]]
};
exports.faBiking = faBiking;
var faBikingMountain = {
  prefix: 'fad',
  iconName: 'biking-mountain',
  icon: [640, 512, [], "f84b", ["M191.34 49.88l-58.12 48.76c-6.38 5.55-7 15.54-1.34 22.34l40.83 49.18c5.65 6.8 15.39 7.81 21.77 2.26L298.8 83.51c6.38-5.54 7-15.54 1.35-22.33-28.15-33.95-76.91-39.02-108.81-11.3zM240 352h-5.2a110.19 110.19 0 0 0-8.65-20.89l3.67-3.67a16 16 0 0 0 0-22.63l-22.63-22.63a16 16 0 0 0-22.63 0l-3.67 3.67A110.45 110.45 0 0 0 160 277.2V272a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v5.2a110.19 110.19 0 0 0-20.89 8.65l-3.67-3.67a16 16 0 0 0-22.63 0l-22.63 22.63a16 16 0 0 0 0 22.63l3.67 3.67A110.45 110.45 0 0 0 21.2 352H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h5.2a110.19 110.19 0 0 0 8.65 20.89l-3.67 3.67a16 16 0 0 0 0 22.63l22.63 22.63a16 16 0 0 0 22.63 0l3.67-3.67A110.94 110.94 0 0 0 96 490.8v5.2a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-5.2a110.56 110.56 0 0 0 20.9-8.65l3.66 3.67a16 16 0 0 0 22.63 0l22.63-22.63a16 16 0 0 0 0-22.63l-3.67-3.67a110.45 110.45 0 0 0 8.66-20.89H240a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-112 96a64 64 0 1 1 64-64 64 64 0 0 1-64 64zm496-96h-5.2a110.19 110.19 0 0 0-8.65-20.89l3.67-3.67a16 16 0 0 0 0-22.63l-22.63-22.63a16 16 0 0 0-22.63 0l-3.66 3.67a110.81 110.81 0 0 0-20.9-8.65V272a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v5.2a110.47 110.47 0 0 0-20.89 8.65l-3.66-3.67a16 16 0 0 0-22.63 0l-22.63 22.63a16 16 0 0 0 0 22.63l3.67 3.67a110.45 110.45 0 0 0-8.67 20.89H400a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h5.2a110.19 110.19 0 0 0 8.65 20.89l-3.67 3.67a16 16 0 0 0 0 22.63l22.63 22.63a16 16 0 0 0 22.63 0l3.66-3.67a110.94 110.94 0 0 0 20.9 8.65v5.2a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-5.2a110.56 110.56 0 0 0 20.9-8.65l3.67 3.67a16 16 0 0 0 22.63 0l22.63-22.63a16 16 0 0 0 0-22.63l-3.67-3.67A110.45 110.45 0 0 0 618.8 416h5.2a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-112 96a64 64 0 1 1 64-64 64 64 0 0 1-64 64z", "M400 96a48 48 0 1 0-48-48 48 48 0 0 0 48 48zm-4 121a32 32 0 0 0 20 7h64a32 32 0 0 0 0-64h-52.78L356 103a31.94 31.94 0 0 0-40.81.68l-112 96a32 32 0 0 0 3.07 50.92L288 305.12V416a32 32 0 0 0 64 0V288a32 32 0 0 0-14.25-26.62l-41.35-27.57 58.24-49.92z"]]
};
exports.faBikingMountain = faBikingMountain;
var faBinoculars = {
  prefix: 'fad',
  iconName: 'binoculars',
  icon: [512, 512, [], "f1e5", ["M400 32h-64a16 16 0 0 0-16 16v48h96V48a16 16 0 0 0-16-16zm-224 0h-64a16 16 0 0 0-16 16v48h96V48a16 16 0 0 0-16-16zm48 256h64V128h-64z", "M63.91 160C61.4 253.84 3.46 274.22 0 404v44a32 32 0 0 0 32 32h96a32 32 0 0 0 32-32V288h32V128H95.84c-17.63 0-31.45 14.37-31.93 32zm384.18 0c-.48-17.62-14.3-32-31.93-32H320v160h32v160a32 32 0 0 0 32 32h96a32 32 0 0 0 32-32v-44c-3.46-129.78-61.4-150.16-63.91-244z"]]
};
exports.faBinoculars = faBinoculars;
var faBiohazard = {
  prefix: 'fad',
  iconName: 'biohazard',
  icon: [576, 512, [], "f780", ["M206 80.83a89.75 89.75 0 0 0 29.5 40.69c16.51-5.7 34-9.5 52.51-9.5s36.2 3.8 52.81 9.6a89.75 89.75 0 0 0 29.5-40.69 207.71 207.71 0 0 0-164.32-.1zm-76.72 205.83a84 84 0 0 0-26.4-4.59 81.46 81.46 0 0 0-22.5 3.1 208.16 208.16 0 0 0 83.31 153.45 91.09 91.09 0 0 0 24.5-42.39 158.72 158.72 0 0 1-58.91-109.57zm343.94-4.59a85.81 85.81 0 0 0-26.6 4.69A158.8 158.8 0 0 1 387.91 396a91.4 91.4 0 0 0 24.5 42.49 207.53 207.53 0 0 0 83-153.45 83.1 83.1 0 0 0-22.19-2.97z", "M575.53 283.47c-13.1-39.09-39.5-72-74.1-92.37a162.36 162.36 0 0 0-55.31-19.9c6-17.69 10-36.39 10-56.18a173.9 173.9 0 0 0-41-112.16 7.84 7.84 0 0 0-10-1.8 8.26 8.26 0 0 0-3.6 9.69c4.5 13.8 6.6 26.29 6.6 38.49 0 67.78-53.8 122.86-120 122.86s-120-55.08-120-122.86c0-12.1 2.2-24.69 6.6-38.49a8.26 8.26 0 0 0-3.6-9.69 7.86 7.86 0 0 0-10 1.8 174.49 174.49 0 0 0-41 112.16c0 19.79 3.9 38.49 10 56.18a163.12 163.12 0 0 0-55.31 19.9c-34.6 20.49-61 53.28-74.3 92.37A8.32 8.32 0 0 0 4 293.26a7.82 7.82 0 0 0 10-1.6c9.4-10.79 19-19.09 29.2-25.09 57.31-33.89 130.82-13.69 163.92 45s13.4 134-43.9 167.84c-10.21 6.1-22 10.4-35.81 13.4a8.27 8.27 0 0 0-6.4 8.1 8.07 8.07 0 0 0 6.5 8 163.8 163.8 0 0 0 115.18-19.71c18-10.6 32.91-24.49 45.31-40.09 12.4 15.6 27.3 29.49 45.31 40.09a163.8 163.8 0 0 0 115.21 19.69 8.07 8.07 0 0 0 6.5-8 8.16 8.16 0 0 0-6.4-8.1c-13.9-2.9-25.6-7.3-35.81-13.4-57.3-33.89-77-109.16-43.9-167.84s106.61-78.88 163.92-45c10.2 6.1 19.8 14.3 29.2 25.09a7.82 7.82 0 0 0 10 1.6 8.27 8.27 0 0 0 3.5-9.77zM288 320.05a48 48 0 1 1 48-48 48 48 0 0 1-48 48z"]]
};
exports.faBiohazard = faBiohazard;
var faBirthdayCake = {
  prefix: 'fad',
  iconName: 'birthday-cake',
  icon: [448, 512, [], "f1fd", ["M373.5 384c-28 0-31.39 32-74.75 32-43.55 0-46.6-32-74.75-32-27.28 0-31.66 32-74.5 32-43.5 0-46.8-32-74.75-32S43.36 416 0 416v96h448v-96c-43.25 0-47-32-74.5-32zM96 96c17.75 0 32-13.5 32-40S108 0 96 0c0 41-32 33-32 64a31.9 31.9 0 0 0 32 32zm128 0c17.75 0 32-13.5 32-40S236 0 224 0c0 41-32 33-32 64a31.9 31.9 0 0 0 32 32zm128 0c17.75 0 32-13.5 32-40S364 0 352 0c0 41-32 33-32 64a31.9 31.9 0 0 0 32 32z", "M448 384c-28 0-31.26-32-74.5-32-43.43 0-46.83 32-74.75 32-27.7 0-31.45-32-74.75-32-42.84 0-47.22 32-74.5 32-28.15 0-31.2-32-74.75-32S28.1 384 0 384v-80a48 48 0 0 1 48-48h16V112h64v144h64V112h64v144h64V112h64v144h16a48 48 0 0 1 48 48z"]]
};
exports.faBirthdayCake = faBirthdayCake;
var faBlanket = {
  prefix: 'fad',
  iconName: 'blanket',
  icon: [512, 512, [], "f498", ["M512 464v32a16 16 0 0 1-16 16H128C57.17 512-.41 454.17 0 383.25.41 312.62 58.78 256 129.41 256H432a80.09 80.09 0 0 1 80 80.79c-.43 44-37 79.21-81 79.21H128a32 32 0 0 1-32-32.9c.48-17.43 15.22-31.1 32.66-31.1H432a16 16 0 0 0 16-16.81c-.42-8.59-7.84-15.19-16.44-15.19H128a64.06 64.06 0 0 0-64 65c.53 35.12 29.84 63 65 63h367a16 16 0 0 1 16 16z", "M512 96s-.07 179.79-.28 233.47A80.1 80.1 0 0 0 432 256H129.41C58.78 256 .41 312.62 0 383.25v.73V96A96.14 96.14 0 0 1 96 0h320a96.14 96.14 0 0 1 96 96z"]]
};
exports.faBlanket = faBlanket;
var faBlender = {
  prefix: 'fad',
  iconName: 'blender',
  icon: [512, 512, [], "f517", ["M328 288a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h114.18l17.46-64H328a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h140.36l17.46-64H328a8 8 0 0 1-8-8V72a8 8 0 0 1 8-8h166.55L512 0H48A48 48 0 0 0 0 48v160a48 48 0 0 0 48 48h103.27l8.73 96h256l17.45-64zM64 192V64h69.82l11.64 128z", "M416 384H160a64 64 0 0 0-64 64v32a32 32 0 0 0 32 32h320a32 32 0 0 0 32-32v-32a64 64 0 0 0-64-64zm-128 96a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm40-288h131.64l8.72-32H328a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm0 96h105.46l8.72-32H328a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm0-224a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h157.81l8.73-32z"]]
};
exports.faBlender = faBlender;
var faBlenderPhone = {
  prefix: 'fad',
  iconName: 'blender-phone',
  icon: [576, 512, [], "f6b6", ["M497.46 288L480 352H192V0h384l-17.45 64H392a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h157.82l-17.45 64H392a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h131.64l-17.45 64H392a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8z", "M158.8 335L133 271.75a16.79 16.79 0 0 0-17.24-10.26l-45 4.42a214.78 214.78 0 0 1 0-147.72l45 4.42A16.81 16.81 0 0 0 133 112.35l25.8-63.26A16.3 16.3 0 0 0 152.12 29L112.84 4.92C98.51-3.87 80.09-.5 69 12a269.64 269.64 0 0 0 2.09 362.49c9.87 10.8 29.12 12.48 41.66 4.8l39.4-24.18A16.3 16.3 0 0 0 158.8 335zM480 384H192a64 64 0 0 0-64 64v32a32 32 0 0 0 32 32h352a32 32 0 0 0 32-32v-32a64 64 0 0 0-64-64zm-144 96a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm56-192h105.46l8.72-32H392a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm0-96h131.64l8.72-32H392a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm0-128a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h157.81l8.73-32z"]]
};
exports.faBlenderPhone = faBlenderPhone;
var faBlind = {
  prefix: 'fad',
  iconName: 'blind',
  icon: [384, 512, [], "f29d", ["M380.15 510.84a8 8 0 0 1-11-2.68L243.83 301.72a31.91 31.91 0 0 0 13-9.48l126 207.61a8 8 0 0 1-2.68 11z", "M142.8 314.34l-32.54 89.48 36.12 88.29a32 32 0 0 0 59.24-24.23zM96 88a44 44 0 1 0-44-44 44 44 0 0 0 44 44zm154.84 169.13l-120-152A23.91 23.91 0 0 0 112 96H80a23.9 23.9 0 0 0-18.94 9.24L0 183.77v95.69c0 13.46 11 24.79 24.46 24.54A24 24 0 0 0 48 280v-79.77l16-20.57v140.7L9.93 469.05a32 32 0 0 0 59.91 22.51c.08-.21.16-.42.23-.63L136 309.64v-107.2l-31.41-39.82a4 4 0 0 1 6.27-5l102.3 129.22c9.15 11.59 24.37 11.34 33.71 4a24 24 0 0 0 4-33.71z"]]
};
exports.faBlind = faBlind;
var faBlog = {
  prefix: 'fad',
  iconName: 'blog',
  icon: [512, 512, [], "f781", ["M511.9 303C503.4 139.82 372.2 8.62 209 0a16.1 16.1 0 0 0-17 16v31.6a15.84 15.84 0 0 0 15 15.9c129.4 7 233.4 112 240.9 241.5a16 16 0 0 0 15.9 15h32.1a16.1 16.1 0 0 0 16-17zM209.3 96a16.13 16.13 0 0 0-17.3 16.1v32.1a15.94 15.94 0 0 0 14.8 15.9c76.8 6.3 138 68.2 144.9 145.2a16.07 16.07 0 0 0 15.9 14.7h32.2a16.19 16.19 0 0 0 16.1-17.3C407.5 192.62 319.4 104.52 209.3 96z", "M172.2 226.82c75.5 15 129.9 89.3 112.5 172.2-11.4 54.3-55.3 98.3-109.7 109.7C82.1 528.22 0 457.52 0 368V120a23.94 23.94 0 0 1 24-24h48a23.94 23.94 0 0 1 24 24v248a48 48 0 1 0 64.7-45c-9.6-3.6-16.7-11.8-16.7-22v-50.4c0-14.9 13.6-26.7 28.2-23.8z"]]
};
exports.faBlog = faBlog;
var faBold = {
  prefix: 'fad',
  iconName: 'bold',
  icon: [384, 512, [], "f032", ["M32 32h32v80H32a16 16 0 0 1-16-16V48a16 16 0 0 1 16-16zm32 368v80H32a16 16 0 0 1-16-16v-48a16 16 0 0 1 16-16z", "M332.53 237.78c12.86-15.8 24.9-44.81 26.93-65C366.85 96.48 306.81 32 232 32H64v448h183.62C322.94 480 384 419.11 384 344a135.36 135.36 0 0 0-51.47-106.22zM144 112h88a48 48 0 1 1 0 96h-88zm88 288h-88V288h88a56 56 0 1 1 0 112z"]]
};
exports.faBold = faBold;
var faBolt = {
  prefix: 'fad',
  iconName: 'bolt',
  icon: [320, 512, [], "f0e7", ["M224 24.19a23.89 23.89 0 0 1-.79 6L180.61 160l-37.9 128H24a24 24 0 0 1-24-24 24.45 24.45 0 0 1 .21-3.2l32-240A24 24 0 0 1 56 0h144a24.09 24.09 0 0 1 24 24.19z", "M319.93 184.07a23.93 23.93 0 0 1-3.22 11.93l-176 304a24 24 0 0 1-44.1-17.5l46.1-194.5 37.9-128H296a24 24 0 0 1 23.93 24.07z"]]
};
exports.faBolt = faBolt;
var faBomb = {
  prefix: 'fad',
  iconName: 'bomb',
  icon: [512, 512, [], "f1e2", ["M500 60h-24a12 12 0 0 0 0 24h24a12 12 0 0 0 0-24zM440 0a12 12 0 0 0-12 12v24a12 12 0 0 0 24 0V12a12 12 0 0 0-12-12zm33.9 55l17-17a12 12 0 0 0-17-17l-17 17a12 12 0 0 0 17 17zm-67.8 0a12 12 0 0 0 17-17l-17-17a12 12 0 0 0-17 17zm67.8 34a12 12 0 0 0-17 17l17 17a12 12 0 0 0 17-17zm-102.5 34.5l17.1 17 52-52-17.1-17z", "M415 200.9a23.9 23.9 0 0 0 0-33.9l-70.1-70a23.9 23.9 0 0 0-33.9 0l-17.4 17.4A207.35 207.35 0 0 0 208 96C93.1 96 0 189.1 0 304s93.1 207.9 208 207.9 208-93.1 208-208a207.35 207.35 0 0 0-18.4-85.6zM176 208a64.06 64.06 0 0 0-64 64 16 16 0 0 1-32 0 96.15 96.15 0 0 1 96-96 16 16 0 0 1 0 32z"]]
};
exports.faBomb = faBomb;
var faBone = {
  prefix: 'fad',
  iconName: 'bone',
  icon: [640, 512, [], "f5d7", ["M598.88 244.56a12.79 12.79 0 0 0 0 22.88A74.38 74.38 0 0 1 640 334v7.64a74.38 74.38 0 0 1-145 23.5c-6.53-19.6-10.73-45.14-38.11-45.14H183.06c-26.51 0-30.43 22.11-38.11 45.14A74.38 74.38 0 0 1 0 341.61V334a74.39 74.39 0 0 1 41.12-66.53 12.79 12.79 0 0 0 0-22.88A74.39 74.39 0 0 1 0 178v-7.64a74.38 74.38 0 0 1 145-23.53c6.53 19.6 10.73 45.14 38.11 45.14h273.82c26.51 0 30.43-22.11 38.11-45.14a74.39 74.39 0 0 1 145 23.53V178a74.39 74.39 0 0 1-41.12 66.53z", ""]]
};
exports.faBone = faBone;
var faBoneBreak = {
  prefix: 'fad',
  iconName: 'bone-break',
  icon: [640, 512, [], "f5d8", ["M598.88 171.44A74.38 74.38 0 0 1 640 238v7.64a74.38 74.38 0 0 1-144.94 23.53l-7.75-23.26A32 32 0 0 0 457 224H352l32-64-32-64h105a32 32 0 0 0 30.36-21.88l7.75-23.26A74.38 74.38 0 0 1 640 74.39V82a74.39 74.39 0 0 1-41.12 66.53 12.79 12.79 0 0 0 0 22.91z", "M320 282.51L256 256l-26.5-64-63 63a32 32 0 0 1-36.94 6l-21.93-11a74.39 74.39 0 0 0-85.84 119.13l5.4 5.4a74.39 74.39 0 0 0 76.12 18 12.79 12.79 0 0 1 16.18 16.18 74.39 74.39 0 0 0 18 76.12l5.4 5.4A74.39 74.39 0 0 0 262 404.33l-11-21.93a32 32 0 0 1 6-36.94z"]]
};
exports.faBoneBreak = faBoneBreak;
var faBong = {
  prefix: 'fad',
  iconName: 'bong',
  icon: [448, 512, [], "f55c", ["M48 384c0-25.42 5.87-46.53 14.74-64h258.52c8.87 17.47 14.74 38.58 14.74 64a143 143 0 0 1-19.08 71.36A16.86 16.86 0 0 1 302.5 464h-221a16.86 16.86 0 0 1-14.42-8.64A143 143 0 0 1 48 384z", "M443.31 217.37l-52.69-52.69a16 16 0 0 0-22.63 0L356.68 176a16 16 0 0 0 0 22.63l9.38 9.38-39.41 39.41A193.53 193.53 0 0 0 288 217.9V63.74h16a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16L80 .26a16 16 0 0 0-16 16V48a16 16 0 0 0 16 16h16v153.89C38.67 251.1 0 313 0 384a190.15 190.15 0 0 0 25.5 95.34 64.77 64.77 0 0 0 56 32.66h221a64.75 64.75 0 0 0 56-32.66 191 191 0 0 0-1.94-194l43.44-43.4 9.38 9.38a16 16 0 0 0 22.63 0l11.3-11.32a16 16 0 0 0 0-22.63zm-126.39 238A16.86 16.86 0 0 1 302.5 464h-221a16.86 16.86 0 0 1-14.42-8.64A143 143 0 0 1 48 384c0-93.78 79.85-129.09 96-138.44V64.19h96v181.37c16.15 9.35 96 44.66 96 138.44a143 143 0 0 1-19.08 71.36z"]]
};
exports.faBong = faBong;
var faBook = {
  prefix: 'fad',
  iconName: 'book',
  icon: [448, 512, [], "f02d", ["M96 448c-19.2 0-32-12.8-32-32s16-32 32-32h319.33c-1.93 16.24-1.76 48.38.53 64z", "M96 384h328a24 24 0 0 0 24-24V32a32 32 0 0 0-32-32H96A96 96 0 0 0 0 96v320a96 96 0 0 0 96 96h328a24 24 0 0 0 24-24v-16a24 24 0 0 0-24-24H96c-19.2 0-32-12.8-32-32s16-32 32-32zm32-250a6 6 0 0 1 6-6h212a6 6 0 0 1 6 6v20a6 6 0 0 1-6 6H134a6 6 0 0 1-6-6zm0 64a6 6 0 0 1 6-6h212a6 6 0 0 1 6 6v20a6 6 0 0 1-6 6H134a6 6 0 0 1-6-6z"]]
};
exports.faBook = faBook;
var faBookAlt = {
  prefix: 'fad',
  iconName: 'book-alt',
  icon: [448, 512, [], "f5d9", ["M96 448c-19.2 0-32-12.8-32-32s16-32 32-32h319.33c-1.93 16.24-1.76 48.38.53 64z", "M96 384h328a24 24 0 0 0 24-24V32a32 32 0 0 0-32-32H96A96 96 0 0 0 0 96v320a96 96 0 0 0 96 96h328a24 24 0 0 0 24-24v-16a24 24 0 0 0-24-24H96c-19.2 0-32-12.8-32-32s16-32 32-32z"]]
};
exports.faBookAlt = faBookAlt;
var faBookDead = {
  prefix: 'fad',
  iconName: 'book-dead',
  icon: [448, 512, [], "f6b7", ["M96 448c-19.2 0-32-12.8-32-32s16-32 32-32h319.33c-1.93 16.24-1.76 48.38.53 64z", "M208 136a16 16 0 1 0-16-16 16 16 0 0 0 16 16zM96 384h328a24 24 0 0 0 24-24V32a32 32 0 0 0-32-32H96A96 96 0 0 0 0 96v320a96 96 0 0 0 96 96h328a24 24 0 0 0 24-24v-16a24 24 0 0 0-24-24H96c-19.2 0-32-12.8-32-32s16-32 32-32zM240 56c44.2 0 80 28.7 80 64 0 20.9-12.7 39.2-32 50.9V184a16 16 0 0 1-16 16h-64a16 16 0 0 1-16-16v-13.1c-19.3-11.7-32-30-32-50.9 0-35.3 35.8-64 80-64zM124.8 223.3l6.3-14.7a8 8 0 0 1 10.5-4.2l98.3 42.1 98.4-42.1a8 8 0 0 1 10.5 4.2l6.3 14.7a8 8 0 0 1-4.2 10.5L280.6 264l70.3 30.1a8 8 0 0 1 4.2 10.5l-6.3 14.7a8 8 0 0 1-10.5 4.2L240 281.4l-98.3 42.2a8 8 0 0 1-10.5-4.2l-6.3-14.7a8 8 0 0 1 4.2-10.5l70.4-30.1-70.5-30.3a8 8 0 0 1-4.2-10.5zM272 136a16 16 0 1 0-16-16 16 16 0 0 0 16 16z"]]
};
exports.faBookDead = faBookDead;
var faBookHeart = {
  prefix: 'fad',
  iconName: 'book-heart',
  icon: [448, 512, [], "f499", ["M96 448c-19.2 0-32-12.8-32-32s16-32 32-32h319.33c-1.93 16.24-1.76 48.38.53 64z", "M96 384h328a24 24 0 0 0 24-24V32a32 32 0 0 0-32-32H96A96 96 0 0 0 0 96v320a96 96 0 0 0 96 96h328a24 24 0 0 0 24-24v-16a24 24 0 0 0-24-24H96c-19.2 0-32-12.8-32-32s16-32 32-32zm53.8-274.9c24-20 59.7-16.4 81.6 5.8l8.6 8.7 8.6-8.7c22-22.2 57.7-25.8 81.6-5.8a60.65 60.65 0 0 1 4.3 89.1l-84.7 85.6a13.94 13.94 0 0 1-19.8 0l-84.7-85.6a60.74 60.74 0 0 1 4.5-89.1z"]]
};
exports.faBookHeart = faBookHeart;
var faBookMedical = {
  prefix: 'fad',
  iconName: 'book-medical',
  icon: [448, 512, [], "f7e6", ["M96 448c-19.2 0-32-12.8-32-32s16-32 32-32h319.33c-1.93 16.24-1.76 48.38.53 64z", "M96 384h328a24 24 0 0 0 24-24V32a32 32 0 0 0-32-32H96A96 96 0 0 0 0 96v320a96 96 0 0 0 96 96h328a24 24 0 0 0 24-24v-16a24 24 0 0 0-24-24H96c-19.2 0-32-12.8-32-32s16-32 32-32zm48-216a8 8 0 0 1 8-8h56v-56a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v56h56a8 8 0 0 1 8 8v48a8 8 0 0 1-8 8h-56v56a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8v-56h-56a8 8 0 0 1-8-8z"]]
};
exports.faBookMedical = faBookMedical;
var faBookOpen = {
  prefix: 'fad',
  iconName: 'book-open',
  icon: [576, 512, [], "f518", ["M576 62.75v337.84c0 16.23-13.13 29.77-30 30.66-49.47 2.6-149.52 12.1-218.7 46.92-10.65 5.36-23.28-1.94-23.28-13.49V100.81a15.37 15.37 0 0 1 7.27-13.17c67.24-41.16 176.16-52.48 231-55.59C560.64 31 576 45 576 62.75z", "M264.73 87.64C197.5 46.48 88.58 35.17 33.78 32.05 15.36 31 0 45 0 62.75V400.6c0 16.24 13.13 29.78 30 30.66 49.49 2.6 149.59 12.11 218.77 46.95 10.62 5.35 23.21-1.94 23.21-13.46V100.63a15.05 15.05 0 0 0-7.25-12.99z"]]
};
exports.faBookOpen = faBookOpen;
var faBookReader = {
  prefix: 'fad',
  iconName: 'book-reader',
  icon: [512, 512, [], "f5da", ["M256 192a96 96 0 1 1 96-96 96 96 0 0 1-96 96z", "M233.59 241.1c-59.33-36.32-155.43-46.3-203.79-49C13.55 191.13 0 203.51 0 219.14v222.8c0 14.33 11.59 26.28 26.49 27.06 43.66 2.29 132 10.68 193 41.43 9.37 4.72 20.48-1.71 20.48-11.87v-246a13.31 13.31 0 0 0-6.38-11.46zm248.61-49c-48.35 2.74-144.46 12.73-203.78 49a13.56 13.56 0 0 0-6.42 11.63v245.79c0 10.19 11.14 16.63 20.54 11.9 61-30.72 149.32-39.11 193-41.4C500.42 468.24 512 456.29 512 442V219.14c0-15.63-13.55-28.01-29.8-27.09z"]]
};
exports.faBookReader = faBookReader;
var faBookSpells = {
  prefix: 'fad',
  iconName: 'book-spells',
  icon: [448, 512, [], "f6b8", ["M96 448c-19.2 0-32-12.8-32-32s16-32 32-32h319.33c-1.93 16.24-1.76 48.38.53 64z", "M96 384h328a24 24 0 0 0 24-24V32a32 32 0 0 0-32-32H96A96 96 0 0 0 0 96v320a96 96 0 0 0 96 96h328a24 24 0 0 0 24-24v-16a24 24 0 0 0-24-24H96c-19.2 0-32-12.8-32-32s16-32 32-32zm176-224l26.66 53.33L352 240l-53.34 26.67L272 320l-26.66-53.33L192 240l53.34-26.67zM160 96l16-32 16 32 32 16-32 16-16 32-16-32-32-16z"]]
};
exports.faBookSpells = faBookSpells;
var faBookUser = {
  prefix: 'fad',
  iconName: 'book-user',
  icon: [448, 512, [], "f7e7", ["M96 448c-19.2 0-32-12.8-32-32s16-32 32-32h319.33c-1.93 16.24-1.76 48.38.53 64z", "M96 384h328a24 24 0 0 0 24-24V32a32 32 0 0 0-32-32H96A96 96 0 0 0 0 96v320a96 96 0 0 0 96 96h328a24 24 0 0 0 24-24v-16a24 24 0 0 0-24-24H96c-19.2 0-32-12.8-32-32s16-32 32-32zM240 64a64 64 0 1 1-64 64 64 64 0 0 1 64-64zM128 281.6c0-31.81 30.09-57.6 67.2-57.6h5a103.22 103.22 0 0 0 79.7 0h5c37.11 0 67.2 25.79 67.2 57.6v19.2c0 10.61-10 19.2-22.4 19.2H150.4c-12.4 0-22.4-8.6-22.4-19.2z"]]
};
exports.faBookUser = faBookUser;
var faBookmark = {
  prefix: 'fad',
  iconName: 'bookmark',
  icon: [384, 512, [], "f02e", ["M384 48v464L192 400 0 512V48A48 48 0 0 1 48 0h32v326.11a16 16 0 0 0 23.16 14.31L192 296l88.84 44.42A16 16 0 0 0 304 326.11V0h32a48 48 0 0 1 48 48z", "M304 0v326.11a16 16 0 0 1-23.16 14.31L192 296l-88.84 44.42A16 16 0 0 1 80 326.11V0z"]]
};
exports.faBookmark = faBookmark;
var faBooks = {
  prefix: 'fad',
  iconName: 'books',
  icon: [576, 512, [], "f5db", ["M96 0H32A32 32 0 0 0 0 32v64h128V32A32 32 0 0 0 96 0zM0 384h128V128H0zm0 96a32 32 0 0 0 32 32h64a32 32 0 0 0 32-32v-64H0zm513.62-17.78L401.08 42.71l-60.26 16.14 112.35 418.8c.11.39.2.79.29 1.18l60.29-16.15c-.04-.15-.09-.3-.13-.46zM160 480a32 32 0 0 0 32 32h64a32 32 0 0 0 32-32v-64H160zM256 0h-64a32 32 0 0 0-32 32v64h124.79l-8-29.65a23.94 23.94 0 0 1 11.17-27V32A32 32 0 0 0 256 0zm-96 384h128V128H160z", "M0 416h128v-32H0zm0-288h128V96H0zm575.17 317.65L460.39 17.78a23.89 23.89 0 0 0-29.18-17h-.09L415.73 5a24 24 0 0 0-16.9 29.36l114.79 427.86a23.89 23.89 0 0 0 29.18 17h.09l15.38-4.22a24 24 0 0 0 16.9-29.35zM160 416h128v-32H160zM338.39 49.78a23.89 23.89 0 0 0-29.18-17h-.09L293.73 37a24 24 0 0 0-16.9 29.36l8 29.65H160v32h128V108l103.62 386.22a23.89 23.89 0 0 0 29.18 17h.09l15.38-4.22a24 24 0 0 0 16.9-29.33z"]]
};
exports.faBooks = faBooks;
var faBooksMedical = {
  prefix: 'fad',
  iconName: 'books-medical',
  icon: [640, 512, [], "f7e8", ["M160 0H96a32 32 0 0 0-32 32v76.33a160.25 160.25 0 0 1 128 0V32a32 32 0 0 0-32-32zm64 480a32 32 0 0 0 32 32h64a32 32 0 0 0 32-32v-64H224zm353.62-17.78L465.08 42.71l-60.26 16.14 112.35 418.8c.11.39.2.79.29 1.18l60.29-16.15c-.04-.15-.09-.3-.13-.46zM64 401.68V480a32 32 0 0 0 32 32h64a32 32 0 0 0 32-32v-78.32a160.33 160.33 0 0 1-128 0zm191-49.36A160.35 160.35 0 0 1 224 383v1h128V127.84l-126.7.16A160 160 0 0 1 255 352.32zM320 0h-64a32 32 0 0 0-32 32v64h124.79l-8-29.65a23.94 23.94 0 0 1 11.17-27V32A32 32 0 0 0 320 0z", "M128 127a128 128 0 1 0 128 128 128 128 0 0 0-128-128zm64 144a5.33 5.33 0 0 1-5.33 5.33h-37.34v37.34A5.33 5.33 0 0 1 144 319h-32a5.33 5.33 0 0 1-5.33-5.33v-37.33H69.33A5.33 5.33 0 0 1 64 271v-32a5.33 5.33 0 0 1 5.33-5.33h37.34v-37.33A5.33 5.33 0 0 1 112 191h32a5.33 5.33 0 0 1 5.33 5.33v37.34h37.34A5.33 5.33 0 0 1 192 239zM402.39 49.78a23.89 23.89 0 0 0-29.18-17h-.09L357.73 37a24 24 0 0 0-16.9 29.36l8 29.65H224v32h128V108l103.62 386.22a23.89 23.89 0 0 0 29.18 17h.09l15.38-4.22a24 24 0 0 0 16.9-29.33zm236.78 395.87L524.39 17.78a23.89 23.89 0 0 0-29.18-17h-.09L479.73 5a24 24 0 0 0-16.9 29.36l114.79 427.86a23.89 23.89 0 0 0 29.18 17h.09l15.38-4.22a24 24 0 0 0 16.9-29.35zM224 416h128v-32H224z"]]
};
exports.faBooksMedical = faBooksMedical;
var faBoombox = {
  prefix: 'fad',
  iconName: 'boombox',
  icon: [640, 512, [], "f8a5", ["M592 160H48a48 48 0 0 0-48 48v256a48 48 0 0 0 48 48h544a48 48 0 0 0 48-48V208a48 48 0 0 0-48-48zM176 448a112 112 0 1 1 112-112 112.12 112.12 0 0 1-112 112zm288 0a112 112 0 1 1 112-112 112.12 112.12 0 0 1-112 112z", "M552 0H88a56.07 56.07 0 0 0-56 56v106.94A47.5 47.5 0 0 1 48 160h32V56a8 8 0 0 1 8-8h464a8 8 0 0 1 8 8v104h32a47.5 47.5 0 0 1 16 2.94V56a56.06 56.06 0 0 0-56-56zM256 144a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v16h64zm192 0a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v16h64zm-96 0a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v16h64zm112 80a112 112 0 1 0 112 112 112.12 112.12 0 0 0-112-112zm0 176a64 64 0 1 1 64-64 64.07 64.07 0 0 1-64 64zM176 224a112 112 0 1 0 112 112 112.12 112.12 0 0 0-112-112zm0 176a64 64 0 1 1 64-64 64.07 64.07 0 0 1-64 64z"]]
};
exports.faBoombox = faBoombox;
var faBoot = {
  prefix: 'fad',
  iconName: 'boot',
  icon: [512, 512, [], "f782", ["M0 448v32l32 32h64l32-32 32 32h64l32-32 32 32h64l32-32 32 32h64l32-32v-32zM352 80V16a16 16 0 0 0-16-16H16A16 16 0 0 0 0 16v80h336a16 16 0 0 0 16-16z", "M439.3 285.8L320 256h-56a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h56v-32h-56a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h56v-32H0v288h512v-37a96.07 96.07 0 0 0-72.7-93.2z"]]
};
exports.faBoot = faBoot;
var faBoothCurtain = {
  prefix: 'fad',
  iconName: 'booth-curtain',
  icon: [512, 512, [], "f734", ["M480 0h-32v496a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V32a32 32 0 0 0-32-32zM0 32v464a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V64h32V0H32A32 32 0 0 0 0 32z", "M416 0v400a48 48 0 0 1-84.7 31 15.07 15.07 0 0 0-22.6 0 48.11 48.11 0 0 1-73.4 0 15.07 15.07 0 0 0-22.6 0 48 48 0 0 1-84.7-31V0z"]]
};
exports.faBoothCurtain = faBoothCurtain;
var faBorderAll = {
  prefix: 'fad',
  iconName: 'border-all',
  icon: [448, 512, [], "f84c", ["M384 288H256v128h-64V288H64v-64h128V96h64v128h128z", "M416 32H32A32 32 0 0 0 0 64v384a32 32 0 0 0 32 32h384a32 32 0 0 0 32-32V64a32 32 0 0 0-32-32zm-32 384H64V96h320z"]]
};
exports.faBorderAll = faBorderAll;
var faBorderBottom = {
  prefix: 'fad',
  iconName: 'border-bottom',
  icon: [448, 512, [], "f84d", ["M208 288h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm96 0h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm128-64h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-320 64h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm320 32h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-192h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM208 384h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm0-192h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm0-96h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm96 0h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm128-64h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM16 288h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm0 96h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm0-192h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm0-96h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16zm96 0h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16z", "M432 416H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z"]]
};
exports.faBorderBottom = faBorderBottom;
var faBorderCenterH = {
  prefix: 'fad',
  iconName: 'border-center-h',
  icon: [448, 512, [], "f89c", ["M208 480h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm96 0h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm128-64h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-320 64h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm320-160h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-192h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM208 384h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm0-192h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm0-96h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm96 0h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm128-64h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM16 480h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm0-96h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm0-192h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm0-96h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16zm96 0h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16z", "M448 240v32a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h416a16 16 0 0 1 16 16z"]]
};
exports.faBorderCenterH = faBorderCenterH;
var faBorderCenterV = {
  prefix: 'fad',
  iconName: 'border-center-v',
  icon: [448, 512, [], "f89d", ["M0 240v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H16a16 16 0 0 0-16 16zm0 96v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H16a16 16 0 0 0-16 16zm64 128v-32a16 16 0 0 0-16-16H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16zM0 144v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H16a16 16 0 0 0-16 16zm160 320v-32a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16zm192 0v-32a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16zM96 240v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16zm192 0v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16zm96 0v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16zm0 96v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16zm64 128v-32a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16zM0 48v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16H16A16 16 0 0 0 0 48zm96 0v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16zm192 0v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16zm96 0v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16zm0 96v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16z", "M256 48v416a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V48a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16z"]]
};
exports.faBorderCenterV = faBorderCenterV;
var faBorderInner = {
  prefix: 'fad',
  iconName: 'border-inner',
  icon: [448, 512, [], "f84e", ["M48 416H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 192h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm288-96h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zM48 320H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm64-224h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm-96 0h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16zm320 320h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm96-288h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-96h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM144 416h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm288-96h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0 96h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z", "M432 224H256V48a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v176H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h176v176a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V288h176a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z"]]
};
exports.faBorderInner = faBorderInner;
var faBorderLeft = {
  prefix: 'fad',
  iconName: 'border-left',
  icon: [448, 512, [], "f84f", ["M240 224h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm96 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm96 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-288 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm96 192h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm96 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm96 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-96h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-192h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM240 320h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-192h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-96 288h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm96-384h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zm96 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zm96 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zm-288 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z", "M48 32H16A16 16 0 0 0 0 48v416a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z"]]
};
exports.faBorderLeft = faBorderLeft;
var faBorderNone = {
  prefix: 'fad',
  iconName: 'border-none',
  icon: [448, 512, [], "f850", ["M240 224h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm96 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm96 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-288 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm96 192h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm96 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm96 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-96h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-192h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM240 320h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-192h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-96 288h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm96-384h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zm96 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zm96 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM48 224H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0 192H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-96H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-192H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-96H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zm96 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z", ""]]
};
exports.faBorderNone = faBorderNone;
var faBorderOuter = {
  prefix: 'fad',
  iconName: 'border-outer',
  icon: [448, 512, [], "f851", ["M208 288h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm96 0h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm-192 0h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm96 96h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm0-192h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16z", "M416 32H32A32 32 0 0 0 0 64v384a32 32 0 0 0 32 32h384a32 32 0 0 0 32-32V64a32 32 0 0 0-32-32zm-32 384H64V96h320z"]]
};
exports.faBorderOuter = faBorderOuter;
var faBorderRight = {
  prefix: 'fad',
  iconName: 'border-right',
  icon: [448, 512, [], "f852", ["M240 224h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm96 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-192 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm96 192h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm96 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-96-96h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-192h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-96 288h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm96-384h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zm96 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM48 224H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0 192H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-96H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-192H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-96H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zm96 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z", "M432 32h-32a16 16 0 0 0-16 16v416a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z"]]
};
exports.faBorderRight = faBorderRight;
var faBorderStyle = {
  prefix: 'fad',
  iconName: 'border-style',
  icon: [448, 512, [], "f853", ["M240 416h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-96 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm192 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm96-192h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0 96h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0 96h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-288h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z", "M432 32H32A32 32 0 0 0 0 64v400a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V96h368a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z"]]
};
exports.faBorderStyle = faBorderStyle;
var faBorderStyleAlt = {
  prefix: 'fad',
  iconName: 'border-style-alt',
  icon: [448, 512, [], "f854", ["M208 96h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm96 0h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm-192 0h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zM16 288h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm0-96h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm0-96h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16zm0 288h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16z", "M432 32h-32a16 16 0 0 0-16 16v368H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h400a32 32 0 0 0 32-32V48a16 16 0 0 0-16-16z"]]
};
exports.faBorderStyleAlt = faBorderStyleAlt;
var faBorderTop = {
  prefix: 'fad',
  iconName: 'border-top',
  icon: [448, 512, [], "f855", ["M240 224h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm96 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm96 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-288 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm96 192h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm96 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm96 0h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-96h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-192h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM240 320h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-192h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-96 288h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM48 224H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0 192H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-96H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-192H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z", "M432 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z"]]
};
exports.faBorderTop = faBorderTop;
var faBowArrow = {
  prefix: 'fad',
  iconName: 'bow-arrow',
  icon: [512, 512, [], "f6b9", ["M282.33 150.47l46.61-46.61a255.3 255.3 0 0 0-275.1.73l-3.9-3.9a16 16 0 0 0-22.63 0L4.69 123.31a16 16 0 0 0 0 22.63L145.78 287 191 241.78l-90.54-90.58a192.49 192.49 0 0 1 181.87-.73zm125.08 307a255.3 255.3 0 0 0 .73-275.1L361.53 229a192.51 192.51 0 0 1-.73 181.88l-90.58-90.58L225 365.56l141.72 141.76a16 16 0 0 0 22.63 0L412 484.69a16 16 0 0 0 0-22.63z", "M511.71 18.78L486 147.37a15.7 15.7 0 0 1-26.49 8L425 120.92 174.39 371.56l16.61 49.7a20.56 20.56 0 0 1-5 21L122.32 506a20.56 20.56 0 0 1-34-8l-18.59-55.72-55.66-18.55a20.56 20.56 0 0 1-8-34L69.7 326a20.58 20.58 0 0 1 21-5l49.7 16.57L391.08 87l-34.47-34.48a15.7 15.7 0 0 1 8-26.49L493.22.31a15.72 15.72 0 0 1 18.49 18.47z"]]
};
exports.faBowArrow = faBowArrow;
var faBowlingBall = {
  prefix: 'fad',
  iconName: 'bowling-ball',
  icon: [496, 512, [], "f436", ["M232,240a32,32,0,1,1,32-32A32,32,0,0,1,232,240ZM216,64a32,32,0,1,0,32,32A32,32,0,0,0,216,64ZM120,192a32,32,0,1,0-32-32A32,32,0,0,0,120,192Z", "M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8ZM120,192a32,32,0,1,1,32-32A32,32,0,0,1,120,192Zm64-96a32,32,0,1,1,32,32A32,32,0,0,1,184,96Zm48,144a32,32,0,1,1,32-32A32,32,0,0,1,232,240Z"]]
};
exports.faBowlingBall = faBowlingBall;
var faBowlingPins = {
  prefix: 'fad',
  iconName: 'bowling-pins',
  icon: [448, 512, [], "f437", ["M133.17 160c.8-35.8 20.9-59.1 18.8-96C150.07 29.8 129.27.1 96 0 62.6.1 41.9 29.8 40 64c-2.1 36.9 18 60.2 18.8 96zm181.6 0h74.4c.8-35.7 20.9-59.1 18.8-96-1.9-34.3-22.6-63.9-56-64-33.3.1-54.1 29.8-56 64-2.1 36.9 18 60.2 18.8 96zm128.9 160c-10.8-48.1-39.9-82.8-50.7-128h-81.9c-10.8 45.2-39.9 79.9-50.7 128-11.5 51.1.6 140.5 26.7 192h130c26-51.5 38-141 26.6-192zm-306.8-128h-81.8c-10.8 45.2-40 79.9-50.7 128-11.5 51.1.5 140.5 26.6 192H161c26.1-51.5 38.1-140.9 26.7-192-10.83-48.1-40.03-82.8-50.83-128z", "M59 160l-4 32h82l-4-32zm330 0h-74l-4 32h82z"]]
};
exports.faBowlingPins = faBowlingPins;
var faBox = {
  prefix: 'fad',
  iconName: 'box',
  icon: [512, 512, [], "f466", ["M512 224v240a48 48 0 0 1-48 48H48a48 48 0 0 1-48-48V224z", "M53.1 32.8L2.5 184.6c-.8 2.4-.8 4.9-1.2 7.4H240V0H98.6a47.87 47.87 0 0 0-45.5 32.8zm456.4 151.8L458.9 32.8A47.87 47.87 0 0 0 413.4 0H272v192h238.7c-.4-2.5-.4-5-1.2-7.4z"]]
};
exports.faBox = faBox;
var faBoxAlt = {
  prefix: 'fad',
  iconName: 'box-alt',
  icon: [448, 512, [], "f49a", ["M256 32l32 128v112a16 16 0 0 1-16 16h-96a16 16 0 0 1-16-16V160l32-128z", "M446.7 160c.4-.5.5-.7.9-1.2L391.3 53.9A32 32 0 0 0 360.9 32H256l32 128zM160 160l32-128H87.1a32 32 0 0 0-30.4 21.9L.4 158.8c.4.5.5.7.9 1.2zm128 32v80a16 16 0 0 1-16 16h-96a16 16 0 0 1-16-16v-80H0v256a32 32 0 0 0 32 32h384a32 32 0 0 0 32-32V192z"]]
};
exports.faBoxAlt = faBoxAlt;
var faBoxBallot = {
  prefix: 'fad',
  iconName: 'box-ballot',
  icon: [576, 512, [], "f735", ["M144 192l-.5-175.8A16.2 16.2 0 0 1 159.7 0l255.8.6a16 16 0 0 1 16 16L432 192z", "M0 320v160a32 32 0 0 0 32 32h512a32 32 0 0 0 32-32V320zm574.7-32a8.34 8.34 0 0 0 .8-1.2L520 148.2a32.07 32.07 0 0 0-29.7-20.1h-26.6l.2 64 16 32H95.5l16-32h.5l-.2-64H85.7A32.07 32.07 0 0 0 56 148.2L.4 286.8c.3.5.5.7.8 1.2z"]]
};
exports.faBoxBallot = faBoxBallot;
var faBoxCheck = {
  prefix: 'fad',
  iconName: 'box-check',
  icon: [640, 512, [], "f467", ["M448 128c-106 0-192 86-192 192s86 192 192 192 192-86 192-192-86-192-192-192zm114.1 147.8l-131 130a11 11 0 0 1-15.6-.1l-75.7-76.3a11 11 0 0 1 .1-15.6l26-25.8a11 11 0 0 1 15.6.1l42.1 42.5 97.2-96.4a11 11 0 0 1 15.6.1l25.8 26a11 11 0 0 1-.1 15.5z", "M240 0H98.6a47.87 47.87 0 0 0-45.5 32.8L2.5 184.6c-.8 2.4-.8 4.9-1.2 7.4H240zm208 80a221.93 221.93 0 0 1 27.2 1.7l-16.3-48.8A47.83 47.83 0 0 0 413.4 0H272v157.4C315.9 109.9 378.4 80 448 80zM208 320a238.53 238.53 0 0 1 20.2-96H0v240a48 48 0 0 0 48 48h256.6C246.1 468.2 208 398.6 208 320zm354.2-59.7l-25.8-26a11 11 0 0 0-15.6-.1l-97.2 96.4-42.1-42.5a11 11 0 0 0-15.6-.1l-26 25.8a11 11 0 0 0-.1 15.6l75.7 76.3a11 11 0 0 0 15.6.1l131-130a11 11 0 0 0 .1-15.5z"]]
};
exports.faBoxCheck = faBoxCheck;
var faBoxFragile = {
  prefix: 'fad',
  iconName: 'box-fragile',
  icon: [448, 512, [], "f49b", ["M416 32H32A32 32 0 0 0 0 64v384a32 32 0 0 0 32 32h384a32 32 0 0 0 32-32V64a32 32 0 0 0-32-32zm-96 160c0 47.5-34.6 86.7-80 94.4V384h40a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H168a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h40v-97.6a95.78 95.78 0 0 1-80-94.4v-80a16 16 0 0 1 16-16h160a16 16 0 0 1 16 16z", "M320 192c0 47.5-34.6 86.7-80 94.4V384h40a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H168a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h40v-97.6a95.78 95.78 0 0 1-80-94.4v-80a16 16 0 0 1 16-16h60.4l24.5 27.6-64 32 91 68.4-37-59.6 64-32L260.1 96H304a16 16 0 0 1 16 16z"]]
};
exports.faBoxFragile = faBoxFragile;
var faBoxFull = {
  prefix: 'fad',
  iconName: 'box-full',
  icon: [640, 512, [], "f49c", ["M439 382.1L576 343v82a32.07 32.07 0 0 1-24.2 31l-216.4 54.1a65 65 0 0 1-31 0L88.24 456A31.9 31.9 0 0 1 64 425v-82l137.1 39.2c28.6 8.2 48.3-10.9 54.7-21.6L320 254l64.3 106.6c6.54 10.8 26.24 29.7 54.7 21.5z", "M194.24 143.7A63.28 63.28 0 0 1 192 128a64 64 0 1 1 128 0 62.84 62.84 0 0 1-8.2 30.7l8.2 1L475.34 140 511 41.7a16 16 0 0 0-9.6-20.5L445.94 1a16 16 0 0 0-20.5 9.6L383.74 125C382 55.7 325.74 0 256 0a128 128 0 0 0-128 128c0 2.5.6 4.9.7 7.4zm444.1 128.1L586.84 169a16.33 16.33 0 0 0-16.7-8.9L320 192l91.7 152.1a16.44 16.44 0 0 0 18.5 7.3l197.9-56.5a16.47 16.47 0 0 0 10.24-23.1zM53.24 169L1.74 271.8a16.3 16.3 0 0 0 10.1 23l197.9 56.5a16.44 16.44 0 0 0 18.5-7.3L320 192 69.84 160.1a16.34 16.34 0 0 0-16.6 8.9z"]]
};
exports.faBoxFull = faBoxFull;
var faBoxHeart = {
  prefix: 'fad',
  iconName: 'box-heart',
  icon: [448, 512, [], "f49d", ["M0 192v256a32 32 0 0 0 32 32h384a32 32 0 0 0 32-32V192zm305.1 149.2l-72.6 71.4a12.2 12.2 0 0 1-17 0l-72.6-71.4a49.59 49.59 0 0 1 3.7-74.2c20.5-16.7 51.1-13.7 70 4.8l7.4 7.3 7.4-7.3c18.8-18.5 49.4-21.5 70-4.8a49.66 49.66 0 0 1 3.7 74.2z", "M301.4 267c-20.6-16.7-51.2-13.7-70 4.8l-7.4 7.3-7.4-7.3c-18.9-18.5-49.5-21.5-70-4.8a49.59 49.59 0 0 0-3.7 74.2l72.6 71.4a12.2 12.2 0 0 0 17 0l72.6-71.4a49.66 49.66 0 0 0-3.7-74.2zm89.9-213.1A32 32 0 0 0 360.9 32H240v128h206.7c.4-.5.5-.7.9-1.2zM208 32H87.1a32 32 0 0 0-30.4 21.9L.4 158.8c.4.5.5.7.9 1.2H208z"]]
};
exports.faBoxHeart = faBoxHeart;
var faBoxOpen = {
  prefix: 'fad',
  iconName: 'box-open',
  icon: [640, 512, [], "f49e", ["M439 254.14L576 215v178a32.07 32.07 0 0 1-24.2 31l-216.4 54.1a65 65 0 0 1-31 0L88.24 424A31.9 31.9 0 0 1 64 393V215l137 39.2a46 46 0 0 0 13.3 1.9 48.64 48.64 0 0 0 41.5-23.5L320 126l64.3 106.6a48.47 48.47 0 0 0 41.4 23.4 46 46 0 0 0 13.3-1.86z", "M638.34 143.84L586.84 41a16.33 16.33 0 0 0-16.7-8.9L320 64l91.7 152.1a16.44 16.44 0 0 0 18.5 7.3l197.9-56.5a16.47 16.47 0 0 0 10.24-23.06zM53.24 41L1.74 143.84a16.3 16.3 0 0 0 10.1 23l197.9 56.5a16.44 16.44 0 0 0 18.5-7.3L320 64 69.84 32.14A16.34 16.34 0 0 0 53.24 41z"]]
};
exports.faBoxOpen = faBoxOpen;
var faBoxUp = {
  prefix: 'fad',
  iconName: 'box-up',
  icon: [448, 512, [], "f49f", ["M416 32H32A32 32 0 0 0 0 64v384a32 32 0 0 0 32 32h384a32 32 0 0 0 32-32V64a32 32 0 0 0-32-32zM57.8 179l64-80a8.28 8.28 0 0 1 12.5 0l64 80a8 8 0 0 1-6.2 13h-32v112a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V192H64a8 8 0 0 1-6.2-13zM384 408a8 8 0 0 1-8 8H72a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h304a8 8 0 0 1 8 8zm0-216h-32v112a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V192h-32a8 8 0 0 1-6.2-13l64-80a8.28 8.28 0 0 1 12.5 0l64 80a8.05 8.05 0 0 1-6.3 13z", "M134.3 99a8.28 8.28 0 0 0-12.5 0l-64 80a8 8 0 0 0 6.2 13h32.1v112a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V192h32a8 8 0 0 0 6.2-13zm256 80l-64-80a8.28 8.28 0 0 0-12.5 0l-64 80a8 8 0 0 0 6.2 13h32v112a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V192h32a8.05 8.05 0 0 0 6.3-13z"]]
};
exports.faBoxUp = faBoxUp;
var faBoxUsd = {
  prefix: 'fad',
  iconName: 'box-usd',
  icon: [448, 512, [], "f4a0", ["M0 192v256a32 32 0 0 0 32 32h384a32 32 0 0 0 32-32V192zm240 223.9V432a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8v-16.3a57.66 57.66 0 0 1-31.4-11.3 8 8 0 0 1-.6-12.1l11.8-11.2a8.13 8.13 0 0 1 10.1-.7 24.4 24.4 0 0 0 12.8 3.7h28.1c6.5 0 11.8-5.9 11.8-13.2 0-6-3.6-11.2-8.8-12.7l-45-13.5c-18.6-5.6-31.6-23.4-31.6-43.4 0-24.5 19-44.4 42.7-45.1V240a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16.3a57.66 57.66 0 0 1 31.4 11.3 8 8 0 0 1 .6 12.1L260.2 291a8.13 8.13 0 0 1-10.1.7 24.4 24.4 0 0 0-12.8-3.7h-28.1c-6.5 0-11.8 5.9-11.8 13.2 0 6 3.6 11.2 8.8 12.7l45 13.5c18.6 5.6 31.6 23.4 31.6 43.4-.1 24.5-19.2 44.5-42.8 45.1z", "M208 32H87.1a32 32 0 0 0-30.4 21.9L.4 158.8c.4.5.5.7.9 1.2H208zm43.2 295.4l-45-13.5c-5.2-1.5-8.8-6.7-8.8-12.7 0-7.3 5.3-13.2 11.8-13.2h28.1a24.4 24.4 0 0 1 12.8 3.7 8.13 8.13 0 0 0 10.1-.7l11.7-11.3a8 8 0 0 0-.6-12.1 57.66 57.66 0 0 0-31.4-11.3V240a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v16.2c-23.7.7-42.7 20.6-42.7 45.1 0 20 13 37.8 31.6 43.4l45 13.5c5.2 1.5 8.8 6.7 8.8 12.7 0 7.3-5.3 13.2-11.8 13.2h-28.1a24.4 24.4 0 0 1-12.8-3.7 8.13 8.13 0 0 0-10.1.7L176 392.3a8 8 0 0 0 .6 12.1 57.66 57.66 0 0 0 31.4 11.3V432a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-16.1c23.6-.6 42.7-20.6 42.8-45.1 0-20-13-37.8-31.6-43.4zM391.3 53.9A32 32 0 0 0 360.9 32H240v128h206.7c.4-.5.5-.7.9-1.2z"]]
};
exports.faBoxUsd = faBoxUsd;
var faBoxes = {
  prefix: 'fad',
  iconName: 'boxes',
  icon: [576, 512, [], "f468", ["M480 288v96l-32-21.3-32 21.3v-96zM320 0v96l-32-21.3L256 96V0zM160 288v96l-32-21.3L96 384v-96z", "M560 288h-80v96l-32-21.3-32 21.3v-96h-80a16 16 0 0 0-16 16v192a16 16 0 0 0 16 16h224a16 16 0 0 0 16-16V304a16 16 0 0 0-16-16zm-384-64h224a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16h-80v96l-32-21.3L256 96V0h-80a16 16 0 0 0-16 16v192a16 16 0 0 0 16 16zm64 64h-80v96l-32-21.3L96 384v-96H16a16 16 0 0 0-16 16v192a16 16 0 0 0 16 16h224a16 16 0 0 0 16-16V304a16 16 0 0 0-16-16z"]]
};
exports.faBoxes = faBoxes;
var faBoxesAlt = {
  prefix: 'fad',
  iconName: 'boxes-alt',
  icon: [576, 512, [], "f4a1", ["M320 0v88a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8V0zm160 288v88a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8v-88zm-320 0v88a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8v-88z", "M176 224h224a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16h-80v88a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8V0h-80a16 16 0 0 0-16 16v192a16 16 0 0 0 16 16zm384 64h-80v88a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8v-88h-80a16 16 0 0 0-16 16v192a16 16 0 0 0 16 16h224a16 16 0 0 0 16-16V304a16 16 0 0 0-16-16zm-320 0h-80v88a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8v-88H16a16 16 0 0 0-16 16v192a16 16 0 0 0 16 16h224a16 16 0 0 0 16-16V304a16 16 0 0 0-16-16z"]]
};
exports.faBoxesAlt = faBoxesAlt;
var faBoxingGlove = {
  prefix: 'fad',
  iconName: 'boxing-glove',
  icon: [448, 512, [], "f438", ["M352 400v80a32 32 0 0 1-32 32H64a32 32 0 0 1-32-32v-80h133.3l-40.5 30.4a8.09 8.09 0 0 0-1.6 11.2l9.6 12.8A8 8 0 0 0 144 456l48-36 48 36a8 8 0 0 0 11.2-1.6l9.6-12.8a8.08 8.08 0 0 0-1.6-11.2L218.7 400z", "M15.8 286.7A1161.36 1161.36 0 0 1 0 95.9C0 43.1 43.3 0 96 0h192a96 96 0 0 1 96 96v32.2c-29.1 0-67.6-5.6-96 32.5v-.5H141.2a92.8 92.8 0 0 1-60.5-22.3 8 8 0 0 0-10.9.4l-11.3 11.3a8 8 0 0 0 .4 11.7 124.45 124.45 0 0 0 82.3 30.8h132.5a84.28 84.28 0 0 0-1.6 16 80.12 80.12 0 0 0 71.2 79.5 8 8 0 0 0 8.8-8v-16a8.17 8.17 0 0 0-6.9-8.1 47.9 47.9 0 0 1-41.1-48.4c.5-26.3 22.5-47.1 48.8-47.1H384a64.06 64.06 0 0 1 64 64c0 13.8 2.8 61.1-37.5 101.5L352 384v16H218.7l40.5-30.4a8.09 8.09 0 0 0 1.6-11.2l-9.6-12.8A8 8 0 0 0 240 344l-48 36-48-36a8 8 0 0 0-11.2 1.6l-9.6 12.8a8 8 0 0 0 1.6 11.2l40.5 30.4H32v-16z"]]
};
exports.faBoxingGlove = faBoxingGlove;
var faBrackets = {
  prefix: 'fad',
  iconName: 'brackets',
  icon: [448, 512, [], "f7e9", ["M448 64v384a32 32 0 0 1-32 32H304a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h80V96h-80a16 16 0 0 1-16-16V48a16 16 0 0 1 16-16h112a32 32 0 0 1 32 32z", "M144 32H32A32 32 0 0 0 0 64v384a32 32 0 0 0 32 32h112a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H64V96h80a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z"]]
};
exports.faBrackets = faBrackets;
var faBracketsCurly = {
  prefix: 'fad',
  iconName: 'brackets-curly',
  icon: [576, 512, [], "f7ea", ["M566.64 233.37a32 32 0 0 1 0 45.25l-45.25 45.25a32 32 0 0 0-9.39 22.64V384a96 96 0 0 1-96 96h-48a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h48a32 32 0 0 0 32-32v-37.48a96 96 0 0 1 28.13-67.89L498.76 256l-22.62-22.62A96 96 0 0 1 448 165.47V128a32 32 0 0 0-32-32h-48a16 16 0 0 1-16-16V48a16 16 0 0 1 16-16h48a96 96 0 0 1 96 96v37.48a32 32 0 0 0 9.38 22.65l45.25 45.24z", "M208 32h-48a96 96 0 0 0-96 96v37.48a32.12 32.12 0 0 1-9.38 22.65L9.38 233.37a32 32 0 0 0 0 45.25l45.25 45.25A32.05 32.05 0 0 1 64 346.51V384a96 96 0 0 0 96 96h48a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-48a32 32 0 0 1-32-32v-37.48a96 96 0 0 0-28.13-67.89L77.26 256l22.63-22.63A96 96 0 0 0 128 165.48V128a32 32 0 0 1 32-32h48a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z"]]
};
exports.faBracketsCurly = faBracketsCurly;
var faBraille = {
  prefix: 'fad',
  iconName: 'braille',
  icon: [640, 512, [], "f2a1", ["M64 400a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm160-160a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm0 160a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm224-160a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm0 160a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm160-160a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm0 160a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm0-256a32 32 0 1 0-32-32 32 32 0 0 0 32 32z", "M64 208a64 64 0 1 0 64 64 64 64 0 0 0-64-64zm0-160a64 64 0 1 0 64 64 64 64 0 0 0-64-64zm160 0a64 64 0 1 0 64 64 64 64 0 0 0-64-64zm224 0a64 64 0 1 0 64 64 64 64 0 0 0-64-64z"]]
};
exports.faBraille = faBraille;
var faBrain = {
  prefix: 'fad',
  iconName: 'brain',
  icon: [576, 512, [], "f5dc", ["M272 439.93a71.81 71.81 0 0 1-140 22.78 70.91 70.91 0 0 1-84-70.77 72.51 72.51 0 0 1 1.42-14.1A80 80 0 0 1 0 304c0-29.66 16.34-55.26 40.34-69.07A79.05 79.05 0 0 1 32 200a80 80 0 0 1 49.66-74A63.6 63.6 0 0 1 144 48c.75 0 1.45.2 2.2.22A63.87 63.87 0 0 1 272 64zM576 304c0-29.66-16.34-55.26-40.34-69.07A79.05 79.05 0 0 0 544 200a80 80 0 0 0-49.66-74A63.6 63.6 0 0 0 432 48c-.75 0-1.45.2-2.2.22A63.87 63.87 0 0 0 304 64v375.9a71.81 71.81 0 0 0 140 22.78 71.73 71.73 0 0 0 82.61-84.87A80 80 0 0 0 576 304z", "M304 439.93a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8V72a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8z"]]
};
exports.faBrain = faBrain;
var faBreadLoaf = {
  prefix: 'fad',
  iconName: 'bread-loaf',
  icon: [640, 512, [], "f7eb", ["M420 256h-4v192a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32V256h-4c-33.14 0-60-28.65-60-64C0 103.63 107.45 32 240 32s240 71.63 240 160c0 35.35-26.86 64-60 64z", "M640 192c0 35.35-26.86 64-60 64h-4v192a32 32 0 0 1-32 32H439.1a63.25 63.25 0 0 0 8.9-32V283.46c37.08-12.4 64-48.71 64-91.46 0-67.38-46.8-125.61-119.19-159.76 2.41 0 4.76-.24 7.19-.24 132.55 0 240 71.63 240 160z"]]
};
exports.faBreadLoaf = faBreadLoaf;
var faBreadSlice = {
  prefix: 'fad',
  iconName: 'bread-slice',
  icon: [576, 512, [], "f7ec", ["M288 0C108 0 0 93.4 0 169.14 0 199.44 24.24 224 64 224v256c0 17.67 16.12 32 36 32h376c19.88 0 36-14.33 36-32V224c39.76 0 64-24.56 64-54.86C576 93.4 468 0 288 0zM152 448a24 24 0 1 1 24-24 24 24 0 0 1-24 24zm0-96a24 24 0 1 1 24-24 24 24 0 0 1-24 24zm96 96a24 24 0 1 1 24-24 24 24 0 0 1-24 24z", "M152 400a24 24 0 1 0 24 24 24 24 0 0 0-24-24zm0-96a24 24 0 1 0 24 24 24 24 0 0 0-24-24zm96 96a24 24 0 1 0 24 24 24 24 0 0 0-24-24z"]]
};
exports.faBreadSlice = faBreadSlice;
var faBriefcase = {
  prefix: 'fad',
  iconName: 'briefcase',
  icon: [512, 512, [], "f0b1", ["M320 288h192v144c0 25.6-22.4 48-48 48H48c-25.6 0-48-22.4-48-48V288h192v48a16 16 0 0 0 16 16h96a16 16 0 0 0 16-16z", "M464 128h-80V80c0-25.6-22.4-48-48-48H176c-25.6 0-48 22.4-48 48v48H48c-25.6 0-48 22.4-48 48v80h512v-80c0-25.6-22.4-48-48-48zm-144 0H192V96h128z"]]
};
exports.faBriefcase = faBriefcase;
var faBriefcaseMedical = {
  prefix: 'fad',
  iconName: 'briefcase-medical',
  icon: [512, 512, [], "f469", ["M192 128h-64V80a48 48 0 0 1 48-48h160a48 48 0 0 1 48 48v48h-64V96H192z", "M464 128H48a48 48 0 0 0-48 48v288a48 48 0 0 0 48 48h416a48 48 0 0 0 48-48V176a48 48 0 0 0-48-48zM352 344a8 8 0 0 1-8 8h-56v56a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8v-56h-56a8 8 0 0 1-8-8v-48a8 8 0 0 1 8-8h56v-56a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v56h56a8 8 0 0 1 8 8z"]]
};
exports.faBriefcaseMedical = faBriefcaseMedical;
var faBringForward = {
  prefix: 'fad',
  iconName: 'bring-forward',
  icon: [512, 512, [], "f856", ["M512 208v256a48 48 0 0 1-48 48H208a48 48 0 0 1-48-48V352h64v96h224V224h-96v-64h112a48 48 0 0 1 48 48z", "M304 352H48a48 48 0 0 1-48-48V48A48 48 0 0 1 48 0h256a48 48 0 0 1 48 48v256a48 48 0 0 1-48 48z"]]
};
exports.faBringForward = faBringForward;
var faBringFront = {
  prefix: 'fad',
  iconName: 'bring-front',
  icon: [640, 512, [], "f857", ["M224 0H32A32 32 0 0 0 0 32v192a32 32 0 0 0 32 32h128v-64H64V64h128v34.74A47.92 47.92 0 0 1 208 96h48V32a32 32 0 0 0-32-32zm384 256H480v64h96v128H448v-34.74a47.92 47.92 0 0 1-16 2.74h-48v64a32 32 0 0 0 32 32h192a32 32 0 0 0 32-32V288a32 32 0 0 0-32-32z", "M480 144v224a48 48 0 0 1-48 48H208a48 48 0 0 1-48-48V144a48 48 0 0 1 48-48h224a48 48 0 0 1 48 48z"]]
};
exports.faBringFront = faBringFront;
var faBroadcastTower = {
  prefix: 'fad',
  iconName: 'broadcast-tower',
  icon: [640, 512, [], "f519", ["M184.67 64h-33.73a16 16 0 0 0-15.41 11.23 188.52 188.52 0 0 0 0 105.53A16 16 0 0 0 150.94 192h33.73a15.76 15.76 0 0 0 14.86-21.18 125.2 125.2 0 0 1 0-85.64A15.75 15.75 0 0 0 184.67 64zM89.92 23.34A15.83 15.83 0 0 0 76 0H40.63a16.18 16.18 0 0 0-14.74 9.31A285.66 285.66 0 0 0 0 128c0 24.75 3.12 68.33 26.69 118.86A16.1 16.1 0 0 0 41.3 256h34.84a15.84 15.84 0 0 0 14-23.37c-49.83-93.32-16.76-178.15-.22-209.29zm524.14-14A16.17 16.17 0 0 0 599.33 0h-35.42a15.81 15.81 0 0 0-14 23.25c18.27 34.29 48.42 119.42.28 209.23A15.87 15.87 0 0 0 564.08 256h35.23a16.17 16.17 0 0 0 14.69-9.29 284.5 284.5 0 0 0 0-237.42zM489.06 64h-33.73a15.76 15.76 0 0 0-14.86 21.18 125.2 125.2 0 0 1 0 85.64A15.75 15.75 0 0 0 455.33 192h33.73a16 16 0 0 0 15.41-11.24 188.48 188.48 0 0 0 0-105.52A15.94 15.94 0 0 0 489.06 64z", "M503.26 477.53l-130.5-313.41a64 64 0 1 0-105.52 0l-130.5 313.41a16 16 0 0 0 8.61 20.92l29.51 12.31a16 16 0 0 0 20.91-8.61L245 384h150l49.2 118.15a16 16 0 0 0 20.91 8.61l29.51-12.31a16 16 0 0 0 8.64-20.92zM271.62 320L320 203.81 368.38 320z"]]
};
exports.faBroadcastTower = faBroadcastTower;
var faBroom = {
  prefix: 'fad',
  iconName: 'broom',
  icon: [640, 512, [], "f51a", ["M636.53 31A16 16 0 0 1 634 53.47l-232.5 177.8-39.72-50L594.26 3.47A15.94 15.94 0 0 1 616.67 6l19.86 25z", "M93.17 257.71c-21.88 17.43-40.17 55.81-54.6 97.47L99 333.09a6 6 0 0 1 6.65 9.5L11 454.76c-7.2 32.29-11 55.43-11 55.43s206.66 13.66 266.63-34.12S343.2 326 343.2 326l-86.73-109.23S153.14 210 93.17 257.71zm342.42 16.48L327.64 138.3a11 11 0 0 0-18.59 2.21l-25.33 54.55 86.73 109.18 58.8-12.45a11 11 0 0 0 6.34-17.6z"]]
};
exports.faBroom = faBroom;
var faBrowser = {
  prefix: 'fad',
  iconName: 'browser',
  icon: [512, 512, [], "f37e", ["M76 160h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12H76a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12zM0 224v208a48 48 0 0 0 48 48h416a48 48 0 0 0 48-48V224z", "M464 32H48A48 48 0 0 0 0 80v144h512V80a48 48 0 0 0-48-48zM128 148a12 12 0 0 1-12 12H76a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm320 0a12 12 0 0 1-12 12H188a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h248a12 12 0 0 1 12 12z"]]
};
exports.faBrowser = faBrowser;
var faBrush = {
  prefix: 'fad',
  iconName: 'brush',
  icon: [384, 512, [], "f55d", ["M384 32v224H0V32A32 32 0 0 1 32 0h320a32 32 0 0 1 32 32z", "M0 288v32a64 64 0 0 0 64 64h64v64a64 64 0 0 0 128 0v-64h64a64 64 0 0 0 64-64v-32zm192 184a24 24 0 1 1 24-24 24 24 0 0 1-24 24z"]]
};
exports.faBrush = faBrush;
var faBug = {
  prefix: 'fad',
  iconName: 'bug',
  icon: [512, 512, [], "f188", ["M369 112H145a112 112 0 0 1 224 0z", "M512 288.9c-.48 17.43-15.22 31.1-32.66 31.1H424v16a143.4 143.4 0 0 1-13.6 61.14l60.23 60.23a32 32 0 0 1-45.26 45.26l-54.73-54.74A143.42 143.42 0 0 1 280 480V236a12 12 0 0 0-12-12h-24a12 12 0 0 0-12 12v244a143.42 143.42 0 0 1-90.64-32.11l-54.73 54.74a32 32 0 0 1-45.26-45.26l60.23-60.23A143.4 143.4 0 0 1 88 336v-16H32.67C15.23 320 .49 306.33 0 288.9A32 32 0 0 1 32 256h56v-58.74l-46.63-46.63a32 32 0 0 1 45.26-45.26L141.25 160h229.49l54.63-54.63a32 32 0 0 1 45.26 45.26L424 197.26V256h56a32 32 0 0 1 32 32.9z"]]
};
exports.faBug = faBug;
var faBuilding = {
  prefix: 'fad',
  iconName: 'building',
  icon: [448, 512, [], "f1ad", ["M180 160h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm0 96h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm0-192h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12V76a12 12 0 0 0-12-12zm128 0h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12V76a12 12 0 0 0-12-12zm0 96h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm0 96h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12z", "M436 480h-20V24a24 24 0 0 0-24-24H56a24 24 0 0 0-24 24v456H12a12 12 0 0 0-12 12v20h448v-20a12 12 0 0 0-12-12zM128 76a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12v40a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12zm0 96a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12v40a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12zm52 148h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12v40a12 12 0 0 1-12 12zm76 160h-64v-84a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm64-172a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-96a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-96a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12V76a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12z"]]
};
exports.faBuilding = faBuilding;
var faBullhorn = {
  prefix: 'fad',
  iconName: 'bullhorn',
  icon: [576, 512, [], "f0a1", ["M544 448c0 9.22-7.08 32-32 32a32 32 0 0 1-20-7l-85-68a242.82 242.82 0 0 0-119-50.79V125.84a242.86 242.86 0 0 0 119-50.79L492 7a31.93 31.93 0 0 1 20-7c25 0 32 23.26 32 32z", "M544 184.88v110.24a63.47 63.47 0 0 0 0-110.24zM0 192v96a64 64 0 0 0 64 64h33.7a243 243 0 0 0-2.18 32 253.32 253.32 0 0 0 25.56 110.94c5.19 10.69 16.52 17.06 28.4 17.06h74.28c26.05 0 41.69-29.84 25.9-50.56A127.35 127.35 0 0 1 223.51 384a121 121 0 0 1 4.41-32H256V128H64a64 64 0 0 0-64 64z"]]
};
exports.faBullhorn = faBullhorn;
var faBullseye = {
  prefix: 'fad',
  iconName: 'bullseye',
  icon: [496, 512, [], "f140", ["M248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm0 432c-101.69 0-184-82.29-184-184 0-101.69 82.29-184 184-184 101.69 0 184 82.29 184 184 0 101.69-82.29 184-184 184zm0-312c-70.69 0-128 57.31-128 128s57.31 128 128 128 128-57.31 128-128-57.31-128-128-128zm0 192c-35.29 0-64-28.71-64-64s28.71-64 64-64 64 28.71 64 64-28.71 64-64 64z", ""]]
};
exports.faBullseye = faBullseye;
var faBullseyeArrow = {
  prefix: 'fad',
  iconName: 'bullseye-arrow',
  icon: [496, 512, [], "f648", ["M248,320a64.07,64.07,0,0,1-64-64c0-28.95,19.45-53.19,45.88-61.07L285,139.79l-2.12-6.38C271.73,130.24,260.18,128,248,128A128,128,0,1,0,376,256c0-12.18-2.24-23.73-5.42-34.89L364.21,219l-55.14,55.14A63.85,63.85,0,0,1,248,320ZM484.43,181.1l-35.5,35.5a52.13,52.13,0,0,1-19.17,12.07c15.9,101.19-53.24,196.1-154.43,212s-196.1-53.25-212-154.43,53.25-196.1,154.43-212a185.71,185.71,0,0,1,57.88.05A52,52,0,0,1,287.4,55.07l35.5-35.5A247.87,247.87,0,0,0,248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256A247.87,247.87,0,0,0,484.43,181.1Z", "M310,77.7,373.68,14a20.56,20.56,0,0,1,34,8l18.55,55.65L481.89,96.2a20.56,20.56,0,0,1,8,34L426.3,194a20.58,20.58,0,0,1-21,5l-49.7-16.57L265,273a24,24,0,0,1-34-34l90.59-90.59L305,98.71A20.58,20.58,0,0,1,310,77.7Z"]]
};
exports.faBullseyeArrow = faBullseyeArrow;
var faBullseyePointer = {
  prefix: 'fad',
  iconName: 'bullseye-pointer',
  icon: [496, 512, [], "f649", ["M312,256a64,64,0,0,1-28.93,53.43L262.3,382.53C326.18,375.35,376,321.78,376,256A128,128,0,0,0,248,128c-65.78,0-119.35,49.82-126.53,113.7l73.11-20.78A63.91,63.91,0,0,1,312,256ZM248,8C111.08,8,.11,119,.11,256c0,8.39.44,16.67,1.26,24.85a48.57,48.57,0,0,1,18-10.08L64.21,258c0-.68-.1-1.33-.1-2a184,184,0,1,1,184,184c-.68,0-1.34-.09-2-.1l-12.75,44.87a48.53,48.53,0,0,1-10,18c8.16.81,16.44,1.25,24.82,1.25C385,504,496,393,496,256S385,8,248,8Z", "M242.21,240.65a17.13,17.13,0,0,1,21.16,21.17L202.51,476c-4.31,15.17-25.08,17-31.91,2.73l-32.88-68.47L48.57,499.41a15.51,15.51,0,0,1-21.95,0l-.05,0-22-22a15.52,15.52,0,0,1-.05-22h0l.05,0,89.15-89.15L25.36,333.45c-14.25-6.82-12.44-27.61,2.74-31.92l214.13-60.88Z"]]
};
exports.faBullseyePointer = faBullseyePointer;
var faBurgerSoda = {
  prefix: 'fad',
  iconName: 'burger-soda',
  icon: [640, 512, [], "f858", ["M336 128H206.73l20-80H272a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16h-51.5a40 40 0 0 0-38.81 30.3L157.26 128H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-44.62 96H38.27l25.78 258.29A31.87 31.87 0 0 0 96 512h160a31.59 31.59 0 0 0 13.65-3.36A79.55 79.55 0 0 1 256 464a47.93 47.93 0 0 1 17-36.61 63.91 63.91 0 0 1 4.58-91.27 64 64 0 0 1-14-17.9 64.71 64.71 0 0 1 3.74-66.82c6.68-9.87 15.04-18.86 24.06-27.4z", "M624 448H304a16 16 0 0 0-16 16 48 48 0 0 0 48 48h256a48 48 0 0 0 48-48 16 16 0 0 0-16-16zM319.27 320h289.46c25.35 0 40-29.27 25.54-50.59C604.8 226.13 539.94 192.07 464 192s-140.79 34.13-170.26 77.41c-14.53 21.32.19 50.59 25.53 50.59zM544 240a16 16 0 1 1-16 16 16 16 0 0 1 16-16zm-80-16a16 16 0 1 1-16 16 16 16 0 0 1 16-16zm-80 16a16 16 0 1 1-16 16 16 16 0 0 1 16-16zm-64 176h288a32 32 0 0 0 0-64H320a32 32 0 0 0 0 64z"]]
};
exports.faBurgerSoda = faBurgerSoda;
var faBurn = {
  prefix: 'fad',
  iconName: 'burn',
  icon: [384, 512, [], "f46a", ["M192 0C79.7 101.3 0 220.9 0 300.5 0 425 79 512 192 512s192-87 192-211.5c0-79.9-80.2-199.6-192-300.5zm83 415.6c-21.15 20.9-50.64 32.4-83 32.4s-61.87-11.5-83-32.4-33-50.31-33-82.55c0-16.3 5.1-35.18 15.17-56.11 15-31.13 41-67 77.24-106.56L192 144.65l23.59 25.73c36.28 39.57 62.27 75.43 77.24 106.56C302.9 297.87 308 316.75 308 333.05c0 32.24-11.71 61.56-33 82.55z", "M276 333.05c0 48.83-34.56 82.95-84 82.95s-84-34.12-84-82.95c0-11.81 4-53.81 84-141 80 87.19 84 129.19 84 141z"]]
};
exports.faBurn = faBurn;
var faBurrito = {
  prefix: 'fad',
  iconName: 'burrito',
  icon: [512, 512, [], "f7ed", ["M351.83 224c-15.22 0-30 2.53-44.54 6.32C278.33 310.45 201.65 368 111.57 368A207 207 0 0 1 .72 335.76c-3.72 33.8 6.86 68.88 32.74 94.74L81 478a116.21 116.21 0 0 0 164.22 0l216-215.73A175.25 175.25 0 0 0 351.83 224zm-64.07-64a174.85 174.85 0 0 0-38.33-109.28l-216 215.73A115.42 115.42 0 0 0 9 302.83 175.23 175.23 0 0 0 111.57 336c97.14 0 176.19-78.95 176.19-176z", "M505.26 153.88A80 80 0 0 1 512 186c0 22-9.37 42-24.29 56.75A207.26 207.26 0 0 0 351.83 192a210 210 0 0 0-35.22 3A204.24 204.24 0 0 0 269 24.26C283.8 9.37 303.74 0 325.8 0A80 80 0 0 1 358 6.73a74.19 74.19 0 0 1 101.69 45.53A74.13 74.13 0 0 1 512 123a73.17 73.17 0 0 1-6.74 30.88z"]]
};
exports.faBurrito = faBurrito;
var faBus = {
  prefix: 'fad',
  iconName: 'bus',
  icon: [512, 512, [], "f207", ["M352 448v32a32 32 0 0 0 32 32h32a32 32 0 0 0 32-32v-32zM64 480a32 32 0 0 0 32 32h32a32 32 0 0 0 32-32v-32H64zm64-192h256a32 32 0 0 0 32-32V128a32 32 0 0 0-32-32H128a32 32 0 0 0-32 32v128a32 32 0 0 0 32 32z", "M488 128h-8V80c0-44.8-99.2-80-224-80S32 35.2 32 80v48h-8a24 24 0 0 0-24 24v80a24 24 0 0 0 24 24h8v160a32 32 0 0 0 32 32h384a32 32 0 0 0 32-32V256h8a24 24 0 0 0 24-24v-80a24 24 0 0 0-24-24zm-392 0a32 32 0 0 1 32-32h256a32 32 0 0 1 32 32v128a32 32 0 0 1-32 32H128a32 32 0 0 1-32-32zm16 272a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm288 0a32 32 0 1 1 32-32 32 32 0 0 1-32 32z"]]
};
exports.faBus = faBus;
var faBusAlt = {
  prefix: 'fad',
  iconName: 'bus-alt',
  icon: [512, 512, [], "f55e", ["M96 160v96a32 32 0 0 0 32 32h112V128H128a32 32 0 0 0-32 32zm320 96v-96a32 32 0 0 0-32-32H272v160h112a32 32 0 0 0 32-32zM64 480a32 32 0 0 0 32 32h32a32 32 0 0 0 32-32v-32H64zm288-32v32a32 32 0 0 0 32 32h32a32 32 0 0 0 32-32v-32z", "M488 128h-8V80c0-44.8-99.2-80-224-80S32 35.2 32 80v48h-8a24 24 0 0 0-24 24v80a24 24 0 0 0 24 24h8v160a32 32 0 0 0 32 32h384a32 32 0 0 0 32-32V256h8a24 24 0 0 0 24-24v-80a24 24 0 0 0-24-24zM112 400a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm128-112H128a32 32 0 0 1-32-32v-96a32 32 0 0 1 32-32h112zM168 96a8 8 0 0 1-8-8V72a8 8 0 0 1 8-8h176a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H168zm104 32h112a32 32 0 0 1 32 32v96a32 32 0 0 1-32 32H272zm128 272a32 32 0 1 1 32-32 32 32 0 0 1-32 32z"]]
};
exports.faBusAlt = faBusAlt;
var faBusSchool = {
  prefix: 'fad',
  iconName: 'bus-school',
  icon: [512, 512, [], "f5dd", ["M64 480a32 32 0 0 0 32 32h32a32 32 0 0 0 32-32v-32H64zm288-32v32a32 32 0 0 0 32 32h32a32 32 0 0 0 32-32v-32zM112 160v64a32 32 0 0 0 32 32h96V128h-96a32 32 0 0 0-32 32zm288 64v-64a32 32 0 0 0-32-32h-96v128h96a32 32 0 0 0 32-32z", "M488 112h-24V80c0-44.8-92.11-80-208-80S48 35.2 48 80v32H24a24 24 0 0 0-24 24v80a24 24 0 0 0 24 24h24v20.9c-9.39 5.57-16 15.38-16 27.1v128a32 32 0 0 0 32 32h384a32 32 0 0 0 32-32V288c0-11.72-6.61-21.52-16-27.1V240h24a24 24 0 0 0 24-24v-80a24 24 0 0 0-24-24zM160 72a8 8 0 0 1 8-8h176a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H168a8 8 0 0 1-8-8zm-48 312a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm128-128h-96a32 32 0 0 1-32-32v-64a32 32 0 0 1 32-32h96zm32-128h96a32 32 0 0 1 32 32v64a32 32 0 0 1-32 32h-96zm128 256a32 32 0 1 1 32-32 32 32 0 0 1-32 32z"]]
};
exports.faBusSchool = faBusSchool;
var faBusinessTime = {
  prefix: 'fad',
  iconName: 'business-time',
  icon: [640, 512, [], "f64a", ["M496 224a144 144 0 1 0 144 144 143.92 143.92 0 0 0-144-144zm64 150.29a9.74 9.74 0 0 1-9.71 9.71h-60.57a9.74 9.74 0 0 1-9.71-9.71v-76.57a9.74 9.74 0 0 1 9.71-9.71h12.57a9.74 9.74 0 0 1 9.71 9.71V352h38.29a9.74 9.74 0 0 1 9.71 9.71z", "M326.82 320H208a16 16 0 0 1-16-16v-48H0v144c0 25.6 22.4 48 48 48h291.43a173.64 173.64 0 0 1-12.61-128zM512 192.81V144c0-25.6-22.4-48-48-48h-80V48c0-25.6-22.4-48-48-48H176c-25.6 0-48 22.4-48 48v48H48c-25.6 0-48 22.4-48 48v80h395.12A174.92 174.92 0 0 1 496 192c5.4 0 10.72.33 16 .81zM320 96H192V64h128zm230.29 256H512v-54.28a9.74 9.74 0 0 0-9.71-9.71h-12.57a9.74 9.74 0 0 0-9.71 9.71v76.57a9.74 9.74 0 0 0 9.71 9.71h60.57a9.74 9.74 0 0 0 9.71-9.71v-12.58a9.74 9.74 0 0 0-9.71-9.71z"]]
};
exports.faBusinessTime = faBusinessTime;
var faCabinetFiling = {
  prefix: 'fad',
  iconName: 'cabinet-filing',
  icon: [512, 512, [], "f64b", ["M0 480a32 32 0 0 0 32 32h448a32 32 0 0 0 32-32V256H0zm160-112a16 16 0 0 1 16-16h160a16 16 0 0 1 16 16v40a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8v-24H192v24a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8zM480 0H32A32 32 0 0 0 0 32v192h512V32a32 32 0 0 0-32-32zM352 152a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8v-24H192v24a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8v-40a16 16 0 0 1 16-16h160a16 16 0 0 1 16 16z", "M336 96H176a16 16 0 0 0-16 16v40a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-24h128v24a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-40a16 16 0 0 0-16-16zm0 256H176a16 16 0 0 0-16 16v40a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-24h128v24a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-40a16 16 0 0 0-16-16z"]]
};
exports.faCabinetFiling = faCabinetFiling;
var faCactus = {
  prefix: 'fad',
  iconName: 'cactus',
  icon: [512, 512, [], "f8a7", ["M224 144a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm64 224a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm176-144a48 48 0 0 0-48 48v64a16 16 0 0 1-16 16h-48v96h48a112.14 112.14 0 0 0 112-112v-64a48 48 0 0 0-48-48zM96 208v-64a48 48 0 0 0-96 0v64a112.14 112.14 0 0 0 112 112h48v-96h-48a16 16 0 0 1-16-16z", "M352 96a96 96 0 0 0-192 0v416h192zm-128 80a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm64 224a16 16 0 1 1 16-16 16 16 0 0 1-16 16z"]]
};
exports.faCactus = faCactus;
var faCalculator = {
  prefix: 'fad',
  iconName: 'calculator',
  icon: [448, 512, [], "f1ec", ["M115.2 384H76.8c-6.4 0-12.8 6.4-12.8 12.8v38.4c0 6.4 6.4 12.8 12.8 12.8h38.4c6.4 0 12.8-6.4 12.8-12.8v-38.4c0-6.4-6.4-12.8-12.8-12.8zm0-128H76.8c-6.4 0-12.8 6.4-12.8 12.8v38.4c0 6.4 6.4 12.8 12.8 12.8h38.4c6.4 0 12.8-6.4 12.8-12.8v-38.4c0-6.4-6.4-12.8-12.8-12.8zm128 128h-38.4c-6.4 0-12.8 6.4-12.8 12.8v38.4c0 6.4 6.4 12.8 12.8 12.8h38.4c6.4 0 12.8-6.4 12.8-12.8v-38.4c0-6.4-6.4-12.8-12.8-12.8zm0-128h-38.4c-6.4 0-12.8 6.4-12.8 12.8v38.4c0 6.4 6.4 12.8 12.8 12.8h38.4c6.4 0 12.8-6.4 12.8-12.8v-38.4c0-6.4-6.4-12.8-12.8-12.8zm128 0h-38.4c-6.4 0-12.8 6.4-12.8 12.8v166.4c0 6.4 6.4 12.8 12.8 12.8h38.4c6.4 0 12.8-6.4 12.8-12.8V268.8c0-6.4-6.4-12.8-12.8-12.8z", "M400 0H48C22.4 0 0 22.4 0 48v416c0 25.6 22.4 48 48 48h352c25.6 0 48-22.4 48-48V48c0-25.6-22.4-48-48-48zM128 435.2c0 6.4-6.4 12.8-12.8 12.8H76.8c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8zm0-128c0 6.4-6.4 12.8-12.8 12.8H76.8c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8zm128 128c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8zm0-128c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8zm128 128c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8V268.8c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8zm0-256c0 6.4-6.4 12.8-12.8 12.8H76.8c-6.4 0-12.8-6.4-12.8-12.8V76.8C64 70.4 70.4 64 76.8 64h294.4c6.4 0 12.8 6.4 12.8 12.8z"]]
};
exports.faCalculator = faCalculator;
var faCalculatorAlt = {
  prefix: 'fad',
  iconName: 'calculator-alt',
  icon: [512, 512, [], "f64c", ["M192 0H32A32 32 0 0 0 0 32v160a32 32 0 0 0 32 32h160a32 32 0 0 0 32-32V32a32 32 0 0 0-32-32zm-16 120a8 8 0 0 1-8 8H56a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h112a8 8 0 0 1 8 8zm16 168H32a32 32 0 0 0-32 32v160a32 32 0 0 0 32 32h160a32 32 0 0 0 32-32V320a32 32 0 0 0-32-32zm-29.09 140.29a8 8 0 0 1 0 11.31l-11.31 11.31a8 8 0 0 1-11.31 0L112 422.63l-28.29 28.29a8 8 0 0 1-11.31 0L61.09 439.6a8 8 0 0 1 0-11.31L89.37 400l-28.29-28.29a8 8 0 0 1 0-11.31l11.31-11.31a8 8 0 0 1 11.31 0l28.3 28.28 28.29-28.29a8 8 0 0 1 11.31 0l11.31 11.31a8 8 0 0 1 0 11.31L134.63 400zM480 0H320a32 32 0 0 0-32 32v160a32 32 0 0 0 32 32h160a32 32 0 0 0 32-32V32a32 32 0 0 0-32-32zm-16 120a8 8 0 0 1-8 8h-40v40a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8v-40h-40a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h40V56a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v40h40a8 8 0 0 1 8 8z", "M162.91 360.39l-11.31-11.31a8 8 0 0 0-11.31 0L112 377.37l-28.3-28.28a8 8 0 0 0-11.31 0L61.08 360.4a8 8 0 0 0 0 11.31L89.37 400l-28.28 28.29a8 8 0 0 0 0 11.31l11.31 11.32a8 8 0 0 0 11.31 0L112 422.63l28.29 28.28a8 8 0 0 0 11.31 0l11.31-11.31a8 8 0 0 0 0-11.31L134.63 400l28.28-28.3a8 8 0 0 0 0-11.31zM344 128h40v40a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-40h40a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8h-40V56a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v40h-40a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zM168 96H56a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h112a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8zm312 192H320a32 32 0 0 0-32 32v160a32 32 0 0 0 32 32h160a32 32 0 0 0 32-32V320a32 32 0 0 0-32-32zm-16 152a8 8 0 0 1-8 8H344a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h112a8 8 0 0 1 8 8zm0-64a8 8 0 0 1-8 8H344a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h112a8 8 0 0 1 8 8z"]]
};
exports.faCalculatorAlt = faCalculatorAlt;
var faCalendar = {
  prefix: 'fad',
  iconName: 'calendar',
  icon: [448, 512, [], "f133", ["M0 192v272a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V192zm304-64h32a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16zm-192 0h32a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16z", "M448 112v80H0v-80a48 48 0 0 1 48-48h48v48a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V64h128v48a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V64h48a48 48 0 0 1 48 48z"]]
};
exports.faCalendar = faCalendar;
var faCalendarAlt = {
  prefix: 'fad',
  iconName: 'calendar-alt',
  icon: [448, 512, [], "f073", ["M0 192v272a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V192zm128 244a12 12 0 0 1-12 12H76a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-128a12 12 0 0 1-12 12H76a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm128 128a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-128a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm128 128a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-128a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm-80-180h32a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16zm-192 0h32a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16z", "M448 112v80H0v-80a48 48 0 0 1 48-48h48v48a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V64h128v48a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V64h48a48 48 0 0 1 48 48z"]]
};
exports.faCalendarAlt = faCalendarAlt;
var faCalendarCheck = {
  prefix: 'fad',
  iconName: 'calendar-check',
  icon: [448, 512, [], "f274", ["M0 192v272a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V192zm345.26 113l-143 141.8a12 12 0 0 1-17 0l-82.6-83.26a12 12 0 0 1 .06-17l.08-.08 28.4-28.17a12 12 0 0 1 17 0l46 46.36 106-105.19a12 12 0 0 1 17 0L345.3 288a12 12 0 0 1-.04 17zM304 128h32a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16zm-192 0h32a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16z", "M345.33 288l-28.2-28.4a12 12 0 0 0-17-.1l-106 105.19-46-46.36a12 12 0 0 0-17-.09l-28.4 28.17a12 12 0 0 0-.1 17l82.6 83.26a12 12 0 0 0 17 .1l143-141.8a12 12 0 0 0 .1-17zM400 64h-48v48a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V64H160v48a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V64H48a48 48 0 0 0-48 48v80h448v-80a48 48 0 0 0-48-48z"]]
};
exports.faCalendarCheck = faCalendarCheck;
var faCalendarDay = {
  prefix: 'fad',
  iconName: 'calendar-day',
  icon: [448, 512, [], "f783", ["M0 192v272a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V192zm192 176a16 16 0 0 1-16 16H80a16 16 0 0 1-16-16v-96a16 16 0 0 1 16-16h96a16 16 0 0 1 16 16zm112-240h32a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16zm-192 0h32a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16z", "M448 112v80H0v-80a48 48 0 0 1 48-48h48v48a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V64h128v48a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V64h48a48 48 0 0 1 48 48z"]]
};
exports.faCalendarDay = faCalendarDay;
var faCalendarEdit = {
  prefix: 'fad',
  iconName: 'calendar-edit',
  icon: [448, 512, [], "f333", ["M0 192v272a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V192zm274.43 163.57l-95 95L131.2 456a10.17 10.17 0 0 1-11.2-9 9.93 9.93 0 0 1 0-2.18l5.4-48.2 95-95a5.07 5.07 0 0 1 7.17 0l46.8 46.8a5.07 5.07 0 0 1 .06 7.15zm55.67-55.67l-26 26a5.07 5.07 0 0 1-7.17 0l-46.8-46.8a5.07 5.07 0 0 1 0-7.17l26-26a20.22 20.22 0 0 1 28.6 0l25.4 25.4a20.22 20.22 0 0 1-.03 28.57zM112 128h32a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16zm192 0h32a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16z", "M330.1 271.3l-25.4-25.4a20.22 20.22 0 0 0-28.6 0l-26 26a5.07 5.07 0 0 0 0 7.17l46.8 46.8a5.07 5.07 0 0 0 7.17 0l26-26a20.22 20.22 0 0 0 0-28.6zm-55.7 77.1l-46.8-46.8a5.07 5.07 0 0 0-7.17 0l-95 95-5.43 48.2a10.17 10.17 0 0 0 9 11.2 9.93 9.93 0 0 0 2.18 0l48.2-5.4 95-95a5.07 5.07 0 0 0 0-7.17zM400 64h-48v48a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V64H160v48a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V64H48a48 48 0 0 0-48 48v80h448v-80a48 48 0 0 0-48-48z"]]
};
exports.faCalendarEdit = faCalendarEdit;
var faCalendarExclamation = {
  prefix: 'fad',
  iconName: 'calendar-exclamation',
  icon: [448, 512, [], "f334", ["M0 192v272a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V192zm196.18 48h55.02a12 12 0 0 1 12 12v.83l-7.2 112A12 12 0 0 1 244 376h-40a12 12 0 0 1-12-11.2l-7.2-112a12.1 12.1 0 0 1 11.38-12.8zM224 472a40 40 0 1 1 40-40 40 40 0 0 1-40 40zM112 128h32a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16zm192 0h32a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16z", "M224 392a40 40 0 1 0 40 40 40 40 0 0 0-40-40zm-20-16h40a12 12 0 0 0 12-11.2l7.2-112A12 12 0 0 0 252 240h-55.2a12.1 12.1 0 0 0-12 12.18v.62l7.2 112a12 12 0 0 0 12 11.2zM400 64h-48v48a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V64H160v48a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V64H48a48 48 0 0 0-48 48v80h448v-80a48 48 0 0 0-48-48z"]]
};
exports.faCalendarExclamation = faCalendarExclamation;
var faCalendarMinus = {
  prefix: 'fad',
  iconName: 'calendar-minus',
  icon: [448, 512, [], "f272", ["M0 192v272a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V192zm328 180a12 12 0 0 1-12 12H132a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h184a12 12 0 0 1 12 12zm-24-244h32a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16zm-192 0h32a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16z", "M316 320H132a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h184a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm84-256h-48v48a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V64H160v48a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V64H48a48 48 0 0 0-48 48v80h448v-80a48 48 0 0 0-48-48z"]]
};
exports.faCalendarMinus = faCalendarMinus;
var faCalendarPlus = {
  prefix: 'fad',
  iconName: 'calendar-plus',
  icon: [448, 512, [], "f271", ["M0 192v272a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V192zm328 180a12 12 0 0 1-12 12h-60v60a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-60h-60a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h60v-60a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12v60h60a12 12 0 0 1 12 12zm-24-244h32a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16zm-192 0h32a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16z", "M316 320h-60v-60a12 12 0 0 0-12-12h-40a12 12 0 0 0-12 12v60h-60a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h60v60a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-60h60a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm84-256h-48v48a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V64H160v48a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V64H48a48 48 0 0 0-48 48v80h448v-80a48 48 0 0 0-48-48z"]]
};
exports.faCalendarPlus = faCalendarPlus;
var faCalendarStar = {
  prefix: 'fad',
  iconName: 'calendar-star',
  icon: [448, 512, [], "f736", ["M0 192v272a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V192zm324.13 141.91a11.92 11.92 0 0 1-3.53 6.89L281 379.4l9.4 54.6a12 12 0 0 1-17.4 12.6l-49-25.8-48.9 25.8a12 12 0 0 1-17.4-12.6l9.4-54.6-39.6-38.6a12 12 0 0 1 6.6-20.5l54.7-8 24.5-49.6a12 12 0 0 1 21.5 0l24.5 49.6 54.7 8a12 12 0 0 1 10.13 13.61zM304 128h32a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16zm-192 0h32a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16z", "M314 320.3l-54.7-8-24.5-49.6a12 12 0 0 0-21.5 0l-24.5 49.6-54.7 8a12 12 0 0 0-6.6 20.5l39.6 38.6-9.4 54.6a12 12 0 0 0 17.4 12.6l48.9-25.8 49 25.8a12 12 0 0 0 17.4-12.6l-9.4-54.6 39.6-38.6a12 12 0 0 0-6.6-20.5zM400 64h-48v48a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V64H160v48a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V64H48a48 48 0 0 0-48 48v80h448v-80a48 48 0 0 0-48-48z"]]
};
exports.faCalendarStar = faCalendarStar;
var faCalendarTimes = {
  prefix: 'fad',
  iconName: 'calendar-times',
  icon: [448, 512, [], "f273", ["M0 192v272a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V192zm317.4 208.1a12 12 0 0 1 0 17l-28.3 28.3a12 12 0 0 1-17 0L224 397.3l-48.1 48.1a12 12 0 0 1-17 0l-28.3-28.3a12 12 0 0 1 0-17l48.1-48.1-48.1-48.1a12 12 0 0 1 0-17l28.3-28.3a12 12 0 0 1 17 0l48.1 48.1 48.1-48.1a12 12 0 0 1 17 0l28.3 28.3a12 12 0 0 1 0 17L269.3 352zM304 128h32a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16zm-192 0h32a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16z", "M317.43 286.93l-28.3-28.3a12 12 0 0 0-17 0L224 306.7l-48.1-48.1a12 12 0 0 0-17 0l-28.3 28.3a12 12 0 0 0 0 17l48.1 48.1-48.1 48.1a12 12 0 0 0 0 17l28.3 28.3a12 12 0 0 0 17 0l48.1-48.1 48.1 48.1a12 12 0 0 0 17 0l28.3-28.3a12 12 0 0 0 0-17L269.3 352l48.1-48.1a12 12 0 0 0 .03-16.97zM400 64h-48v48a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V64H160v48a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V64H48a48 48 0 0 0-48 48v80h448v-80a48 48 0 0 0-48-48z"]]
};
exports.faCalendarTimes = faCalendarTimes;
var faCalendarWeek = {
  prefix: 'fad',
  iconName: 'calendar-week',
  icon: [448, 512, [], "f784", ["M0 192v272a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V192zm384 144a16 16 0 0 1-16 16H80a16 16 0 0 1-16-16v-64a16 16 0 0 1 16-16h288a16 16 0 0 1 16 16zm-80-208h32a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16zm-192 0h32a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16z", "M448 112v80H0v-80a48 48 0 0 1 48-48h48v48a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V64h128v48a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V64h48a48 48 0 0 1 48 48z"]]
};
exports.faCalendarWeek = faCalendarWeek;
var faCamcorder = {
  prefix: 'fad',
  iconName: 'camcorder',
  icon: [576, 512, [], "f8a8", ["M336.2 160H96v-32a32 32 0 0 1 32-32h176a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16H128a96 96 0 0 0-96 96v34.89A47.66 47.66 0 0 0 0 207.8v224.4A47.81 47.81 0 0 0 47.8 480h288.4a47.81 47.81 0 0 0 47.8-47.8V207.8a47.81 47.81 0 0 0-47.8-47.8zM320 249.6a6.41 6.41 0 0 1-6.4 6.4H70.4a6.41 6.41 0 0 1-6.4-6.4v-19.2a6.41 6.41 0 0 1 6.4-6.4h243.2a6.41 6.41 0 0 1 6.4 6.4z", "M525.59 165.7L416 241.3v157.4l109.59 75.5c21.21 14.6 50.41-.29 50.41-25.79V191.5c0-25.41-29.09-40.41-50.41-25.8zM313.6 224H70.4a6.41 6.41 0 0 0-6.4 6.4v19.2a6.41 6.41 0 0 0 6.4 6.4h243.2a6.41 6.41 0 0 0 6.4-6.4v-19.2a6.41 6.41 0 0 0-6.4-6.4z"]]
};
exports.faCamcorder = faCamcorder;
var faCamera = {
  prefix: 'fad',
  iconName: 'camera',
  icon: [512, 512, [], "f030", ["M344 288a88 88 0 1 1-88-88 88.13 88.13 0 0 1 88 88z", "M464 96h-88l-12.4-32.9A47.93 47.93 0 0 0 318.7 32H193.2a47.93 47.93 0 0 0-44.9 31.1L136 96H48a48 48 0 0 0-48 48v288a48 48 0 0 0 48 48h416a48 48 0 0 0 48-48V144a48 48 0 0 0-48-48zM256 408a120 120 0 1 1 120-120 120.1 120.1 0 0 1-120 120z"]]
};
exports.faCamera = faCamera;
var faCameraAlt = {
  prefix: 'fad',
  iconName: 'camera-alt',
  icon: [512, 512, [], "f332", ["M256 200a88 88 0 1 0 88 88 88.13 88.13 0 0 0-88-88zm0 56a32.09 32.09 0 0 0-32 32 16 16 0 0 1-32 0 64.06 64.06 0 0 1 64-64 16 16 0 0 1 0 32z", "M464 96h-88l-12.4-32.9A47.93 47.93 0 0 0 318.7 32H193.2a47.93 47.93 0 0 0-44.9 31.1L136 96H48a48 48 0 0 0-48 48v288a48 48 0 0 0 48 48h416a48 48 0 0 0 48-48V144a48 48 0 0 0-48-48zM256 408a120 120 0 1 1 120-120 120.1 120.1 0 0 1-120 120z"]]
};
exports.faCameraAlt = faCameraAlt;
var faCameraMovie = {
  prefix: 'fad',
  iconName: 'camera-movie',
  icon: [576, 512, [], "f8a9", ["M368.2 288H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h48v112.2a47.81 47.81 0 0 0 47.8 47.8h256.4a47.81 47.81 0 0 0 47.8-47.8V335.8a47.81 47.81 0 0 0-47.8-47.8zM128 192a64 64 0 1 0-64-64 64.07 64.07 0 0 0 64 64zm224 0a64 64 0 1 0-64-64 64.07 64.07 0 0 0 64 64z", "M535.68 260.59L448 321.07V447l87.68 60.4c17 11.68 40.32-.23 40.32-20.64V281.23c0-20.33-23.27-32.33-40.32-20.64zM352 0c-48.57 0-90.31 27.37-112 67.24C218.31 27.37 176.57 0 128 0a128 128 0 0 0 0 256h224a128 128 0 0 0 0-256zM128 192a64 64 0 1 1 64-64 64.07 64.07 0 0 1-64 64zm224 0a64 64 0 1 1 64-64 64.07 64.07 0 0 1-64 64z"]]
};
exports.faCameraMovie = faCameraMovie;
var faCameraPolaroid = {
  prefix: 'fad',
  iconName: 'camera-polaroid',
  icon: [576, 512, [], "f8aa", ["M570.63 343.94L512 256V80a48 48 0 0 0-48-48H112a48 48 0 0 0-48 48v176L5.38 343.94A31.8 31.8 0 0 0 1.57 352h572.86a32.12 32.12 0 0 0-3.8-8.06zM288 256a64 64 0 1 1 64-64 64.1 64.1 0 0 1-64 64zm152-112a8 8 0 0 1-8 8h-32a8 8 0 0 1-8-8v-32a8 8 0 0 1 8-8h32a8 8 0 0 1 8 8z", "M574.43 352H1.57A31.76 31.76 0 0 0 0 361.69V448a32 32 0 0 0 32 32h512a32 32 0 0 0 32-32v-86.31a31.76 31.76 0 0 0-1.57-9.69zM480 408a8 8 0 0 1-8 8H104a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h368a8 8 0 0 1 8 8zM288 256a64 64 0 1 0-64-64 64.1 64.1 0 0 0 64 64z"]]
};
exports.faCameraPolaroid = faCameraPolaroid;
var faCameraRetro = {
  prefix: 'fad',
  iconName: 'camera-retro',
  icon: [512, 512, [], "f083", ["M256 232a88 88 0 1 0 88 88 88 88 0 0 0-88-88zm0 56a32.09 32.09 0 0 0-32 32 16 16 0 0 1-32 0 64.06 64.06 0 0 1 64-64 16 16 0 0 1 0 32zM480 32H256l-64 48H16A16 16 0 0 0 0 96v64h512V64a32.09 32.09 0 0 0-32-32z", "M176 48a16 16 0 0 0-16-16H64a16 16 0 0 0-16 16v32h128zM0 160v272a48 48 0 0 0 48 48h416a48 48 0 0 0 48-48V160zm256 280a120 120 0 1 1 120-120 120 120 0 0 1-120 120z"]]
};
exports.faCameraRetro = faCameraRetro;
var faCampfire = {
  prefix: 'fad',
  iconName: 'campfire',
  icon: [512, 512, [], "f6ba", ["M320 32a377.71 377.71 0 0 0-36.14 37.48A489.51 489.51 0 0 0 220 0c-63.17 57-108 131.22-108 176a144 144 0 0 0 288 0c0-33.29-33.42-102-80-144zm-16.79 208.57A79.7 79.7 0 0 1 256 256c-44.11 0-80-30.49-80-80 0-24.66 14.86-46.39 44.5-83.52 4.23 5.09 60.42 80.06 60.42 80.06l35.84-42.72c2.53 4.37 4.83 8.65 6.89 12.76 16.71 33.33 9.66 75.99-20.44 97.99z", "M511.28 470.21l-9.35 30.55a15.61 15.61 0 0 1-19.62 10.5L256 439 29.69 511.26a15.61 15.61 0 0 1-19.62-10.5L.72 470.21a16.06 16.06 0 0 1 10.28-20l140-44.68-140-44.72a16.06 16.06 0 0 1-10.28-20l9.35-30.55a15.61 15.61 0 0 1 19.62-10.5L256 372l226.31-72.24a15.61 15.61 0 0 1 19.62 10.5l9.35 30.55a16.06 16.06 0 0 1-10.28 20l-140 44.68 140 44.68a16.06 16.06 0 0 1 10.28 20.04z"]]
};
exports.faCampfire = faCampfire;
var faCampground = {
  prefix: 'fad',
  iconName: 'campground',
  icon: [640, 512, [], "f6bb", ["M640 464v32a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h608a16 16 0 0 1 16 16z", "M40.68 448l239.79-330.25-53.41-73.55a16 16 0 0 1 3.54-22.35l25.88-18.8a16 16 0 0 1 22.35 3.55L320 63.3l41.16-56.69a16 16 0 0 1 22.35-3.55l25.9 18.79A16 16 0 0 1 413 44.2l-53.41 73.55L599.32 448h-163L320 288 203.64 448z"]]
};
exports.faCampground = faCampground;
var faCandleHolder = {
  prefix: 'fad',
  iconName: 'candle-holder',
  icon: [448, 512, [], "f6bc", ["M160 192c45.93 0 78-32.61 78-79.29 0-30-32.59-74.89-78-112.71-45.62 38-78 82.84-78 112.71 0 46.68 32.07 79.29 78 79.29zm216 176a72.08 72.08 0 0 0-72 72 71.11 71.11 0 0 0 4.42 24H16a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h360a72 72 0 0 0 0-144zm0 96a24 24 0 1 1 24-24 24 24 0 0 1-24 24z", "M256 256v208H64V256a32 32 0 0 1 32-32h32v48a16 16 0 0 0 32 0v-48h64a32 32 0 0 1 32 32z"]]
};
exports.faCandleHolder = faCandleHolder;
var faCandyCane = {
  prefix: 'fad',
  iconName: 'candy-cane',
  icon: [512, 512, [], "f786", ["M86.71 355.33l122.12 76.32 75.66-45-122.1-76.31zM15.57 397.6a32 32 0 0 0-11 43.9l32.8 54.9a32.05 32.05 0 0 0 27.5 15.6 32.7 32.7 0 0 0 16.4-4.5l96.62-57.45-122.13-76.33zm249.3-259.8a32.05 32.05 0 0 0 27.5 15.6 32.7 32.7 0 0 0 16.4-4.5l18.91-11.27-41.13-123.38a160 160 0 0 0-16 8.35L243.07 39a32 32 0 0 0-11 43.9zm95.54-8.8l93.11-93.11A160.26 160.26 0 0 0 316.87 4l41.5 124.51c.69.14 1.37.28 2.04.49zm137.06-37a162.39 162.39 0 0 0-21.26-33.58l-92.74 92.73c.26.89.48 1.79.66 2.69l123.2 41.07c8.27-33.67 5.82-69.75-9.86-102.91zM193.34 292l122.09 76.3 75.65-45L269 247zm175.83-104.5L300 228.62l122 76.28 6.55-3.9a173 173 0 0 0 68.17-75.89l-123-41a32 32 0 0 1-4.55 3.39z", "M336.27 132.5a31.46 31.46 0 0 1 16.4-4.5 31.89 31.89 0 0 1 5.7.52L316.87 4a159.24 159.24 0 0 0-30.32 10.24l41.13 123.38zM55.76 373.72l122.13 76.33 30.94-18.4-122.12-76.32zM380.17 143.6a31.62 31.62 0 0 1 3.3 7.55l92.74-92.73a159.17 159.17 0 0 0-22.69-22.57L360.41 129a32 32 0 0 1 19.76 14.6zM162.39 310.36l122.1 76.31 30.94-18.4L193.34 292zM269 247l122.06 76.28L422 304.9l-122-76.28zm115.11-93.17a32.2 32.2 0 0 1-10.35 30.28l123 41a167.3 167.3 0 0 0 10.59-30.2z"]]
};
exports.faCandyCane = faCandyCane;
var faCandyCorn = {
  prefix: 'fad',
  iconName: 'candy-corn',
  icon: [640, 512, [], "f6bd", ["M480 0C314.2 1.62 315.53 39.53 322.12 72.44c3.47 17.35 7.44 35.26 11.74 53.32 32.89-7 81.71-13.93 146.74-13.93 64.28 0 112.74 6.76 145.61 13.7 4.28-18 8.22-35.8 11.68-53.09C644.48 39.53 645.81 1.62 480 0zm-94 294.9c28.24 70.05 61.05 121 93.88 121h.12c32.87-.09 65.71-51.07 94-121.18-23.91-3.86-55-7-93.5-7-39.04.03-70.5 3.18-94.5 7.18zM288.81 409c-27.59 27.57-47.55 52-61.81 71.83 69.55 29.6 128.78 42.42 152 19.22l.08-.09c23.17-23.3 10.35-82.55-19.25-152.13C340.22 362 316 381.77 288.81 409zm-41-263.5c-18.62-27.94-44.5-55.68-162.89 60.38C-31.16 324.21-3.4 350.07 24.54 368.69c14.72 9.81 30.19 19.67 46 29.39 18.31-28.19 47.93-67.59 93.91-113.57C209.9 239.07 249 209.6 277.1 191.26c-9.69-15.74-19.5-31.12-29.28-45.78z", "M480.6 143.83c-61.87 0-108 6.6-139 13.15 12.58 48.29 27.69 96.43 44.41 137.92 24-3.92 55.46-7.11 94.5-7.11 38.49 0 69.59 3.1 93.5 7 16.73-41.47 31.85-89.63 44.44-138-31-6.57-76.75-13-137.85-13zM187.09 307.14c-43.75 43.74-71.7 81-89 107.55 43.06 25.31 87.8 48.62 128.91 66.14 14.24-19.76 34.2-44.23 61.79-71.82 27.22-27.21 51.41-47 71-61.18-17.5-41.15-40.87-85.89-66.15-129-26.42 17.25-63.36 45-106.57 88.27z"]]
};
exports.faCandyCorn = faCandyCorn;
var faCannabis = {
  prefix: 'fad',
  iconName: 'cannabis',
  icon: [512, 512, [], "f55f", ["M512 374.4a16 16 0 0 1-8.51 14.15c-2.49 1.29-60.77 31.72-133.49 31.72q-9.19 0-17.5-.31c11.36 22.23 16.52 38.31 16.81 39.22a16 16 0 0 1-20 20.1c-1.83-.58-37.72-12-77.3-39.29V280a8 8 0 0 0-8-8H248a8 8 0 0 0-8 8v160c-39.58 27.3-75.47 38.72-77.3 39.29a16 16 0 0 1-20-20.1c.29-.91 5.44-17 16.81-39.22-5.54.21-11.36.31-17.5.31-72.73 0-131-30.43-133.49-31.72a16 16 0 0 1 0-28.29c1.57-.82 32.39-16.89 76.78-25.81C21.06 259.32 1.26 172.77.38 168.8a16 16 0 0 1 19.05-19.09c3.89.86 86.55 19.6 160.58 79.76v-4.4c0-118.79 60-213.72 62.53-217.7a16 16 0 0 1 26.93 0c2.55 4 62.53 98.91 62.53 217.7v4.4c74-60.17 156.7-78.91 160.58-79.76a15.56 15.56 0 0 1 3.44-.38 16 16 0 0 1 15.62 19.47c-.88 4-20.68 90.52-84.93 165.64 44.39 8.92 75.22 25 76.78 25.81A16 16 0 0 1 512 374.4z", "M272 280v224a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8V280a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8z"]]
};
exports.faCannabis = faCannabis;
var faCapsules = {
  prefix: 'fad',
  iconName: 'capsules',
  icon: [576, 512, [], "f46b", ["M112 32A112 112 0 0 0 0 144v112h224V144A112 112 0 0 0 112 32zm312.2 80.8a114.33 114.33 0 0 0-159.3-28.1c-3.12 2.18-6.07 4.51-8.9 6.94v179.67l47 67.1 187.38-131.06z", "M0 368a112 112 0 0 0 224 0V256H0zm555.3-67.9l-64.92-92.75L303 338.41l65 92.79a114.31 114.31 0 1 0 187.3-131.1z"]]
};
exports.faCapsules = faCapsules;
var faCar = {
  prefix: 'fad',
  iconName: 'car',
  icon: [512, 512, [], "f1b9", ["M319.5 128a48 48 0 0 1 44.57 30.17L384 208H128l19.93-49.83A48 48 0 0 1 192.5 128zM80 384a63.82 63.82 0 0 1-47.57-21.2A31.82 31.82 0 0 0 32 368v48a32 32 0 0 0 32 32h32a32 32 0 0 0 32-32v-32zm352 0h-48v32a32 32 0 0 0 32 32h32a32 32 0 0 0 32-32v-48a31.82 31.82 0 0 0-.43-5.2A63.82 63.82 0 0 1 432 384z", "M500 176h-59.88l-16.64-41.6A111.43 111.43 0 0 0 319.5 64h-127a111.47 111.47 0 0 0-104 70.4L71.87 176H12A12 12 0 0 0 .37 190.91l6 24A12 12 0 0 0 18 224h20.08A63.55 63.55 0 0 0 16 272v48a64 64 0 0 0 64 64h352a64 64 0 0 0 64-64v-48a63.58 63.58 0 0 0-22.07-48H494a12 12 0 0 0 11.64-9.09l6-24A12 12 0 0 0 500 176zm-352.07-17.83A48 48 0 0 1 192.5 128h127a48 48 0 0 1 44.57 30.17L384 208H128zM96 256c19.2 0 48 28.71 48 47.85s-28.8 15.95-48 15.95-32-12.8-32-31.9S76.8 256 96 256zm272 47.85c0-19.14 28.8-47.85 48-47.85s32 12.76 32 31.9-12.8 31.9-32 31.9-48 3.2-48-15.95z"]]
};
exports.faCar = faCar;
var faCarAlt = {
  prefix: 'fad',
  iconName: 'car-alt',
  icon: [480, 512, [], "f5de", ["M176.5,128h127a48,48,0,0,1,44.57,30.17L368,208H112l19.93-49.83A48,48,0,0,1,176.5,128ZM416,384H368v32a32,32,0,0,0,32,32h32a32,32,0,0,0,32-32V368a31.28,31.28,0,0,0-.43-5.2A63.81,63.81,0,0,1,416,384ZM64,384a63.81,63.81,0,0,1-47.57-21.2A31.28,31.28,0,0,0,16,368v48a32,32,0,0,0,32,32H80a32,32,0,0,0,32-32V384Z", "M438.66,212.33,407.49,134.4A111.47,111.47,0,0,0,303.5,64h-127a111.47,111.47,0,0,0-104,70.4L41.34,212.33A63.88,63.88,0,0,0,0,272v48a64,64,0,0,0,64,64H416a64,64,0,0,0,64-64V272A63.88,63.88,0,0,0,438.66,212.33ZM131.93,158.17A48,48,0,0,1,176.5,128h127a48,48,0,0,1,44.57,30.17L368,208H112ZM80,319.8c-19.2,0-32-12.76-32-31.9S60.8,256,80,256s48,28.71,48,47.85S99.2,319.8,80,319.8Zm320,0c-19.2,0-48,3.19-48-15.95S380.8,256,400,256s32,12.76,32,31.9S419.2,319.8,400,319.8Z"]]
};
exports.faCarAlt = faCarAlt;
var faCarBattery = {
  prefix: 'fad',
  iconName: 'car-battery',
  icon: [512, 512, [], "f5df", ["M176 64H80a16 16 0 0 0-16 16v48h128V80a16 16 0 0 0-16-16zm256 0h-96a16 16 0 0 0-16 16v48h128V80a16 16 0 0 0-16-16z", "M480 128H32a32 32 0 0 0-32 32v256a32 32 0 0 0 32 32h448a32 32 0 0 0 32-32V160a32 32 0 0 0-32-32zM192 264a8 8 0 0 1-8 8H72a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h112a8 8 0 0 1 8 8zm256 0a8 8 0 0 1-8 8h-40v40a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8v-40h-40a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h40v-40a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v40h40a8 8 0 0 1 8 8z"]]
};
exports.faCarBattery = faCarBattery;
var faCarBuilding = {
  prefix: 'fad',
  iconName: 'car-building',
  icon: [640, 512, [], "f859", ["M213.52 455.07A88.41 88.41 0 0 1 192 397.24v-28.69a89.11 89.11 0 0 1 42.09-75.84l7.55-20.71H220a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a11.79 11.79 0 0 1 9.43 4.92A131.1 131.1 0 0 1 352 162.18V32a32 32 0 0 0-32-32H32A32 32 0 0 0 0 32v464a16 16 0 0 0 16 16h205.06a59.85 59.85 0 0 1-7.54-28.69zM208 92a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12v40a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12zm-64 296a12 12 0 0 1-12 12H92a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-128a12 12 0 0 1-12 12H92a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-128a12 12 0 0 1-12 12H92a12 12 0 0 1-12-12V92a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12z", "M604.58 315.56L600 304.2l-17.87-49.08a99.92 99.92 0 0 0-93.2-63.12H375.07a99.94 99.94 0 0 0-93.24 63.12L264 304.2l-4.55 11.35a57.41 57.41 0 0 0-35.42 53v28.69a57.05 57.05 0 0 0 21.51 44.46v41.61A28.71 28.71 0 0 0 274.21 512h28.69a28.69 28.69 0 0 0 28.68-28.69V448h200.83v35.31A28.7 28.7 0 0 0 561.1 512h28.69a28.7 28.7 0 0 0 28.69-28.69V441.7A57 57 0 0 0 640 397.24v-28.69a57.39 57.39 0 0 0-35.42-52.99zM335.11 284c6.53-16.92 22.36-28 40-28h113.82c17.6 0 33.42 11.1 40 28L541 320H323zM300 407.85c-14.4 0-24-9.57-24-23.93S285.6 360 300 360s36 21.53 36 35.89-21.6 11.96-36 11.96zm264 0c-14.4 0-36 2.39-36-12S549.6 360 564 360s24 9.57 24 23.92-9.6 23.93-24 23.93z"]]
};
exports.faCarBuilding = faCarBuilding;
var faCarBump = {
  prefix: 'fad',
  iconName: 'car-bump',
  icon: [576, 512, [], "f5e0", ["M329.76 150.49l-216.3 94.28L85.53 257l-2-55.14a49.27 49.27 0 0 1 29.79-46.89l65.2-28.42 56-24.39a50.64 50.64 0 0 1 55.26 9.83zM159.8 422.4l-45.79 20a67.43 67.43 0 0 1-54.33-.15 33.22 33.22 0 0 0 1.78 5.07l20.26 45.08a33.57 33.57 0 0 0 44 16.78l30.53-13.31a32.7 32.7 0 0 0 17-43.39zm326.48-166.12A65.93 65.93 0 0 1 449.84 296L404 316l13.55 30a33.58 33.58 0 0 0 44 16.77l30.53-13.3a32.71 32.71 0 0 0 17-43.39L488.88 261a32.85 32.85 0 0 0-2.6-4.72z", "M575.67 492.44c-9.07-43.75-48.42-76.67-95.58-76.67s-86.51 32.92-95.58 76.67c-2.06 9.92 5.84 19.27 16.13 19.27h158.9c10.28 0 18.19-9.36 16.13-19.27zm-91.78-283.23l-13.5-30.09-6.76-15c-11.53-25.7-37.74-40.31-64.62-38.9l-62.63-60.3a117.56 117.56 0 0 0-128.92-22.98L86.3 94.75c-43.95 19.16-71.23 62.11-69.51 109.43l3.15 86.22a65 65 0 0 0-14.25 73.29l6.75 15 13.5 30.08C40.86 442 80.29 457.06 114 442.36L449.84 296c33.72-14.71 48.97-53.57 34.05-86.79zM102.18 375.36c-18.32 8-35.92 1.31-44-16.69s-1.25-35.31 17.06-43.29 57.92 7 66 25-20.74 26.99-39.06 34.98zM85.53 257l-2-55.14a49.27 49.27 0 0 1 29.79-46.89l121.16-52.81a50.64 50.64 0 0 1 55.26 9.82l40 38.56zm322-14.66c-18.32 8-44.45 23-52.53 5s7.28-57 25.6-64.94 35.92-1.31 44 16.68 1.2 35.22-17.12 43.21z"]]
};
exports.faCarBump = faCarBump;
var faCarBus = {
  prefix: 'fad',
  iconName: 'car-bus',
  icon: [640, 512, [], "f85a", ["M176 0C78 0 0 27.66 0 62.86v259.81A29.33 29.33 0 0 0 29.34 352H40v32a32 32 0 0 0 32 32h23.17a32 32 0 0 0 32-32v-32h67c4.63-24.49 18.73-46.08 40-59.29l18-49.48a134.44 134.44 0 0 1 9.6-19.23H192V80h81.34A14.67 14.67 0 0 1 288 94.67v98.07a131.26 131.26 0 0 1 64-30.56V62.86C352 27.66 274.05 0 176 0zM80 312a24 24 0 1 1 24-24 24 24 0 0 1-24 24zm80-88H78.66A14.67 14.67 0 0 1 64 209.33V94.67A14.67 14.67 0 0 1 78.66 80H160z", "M604.58 315.56L600 304.2l-17.87-49.08a99.92 99.92 0 0 0-93.2-63.12H375.07a99.92 99.92 0 0 0-93.23 63.12L264 304.2l-4.55 11.36a57.39 57.39 0 0 0-35.42 53v28.69a57 57 0 0 0 21.52 44.46V480a32 32 0 0 0 32 32h22.07a32 32 0 0 0 32-32v-32h200.79v32a32 32 0 0 0 32 32h22.07a32 32 0 0 0 32-32v-38.3A57 57 0 0 0 640 397.24v-28.69a57.39 57.39 0 0 0-35.42-52.99zM335.11 284c6.53-16.92 22.36-28 40-28h113.82c17.6 0 33.42 11.1 40 28L541 320H323zM300 407.85c-14.4 0-24-9.57-24-23.92S285.6 360 300 360s36 21.53 36 35.89-21.6 11.96-36 11.96zm264 0c-14.4 0-36 2.39-36-12S549.6 360 564 360s24 9.57 24 23.93-9.6 23.92-24 23.92z"]]
};
exports.faCarBus = faCarBus;
var faCarCrash = {
  prefix: 'fad',
  iconName: 'car-crash',
  icon: [640, 512, [], "f5e1", ["M545.44 262.61l-247.93-63.75 31.71-43.3a48 48 0 0 1 50.68-18.12l123 31.62a48 48 0 0 1 35.66 40.32zm-334.1-109.53l10.71-14.32 32.15-43c2.48-3.31 5.2-6.35 7.91-9.4l11.33-56.16a9 9 0 0 0-14.62-8.77l-60.4 49.71a9.06 9.06 0 0 1-13.29-2l-43.3-65.09a9.05 9.05 0 0 0-16.55 4.14l-7.55 77.86a9.05 9.05 0 0 1-10.8 8L30.25 78.61a9.05 9.05 0 0 0-8.78 14.62l49.71 60.41a9.06 9.06 0 0 1-2 13.29l-65.13 43.3a9 9 0 0 0 4.14 16.54l77.86 7.55a9 9 0 0 1 8 10.79l-15.44 76.68a9 9 0 0 0 14.62 8.77l35.2-29a94.29 94.29 0 0 1 2.41-34.39l12.42-46.37a96.46 96.46 0 0 1 68.08-67.72zM548.11 445l-46.49-12-8 31a32 32 0 0 0 23 39l31 8a32 32 0 0 0 39-23l12-46.49a32.9 32.9 0 0 0 .88-5.14 63.82 63.82 0 0 1-51.39 8.63zM207.2 357.36A63.8 63.8 0 0 1 166.4 325a32.23 32.23 0 0 0-1.71 4.93l-11.95 46.47a32 32 0 0 0 23 39l31 8a32 32 0 0 0 39-23l8-31z", "M612.8 284.4L602 201.16a111.45 111.45 0 0 0-83.18-94.08l-123-31.62a111.47 111.47 0 0 0-118.25 42.28L228 185.46A63.85 63.85 0 0 0 173.1 233l-4 15.5-8 31a64 64 0 0 0 46 77.92L548.11 445A64 64 0 0 0 626 399l8-31 4-15.5a63.84 63.84 0 0 0-25.2-68.1zM329.22 155.56a48 48 0 0 1 50.68-18.12l123 31.63a48 48 0 0 1 35.65 40.31l6.9 53.23-247.94-63.75zm-90.55 143.61c-18.59-4.78-27.81-20.33-23-38.87s20.34-27.7 38.93-22.92 39.34 39.76 34.57 58.29-31.9 8.33-50.5 3.5zm309.92 79.68c-18.59-4.78-47.28-8.86-42.51-27.4s39.81-39.17 58.4-34.39 27.82 20.33 23 38.87-20.29 27.7-38.89 22.92z"]]
};
exports.faCarCrash = faCarCrash;
var faCarGarage = {
  prefix: 'fad',
  iconName: 'car-garage',
  icon: [640, 512, [], "f5e2", ["M428.07 254.18L441.6 288H198.4l13.53-33.82A48 48 0 0 1 256.5 224h127a48 48 0 0 1 44.57 30.18zM152 448a63.71 63.71 0 0 1-40-14.06V480a32 32 0 0 0 32 32h32a32 32 0 0 0 32-32v-32zm479.76-279.77L331.67 3a24 24 0 0 0-23.34 0L8.24 168.23A16 16 0 0 0 2 190l7.8 14a16 16 0 0 0 21.79 6.22L320 51.53l288.41 158.73A16 16 0 0 0 630.2 204l7.8-14a16 16 0 0 0-6.24-21.77zM488 448h-56v32a32 32 0 0 0 32 32h32a32 32 0 0 0 32-32v-46.06A63.71 63.71 0 0 1 488 448z", "M512.49 292.91l-5.07-12.67-19.93-49.83a111.47 111.47 0 0 0-104-70.4h-127a111.46 111.46 0 0 0-104 70.4l-19.93 49.82-5.07 12.67A64 64 0 0 0 88 352v32a64 64 0 0 0 64 64h336a64 64 0 0 0 64-64v-32a64 64 0 0 0-39.51-59.09zm-300.56-38.73A48 48 0 0 1 256.5 224h127a48 48 0 0 1 44.57 30.17L441.6 288H198.4zM160 399.8c-19.2 0-32-12.76-32-31.9s12.8-31.9 32-31.9 48 28.71 48 47.85-28.8 15.95-48 15.95zm352-31.9c0 19.14-12.8 31.9-32 31.9s-48 3.19-48-15.95S460.8 336 480 336s32 12.76 32 31.9z"]]
};
exports.faCarGarage = faCarGarage;
var faCarMechanic = {
  prefix: 'fad',
  iconName: 'car-mechanic',
  icon: [512, 512, [], "f5e3", ["M144 448v32a32 32 0 0 1-32 32H80a32 32 0 0 1-32-32v-46.06A63.71 63.71 0 0 0 88 448zm175.5-224h-127a48 48 0 0 0-44.57 30.17L134.4 288h243.2l-13.53-33.82A48 48 0 0 0 319.5 224zM424 448h-56v32a32 32 0 0 0 32 32h32a32 32 0 0 0 32-32v-46.06A63.71 63.71 0 0 1 424 448zm79.91-344h-56l-24-24 24-24h56a8.09 8.09 0 0 0 7.25-11.64 79.52 79.52 0 0 0-86.85-42.87c-25.65 4.86-46.72 23-57.05 46.51H145C132.63 19.83 104.81 0 72.07 0A79.48 79.48 0 0 0 .84 44.37 8.09 8.09 0 0 0 8.09 56h56l24 24-24 24h-56a8.09 8.09 0 0 0-7.25 11.64 79.52 79.52 0 0 0 86.84 42.87c25.65-4.86 46.73-23 57-46.51H367c12.38 28.17 40.2 48 72.94 48a79.48 79.48 0 0 0 71.23-44.37 8.08 8.08 0 0 0-7.26-11.63z", "M448.49 292.91l-5.07-12.67-19.93-49.83a111.47 111.47 0 0 0-104-70.4h-127a111.46 111.46 0 0 0-104 70.4l-19.91 49.82-5.07 12.67A64 64 0 0 0 24 352v32a64 64 0 0 0 64 64h336a64 64 0 0 0 64-64v-32a64 64 0 0 0-39.51-59.09zm-300.56-38.73A48 48 0 0 1 192.5 224h127a48 48 0 0 1 44.57 30.17L377.6 288H134.4zM96 399.8c-19.2 0-32-12.76-32-31.9S76.8 336 96 336s48 28.71 48 47.85-28.8 15.95-48 15.95zm352-31.9c0 19.14-12.8 31.9-32 31.9s-48 3.19-48-15.95S396.8 336 416 336s32 12.76 32 31.9z"]]
};
exports.faCarMechanic = faCarMechanic;
var faCarSide = {
  prefix: 'fad',
  iconName: 'car-side',
  icon: [640, 512, [], "f5e4", ["M144 320a80 80 0 1 0 80 80 80 80 0 0 0-80-80zm352 0a80 80 0 1 0 80 80 80 80 0 0 0-80-80zM369.24 96H280v96h166zm-252.31 96H232V96h-76.67z", "M16 384h17.14a112 112 0 0 1 221.72 0h130.28a112 112 0 0 1 221.72 0H624a16 16 0 0 0 16-16v-80a96 96 0 0 0-96-96h-16L419.22 56a64 64 0 0 0-50-24H155.33a64 64 0 0 0-59.42 40.23L48 194.26A63.85 63.85 0 0 0 0 256v112a16 16 0 0 0 16 16zM280 96h89.24L446 192H280zm-124.67 0H232v96H116.93z"]]
};
exports.faCarSide = faCarSide;
var faCarTilt = {
  prefix: 'fad',
  iconName: 'car-tilt',
  icon: [640, 512, [], "f5e5", ["M519.94 131a32.28 32.28 0 0 1 4 3.37l33.94 33.94a32 32 0 0 1 0 45.26l-22.63 22.62a32 32 0 0 1-45.25 0l-22.63-22.62 33.94-33.95A63.78 63.78 0 0 0 519.94 131zM293.57 68a48 48 0 0 0-52.85 10.18L150.92 168a48 48 0 0 0-10.18 52.85l21.14 49.32 181-181zM624 448H317.27a32 32 0 0 0-8.27-30.79l-22.63-22.62-33.94 33.94a63.86 63.86 0 0 1-48.62 18.65c.2.27.4.55.61.82H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h608a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z", "M501.29 89.11l-22.63-22.62-11.31-11.32a63.86 63.86 0 0 0-71.42-13L318.78 9.15A111.44 111.44 0 0 0 195.47 32.9l-89.8 89.8A111.47 111.47 0 0 0 81.91 246L115 323.16a63.88 63.88 0 0 0 13 71.43l11.31 11.31 22.63 22.63a64 64 0 0 0 90.51 0l248.9-248.91a64 64 0 0 0-.06-90.51zm-283 282.71c-13.58 13.58-31.65 13.6-45.19.07s-13.5-31.61.07-45.18 54.24-13.64 67.78-.11-9.07 31.64-22.64 45.22zm-56.41-101.69l-21.14-49.32A48 48 0 0 1 150.92 168l89.8-89.81A48 48 0 0 1 293.57 68l49.33 21.11zm282.7-124.59c-13.58 13.58-31.69 36.2-45.22 22.67s-13.47-54.2.11-67.78 31.65-13.6 45.18-.07 13.51 31.64-.07 45.18z"]]
};
exports.faCarTilt = faCarTilt;
var faCarWash = {
  prefix: 'fad',
  iconName: 'car-wash',
  icon: [464, 512, [], "f5e6", ["M349.33,85.33C349.33,61.77,392,0,392,0s42.67,61.77,42.67,85.33a42.67,42.67,0,0,1-85.34,0ZM400,448H344v32a32,32,0,0,0,32,32h32a32,32,0,0,0,32-32V433.94A63.67,63.67,0,0,1,400,448ZM232,128a42.66,42.66,0,0,0,42.67-42.65v0C274.67,61.76,232,0,232,0s-42.67,61.77-42.67,85.33A42.69,42.69,0,0,0,232,128ZM340.07,254.18A48,48,0,0,0,295.5,224h-127a48,48,0,0,0-44.57,30.17L110.4,288H353.6ZM72,128a42.66,42.66,0,0,0,42.67-42.65v0C114.67,61.76,72,0,72,0S29.33,61.77,29.33,85.33A42.69,42.69,0,0,0,72,128ZM64,448a63.67,63.67,0,0,1-40-14.06V480a32,32,0,0,0,32,32H88a32,32,0,0,0,32-32V448Z", "M424.49,292.91l-5.07-12.67-19.93-49.83a111.47,111.47,0,0,0-104-70.4h-127a111.45,111.45,0,0,0-104,70.4L44.58,280.23,39.51,292.9A64,64,0,0,0,0,352v32a64,64,0,0,0,64,64H400a64,64,0,0,0,64-64V352A64,64,0,0,0,424.49,292.91ZM123.93,254.18A48,48,0,0,1,168.5,224h127a48,48,0,0,1,44.57,30.17L353.6,288H110.4ZM72,399.8c-19.2,0-32-12.76-32-31.9S52.8,336,72,336s48,28.71,48,47.85S91.2,399.8,72,399.8Zm352-31.9c0,19.14-12.8,31.9-32,31.9s-48,3.19-48-15.95S372.8,336,392,336,424,348.76,424,367.9Z"]]
};
exports.faCarWash = faCarWash;
var faCaretCircleDown = {
  prefix: 'fad',
  iconName: 'caret-circle-down',
  icon: [512, 512, [], "f32d", ["M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm131.5 220.5l-123 123a12 12 0 0 1-17 0l-123-123A12 12 0 0 1 133 208h246a12 12 0 0 1 8.5 20.5z", "M387.5 228.5l-123 123a12 12 0 0 1-17 0l-123-123A12 12 0 0 1 133 208h246a12 12 0 0 1 8.5 20.5z"]]
};
exports.faCaretCircleDown = faCaretCircleDown;
var faCaretCircleLeft = {
  prefix: 'fad',
  iconName: 'caret-circle-left',
  icon: [512, 512, [], "f32e", ["M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm48 371a12 12 0 0 1-20.5 8.5l-123-123a12 12 0 0 1 0-17l123-123A12 12 0 0 1 304 133z", "M304 379a12 12 0 0 1-20.5 8.5l-123-123a12 12 0 0 1 0-17l123-123A12 12 0 0 1 304 133z"]]
};
exports.faCaretCircleLeft = faCaretCircleLeft;
var faCaretCircleRight = {
  prefix: 'fad',
  iconName: 'caret-circle-right',
  icon: [512, 512, [], "f330", ["M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm95.5 256.5l-123 123A12 12 0 0 1 208 379V133a12 12 0 0 1 20.5-8.5l123 123a12 12 0 0 1 0 17z", "M351.5 264.5l-123 123A12 12 0 0 1 208 379V133a12 12 0 0 1 20.5-8.5l123 123a12 12 0 0 1 0 17z"]]
};
exports.faCaretCircleRight = faCaretCircleRight;
var faCaretCircleUp = {
  prefix: 'fad',
  iconName: 'caret-circle-up',
  icon: [512, 512, [], "f331", ["M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm123 296H133a12 12 0 0 1-8.5-20.5l123-123a12 12 0 0 1 17 0l123 123A12 12 0 0 1 379 304z", "M379 304H133a12 12 0 0 1-8.5-20.5l123-123a12 12 0 0 1 17 0l123 123A12 12 0 0 1 379 304z"]]
};
exports.faCaretCircleUp = faCaretCircleUp;
var faCaretDown = {
  prefix: 'fad',
  iconName: 'caret-down',
  icon: [320, 512, [], "f0d7", ["M160 168h128.92c17.85 0 26.8 22.48 14.17 35.63L174.17 337.89c-.26.28-.53.54-.8.8A19.41 19.41 0 0 1 160 344z", "M160 344a19.41 19.41 0 0 1-13.37-5.29c-.27-.26-.54-.52-.8-.8L16.91 203.63C4.28 190.48 13.23 168 31.08 168H160z"]]
};
exports.faCaretDown = faCaretDown;
var faCaretLeft = {
  prefix: 'fad',
  iconName: 'caret-left',
  icon: [192, 512, [], "f0d9", ["M184 256v128.91c0 17.85-22.48 26.8-35.63 14.17L14.1 270.16l-.8-.8A19.41 19.41 0 0 1 8 256z", "M8 256a19.39 19.39 0 0 1 5.29-13.36c.26-.28.53-.55.8-.81L148.36 112.9c13.15-12.63 35.63-3.68 35.63 14.17V256z"]]
};
exports.faCaretLeft = faCaretLeft;
var faCaretRight = {
  prefix: 'fad',
  iconName: 'caret-right',
  icon: [192, 512, [], "f0da", ["M184 256a19.41 19.41 0 0 1-5.29 13.37l-.8.8L43.64 399.08C30.49 411.71 8 402.76 8 384.91V256z", "M8 256V127.07c0-17.85 22.48-26.8 35.63-14.17L177.9 241.82c.27.26.54.53.8.81A19.39 19.39 0 0 1 184 256z"]]
};
exports.faCaretRight = faCaretRight;
var faCaretSquareDown = {
  prefix: 'fad',
  iconName: 'caret-square-down',
  icon: [448, 512, [], "f150", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-51.37 182.31L232.06 348.16a10.38 10.38 0 0 1-16.12 0L99.37 214.31C92.17 206 97.28 192 107.43 192h233.14c10.15 0 15.26 14 8.06 22.31z", "M348.63 214.31L232.06 348.16a10.38 10.38 0 0 1-16.12 0L99.37 214.31C92.17 206 97.28 192 107.43 192h233.14c10.15 0 15.26 14 8.06 22.31z"]]
};
exports.faCaretSquareDown = faCaretSquareDown;
var faCaretSquareLeft = {
  prefix: 'fad',
  iconName: 'caret-square-left',
  icon: [448, 512, [], "f191", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zM288 372.6c0 10.14-14.07 15.21-22.29 8L131.82 264a10.38 10.38 0 0 1 0-16.08l133.89-116.57c8.22-7.16 22.29-2.09 22.29 8.05z", "M288 372.6c0 10.14-14.07 15.21-22.29 8L131.82 264a10.38 10.38 0 0 1 0-16.08l133.89-116.57c8.22-7.16 22.29-2.09 22.29 8.05z"]]
};
exports.faCaretSquareLeft = faCaretSquareLeft;
var faCaretSquareRight = {
  prefix: 'fad',
  iconName: 'caret-square-right',
  icon: [448, 512, [], "f152", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-83.82 232L182.29 380.65c-8.22 7.16-22.29 2.09-22.29-8V139.4c0-10.14 14.06-15.21 22.29-8.05L316.18 248a10.38 10.38 0 0 1 0 16z", "M316.18 264L182.29 380.65c-8.22 7.16-22.29 2.09-22.29-8V139.4c0-10.14 14.07-15.21 22.29-8.05L316.18 248a10.38 10.38 0 0 1 0 16z"]]
};
exports.faCaretSquareRight = faCaretSquareRight;
var faCaretSquareUp = {
  prefix: 'fad',
  iconName: 'caret-square-up',
  icon: [448, 512, [], "f151", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-59.4 288H107.4c-10.14 0-15.21-14.07-8.05-22.29L216 163.82a10.38 10.38 0 0 1 16.08 0l116.57 133.89c7.16 8.22 2.09 22.29-8.05 22.29z", "M340.6 320H107.4c-10.14 0-15.21-14.07-8.05-22.29L216 163.82a10.38 10.38 0 0 1 16.08 0l116.57 133.89c7.16 8.22 2.09 22.29-8.05 22.29z"]]
};
exports.faCaretSquareUp = faCaretSquareUp;
var faCaretUp = {
  prefix: 'fad',
  iconName: 'caret-up',
  icon: [320, 512, [], "f0d8", ["M160 168a19.41 19.41 0 0 1 13.37 5.29c.27.26.54.53.8.8l128.92 134.26c12.63 13.15 3.68 35.65-14.17 35.65H160z", "M160 344H31.08c-17.85 0-26.8-22.48-14.17-35.63l128.92-134.28c.26-.27.53-.54.8-.8A19.41 19.41 0 0 1 160 168z"]]
};
exports.faCaretUp = faCaretUp;
var faCarrot = {
  prefix: 'fad',
  iconName: 'carrot',
  icon: [512, 512, [], "f787", ["M298.15 156.6c-52.7-25.7-114.5-10.5-150.2 32.8l55.2 55.2a16 16 0 1 1-22.6 22.6l-50.2-50.2L2.25 479.7a22.68 22.68 0 0 0 0 19.7 22.48 22.48 0 0 0 30 10.3l133.6-65.2-49.2-49.2a15.87 15.87 0 0 1 0-22.6 16.06 16.06 0 0 1 22.6 0l57 57 102-49.8a124.23 124.23 0 0 0-.1-223.3z", "M390.25 121.7c40.7-19.5 88.8-9.4 121.7 30.3-41.6 50.3-107.5 52.5-151.9 7.9l-8-8C307.45 107.5 309.65 41.7 360 0c39.7 32.9 49.8 81 30.3 121.7z"]]
};
exports.faCarrot = faCarrot;
var faCars = {
  prefix: 'fad',
  iconName: 'cars',
  icon: [640, 512, [], "f85b", ["M252.13 243.23A131.77 131.77 0 0 1 375.07 160h38.41a57.49 57.49 0 0 0-32.9-36.44L376 112.2l-17.84-49.08A99.92 99.92 0 0 0 264.93 0H151.07a99.92 99.92 0 0 0-93.23 63.12L40 112.2l-4.55 11.36A57.39 57.39 0 0 0 0 176.55v28.69a57 57 0 0 0 21.52 44.46V288a32 32 0 0 0 32 32h22.07a32 32 0 0 0 32-32v-32h139.88zM111.11 92c6.53-16.92 22.36-28 40-28h113.82c17.6 0 33.42 11.1 40 28L317 128H99zM76 215.85c-14.4 0-24-9.57-24-23.92S61.6 168 76 168s36 21.53 36 35.89-21.6 11.96-36 11.96z", "M604.58 315.56L600 304.2l-17.87-49.08a99.92 99.92 0 0 0-93.2-63.12H375.07a99.92 99.92 0 0 0-93.23 63.12L264 304.2l-4.55 11.36a57.39 57.39 0 0 0-35.42 53v28.69a57 57 0 0 0 21.52 44.46V480a32 32 0 0 0 32 32h22.07a32 32 0 0 0 32-32v-32h200.79v32a32 32 0 0 0 32 32h22.07a32 32 0 0 0 32-32v-38.3A57 57 0 0 0 640 397.24v-28.69a57.39 57.39 0 0 0-35.42-52.99zM335.11 284c6.53-16.92 22.36-28 40-28h113.82c17.6 0 33.42 11.1 40 28L541 320H323zM300 407.85c-14.4 0-24-9.57-24-23.93S285.6 360 300 360s36 21.53 36 35.89-21.6 11.96-36 11.96zm264 0c-14.4 0-36 2.39-36-12S549.6 360 564 360s24 9.57 24 23.92-9.6 23.93-24 23.93z"]]
};
exports.faCars = faCars;
var faCartArrowDown = {
  prefix: 'fad',
  iconName: 'cart-arrow-down',
  icon: [576, 512, [], "f218", ["M552 64H159.21l52.36 256h293.15a24 24 0 0 0 23.4-18.68l47.27-208a24 24 0 0 0-18.08-28.72A23.69 23.69 0 0 0 552 64zM444.42 196.48l-67.83 72a12.27 12.27 0 0 1-17.18 0l-67.83-72c-7.65-7.55-2.23-20.48 8.59-20.48h43.54v-52a12.07 12.07 0 0 1 12.14-12h24.29a12.07 12.07 0 0 1 12.15 12v52h43.54c10.82 0 16.24 12.93 8.59 20.48z", "M504.42 405.6l5.52-24.28a24 24 0 0 0-23.4-29.32H218.12L150 19.19A24 24 0 0 0 126.53 0H24A24 24 0 0 0 0 24v16a24 24 0 0 0 24 24h69.88l70.25 343.43a56 56 0 1 0 67.05 8.57h209.64a56 56 0 1 0 63.6-10.4zm-145-137.12a12.27 12.27 0 0 0 17.18 0l67.83-72c7.65-7.55 2.23-20.48-8.59-20.48h-43.55v-52a12.07 12.07 0 0 0-12.15-12h-24.29a12.07 12.07 0 0 0-12.14 12v52h-43.54c-10.82 0-16.24 12.93-8.59 20.48z"]]
};
exports.faCartArrowDown = faCartArrowDown;
var faCartPlus = {
  prefix: 'fad',
  iconName: 'cart-plus',
  icon: [576, 512, [], "f217", ["M552 64H159.21l52.36 256h293.15a24 24 0 0 0 23.4-18.68l47.27-208a24 24 0 0 0-18.08-28.72A23.69 23.69 0 0 0 552 64zM448 200a16 16 0 0 1-16 16h-40v40a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-40h-40a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16h40v-40a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v40h40a16 16 0 0 1 16 16z", "M504.42 405.6l5.52-24.28a24 24 0 0 0-23.4-29.32H218.12L150 19.19A24 24 0 0 0 126.53 0H24A24 24 0 0 0 0 24v16a24 24 0 0 0 24 24h69.88l70.25 343.43a56 56 0 1 0 67.05 8.57h209.64a56 56 0 1 0 63.6-10.4zM304 216h40v40a16 16 0 0 0 16 16h16a16 16 0 0 0 16-16v-40h40a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16h-40v-40a16 16 0 0 0-16-16h-16a16 16 0 0 0-16 16v40h-40a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16z"]]
};
exports.faCartPlus = faCartPlus;
var faCashRegister = {
  prefix: 'fad',
  iconName: 'cash-register',
  icon: [512, 512, [], "f788", ["M296.1 232a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h16a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16zm-48 128h16a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16h-16a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16zm-16-112a16 16 0 0 0-16-16h-16a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h16a16 16 0 0 0 16-16zm-96 0a16 16 0 0 0-16-16h-16a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h16a16 16 0 0 0 16-16zm48 96v-16a16 16 0 0 0-16-16h-16a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h16a16 16 0 0 0 16-16zm160 88h-176a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h176a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8zm16-120h-16a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h16a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16zm48-80h-16a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h16a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16zM144 192l64 .1v-64h96a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16H48a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16h96zM82 84V44h188v40z", "M511.2 378.8l-26.7-160a32 32 0 0 0-31.6-26.7L208 192v.06l-47.54-.06H59.2a32.09 32.09 0 0 0-31.6 26.7L.9 378.7a62 62 0 0 0-.9 10.5V480a32 32 0 0 0 32 32h448a32 32 0 0 0 32-32v-90.7a53.09 53.09 0 0 0-.8-10.5zM280.1 248a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v16a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16zm-32 64h16a16 16 0 0 1 16 16v16a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16zm-64-64a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v16a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16zm-64 32h-16a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v16a16 16 0 0 1-16 16zm16 64v-16a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v16a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16zm216 112a8 8 0 0 1-8 8h-176a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h176a8 8 0 0 1 8 8zm24-112a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16zm48-80a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16z"]]
};
exports.faCashRegister = faCashRegister;
var faCassetteTape = {
  prefix: 'fad',
  iconName: 'cassette-tape',
  icon: [512, 512, [], "f8ab", ["M147.78 384l-32 64h280.44l-32-64zM464 64H48a48 48 0 0 0-48 48v288a48 48 0 0 0 48 48h32l48-96h256l48 96h32a48 48 0 0 0 48-48V112a48 48 0 0 0-48-48zm-96 224H144a64 64 0 0 1 0-128h224a64 64 0 0 1 0 128z", "M368 160H144a64 64 0 0 0 0 128h224a64 64 0 0 0 0-128zm-224 80a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm61.73 0a57.52 57.52 0 0 0 0-32h100.54a57.52 57.52 0 0 0 0 32zM368 240a16 16 0 1 1 16-16 16 16 0 0 1-16 16z"]]
};
exports.faCassetteTape = faCassetteTape;
var faCat = {
  prefix: 'fad',
  iconName: 'cat',
  icon: [512, 512, [], "f6be", ["M448 96h-64l-64-64v134.4a96 96 0 0 0 192 0V32zm-72 80a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm80 0a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm-165.41 16a204.07 204.07 0 0 0-34.59 2.89V272l-43.15-64.73a183.93 183.93 0 0 0-44.37 26.17L192 304l-60.94-30.47L128 272v-80a96.1 96.1 0 0 0-96-96 32 32 0 0 0 0 64 32 32 0 0 1 32 32v256a64.06 64.06 0 0 0 64 64h176a16 16 0 0 0 16-16v-16a32 32 0 0 0-32-32h-32l128-96v144a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V289.86a126.78 126.78 0 0 1-32 4.54c-61.81 0-113.52-44.05-125.41-102.4z", "M376 144a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm80 0a16 16 0 1 0 16 16 16 16 0 0 0-16-16zM131.06 273.53L192 304l-23.52-70.56a192.06 192.06 0 0 0-37.42 40.09zM256 272v-77.11a198.62 198.62 0 0 0-43.15 12.38z"]]
};
exports.faCat = faCat;
var faCauldron = {
  prefix: 'fad',
  iconName: 'cauldron',
  icon: [448, 512, [], "f6bf", ["M160 0a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm112 32a48 48 0 1 0 48 48 48 48 0 0 0-48-48zM96 288a32 32 0 0 0 64 0V160H96z", "M434 224h-19.79c21.4 38.52 33.79 81.28 33.79 121.6 0 39.08-11.82 70.65-32 95.53V488a24 24 0 0 1-48 0v-7.49C329.05 501.81 278.86 512 224 512s-105-10.19-144-31.49V488a24 24 0 0 1-48 0v-46.87C11.82 416.25 0 384.68 0 345.6c0-40.32 12.39-83.08 33.79-121.6H14c-7.73 0-14-5.37-14-12v-40c0-6.63 6.27-12 14-12h82v128a32 32 0 0 0 64 0V160h274c7.73 0 14 5.37 14 12v40c0 6.63-6.27 12-14 12z"]]
};
exports.faCauldron = faCauldron;
var faCctv = {
  prefix: 'fad',
  iconName: 'cctv',
  icon: [576, 512, [], "f8ac", ["M564.8 259.9l-57.2-25.15-153.78 96.11 150.68 66.25a18.74 18.74 0 0 0 24.69-9.61l45.22-102.91a18.74 18.74 0 0 0-9.61-24.69zM137.81 400H64v-32a16 16 0 0 0-16-16H16a16 16 0 0 0-16 16v128a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32h96a32 32 0 0 0 30-20.77l46.85-124.94-59.17-24.51z", "M4.23 183L99.57 16.13a32 32 0 0 1 39.67-13.84l378.2 166.29c24.33 9.73 27.29 43 5.08 56.85l-189.29 118.3a32 32 0 0 1-27.89 2.94L21.08 228.93A32 32 0 0 1 4.23 183z"]]
};
exports.faCctv = faCctv;
var faCertificate = {
  prefix: 'fad',
  iconName: 'certificate',
  icon: [512, 512, [], "f0a3", ["M458.63 255.92l46-45c13.71-13 7.34-36-10.66-40.34l-62.66-16 17.69-62c5-17.85-11.84-34.67-29.69-29.67l-62 17.65-16-62.67C337.09.2 313.75-6.28 301 7.23l-45 46.35-45-46.35C198.37-6.13 175 0 170.69 17.89l-16 62.67-62-17.65c-17.82-5-34.63 11.82-29.69 29.67l17.69 62-62.66 16c-18 4.3-24.37 27.36-10.66 40.34l46 45-46 45C-6.31 313.91.06 337 18.06 341.27l62.66 16-17.72 62c-5 17.84 11.84 34.67 29.69 29.67l62-17.67 16 62.67c4.43 18.58 27.68 24 40.31 10.67l45-46 45 46c12.5 13.49 36 7.49 40.31-10.67l16-62.67 62 17.67c17.85 5 34.66-11.83 29.66-29.67l-17.66-62 62.66-16c18-4.31 24.37-27.38 10.66-40.35zm-39.84 32.79a12 12 0 0 1-5.43 20.2l-45.95 11.73 12.71 44.63a12 12 0 0 1-14.83 14.83l-44.58-12.71-11.74 46a12 12 0 0 1-20.2 5.43L256 385.34l-32.75 33.47a12 12 0 0 1-20.25-5.43l-11.74-46-44.53 12.72a12 12 0 0 1-14.83-14.83l12.74-44.63-46-11.73a12 12 0 0 1-5.43-20.2L126.67 256 93.2 223.21A12 12 0 0 1 98.63 203l46-11.73-12.73-44.67a12 12 0 0 1 14.83-14.83l44.61 12.71L203 99a12 12 0 0 1 20.24-5.4L256 127.39l32.82-33.81A12 12 0 0 1 309.06 99l11.61 45.5 44.58-12.7a12 12 0 0 1 14.83 14.83l-12.71 44.63 46 11.74a12 12 0 0 1 5.43 20.2L385.34 256z", "M418.79 288.71a12 12 0 0 1-5.43 20.2l-45.95 11.73 12.71 44.63a12 12 0 0 1-14.83 14.83l-44.58-12.71-11.74 46a12 12 0 0 1-20.2 5.43L256 385.34l-32.75 33.47a12 12 0 0 1-20.25-5.43l-11.74-46-44.53 12.72a12 12 0 0 1-14.83-14.83l12.74-44.63-46-11.73a12 12 0 0 1-5.43-20.2L126.67 256 93.2 223.21A12 12 0 0 1 98.63 203l46-11.73-12.73-44.67a12 12 0 0 1 14.83-14.83l44.61 12.71L203 99a12 12 0 0 1 20.24-5.4L256 127.39l32.82-33.81A12 12 0 0 1 309.06 99l11.61 45.5 44.58-12.7a12 12 0 0 1 14.83 14.83l-12.71 44.63 46 11.74a12 12 0 0 1 5.43 20.2L385.34 256z"]]
};
exports.faCertificate = faCertificate;
var faChair = {
  prefix: 'fad',
  iconName: 'chair',
  icon: [448, 512, [], "f6c0", ["M112 256H64V128A128 128 0 0 1 192 0h64a128 128 0 0 1 128 128v128h-48V128c0-29.5-16.2-55-40-68.9V256h-48V48h-48v208h-48V59.1C128.24 73 112 98.5 112 128z", "M416.05 384v112a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V384H96v112a16 16 0 0 1-16 16H48a16 16 0 0 1-16-16V384a32.07 32.07 0 0 1-30.4-42.1l10.7-32A32 32 0 0 1 42.71 288h362.54a32 32 0 0 1 30.4 21.9l10.71 32a32 32 0 0 1-30.31 42.1z"]]
};
exports.faChair = faChair;
var faChairOffice = {
  prefix: 'fad',
  iconName: 'chair-office',
  icon: [448, 512, [], "f6c1", ["M352 256H96V64a64 64 0 0 1 64-64h128a64 64 0 0 1 64 64z", "M64 224v-64a32 32 0 0 0-64 0v64a32 32 0 0 0 64 0zm352-96a32 32 0 0 0-32 32v64a32 32 0 0 0 64 0v-64a32 32 0 0 0-32-32zm-12.33 181.88A32 32 0 0 0 373.31 288H74.69a32 32 0 0 0-30.36 21.88l-10.67 32A32 32 0 0 0 64 384h128v67.36c-28.27 6-51 19.69-61.85 37.21-6.41 10.34 2.41 23.43 15 23.43h157.68c12.61 0 21.44-13.09 15-23.43-10.83-17.52-33.57-31.2-61.83-37.21V384h128a32 32 0 0 0 30.36-42.12z"]]
};
exports.faChairOffice = faChairOffice;
var faChalkboard = {
  prefix: 'fad',
  iconName: 'chalkboard',
  icon: [640, 512, [], "f51b", ["M624 448h-16V40a40 40 0 0 0-40-40H72a40 40 0 0 0-40 40v408H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h608a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-528 0V64h448v384z", "M544 64v384h-64v-64H288v64H96V64z"]]
};
exports.faChalkboard = faChalkboard;
var faChalkboardTeacher = {
  prefix: 'fad',
  iconName: 'chalkboard-teacher',
  icon: [640, 512, [], "f51c", ["M640 49.59v316.82c0 27.34-21.53 49.59-48 49.59H343.79c-.9-2.53-1.86-5.05-2.9-7.54A144.52 144.52 0 0 0 298.51 352H576V64H224v49.1a127 127 0 0 0-59.46-17h-.33c-1.4 0-2.8-.08-4.21-.08V49.59C160 22.25 181.53 0 208 0h384c26.47 0 48 22.25 48 49.59z", "M208 352a22.88 22.88 0 0 0-7.06 1.09A131.91 131.91 0 0 1 160 360a132 132 0 0 1-40.95-6.91 22.82 22.82 0 0 0-7-1.09A112 112 0 0 0 0 464.62C.14 490.88 21.73 512 48 512h224c26.27 0 47.86-21.12 48-47.38A112 112 0 0 0 208 352zm-48-32a96 96 0 1 0-96-96 96 96 0 0 0 96 96zm64-256v49.09a129 129 0 0 1 26.51 20.4 128 128 0 0 1 0 181 132.13 132.13 0 0 1-10.14 9.14A143.89 143.89 0 0 1 298.51 352H384v-64h128v64h64V64z"]]
};
exports.faChalkboardTeacher = faChalkboardTeacher;
var faChargingStation = {
  prefix: 'fad',
  iconName: 'charging-station',
  icon: [576, 512, [], "f5e7", ["M256 0H96a64 64 0 0 0-64 64v384h288V64a64 64 0 0 0-64-64zm4.09 175.76l-93.7 139A12.41 12.41 0 0 1 156 320c-7.67 0-13.47-6.28-11.67-12.92l23-83.08H108c-7.25 0-12.85-5.59-11.89-11.89l16-107C112.9 99.9 118 96 124 96h68c7.88 0 13.62 6.54 11.6 13.21L192 160h57.7c9.24 0 15.01 8.78 10.39 15.76z", "M336 448H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM108 224h59.33l-23 83.08c-1.8 6.64 4 12.92 11.67 12.92a12.41 12.41 0 0 0 10.39-5.24l93.7-139c4.62-7-1.15-15.76-10.39-15.76H192l11.6-50.79c2-6.67-3.72-13.21-11.6-13.21h-68c-6 0-11.1 3.9-11.89 9.11l-16 107c-.96 6.3 4.64 11.89 11.89 11.89zm452-96h-16V80a16 16 0 0 0-32 0v48h-32V80a16 16 0 0 0-32 0v48h-16a16 16 0 0 0-16 16v32c0 35.76 23.62 65.69 56 75.93v118.49c0 13.95-9.5 26.92-23.26 29.19A28 28 0 0 1 416 372v-28a88 88 0 0 0-88-88h-8v48h8a40 40 0 0 1 40 40v24.61c0 39.67 28.92 75.16 68.41 79a76.08 76.08 0 0 0 83.22-68.18c.24-2.47.37-4.95.37-7.43V251.93c32.38-10.24 56-40.17 56-75.93v-32a16 16 0 0 0-16-16z"]]
};
exports.faChargingStation = faChargingStation;
var faChartArea = {
  prefix: 'fad',
  iconName: 'chart-area',
  icon: [512, 512, [], "f1fe", ["M500 384a12 12 0 0 1 12 12v40a12 12 0 0 1-12 12H12a12 12 0 0 1-12-12V76a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12v308z", "M390.1 164.2L480 352H96V248l86.8-144.7a12 12 0 0 1 19.9-1L288 216l84.7-56.5a12 12 0 0 1 17.4 4.7z"]]
};
exports.faChartArea = faChartArea;
var faChartBar = {
  prefix: 'fad',
  iconName: 'chart-bar',
  icon: [512, 512, [], "f080", ["M512 400v32a16 16 0 0 1-16 16H32a32 32 0 0 1-32-32V80a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16v304h432a16 16 0 0 1 16 16z", "M275.2 96h-38.4c-6.4 0-12.8 6.4-12.8 12.8v198.4c0 6.4 6.4 12.8 12.8 12.8h38.4c6.4 0 12.8-6.4 12.8-12.8V108.8c0-6.4-6.4-12.8-12.8-12.8zm-96 128h-38.4c-6.4 0-12.8 6.4-12.8 12.8v70.4c0 6.4 6.4 12.8 12.8 12.8h38.4c6.4 0 12.8-6.4 12.8-12.8v-70.4c0-6.4-6.4-12.8-12.8-12.8zm288-160h-38.4c-6.4 0-12.8 6.4-12.8 12.8v230.4c0 6.4 6.4 12.8 12.8 12.8h38.4c6.4 0 12.8-6.4 12.8-12.8V76.8c0-6.4-6.4-12.8-12.8-12.8zm-96 96h-38.4c-6.4 0-12.8 6.4-12.8 12.8v134.4c0 6.4 6.4 12.8 12.8 12.8h38.4c6.4 0 12.8-6.4 12.8-12.8V172.8c0-6.4-6.4-12.8-12.8-12.8z"]]
};
exports.faChartBar = faChartBar;
var faChartLine = {
  prefix: 'fad',
  iconName: 'chart-line',
  icon: [512, 512, [], "f201", ["M512 400v32a16 16 0 0 1-16 16H32a32 32 0 0 1-32-32V80a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16v304h432a16 16 0 0 1 16 16z", "M480 112v118.05c0 21.38-25.85 32.09-41 17l-32.4-32.4-96 96a32 32 0 0 1-45.25 0L192 237.25l-46.06 46.07a16 16 0 0 1-22.63 0l-22.62-22.62a16 16 0 0 1 0-22.63l68.69-68.69a32 32 0 0 1 45.25 0L288 242.75l73.37-73.38L329 137c-15.12-15.12-4.41-41 17-41h118a16 16 0 0 1 16 16z"]]
};
exports.faChartLine = faChartLine;
var faChartLineDown = {
  prefix: 'fad',
  iconName: 'chart-line-down',
  icon: [512, 512, [], "f64d", ["M512 400v32a16 16 0 0 1-16 16H32a32 32 0 0 1-32-32V80a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16v304h432a16 16 0 0 1 16 16z", "M464 320H346c-21.38 0-32.09-25.85-17-41l32.4-32.4-73.4-73.35-73.37 73.38a32 32 0 0 1-45.25 0l-68.69-68.69a16 16 0 0 1 0-22.63l22.62-22.62a16 16 0 0 1 22.63 0L192 178.75l73.38-73.38a32 32 0 0 1 45.25 0l96 96L439 169c15.12-15.12 41-4.41 41 17v118a16 16 0 0 1-16 16z"]]
};
exports.faChartLineDown = faChartLineDown;
var faChartNetwork = {
  prefix: 'fad',
  iconName: 'chart-network',
  icon: [640, 512, [], "f78a", ["M64 240a64 64 0 1 0 64 64 64.06 64.06 0 0 0-64-64zm88 80h48v-32h-48zm294.4-106.8l19.2 25.6 48-36-19.2-25.6zM576 64a64 64 0 1 0 64 64 64.06 64.06 0 0 0-64-64z", "M576 384a63.84 63.84 0 0 0-38.3 13l-96-57.6a109.91 109.91 0 0 0 6.3-35.5 111.94 111.94 0 0 0-112-112 108.64 108.64 0 0 0-24.4 2.9l-40.8-87.4A63.84 63.84 0 1 0 224 128c1.1 0 2.1-.3 3.2-.3l41 87.8C241.5 235.9 224 267.8 224 304a111.71 111.71 0 0 0 193.2 76.7l95.8 57.5a63.87 63.87 0 1 0 63-54.2zm-240-32a48 48 0 1 1 48-48 48 48 0 0 1-48 48z"]]
};
exports.faChartNetwork = faChartNetwork;
var faChartPie = {
  prefix: 'fad',
  iconName: 'chart-pie',
  icon: [544, 512, [], "f200", ["M379.86 443.87c6.85 6.85 6.33 18.48-1.57 24.08A238.14 238.14 0 0 1 243 512C114.83 513.59 4.5 408.51.14 280.37-4.1 155.6 87 51.49 206.16 34.65c9.45-1.34 17.84 6.51 17.84 16.06V288z", "M512 223.2C503.72 103.74 408.26 8.28 288.8 0 279.68-.59 272 7.1 272 16.24V240h223.77c9.14 0 16.82-7.68 16.23-16.8zm15.79 64.8H290.5l158 158c6 6 16 6.53 22.19.68a239.5 239.5 0 0 0 73.13-140.86c1.37-9.43-6.48-17.82-16.03-17.82z"]]
};
exports.faChartPie = faChartPie;
var faChartPieAlt = {
  prefix: 'fad',
  iconName: 'chart-pie-alt',
  icon: [512, 512, [], "f64e", ["M461.29 288c9.54 0 17.39 8.39 16.06 17.84C460.53 424.92 356.57 516 231.93 511.87 107.91 507.8 4.2 404.1.13 280.07c-4.09-124.64 87-228.6 206-245.42 9.48-1.33 17.87 6.51 17.87 16.06V288z", "M512 223.2c.62 9.11-7 16.8-16.19 16.8H272V16.24C272 7.1 279.68-.59 288.8 0 408.26 8.28 503.72 103.74 512 223.2z"]]
};
exports.faChartPieAlt = faChartPieAlt;
var faChartScatter = {
  prefix: 'fad',
  iconName: 'chart-scatter',
  icon: [512, 512, [], "f7ee", ["M512 400v32a16 16 0 0 1-16 16H32a32 32 0 0 1-32-32V80a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16v304h432a16 16 0 0 1 16 16z", "M160 256a32 32 0 1 0 32 32 32 32 0 0 0-32-32zM416 96a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm-224 0a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm192 160a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm-96-64a32 32 0 1 0 32 32 32 32 0 0 0-32-32z"]]
};
exports.faChartScatter = faChartScatter;
var faCheck = {
  prefix: 'fad',
  iconName: 'check',
  icon: [512, 512, [], "f00c", ["M504.5 144.42L264.75 385.5 192 312.59l240.11-241a25.49 25.49 0 0 1 36.06-.14l.14.14L504.5 108a25.86 25.86 0 0 1 0 36.42z", "M264.67 385.59l-54.57 54.87a25.5 25.5 0 0 1-36.06.14l-.14-.14L7.5 273.1a25.84 25.84 0 0 1 0-36.41l36.2-36.41a25.49 25.49 0 0 1 36-.17l.16.17z"]]
};
exports.faCheck = faCheck;
var faCheckCircle = {
  prefix: 'fad',
  iconName: 'check-circle',
  icon: [512, 512, [], "f058", ["M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm155.31 195.31l-184 184a16 16 0 0 1-22.62 0l-104-104a16 16 0 0 1 0-22.62l22.62-22.63a16 16 0 0 1 22.63 0L216 308.12l150.06-150.06a16 16 0 0 1 22.63 0l22.62 22.63a16 16 0 0 1 0 22.62z", "M227.31 387.31a16 16 0 0 1-22.62 0l-104-104a16 16 0 0 1 0-22.62l22.62-22.63a16 16 0 0 1 22.63 0L216 308.12l150.06-150.06a16 16 0 0 1 22.63 0l22.62 22.63a16 16 0 0 1 0 22.62l-184 184z"]]
};
exports.faCheckCircle = faCheckCircle;
var faCheckDouble = {
  prefix: 'fad',
  iconName: 'check-double',
  icon: [512, 512, [], "f560", ["M166.57 282.71L44 159.21a17.87 17.87 0 0 1 .18-25.2l42.1-41.77a17.87 17.87 0 0 1 25.2.18l68.23 68.77L336.87 5.11a17.88 17.88 0 0 1 25.21.18L404 47.41a17.88 17.88 0 0 1-.18 25.21L191.78 282.89a17.88 17.88 0 0 1-25.21-.18z", "M504.5 172a25.86 25.86 0 0 1 0 36.42L210.1 504.46a25.48 25.48 0 0 1-36.2 0L7.5 337.1a25.84 25.84 0 0 1 0-36.41l36.2-36.41a25.48 25.48 0 0 1 36.2 0L192 377l240.1-241.46a25.5 25.5 0 0 1 36.2 0L504.5 172z"]]
};
exports.faCheckDouble = faCheckDouble;
var faCheckSquare = {
  prefix: 'fad',
  iconName: 'check-square',
  icon: [448, 512, [], "f14a", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-20.69 165.94l-184 184a16 16 0 0 1-22.62 0l-104-104a16 16 0 0 1 0-22.63l22.62-22.62a16 16 0 0 1 22.63 0L184 302.75l150.06-150.06a16 16 0 0 1 22.63 0l22.62 22.62a16 16 0 0 1 0 22.63z", "M195.31 381.94a16 16 0 0 1-22.62 0l-104-104a16 16 0 0 1 0-22.63l22.62-22.62a16 16 0 0 1 22.63 0L184 302.74l150.06-150a16 16 0 0 1 22.63 0l22.62 22.62a16 16 0 0 1 0 22.63l-184 184z"]]
};
exports.faCheckSquare = faCheckSquare;
var faCheese = {
  prefix: 'fad',
  iconName: 'cheese',
  icon: [512, 512, [], "f7ef", ["M299.83 32C418 38.22 512 136.13 512 256H0L278.7 39a32 32 0 0 1 21.13-7z", "M512 288v160a32 32 0 0 1-32 32H32a32 32 0 0 1-32-32V288z"]]
};
exports.faCheese = faCheese;
var faCheeseSwiss = {
  prefix: 'fad',
  iconName: 'cheese-swiss',
  icon: [512, 512, [], "f7f0", ["M299.83 32C418 38.22 512 136.13 512 256H0l141.84-110.44a47.91 47.91 0 0 0 75.1-58.48L278.7 39a32 32 0 0 1 21.13-7z", "M416 288a48 48 0 0 1-96 0H0v160a32 32 0 0 0 32 32h448a32 32 0 0 0 32-32V288zM176 432a48 48 0 1 1 48-48 48 48 0 0 1-48 48z"]]
};
exports.faCheeseSwiss = faCheeseSwiss;
var faCheeseburger = {
  prefix: 'fad',
  iconName: 'cheeseburger',
  icon: [512, 512, [], "f7f1", ["M58.6 224h394.7c34.6 0 54.6-43.9 34.8-75.9C448 83.2 359.5 32.1 256 32c-103.5.1-192 51.2-232.2 116.1-19.8 32 .3 75.9 34.8 75.9zM384 112a16 16 0 1 1-16 16 16 16 0 0 1 16-16zM256 80a16 16 0 1 1-16 16 16 16 0 0 1 16-16zm-128 32a16 16 0 1 1-16 16 16 16 0 0 1 16-16zm352 272H32a16 16 0 0 0-16 16v16a64.06 64.06 0 0 0 64 64h352a64.06 64.06 0 0 0 64-64v-16a16 16 0 0 0-16-16z", "M512 304a48 48 0 0 1-48 48H48a48 48 0 0 1 0-96h176l96 64 96-64h48a48 48 0 0 1 48 48z"]]
};
exports.faCheeseburger = faCheeseburger;
var faChess = {
  prefix: 'fad',
  iconName: 'chess',
  icon: [512, 512, [], "f439", ["M247.16 459.58L224 448v-16a16 16 0 0 0-16-16H48a16 16 0 0 0-16 16v16L8.84 459.58A16 16 0 0 0 0 473.89V496a16 16 0 0 0 16 16h224a16 16 0 0 0 16-16v-22.11a16 16 0 0 0-8.84-14.31zm256 0L480 448v-16a16 16 0 0 0-16-16H336a16 16 0 0 0-16 16v16l-23.16 11.58a16 16 0 0 0-8.84 14.31V496a16 16 0 0 0 16 16h192a16 16 0 0 0 16-16v-22.11a16 16 0 0 0-8.84-14.31z", "M200.91 96H144V64h24a8 8 0 0 0 8-8V40a8 8 0 0 0-8-8h-24V8a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v24H88a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h24v32H55.09a16 16 0 0 0-15 21.62L74 208H64a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h15.94A535.78 535.78 0 0 1 64 384h128a535.78 535.78 0 0 1-15.94-128H192a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16h-10l33.89-90.38A16 16 0 0 0 200.91 96zM490 192h-26.38a6 6 0 0 0-6 6v26h-24.71v-26a6 6 0 0 0-6-6H373.1a6 6 0 0 0-6 6v26h-24.71v-26a6 6 0 0 0-6-6H310a6 6 0 0 0-6 6v58.6a32 32 0 0 0 11.36 24.4l24.57 20.76-3.29 82.24h126.72l-3.29-82.21 24.6-20.79A32 32 0 0 0 496 256.54V198a6 6 0 0 0-6-6z"]]
};
exports.faChess = faChess;
var faChessBishop = {
  prefix: 'fad',
  iconName: 'chess-bishop',
  icon: [320, 512, [], "f43a", ["M304 448H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h288a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z", "M8 287.88c0 51.64 22.14 73.83 56 84.6V416h192v-43.52c33.86-10.77 56-33 56-84.6 0-30.61-10.73-67.1-26.69-102.56L185 285.65a8 8 0 0 1-11.31 0l-11.31-11.31a8 8 0 0 1 0-11.31L270.27 155.1c-20.8-37.91-46.47-72.1-70.87-92.59C213.4 59.09 224 47.05 224 32a32 32 0 0 0-32-32h-64a32 32 0 0 0-32 32c0 15 10.6 27.09 24.6 30.51C67.81 106.8 8 214.5 8 287.88z"]]
};
exports.faChessBishop = faChessBishop;
var faChessBishopAlt = {
  prefix: 'fad',
  iconName: 'chess-bishop-alt',
  icon: [256, 512, [], "f43b", ["M247.16 459.58L224 448v-16a16 16 0 0 0-16-16H48a16 16 0 0 0-16 16v16L8.85 459.58A16 16 0 0 0 0 473.89V496a16 16 0 0 0 16 16h224a16 16 0 0 0 16-16v-22.11a16 16 0 0 0-8.84-14.31z", "M64 288h14.89A535.84 535.84 0 0 1 64 384h128a535.84 535.84 0 0 1-14.89-96H192a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16h-11.67c16-6.67 26.48-25.09 26.48-50.43 0-19.32-7.2-42.34-17.73-63.33l-48.59 48.59a4 4 0 0 1-5.66 0l-5.66-5.66a4 4 0 0 1 0-5.65L181 111.7c-10.22-16.81-22.2-31.22-33.86-39.33C155.31 69.59 160 61.85 160 52.73 160 41.28 151.92 32 140.47 32h-24.94C104.08 32 96 41.28 96 52.73c0 9.12 4.69 16.86 12.87 19.64-28.58 19.87-59.68 76.75-59.68 117.2 0 25.34 10.49 43.76 26.48 50.43H64a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16z"]]
};
exports.faChessBishopAlt = faChessBishopAlt;
var faChessBoard = {
  prefix: 'fad',
  iconName: 'chess-board',
  icon: [512, 512, [], "f43c", ["M512 256v-64h-64v64zM448 0h-64v64h64zm64 128V64h-64v64zm-256 64h-64v64h64zM320 0h-64v64h64zm192 384v-64h-64v64zm0 128v-64h-64v64zM256 128V64h-64v64zM64 512h64v-64H64zm128 0h64v-64h-64zM0 384v64h64v-64zm320 128h64v-64h-64zM0 128v64h64v-64zM0 0v64h64V0zm0 256v64h64v-64zM192 0h-64v64h64zm192 320h64v-64h-64zm-128-64v64h64v-64zm-128-64H64v64h64zm64 128v64h64v-64zm128 0v64h64v-64zm-192 0H64v64h64zm0-256H64v64h64zm256 128h64v-64h-64zM128 384v64h64v-64zm192-128h64v-64h-64zm128 128h-64v64h64zM192 256h-64v64h64zm128-64v-64h-64v64zm-64 192v64h64v-64zm128-256V64h-64v64zm-192 0h-64v64h64z", "M256 0h-64v64h64zM0 64v64h64V64zM128 0H64v64h64zm64 256v64h64v-64zM0 192v64h64v-64zM384 0h-64v64h64zm128 0h-64v64h64zM128 256H64v64h64zm384 192v-64h-64v64zm0-128v-64h-64v64zM384 512h64v-64h-64zm128-320v-64h-64v64zM128 512h64v-64h-64zM0 512h64v-64H0zm256 0h64v-64h-64zM0 320v64h64v-64zm320-192V64h-64v64zm-64 128h64v-64h-64zm-64 128v64h64v-64zm128-64h64v-64h-64zm0-128h64v-64h-64zm0 192v64h64v-64zm-256 0v64h64v-64zm128-256V64h-64v64zm192 256h64v-64h-64zM256 192v-64h-64v64zM384 64v64h64V64zM256 320v64h64v-64zm-64-128h-64v64h64zm192 64h64v-64h-64zM128 128H64v64h64zm0 192v64h64v-64z"]]
};
exports.faChessBoard = faChessBoard;
var faChessClock = {
  prefix: 'fad',
  iconName: 'chess-clock',
  icon: [640, 512, [], "f43d", ["M519.48 243a12 12 0 0 0-17 0l-50.9 50.89a12 12 0 0 0 0 17l5.66 5.66a12 12 0 0 0 17 0l50.9-50.9a12 12 0 0 0 0-17zm-339.19-18.86h-8a12 12 0 0 0-12 12v72a12 12 0 0 0 12 12h8a12 12 0 0 0 12-12v-72a12 12 0 0 0-12-12zM240.06 32h-128a16 16 0 0 0-16 16v15.94a16 16 0 0 0 16 16h40.19V128h48V79.94h39.81a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM528 96H400a16 16 0 0 0-16 16v16h160v-16a16 16 0 0 0-16-16z", "M600 128H40a40 40 0 0 0-40 40v272a40 40 0 0 0 40 40h560a40 40 0 0 0 40-40V168a40 40 0 0 0-40-40zM176.29 416.06a112 112 0 1 1 112-111.95 111.95 111.95 0 0 1-112 111.95zm288 0a112 112 0 1 1 112-111.95 111.95 111.95 0 0 1-112 111.95z"]]
};
exports.faChessClock = faChessClock;
var faChessClockAlt = {
  prefix: 'fad',
  iconName: 'chess-clock-alt',
  icon: [640, 512, [], "f43e", ["M231.12 243a12 12 0 0 0-17 0l-50.89 50.89a12 12 0 0 0 0 17l5.65 5.66a12 12 0 0 0 17 0l50.89-50.9a12 12 0 0 0 0-17zm236.7-18.84h-8a12 12 0 0 0-12 12v72a12 12 0 0 0 12 12h8a12 12 0 0 0 12-12v-72a12 12 0 0 0-12-12.02zM239.91 96h-128a16 16 0 0 0-16 16v16h160v-16a16 16 0 0 0-16-16zM528 32H400a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h39.75v48h48V80H528a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z", "M600 128H40a40.17 40.17 0 0 0-40 40.11V440a40 40 0 0 0 40 40h560a40 40 0 0 0 40-40V168.11A40.17 40.17 0 0 0 600 128zM175.93 416.06a112 112 0 1 1 112-111.95 111.95 111.95 0 0 1-112 111.95zm287.89 0a112 112 0 1 1 112-111.95 111.95 111.95 0 0 1-112 111.95z"]]
};
exports.faChessClockAlt = faChessClockAlt;
var faChessKing = {
  prefix: 'fad',
  iconName: 'chess-king',
  icon: [448, 512, [], "f43f", ["M400 448H48a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h352a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z", "M416 160H256v-48h40a8 8 0 0 0 8-8V56a8 8 0 0 0-8-8h-40V8a8 8 0 0 0-8-8h-48a8 8 0 0 0-8 8v40h-40a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8h40v48H32a32 32 0 0 0-30.52 41.54L74.56 416h298.88l73.08-214.46A32 32 0 0 0 416 160z"]]
};
exports.faChessKing = faChessKing;
var faChessKingAlt = {
  prefix: 'fad',
  iconName: 'chess-king-alt',
  icon: [320, 512, [], "f440", ["M279.16 459.58L256 448v-16a16 16 0 0 0-16-16H80a16 16 0 0 0-16 16v16l-23.15 11.58A16 16 0 0 0 32 473.89V496a16 16 0 0 0 16 16h224a16 16 0 0 0 16-16v-22.11a16 16 0 0 0-8.84-14.31z", "M106 208H96a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h15.94A535.78 535.78 0 0 1 96 384h128a535.78 535.78 0 0 1-15.94-128H224a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16h-10l33.89-90.38a16 16 0 0 0-15-21.62H176V64h24a8 8 0 0 0 8-8V40a8 8 0 0 0-8-8h-24V8a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v24h-24a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h24v32H87.09a16 16 0 0 0-15 21.62z"]]
};
exports.faChessKingAlt = faChessKingAlt;
var faChessKnight = {
  prefix: 'fad',
  iconName: 'chess-knight',
  icon: [384, 512, [], "f441", ["M368 448H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h352a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z", "M159.94 32H12A12 12 0 0 0 0 44a16.9 16.9 0 0 0 1.79 7.58L16 80l-9 9a24 24 0 0 0-7 17v137.21a32 32 0 0 0 19 29.26l40.63 18.06a32 32 0 0 0 24.88.47l12.79-5.12a32 32 0 0 0 18.75-20.5l9.22-30.65a24 24 0 0 1 12.55-15.65L159.94 208v50.33a48 48 0 0 1-26.53 42.94L76.2 329.92A80 80 0 0 0 32 401.48V416h319.86V224c0-106-85.92-192-191.92-192zM52 168a20 20 0 1 1 20-20 20 20 0 0 1-20 20z"]]
};
exports.faChessKnight = faChessKnight;
var faChessKnightAlt = {
  prefix: 'fad',
  iconName: 'chess-knight-alt',
  icon: [320, 512, [], "f442", ["M320 473.89V496a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16v-22.11a16 16 0 0 1 8.85-14.31L32 448v-16a16 16 0 0 1 16-16h224a16 16 0 0 1 16 16v16l23.16 11.58a16 16 0 0 1 8.84 14.31z", "M45.55 235.52l28.83 12.86a22.59 22.59 0 0 0 17.67.34l9.09-3.65a22.79 22.79 0 0 0 13.33-14.62l6.53-21.87a17.09 17.09 0 0 1 8.92-11.15l14.2-5.43v37.21a28.58 28.58 0 0 1-16.9 26.09L80.68 279C40.87 299.22 32.42 352.42 64 384h192c7-7.85 16-18.31 16-32V203.16C272 126.62 209.38 64 132.84 64H40.52A8.54 8.54 0 0 0 32 72.56 12.14 12.14 0 0 0 33.27 78l10.1 20.28-6.37 6.35a17.21 17.21 0 0 0-5 12.11v97.9a22.86 22.86 0 0 0 13.55 20.88zM80.07 128a16 16 0 1 1-15.94 16 16 16 0 0 1 15.94-16z"]]
};
exports.faChessKnightAlt = faChessKnightAlt;
var faChessPawn = {
  prefix: 'fad',
  iconName: 'chess-pawn',
  icon: [320, 512, [], "f443", ["M304 448H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h288a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z", "M105.1 224H80a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h16v5.49c0 44-4.14 86.6-24 122.51h176c-19.89-35.91-24-78.51-24-122.51V288h16a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-25.1c29.39-18.38 49.1-50.78 49.1-88a104 104 0 0 0-208 0c0 37.22 19.71 69.62 49.1 88z"]]
};
exports.faChessPawn = faChessPawn;
var faChessPawnAlt = {
  prefix: 'fad',
  iconName: 'chess-pawn-alt',
  icon: [256, 512, [], "f444", ["M247.16 459.58L224 448v-16a16 16 0 0 0-16-16H48a16 16 0 0 0-16 16v16L8.85 459.58A16 16 0 0 0 0 473.89V496a16 16 0 0 0 16 16h224a16 16 0 0 0 16-16v-22.11a16 16 0 0 0-8.84-14.31z", "M64 288h14.89A535.84 535.84 0 0 1 64 384h128a535.84 535.84 0 0 1-14.89-96H192a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16h-16.44a80 80 0 1 0-95.12 0H64a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16z"]]
};
exports.faChessPawnAlt = faChessPawnAlt;
var faChessQueen = {
  prefix: 'fad',
  iconName: 'chess-queen',
  icon: [512, 512, [], "f445", ["M432 448H80a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h352a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z", "M256 112a56 56 0 1 0-56-56 56 56 0 0 0 56 56zm248.88 72.16l-28.52-15.92c-7.44-5-16.91-2.46-22.29 4.68a47.59 47.59 0 0 1-47.23 18.23C383.7 186.86 368 164.93 368 141.4a13.4 13.4 0 0 0-13.4-13.4h-38.77c-6 0-11.61 4-12.85 9.91a48 48 0 0 1-94 0c-1.24-5.92-6.81-9.91-12.85-9.91H157.4a13.4 13.4 0 0 0-13.4 13.4c0 25.69-19 48.75-44.67 50.49a47.49 47.49 0 0 1-41.54-19.15c-5.28-7.09-14.73-9.45-22.09-4.54l-28.58 16a16 16 0 0 0-5.43 20.47L104.24 416h303.52l102.55-211.37a16 16 0 0 0-5.43-20.47z"]]
};
exports.faChessQueen = faChessQueen;
var faChessQueenAlt = {
  prefix: 'fad',
  iconName: 'chess-queen-alt',
  icon: [256, 512, [], "f446", ["M256 473.89V496a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16v-22.11a16 16 0 0 1 8.85-14.31L32 448v-16a16 16 0 0 1 16-16h160a16 16 0 0 1 16 16v16l23.16 11.58a16 16 0 0 1 8.84 14.31z", "M128 48a24 24 0 1 0-24-24 24 24 0 0 0 24 24zm102.84 39.65l-10.06-6.71c-3.13-2.08-7.12-1-9.38 2a20.05 20.05 0 0 1-19.89 7.67c-9.74-1.81-16.35-11-16.35-21a5.65 5.65 0 0 0-5.64-5.61h-16.33a5.45 5.45 0 0 0-5.41 4.17 20.22 20.22 0 0 1-39.56 0 5.45 5.45 0 0 0-5.41-4.17H86.49a5.65 5.65 0 0 0-5.65 5.64c0 10.82-8 20.53-18.81 21.26a20 20 0 0 1-17.49-8.06 6.81 6.81 0 0 0-9.3-1.91l-10.08 6.72a6.73 6.73 0 0 0-2.29 8.62L67.37 192H64a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h16v14a535.76 535.76 0 0 1-16 130h128a535.76 535.76 0 0 1-16-130v-14h16a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16h-3.37l44.5-95.73a6.73 6.73 0 0 0-2.29-8.62z"]]
};
exports.faChessQueenAlt = faChessQueenAlt;
var faChessRook = {
  prefix: 'fad',
  iconName: 'chess-rook',
  icon: [384, 512, [], "f447", ["M368 448H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h352a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z", "M384 48a16 16 0 0 0-16-16h-56a16 16 0 0 0-16 16v48h-48V48a16 16 0 0 0-16-16h-80a16 16 0 0 0-16 16v48H88.1V48a16 16 0 0 0-16-16H16A16 16 0 0 0 0 48v176l64 32c0 48.33-1.54 95-13.21 160h282.42C321.54 351 320 303.72 320 256l64-32zM224 320h-64v-64a32 32 0 0 1 64 0z"]]
};
exports.faChessRook = faChessRook;
var faChessRookAlt = {
  prefix: 'fad',
  iconName: 'chess-rook-alt',
  icon: [320, 512, [], "f448", ["M320 473.89V496a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16v-22.11a16 16 0 0 1 8.85-14.31L32 448v-16a16 16 0 0 1 16-16h224a16 16 0 0 1 16 16v16l23.16 11.58a16 16 0 0 1 8.84 14.31z", "M71.81 210.32L57.33 384h205.34l-14.48-173.7 30.62-31.11a32 32 0 0 0 9.19-22.45V72a8 8 0 0 0-8-8h-35.18a8 8 0 0 0-8 8v40h-32.94V72a8 8 0 0 0-8-8h-71.75a8 8 0 0 0-8 8v40H83.19V72a8 8 0 0 0-8-8H40a8 8 0 0 0-8 8v84.82a32 32 0 0 0 9.21 22.47zm64.6 21.27a23.59 23.59 0 0 1 47.18 0v47.18h-47.18z"]]
};
exports.faChessRookAlt = faChessRookAlt;
var faChevronCircleDown = {
  prefix: 'fad',
  iconName: 'chevron-circle-down',
  icon: [512, 512, [], "f13a", ["M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm152.5 226.4L273 369.9a24 24 0 0 1-34 0L103.5 234.4a23.9 23.9 0 0 1 0-33.9l17-17a23.9 23.9 0 0 1 33.9 0L256 285.1l101.6-101.6a23.9 23.9 0 0 1 33.9 0l17 17a23.9 23.9 0 0 1 0 33.9z", "M239 369.9L103.5 234.4a23.9 23.9 0 0 1 0-33.9l17-17a23.9 23.9 0 0 1 33.9 0L256 285.1l101.6-101.6a23.9 23.9 0 0 1 33.9 0l17 17a23.9 23.9 0 0 1 0 33.9L273 369.9a24 24 0 0 1-34 0z"]]
};
exports.faChevronCircleDown = faChevronCircleDown;
var faChevronCircleLeft = {
  prefix: 'fad',
  iconName: 'chevron-circle-left',
  icon: [512, 512, [], "f137", ["M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm72.5 349.6a23.9 23.9 0 0 1 0 33.9l-17 17a23.9 23.9 0 0 1-33.9 0L142.1 273a24 24 0 0 1 0-34l135.5-135.5a23.9 23.9 0 0 1 33.9 0l17 17a23.9 23.9 0 0 1 0 33.9L226.9 256z", "M142.1 239l135.5-135.5a23.9 23.9 0 0 1 33.9 0l17 17a23.9 23.9 0 0 1 0 33.9L226.9 256l101.6 101.6a23.9 23.9 0 0 1 0 33.9l-17 17a23.9 23.9 0 0 1-33.9 0L142.1 273a24 24 0 0 1 0-34z"]]
};
exports.faChevronCircleLeft = faChevronCircleLeft;
var faChevronCircleRight = {
  prefix: 'fad',
  iconName: 'chevron-circle-right',
  icon: [512, 512, [], "f138", ["M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm113.9 265L234.4 408.5a23.9 23.9 0 0 1-33.9 0l-17-17a23.9 23.9 0 0 1 0-33.9L285.1 256 183.5 154.4a23.9 23.9 0 0 1 0-33.9l17-17a23.9 23.9 0 0 1 33.9 0L369.9 239a24 24 0 0 1 0 34z", "M369.9 273L234.4 408.5a23.9 23.9 0 0 1-33.9 0l-17-17a23.9 23.9 0 0 1 0-33.9L285.1 256 183.5 154.4a23.9 23.9 0 0 1 0-33.9l17-17a23.9 23.9 0 0 1 33.9 0L369.9 239a24 24 0 0 1 0 34z"]]
};
exports.faChevronCircleRight = faChevronCircleRight;
var faChevronCircleUp = {
  prefix: 'fad',
  iconName: 'chevron-circle-up',
  icon: [512, 512, [], "f139", ["M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm152.5 303.5l-17 17a23.9 23.9 0 0 1-33.9 0L256 226.9 154.4 328.5a23.9 23.9 0 0 1-33.9 0l-17-17a23.9 23.9 0 0 1 0-33.9L239 142.1a24 24 0 0 1 34 0l135.5 135.5a23.9 23.9 0 0 1 0 33.9z", "M273 142.1l135.5 135.5a23.9 23.9 0 0 1 0 33.9l-17 17a23.9 23.9 0 0 1-33.9 0L256 226.9 154.4 328.5a23.9 23.9 0 0 1-33.9 0l-17-17a23.9 23.9 0 0 1 0-33.9L239 142.1a24 24 0 0 1 34 0z"]]
};
exports.faChevronCircleUp = faChevronCircleUp;
var faChevronDoubleDown = {
  prefix: 'fad',
  iconName: 'chevron-double-down',
  icon: [448, 512, [], "f322", ["M207 285.54L12.7 91.14a23.9 23.9 0 0 1 0-33.9l22.7-22.7a24.08 24.08 0 0 1 33.9 0l154.7 154 154.7-154a23.9 23.9 0 0 1 33.9 0l22.7 22.7a23.9 23.9 0 0 1 0 33.9L241 285.54a24.2 24.2 0 0 1-34 0z", "M207 477.54L12.7 283.14a23.9 23.9 0 0 1 0-33.9l22.7-22.7a23.9 23.9 0 0 1 33.9 0l154.7 154 154.7-154a24.08 24.08 0 0 1 33.9 0l22.7 22.7a23.9 23.9 0 0 1 0 33.9L241 477.54a24.2 24.2 0 0 1-34 0z"]]
};
exports.faChevronDoubleDown = faChevronDoubleDown;
var faChevronDoubleLeft = {
  prefix: 'fad',
  iconName: 'chevron-double-left',
  icon: [512, 512, [], "f323", ["M226.56 239l194-194a23.84 23.84 0 0 1 33.73-.1l.1.1L477 67.7a24.06 24.06 0 0 1 0 33.85L323.36 256l153.58 154.45a23.87 23.87 0 0 1 .1 33.75l-.1.1-22.65 22.7a23.84 23.84 0 0 1-33.73.1l-.1-.1-193.9-194a24.17 24.17 0 0 1 0-34z", "M35 239L229 45a23.84 23.84 0 0 1 33.73-.1l.1.1 22.61 22.7a23.87 23.87 0 0 1 .1 33.75l-.1.1L131.76 256l153.68 154.45a24.06 24.06 0 0 1 0 33.85L262.79 467a23.84 23.84 0 0 1-33.73.1l-.1-.1L35 273a24.17 24.17 0 0 1 0-34z"]]
};
exports.faChevronDoubleLeft = faChevronDoubleLeft;
var faChevronDoubleRight = {
  prefix: 'fad',
  iconName: 'chevron-double-right',
  icon: [512, 512, [], "f324", ["M285.6 273L90.79 467a24 24 0 0 1-33.88.1l-.1-.1-22.74-22.7a24 24 0 0 1 0-33.85L188.39 256 34.07 101.55A23.8 23.8 0 0 1 34 67.8l.11-.1L56.81 45a24 24 0 0 1 33.88-.1l.1.1L285.6 239a24.09 24.09 0 0 1 0 34z", "M478 273L283.19 467a24 24 0 0 1-33.87.1l-.1-.1-22.75-22.7a23.81 23.81 0 0 1-.1-33.75l.1-.1L380.8 256 226.47 101.55a24 24 0 0 1 0-33.85L249.22 45a24 24 0 0 1 33.87-.1.94.94 0 0 1 .1.1L478 239a24.09 24.09 0 0 1 0 34z"]]
};
exports.faChevronDoubleRight = faChevronDoubleRight;
var faChevronDoubleUp = {
  prefix: 'fad',
  iconName: 'chevron-double-up',
  icon: [448, 512, [], "f325", ["M435 420.86a24 24 0 0 1 0 33.94l-22.63 22.67a23.93 23.93 0 0 1-33.85 0L224 323.5l-154.5 154a23.93 23.93 0 0 1-33.85 0L13 454.8a24 24 0 0 1 0-33.94l194-194.33a23.93 23.93 0 0 1 33.88 0z", "M435 228.86a24 24 0 0 1 0 33.94l-22.63 22.67a23.93 23.93 0 0 1-33.85 0L224 131.5l-154.5 154a23.93 23.93 0 0 1-33.85 0L13 262.8a24 24 0 0 1 0-33.94L207 34.53a23.93 23.93 0 0 1 33.88 0z"]]
};
exports.faChevronDoubleUp = faChevronDoubleUp;
var faChevronDown = {
  prefix: 'fad',
  iconName: 'chevron-down',
  icon: [448, 512, [], "f078", ["M224.1 284.64l-56.89 56.78-154-154.31a24 24 0 0 1 0-33.94l22.65-22.7a23.93 23.93 0 0 1 33.84 0z", "M435 187.15L241 381.48a23.94 23.94 0 0 1-33.84 0l-40-40 211.34-211a23.93 23.93 0 0 1 33.84 0L435 153.21a24 24 0 0 1 0 33.94z"]]
};
exports.faChevronDown = faChevronDown;
var faChevronLeft = {
  prefix: 'fad',
  iconName: 'chevron-left',
  icon: [320, 512, [], "f053", ["M285.59 410.4a23.93 23.93 0 0 1 0 33.84l-22.7 22.65a24 24 0 0 1-33.94 0l-154.31-154L131.42 256z", "M262.85 45.06l22.7 22.65a23.93 23.93 0 0 1 0 33.84L74.58 312.9l-40-40a23.94 23.94 0 0 1 0-33.84l194.33-194a24 24 0 0 1 33.94 0z"]]
};
exports.faChevronLeft = faChevronLeft;
var faChevronRight = {
  prefix: 'fad',
  iconName: 'chevron-right',
  icon: [320, 512, [], "f054", ["M188.74 256l56.78 56.89L91.21 466.9a24 24 0 0 1-33.94 0l-22.7-22.65a23.93 23.93 0 0 1 0-33.84z", "M91.25 45.06l194.33 194a23.93 23.93 0 0 1 0 33.84l-40 40-211-211.34a23.92 23.92 0 0 1 0-33.84l22.7-22.65a24 24 0 0 1 33.97-.01z"]]
};
exports.faChevronRight = faChevronRight;
var faChevronSquareDown = {
  prefix: 'fad',
  iconName: 'chevron-square-down',
  icon: [448, 512, [], "f329", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-23.51 194.43L241 361.94a24 24 0 0 1-33.94 0L71.52 226.43a24 24 0 0 1 0-33.94l17-17a24 24 0 0 1 33.94 0L224 277.09l101.57-101.58a24 24 0 0 1 33.95 0l17 17a24 24 0 0 1-.03 33.92z", "M71.52 192.49l17-17a24 24 0 0 1 33.94 0L224 277.09l101.57-101.58a24 24 0 0 1 33.95 0l17 17a24 24 0 0 1 0 34L241 361.94a24 24 0 0 1-33.94 0L71.52 226.43a24 24 0 0 1 0-33.94z"]]
};
exports.faChevronSquareDown = faChevronSquareDown;
var faChevronSquareLeft = {
  prefix: 'fad',
  iconName: 'chevron-square-left',
  icon: [448, 512, [], "f32a", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-95.51 325.57a24 24 0 0 1 0 33.95l-17 17a24 24 0 0 1-33.95 0L118.06 273a24 24 0 0 1 0-33.94l135.51-135.54a24 24 0 0 1 33.95 0l17 17a24 24 0 0 1 0 33.94L202.91 256z", "M118.06 239l135.51-135.48a24 24 0 0 1 33.95 0l17 17a24 24 0 0 1 0 33.94L202.91 256l101.58 101.57a24 24 0 0 1 0 33.95l-17 17a24 24 0 0 1-33.95 0L118.06 273a24 24 0 0 1 0-34z"]]
};
exports.faChevronSquareLeft = faChevronSquareLeft;
var faChevronSquareRight = {
  prefix: 'fad',
  iconName: 'chevron-square-right',
  icon: [448, 512, [], "f32b", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-70.06 241L194.43 408.48a24 24 0 0 1-33.94 0l-17-17a24 24 0 0 1 0-33.94L245.09 256 143.52 154.43a24 24 0 0 1 0-33.94l17-17a24 24 0 0 1 33.94 0L329.94 239a24 24 0 0 1 0 34z", "M143.52 154.43a24 24 0 0 1 0-33.94l17-17a24 24 0 0 1 33.94 0L329.94 239a24 24 0 0 1 0 33.94L194.43 408.48a24 24 0 0 1-33.94 0l-17-17a24 24 0 0 1 0-33.94L245.09 256z"]]
};
exports.faChevronSquareRight = faChevronSquareRight;
var faChevronSquareUp = {
  prefix: 'fad',
  iconName: 'chevron-square-up',
  icon: [448, 512, [], "f32c", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-23.52 287.51l-17 17a24 24 0 0 1-33.94 0L224 234.91 122.43 336.48a24 24 0 0 1-33.94 0l-17-17a24 24 0 0 1 0-33.94L207 150.06a24 24 0 0 1 33.94 0l135.54 135.51a24 24 0 0 1 0 33.94z", "M71.52 285.57L207 150.06a24 24 0 0 1 33.94 0l135.54 135.51a24 24 0 0 1 0 33.94l-17 17a24 24 0 0 1-33.94 0L224 234.91 122.43 336.48a24 24 0 0 1-33.94 0l-17-17a24 24 0 0 1 .03-33.91z"]]
};
exports.faChevronSquareUp = faChevronSquareUp;
var faChevronUp = {
  prefix: 'fad',
  iconName: 'chevron-up',
  icon: [448, 512, [], "f077", ["M69.66 381.49a23.93 23.93 0 0 1-33.84 0l-22.65-22.7a24 24 0 0 1 0-33.94l154.04-154.31 56.89 56.78z", "M435 358.75l-22.65 22.7a23.92 23.92 0 0 1-33.84 0l-211.34-211 40-40a23.93 23.93 0 0 1 33.84 0L435 324.81a24 24 0 0 1 0 33.94z"]]
};
exports.faChevronUp = faChevronUp;
var faChild = {
  prefix: 'fad',
  iconName: 'child',
  icon: [384, 512, [], "f1ae", ["M120 72a72 72 0 1 1 72 72 72 72 0 0 1-72-72z", "M9.37 118.63a32 32 0 0 1 45.26-45.26L141.25 160h101.5l86.62-86.63a32 32 0 0 1 45.26 45.26L280 213.25V480a32 32 0 0 1-32 32h-16a32 32 0 0 1-32-32V368h-16v112a32 32 0 0 1-32 32h-16a32 32 0 0 1-32-32V213.25z"]]
};
exports.faChild = faChild;
var faChimney = {
  prefix: 'fad',
  iconName: 'chimney',
  icon: [512, 512, [], "f78b", ["M160 224H32v128h128zM32 512h288V384H32zm320 0h128V384H352zM192 224v128h288V224z", "M0 160V32A32 32 0 0 1 32 0h448a32 32 0 0 1 32 32v128a32 32 0 0 1-32 32H32a32 32 0 0 1-32-32z"]]
};
exports.faChimney = faChimney;
var faChurch = {
  prefix: 'fad',
  iconName: 'church',
  icon: [640, 512, [], "f51d", ["M620.61 366.54L512 320v192h112a16 16 0 0 0 16-16V396a32 32 0 0 0-19.39-29.46zM0 396v100a16 16 0 0 0 16 16h112V320L19.39 366.54A32 32 0 0 0 0 396z", "M480 274.12V512h-96v-96a64 64 0 0 0-128 0v96h-96V274.12a32 32 0 0 1 15.54-27.44L288 179.2V128h-48a16 16 0 0 1-16-16V80a16 16 0 0 1 16-16h48V16a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16v48h48a16 16 0 0 1 16 16v32a16 16 0 0 1-16 16h-48v51.2l112.46 67.48A32 32 0 0 1 480 274.12z"]]
};
exports.faChurch = faChurch;
var faCircle = {
  prefix: 'fad',
  iconName: 'circle',
  icon: [512, 512, [], "f111", ["M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 424c-97.06 0-176-79-176-176S158.94 80 256 80s176 79 176 176-78.94 176-176 176z", "M256 432c-97.06 0-176-79-176-176S158.94 80 256 80s176 79 176 176-78.94 176-176 176z"]]
};
exports.faCircle = faCircle;
var faCircleNotch = {
  prefix: 'fad',
  iconName: 'circle-notch',
  icon: [512, 512, [], "f1ce", ["M504 257.28v.23C503.42 394 392.44 504.24 256 504v-64a184.09 184.09 0 0 0 177.16-134.42c27.44-97.84-29.63-199.41-127.47-226.85A24 24 0 0 1 288 55.66V39a24 24 0 0 1 30-23.22c107.4 27.65 186.61 125.38 186 241.5z", "M256 439.93v64C119.56 504.24 8.58 394 8 257.51v-.23C7.39 141.16 86.6 43.43 194 15.78A24 24 0 0 1 224 39v16.66a24 24 0 0 1-17.69 23.07c-97.84 27.44-154.91 129-127.47 226.85A184.07 184.07 0 0 0 256 439.93z"]]
};
exports.faCircleNotch = faCircleNotch;
var faCity = {
  prefix: 'fad',
  iconName: 'city',
  icon: [640, 512, [], "f64f", ["M116 352H76a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm0-96H76a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm0-96H76a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm128 192h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm0-96h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm0-96h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm320 192h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm0-96h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12z", "M616 192H480V24a24 24 0 0 0-24-24H312a24 24 0 0 0-24 24v72h-64V16a16 16 0 0 0-16-16h-16a16 16 0 0 0-16 16v80h-64V16A16 16 0 0 0 96 0H80a16 16 0 0 0-16 16v80H24a24 24 0 0 0-24 24v360a32 32 0 0 0 32 32h576a32 32 0 0 0 32-32V216a24 24 0 0 0-24-24zM128 404a12 12 0 0 1-12 12H76a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-96a12 12 0 0 1-12 12H76a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-96a12 12 0 0 1-12 12H76a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm128 192a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-96a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-96a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm160 96a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-96a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-96a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12V76a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm160 288a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-96a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12z"]]
};
exports.faCity = faCity;
var faClarinet = {
  prefix: 'fad',
  iconName: 'clarinet',
  icon: [640, 512, [], "f8ad", ["M630.13 129.22a16 16 0 0 0-17.44 3.47L569.38 176H101.2a32 32 0 0 0-10.13 1.64l-80.13 26.71A16 16 0 0 0 0 219.53v72.94a16 16 0 0 0 10.94 15.18l80.13 26.71A32 32 0 0 0 101.2 336h468.18l43.31 43.31A16 16 0 0 0 640 368V144a16 16 0 0 0-9.87-14.78zM272 280a24 24 0 1 1 24-24 24 24 0 0 1-24 24zm96 0a24 24 0 1 1 24-24 24 24 0 0 1-24 24zm96 0a24 24 0 1 1 24-24 24 24 0 0 1-24 24z", "M368 232a24 24 0 1 0 24 24 24 24 0 0 0-24-24zm-96 0a24 24 0 1 0 24 24 24 24 0 0 0-24-24zm232-120H232a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h24v32h32v-32h64v32h32v-32h64v32h32v-32h24a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8zm-40 120a24 24 0 1 0 24 24 24 24 0 0 0-24-24z"]]
};
exports.faClarinet = faClarinet;
var faClawMarks = {
  prefix: 'fad',
  iconName: 'claw-marks',
  icon: [512, 512, [], "f6c2", ["M7 224.51c-5-2.37-9.4 4.09-5.49 8l85.12 85.13A32 32 0 0 1 96 340.27V384h43.74a32 32 0 0 1 22.63 9.37l117.14 117.16c3.86 3.86 10.32-.56 8-5.49C206.4 333.11 63.36 251.26 7 224.51zM511.51 281C430.4 109.11 287.36 27.26 231 .51c-5-2.37-9.4 4.09-5.49 8l21.13 21.12A32 32 0 0 1 256 52.26V96h43.74a32 32 0 0 1 22.63 9.37l52.26 52.26a32 32 0 0 1 9.37 22.63V224h43.73a32 32 0 0 1 22.63 9.37l53.16 53.16c3.86 3.86 10.32-.53 7.99-5.53z", "M2.67 15.13C-4.28 8.18 3.54-3.3 12.42.91A1010.5 1010.5 0 0 1 116.89 59 32.4 32.4 0 0 0 134 64h58v31.29a31.44 31.44 0 0 0 12.27 25c105.31 81.65 224.13 204 306.86 379.3 4.14 8.77-7.34 16.62-14.2 9.76l-84-84a32 32 0 0 0-22.64-9.35H352v-38.29a32 32 0 0 0-9.37-22.63l-89.71-89.71a32 32 0 0 0-22.63-9.37H192v-38.28a32 32 0 0 0-9.37-22.63z"]]
};
exports.faClawMarks = faClawMarks;
var faClinicMedical = {
  prefix: 'fad',
  iconName: 'clinic-medical',
  icon: [576, 512, [], "f7f2", ["M288 115L69.48 307.72c-1.62 1.46-3.69 2.14-5.47 3.35V496a16 16 0 0 0 16 16H496a16 16 0 0 0 16-16V311.11c-1.7-1.16-3.72-1.82-5.26-3.2zm96 261a8 8 0 0 1-8 8h-56v56a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8v-56h-56a8 8 0 0 1-8-8v-48a8 8 0 0 1 8-8h56v-56a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v56h56a8 8 0 0 1 8 8z", "M570.7 236.29l-255.94-226a39.85 39.85 0 0 0-53.45 0l-256 226a16 16 0 0 0-1.21 22.59l21.41 23.82a16 16 0 0 0 22.59 1.21L277.43 81.64a16 16 0 0 1 21.17 0l229.32 202.27a16 16 0 0 0 22.6-1.2l21.4-23.82a16 16 0 0 0-1.22-22.6zM376 320h-56v-56a8 8 0 0 0-8-8h-48a8 8 0 0 0-8 8v56h-56a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8h56v56a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8v-56h56a8 8 0 0 0 8-8v-48a8 8 0 0 0-8-8z"]]
};
exports.faClinicMedical = faClinicMedical;
var faClipboard = {
  prefix: 'fad',
  iconName: 'clipboard',
  icon: [384, 512, [], "f328", ["M336 63h-80v1a64 64 0 0 1 64 64H64a64 64 0 0 1 64-64v-1H48a48 48 0 0 0-48 48v352a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V111a48 48 0 0 0-48-48z", "M256 64a64 64 0 0 0-128 0 64 64 0 0 0-64 64h256a64 64 0 0 0-64-64zm-64 24a24 24 0 1 1 24-24 23.94 23.94 0 0 1-24 24z"]]
};
exports.faClipboard = faClipboard;
var faClipboardCheck = {
  prefix: 'fad',
  iconName: 'clipboard-check',
  icon: [384, 512, [], "f46c", ["M336 64h-80a64 64 0 0 1 64 64H64a64 64 0 0 1 64-64H48a48 48 0 0 0-48 48v352a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V112a48 48 0 0 0-48-48zm-22.8 207.8l-143 141.8a12 12 0 0 1-17-.1l-82.6-83.3a12 12 0 0 1 .1-17L99.1 285a12 12 0 0 1 17 .1l46 46.4 106-105.2a12 12 0 0 1 17 .1l28.2 28.4a12 12 0 0 1-.1 17z", "M285.1 226.4a12 12 0 0 0-17-.1l-106 105.2-46-46.4a12 12 0 0 0-17-.1l-28.4 28.2a12 12 0 0 0-.1 17l82.6 83.3a12 12 0 0 0 17 .1l143-141.8a12 12 0 0 0 .1-17zM256 64a64 64 0 0 0-128 0 64 64 0 0 0-64 64h256a64 64 0 0 0-64-64zm-64 24a24 24 0 1 1 24-24 23.94 23.94 0 0 1-24 24z"]]
};
exports.faClipboardCheck = faClipboardCheck;
var faClipboardList = {
  prefix: 'fad',
  iconName: 'clipboard-list',
  icon: [384, 512, [], "f46d", ["M336 64h-80a64 64 0 0 1 64 64H64a64 64 0 0 1 64-64H48a48 48 0 0 0-48 48v352a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V112a48 48 0 0 0-48-48zM96 424a24 24 0 1 1 24-24 23.94 23.94 0 0 1-24 24zm0-96a24 24 0 1 1 24-24 23.94 23.94 0 0 1-24 24zm0-96a24 24 0 1 1 24-24 23.94 23.94 0 0 1-24 24zm224 176a8 8 0 0 1-8 8H168a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h144a8 8 0 0 1 8 8zm0-96a8 8 0 0 1-8 8H168a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h144a8 8 0 0 1 8 8zm0-96a8 8 0 0 1-8 8H168a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h144a8 8 0 0 1 8 8z", "M96 376a24 24 0 1 0 24 24 23.94 23.94 0 0 0-24-24zm0-96a24 24 0 1 0 24 24 23.94 23.94 0 0 0-24-24zm0-96a24 24 0 1 0 24 24 23.94 23.94 0 0 0-24-24zM256 64a64 64 0 0 0-128 0 64 64 0 0 0-64 64h256a64 64 0 0 0-64-64zm-64 24a24 24 0 1 1 24-24 23.94 23.94 0 0 1-24 24z"]]
};
exports.faClipboardList = faClipboardList;
var faClipboardListCheck = {
  prefix: 'fad',
  iconName: 'clipboard-list-check',
  icon: [384, 512, [], "f737", ["M336 64h-80a64 64 0 0 1 64 64H64a64 64 0 0 1 64-64H48a48 48 0 0 0-48 48v352a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V112a48 48 0 0 0-48-48zM65.6 241.4l12.7-12.6a5.37 5.37 0 0 1 7.6 0l20.6 20.8 47.6-47.2a5.37 5.37 0 0 1 7.6 0l12.6 12.7a5.37 5.37 0 0 1 0 7.6l-64.2 63.6a5.37 5.37 0 0 1-7.6 0L65.6 249a5.37 5.37 0 0 1 0-7.6zM96 392a24 24 0 1 1 24-24 23.94 23.94 0 0 1-24 24zm224-16a8 8 0 0 1-8 8H168a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h144a8 8 0 0 1 8 8zm0-96c0 4.4-4.3 8-9.6 8H154.1l32.3-32h124c5.3 0 9.6 3.6 9.6 8z", "M96 344a24 24 0 1 0 24 24 23.94 23.94 0 0 0-24-24zm65.7-141.6a5.37 5.37 0 0 0-7.6 0l-47.6 47.2-20.6-20.8a5.37 5.37 0 0 0-7.6 0l-12.7 12.6a5.37 5.37 0 0 0 0 7.6l36.9 37.3a5.37 5.37 0 0 0 7.6 0l64.2-63.6a5.37 5.37 0 0 0 0-7.6zM256 64a64 64 0 0 0-128 0 64 64 0 0 0-64 64h256a64 64 0 0 0-64-64zm-64 24a24 24 0 1 1 24-24 23.94 23.94 0 0 1-24 24z"]]
};
exports.faClipboardListCheck = faClipboardListCheck;
var faClipboardPrescription = {
  prefix: 'fad',
  iconName: 'clipboard-prescription',
  icon: [384, 512, [], "f5e8", ["M336 63h-80a64 64 0 0 1 64 64H64a64 64 0 0 1 64-64H48a48 48 0 0 0-48 48v352a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V111a48 48 0 0 0-48-48zm-32 369l-11.31 11.31a16 16 0 0 1-22.63 0L240 413.25l-30.06 30.06a16 16 0 0 1-22.63 0L176 432a16 16 0 0 1 0-22.63l30.06-30.06L146.74 320H128v48a16 16 0 0 1-16 16H96a16 16 0 0 1-16-16V208a16 16 0 0 1 16-16h80a63.8 63.8 0 0 1 30.54 119.92L240 345.38l29.9-29.9a16 16 0 0 1 22.63 0l11.3 11.31a16 16 0 0 1 0 22.63l-29.9 29.9L304 409.38a16 16 0 0 1 0 22.62zM192 256a16 16 0 0 1-16 16h-48v-32h48a16 16 0 0 1 16 16z", "M273.93 379.32l29.9-29.9a16 16 0 0 0 0-22.63l-11.3-11.31a16 16 0 0 0-22.63 0l-29.9 29.9-33.46-33.46A63.8 63.8 0 0 0 176 192H96a16 16 0 0 0-16 16v160a16 16 0 0 0 16 16h16a16 16 0 0 0 16-16v-48h18.74l59.32 59.31L176 409.37a16 16 0 0 0 0 22.63l11.31 11.31a16 16 0 0 0 22.63 0L240 413.25l30.06 30.06a16 16 0 0 0 22.63 0L304 432a16 16 0 0 0 0-22.62zM176 272h-48v-32h48a16 16 0 0 1 0 32zm80-209a64 64 0 0 0-128 0 64 64 0 0 0-64 64h256a64 64 0 0 0-64-64zm-64 24a24 24 0 1 1 24-24 23.94 23.94 0 0 1-24 24z"]]
};
exports.faClipboardPrescription = faClipboardPrescription;
var faClipboardUser = {
  prefix: 'fad',
  iconName: 'clipboard-user',
  icon: [384, 512, [], "f7f3", ["M336 63h-80v1a64 64 0 0 1 64 64H64a64 64 0 0 1 64-64v-1H48a48 48 0 0 0-48 48v352a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V111a48 48 0 0 0-48-48zM192 192a64 64 0 1 1-64 64 64 64 0 0 1 64-64zm112 236.8c0 10.61-10 19.2-22.4 19.2H102.4C90 448 80 439.4 80 428.8v-19.2c0-31.81 30.09-57.6 67.2-57.6h5a103.22 103.22 0 0 0 79.7 0h5c37.11 0 67.2 25.79 67.2 57.6z", "M236.9 352h-5a103.22 103.22 0 0 1-79.7 0h-5c-37.11 0-67.2 25.79-67.2 57.6v19.2c0 10.6 10 19.2 22.4 19.2h179.2c12.4 0 22.4-8.59 22.4-19.2l.1-19.2c0-31.81-30.1-57.6-67.2-57.6zM128 256a64 64 0 1 0 64-64 64 64 0 0 0-64 64zM256 64a64 64 0 0 0-128 0 64 64 0 0 0-64 64h256a64 64 0 0 0-64-64zm-64 24a24 24 0 1 1 24-24 23.94 23.94 0 0 1-24 24z"]]
};
exports.faClipboardUser = faClipboardUser;
var faClock = {
  prefix: 'fad',
  iconName: 'clock',
  icon: [512, 512, [], "f017", ["M220 116a12 12 0 0 1 12-12h48a12 12 0 0 1 12 12v137.7l63.5 46.2a12 12 0 0 1 2.6 16.8l-28.2 38.8a12.08 12.08 0 0 1-16.8 2.6L224.9 294a12.08 12.08 0 0 1-4.9-9.7z", "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm102.1 308.7l-28.2 38.8a12.08 12.08 0 0 1-16.8 2.6L224.9 294a12.08 12.08 0 0 1-4.9-9.7V116a12 12 0 0 1 12-12h48a12 12 0 0 1 12 12v137.7l63.5 46.2a12 12 0 0 1 2.6 16.8z"]]
};
exports.faClock = faClock;
var faClone = {
  prefix: 'fad',
  iconName: 'clone',
  icon: [512, 512, [], "f24d", ["M48 512a48 48 0 0 1-48-48V176a48 48 0 0 1 48-48h48v208a80.09 80.09 0 0 0 80 80h208v48a48 48 0 0 1-48 48H48z", "M512 48v288a48 48 0 0 1-48 48H176a48 48 0 0 1-48-48V48a48 48 0 0 1 48-48h288a48 48 0 0 1 48 48z"]]
};
exports.faClone = faClone;
var faClosedCaptioning = {
  prefix: 'fad',
  iconName: 'closed-captioning',
  icon: [512, 512, [], "f20a", ["M464 64H48a48 48 0 0 0-48 48v288a48 48 0 0 0 48 48h416a48 48 0 0 0 48-48V112a48 48 0 0 0-48-48zM246.3 324c-53.6 56.8-172.8 32.1-172.8-67.9 0-97.3 121.7-119.5 172.5-70.1 2.1 2 2.5 3.2 1 5.7l-17.5 30.5c-.11.18-.24.36-.37.54a6.23 6.23 0 0 1-8.73 1.16c-40.8-32-94.6-14.9-94.6 31.2.1 48 51.1 70.5 92.3 32.6a6.47 6.47 0 0 1 .57-.47 6.19 6.19 0 0 1 8.63 1.37l19.5 27.7a6 6 0 0 1-.5 7.7zm162.2-36.3a6.47 6.47 0 0 1 .57-.47 6.19 6.19 0 0 1 8.63 1.37l19.5 27.7a6 6 0 0 1-.5 7.7C383.2 380.9 264 356.1 264 256.1c0-97.3 121.7-119.5 172.5-70.1 2.1 2 2.5 3.2 1 5.7L420 222.2c-.11.18-.24.36-.37.54a6.23 6.23 0 0 1-8.73 1.16c-40.8-32-94.6-14.9-94.6 31.2 0 48 51 70.5 92.2 32.6z", "M227.3 288.6a6.19 6.19 0 0 0-8.63-1.37 6.47 6.47 0 0 0-.57.47c-41.2 37.9-92.2 15.4-92.3-32.6 0-46.1 53.8-63.2 94.6-31.2a6.23 6.23 0 0 0 8.73-1.16c.13-.18.26-.36.37-.54l17.5-30.5c1.5-2.5 1.1-3.7-1-5.7-50.8-49.4-172.5-27.2-172.5 70.1 0 100 119.2 124.7 172.8 67.9a6 6 0 0 0 .5-7.7zm190.4 0a6.19 6.19 0 0 0-8.63-1.37 6.47 6.47 0 0 0-.57.47c-41.2 37.9-92.2 15.4-92.2-32.6 0-46.1 53.8-63.2 94.6-31.2a6.23 6.23 0 0 0 8.73-1.16c.13-.18.26-.36.37-.54l17.5-30.5c1.5-2.5 1.1-3.7-1-5.7-50.8-49.4-172.5-27.2-172.5 70.1 0 100 119.2 124.8 172.7 67.9a6 6 0 0 0 .5-7.7z"]]
};
exports.faClosedCaptioning = faClosedCaptioning;
var faCloud = {
  prefix: 'fad',
  iconName: 'cloud',
  icon: [640, 512, [], "f0c2", ["", "M640 352a128 128 0 0 1-128 128H144a144 144 0 0 1-47.8-279.9c-.1-2.7-.2-5.4-.2-8.1a160 160 0 0 1 298.7-79.8A95.95 95.95 0 0 1 544 192a96.66 96.66 0 0 1-6.4 34.6A128 128 0 0 1 640 352z"]]
};
exports.faCloud = faCloud;
var faCloudDownload = {
  prefix: 'fad',
  iconName: 'cloud-download',
  icon: [640, 512, [], "f0ed", ["M537.6 226.6A96.11 96.11 0 0 0 448 96a95.51 95.51 0 0 0-53.3 16.2A160 160 0 0 0 96 192c0 2.7.1 5.4.2 8.1A144 144 0 0 0 144 480h368a128 128 0 0 0 25.6-253.4zm-139.9 93L305 412.3a23.9 23.9 0 0 1-33.9 0l-92.7-92.7a23.9 23.9 0 0 1 0-33.9l10.8-10.8a24.09 24.09 0 0 1 34.5.5l32.4 34.5V184a23.94 23.94 0 0 1 24-24h16a23.94 23.94 0 0 1 24 24v125.9l32.4-34.5a24 24 0 0 1 34.5-.5l10.8 10.8a24.18 24.18 0 0 1-.1 33.9z", "M397.7 319.6L305 412.3a23.9 23.9 0 0 1-33.9 0l-92.7-92.7a23.9 23.9 0 0 1 0-33.9l10.8-10.8a24.09 24.09 0 0 1 34.5.5l32.4 34.5V184a23.94 23.94 0 0 1 24-24h16a23.94 23.94 0 0 1 24 24v125.9l32.4-34.5a24 24 0 0 1 34.5-.5l10.8 10.8a24.18 24.18 0 0 1-.1 33.9z"]]
};
exports.faCloudDownload = faCloudDownload;
var faCloudDownloadAlt = {
  prefix: 'fad',
  iconName: 'cloud-download-alt',
  icon: [640, 512, [], "f381", ["M537.6 226.6A96.11 96.11 0 0 0 448 96a95.51 95.51 0 0 0-53.3 16.2A160 160 0 0 0 96 192c0 2.7.1 5.4.2 8.1A144 144 0 0 0 144 480h368a128 128 0 0 0 25.6-253.4zm-132.9 88.7L299.3 420.7a16.06 16.06 0 0 1-22.6 0L171.3 315.3c-10.1-10.1-2.9-27.3 11.3-27.3H248V176a16 16 0 0 1 16-16h48a16 16 0 0 1 16 16v112h65.4c14.2 0 21.4 17.2 11.3 27.3z", "M404.7 315.3L299.3 420.7a16.06 16.06 0 0 1-22.6 0L171.3 315.3c-10.1-10.1-2.9-27.3 11.3-27.3H248V176a16 16 0 0 1 16-16h48a16 16 0 0 1 16 16v112h65.4c14.2 0 21.4 17.2 11.3 27.3z"]]
};
exports.faCloudDownloadAlt = faCloudDownloadAlt;
var faCloudDrizzle = {
  prefix: 'fad',
  iconName: 'cloud-drizzle',
  icon: [512, 512, [], "f738", ["M48 360a16 16 0 0 0-16 16v40a16 16 0 0 0 32 0v-40a16 16 0 0 0-16-16zm96 80a16 16 0 0 0-16 16v40a16 16 0 0 0 32 0v-40a16 16 0 0 0-16-16zm96-80a16 16 0 0 0-16 16v40a16 16 0 0 0 32 0v-40a16 16 0 0 0-16-16zm96 80a16 16 0 0 0-16 16v40a16 16 0 0 0 32 0v-40a16 16 0 0 0-16-16zm96-80a16 16 0 0 0-16 16v40a16 16 0 0 0 32 0v-40a16 16 0 0 0-16-16z", "M512 224a96 96 0 0 1-96 96H96a96 96 0 0 1-96-96c0-42.5 27.8-78.2 66.1-90.8A113.72 113.72 0 0 1 64 112 111.94 111.94 0 0 1 176 0c43.3 0 80.4 24.8 99 60.8C289.7 43.3 311.4 32 336 32a80 80 0 0 1 80 80 78.09 78.09 0 0 1-1.6 16.2c.5 0 1-.2 1.6-.2a96 96 0 0 1 96 96z"]]
};
exports.faCloudDrizzle = faCloudDrizzle;
var faCloudHail = {
  prefix: 'fad',
  iconName: 'cloud-hail',
  icon: [512, 512, [], "f739", ["M384 352a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm-192 96a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm128 0a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm-64-96a32 32 0 1 0 32 32 32 32 0 0 0-32-32zM64 448a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm64-96a32 32 0 1 0 32 32 32 32 0 0 0-32-32z", "M512 224a96 96 0 0 1-96 96H96a96 96 0 0 1-96-96c0-42.5 27.8-78.2 66.1-90.8A113.72 113.72 0 0 1 64 112 111.94 111.94 0 0 1 176 0c43.3 0 80.4 24.8 99 60.8C289.7 43.3 311.4 32 336 32a80 80 0 0 1 80 80 78.09 78.09 0 0 1-1.6 16.2c.5 0 1-.2 1.6-.2a96 96 0 0 1 96 96z"]]
};
exports.faCloudHail = faCloudHail;
var faCloudHailMixed = {
  prefix: 'fad',
  iconName: 'cloud-hail-mixed',
  icon: [512, 512, [], "f73a", ["M183.89 370.13a15.88 15.88 0 0 0-21.8 6l-64 112a15.91 15.91 0 0 0 6 21.79 16 16 0 0 0 21.8-6l64-112a16 16 0 0 0-6-21.79zm95.3-.4a16 16 0 0 0-21.5 7.2l-16 32a16 16 0 0 0 7.2 21.5 16.88 16.88 0 0 0 7.2 1.7 16 16 0 0 0 14.3-8.8l16-32a16.23 16.23 0 0 0-7.2-21.6zm-192 0a16 16 0 0 0-21.5 7.2l-16 32a16 16 0 0 0 7.2 21.5 16.88 16.88 0 0 0 7.2 1.7 16 16 0 0 0 14.3-8.8l16-32a16.23 16.23 0 0 0-7.19-21.6zm384 0a16 16 0 0 0-21.5 7.2l-16 32a16 16 0 0 0 7.19 21.5 16.88 16.88 0 0 0 7.2 1.7 16 16 0 0 0 14.3-8.8l16-32a16.23 16.23 0 0 0-7.2-21.6zm-95.29.4a15.88 15.88 0 0 0-21.8 6l-64 112a15.91 15.91 0 0 0 6 21.79 16 16 0 0 0 21.8-6l64-112a16 16 0 0 0-6.01-21.79zM32 448a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm192 0a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm192 0a32 32 0 1 0 32 32 32 32 0 0 0-32-32z", "M512 224a96 96 0 0 1-96 96H96a96 96 0 0 1-96-96c0-42.5 27.8-78.2 66.1-90.8A113.72 113.72 0 0 1 64 112 111.94 111.94 0 0 1 176 0c43.3 0 80.4 24.8 99 60.8C289.7 43.3 311.4 32 336 32a80 80 0 0 1 80 80 78.09 78.09 0 0 1-1.6 16.2c.5 0 1-.2 1.6-.2a96 96 0 0 1 96 96z"]]
};
exports.faCloudHailMixed = faCloudHailMixed;
var faCloudMeatball = {
  prefix: 'fad',
  iconName: 'cloud-meatball',
  icon: [512, 512, [], "f73b", ["M48 352a48 48 0 1 0 48 48 48 48 0 0 0-48-48zm416 0a48 48 0 1 0 48 48 48 48 0 0 0-48-48zm-119 11.1c4.6-14.5 1.6-30.8-9.8-42.3s-27.8-14.4-42.3-9.9c-7-13.5-20.7-23-36.9-23s-29.9 9.5-36.9 23c-14.5-4.6-30.8-1.6-42.3 9.9s-14.4 27.8-9.9 42.3c-13.5 7-23 20.7-23 36.9s9.5 29.9 23 36.9c-4.6 14.5-1.6 30.8 9.9 42.3a41.79 41.79 0 0 0 29.7 12.3 39.21 39.21 0 0 0 12.6-2.5c7 13.5 20.7 23 36.9 23s29.9-9.5 36.9-23c4.1 1.3 8.3 2.5 12.6 2.5a41.79 41.79 0 0 0 29.7-12.3c11.5-11.5 14.4-27.8 9.8-42.3 13.5-7 23-20.7 23-36.9s-9.5-29.9-23-36.9z", "M416 320h-43.4a70.78 70.78 0 0 0-14.8-21.8 72.44 72.44 0 0 0-50.8-21.3 72.67 72.67 0 0 0-102 0 71.9 71.9 0 0 0-65.6 43.1H96a96 96 0 0 1-96-96c0-42.5 27.8-78.2 66.1-90.8A113.72 113.72 0 0 1 64 112 111.94 111.94 0 0 1 176 0c43.3 0 80.4 24.8 99 60.8C289.7 43.3 311.4 32 336 32a80 80 0 0 1 80 80 78.09 78.09 0 0 1-1.6 16.2c.5 0 1-.2 1.6-.2a96 96 0 0 1 0 192z"]]
};
exports.faCloudMeatball = faCloudMeatball;
var faCloudMoon = {
  prefix: 'fad',
  iconName: 'cloud-moon',
  icon: [576, 512, [], "f6c3", ["M574 313.47A191.54 191.54 0 0 1 436.9 384a110.41 110.41 0 0 0-53.5-52.7 94.83 94.83 0 0 0 .6-10.72c0-53-43.1-96.17-96-96.17a95.1 95.1 0 0 0-36.4 7.21 124.78 124.78 0 0 0-16.7-14.22 188.15 188.15 0 0 1-1.8-25.05C233.1 86.06 319.1 0 425 0a197.47 197.47 0 0 1 35.1 3.21c8.2 1.6 10.1 12.62 2.8 16.73a150.63 150.63 0 0 0-76.1 131c0 94.17 85.4 165.7 178.5 148a9 9 0 0 1 8.7 14.53z", "M416 432a80 80 0 0 1-80 80H96a96 96 0 0 1-96-96c0-41.9 27.1-77.2 64.6-90.3-.1-1.9-.6-3.7-.6-5.7a96 96 0 0 1 96-96c36.2 0 67.4 20.3 83.7 49.9a63.83 63.83 0 0 1 99.1 78.8c40.9 3.5 73.2 37.4 73.2 79.3z"]]
};
exports.faCloudMoon = faCloudMoon;
var faCloudMoonRain = {
  prefix: 'fad',
  iconName: 'cloud-moon-rain',
  icon: [576, 512, [], "f73c", ["M567.9 223.8c-70.4 13.3-135-40.3-135-110.8a112.62 112.62 0 0 1 57.5-98.1 6.74 6.74 0 0 0-2.1-12.5A146.75 146.75 0 0 0 461.8 0c-77.9 0-141.1 61.2-144.4 137.9a111.46 111.46 0 0 1 58.9 61.7 111.81 111.81 0 0 1 70.2 86.8c5.1.5 10 1.5 15.2 1.5a145 145 0 0 0 112.6-53.3c4.2-4.8-.2-12-6.4-10.8zM364.5 418.1a16 16 0 0 0-21.8 6l-36.6 64a15.94 15.94 0 0 0 6 21.8 16 16 0 0 0 21.8-6l36.6-64a16 16 0 0 0-6-21.8zm-96 0a16 16 0 0 0-21.8 6l-36.6 64a15.94 15.94 0 0 0 6 21.8 16 16 0 0 0 21.8-6l36.6-64a16 16 0 0 0-6-21.8zm-96 0a16 16 0 0 0-21.8 6l-36.6 64a15.94 15.94 0 0 0 6 21.8 16 16 0 0 0 21.8-6l36.6-64a16 16 0 0 0-6-21.8zm-96 0a16 16 0 0 0-21.8 6l-36.6 64a15.94 15.94 0 0 0 6 21.8 16 16 0 0 0 21.8-6l36.6-64a16 16 0 0 0-6-21.8z", "M416 304a80 80 0 0 1-80 80H80a80 80 0 0 1-15.8-158.4c0-.5-.2-1.1-.2-1.6a95.82 95.82 0 0 1 173.7-56 79 79 0 0 1 34.3-8 80 80 0 0 1 78.5 65.5A79.79 79.79 0 0 1 416 304z"]]
};
exports.faCloudMoonRain = faCloudMoonRain;
var faCloudMusic = {
  prefix: 'fad',
  iconName: 'cloud-music',
  icon: [640, 512, [], "f8ae", ["M537.59 226.59a96 96 0 0 0-142.9-114.39A160 160 0 0 0 96 192c0 2.7.09 5.41.19 8.09A144 144 0 0 0 144 480h368a128 128 0 0 0 25.59-253.41zM384 352c0 17.67-21.5 32-48 32s-48-14.33-48-32 21.5-32 48-32a69.82 69.82 0 0 1 16 2v-76.36l-96 37.52V384c0 17.67-21.5 32-48 32s-48-14.33-48-32 21.5-32 48-32a69.82 69.82 0 0 1 16 2V239.25A16 16 0 0 1 235.19 224l128-47.25A16 16 0 0 1 384 192z", "M208 352a69.82 69.82 0 0 1 16 2V239.25A16 16 0 0 1 235.19 224l128-47.25A16 16 0 0 1 384 192v160c0 17.67-21.5 32-48 32s-48-14.33-48-32 21.5-32 48-32a69.82 69.82 0 0 1 16 2v-76.36l-96 37.52V384c0 17.67-21.5 32-48 32s-48-14.33-48-32 21.5-32 48-32z"]]
};
exports.faCloudMusic = faCloudMusic;
var faCloudRain = {
  prefix: 'fad',
  iconName: 'cloud-rain',
  icon: [512, 512, [], "f73d", ["M88 374.22c-12.8 44.4-40 56.39-40 87.69C48 489.6 69.5 512 96 512s48-22.4 48-50.09c0-31.4-27.2-43.09-40-87.69a8.26 8.26 0 0 0-16 0zm160 0c-12.8 44.4-40 56.39-40 87.69 0 27.69 21.5 50.09 48 50.09s48-22.4 48-50.09c0-31.4-27.2-43.09-40-87.69a8.26 8.26 0 0 0-16 0zm176 0a8.26 8.26 0 0 0-16 0c-12.8 44.4-40 56.39-40 87.69 0 27.69 21.5 50.09 48 50.09s48-22.4 48-50.09c0-31.4-27.2-43.09-40-87.69z", "M512 224a96 96 0 0 1-96 96H96a96 96 0 0 1-96-96c0-42.5 27.8-78.2 66.1-90.8A113.72 113.72 0 0 1 64 112 111.94 111.94 0 0 1 176 0c43.3 0 80.4 24.8 99 60.8C289.7 43.3 311.4 32 336 32a80 80 0 0 1 80 80 78.09 78.09 0 0 1-1.6 16.2c.5 0 1-.2 1.6-.2a96 96 0 0 1 96 96z"]]
};
exports.faCloudRain = faCloudRain;
var faCloudRainbow = {
  prefix: 'fad',
  iconName: 'cloud-rainbow',
  icon: [576, 512, [], "f73e", ["M430.8 304.9a125.07 125.07 0 0 1 26.9 20.3C487.1 292.8 529 272 576 272v-64a223.38 223.38 0 0 0-156.8 64.3 94.09 94.09 0 0 1 11.6 32.6zM238.6 173.6a142.8 142.8 0 0 1 56.6 31C359.6 119.4 461.3 64 576 64V0C437.1 0 314.2 68.7 238.6 173.6zm87.2 51.5c7.4-.8 36.7-5.4 68.4 18.9A255.37 255.37 0 0 1 576 168v-64c-101.3 0-191.6 47.4-250.2 121.1z", "M399.2 325.6c37.6 13 64.8 48.4 64.8 90.4a96 96 0 0 1-96 96H96a96 96 0 0 1-96-96c0-50.6 39.2-91.6 88.9-95.3-.2-2.9-.9-5.7-.9-8.7a111.87 111.87 0 0 1 213.9-46 63.81 63.81 0 0 1 98.1 54 53.91 53.91 0 0 1-.8 5.6z"]]
};
exports.faCloudRainbow = faCloudRainbow;
var faCloudShowers = {
  prefix: 'fad',
  iconName: 'cloud-showers',
  icon: [512, 512, [], "f73f", ["M48 368a16 16 0 0 0-16 16v80a16 16 0 0 0 32 0v-80a16 16 0 0 0-16-16zm96 32a16 16 0 0 0-16 16v80a16 16 0 0 0 32 0v-80a16 16 0 0 0-16-16zm96-32a16 16 0 0 0-16 16v80a16 16 0 0 0 32 0v-80a16 16 0 0 0-16-16zm96 32a16 16 0 0 0-16 16v80a16 16 0 0 0 32 0v-80a16 16 0 0 0-16-16zm96-32a16 16 0 0 0-16 16v80a16 16 0 0 0 32 0v-80a16 16 0 0 0-16-16z", "M512 224a96 96 0 0 1-96 96H96a96 96 0 0 1-96-96c0-42.5 27.8-78.2 66.1-90.8A113.72 113.72 0 0 1 64 112 111.94 111.94 0 0 1 176 0c43.3 0 80.4 24.8 99 60.8C289.7 43.3 311.4 32 336 32a80 80 0 0 1 80 80 78.09 78.09 0 0 1-1.6 16.2c.5 0 1-.2 1.6-.2a96 96 0 0 1 96 96z"]]
};
exports.faCloudShowers = faCloudShowers;
var faCloudShowersHeavy = {
  prefix: 'fad',
  iconName: 'cloud-showers-heavy',
  icon: [512, 512, [], "f740", ["M183.9 370.1a15.88 15.88 0 0 0-21.8 6l-64 112a15.92 15.92 0 0 0 6 21.8 16 16 0 0 0 21.8-6l64-112a16 16 0 0 0-6-21.8zm96 0a15.88 15.88 0 0 0-21.8 6l-64 112a15.92 15.92 0 0 0 6 21.8 16 16 0 0 0 21.8-6l64-112a16 16 0 0 0-6-21.8zm-192 0a15.88 15.88 0 0 0-21.8 6l-64 112a15.92 15.92 0 0 0 6 21.8 16 16 0 0 0 21.8-6l64-112a16 16 0 0 0-5.99-21.8zm384 0a15.88 15.88 0 0 0-21.8 6l-64 112a15.92 15.92 0 0 0 6 21.8 16 16 0 0 0 21.8-6l64-112a16 16 0 0 0-6.01-21.8zm-96 0a15.88 15.88 0 0 0-21.8 6l-64 112a15.92 15.92 0 0 0 6 21.8 16 16 0 0 0 21.8-6l64-112a16 16 0 0 0-6.01-21.8z", "M512 224a96 96 0 0 1-96 96H96a96 96 0 0 1-96-96c0-42.5 27.8-78.2 66.1-90.8A113.72 113.72 0 0 1 64 112 112 112 0 0 1 176 0c43.3 0 80.4 24.8 99 60.8C289.7 43.3 311.4 32 336 32a80 80 0 0 1 80 80 78.09 78.09 0 0 1-1.6 16.2c.5 0 1-.2 1.6-.2a96 96 0 0 1 96 96z"]]
};
exports.faCloudShowersHeavy = faCloudShowersHeavy;
var faCloudSleet = {
  prefix: 'fad',
  iconName: 'cloud-sleet',
  icon: [512, 512, [], "f741", ["M87.2 353.7a16.12 16.12 0 0 0-21.5 7.2l-64 128a16 16 0 0 0 7.2 21.5 16.88 16.88 0 0 0 7.2 1.7 16 16 0 0 0 14.3-8.8l64-128a16.23 16.23 0 0 0-7.2-21.6zm256 0a16.12 16.12 0 0 0-21.5 7.2l-64 128a16 16 0 0 0 7.2 21.5 16.88 16.88 0 0 0 7.2 1.7 16 16 0 0 0 14.3-8.8l64-128a16.23 16.23 0 0 0-7.2-21.6zM492 432l-27.9-16 27.9-16a8 8 0 0 0 2.9-10.9l-8-13.9a8 8 0 0 0-10.9-2.9l-28 16.1V360a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v28.4l-28-16.1a8 8 0 0 0-10.9 2.9l-8 13.9A8 8 0 0 0 372 400l27.9 16-27.9 16a8 8 0 0 0-2.9 10.9l8 13.9a8 8 0 0 0 10.9 2.9l28-16.1V472a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-28.4l28 16.1a8 8 0 0 0 10.9-2.9l8-13.9A8 8 0 0 0 492 432zm-253.1-42.9l-8-13.9a8 8 0 0 0-10.9-2.9l-28 16.1V360a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v28.4l-28-16.1a8 8 0 0 0-10.9 2.9l-8 13.9A8 8 0 0 0 116 400l27.9 16-27.9 16a8 8 0 0 0-2.9 10.9l8 13.9a8 8 0 0 0 10.9 2.9l28-16.1V472a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-28.4l28 16.1a8 8 0 0 0 10.9-2.9l8-13.9A8 8 0 0 0 236 432l-27.9-16 27.9-16a8 8 0 0 0 2.9-10.9z", "M416 320H96a96 96 0 0 1-96-96c0-42.5 27.8-78.2 66.1-90.8A113.72 113.72 0 0 1 64 112 111.94 111.94 0 0 1 176 0c43.3 0 80.4 24.8 99 60.8C289.7 43.3 311.4 32 336 32a80 80 0 0 1 80 80 78.09 78.09 0 0 1-1.6 16.2c.5 0 1-.2 1.6-.2a96 96 0 0 1 0 192z"]]
};
exports.faCloudSleet = faCloudSleet;
var faCloudSnow = {
  prefix: 'fad',
  iconName: 'cloud-snow',
  icon: [512, 512, [], "f742", ["M126.9 389.1l-8-13.9a8 8 0 0 0-10.9-2.9l-28 16.1V360a8 8 0 0 0-8-8H56a8 8 0 0 0-8 8v28.4l-28-16.1a8 8 0 0 0-10.9 2.9l-8 13.9A8 8 0 0 0 4 400l27.9 16L4 432a8 8 0 0 0-2.9 10.9l8 13.9a8 8 0 0 0 10.9 2.9l28-16.1V472a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-28.4l28 16.1a8 8 0 0 0 10.9-2.9l8-13.9A8 8 0 0 0 124 432l-27.9-16 27.9-16a8 8 0 0 0 2.9-10.9zm192 32l-8-13.9a8 8 0 0 0-10.9-2.9l-28 16.1V392a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v28.4l-28-16.1a8 8 0 0 0-10.9 2.9l-8 13.9A8 8 0 0 0 196 432l27.9 16-27.9 16a8 8 0 0 0-2.9 10.9l8 13.9a8 8 0 0 0 10.9 2.9l28-16.1V504a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-28.4l28 16.1a8 8 0 0 0 10.9-2.9l8-13.9A8 8 0 0 0 316 464l-27.9-16 27.9-16a8 8 0 0 0 2.9-10.9zM508 432l-27.9-16 27.9-16a8 8 0 0 0 2.9-10.9l-8-13.9a8 8 0 0 0-10.9-2.9l-28 16.1V360a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v28.4l-28-16.1a8 8 0 0 0-10.9 2.9l-8 13.9A8 8 0 0 0 388 400l27.9 16-27.9 16a8 8 0 0 0-2.9 10.9l8 13.9a8 8 0 0 0 10.9 2.9l28-16.1V472a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-28.4l28 16.1a8 8 0 0 0 10.9-2.9l8-13.9A8 8 0 0 0 508 432z", "M0 224c0-42.5 27.8-78.2 66.1-90.8A113.72 113.72 0 0 1 64 112 111.94 111.94 0 0 1 176 0c43.3 0 80.4 24.8 99 60.8C289.7 43.3 311.4 32 336 32a80 80 0 0 1 80 80 78.09 78.09 0 0 1-1.6 16.2c.5 0 1-.2 1.6-.2a96 96 0 0 1 0 192H96a96 96 0 0 1-96-96z"]]
};
exports.faCloudSnow = faCloudSnow;
var faCloudSun = {
  prefix: 'fad',
  iconName: 'cloud-sun',
  icon: [640, 512, [], "f6c4", ["M366.8 61.89L279 91.18 237.5 8.4a15.13 15.13 0 0 0-27.1 0L169 91.18 81.1 61.89a15.23 15.23 0 0 0-19.2 19.19l29.3 87.79-82.8 41.49a15.12 15.12 0 0 0 0 27.09l82.8 41.4-29.3 87.78a15.16 15.16 0 0 0 19.2 19.19l76.1-25.29A129 129 0 0 1 180.8 327a110.27 110.27 0 0 1-36-24 112 112 0 1 1 180.7-125.53 143.5 143.5 0 0 1 30.7-7.5L386 81.08a15.16 15.16 0 0 0-19.2-19.19zM224 140a83.85 83.85 0 0 0-16.1 166.17 128.29 128.29 0 0 1 25.2-11.7 144.12 144.12 0 0 1 67.4-105A84.15 84.15 0 0 0 224 140z", "M575.2 325.64c37.6 13 64.8 48.29 64.8 90.38a96 96 0 0 1-96 96H272a96 96 0 0 1-96-96c0-50.59 39.3-91.58 88.9-95.28-.2-2.9-.9-5.7-.9-8.7a112 112 0 0 1 112-112c45.4 0 84.3 27.2 101.9 66A63.81 63.81 0 0 1 576 320a53.91 53.91 0 0 1-.8 5.6z"]]
};
exports.faCloudSun = faCloudSun;
var faCloudSunRain = {
  prefix: 'fad',
  iconName: 'cloud-sun-rain',
  icon: [576, 512, [], "f743", ["M322 96.2l8.9-26.7a13 13 0 0 0-16.5-16.4l-75.3 25.1-35.5-71a13 13 0 0 0-23.3 0l-35.5 71-75.3-25.1a13 13 0 0 0-16.4 16.5l25.1 75.3-71 35.5a13 13 0 0 0 0 23.3l71 35.5-25.1 75.3A13.06 13.06 0 0 0 69.6 331l59.2-19.7c-.2-2.4-.7-4.7-.7-7.2a110.52 110.52 0 0 1 6.2-35.9 92.22 92.22 0 0 1-10.2-8.3 96.21 96.21 0 0 1 0-135.8c34.6-34.6 89.1-36.8 126.7-7.4A127.12 127.12 0 0 1 320 96c.7 0 1.3.2 2 .2zm-96.2 41.7A63.13 63.13 0 0 0 192 128a64.06 64.06 0 0 0-64 64 63.4 63.4 0 0 0 21.1 47.1 112.14 112.14 0 0 1 44.8-37.2 127.52 127.52 0 0 1 31.9-64zm298.7 280.2a16 16 0 0 0-21.8 6l-36.6 64a15.94 15.94 0 0 0 6 21.8 16 16 0 0 0 21.8-6l36.6-64a16 16 0 0 0-6-21.8zm-96 0a16 16 0 0 0-21.8 6l-36.6 64a15.94 15.94 0 0 0 6 21.8 16 16 0 0 0 21.8-6l36.6-64a16 16 0 0 0-6-21.8zm-96 0a16 16 0 0 0-21.8 6l-36.6 64a15.94 15.94 0 0 0 6 21.8 16 16 0 0 0 21.8-6l36.6-64a16 16 0 0 0-6-21.8zm-96 0a16 16 0 0 0-21.8 6l-36.6 64a15.94 15.94 0 0 0 6 21.8 16 16 0 0 0 21.8-6l36.6-64a16 16 0 0 0-6-21.8z", "M576 304a80 80 0 0 1-80 80H240a80 80 0 0 1-15.8-158.4c0-.5-.2-1.1-.2-1.6a95.82 95.82 0 0 1 173.7-56 79 79 0 0 1 34.3-8 80 80 0 0 1 78.5 65.5A79.79 79.79 0 0 1 576 304z"]]
};
exports.faCloudSunRain = faCloudSunRain;
var faCloudUpload = {
  prefix: 'fad',
  iconName: 'cloud-upload',
  icon: [640, 512, [], "f0ee", ["M537.6 226.6A96.11 96.11 0 0 0 448 96a95.51 95.51 0 0 0-53.3 16.2A160 160 0 0 0 96 192c0 2.7.1 5.4.2 8.1A144 144 0 0 0 144 480h368a128 128 0 0 0 25.6-253.4zm-139.9 63.7l-10.8 10.8a24.09 24.09 0 0 1-34.5-.5L320 266.1V392a23.94 23.94 0 0 1-24 24h-16a23.94 23.94 0 0 1-24-24V266.1l-32.4 34.5a24 24 0 0 1-34.5.5l-10.8-10.8a23.9 23.9 0 0 1 0-33.9l92.7-92.7a23.9 23.9 0 0 1 33.9 0l92.7 92.7a24 24 0 0 1 .1 33.9z", "M397.7 290.3l-10.8 10.8a24.09 24.09 0 0 1-34.5-.5L320 266.1V392a23.94 23.94 0 0 1-24 24h-16a23.94 23.94 0 0 1-24-24V266.1l-32.4 34.5a24 24 0 0 1-34.5.5l-10.8-10.8a23.9 23.9 0 0 1 0-33.9l92.7-92.7a23.9 23.9 0 0 1 33.9 0l92.7 92.7a24 24 0 0 1 .1 33.9z"]]
};
exports.faCloudUpload = faCloudUpload;
var faCloudUploadAlt = {
  prefix: 'fad',
  iconName: 'cloud-upload-alt',
  icon: [640, 512, [], "f382", ["M537.6 226.6A96.11 96.11 0 0 0 448 96a95.51 95.51 0 0 0-53.3 16.2A160 160 0 0 0 96 192c0 2.7.1 5.4.2 8.1A144 144 0 0 0 144 480h368a128 128 0 0 0 25.6-253.4zM393.4 288H328v112a16 16 0 0 1-16 16h-48a16 16 0 0 1-16-16V288h-65.4a16 16 0 0 1-11.3-27.3l105.4-105.4a16.06 16.06 0 0 1 22.6 0l105.4 105.4c10.1 10.1 2.9 27.3-11.3 27.3z", "M393.4 288H328v112a16 16 0 0 1-16 16h-48a16 16 0 0 1-16-16V288h-65.4a16 16 0 0 1-11.3-27.3l105.4-105.4a16.06 16.06 0 0 1 22.6 0l105.4 105.4c10.1 10.1 2.9 27.3-11.3 27.3z"]]
};
exports.faCloudUploadAlt = faCloudUploadAlt;
var faClouds = {
  prefix: 'fad',
  iconName: 'clouds',
  icon: [640, 512, [], "f744", ["M161.6 288H96a96 96 0 0 1 0-192c.6 0 1.1.2 1.6.2C105.3 41.9 151.6 0 208 0a111.61 111.61 0 0 1 104.5 72.7A95.07 95.07 0 0 1 352 64a96 96 0 0 1 96 96 93 93 0 0 1-7 34.7 110.5 110.5 0 0 0-31.6 11.8A142.54 142.54 0 0 0 304 160c-73.9 0-134.3 56.2-142.4 128z", "M640 416a96 96 0 0 1-96 96H224a96 96 0 0 1-96-96c0-42.5 27.8-78.2 66.1-90.8A113.72 113.72 0 0 1 192 304a111.94 111.94 0 0 1 112-112c43.2 0 80.4 24.9 99 60.8 14.7-17.5 36.4-28.8 61-28.8a80 80 0 0 1 80 80 78.09 78.09 0 0 1-1.6 16.2c.5 0 1-.2 1.6-.2a96 96 0 0 1 96 96z"]]
};
exports.faClouds = faClouds;
var faCloudsMoon = {
  prefix: 'fad',
  iconName: 'clouds-moon',
  icon: [640, 512, [], "f745", ["M638.48 257.87A159.19 159.19 0 0 1 534.56 320a124.64 124.64 0 0 0-61.37-27.16 111.65 111.65 0 0 0-88.77-62.12 113.15 113.15 0 0 0-32.06-62.37c0-.7-.24-1.3-.27-2C349.13 77.53 418.1 3.12 506 .09a155.62 155.62 0 0 1 29.15 1.72A7.56 7.56 0 0 1 538 15.69a126.31 126.31 0 0 0-59.51 111.7c2.62 78.77 75.59 136.11 152.4 118.57 6.75-1.54 11.76 6.24 7.59 11.91z", "M448 320h-1.6a79.68 79.68 0 0 0-139.44-35.2c-18.61-35.9-55.82-60.8-99-60.8-58.38 0-105.7 44.7-110.96 101.6-37.85 12.9-65.16 48.3-65.16 90.4a96 96 0 0 0 96 96H448a96 96 0 1 0 0-192zM68 303.41c14.79-64.66 71.51-111.31 139-111.31a141.46 141.46 0 0 1 104.88 46.55 110.61 110.61 0 0 1 36.91-12.92c-6.76-37.34-39.1-65.66-78.11-65.66h-17.54a79.53 79.53 0 0 0-156 0H79.6c-44 0-79.6 35.83-79.6 80.08a80 80 0 0 0 50.75 74.47A131.22 131.22 0 0 1 68 303.41z"]]
};
exports.faCloudsMoon = faCloudsMoon;
var faCloudsSun = {
  prefix: 'fad',
  iconName: 'clouds-sun',
  icon: [640, 512, [], "f746", ["M314.45 53.1l-75.29 25.1-35.49-71a13 13 0 0 0-23.3 0l-35.49 71-75.29-25.1a13.06 13.06 0 0 0-16.5 16.5l25.1 75.3-71 35.5a13 13 0 0 0 0 23.3l71 35.5-25.1 75.3a13.06 13.06 0 0 0 16.5 16.5l42.69-14.2a124.47 124.47 0 0 1 20.1-13.6 141.91 141.91 0 0 1 10.5-29.1 94.9 94.9 0 0 1-18.7-150 96.18 96.18 0 0 1 135.78 0 93.93 93.93 0 0 1 24.1 42.4 110.08 110.08 0 0 1 20.59-18.6L331 69.5a13 13 0 0 0-16.55-16.4zM192.07 128a63.78 63.78 0 0 0-32.3 118.9A141.32 141.32 0 0 1 256 193.4c0-.5.1-.9.1-1.4a64.06 64.06 0 0 0-64.03-64z", "M512 320h-1.6a80 80 0 0 0-78.4-64c-24.6 0-46.3 11.3-61 28.8-18.6-35.9-55.8-60.8-99-60.8-58.3 0-105.6 44.7-110.9 101.6C123.3 338.5 96 373.9 96 416a96 96 0 0 0 96 96h320a96 96 0 0 0 0-192zm48-160h-17.58a80 80 0 0 0-156.78 0H368a79.77 79.77 0 0 0-66.19 35.1 142.52 142.52 0 0 1 75.59 43.3 110.34 110.34 0 0 1 54.6-14.5 112.41 112.41 0 0 1 102.09 65.9 127.06 127.06 0 0 1 55 24.4A79.81 79.81 0 0 0 560 160z"]]
};
exports.faCloudsSun = faCloudsSun;
var faClub = {
  prefix: 'fad',
  iconName: 'club',
  icon: [512, 512, [], "f327", ["M512 292a124 124 0 0 1-124 124c-41.36 0-77.55-20.54-100-51.69V272a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v92.31C201.55 395.46 165.36 416 124 416a124 124 0 0 1 0-248c5.8 0 11.36.94 16.95 1.71a124 124 0 1 1 230.1 0c5.59-.77 11.15-1.71 16.95-1.71a124 124 0 0 1 124 124z", "M367.31 486.59A32 32 0 0 1 336 512H176a32 32 0 0 1-13-61.3c52.19-23.2 60.91-38.9 61-75.61V272a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16v103.09c.19 37.5 9.41 52.61 61 75.61a32.09 32.09 0 0 1 18.31 35.89z"]]
};
exports.faClub = faClub;
var faCocktail = {
  prefix: 'fad',
  iconName: 'cocktail',
  icon: [576, 512, [], "f561", ["M208 280.27L264.28 224H151.72zM432 0c-62.6 0-115.34 40.2-135.17 96h52.53C366 67.45 396.63 48 432 48a96 96 0 0 1 0 192 95 95 0 0 1-39.32-8.64l-35.26 35.26A144 144 0 1 0 432 0z", "M408.75 170.05c15.52-15.52 4.53-42.05-17.42-42.05H24.69c-22 0-32.94 26.53-17.42 42.05L176 338.78V464h-56a40 40 0 0 0-40 40 8 8 0 0 0 8 8h240a8 8 0 0 0 8-8 40 40 0 0 0-40-40h-56V338.78zM208 280.27L119.73 192h176.55z"]]
};
exports.faCocktail = faCocktail;
var faCode = {
  prefix: 'fad',
  iconName: 'code',
  icon: [640, 512, [], "f121", ["M422.12 18.16a12 12 0 0 1 8.2 14.9l-136.5 470.2a12 12 0 0 1-14.89 8.2l-61-17.7a12 12 0 0 1-8.2-14.9l136.5-470.2a12 12 0 0 1 14.89-8.2z", "M636.23 247.26l-144.11-135.2a12.11 12.11 0 0 0-17 .5L431.62 159a12 12 0 0 0 .81 17.2L523 256l-90.59 79.7a11.92 11.92 0 0 0-.81 17.2l43.5 46.4a12 12 0 0 0 17 .6l144.11-135.1a11.94 11.94 0 0 0 .02-17.54zm-427.8-88.2l-43.5-46.4a12 12 0 0 0-17-.5l-144.11 135a11.94 11.94 0 0 0 0 17.5l144.11 135.1a11.92 11.92 0 0 0 17-.5l43.5-46.4a12 12 0 0 0-.81-17.2L117 256l90.6-79.7a11.92 11.92 0 0 0 .83-17.24z"]]
};
exports.faCode = faCode;
var faCodeBranch = {
  prefix: 'fad',
  iconName: 'code-branch',
  icon: [384, 512, [], "f126", ["M328 220.33V224c0 32-6.69 47.26-20 63.8-28.2 35-76 39.5-118.2 43.4-25.7 2.4-49.9 4.6-66.1 12.8-3.82 1.94-9.25 6.44-13.44 13.94A80.16 80.16 0 0 0 56 355.67V156.33a80.31 80.31 0 0 0 48 0v144c23.9-11.5 53.1-14.3 81.3-16.9 35.9-3.3 69.8-6.5 85.2-25.7 6.34-7.83 9.5-17.7 9.5-33.7v-3.67a80.31 80.31 0 0 0 48 0z", "M80 0a80 80 0 1 0 80 80A80 80 0 0 0 80 0zm0 96a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm0 256a80 80 0 1 0 80 80 80 80 0 0 0-80-80zm0 96a16 16 0 1 1 16-16 16 16 0 0 1-16 16zM304 64a80 80 0 1 0 80 80 80 80 0 0 0-80-80zm0 96a16 16 0 1 1 16-16 16 16 0 0 1-16 16z"]]
};
exports.faCodeBranch = faCodeBranch;
var faCodeCommit = {
  prefix: 'fad',
  iconName: 'code-commit',
  icon: [640, 512, [], "f386", ["M628 224H509.4a189.29 189.29 0 0 1 2.6 32 200.23 200.23 0 0 1-2.6 32H628a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm-616 0a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h118.6a198.22 198.22 0 0 1 0-64z", "M320 96a160 160 0 1 0 160 160A160 160 0 0 0 320 96zm0 202a42 42 0 1 1 42-42 42 42 0 0 1-42 42z"]]
};
exports.faCodeCommit = faCodeCommit;
var faCodeMerge = {
  prefix: 'fad',
  iconName: 'code-merge',
  icon: [384, 512, [], "f387", ["M227.06 293.9A199.9 199.9 0 0 1 104 225.83v129.84a80.31 80.31 0 0 0-48 0V156.33a80.24 80.24 0 0 0 58.73-4.24 152.51 152.51 0 0 0 113.78 93.41 80 80 0 0 0-1.45 48.4z", "M80 0a80 80 0 1 0 80 80A80 80 0 0 0 80 0zm0 96a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm0 256a80 80 0 1 0 80 80 80 80 0 0 0-80-80zm0 96a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm224-256a80 80 0 1 0 80 80 80 80 0 0 0-80-80zm0 96a16 16 0 1 1 16-16 16 16 0 0 1-16 16z"]]
};
exports.faCodeMerge = faCodeMerge;
var faCoffee = {
  prefix: 'fad',
  iconName: 'coffee',
  icon: [640, 512, [], "f0f4", ["M559.76 480H48.36c-47.6 0-61-64-36-64h583.3c25 0 11.8 64-35.9 64z", "M512.06 32h-392a23.94 23.94 0 0 0-24 24v232a96 96 0 0 0 96 96h192a96 96 0 0 0 96-96h32a128 128 0 0 0 0-256zm0 192h-32V96h32a64 64 0 0 1 0 128z"]]
};
exports.faCoffee = faCoffee;
var faCoffeeTogo = {
  prefix: 'fad',
  iconName: 'coffee-togo',
  icon: [448, 512, [], "f6c5", ["M48 160h352l-8 96H56zm330.67 256H69.33l-11-131.76 16.56 198.42A32 32 0 0 0 106.78 512h234.44a32 32 0 0 0 31.89-29.34l16.54-198.42z", "M69.33 416h309.34L392 256H56zM432 64h-16l-23.16-46.31A32 32 0 0 0 364.22 0H83.78a32 32 0 0 0-28.62 17.69L32 64H16A16 16 0 0 0 0 80v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16z"]]
};
exports.faCoffeeTogo = faCoffeeTogo;
var faCoffin = {
  prefix: 'fad',
  iconName: 'coffin',
  icon: [384, 512, [], "f6c6", ["M288 192a16 16 0 0 1-16 16h-56v128a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16V208h-56a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16h56v-48a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v48h56a16 16 0 0 1 16 16z", "M374.44 115.19L266.71 9.37a32.93 32.93 0 0 0-23-9.37H140.33a32.89 32.89 0 0 0-23 9.37L9.54 115.19A31.61 31.61 0 0 0 1 145.58l87.1 342.18A32.49 32.49 0 0 0 119.69 512h144.62a32.47 32.47 0 0 0 31.61-24.24L383 145.58a31.67 31.67 0 0 0-8.56-30.39zM288 192a16 16 0 0 1-16 16h-56v128a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16V208h-56a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16h56v-48a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v48h56a16 16 0 0 1 16 16z"]]
};
exports.faCoffin = faCoffin;
var faCog = {
  prefix: 'fad',
  iconName: 'cog',
  icon: [512, 512, [], "f013", ["M487.75 315.6l-42.6-24.6a192.62 192.62 0 0 0 0-70.2l42.6-24.6a12.11 12.11 0 0 0 5.5-14 249.2 249.2 0 0 0-54.7-94.6 12 12 0 0 0-14.8-2.3l-42.6 24.6a188.83 188.83 0 0 0-60.8-35.1V25.7A12 12 0 0 0 311 14a251.43 251.43 0 0 0-109.2 0 12 12 0 0 0-9.4 11.7v49.2a194.59 194.59 0 0 0-60.8 35.1L89.05 85.4a11.88 11.88 0 0 0-14.8 2.3 247.66 247.66 0 0 0-54.7 94.6 12 12 0 0 0 5.5 14l42.6 24.6a192.62 192.62 0 0 0 0 70.2l-42.6 24.6a12.08 12.08 0 0 0-5.5 14 249 249 0 0 0 54.7 94.6 12 12 0 0 0 14.8 2.3l42.6-24.6a188.54 188.54 0 0 0 60.8 35.1v49.2a12 12 0 0 0 9.4 11.7 251.43 251.43 0 0 0 109.2 0 12 12 0 0 0 9.4-11.7v-49.2a194.7 194.7 0 0 0 60.8-35.1l42.6 24.6a11.89 11.89 0 0 0 14.8-2.3 247.52 247.52 0 0 0 54.7-94.6 12.36 12.36 0 0 0-5.6-14.1zm-231.4 36.2a95.9 95.9 0 1 1 95.9-95.9 95.89 95.89 0 0 1-95.9 95.9z", "M256.35 319.8a63.9 63.9 0 1 1 63.9-63.9 63.9 63.9 0 0 1-63.9 63.9z"]]
};
exports.faCog = faCog;
var faCogs = {
  prefix: 'fad',
  iconName: 'cogs',
  icon: [640, 512, [], "f085", ["M638.41 387a12.34 12.34 0 0 0-12.2-10.3h-16.5a86.33 86.33 0 0 0-15.9-27.4L602 335a12.42 12.42 0 0 0-2.8-15.7 110.5 110.5 0 0 0-32.1-18.6 12.36 12.36 0 0 0-15.1 5.4l-8.2 14.3a88.86 88.86 0 0 0-31.7 0l-8.2-14.3a12.36 12.36 0 0 0-15.1-5.4 111.83 111.83 0 0 0-32.1 18.6 12.3 12.3 0 0 0-2.8 15.7l8.2 14.3a86.33 86.33 0 0 0-15.9 27.4h-16.5a12.43 12.43 0 0 0-12.2 10.4 112.66 112.66 0 0 0 0 37.1 12.34 12.34 0 0 0 12.2 10.3h16.5a86.33 86.33 0 0 0 15.9 27.4l-8.2 14.3a12.42 12.42 0 0 0 2.8 15.7 110.5 110.5 0 0 0 32.1 18.6 12.36 12.36 0 0 0 15.1-5.4l8.2-14.3a88.86 88.86 0 0 0 31.7 0l8.2 14.3a12.36 12.36 0 0 0 15.1 5.4 111.83 111.83 0 0 0 32.1-18.6 12.3 12.3 0 0 0 2.8-15.7l-8.2-14.3a86.33 86.33 0 0 0 15.9-27.4h16.5a12.43 12.43 0 0 0 12.2-10.4 112.66 112.66 0 0 0 .01-37.1zm-136.8 44.9c-29.6-38.5 14.3-82.4 52.8-52.8 29.59 38.49-14.3 82.39-52.8 52.79zm136.8-343.8a12.34 12.34 0 0 0-12.2-10.3h-16.5a86.33 86.33 0 0 0-15.9-27.4l8.2-14.3a12.42 12.42 0 0 0-2.8-15.7 110.5 110.5 0 0 0-32.1-18.6A12.36 12.36 0 0 0 552 7.19l-8.2 14.3a88.86 88.86 0 0 0-31.7 0l-8.2-14.3a12.36 12.36 0 0 0-15.1-5.4 111.83 111.83 0 0 0-32.1 18.6 12.3 12.3 0 0 0-2.8 15.7l8.2 14.3a86.33 86.33 0 0 0-15.9 27.4h-16.5a12.43 12.43 0 0 0-12.2 10.4 112.66 112.66 0 0 0 0 37.1 12.34 12.34 0 0 0 12.2 10.3h16.5a86.33 86.33 0 0 0 15.9 27.4l-8.2 14.3a12.42 12.42 0 0 0 2.8 15.7 110.5 110.5 0 0 0 32.1 18.6 12.36 12.36 0 0 0 15.1-5.4l8.2-14.3a88.86 88.86 0 0 0 31.7 0l8.2 14.3a12.36 12.36 0 0 0 15.1 5.4 111.83 111.83 0 0 0 32.1-18.6 12.3 12.3 0 0 0 2.8-15.7l-8.2-14.3a86.33 86.33 0 0 0 15.9-27.4h16.5a12.43 12.43 0 0 0 12.2-10.4 112.66 112.66 0 0 0 .01-37.1zm-136.8 45c-29.6-38.5 14.3-82.5 52.8-52.8 29.59 38.49-14.3 82.39-52.8 52.79z", "M420 303.79L386.31 287a173.78 173.78 0 0 0 0-63.5l33.7-16.8c10.1-5.9 14-18.2 10-29.1-8.9-24.2-25.9-46.4-42.1-65.8a23.93 23.93 0 0 0-30.3-5.3l-29.1 16.8a173.66 173.66 0 0 0-54.9-31.7V58a24 24 0 0 0-20-23.6 228.06 228.06 0 0 0-76 .1A23.82 23.82 0 0 0 158 58v33.7a171.78 171.78 0 0 0-54.9 31.7L74 106.59a23.91 23.91 0 0 0-30.3 5.3c-16.2 19.4-33.3 41.6-42.2 65.8a23.84 23.84 0 0 0 10.5 29l33.3 16.9a173.24 173.24 0 0 0 0 63.4L12 303.79a24.13 24.13 0 0 0-10.5 29.1c8.9 24.1 26 46.3 42.2 65.7a23.93 23.93 0 0 0 30.3 5.3l29.1-16.7a173.66 173.66 0 0 0 54.9 31.7v33.6a24 24 0 0 0 20 23.6 224.88 224.88 0 0 0 75.9 0 23.93 23.93 0 0 0 19.7-23.6v-33.6a171.78 171.78 0 0 0 54.9-31.7l29.1 16.8a23.91 23.91 0 0 0 30.3-5.3c16.2-19.4 33.7-41.6 42.6-65.8a24 24 0 0 0-10.5-29.1zm-151.3 4.3c-77 59.2-164.9-28.7-105.7-105.7 77-59.2 164.91 28.7 105.71 105.7z"]]
};
exports.faCogs = faCogs;
var faCoin = {
  prefix: 'fad',
  iconName: 'coin',
  icon: [512, 512, [], "f85c", ["M0 208C0 128.44 114.67 64 256 64s256 64.44 256 144-114.67 144-256 144S0 287.56 0 208z", "M0 320c0 27.77 18 53.37 48 74.33V330c-18.85-12-35.4-25.36-48-40.38zm80 92.51c27.09 12.89 59.66 22.81 96 28.8V377c-35.39-6-67.81-15.88-96-29zM464 330v64.32c30.05-21 48-46.56 48-74.33v-30.36C499.4 304.65 482.85 318 464 330zM336 441.31c36.34-6 68.91-15.91 96-28.8V348c-28.19 13.12-60.61 23-96 29zM208 381.2v64.09c15.62 1.51 31.49 2.71 48 2.71s32.38-1.2 48-2.71V381.2a477.2 477.2 0 0 1-48 2.8 477.2 477.2 0 0 1-48-2.8z"]]
};
exports.faCoin = faCoin;
var faCoins = {
  prefix: 'fad',
  iconName: 'coins',
  icon: [512, 512, [], "f51e", ["M416 311.4c57.3-11.1 96-31.7 96-55.4v-42.7c-23.2 16.4-57.3 27.6-96 34.5zm-4.7-95.1c60-10.8 100.7-32 100.7-56.3v-42.7c-35.5 25.1-96.5 38.6-160.7 41.8 29.5 14.3 51.2 33.5 60 57.2zM512 64c0-35.3-86-64-192-64S128 28.7 128 64s86 64 192 64 192-28.7 192-64z", "M192 320c106 0 192-35.8 192-80s-86-80-192-80S0 195.8 0 240s86 80 192 80zM0 405.3V448c0 35.3 86 64 192 64s192-28.7 192-64v-42.7C342.7 434.4 267.2 448 192 448S41.3 434.4 0 405.3zm0-104.9V352c0 35.3 86 64 192 64s192-28.7 192-64v-51.6c-41.3 34-116.9 51.6-192 51.6S41.3 334.4 0 300.4z"]]
};
exports.faCoins = faCoins;
var faColumns = {
  prefix: 'fad',
  iconName: 'columns',
  icon: [512, 512, [], "f0db", ["M288 160v256h160V160zM64 416h160V160H64z", "M464 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h416a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zM224 416H64V160h160zm224 0H288V160h160z"]]
};
exports.faColumns = faColumns;
var faComment = {
  prefix: 'fad',
  iconName: 'comment',
  icon: [512, 512, [], "f075", ["M256 32C114.6 32 0 125.1 0 240c0 49.6 21.4 95 57 130.7C44.5 421.1 2.7 466 2.2 466.5c-2.2 2.3-2.8 5.7-1.5 8.7S4.8 480 8 480c66.3 0 116-31.8 140.6-51.4 32.7 12.3 69 19.4 107.4 19.4 141.4 0 256-93.1 256-208S397.4 32 256 32z", ""]]
};
exports.faComment = faComment;
var faCommentAlt = {
  prefix: 'fad',
  iconName: 'comment-alt',
  icon: [512, 512, [], "f27a", ["M448 0H64C28.7 0 0 28.7 0 64v288c0 35.3 28.7 64 64 64h96v84c0 9.8 11.2 15.5 19.1 9.7L304 416h144c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64z", ""]]
};
exports.faCommentAlt = faCommentAlt;
var faCommentAltCheck = {
  prefix: 'fad',
  iconName: 'comment-alt-check',
  icon: [512, 512, [], "f4a2", ["M448 0H64A64.06 64.06 0 0 0 0 64v288a64.06 64.06 0 0 0 64 64h96v84a12 12 0 0 0 19.1 9.7L304 416h144a64.06 64.06 0 0 0 64-64V64a64.06 64.06 0 0 0-64-64zm-77.9 163.8l-131 130a11 11 0 0 1-15.6-.1l-75.7-76.3a11 11 0 0 1 .1-15.6l26-25.8a11 11 0 0 1 15.6.1l42.1 42.5 97.2-96.4a11 11 0 0 1 15.6.1l25.8 26a11 11 0 0 1-.1 15.5z", "M370.1 163.8l-131 130a11 11 0 0 1-15.6-.1l-75.7-76.3a11 11 0 0 1 .1-15.6l26-25.8a11 11 0 0 1 15.6.1l42.1 42.5 97.2-96.4a11 11 0 0 1 15.6.1l25.8 26a11 11 0 0 1-.1 15.5z"]]
};
exports.faCommentAltCheck = faCommentAltCheck;
var faCommentAltDollar = {
  prefix: 'fad',
  iconName: 'comment-alt-dollar',
  icon: [512, 512, [], "f650", ["M448 0H64A64 64 0 0 0 0 64v288a64 64 0 0 0 64 64h96v84a12 12 0 0 0 19.13 9.65L304 416h144a64 64 0 0 0 64-64V64a64 64 0 0 0-64-64zM280 302.44V320a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-17.73a73 73 0 0 1-31.78-11.46c-6.22-4.11-6.82-13.11-1.55-18.38l17.52-17.52c3.74-3.74 9.31-4.24 14.11-2a24.52 24.52 0 0 0 10.26 2.22h32.78a8.43 8.43 0 0 0 2.32-16.53l-50.07-14.3c-22.25-6.35-40-24.71-42.91-47.67a56.27 56.27 0 0 1 49.32-63V96a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v17.73a73 73 0 0 1 31.78 11.46c6.22 4.11 6.82 13.11 1.55 18.38l-17.52 17.52c-3.74 3.74-9.31 4.24-14.11 2a24.54 24.54 0 0 0-10.26-2.22h-32.78a8.43 8.43 0 0 0-2.32 16.53l50.07 14.3c22.25 6.36 40 24.71 42.91 47.67A56.27 56.27 0 0 1 280 302.44z", "M280 302.44V320a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-17.73a73 73 0 0 1-31.78-11.46c-6.22-4.11-6.82-13.11-1.55-18.38l17.52-17.52c3.74-3.74 9.31-4.24 14.11-2a24.52 24.52 0 0 0 10.26 2.22h32.78a8.43 8.43 0 0 0 2.32-16.53l-50.07-14.3c-22.25-6.35-40-24.71-42.91-47.67a56.27 56.27 0 0 1 49.32-63V96a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v17.73a73 73 0 0 1 31.78 11.46c6.22 4.11 6.82 13.11 1.55 18.38l-17.52 17.52c-3.74 3.74-9.31 4.24-14.11 2a24.54 24.54 0 0 0-10.26-2.22h-32.78a8.43 8.43 0 0 0-2.32 16.53l50.07 14.3c22.25 6.36 40 24.71 42.91 47.67A56.27 56.27 0 0 1 280 302.44z"]]
};
exports.faCommentAltDollar = faCommentAltDollar;
var faCommentAltDots = {
  prefix: 'fad',
  iconName: 'comment-alt-dots',
  icon: [512, 512, [], "f4a3", ["M448 0H64A64.06 64.06 0 0 0 0 64v288a64.06 64.06 0 0 0 64 64h96v84a12 12 0 0 0 19.1 9.7L304 416h144a64.06 64.06 0 0 0 64-64V64a64.06 64.06 0 0 0-64-64zM128 240a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm128 0a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm128 0a32 32 0 1 1 32-32 32 32 0 0 1-32 32z", "M384 176a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm-128 0a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm-128 0a32 32 0 1 0 32 32 32 32 0 0 0-32-32z"]]
};
exports.faCommentAltDots = faCommentAltDots;
var faCommentAltEdit = {
  prefix: 'fad',
  iconName: 'comment-alt-edit',
  icon: [512, 512, [], "f4a4", ["M448 0H64A64.06 64.06 0 0 0 0 64v288a64.06 64.06 0 0 0 64 64h96v84a12 12 0 0 0 19.1 9.7L304 416h144a64.06 64.06 0 0 0 64-64V64a64.06 64.06 0 0 0-64-64zM215.4 310.6l-48.2 5.4a10.17 10.17 0 0 1-11.2-11.2l5.4-48.2 96.3-96.3 54 54zm150.7-150.7l-31.8 31.8-54-54 31.8-31.8a20.22 20.22 0 0 1 28.6 0l25.4 25.4a20.22 20.22 0 0 1 0 28.6z", "M161.4 256.6l-5.4 48.2a10.17 10.17 0 0 0 11.2 11.2l48.2-5.4 96.3-96.3-54-54zm204.7-125.3l-25.4-25.4a20.22 20.22 0 0 0-28.6 0l-31.8 31.8 54 54 31.8-31.8a20.22 20.22 0 0 0 0-28.6z"]]
};
exports.faCommentAltEdit = faCommentAltEdit;
var faCommentAltExclamation = {
  prefix: 'fad',
  iconName: 'comment-alt-exclamation',
  icon: [512, 512, [], "f4a5", ["M448 0H64A64.06 64.06 0 0 0 0 64v288a64.06 64.06 0 0 0 64 64h96v84a12 12 0 0 0 19.1 9.7L304 416h144a64.06 64.06 0 0 0 64-64V64a64.06 64.06 0 0 0-64-64zM256 336a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm38.2-238.4l-12.8 128a16 16 0 0 1-15.9 14.4h-19a16 16 0 0 1-15.9-14.4l-12.8-128A16.06 16.06 0 0 1 233.7 80h44.6a16 16 0 0 1 15.9 17.6z", "M256 272a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm22.3-192h-44.6a16.06 16.06 0 0 0-15.9 17.6l12.8 128a16 16 0 0 0 15.9 14.4h19a16 16 0 0 0 15.9-14.4l12.8-128A16 16 0 0 0 278.3 80z"]]
};
exports.faCommentAltExclamation = faCommentAltExclamation;
var faCommentAltLines = {
  prefix: 'fad',
  iconName: 'comment-alt-lines',
  icon: [512, 512, [], "f4a6", ["M448 0H64A64.06 64.06 0 0 0 0 64v288a64.06 64.06 0 0 0 64 64h96v84a12 12 0 0 0 19.1 9.7L304 416h144a64.06 64.06 0 0 0 64-64V64a64.06 64.06 0 0 0-64-64zM288 264a8 8 0 0 1-8 8H136a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h144a8 8 0 0 1 8 8zm96-96a8 8 0 0 1-8 8H136a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h240a8 8 0 0 1 8 8z", "M280 240H136a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h144a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8zm96-96H136a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h240a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8z"]]
};
exports.faCommentAltLines = faCommentAltLines;
var faCommentAltMedical = {
  prefix: 'fad',
  iconName: 'comment-alt-medical',
  icon: [512, 512, [], "f7f4", ["M448 0H64A64 64 0 0 0 0 64v288a64 64 0 0 0 64 64h96v84a12 12 0 0 0 19.13 9.65L304 416h144a64 64 0 0 0 64-64V64a64 64 0 0 0-64-64zm-96 232a8 8 0 0 1-8 8h-56v56a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8v-56h-56a8 8 0 0 1-8-8v-48a8 8 0 0 1 8-8h56v-56a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v56h56a8 8 0 0 1 8 8z", "M160 184a8 8 0 0 1 8-8h56v-56a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v56h56a8 8 0 0 1 8 8v48a8 8 0 0 1-8 8h-56v56a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8v-56h-56a8 8 0 0 1-8-8z"]]
};
exports.faCommentAltMedical = faCommentAltMedical;
var faCommentAltMinus = {
  prefix: 'fad',
  iconName: 'comment-alt-minus',
  icon: [512, 512, [], "f4a7", ["M448 0H64A64.06 64.06 0 0 0 0 64v288a64.06 64.06 0 0 0 64 64h96v84a12 12 0 0 0 19.1 9.7L304 416h144a64.06 64.06 0 0 0 64-64V64a64.06 64.06 0 0 0-64-64zm-80 216a16 16 0 0 1-16 16H160a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16h192a16 16 0 0 1 16 16z", "M144 200a16 16 0 0 1 16-16h192a16 16 0 0 1 16 16v16a16 16 0 0 1-16 16H160a16 16 0 0 1-16-16z"]]
};
exports.faCommentAltMinus = faCommentAltMinus;
var faCommentAltMusic = {
  prefix: 'fad',
  iconName: 'comment-alt-music',
  icon: [512, 512, [], "f8af", ["M448 0H64A64.05 64.05 0 0 0 0 64v288a64.06 64.06 0 0 0 64 64h96v84a12 12 0 0 0 19.09 9.7L304 416h144a64.06 64.06 0 0 0 64-64V64a64.05 64.05 0 0 0-64-64zm-96 256c0 17.68-21.5 32-48 32s-48-14.32-48-32 21.5-32 48-32a69.27 69.27 0 0 1 16 1.95v-76.32l-96 37.52V288c0 17.67-21.5 32-48 32s-48-14.33-48-32 21.5-32 48-32a69.27 69.27 0 0 1 16 2V143.24A16 16 0 0 1 203.19 128l128-47.24A16 16 0 0 1 352 96z", "M176 256a69.82 69.82 0 0 1 16 2V143.25A16 16 0 0 1 203.19 128l128-47.25A16 16 0 0 1 352 96v160c0 17.67-21.5 32-48 32s-48-14.33-48-32 21.5-32 48-32a69.82 69.82 0 0 1 16 2v-76.36l-96 37.52V288c0 17.67-21.5 32-48 32s-48-14.33-48-32 21.5-32 48-32z"]]
};
exports.faCommentAltMusic = faCommentAltMusic;
var faCommentAltPlus = {
  prefix: 'fad',
  iconName: 'comment-alt-plus',
  icon: [512, 512, [], "f4a8", ["M448 0H64A64.06 64.06 0 0 0 0 64v288a64.06 64.06 0 0 0 64 64h96v84a12 12 0 0 0 19.1 9.7L304 416h144a64.06 64.06 0 0 0 64-64V64a64.06 64.06 0 0 0-64-64zm-80 216a16 16 0 0 1-16 16h-72v72a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-72h-72a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16h72v-72a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v72h72a16 16 0 0 1 16 16z", "M144 200a16 16 0 0 1 16-16h72v-72a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v72h72a16 16 0 0 1 16 16v16a16 16 0 0 1-16 16h-72v72a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-72h-72a16 16 0 0 1-16-16z"]]
};
exports.faCommentAltPlus = faCommentAltPlus;
var faCommentAltSlash = {
  prefix: 'fad',
  iconName: 'comment-alt-slash',
  icon: [640, 512, [], "f4a9", ["M75.89 26.89A64 64 0 0 1 128 0h384a64.06 64.06 0 0 1 64 64v288a63.75 63.75 0 0 1-19.81 46.23zM64 352a64.06 64.06 0 0 0 64 64h96v84a12 12 0 0 0 19.1 9.7L368 416h2L64 179.5z", "M636.67 480.52l-19.6 25.31a16.06 16.06 0 0 1-22.5 2.8L6.17 53.79a15.94 15.94 0 0 1-2.8-22.41L23 6.17a16.06 16.06 0 0 1 22.5-2.8l588.3 454.84a15.86 15.86 0 0 1 2.87 22.31z"]]
};
exports.faCommentAltSlash = faCommentAltSlash;
var faCommentAltSmile = {
  prefix: 'fad',
  iconName: 'comment-alt-smile',
  icon: [512, 512, [], "f4aa", ["M448 0H64A64.06 64.06 0 0 0 0 64v288a64.06 64.06 0 0 0 64 64h96v84a12 12 0 0 0 19.1 9.7L304 416h144a64.06 64.06 0 0 0 64-64V64a64.06 64.06 0 0 0-64-64zM320 133.2a26.8 26.8 0 1 1-26.8 26.8 26.8 26.8 0 0 1 26.8-26.8zm-128 0a26.8 26.8 0 1 1-26.8 26.8 26.8 26.8 0 0 1 26.8-26.8zm164.2 140.9a132.32 132.32 0 0 1-200.4 0 16 16 0 0 1 24.3-20.7 100.23 100.23 0 0 0 151.6-.1 16.07 16.07 0 0 1 24.5 20.8z", "M320 186.8a26.8 26.8 0 1 0-26.8-26.8 26.8 26.8 0 0 0 26.8 26.8zm-128 0a26.8 26.8 0 1 0-26.8-26.8 26.8 26.8 0 0 0 26.8 26.8zm162.3 64.7a16.11 16.11 0 0 0-22.6 1.8 100.23 100.23 0 0 1-151.6.1 16 16 0 0 0-24.3 20.7 132.32 132.32 0 0 0 200.4 0 16 16 0 0 0-1.9-22.6z"]]
};
exports.faCommentAltSmile = faCommentAltSmile;
var faCommentAltTimes = {
  prefix: 'fad',
  iconName: 'comment-alt-times',
  icon: [512, 512, [], "f4ab", ["M448 0H64A64.06 64.06 0 0 0 0 64v288a64.06 64.06 0 0 0 64 64h96v84a12 12 0 0 0 19.1 9.7L304 416h144a64.06 64.06 0 0 0 64-64V64a64.06 64.06 0 0 0-64-64zM340.9 281.5l-11.3 11.3a16.06 16.06 0 0 1-22.6 0l-51-50.9-50.9 50.9a16.06 16.06 0 0 1-22.6 0l-11.3-11.3a16.06 16.06 0 0 1 0-22.6l50.9-50.9-50.9-50.9a16.06 16.06 0 0 1 0-22.6l11.3-11.3a16.06 16.06 0 0 1 22.6 0l50.9 50.9 50.9-50.9a16.06 16.06 0 0 1 22.6 0l11.3 11.3a16.06 16.06 0 0 1 0 22.6L289.9 208l51 50.9a16.06 16.06 0 0 1 0 22.6z", "M340.9 281.5l-11.3 11.3a16.06 16.06 0 0 1-22.6 0l-51-50.9-50.9 50.9a16.06 16.06 0 0 1-22.6 0l-11.3-11.3a16.06 16.06 0 0 1 0-22.6l50.9-50.9-50.9-50.9a16.06 16.06 0 0 1 0-22.6l11.3-11.3a16.06 16.06 0 0 1 22.6 0l50.9 50.9 50.9-50.9a16.06 16.06 0 0 1 22.6 0l11.3 11.3a16.06 16.06 0 0 1 0 22.6L289.9 208l51 50.9a16.06 16.06 0 0 1 0 22.6z"]]
};
exports.faCommentAltTimes = faCommentAltTimes;
var faCommentCheck = {
  prefix: 'fad',
  iconName: 'comment-check',
  icon: [512, 512, [], "f4ac", ["M256 32C114.6 32 0 125.1 0 240c0 49.6 21.4 95 57 130.7C44.5 421.1 2.7 466 2.2 466.5a8 8 0 0 0-1.5 8.7A7.83 7.83 0 0 0 8 480c66.3 0 116-31.8 140.6-51.4A305 305 0 0 0 256 448c141.4 0 256-93.1 256-208S397.4 32 256 32zm114.1 163.8l-131 130a11 11 0 0 1-15.6-.1l-75.7-76.3a11 11 0 0 1 .1-15.6l26-25.8a11 11 0 0 1 15.6.1l42.1 42.5 97.2-96.4a11 11 0 0 1 15.6.1l25.8 26a11 11 0 0 1-.1 15.5z", "M370.1 195.8l-131 130a11 11 0 0 1-15.6-.1l-75.7-76.3a11 11 0 0 1 .1-15.6l26-25.8a11 11 0 0 1 15.6.1l42.1 42.5 97.2-96.4a11 11 0 0 1 15.6.1l25.8 26a11 11 0 0 1-.1 15.5z"]]
};
exports.faCommentCheck = faCommentCheck;
var faCommentDollar = {
  prefix: 'fad',
  iconName: 'comment-dollar',
  icon: [512, 512, [], "f651", ["M256 32C114.62 32 0 125.12 0 240c0 49.56 21.41 95 57 130.74C44.46 421.05 2.7 466 2.2 466.5A8 8 0 0 0 8 480c66.26 0 116-31.75 140.6-51.38A304.66 304.66 0 0 0 256 448c141.38 0 256-93.12 256-208S397.38 32 256 32zm24 302.44V352a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-17.73a73 73 0 0 1-31.78-11.46c-6.22-4.11-6.82-13.11-1.55-18.38l17.52-17.52c3.74-3.74 9.31-4.24 14.11-2a24.52 24.52 0 0 0 10.26 2.22h32.78a8.43 8.43 0 0 0 2.32-16.53l-50.07-14.3c-22.25-6.35-40-24.71-42.91-47.67a56.27 56.27 0 0 1 49.32-63V128a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v17.73a73 73 0 0 1 31.78 11.46c6.22 4.11 6.82 13.11 1.55 18.38l-17.52 17.52c-3.74 3.74-9.31 4.24-14.11 2a24.54 24.54 0 0 0-10.26-2.22h-32.78a8.43 8.43 0 0 0-2.32 16.53l50.07 14.3c22.25 6.36 40 24.71 42.91 47.67A56.27 56.27 0 0 1 280 334.44z", "M280 334.44V352a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-17.73a73 73 0 0 1-31.78-11.46c-6.22-4.11-6.82-13.11-1.55-18.38l17.52-17.52c3.74-3.74 9.31-4.24 14.11-2a24.52 24.52 0 0 0 10.26 2.22h32.78a8.43 8.43 0 0 0 2.32-16.53l-50.07-14.3c-22.25-6.35-40-24.71-42.91-47.67a56.27 56.27 0 0 1 49.32-63V128a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v17.73a73 73 0 0 1 31.78 11.46c6.22 4.11 6.82 13.11 1.55 18.38l-17.52 17.52c-3.74 3.74-9.31 4.24-14.11 2a24.54 24.54 0 0 0-10.26-2.22h-32.78a8.43 8.43 0 0 0-2.32 16.53l50.07 14.3c22.25 6.36 40 24.71 42.91 47.67A56.27 56.27 0 0 1 280 334.44z"]]
};
exports.faCommentDollar = faCommentDollar;
var faCommentDots = {
  prefix: 'fad',
  iconName: 'comment-dots',
  icon: [512, 512, [], "f4ad", ["M256 32C114.6 32 0 125.1 0 240c0 49.6 21.4 95 57 130.7C44.5 421.1 2.7 466 2.2 466.5a8 8 0 0 0-1.5 8.7A7.83 7.83 0 0 0 8 480c66.3 0 116-31.8 140.6-51.4A305 305 0 0 0 256 448c141.4 0 256-93.1 256-208S397.4 32 256 32zM128 272a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm128 0a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm128 0a32 32 0 1 1 32-32 32 32 0 0 1-32 32z", "M128 208a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm128 0a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm128 0a32 32 0 1 0 32 32 32 32 0 0 0-32-32z"]]
};
exports.faCommentDots = faCommentDots;
var faCommentEdit = {
  prefix: 'fad',
  iconName: 'comment-edit',
  icon: [512, 512, [], "f4ae", ["M256 32C114.6 32 0 125.1 0 240c0 49.6 21.4 95 57 130.7C44.5 421.1 2.7 466 2.2 466.5a8 8 0 0 0-1.5 8.7A7.83 7.83 0 0 0 8 480c66.3 0 116-31.8 140.6-51.4A305 305 0 0 0 256 448c141.4 0 256-93.1 256-208S397.4 32 256 32zm-40.6 310.6l-48.2 5.4a10.17 10.17 0 0 1-11.2-11.2l5.4-48.2 96.3-96.3 54 54zm150.7-150.7l-31.8 31.8-54-54 31.8-31.8a20.22 20.22 0 0 1 28.6 0l25.4 25.4a20.22 20.22 0 0 1 0 28.6z", "M366.1 163.3l-25.4-25.4a20.22 20.22 0 0 0-28.6 0l-31.8 31.8 54 54 31.8-31.8a20.22 20.22 0 0 0 0-28.6zM161.4 288.6l-5.4 48.2a10.17 10.17 0 0 0 11.2 11.2l48.2-5.4 96.3-96.3-54-54z"]]
};
exports.faCommentEdit = faCommentEdit;
var faCommentExclamation = {
  prefix: 'fad',
  iconName: 'comment-exclamation',
  icon: [512, 512, [], "f4af", ["M256 32C114.6 32 0 125.1 0 240c0 49.6 21.4 95 57 130.7C44.5 421.1 2.7 466 2.2 466.5a8 8 0 0 0-1.5 8.7A7.83 7.83 0 0 0 8 480c66.3 0 116-31.8 140.6-51.4A305 305 0 0 0 256 448c141.4 0 256-93.1 256-208S397.4 32 256 32zm0 336a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm38.2-238.4l-12.8 128a16 16 0 0 1-15.9 14.4h-19a16 16 0 0 1-15.9-14.4l-12.8-128a16.06 16.06 0 0 1 15.9-17.6h44.6a16 16 0 0 1 15.9 17.6z", "M256 304a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm22.3-192h-44.6a16.06 16.06 0 0 0-15.9 17.6l12.8 128a16 16 0 0 0 15.9 14.4h19a16 16 0 0 0 15.9-14.4l12.8-128a16 16 0 0 0-15.9-17.6z"]]
};
exports.faCommentExclamation = faCommentExclamation;
var faCommentLines = {
  prefix: 'fad',
  iconName: 'comment-lines',
  icon: [512, 512, [], "f4b0", ["M256 32C114.6 32 0 125.1 0 240c0 49.6 21.4 95 57 130.7C44.5 421.1 2.7 466 2.2 466.5a8 8 0 0 0-1.5 8.7A7.83 7.83 0 0 0 8 480c66.3 0 116-31.8 140.6-51.4A305 305 0 0 0 256 448c141.4 0 256-93.1 256-208S397.4 32 256 32zm32 264a8 8 0 0 1-8 8H136a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h144a8 8 0 0 1 8 8zm96-96a8 8 0 0 1-8 8H136a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h240a8 8 0 0 1 8 8z", "M376 176H136a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h240a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8zm-96 96H136a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h144a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8z"]]
};
exports.faCommentLines = faCommentLines;
var faCommentMedical = {
  prefix: 'fad',
  iconName: 'comment-medical',
  icon: [512, 512, [], "f7f5", ["M256 32C114.62 32 0 125.12 0 240c0 49.56 21.41 95 57 130.74C44.46 421.05 2.7 466 2.2 466.5A8 8 0 0 0 8 480c66.26 0 116-31.75 140.6-51.38A304.64 304.64 0 0 0 256 448c141.39 0 256-93.12 256-208S397.39 32 256 32zm96 232a8 8 0 0 1-8 8h-56v56a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8v-56h-56a8 8 0 0 1-8-8v-48a8 8 0 0 1 8-8h56v-56a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v56h56a8 8 0 0 1 8 8z", "M160 216a8 8 0 0 1 8-8h56v-56a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v56h56a8 8 0 0 1 8 8v48a8 8 0 0 1-8 8h-56v56a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8v-56h-56a8 8 0 0 1-8-8z"]]
};
exports.faCommentMedical = faCommentMedical;
var faCommentMinus = {
  prefix: 'fad',
  iconName: 'comment-minus',
  icon: [512, 512, [], "f4b1", ["M256 32C114.6 32 0 125.1 0 240c0 49.6 21.4 95 57 130.7C44.5 421.1 2.7 466 2.2 466.5a8 8 0 0 0-1.5 8.7A7.83 7.83 0 0 0 8 480c66.3 0 116-31.8 140.6-51.4A305 305 0 0 0 256 448c141.4 0 256-93.1 256-208S397.4 32 256 32zm112 216a16 16 0 0 1-16 16H160a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16h192a16 16 0 0 1 16 16z", "M368 248a16 16 0 0 1-16 16H160a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16h192a16 16 0 0 1 16 16z"]]
};
exports.faCommentMinus = faCommentMinus;
var faCommentMusic = {
  prefix: 'fad',
  iconName: 'comment-music',
  icon: [512, 512, [], "f8b0", ["M256 32C114.59 32 0 125.09 0 240c0 49.59 21.41 95 57 130.7C44.5 421.09 2.69 466 2.19 466.5a8 8 0 0 0-1.5 8.7A7.87 7.87 0 0 0 8 480c66.31 0 116-31.8 140.59-51.41A304.63 304.63 0 0 0 256 448c141.41 0 256-93.09 256-208S397.41 32 256 32zm96 256c0 17.67-21.5 32-48 32s-48-14.33-48-32 21.5-32 48-32a69.82 69.82 0 0 1 16 2v-76.36l-96 37.52V320c0 17.67-21.5 32-48 32s-48-14.33-48-32 21.5-32 48-32a69.82 69.82 0 0 1 16 2V175.25A16 16 0 0 1 203.19 160l128-47.25A16 16 0 0 1 352 128z", "M176 288a69.82 69.82 0 0 1 16 2V175.25A16 16 0 0 1 203.19 160l128-47.25A16 16 0 0 1 352 128v160c0 17.67-21.5 32-48 32s-48-14.33-48-32 21.5-32 48-32a69.82 69.82 0 0 1 16 2v-76.36l-96 37.52V320c0 17.67-21.5 32-48 32s-48-14.33-48-32 21.5-32 48-32z"]]
};
exports.faCommentMusic = faCommentMusic;
var faCommentPlus = {
  prefix: 'fad',
  iconName: 'comment-plus',
  icon: [512, 512, [], "f4b2", ["M256 32C114.6 32 0 125.1 0 240c0 49.6 21.4 95 57 130.7C44.5 421.1 2.7 466 2.2 466.5a8 8 0 0 0-1.5 8.7A7.83 7.83 0 0 0 8 480c66.3 0 116-31.8 140.6-51.4A305 305 0 0 0 256 448c141.4 0 256-93.1 256-208S397.4 32 256 32zm112 216a16 16 0 0 1-16 16h-72v72a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-72h-72a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16h72v-72a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v72h72a16 16 0 0 1 16 16z", "M368 248a16 16 0 0 1-16 16h-72v72a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-72h-72a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16h72v-72a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v72h72a16 16 0 0 1 16 16z"]]
};
exports.faCommentPlus = faCommentPlus;
var faCommentSlash = {
  prefix: 'fad',
  iconName: 'comment-slash',
  icon: [640, 512, [], "f4b3", ["M150.21 84.35C195.39 51.79 254.84 32 320 32c141.4 0 256 93.1 256 208 0 49.23-21 94.46-56.23 130.08zM64 240c0 49.6 21.4 95 57 130.7-12.6 50.3-54.3 95.2-54.8 95.8A8 8 0 0 0 72 480c66.3 0 116-31.8 140.6-51.4A305 305 0 0 0 320 448a312.39 312.39 0 0 0 78.4-10L72.87 186.37A171.62 171.62 0 0 0 64 240z", "M636.67 480.52l-19.6 25.31a16.06 16.06 0 0 1-22.5 2.8L6.17 53.79a15.94 15.94 0 0 1-2.8-22.41L23 6.17a16.06 16.06 0 0 1 22.5-2.8l588.3 454.84a15.86 15.86 0 0 1 2.87 22.31z"]]
};
exports.faCommentSlash = faCommentSlash;
var faCommentSmile = {
  prefix: 'fad',
  iconName: 'comment-smile',
  icon: [512, 512, [], "f4b4", ["M256 32C114.6 32 0 125.1 0 240c0 49.6 21.4 95 57 130.7C44.5 421.1 2.7 466 2.2 466.5a8 8 0 0 0-1.5 8.7A7.83 7.83 0 0 0 8 480c66.3 0 116-31.8 140.6-51.4A305 305 0 0 0 256 448c141.4 0 256-93.1 256-208S397.4 32 256 32zm64 133.2a26.8 26.8 0 1 1-26.8 26.8 26.8 26.8 0 0 1 26.8-26.8zm-128 0a26.8 26.8 0 1 1-26.8 26.8 26.8 26.8 0 0 1 26.8-26.8zm164.2 140.9a132.32 132.32 0 0 1-200.4 0 16 16 0 1 1 24.3-20.7 100.23 100.23 0 0 0 151.6-.1 16.07 16.07 0 0 1 24.5 20.8z", "M320 218.8a26.8 26.8 0 1 0-26.8-26.8 26.8 26.8 0 0 0 26.8 26.8zm-128 0a26.8 26.8 0 1 0-26.8-26.8 26.8 26.8 0 0 0 26.8 26.8zm162.3 64.7a16.11 16.11 0 0 0-22.6 1.8 100.23 100.23 0 0 1-151.6.1 16 16 0 1 0-24.3 20.7 132.32 132.32 0 0 0 200.4 0 16 16 0 0 0-1.9-22.6z"]]
};
exports.faCommentSmile = faCommentSmile;
var faCommentTimes = {
  prefix: 'fad',
  iconName: 'comment-times',
  icon: [512, 512, [], "f4b5", ["M256 32C114.6 32 0 125.1 0 240c0 49.6 21.4 95 57 130.7C44.5 421.1 2.7 466 2.2 466.5a8 8 0 0 0-1.5 8.7A7.83 7.83 0 0 0 8 480c66.3 0 116-31.8 140.6-51.4A305 305 0 0 0 256 448c141.4 0 256-93.1 256-208S397.4 32 256 32zm84.9 281.5l-11.3 11.3a16.06 16.06 0 0 1-22.6 0l-51-50.9-50.9 50.9a16.06 16.06 0 0 1-22.6 0l-11.3-11.3a16.06 16.06 0 0 1 0-22.6l50.9-50.9-50.9-50.9a16.06 16.06 0 0 1 0-22.6l11.3-11.3a16.06 16.06 0 0 1 22.6 0l50.9 50.9 50.9-50.9a16.06 16.06 0 0 1 22.6 0l11.3 11.3a16.06 16.06 0 0 1 0 22.6L289.9 240l51 50.9a16.06 16.06 0 0 1 0 22.6z", "M340.9 313.5l-11.3 11.3a16.06 16.06 0 0 1-22.6 0l-51-50.9-50.9 50.9a16.06 16.06 0 0 1-22.6 0l-11.3-11.3a16.06 16.06 0 0 1 0-22.6l50.9-50.9-50.9-50.9a16.06 16.06 0 0 1 0-22.6l11.3-11.3a16.06 16.06 0 0 1 22.6 0l50.9 50.9 50.9-50.9a16.06 16.06 0 0 1 22.6 0l11.3 11.3a16.06 16.06 0 0 1 0 22.6L289.9 240l51 50.9a16.06 16.06 0 0 1 0 22.6z"]]
};
exports.faCommentTimes = faCommentTimes;
var faComments = {
  prefix: 'fad',
  iconName: 'comments',
  icon: [576, 512, [], "f086", ["M208 352c-41 0-79.1-9.3-111.3-25-21.8 12.7-52.1 25-88.7 25a7.83 7.83 0 0 1-7.3-4.8 8 8 0 0 1 1.5-8.7c.3-.3 22.4-24.3 35.8-54.5-23.9-26.1-38-57.7-38-92C0 103.6 93.1 32 208 32s208 71.6 208 160-93.1 160-208 160z", "M576 320c0 34.3-14.1 66-38 92 13.4 30.3 35.5 54.2 35.8 54.5a8 8 0 0 1 1.5 8.7 7.88 7.88 0 0 1-7.3 4.8c-36.6 0-66.9-12.3-88.7-25-32.2 15.8-70.3 25-111.3 25-86.2 0-160.2-40.4-191.7-97.9A299.82 299.82 0 0 0 208 384c132.3 0 240-86.1 240-192a148.61 148.61 0 0 0-1.3-20.1C522.5 195.8 576 253.1 576 320z"]]
};
exports.faComments = faComments;
var faCommentsAlt = {
  prefix: 'fad',
  iconName: 'comments-alt',
  icon: [576, 512, [], "f4b6", ["M352 287.9H162.3L79.5 350a9.7 9.7 0 0 1-15.5-7.8V288a64.06 64.06 0 0 1-64-64V64A64.06 64.06 0 0 1 64 0h288a64.06 64.06 0 0 1 64 64v160a63.91 63.91 0 0 1-64 63.9z", "M576 224v160a64.06 64.06 0 0 1-64 64h-32v54.3a9.7 9.7 0 0 1-15.5 7.8L381.7 448H256a64.06 64.06 0 0 1-64-64v-64h160a96.15 96.15 0 0 0 96-96v-64h64a64.06 64.06 0 0 1 64 64z"]]
};
exports.faCommentsAlt = faCommentsAlt;
var faCommentsAltDollar = {
  prefix: 'fad',
  iconName: 'comments-alt-dollar',
  icon: [576, 512, [], "f652", ["M416 224V64a64 64 0 0 0-64-64H64A64 64 0 0 0 0 64v160a64 64 0 0 0 64 64v54.23a9.75 9.75 0 0 0 15.54 7.84L162.33 288H352a64 64 0 0 0 64-64zm-192-.12V240a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8v-16.29a57.26 57.26 0 0 1-31.37-11.35 8 8 0 0 1-.57-12.14L171.81 189a8.21 8.21 0 0 1 10.13-.73 24.08 24.08 0 0 0 12.82 3.73h28.11c6.5 0 11.8-5.92 11.8-13.19 0-5.95-3.61-11.19-8.77-12.73l-45-13.5c-18.59-5.58-31.58-23.42-31.58-43.39 0-24.52 19.05-44.44 42.67-45.07V48a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16.29a57.18 57.18 0 0 1 31.37 11.35 8 8 0 0 1 .57 12.14L244.18 99a8.21 8.21 0 0 1-10.13.73A24 24 0 0 0 221.23 96h-28.11c-6.5 0-11.8 5.92-11.8 13.19 0 6 3.61 11.19 8.77 12.73l45 13.5c18.59 5.58 31.58 23.42 31.58 43.39 0 24.53-19.05 44.44-42.67 45.07z", "M512 160h-64v64a96.11 96.11 0 0 1-96 96H192v64a64 64 0 0 0 64 64h125.67l82.79 62.07a9.75 9.75 0 0 0 15.54-7.84V448h32a64 64 0 0 0 64-64V224a64 64 0 0 0-64-64zm-320 80a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-16.12c23.62-.63 42.67-20.54 42.67-45.07 0-20-13-37.81-31.58-43.39l-45-13.5c-5.16-1.54-8.77-6.78-8.77-12.73 0-7.27 5.3-13.19 11.8-13.19h28.11a24 24 0 0 1 12.82 3.72 8.21 8.21 0 0 0 10.13-.72l11.75-11.21a8 8 0 0 0-.57-12.14A57.18 57.18 0 0 0 224 64.29V48a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v16.12c-23.62.63-42.67 20.55-42.67 45.07 0 20 13 37.81 31.58 43.39l45 13.5c5.16 1.54 8.77 6.78 8.77 12.73 0 7.27-5.3 13.19-11.8 13.19h-28.12a24.08 24.08 0 0 1-12.82-3.72 8.21 8.21 0 0 0-10.13.73l-11.75 11.21a8 8 0 0 0 .57 12.14A57.26 57.26 0 0 0 192 223.71z"]]
};
exports.faCommentsAltDollar = faCommentsAltDollar;
var faCommentsDollar = {
  prefix: 'fad',
  iconName: 'comments-dollar',
  icon: [576, 512, [], "f653", ["M415.5 192c0-88.37-93.12-160-208-160S-.5 103.63-.5 192c0 34.27 14.13 65.95 38 92C24.11 314.22 2 338.16 1.7 338.5A8 8 0 0 0 7.5 352c36.58 0 66.93-12.25 88.73-25 32.2 15.74 70.29 25 111.27 25 114.88 0 208-71.63 208-160zm-224 96v-16.29a57.26 57.26 0 0 1-31.37-11.35 8 8 0 0 1-.57-12.14L171.31 237a8.21 8.21 0 0 1 10.13-.73 24.08 24.08 0 0 0 12.82 3.73h28.11c6.5 0 11.8-5.92 11.8-13.19 0-5.95-3.61-11.19-8.77-12.73l-45-13.5c-18.59-5.58-31.58-23.42-31.58-43.39 0-24.52 19.05-44.44 42.67-45.07V96a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16.29a57.18 57.18 0 0 1 31.37 11.35 8 8 0 0 1 .57 12.14L243.68 147a8.21 8.21 0 0 1-10.13.73 24 24 0 0 0-12.82-3.73h-28.11c-6.5 0-11.8 5.92-11.8 13.19 0 5.95 3.61 11.19 8.77 12.73l45 13.5c18.59 5.58 31.58 23.42 31.58 43.39 0 24.53-19.05 44.44-42.67 45.07V288a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8z", "M537.51 412c23.86-26 38-57.72 38-92 0-66.94-53.49-124.2-129.33-148.07A155.17 155.17 0 0 1 447.5 192c0 105.87-107.66 192-240 192a298.24 298.24 0 0 1-31.73-1.88C207.3 439.63 281.27 480 367.5 480c41 0 79.07-9.24 111.27-25 21.8 12.73 52.15 25 88.73 25a8 8 0 0 0 5.79-13.51c-.29-.33-22.42-24.24-35.78-54.49zm-346-124a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-16.12c23.62-.63 42.67-20.54 42.67-45.07 0-20-13-37.81-31.58-43.39l-45-13.5c-5.16-1.54-8.77-6.78-8.77-12.73 0-7.27 5.3-13.19 11.8-13.19h28.11a24 24 0 0 1 12.82 3.72 8.21 8.21 0 0 0 10.13-.73l11.75-11.21a8 8 0 0 0-.57-12.14 57.18 57.18 0 0 0-31.37-11.35V96a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v16.12c-23.62.63-42.67 20.55-42.67 45.07 0 20 13 37.81 31.58 43.39l45 13.5c5.16 1.54 8.77 6.78 8.77 12.73 0 7.27-5.3 13.19-11.8 13.19h-28.12a24.08 24.08 0 0 1-12.82-3.72 8.21 8.21 0 0 0-10.13.73l-11.75 11.21a8 8 0 0 0 .57 12.14 57.26 57.26 0 0 0 31.37 11.35z"]]
};
exports.faCommentsDollar = faCommentsDollar;
var faCompactDisc = {
  prefix: 'fad',
  iconName: 'compact-disc',
  icon: [496, 512, [], "f51f", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8ZM88,256H56C56,150.1,142.1,64,248,64V96C159.8,96,88,167.8,88,256Zm160,96a96,96,0,1,1,96-96A96,96,0,0,1,248,352Z", "M248,160a96,96,0,1,0,96,96A96,96,0,0,0,248,160Zm0,128a32,32,0,1,1,32-32A32,32,0,0,1,248,288Z"]]
};
exports.faCompactDisc = faCompactDisc;
var faCompass = {
  prefix: 'fad',
  iconName: 'compass',
  icon: [496, 512, [], "f14e", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8ZM374.14,156.05l-66,144.35a31.94,31.94,0,0,1-15.77,15.77L148,382.17c-16.65,7.61-33.81-9.55-26.2-26.2l66-144.35a31.94,31.94,0,0,1,15.77-15.77l144.34-66c16.66-7.6,33.81,9.55,26.2,26.2Z", "M348,129.85l-144.34,66a31.94,31.94,0,0,0-15.77,15.77L121.89,356c-7.61,16.65,9.55,33.81,26.2,26.2l144.34-66a32,32,0,0,0,15.77-15.8l66-144.35c7.55-16.65-9.6-33.8-26.2-26.2ZM270.63,278.62a32,32,0,1,1,0-45.25h0A32,32,0,0,1,270.63,278.62Z"]]
};
exports.faCompass = faCompass;
var faCompassSlash = {
  prefix: 'fad',
  iconName: 'compass-slash',
  icon: [640, 512, [], "f5e9", ["M145 80.3A247.18 247.18 0 0 1 320 8c137 0 248 111 248 248a246.76 246.76 0 0 1-33.83 125.08l-141-109 53-116c7.61-16.65-9.54-33.8-26.19-26.2L287.46 190.4zm75 301.84c-16.65 7.61-33.81-9.55-26.2-26.2l25.7-56.24-139-107.41A247.45 247.45 0 0 0 72 256c0 137 111 248 248 248a246.64 246.64 0 0 0 122.1-32.29L286.77 351.65z", "M636.64 480.55L617 505.82a16 16 0 0 1-22.46 2.81L6.18 53.9a16 16 0 0 1-2.81-22.45L23 6.18a16 16 0 0 1 22.47-2.81L633.82 458.1a16 16 0 0 1 2.82 22.45z"]]
};
exports.faCompassSlash = faCompassSlash;
var faCompress = {
  prefix: 'fad',
  iconName: 'compress',
  icon: [448, 512, [], "f066", ["M436 128h-84V44a12 12 0 0 0-12-12h-40a12 12 0 0 0-12 12v124a23.94 23.94 0 0 0 24 24h124a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zM136 320H12a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h84v84a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12V344a23.94 23.94 0 0 0-24-24z", "M436 320H312a23.94 23.94 0 0 0-24 24v124a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-84h84a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zM148 32h-40a12 12 0 0 0-12 12v84H12a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h124a23.94 23.94 0 0 0 24-24V44a12 12 0 0 0-12-12z"]]
};
exports.faCompress = faCompress;
var faCompressAlt = {
  prefix: 'fad',
  iconName: 'compress-alt',
  icon: [448, 512, [], "f422", ["M224 280v112c0 21.38-25.8 32.09-40.92 17L152 376l-99.31 99.31a16 16 0 0 1-22.63 0L4.69 449.94a16 16 0 0 1 0-22.63L104 328l-32.92-31c-15.12-15.12-4.41-41 17-41h112A24 24 0 0 1 224 280z", "M443.31 62.06a16 16 0 0 1 0 22.63L344 184l32.92 31c15.12 15.12 4.41 41-17 41H248a24 24 0 0 1-24-24V120c0-21.38 25.8-32.09 40.92-17L296 136l99.31-99.31a16 16 0 0 1 22.63 0z"]]
};
exports.faCompressAlt = faCompressAlt;
var faCompressArrowsAlt = {
  prefix: 'fad',
  iconName: 'compress-arrows-alt',
  icon: [512, 512, [], "f78c", ["M507.25 30.05l-25.4-25.4a16.06 16.06 0 0 0-22.6 0L360 104l-31.1-33C313.8 55.9 288 66.6 288 88v112a23.94 23.94 0 0 0 24 24h112c21.4 0 32.1-25.9 17-41l-33-31 99.3-99.3a16.06 16.06 0 0 0-.05-22.65zM200 288H88c-21.4 0-32.1 25.8-17 41l32.9 31-99.2 99.3a16.06 16.06 0 0 0 0 22.6l25.4 25.4a16.06 16.06 0 0 0 22.6 0L152 408l31.1 33c15.1 15.1 40.9 4.4 40.9-17V312a23.94 23.94 0 0 0-24-24z", "M183 71.05L152 104 52.65 4.65a16.06 16.06 0 0 0-22.6 0l-25.4 25.4a16.06 16.06 0 0 0 0 22.6L104 152l-33 31.1C55.9 198.2 66.6 224 88 224h112a23.94 23.94 0 0 0 24-24V88c0-21.35-25.95-32-41-16.95zm324.3 388.3L408 360l33-31.1c15.1-15.1 4.4-40.9-17-40.9H312a23.94 23.94 0 0 0-24 24v112c0 21.4 25.9 32.1 41 17l31-32.9 99.3 99.3a16.06 16.06 0 0 0 22.6 0l25.4-25.4a16.06 16.06 0 0 0-.05-22.65z"]]
};
exports.faCompressArrowsAlt = faCompressArrowsAlt;
var faCompressWide = {
  prefix: 'fad',
  iconName: 'compress-wide',
  icon: [512, 512, [], "f326", ["M500 160h-84V76a12 12 0 0 0-12-12h-40a12 12 0 0 0-12 12v124a23.94 23.94 0 0 0 24 24h124a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zM136 288H12a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h84v84a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12V312a23.94 23.94 0 0 0-24-24z", "M500 288H376a23.94 23.94 0 0 0-24 24v124a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-84h84a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zM148 64h-40a12 12 0 0 0-12 12v84H12a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h124a23.94 23.94 0 0 0 24-24V76a12 12 0 0 0-12-12z"]]
};
exports.faCompressWide = faCompressWide;
var faComputerClassic = {
  prefix: 'fad',
  iconName: 'computer-classic',
  icon: [448, 512, [], "f8b1", ["M32 496a16 16 0 0 0 16 16h352a16 16 0 0 0 16-16v-48H32zM416 0H32A32 32 0 0 0 0 32v368a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V32a32 32 0 0 0-32-32zM80 356a20 20 0 1 1 20-20 20 20 0 0 1-20 20zm304-12a8 8 0 0 1-8 8H232a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h144a8 8 0 0 1 8 8zm0-120a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32V96a32 32 0 0 1 32-32h256a32 32 0 0 1 32 32z", "M384 224a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32V96a32 32 0 0 1 32-32h256a32 32 0 0 1 32 32z"]]
};
exports.faComputerClassic = faComputerClassic;
var faComputerSpeaker = {
  prefix: 'fad',
  iconName: 'computer-speaker',
  icon: [640, 512, [], "f8b2", ["M64 320h224V96H64zM592 32H368a48 48 0 0 0-48 48v352a48 48 0 0 0 48 48h224a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zM480 96a32 32 0 1 1-32 32 32 32 0 0 1 32-32zm0 320a96 96 0 1 1 96-96 96 96 0 0 1-96 96z", "M288 416H128a32 32 0 0 0 0 64h176.41A79.24 79.24 0 0 1 288 432zM0 80v256a48 48 0 0 0 48 48h240v-64H64V96h224V80a79.24 79.24 0 0 1 16.41-48H48A48 48 0 0 0 0 80zm480 80a32 32 0 1 0-32-32 32 32 0 0 0 32 32zm0 64a96 96 0 1 0 96 96 96 96 0 0 0-96-96zm0 144a48 48 0 1 1 48-48 48 48 0 0 1-48 48z"]]
};
exports.faComputerSpeaker = faComputerSpeaker;
var faConciergeBell = {
  prefix: 'fad',
  iconName: 'concierge-bell',
  icon: [512, 512, [], "f562", ["M512 400v32a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h480a16 16 0 0 1 16 16zM208 112h16v18.29a224.73 224.73 0 0 1 64 0V112h16a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16h-96a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16z", "M480 352H32c0-123.71 100.29-224 224-224s224 100.29 224 224z"]]
};
exports.faConciergeBell = faConciergeBell;
var faConstruction = {
  prefix: 'fad',
  iconName: 'construction',
  icon: [640, 512, [], "f85d", ["M634.66 460.17L349.5 15.92c-13.62-21.23-45.38-21.23-59 0L5.34 460.17C-9.14 482.73 7.52 512 34.85 512h570.3c27.33 0 43.99-29.27 29.51-51.83zM308 160a28 28 0 1 1-28 28 28 28 0 0 1 28-28zm-4 272a16 16 0 0 1-32 0v-32.77l-46.31-29.92-18.25 66.89A16 16 0 0 1 192 448a15.64 15.64 0 0 1-4.22-.56 16 16 0 0 1-11.24-19.64l29.75-109.11 83.07 53.67A31.92 31.92 0 0 1 304 399.23zm48 16l12-29.94A16 16 0 0 1 378.83 408h35.64l-94.8-58.34s-.08 0-.11-.07l-103.95-64a16 16 0 0 1-4.41-23.22l11.61-15.49a47.88 47.88 0 0 1 48.83-18l24.58 7.28c17.45 3.82 31.84 18.53 35.56 37.14l10.55 52.7L430 380l21.16-42.44a16 16 0 0 1 27.78-1.5L550.8 448z", "M308 216a28 28 0 1 0-28-28 28 28 0 0 0 28 28zm-18.62 156.36l-83.07-53.67-29.75 109.11a16 16 0 0 0 11.24 19.64 15.64 15.64 0 0 0 4.2.56 16 16 0 0 0 15.42-11.8l18.25-66.89L272 399.23V432a16 16 0 0 0 32 0v-32.77a31.92 31.92 0 0 0-14.62-26.87zm74.6 45.7L352 448h198.8l-71.88-112a16 16 0 0 0-27.78 1.5L430 380l-87.67-54-10.55-52.7c-3.72-18.61-18.11-33.32-35.56-37.14l-24.58-7.28a47.88 47.88 0 0 0-48.83 18l-11.61 15.53a16 16 0 0 0 4.41 23.22l104 64 .11.07 94.75 58.3h-35.64A16 16 0 0 0 364 418.06z"]]
};
exports.faConstruction = faConstruction;
var faContainerStorage = {
  prefix: 'fad',
  iconName: 'container-storage',
  icon: [640, 512, [], "f4b7", ["M16 96v320h608V96zm96 288H80V128h32zm112 0h-32V128h32zm112 0h-32V128h32zm112 0h-32V128h32zm112 0h-32V128h32z", "M624 416H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h608a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-384H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h608a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z"]]
};
exports.faContainerStorage = faContainerStorage;
var faConveyorBelt = {
  prefix: 'fad',
  iconName: 'conveyor-belt',
  icon: [640, 512, [], "f46e", ["M128 240V16a16 16 0 0 1 16-16h352a16 16 0 0 1 16 16v224a16 16 0 0 1-16 16H144a16 16 0 0 1-16-16z", "M544 320H96a96 96 0 0 0 0 192h448a96 96 0 0 0 0-192zM128 448a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm192 0a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm192 0a32 32 0 1 1 32-32 32 32 0 0 1-32 32zM384 128V0H256v128l64-32z"]]
};
exports.faConveyorBelt = faConveyorBelt;
var faConveyorBeltAlt = {
  prefix: 'fad',
  iconName: 'conveyor-belt-alt',
  icon: [640, 512, [], "f46f", ["M304 0H80a16 16 0 0 0-16 16v224a16 16 0 0 0 16 16h224a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16zm256 64H400a16 16 0 0 0-16 16v160a16 16 0 0 0 16 16h160a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16z", "M544 320H96a96 96 0 0 0 0 192h448a96 96 0 0 0 0-192zM128 448a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm192 0a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm192 0a32 32 0 1 1 32-32 32 32 0 0 1-32 32z"]]
};
exports.faConveyorBeltAlt = faConveyorBeltAlt;
var faCookie = {
  prefix: 'fad',
  iconName: 'cookie',
  icon: [512, 512, [], "f563", ["M510.37 254.78l-12.08-76.26a132.53 132.53 0 0 0-37.16-73l-54.76-54.7a132 132 0 0 0-72.7-37L257 1.62a131.88 131.88 0 0 0-80.52 12.76l-69.14 35.21a132.35 132.35 0 0 0-57.79 57.8l-35.1 68.88a132.63 132.63 0 0 0-12.82 80.94l12.08 76.28a132.56 132.56 0 0 0 37.16 72.95l54.76 54.75a132.12 132.12 0 0 0 72.7 37.05L255 510.38a132 132 0 0 0 80.52-12.75l69.11-35.21a132.35 132.35 0 0 0 57.79-57.8l35.1-68.87a132.72 132.72 0 0 0 12.85-80.97zM176 368a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm32-160a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm160 128a32 32 0 1 1 32-32 32 32 0 0 1-32 32z", "M368 272a32 32 0 1 0 32 32 32 32 0 0 0-32-32zM208 144a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm-32 160a32 32 0 1 0 32 32 32 32 0 0 0-32-32z"]]
};
exports.faCookie = faCookie;
var faCookieBite = {
  prefix: 'fad',
  iconName: 'cookie-bite',
  icon: [512, 512, [], "f564", ["M510.52 255.81A127.93 127.93 0 0 1 384.05 128 127.92 127.92 0 0 1 256.19 1.51a132 132 0 0 0-79.72 12.81l-69.13 35.22a132.32 132.32 0 0 0-57.79 57.81l-35.1 68.88a132.64 132.64 0 0 0-12.82 81l12.08 76.27a132.56 132.56 0 0 0 37.16 73l54.77 54.76a132.1 132.1 0 0 0 72.71 37.06l76.71 12.15a131.92 131.92 0 0 0 80.53-12.76l69.13-35.21a132.32 132.32 0 0 0 57.79-57.81l35.1-68.88a132.59 132.59 0 0 0 12.91-80zM176 368a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm32-160a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm160 128a32 32 0 1 1 32-32 32 32 0 0 1-32 32z", "M368 272a32 32 0 1 0 32 32 32 32 0 0 0-32-32zM208 144a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm-32 160a32 32 0 1 0 32 32 32 32 0 0 0-32-32z"]]
};
exports.faCookieBite = faCookieBite;
var faCopy = {
  prefix: 'fad',
  iconName: 'copy',
  icon: [448, 512, [], "f0c5", ["M352 96V0H152a24 24 0 0 0-24 24v368a24 24 0 0 0 24 24h272a24 24 0 0 0 24-24V96z", "M96 392V96H24a24 24 0 0 0-24 24v368a24 24 0 0 0 24 24h272a24 24 0 0 0 24-24v-40H152a56.06 56.06 0 0 1-56-56zM441 73L375 7a24 24 0 0 0-17-7h-6v96h96v-6.06A24 24 0 0 0 441 73z"]]
};
exports.faCopy = faCopy;
var faCopyright = {
  prefix: 'fad',
  iconName: 'copyright',
  icon: [512, 512, [], "f1f9", ["M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm117.13 346.75c-1.59 1.87-39.77 45.73-109.85 45.73-84.69 0-144.48-63.26-144.48-145.56 0-81.31 62-143.4 143.76-143.4 67 0 102 37.31 103.42 38.9a12 12 0 0 1 1.24 14.58l-22.38 34.7a12 12 0 0 1-16.59 3.57 11.79 11.79 0 0 1-1.64-1.27c-.24-.21-26.53-23.88-61.88-23.88-46.12 0-73.92 33.58-73.92 76.08 0 39.61 25.52 79.7 74.28 79.7 38.7 0 65.28-28.34 65.54-28.63a12 12 0 0 1 16.95-.73h.05a12.2 12.2 0 0 1 1.55 1.74l24.55 33.58a12 12 0 0 1-.6 14.85z", "M373.13 354.75c-1.59 1.87-39.77 45.73-109.85 45.73-84.69 0-144.48-63.26-144.48-145.56 0-81.31 62-143.4 143.76-143.4 67 0 102 37.31 103.42 38.9a12 12 0 0 1 1.24 14.58l-22.38 34.7a12 12 0 0 1-16.59 3.57 11.79 11.79 0 0 1-1.64-1.27c-.24-.21-26.53-23.88-61.88-23.88-46.12 0-73.92 33.58-73.92 76.08 0 39.61 25.52 79.7 74.28 79.7 38.7 0 65.28-28.34 65.54-28.63a12 12 0 0 1 16.95-.73h.05a12.2 12.2 0 0 1 1.55 1.74l24.55 33.58a12 12 0 0 1-.6 14.85z"]]
};
exports.faCopyright = faCopyright;
var faCorn = {
  prefix: 'fad',
  iconName: 'corn',
  icon: [512, 512, [], "f6c7", ["M206.68 111.08a39.13 39.13 0 0 1 45.42-13 40.21 40.21 0 0 1 57.28-32.95 39.86 39.86 0 0 1 61.13-26.57A40.07 40.07 0 0 1 398 11.7a39.12 39.12 0 0 1 38.41 9.6 40.13 40.13 0 0 1 75.51 20.8v3.2a40.51 40.51 0 0 1-22.1 34.53 40.33 40.33 0 0 1 9 38.41 41.29 41.29 0 0 1-27.2 27.19 39.49 39.49 0 0 1 2.88 37.77 40.2 40.2 0 0 1-30.08 23.05 39 39 0 0 1-1.59 37.44 39.79 39.79 0 0 1-31.69 19.85 39.15 39.15 0 0 1-4.79 36.8 39.86 39.86 0 0 1-4.87 5.31c-51.23-28.5-110.09-37.49-166.48-28.13a256.52 256.52 0 0 0-28.32-166.44z", "M423.85 360c-88-76.52-221.49-72.92-305.21 10.79l-67.88 67.83L96 483.88a96 96 0 0 0 135.76 0l90.51-90.51 97.66-19.53c6.44-1.29 8.86-9.59 3.92-13.84zM201 284.85c15.42-67.76-.79-141.26-49-196.71-4.29-4.94-12.58-2.51-13.87 3.91l-19.54 97.68-90.47 90.51a96 96 0 0 0 0 135.77L96 348.12a254.29 254.29 0 0 1 105-63.27z"]]
};
exports.faCorn = faCorn;
var faCouch = {
  prefix: 'fad',
  iconName: 'couch',
  icon: [640, 512, [], "f4b8", ["M96 160H64a96 96 0 0 1 96-96h320a96 96 0 0 1 96 96h-32a64.06 64.06 0 0 0-64 64v64H160v-64a64.06 64.06 0 0 0-64-64z", "M640 256a63.84 63.84 0 0 1-32 55.1V432a16 16 0 0 1-16 16h-64a16 16 0 0 1-16-16v-16H128v16a16 16 0 0 1-16 16H48a16 16 0 0 1-16-16V311.1A63.79 63.79 0 0 1 64 192h32a32 32 0 0 1 32 32v96h384v-96a32 32 0 0 1 32-32h32a64.06 64.06 0 0 1 64 64z"]]
};
exports.faCouch = faCouch;
var faCow = {
  prefix: 'fad',
  iconName: 'cow',
  icon: [640, 512, [], "f6c8", ["M97.37 114.78A40.06 40.06 0 0 0 72 152v104a64 64 0 0 1-64 64H0v-32a63.61 63.61 0 0 1 24-49.59V152a88.1 88.1 0 0 1 88-88h48a64 64 0 0 0-62.63 50.78zm236.36 186.33A79.83 79.83 0 0 0 272 272c-49.29 0-78.11 40.73-79.9 75.89-.06 1.36-.1 2.73-.1 4.11a109 109 0 0 0 32 21.87v25.68c0 8.62 6.63 16 15.23 16.43A16 16 0 0 0 256 400v-17.31c9.1 1.12 12.81 2.36 32 0v16.87c0 8.62 6.63 16 15.23 16.43A16 16 0 0 0 320 400v-26.18A108.92 108.92 0 0 0 352 352a79.7 79.7 0 0 0-18.27-50.89z", "M634 276.72l-10-13.81v-77a16 16 0 0 0-23-14.39c-10.89 5.41-19.6 13.62-26.47 23.09l-65.82-90.9A96 96 0 0 0 431 64H160a64 64 0 0 0-64 64v304a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16v-80a80 80 0 0 1 160 0v80.79A16 16 0 0 0 368 448h64a16 16 0 0 0 16-16V256l32 32v41.48A64 64 0 0 0 490.71 365L532 427a47.24 47.24 0 0 0 85.66-17l21.73-108.6a31.56 31.56 0 0 0-5.39-24.68zM377.23 167.36l-22.89 22.76A116.65 116.65 0 0 1 272.08 224h-.16a116.66 116.66 0 0 1-82.26-33.88l-22.89-22.76C151.05 151.73 164.47 128 189 128h166c24.53 0 38 23.73 22.23 39.36zM576 352a16 16 0 1 1 16-16 16 16 0 0 1-16 16z"]]
};
exports.faCow = faCow;
var faCowbell = {
  prefix: 'fad',
  iconName: 'cowbell',
  icon: [448, 512, [], "f8b3", ["M176.32 96H112.2V48a48.1 48.1 0 0 1 48.09-48h128.23a48.1 48.1 0 0 1 48.09 48v48h-64.12V64h-96.17z", "M447.49 474.35A32 32 0 0 1 415.93 512H32.07A32 32 0 0 1 .51 474.35l63.29-352A32.06 32.06 0 0 1 95.36 96h257.28a32.06 32.06 0 0 1 31.56 26.35z"]]
};
exports.faCowbell = faCowbell;
var faCowbellMore = {
  prefix: 'fad',
  iconName: 'cowbell-more',
  icon: [640, 512, [], "f8b4", ["M480 192a160 160 0 1 0 160 160 160 160 0 0 0-160-160zm80 168a8 8 0 0 1-8 8h-56v56a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8v-56h-56a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h56v-56a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v56h56a8 8 0 0 1 8 8zM336.81 96V48a48.05 48.05 0 0 0-48-48h-128a48.05 48.05 0 0 0-48 48v48h64V64h96v32z", "M552 336h-56v-56a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v56h-56a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h56v56a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-56h56a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8zM394.7 180.24l-10.41-57.89A32.06 32.06 0 0 0 352.73 96H95.38a32 32 0 0 0-31.56 26.35l-63.31 352A32 32 0 0 0 32.07 512h342c-51.93-34.42-86.27-93.26-86.27-160-.02-75.21 43.64-140.27 106.9-171.76z"]]
};
exports.faCowbellMore = faCowbellMore;
var faCreditCard = {
  prefix: 'fad',
  iconName: 'credit-card',
  icon: [576, 512, [], "f09d", ["M0 432a48 48 0 0 0 48 48h480a48 48 0 0 0 48-48V256H0zm192-68a12 12 0 0 1 12-12h136a12 12 0 0 1 12 12v40a12 12 0 0 1-12 12H204a12 12 0 0 1-12-12zm-128 0a12 12 0 0 1 12-12h72a12 12 0 0 1 12 12v40a12 12 0 0 1-12 12H76a12 12 0 0 1-12-12zM528 32H48A48 48 0 0 0 0 80v48h576V80a48 48 0 0 0-48-48z", "M576 256H0V128h576z"]]
};
exports.faCreditCard = faCreditCard;
var faCreditCardBlank = {
  prefix: 'fad',
  iconName: 'credit-card-blank',
  icon: [576, 512, [], "f389", ["M340 352H204a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h136a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm-192 0H76a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h72a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12z", "M528 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h480a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zM160 404a12 12 0 0 1-12 12H76a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h72a12 12 0 0 1 12 12zm192 0a12 12 0 0 1-12 12H204a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h136a12 12 0 0 1 12 12z"]]
};
exports.faCreditCardBlank = faCreditCardBlank;
var faCreditCardFront = {
  prefix: 'fad',
  iconName: 'credit-card-front',
  icon: [576, 512, [], "f38a", ["M268 256h-64a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h64a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm-104 0H76a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h88a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm208 0h-64a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h64a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm128 0h-88a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h88a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12z", "M528 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h480a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zM192 268a12 12 0 0 1 12-12h64a12 12 0 0 1 12 12v40a12 12 0 0 1-12 12h-64a12 12 0 0 1-12-12zm-32 136a12 12 0 0 1-12 12H76a12 12 0 0 1-12-12v-8a12 12 0 0 1 12-12h72a12 12 0 0 1 12 12zm16-96a12 12 0 0 1-12 12H76a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h88a12 12 0 0 1 12 12zm176 96a12 12 0 0 1-12 12H204a12 12 0 0 1-12-12v-8a12 12 0 0 1 12-12h136a12 12 0 0 1 12 12zm32-96a12 12 0 0 1-12 12h-64a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h64a12 12 0 0 1 12 12zm128 0a12 12 0 0 1-12 12h-88a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h88a12 12 0 0 1 12 12zm0-140a23.94 23.94 0 0 1-24 24h-80a23.94 23.94 0 0 1-24-24v-48a23.94 23.94 0 0 1 24-24h80a23.94 23.94 0 0 1 24 24z"]]
};
exports.faCreditCardFront = faCreditCardFront;
var faCricket = {
  prefix: 'fad',
  iconName: 'cricket',
  icon: [640, 512, [], "f449", ["M421.48 321.52L158 506c-8.9 6.2-20.5 7.9-30.4 3.5A216.24 216.24 0 0 1 .08 327.42c-.8-10.8 4.8-21.2 13.7-27.4l263.5-184.5-30.9 175.1z", "M496 352a80 80 0 1 0 80 80 80 80 0 0 0-80-80zM635.7 30.4l-15.2-20.2A24.14 24.14 0 0 0 587 4.32l-144 100.5a32.07 32.07 0 0 1-44.6-7.9l-21.9-31.3a16 16 0 0 0-22.3-3.9l-21.3 14.9-30.9 175.1 175.1 30.9 21.3-14.9a16 16 0 0 0 3.9-22.3l-24.5-35a32.07 32.07 0 0 1 7.9-44.6l144.1-101.9a24.14 24.14 0 0 0 5.88-33.5z"]]
};
exports.faCricket = faCricket;
var faCroissant = {
  prefix: 'fad',
  iconName: 'croissant',
  icon: [512, 512, [], "f7f6", ["M13.15 265.48a62.71 62.71 0 0 1-8.55-3.57 215.11 215.11 0 0 0 39.6 173.5 32 32 0 0 0 21.38 12.33 32.43 32.43 0 0 0 4.06.26 32 32 0 0 0 19.76-6.83l122.32-96c5.1-4 8.11-9.58 10.05-15.6-.21-.06-.42 0-.62-.09zM447.71 65.63a32 32 0 0 0-12.33-21.43A214.91 214.91 0 0 0 261.17 4.48c1.41 2.93 3.3 5.52 4.28 8.7l64 208c.06.2 0 .41.09.62 6-1.93 11.62-5 15.61-10l96-122.32a32.06 32.06 0 0 0 6.56-23.85z", "M509.89 180.66A215.77 215.77 0 0 0 465.7 110l-77.79 99.1 86.8 14.47a32 32 0 0 0 35.18-42.91zm-275-158.07A32 32 0 0 0 196.52 1 268.34 268.34 0 0 0 1 196.55a32 32 0 0 0 21.56 38.35l208 64a32 32 0 0 0 32-8l28.32-28.31a32 32 0 0 0 8-32zm-25.8 365.35L110 465.73a215.37 215.37 0 0 0 70.67 44.19 32 32 0 0 0 42.91-35.18z"]]
};
exports.faCroissant = faCroissant;
var faCrop = {
  prefix: 'fad',
  iconName: 'crop',
  icon: [512, 512, [], "f125", ["M512 376v48a24 24 0 0 1-24 24h-40v-96h40a24 24 0 0 1 24 24zM416 64a32 32 0 0 1 32 32v13.25l59.31-59.31a16 16 0 0 0 0-22.63L484.69 4.69a16 16 0 0 0-22.63 0L402.75 64zm-64 141.25V160h-45.25L160 306.75V24a24 24 0 0 0-24-24H88a24 24 0 0 0-24 24v392a32 32 0 0 0 32 32h224v-96H205.25z", "M416 64H192v96h160v328a24 24 0 0 0 24 24h48a24 24 0 0 0 24-24V96a32 32 0 0 0-32-32zM0 88v48a24 24 0 0 0 24 24h40V64H24A24 24 0 0 0 0 88z"]]
};
exports.faCrop = faCrop;
var faCropAlt = {
  prefix: 'fad',
  iconName: 'crop-alt',
  icon: [512, 512, [], "f565", ["M160 24a24 24 0 0 0-24-24H88a24 24 0 0 0-24 24v392a32 32 0 0 0 32 32h224v-96H160zm328 328h-40v96h40a24 24 0 0 0 24-24v-48a24 24 0 0 0-24-24z", "M416 64H192v96h160v328a24 24 0 0 0 24 24h48a24 24 0 0 0 24-24V96a32 32 0 0 0-32-32zM0 88v48a24 24 0 0 0 24 24h40V64H24A24 24 0 0 0 0 88z"]]
};
exports.faCropAlt = faCropAlt;
var faCross = {
  prefix: 'fad',
  iconName: 'cross',
  icon: [384, 512, [], "f654", ["M384 160v64a32 32 0 0 1-32 32h-96v224a32 32 0 0 1-32 32h-64a32 32 0 0 1-32-32V256H32a32 32 0 0 1-32-32v-64a32 32 0 0 1 32-32h96V32a32 32 0 0 1 32-32h64a32 32 0 0 1 32 32v96h96a32 32 0 0 1 32 32z", ""]]
};
exports.faCross = faCross;
var faCrosshairs = {
  prefix: 'fad',
  iconName: 'crosshairs',
  icon: [512, 512, [], "f05b", ["M256 40C136.71 40 40 136.71 40 256s96.71 216 216 216 216-96.71 216-216S375.29 40 256 40zm107.48 323.48A152 152 0 1 1 408 256a151 151 0 0 1-44.52 107.48z", "M256 224a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm16 128h-32a16 16 0 0 0-16 16v128a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V368a16 16 0 0 0-16-16zM144 224H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm352 0H368a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM272 0h-32a16 16 0 0 0-16 16v128a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16z"]]
};
exports.faCrosshairs = faCrosshairs;
var faCrow = {
  prefix: 'fad',
  iconName: 'crow',
  icon: [640, 512, [], "f520", ["M447.27 487.67a12 12 0 0 1-7.17 15.38l-22.55 8.21a12 12 0 0 1-15.38-7.17l-44.65-120.17a192 192 0 0 0 48.73-7.7zM312.87 384H261l45.22 120.1a12 12 0 0 0 15.38 7.17l22.55-8.21a12 12 0 0 0 7.17-15.38zM640 96c0-35.35-43-64-96-64h-16a79.67 79.67 0 0 1 16 48v32z", "M464 0a80 80 0 0 0-80 80v21L12.09 393.57a30.22 30.22 0 0 0 31.64 51.2L165.27 384H352c106 0 192-86 192-192V80a80 80 0 0 0-80-80zm0 104a24 24 0 1 1 24-24 24 24 0 0 1-24 24z"]]
};
exports.faCrow = faCrow;
var faCrown = {
  prefix: 'fad',
  iconName: 'crown',
  icon: [640, 512, [], "f521", ["M544 464v32a16 16 0 0 1-16 16H112a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h416a16 16 0 0 1 16 16z", "M640 176a48 48 0 0 1-48 48 49 49 0 0 1-7.7-.8L512 416H128L55.7 223.2a49 49 0 0 1-7.7.8 48.36 48.36 0 1 1 43.7-28.2l72.3 43.4a32 32 0 0 0 44.2-11.6L289.7 85a48 48 0 1 1 60.6 0l81.5 142.6a32 32 0 0 0 44.2 11.6l72.4-43.4A47 47 0 0 1 544 176a48 48 0 0 1 96 0z"]]
};
exports.faCrown = faCrown;
var faCrutch = {
  prefix: 'fad',
  iconName: 'crutch',
  icon: [512, 512, [], "f7f7", ["M281 49.91a16 16 0 0 1 0-22.63l22.69-22.6a16 16 0 0 1 22.62 0l181 181a16 16 0 0 1-.06 22.6l-22.62 22.63a16 16 0 0 1-22.63 0z", "M382.91 197l-55.1 55.12-67.89-67.92L315 129.1l-45.23-45.25L160.1 193.52a96.05 96.05 0 0 0-25.67 46.29l-27.74 120.26-102 102a16 16 0 0 0 0 22.63l22.62 22.62a16 16 0 0 0 22.63 0l102-102 120.25-27.75a95.85 95.85 0 0 0 46.29-25.65l109.68-109.68zM273.24 306.66a32 32 0 0 1-15.45 8.54l-79.3 18.32 18.3-79.3a32.23 32.23 0 0 1 8.56-15.45l9.31-9.31 67.89 67.89z"]]
};
exports.faCrutch = faCrutch;
var faCrutches = {
  prefix: 'fad',
  iconName: 'crutches',
  icon: [640, 512, [], "f7f8", ["M635.28 185.7l-181-181a16 16 0 0 0-22.62 0L409 27.3a16 16 0 0 0 0 22.63l181 181a16 16 0 0 0 22.63 0l22.62-22.63a16 16 0 0 0 .03-22.6zm-128 276.36L441 395.75a128 128 0 0 1-33.67 13L371.71 417 462 507.31a16 16 0 0 0 22.63 0l22.62-22.63a16 16 0 0 0 0-22.62zM231 49.93a16 16 0 0 0 0-22.62L208.3 4.68a16 16 0 0 0-22.62 0l-181 181a16 16 0 0 0 0 22.62l22.6 22.7a16 16 0 0 0 22.63 0l11.32-11.31 132.29 132.24c.68.68 1.57 1.06 2.27 1.71l9.69-9.69 13.22-57.32-112.22-112.24 67.89-67.89 78.75 78.75a128.23 128.23 0 0 1 12.29-14.34L297.34 139l-77.72-77.75z", "M510.84 197l-55.1 55.12-67.89-67.89 55.1-55.1-45.25-45.26L288 193.54a96.13 96.13 0 0 0-25.67 46.29l-27.71 120.26-102 102a16 16 0 0 0 0 22.63l22.62 22.62a16 16 0 0 0 22.63 0l102-102 120.25-27.75a95.85 95.85 0 0 0 46.29-25.65l109.68-109.68zM401.17 306.68a31.94 31.94 0 0 1-15.45 8.54l-79.3 18.32 18.3-79.3a32.31 32.31 0 0 1 8.56-15.45l9.31-9.31 67.89 67.89z"]]
};
exports.faCrutches = faCrutches;
var faCube = {
  prefix: 'fad',
  iconName: 'cube',
  icon: [512, 512, [], "f1b2", ["M480.85 85.58l-208-78a47.17 47.17 0 0 0-33.7-.1l-208 78a48.06 48.06 0 0 0-31.1 45v225.1a48 48 0 0 0 26.5 42.9l208 104a47.66 47.66 0 0 0 42.9 0l208-104a47.91 47.91 0 0 0 26.5-42.9v-225.1a47.93 47.93 0 0 0-31.1-44.9zM448 345.16l-160 80v-148.9l160-65zm.05-202.48l-192 78-192-78v-1.1l192-72 192 72z", "M448 345.16l-160 80v-148.9l160-65z"]]
};
exports.faCube = faCube;
var faCubes = {
  prefix: 'fad',
  iconName: 'cubes',
  icon: [512, 512, [], "f1b3", ["M488.6 250.2L392 214V105.52a36 36 0 0 0-23.4-33.7l-100-37.5a35.68 35.68 0 0 0-25.3 0l-100 37.5a36 36 0 0 0-23.4 33.7V214l-96.6 36.2A36 36 0 0 0 0 283.9V394a36 36 0 0 0 19.9 32.2l100 50a35.86 35.86 0 0 0 32.2 0l103.9-52 103.9 52a35.86 35.86 0 0 0 32.2 0l100-50A36 36 0 0 0 512 394V283.9a36 36 0 0 0-23.4-33.7zM238 395.18l-85 42.5v-79.09l85-38.8zm0-112l-102 41.41L34 283.2v-.6l102-38.2 102 38.2zm-84-178.46v-.6l102-38.2 102 38.2v.6l-102 41.39zm119 73.79l85-37v73.29l-85 31.9zm205 216.67l-85 42.5v-79.09l85-38.8zm0-112l-102 41.41-102-41.39v-.6l102-38.2 102 38.2z", "M153 437.68l85-42.5v-75.39l-85 38.8zm240-79.09v79.09l85-42.5v-75.39zM273 246.7l85-31.9v-73.29l-85 37z"]]
};
exports.faCubes = faCubes;
var faCurling = {
  prefix: 'fad',
  iconName: 'curling',
  icon: [640, 512, [], "f44a", ["M0 416a96 96 0 0 0 96 96h448a96 96 0 0 0 96-96v-32H0zm544-176H96a96 96 0 0 0-96 96v16h640v-16a96 96 0 0 0-96-96z", "M554.1 192H85.9c13.2-37.2 48.4-64 90.1-64h48v-16A111.94 111.94 0 0 1 336 0h128a16 16 0 0 1 16 16v32a16 16 0 0 1-16 16c-117.7 0-176-11.4-176 48v16h176c41.7 0 76.9 26.8 90.1 64z"]]
};
exports.faCurling = faCurling;
var faCut = {
  prefix: 'fad',
  iconName: 'cut',
  icon: [448, 512, [], "f0c4", ["M96 224a96.49 96.49 0 0 0 13.36-.93L142.29 256l67.88-67.88-24.85-24.86A96 96 0 1 0 96 224zm0-128a32 32 0 1 1-32 32 32 32 0 0 1 32-32zm348.48 326.43a12 12 0 0 1 0 17 84 84 0 0 1-118.79 0L210.17 323.88 278.06 256z", "M444.48 89.57a12 12 0 0 0 0-17 84 84 0 0 0-118.79 0L109.36 288.93a95.9 95.9 0 1 0 76 59.81zM96 416a32 32 0 1 1 32-32 32 32 0 0 1-32 32z"]]
};
exports.faCut = faCut;
var faDagger = {
  prefix: 'fad',
  iconName: 'dagger',
  icon: [384, 512, [], "f6cb", ["M128 428.84V224h128v204.84l-50.68 76a16 16 0 0 1-26.63 0z", "M290.94 192H93.06A47.92 47.92 0 1 1 48 128h112V16a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16v112h112a48 48 0 1 1-45.06 64z"]]
};
exports.faDagger = faDagger;
var faDatabase = {
  prefix: 'fad',
  iconName: 'database',
  icon: [448, 512, [], "f1c0", ["M447 73.14v45.72C447 159.14 346.67 192 223 192S-1 159.14-1 118.86V73.14C-1 32.86 99.33 0 223 0s224 32.86 224 73.14z", "M-1 336v102.86C-1 479.14 99.33 512 223 512s224-32.86 224-73.14V336c-48.13 33.14-136.21 48.57-224 48.57S47.12 369.14-1 336zm224-111.43c-87.79 0-175.88-15.43-224-48.57v102.86C-1 319.14 99.33 352 223 352s224-32.86 224-73.14V176c-48.13 33.14-136.21 48.57-224 48.57z"]]
};
exports.faDatabase = faDatabase;
var faDeaf = {
  prefix: 'fad',
  iconName: 'deaf',
  icon: [512, 512, [], "f2a4", ["M508.48 31.8L480.2 3.51a12 12 0 0 0-17 0l-87 87a12 12 0 0 0 0 17l28.28 28.29a12 12 0 0 0 17 0l87-87a12 12 0 0 0 0-17zM169 314.74a12 12 0 0 0-17 0L3.51 463.23a12 12 0 0 0 0 17l28.29 28.25a12 12 0 0 0 17 0L197.26 360a12 12 0 0 0 0-17z", "M240 84c-97 0-176 79-176 176a28 28 0 0 0 56 0 120 120 0 0 1 240 0c0 75.16-71 70.31-72 143.62v.38a52.06 52.06 0 0 1-52 52 28 28 0 0 0 0 56 108.13 108.13 0 0 0 108-107.77c.59-34.43 72-48.23 72-144.23 0-97-78.95-176-176-176zm0 152a24 24 0 0 1 24 24 28 28 0 0 0 56 0 80 80 0 0 0-160 0 28 28 0 0 0 56 0 24 24 0 0 1 24-24z"]]
};
exports.faDeaf = faDeaf;
var faDebug = {
  prefix: 'fad',
  iconName: 'debug',
  icon: [512, 512, [], "f7f9", ["M159.12 338.69l24.8-16.54a78.87 78.87 0 0 1-6.77-22.72l-30.88 4.41a16 16 0 0 1-4.54-31.68l34.27-4.9v-.76l98.94 98.95a76.89 76.89 0 0 1-71.68-17.73l-26.39 17.59c-.15.11-.31.21-.47.31a16 16 0 0 1-17.28-26.93zm224.72-48.42a16 16 0 0 0-13.57-18.11l-34.27-4.9V244.9l34.27-4.9a16 16 0 1 0-4.54-31.68l-30.54 4.36a79.31 79.31 0 0 0-6.85-22.85l24.54-16.36a16 16 0 1 0-17.29-26.93l-.46.31-26 17.34a79.9 79.9 0 0 0-102.64-3l139.83 139.88 19.41 2.77a16 16 0 0 0 18.11-13.57z", "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 432c-101.46 0-184-82.54-184-184a182.84 182.84 0 0 1 33.38-105.37l256 256A182.86 182.86 0 0 1 256 440zm150.62-78.63l-256-256A182.84 182.84 0 0 1 256 72c101.46 0 184 82.54 184 184a182.84 182.84 0 0 1-33.38 105.37z"]]
};
exports.faDebug = faDebug;
var faDeer = {
  prefix: 'fad',
  iconName: 'deer',
  icon: [512, 512, [], "f78e", ["M223.9 55.8V8a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v47.8a16 16 0 0 0 11.7 15.4l16.1 4.5 16.8-20.9a16 16 0 0 0 3.5-10V8a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v36.8a48.05 48.05 0 0 1-10.5 30l-8.3 10.3 33.8 9.5 42.6-21.3A47 47 0 0 0 412.1 57l18-27.2a7.94 7.94 0 0 1 11.1-2.2l13.3 8.9a7.94 7.94 0 0 1 2.2 11.1l-18.1 27.2a80.24 80.24 0 0 1-30.7 27.1l-12 5.59-19.19-5.33A32 32 0 0 0 339.36 119l-2.36 4.82L258.9 102a48 48 0 0 1-35-46.2z", "M488.7 133.3l-112-31.14A32 32 0 0 0 339.36 119L304 192H64a64 64 0 0 0-64 64v64l32-20v47.6l-11.9 31.8a64.08 64.08 0 0 0-2.2 38l24.9 82.5A16 16 0 0 0 58.3 512h63.8a16 16 0 0 0 15.5-19.9l-26.3-88.4 19.4-51.7H288v144a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16V288l32-64h64a32 32 0 0 0 32-32v-27.9a32.13 32.13 0 0 0-23.3-30.8zM416 176a16 16 0 1 1 16-16 16 16 0 0 1-16 16z"]]
};
exports.faDeer = faDeer;
var faDeerRudolph = {
  prefix: 'fad',
  iconName: 'deer-rudolph',
  icon: [512, 512, [], "f78f", ["M191.9 55.8V8a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v47.8a16 16 0 0 0 11.7 15.4l16.1 4.5 16.8-20.9a16 16 0 0 0 3.5-10V8a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v36.8a48.05 48.05 0 0 1-10.5 30l-8.3 10.3 33.8 9.5 42.6-21.3A47 47 0 0 0 380.1 57l18-27.2a7.94 7.94 0 0 1 11.1-2.2l13.3 8.9a7.94 7.94 0 0 1 2.2 11.1l-18.1 27.2a80.24 80.24 0 0 1-30.7 27.1l-12 5.59-19.19-5.33A32 32 0 0 0 307.36 119l-2.36 4.82L226.9 102a48 48 0 0 1-35-46.2zM480 96a32 32 0 0 0-32 32c0 1 .05 2 .14 2.92l8.56 2.38a32.15 32.15 0 0 1 23 26.69h.3a32 32 0 0 0 0-64z", "M456.7 133.3l-112-31.14A32 32 0 0 0 307.36 119L272 192H64a64 64 0 0 0-64 64v64l32-20v47.6l-11.9 31.8a64.08 64.08 0 0 0-2.2 38l24.9 82.5A16 16 0 0 0 58.3 512h63.8a16 16 0 0 0 15.5-19.9l-26.3-88.4 19.4-51.7H256v144a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16V288l32-64h64a32 32 0 0 0 32-32v-27.9a32.13 32.13 0 0 0-23.3-30.8zM384 176a16 16 0 1 1 16-16 16 16 0 0 1-16 16z"]]
};
exports.faDeerRudolph = faDeerRudolph;
var faDemocrat = {
  prefix: 'fad',
  iconName: 'democrat',
  icon: [640, 512, [], "f747", ["M544 352v144a16 16 0 0 1-16 16h-64a16 16 0 0 1-16-16v-80H288v80a16 16 0 0 1-16 16h-64a16 16 0 0 1-16-16V352z", "M637.29 256.86l-19.6-29.4A151.18 151.18 0 0 0 491.59 160H256l-81.2-81.2a58.73 58.73 0 0 0 7.5-73.9 9.87 9.87 0 0 0-15.2-1.5l-41.8 41.8L82.39 2.36A8.07 8.07 0 0 0 70 3.56 48.08 48.08 0 0 0 76.09 64c3.3 3.3 7.3 5.3 11.3 7.5-2.2 1.7-4.7 3.1-6.4 5.4l-74.6 99.3a32 32 0 0 0-3 33.5l14.3 28.6a32.05 32.05 0 0 0 28.6 17.7h31a31.94 31.94 0 0 0 22.6-9.4L138 212l54 108h352v-77.8c16.2 12.2 18.3 17.6 40.1 50.3a16 16 0 0 0 22.2 4.4l26.6-17.7a16.18 16.18 0 0 0 4.39-22.34zm-341.1-13.6l-16.5 16.1 3.9 22.7a5 5 0 0 1-7.2 5.3L256 276.66l-20.4 10.7a5 5 0 0 1-7.2-5.3l3.9-22.7-16.5-16.1a5 5 0 0 1 2.8-8.5l22.8-3.3 10.2-20.7a5 5 0 0 1 9 0l10.2 20.7 22.8 3.3a5 5 0 0 1 2.59 8.5zm112 0l-16.5 16.1 3.9 22.7a5 5 0 0 1-7.2 5.3L368 276.66l-20.4 10.7a5 5 0 0 1-7.2-5.3l3.9-22.7-16.5-16.1a5 5 0 0 1 2.8-8.5l22.8-3.3 10.2-20.7a5 5 0 0 1 9 0l10.2 20.7 22.8 3.3a5 5 0 0 1 2.59 8.5zm112 0l-16.5 16.1 3.9 22.7a5 5 0 0 1-7.2 5.3L480 276.66l-20.4 10.7a5 5 0 0 1-7.2-5.3l3.9-22.7-16.5-16.1a5 5 0 0 1 2.8-8.5l22.8-3.3 10.2-20.7a5 5 0 0 1 9 0l10.2 20.7 22.8 3.3a5 5 0 0 1 2.59 8.5z"]]
};
exports.faDemocrat = faDemocrat;
var faDesktop = {
  prefix: 'fad',
  iconName: 'desktop',
  icon: [576, 512, [], "f108", ["M528 0H48A48 48 0 0 0 0 48v320a48 48 0 0 0 48 48h480a48 48 0 0 0 48-48V48a48 48 0 0 0-48-48zm-16 352H64V64h448z", "M424 464h-72l-16-48h-96l-16 48h-72a24 24 0 0 0 0 48h272a24 24 0 0 0 0-48zM64 64v288h448V64z"]]
};
exports.faDesktop = faDesktop;
var faDesktopAlt = {
  prefix: 'fad',
  iconName: 'desktop-alt',
  icon: [576, 512, [], "f390", ["M528 0H48A48 48 0 0 0 0 48v320a48 48 0 0 0 48 48h480a48 48 0 0 0 48-48V48a48 48 0 0 0-48-48zm-16 288H64V64h448z", "M64 64v224h448V64zm360 400h-72l-16-48h-96l-16 48h-72a24 24 0 0 0 0 48h272a24 24 0 0 0 0-48z"]]
};
exports.faDesktopAlt = faDesktopAlt;
var faDewpoint = {
  prefix: 'fad',
  iconName: 'dewpoint',
  icon: [512, 512, [], "f748", ["M416 0a96 96 0 1 0 96 96 96.15 96.15 0 0 0-96-96zm0 128a32 32 0 1 1 32-32 32 32 0 0 1-32 32z", "M384 333.9c0 98.4-85.9 178.1-192 178.1S0 432.3 0 333.9C0 222.69 109.1 179.79 160.1 22.09c9.8-30.1 55.1-28.8 63.8 0 51.2 158.5 160.1 200 160.1 311.81z"]]
};
exports.faDewpoint = faDewpoint;
var faDharmachakra = {
  prefix: 'fad',
  iconName: 'dharmachakra',
  icon: [512, 512, [], "f655", ["M162.5 277.84l-64.42 4a161.92 161.92 0 0 1 0-51.74l64.42 4q-.6 2.55-1.06 5.18l-.09.6c-.11.64-.22 1.29-.31 1.95l-.12.82c-.08.58-.16 1.17-.23 1.75 0 .31-.07.62-.1.93-.07.56-.12 1.12-.17 1.68l-.09 1c-.05.56-.08 1.13-.12 1.69l-.06 1c0 .6-.06 1.2-.08 1.81v7c0 .61.05 1.21.08 1.81l.06 1c0 .56.07 1.13.12 1.69l.09 1c.05.56.1 1.12.17 1.68 0 .31.07.62.1.93.07.58.15 1.17.23 1.75l.12.82c.09.66.2 1.31.31 1.95l.09.6q.47 2.55 1.06 5.1zm11.95-72.5a96.68 96.68 0 0 1 8.09-11.13 96.52 96.52 0 0 1 22.79-19.74L162.63 126A161.73 161.73 0 0 0 126 162.62zM256 96a162 162 0 0 0-25.87 2.08l4 64.42c1.7-.4 3.43-.75 5.17-1.05l.62-.11c.64-.11 1.28-.21 1.93-.3l.84-.12 1.74-.23.94-.1c.55-.07 1.11-.12 1.67-.17l1-.09c.56-.05 1.13-.08 1.69-.12l1-.06 1.81-.08h7l1.81.08 1 .06c.56 0 1.13.07 1.69.12l1 .09c.56.05 1.12.1 1.67.17l.94.1 1.74.23.84.12c.65.09 1.29.19 1.93.3l.62.11c1.74.3 3.47.65 5.17 1.05l4-64.42A162 162 0 0 0 256 96zm25.87 317.92l-4-64.42c-1.7.4-3.43.75-5.17 1.05l-.62.11c-.64.11-1.28.21-1.93.3l-.84.12-1.74.23-.93.1-1.68.17-1 .09c-.56.05-1.13.08-1.69.12l-1 .06-1.81.08h-7l-1.81-.08-1-.06c-.56 0-1.13-.07-1.69-.12l-1-.09-1.69-.17-.92-.1-1.77-.23-.8-.12c-.66-.09-1.32-.2-2-.31l-.58-.09q-2.61-.46-5.18-1.06l-4 64.42a162 162 0 0 0 51.75 0zm68.69-174.58l.09.6c.11.64.22 1.29.31 1.95l.12.82c.08.58.16 1.17.23 1.75 0 .31.07.62.1.93.07.56.12 1.12.17 1.68l.09 1c.05.56.08 1.13.12 1.69l.06 1c0 .6.06 1.2.08 1.81v7c0 .6-.05 1.2-.08 1.81l-.06 1c0 .56-.07 1.12-.12 1.68l-.09 1c-.05.56-.1 1.12-.17 1.67 0 .32-.07.63-.1.94-.07.58-.15 1.16-.23 1.73 0 .28-.07.57-.12.85-.09.64-.19 1.28-.3 1.91 0 .21-.07.43-.11.64-.14.84-.3 1.68-.47 2.52-.18.89-.37 1.77-.58 2.64l64.42 4a161.92 161.92 0 0 0 0-51.74l-64.42 4q.6 2.49 1.06 5.12zm83.53-119.2l12.78-11.27a16 16 0 0 0 .73-23.31L426.44 64.4a16 16 0 0 0-23.31.73l-11.28 12.78a224.93 224.93 0 0 1 42.24 42.23zm-228.76 217.4a96.39 96.39 0 0 1-30.88-30.88L126 349.37a161.82 161.82 0 0 0 16.82 19.77 163.52 163.52 0 0 0 19.8 16.86l42.71-48.41zm132.23-30.89a96.64 96.64 0 0 1-19.75 22.8 94.54 94.54 0 0 1-11.14 8.1L349.38 386a163.52 163.52 0 0 0 19.76-16.82A161.82 161.82 0 0 0 386 349.37zM32 256a226.63 226.63 0 0 1 2-29.88l-17-1.06A16 16 0 0 0 0 241v30a16 16 0 0 0 17 16l17-1.06A226.63 226.63 0 0 1 32 256zm414.88 147.12l-12.78-11.28a225 225 0 0 1-42.24 42.25l11.27 12.78a16 16 0 0 0 23.31.73l21.17-21.17a16 16 0 0 0-.73-23.31zM495 225.06l-17 1.06a225.32 225.32 0 0 1 0 59.76l17 1.06a16 16 0 0 0 17-16V241a16 16 0 0 0-17-15.94zM285.88 478a225.32 225.32 0 0 1-59.76 0l-1.06 17a16 16 0 0 0 16 17H271a16 16 0 0 0 16-17zm63.49-352l-42.71 48.41a96.33 96.33 0 0 1 22.79 19.75 95.58 95.58 0 0 1 8.1 11.13L386 162.62A161.73 161.73 0 0 0 349.37 126zM226.12 34a225.32 225.32 0 0 1 59.76 0l1.06-17A16 16 0 0 0 271 0h-30a16 16 0 0 0-16 17zm-161 74.88l12.78 11.27a225.58 225.58 0 0 1 42.25-42.25l-11.27-12.77a16 16 0 0 0-23.31-.73L64.4 85.56a16 16 0 0 0 .73 23.31zm12.77 283l-12.76 11.24a16 16 0 0 0-.73 23.31l21.17 21.17a16 16 0 0 0 23.31-.73l11.27-12.77a225.39 225.39 0 0 1-42.25-42.25z", "M256 32C132.29 32 32 132.29 32 256s100.29 224 224 224 224-100.29 224-224S379.71 32 256 32zm113.14 337.14A160 160 0 1 1 416 256a159 159 0 0 1-46.86 113.14zM256 160a96 96 0 1 0 96 96 96 96 0 0 0-96-96zm0 128a32 32 0 1 1 32-32 32 32 0 0 1-32 32z"]]
};
exports.faDharmachakra = faDharmachakra;
var faDiagnoses = {
  prefix: 'fad',
  iconName: 'diagnoses',
  icon: [640, 512, [], "f470", ["M320 176a88 88 0 1 0-88-88 88.13 88.13 0 0 0 88 88zm268 116.3c-11.9-7.1-29.7-17-51.1-27.4-28.1 46.1-99.4 17.8-87.7-35.1C409.3 217.2 365.1 208 320 208c-57 0-112.9 14.5-160 32.2-.2 40.2-47.6 63.3-79.2 36-11.2 6-21.3 11.6-28.7 16-17.6 10.5-18.8 31.8-10 45.1L59.8 364a31.88 31.88 0 0 0 42.9 9.8A599.33 599.33 0 0 1 208 325.2V416h224v-90.7a591.93 591.93 0 0 1 105.3 48.6 32.08 32.08 0 0 0 42.9-9.8l17.8-26.7c8.8-13.2 7.6-34.6-10-45.1zM272 296a24 24 0 1 1 24-24 23.94 23.94 0 0 1-24 24zm96 64a24 24 0 1 1 24-24 23.94 23.94 0 0 1-24 24z", "M112 256a16 16 0 1 0-16-16 16 16 0 0 0 16 16zm384 0a16 16 0 1 0-16-16 16 16 0 0 0 16 16zm128 192H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h608a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z"]]
};
exports.faDiagnoses = faDiagnoses;
var faDiamond = {
  prefix: 'fad',
  iconName: 'diamond',
  icon: [448, 512, [], "f219", ["M442.14 240.34l-200-232a24 24 0 0 0-36.36 0l-200 232a23.84 23.84 0 0 0 0 31.3l200 232a24 24 0 0 0 36.36 0l200-232a23.84 23.84 0 0 0 0-31.3zm-94.05 26l-111.9 128.15a16.23 16.23 0 0 1-24.38 0L99.91 266.38a15.74 15.74 0 0 1 0-20.76l111.9-128.11a16.23 16.23 0 0 1 24.38 0l111.9 128.11a15.74 15.74 0 0 1 0 20.76z", "M348.09 245.62a15.74 15.74 0 0 1 0 20.76l-111.9 128.11a16.23 16.23 0 0 1-24.38 0L99.91 266.38a15.74 15.74 0 0 1 0-20.76l111.9-128.11a16.23 16.23 0 0 1 24.38 0z"]]
};
exports.faDiamond = faDiamond;
var faDice = {
  prefix: 'fad',
  iconName: 'dice',
  icon: [640, 512, [], "f522", ["M433.63 189.3L258.7 14.37a49.07 49.07 0 0 0-69.39 0L14.37 189.3a49.07 49.07 0 0 0 0 69.39L189.3 433.63a49.07 49.07 0 0 0 69.39 0L433.63 258.7a49.08 49.08 0 0 0 0-69.4zM96 248a24 24 0 1 1 24-24 24 24 0 0 1-24 24zm128 128a24 24 0 1 1 24-24 24 24 0 0 1-24 24zm0-128a24 24 0 1 1 24-24 24 24 0 0 1-24 24zm0-128a24 24 0 1 1 24-24 24 24 0 0 1-24 24zm128 128a24 24 0 1 1 24-24 24 24 0 0 1-24 24z", "M592 192H473.26a81.07 81.07 0 0 1-17 89.32L320 417.58V464a48 48 0 0 0 48 48h224a48 48 0 0 0 48-48V240a48 48 0 0 0-48-48zM480 376a24 24 0 1 1 24-24 24 24 0 0 1-24 24zM96 200a24 24 0 1 0 24 24 24 24 0 0 0-24-24zm256 48a24 24 0 1 0-24-24 24 24 0 0 0 24 24zm-128 80a24 24 0 1 0 24 24 24 24 0 0 0-24-24zm0-256a24 24 0 1 0 24 24 24 24 0 0 0-24-24zm0 128a24 24 0 1 0 24 24 24 24 0 0 0-24-24z"]]
};
exports.faDice = faDice;
var faDiceD10 = {
  prefix: 'fad',
  iconName: 'dice-d10',
  icon: [512, 512, [], "f6cd", ["M509 240.86L317.19 7c-6-7.37-17.39-.66-14.46 8.55L370.52 228l130.38 27.29c7.89 1.71 13.32-8.04 8.1-14.43zM194.8 7L3 240.86c-5.24 6.39.2 16.08 8.08 14.42L141.47 228l67.78-212.5c2.95-9.17-8.4-15.89-14.45-8.5zM248 6l-73.4 230.12 81.4 56.74 81.43-56.71L264 6a8.36 8.36 0 0 0-16 0z", "M505.19 292.27l-144.06-30.11-88.2 61.44v179.54c0 7.59 8.55 11.65 14 6.66l222.15-202.2c5.31-4.82 3-13.89-3.89-15.33zm-498.38 0c-6.89 1.44-9.2 10.51-3.9 15.33l222.14 202.19c5.48 5 14 .93 14-6.67V323.6l-88.2-61.44z"]]
};
exports.faDiceD10 = faDiceD10;
var faDiceD12 = {
  prefix: 'fad',
  iconName: 'dice-d12',
  icon: [512, 512, [], "f6ce", ["M7.54 176.92l123.62 123.62L240 246.11V139.24L59 74.07zM453 74.07l-181 65.17v106.87l108.84 54.42 123.62-123.62zM333.51 6.76A63.87 63.87 0 0 0 304.89 0H207.1a63.91 63.91 0 0 0-28.62 6.76L89.72 51.14 256 111l166.28-59.86z", "M256 273.89l-108.59 54.29L206.23 512h99.53l58.82-183.82zM0 214.62v90.27a63.87 63.87 0 0 0 6.76 28.62l47.7 95.4a63.92 63.92 0 0 0 28.62 28.62L169 500.47l-55-171.91zm398.05 114L343 500.48l85.88-42.94a64 64 0 0 0 28.62-28.62l47.7-95.4a64.07 64.07 0 0 0 6.8-28.62v-90.27z"]]
};
exports.faDiceD12 = faDiceD12;
var faDiceD20 = {
  prefix: 'fad',
  iconName: 'dice-d20',
  icon: [480, 512, [], "f6cf", ["M240 0a15.88 15.88 0 0 0-13.63 7.62L130.79 176h218.42L253.63 7.62A15.88 15.88 0 0 0 240 0zm-71.38 11.74L17.81 110.35a4 4 0 0 0 .13 6.78l81.53 48.69L179.4 22.88c4.34-7.06-3.59-15.25-10.78-11.14zm293.57 98.6l-150.81-98.6c-7.19-4.11-15.12 4.08-10.78 11.14l79.93 142.94 81.53-48.7a4 4 0 0 0 .13-6.78z", "M106.75 215.06L1.2 371a8 8 0 0 0 5.93 12.14l208.26 22.07zM7.41 315.43L82.7 193.08l-76.64-46A4 4 0 0 0 0 150.53v162.81a4 4 0 0 0 7.41 2.09zM18.25 423.6l194.4 87.66A8 8 0 0 0 224 504v-65.67L20.45 416a4 4 0 0 0-2.2 7.6zM139.57 208L240 383.75 340.43 208zM480 313.34V150.53a4 4 0 0 0-6.06-3.43l-76.64 46 75.29 122.35a4 4 0 0 0 7.41-2.11zM478.81 371L373.25 215.06l-108.63 190.1 208.26-22.07a8 8 0 0 0 5.93-12.09zm-19.26 45L256 438.32V504a8 8 0 0 0 11.35 7.26l194.4-87.66a4 4 0 0 0-2.2-7.6z"]]
};
exports.faDiceD20 = faDiceD20;
var faDiceD4 = {
  prefix: 'fad',
  iconName: 'dice-d4',
  icon: [512, 512, [], "f6d0", ["M239.81 8.53v494.94c0 7.15-7.87 11.11-13.17 6.64L3 321.3a8.82 8.82 0 0 1-1.35-11.82L225.28 3.34C230-3.1 239.8.4 239.81 8.53z", "M272.2 503.47V8.53c0-8.13 9.8-11.63 14.52-5.19l223.6 306.14A8.79 8.79 0 0 1 509 321.3L285.37 510.11c-5.3 4.47-13.17.51-13.17-6.64z"]]
};
exports.faDiceD4 = faDiceD4;
var faDiceD6 = {
  prefix: 'fad',
  iconName: 'dice-d6',
  icon: [448, 512, [], "f6d1", ["M25.87 124.42a8.54 8.54 0 0 1-.06-14.42l166-100.88a61.72 61.72 0 0 1 64.43 0L422.19 110a8.54 8.54 0 0 1-.05 14.47L224 242.55z", "M0 161.83v197.7c0 23.77 12.11 45.74 31.79 57.7L184 509.71c10.67 6.48 24.05-1.54 24.05-14.44V271.46L12 154.58c-5.36-3.17-12 .85-12 7.25zm436-7.25L240 271.46v223.82c0 12.89 13.39 20.92 24.05 14.43l152.16-92.48c19.68-12 31.79-33.94 31.79-57.7v-197.7c0-6.41-6.64-10.42-12-7.25z"]]
};
exports.faDiceD6 = faDiceD6;
var faDiceD8 = {
  prefix: 'fad',
  iconName: 'dice-d8',
  icon: [512, 512, [], "f6d2", ["M225.53 2.52L2.36 233.83a8.45 8.45 0 0 0 3.1 13.77l234.13 85.06V8.39a8.19 8.19 0 0 0-14.06-5.87zm284.11 231.31L286.47 2.52a8.19 8.19 0 0 0-14.06 5.88v324.27l234.13-85.06a8.46 8.46 0 0 0 3.1-13.78z", "M469.87 296.61l-197.46 71.68V503.6a8.19 8.19 0 0 0 14.06 5.88l192-199.1c6.12-6.38-.39-16.75-8.6-13.77zM33.53 310.38l192 199.1a8.19 8.19 0 0 0 14.06-5.88V368.29L42.13 296.61c-8.21-2.98-14.72 7.39-8.6 13.77z"]]
};
exports.faDiceD8 = faDiceD8;
var faDiceFive = {
  prefix: 'fad',
  iconName: 'dice-five',
  icon: [448, 512, [], "f523", ["M384 32H64A64 64 0 0 0 0 96v320a64 64 0 0 0 64 64h320a64 64 0 0 0 64-64V96a64 64 0 0 0-64-64zM128 384a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm0-192a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm96 96a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm96 96a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm0-192a32 32 0 1 1 32-32 32 32 0 0 1-32 32z", "M320 192a32 32 0 1 0-32-32 32 32 0 0 0 32 32zm0 128a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm-96-96a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm-96-96a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm0 192a32 32 0 1 0 32 32 32 32 0 0 0-32-32z"]]
};
exports.faDiceFive = faDiceFive;
var faDiceFour = {
  prefix: 'fad',
  iconName: 'dice-four',
  icon: [448, 512, [], "f524", ["M384 32H64A64 64 0 0 0 0 96v320a64 64 0 0 0 64 64h320a64 64 0 0 0 64-64V96a64 64 0 0 0-64-64zM128 384a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm0-192a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm192 192a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm0-192a32 32 0 1 1 32-32 32 32 0 0 1-32 32z", "M128 320a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm0-192a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm192 192a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm0-128a32 32 0 1 0-32-32 32 32 0 0 0 32 32z"]]
};
exports.faDiceFour = faDiceFour;
var faDiceOne = {
  prefix: 'fad',
  iconName: 'dice-one',
  icon: [448, 512, [], "f525", ["M384 32H64A64 64 0 0 0 0 96v320a64 64 0 0 0 64 64h320a64 64 0 0 0 64-64V96a64 64 0 0 0-64-64zM224 288a32 32 0 1 1 32-32 32 32 0 0 1-32 32z", "M256 256a32 32 0 1 1-32-32 32 32 0 0 1 32 32z"]]
};
exports.faDiceOne = faDiceOne;
var faDiceSix = {
  prefix: 'fad',
  iconName: 'dice-six',
  icon: [448, 512, [], "f526", ["M384 32H64A64 64 0 0 0 0 96v320a64 64 0 0 0 64 64h320a64 64 0 0 0 64-64V96a64 64 0 0 0-64-64zM128 384a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm0-96a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm0-96a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm192 192a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm0-96a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm0-96a32 32 0 1 1 32-32 32 32 0 0 1-32 32z", "M320 192a32 32 0 1 0-32-32 32 32 0 0 0 32 32zm0 32a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm0 96a32 32 0 1 0 32 32 32 32 0 0 0-32-32zM128 128a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm0 96a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm0 96a32 32 0 1 0 32 32 32 32 0 0 0-32-32z"]]
};
exports.faDiceSix = faDiceSix;
var faDiceThree = {
  prefix: 'fad',
  iconName: 'dice-three',
  icon: [448, 512, [], "f527", ["M384 32H64A64 64 0 0 0 0 96v320a64 64 0 0 0 64 64h320a64 64 0 0 0 64-64V96a64 64 0 0 0-64-64zM128 192a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm96 96a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm96 96a32 32 0 1 1 32-32 32 32 0 0 1-32 32z", "M320 320a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm-96-96a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm-96-96a32 32 0 1 0 32 32 32 32 0 0 0-32-32z"]]
};
exports.faDiceThree = faDiceThree;
var faDiceTwo = {
  prefix: 'fad',
  iconName: 'dice-two',
  icon: [448, 512, [], "f528", ["M384 32H64A64 64 0 0 0 0 96v320a64 64 0 0 0 64 64h320a64 64 0 0 0 64-64V96a64 64 0 0 0-64-64zM128 192a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm192 192a32 32 0 1 1 32-32 32 32 0 0 1-32 32z", "M128 128a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm192 192a32 32 0 1 0 32 32 32 32 0 0 0-32-32z"]]
};
exports.faDiceTwo = faDiceTwo;
var faDigging = {
  prefix: 'fad',
  iconName: 'digging',
  icon: [576, 512, [], "f85e", ["M311.07 416a32 32 0 0 0-30.36 21.88L256 512h320L474.07 305.68c-11.29-22.59-43.07-23.81-56.07-2.15L352 416z", "M272 96a48 48 0 1 0-48-48 48 48 0 0 0 48 48zm-62.24 261.36q-38.7-25.78-79.55-48.09l-71.56-39-57.42 201a32 32 0 1 0 61.56 17.59l36.6-128.16L160 401.11V480a32 32 0 0 0 64 0v-96a32 32 0 0 0-14.24-26.64zm176.39.46l-65.3-35.62-24-121.2a129.78 129.78 0 0 0-69.72-91.2c-1-.5-2.11-.66-3.11-1.13a31 31 0 0 0-7.22-2.67c-15.34-6.1-31.56-10-48.07-10H96a32 32 0 0 0-24.07 10.92l-56 64a25.89 25.89 0 0 0-2.3 3.16c-8.83 14.1-3 32.86 11.62 40.85l336.6 184.3zM105.9 205l-23.49-12.85L110.54 160h34.33zm93.74 51.13l34.73-41.23 13.5 67.54z"]]
};
exports.faDigging = faDigging;
var faDigitalTachograph = {
  prefix: 'fad',
  iconName: 'digital-tachograph',
  icon: [640, 512, [], "f566", ["M296 336H72a8 8 0 0 0-8 8v8a8 8 0 0 0 8 8h224a8 8 0 0 0 8-8v-8a8 8 0 0 0-8-8zm272 0H344a8 8 0 0 0-8 8v8a8 8 0 0 0 8 8h224a8 8 0 0 0 8-8v-8a8 8 0 0 0-8-8zM288 160H80a16 16 0 0 0-16 16v48a16 16 0 0 0 16 16h208a16 16 0 0 0 16-16v-48a16 16 0 0 0-16-16z", "M608 96H32a32 32 0 0 0-32 32v256a32 32 0 0 0 32 32h576a32 32 0 0 0 32-32V128a32 32 0 0 0-32-32zM304 352a8 8 0 0 1-8 8H72a8 8 0 0 1-8-8v-8a8 8 0 0 1 8-8h224a8 8 0 0 1 8 8zM72 288v-16a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H80a8 8 0 0 1-8-8zm64 0v-16a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8zm64 0v-16a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8zm64 0v-16a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8zm40-64a16 16 0 0 1-16 16H80a16 16 0 0 1-16-16v-48a16 16 0 0 1 16-16h208a16 16 0 0 1 16 16zm272 128a8 8 0 0 1-8 8H344a8 8 0 0 1-8-8v-8a8 8 0 0 1 8-8h224a8 8 0 0 1 8 8z"]]
};
exports.faDigitalTachograph = faDigitalTachograph;
var faDiploma = {
  prefix: 'fad',
  iconName: 'diploma',
  icon: [640, 512, [], "f5ea", ["M608.64 63.56c-6.78-11.5-22-17.88-37-14.77l-127 42.78c-9.44 3.18-19 5.93-28.65 8.37v144.12L467 332l104.6 35.24c15 3.1 30.25-3.27 37-14.77 41.85-70.96 41.85-217.97.04-288.91zM68.39 48.78c-15-3.1-30.25 3.27-37 14.77-41.81 70.94-41.81 218 0 288.89 6.78 11.5 22 17.88 37 14.77L173 332l51-87.91V99.94c-9.64-2.45-19.21-5.19-28.65-8.37z", "M384 112v140.67l95.16 164A11.13 11.13 0 0 1 468.43 432h-36.64l-25.2 28.52a11.13 11.13 0 0 1-18.39-3.45L320 336l-68.19 121.07a11.13 11.13 0 0 1-18.39 3.45L208.21 432h-36.64a11.13 11.13 0 0 1-10.73-15.32l95.16-164V112z"]]
};
exports.faDiploma = faDiploma;
var faDirections = {
  prefix: 'fad',
  iconName: 'directions',
  icon: [512, 512, [], "f5eb", ["M502.61 233.32L278.68 9.39a32.08 32.08 0 0 0-45.36 0L9.39 233.32a32.08 32.08 0 0 0 0 45.36L233.32 502.6a32.06 32.06 0 0 0 45.35 0l223.94-223.92a32.08 32.08 0 0 0 0-45.36zm-101 12.56l-84.21 77.73a8 8 0 0 1-13.4-5.88V264h-96v64a8 8 0 0 1-8 8h-32a8 8 0 0 1-8-8v-80a32 32 0 0 1 32-32h112v-53.73a8 8 0 0 1 13.43-5.88l84.21 77.73a8 8 0 0 1 .44 11.3c-.14.16-.29.31-.45.46z", "M401.63 245.88l-84.21 77.73a8 8 0 0 1-13.42-5.88V264h-96v64a8 8 0 0 1-8 8h-32a8 8 0 0 1-8-8v-80a32 32 0 0 1 32-32h112v-53.73a8 8 0 0 1 13.43-5.88l84.21 77.73a8 8 0 0 1 .44 11.3c-.14.16-.29.31-.45.46z"]]
};
exports.faDirections = faDirections;
var faDiscDrive = {
  prefix: 'fad',
  iconName: 'disc-drive',
  icon: [512, 512, [], "f8b5", ["M256 96a160 160 0 1 0 160 160A160 160 0 0 0 256 96zm0 192a32 32 0 1 1 32-32 32 32 0 0 1-32 32z", "M496 416h-16V96a64 64 0 0 0-64-64H96a64 64 0 0 0-64 64v320H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h480a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-240 0a160 160 0 1 1 160-160 160 160 0 0 1-160 160z"]]
};
exports.faDiscDrive = faDiscDrive;
var faDisease = {
  prefix: 'fad',
  iconName: 'disease',
  icon: [512, 512, [], "f7fa", ["M472.27 196l-67.06-23c-19.28-6.6-33.54-20.92-38.14-38.31l-16-60.45c-11.58-43.77-76.57-57.13-110-22.62L195 99.29c-13.26 13.71-33.54 20.93-54.2 19.31L68.88 113c-52-4.07-86.93 44.89-59 82.84l38.54 52.42c11.08 15.07 12.82 33.86 4.64 50.24l-28.43 57C4 396.72 47.44 440.34 98.09 429.28l70-15.28c20.11-4.39 41.45 0 57.07 11.73l54.32 40.83c39.32 29.56 101 7.57 104.45-37.22l4.7-61.86c1.35-17.8 12.8-33.87 30.63-43l62-31.74c44.84-22.96 39.55-80.17-8.99-96.74zM160 256.05a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm128 96a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm16-128a16 16 0 1 1 16-16 16 16 0 0 1-16 16z", "M304 224.05a16 16 0 1 0-16-16 16 16 0 0 0 16 16zm-16 64a32 32 0 1 0 32 32 32 32 0 0 0-32-32z"]]
};
exports.faDisease = faDisease;
var faDivide = {
  prefix: 'fad',
  iconName: 'divide',
  icon: [448, 512, [], "f529", ["M224 160a64 64 0 1 0-64-64 64 64 0 0 0 64 64zm0 192a64 64 0 1 0 64 64 64 64 0 0 0-64-64z", "M0 240a32 32 0 0 1 32-32h384a32 32 0 0 1 32 32v32a32 32 0 0 1-32 32H32a32 32 0 0 1-32-32z"]]
};
exports.faDivide = faDivide;
var faDizzy = {
  prefix: 'fad',
  iconName: 'dizzy',
  icon: [496, 512, [], "f567", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8ZM152,214.6l-28.7,28.7c-14.8,14.8-37.8-7.5-22.6-22.6L129.4,192l-28.7-28.7c-15-15,7.7-37.6,22.6-22.6L152,169.4l28.7-28.7c15-15,37.6,7.7,22.6,22.6L174.6,192l28.7,28.7c15.2,15.2-7.9,37.4-22.6,22.6ZM248,416a64,64,0,1,1,64-64A64,64,0,0,1,248,416ZM372.7,243.3,344,214.6l-28.7,28.7c-14.8,14.8-37.8-7.5-22.6-22.6L321.4,192l-28.7-28.7c-15-15,7.7-37.6,22.6-22.6L344,169.4l28.7-28.7c15-15,37.6,7.7,22.6,22.6L366.6,192l28.7,28.7C410.5,235.9,387.4,258.1,372.7,243.3Z", "M395.3,220.7,366.6,192l28.7-28.7c15-14.9-7.6-37.6-22.6-22.6L344,169.4l-28.7-28.7c-14.9-15-37.6,7.6-22.6,22.6L321.4,192l-28.7,28.7c-15.2,15.1,7.8,37.4,22.6,22.6L344,214.6l28.7,28.7c14.7,14.8,37.8-7.4,22.6-22.6ZM174.6,192l28.7-28.7c15-14.9-7.6-37.6-22.6-22.6L152,169.4l-28.7-28.7c-14.9-15-37.6,7.6-22.6,22.6L129.4,192l-28.7,28.7c-15.2,15.1,7.8,37.4,22.6,22.6L152,214.6l28.7,28.7c14.7,14.8,37.8-7.4,22.6-22.6Z"]]
};
exports.faDizzy = faDizzy;
var faDna = {
  prefix: 'fad',
  iconName: 'dna',
  icon: [448, 512, [], "f471", ["M222.18 269.08a480.54 480.54 0 0 0 45.22-25.63Q253 235 237.72 227.37c-39.79-19.83-73.72-44.13-100.82-72.23A284.35 284.35 0 0 1 92.86 96H416V31H67.55C66 24.32 65 18.49 64.27 13.75A16 16 0 0 0 48.32 0L16.05.14A16 16 0 0 0 .12 18.1c2.34 18.82 8.65 50.68 25.65 87.38a342.64 342.64 0 0 0 63 92c30.64 32.23 68.34 60.09 112.14 82.91q10.18-5.76 21.27-11.31zM447.87 494c-2.35-18.84-8.71-50.72-25.82-87.43a342.8 342.8 0 0 0-63.45-92.12 383.16 383.16 0 0 0-30-28.12 515.71 515.71 0 0 1-58.47 35.61q8.53 6.35 16.51 13.06H96v48h236.71A272.08 272.08 0 0 1 362 430.47a238.2 238.2 0 0 1 21.27 67.77A16.11 16.11 0 0 0 399.2 512h32.68a16 16 0 0 0 15.99-18z", "M447.88 18c-2.35 18.84-8.68 50.72-25.72 87.44A342.76 342.76 0 0 1 359 197.51c-32.61 34.23-73.18 63.54-120.59 87.11C160.43 323.39 117.15 373 93.11 416h261.35q4 7.14 7.52 14.47A247.24 247.24 0 0 1 379.71 480H67.87c-1.69 7.1-2.79 13.25-3.49 18.21A16.06 16.06 0 0 1 48.45 512H16.09a16 16 0 0 1-16-18c2.35-18.84 8.68-50.72 25.72-87.44A342.76 342.76 0 0 1 89 314.49c32.61-34.23 73.18-63.54 120.59-87.11 32.21-16 58.49-33.89 79.95-52.38h-131.6q-11.12-9.58-21-19.86A295 295 0 0 1 113 127h221.7c35.39-47.16 45.84-91.55 48.92-113.21A16.06 16.06 0 0 1 399.55 0h32.36a16 16 0 0 1 15.97 18z"]]
};
exports.faDna = faDna;
var faDoNotEnter = {
  prefix: 'fad',
  iconName: 'do-not-enter',
  icon: [496, 512, [], "f5ec", ["M56,288V224a16,16,0,0,1,16-16H424a16,16,0,0,1,16,16v64a16,16,0,0,1-16,16H72A16,16,0,0,1,56,288Z", "M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8ZM424,304H72a16,16,0,0,1-16-16V224a16,16,0,0,1,16-16H424a16,16,0,0,1,16,16v64A16,16,0,0,1,424,304Z"]]
};
exports.faDoNotEnter = faDoNotEnter;
var faDog = {
  prefix: 'fad',
  iconName: 'dog',
  icon: [512, 512, [], "f6d3", ["M416 278l-149-54 21-26 128 46z", "M96 224a32 32 0 0 1-32-32 32 32 0 0 0-64 0c0 41.66 26.83 76.85 64 90.1V496a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16V384h160v112a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16V277.55L266.05 224zM496 96h-64l-7.16-14.31A32 32 0 0 0 396.22 64H342.6l-27.28-27.28C305.23 26.64 288 33.78 288 48v149.87l128 45.71V208h32a64 64 0 0 0 64-64v-32a16 16 0 0 0-16-16zm-112 48a16 16 0 1 1 16-16 16 16 0 0 1-16 16z"]]
};
exports.faDog = faDog;
var faDogLeashed = {
  prefix: 'fad',
  iconName: 'dog-leashed',
  icon: [512, 512, [], "f6d4", ["M416 244v34l-128-46.39V384h-48V224L6.17 41.25a16 16 0 0 1-2.8-22.45l9.82-12.62a16 16 0 0 1 22.45-2.81L288 192z", "M64 192a32 32 0 0 0-64 0c0 41.66 26.83 76.85 64 90.1V496a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16V384h80V224H96a32 32 0 0 1-32-32zm224 192h32v112a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16V277.55l-128-45.71zM496 96h-64l-7.16-14.31A32 32 0 0 0 396.22 64H342.6l-27.28-27.28C305.23 26.64 288 33.78 288 48v144l128 51.58V208h32a64 64 0 0 0 64-64v-32a16 16 0 0 0-16-16zm-112 48a16 16 0 1 1 16-16 16 16 0 0 1-16 16z"]]
};
exports.faDogLeashed = faDogLeashed;
var faDollarSign = {
  prefix: 'fad',
  iconName: 'dollar-sign',
  icon: [288, 512, [], "f155", ["M176,64H112V16A16,16,0,0,1,128,0h32a16,16,0,0,1,16,16ZM112,448v48a16,16,0,0,0,16,16h32a16,16,0,0,0,16-16V448Z", "M281.72,375.1c-15.4,44.1-59.11,71.8-105.72,72.7l-64,.2a141.39,141.39,0,0,1-86.51-30c-7.9-6.1-8.9-17.6-1.8-24.5l34.81-34a15.6,15.6,0,0,1,19.5-2A61,61,0,0,0,112.19,368H178.5a29.49,29.49,0,0,0,8.3-57.8l-102.52-30c-44.4-13-79.61-50.5-83.81-96.6A109.57,109.57,0,0,1,99.55,64.46h0c3.3-.3,6.61-.46,9.92-.46H176a141.44,141.44,0,0,1,86.52,30c7.9,6.1,8.9,17.6,1.8,24.5l-34.81,34a15.6,15.6,0,0,1-19.5,2A61.1,61.1,0,0,0,175.8,144H109.49a29.49,29.49,0,0,0-8.3,57.8l108,31.6C267.12,250.3,303.23,313.5,281.72,375.1Z"]]
};
exports.faDollarSign = faDollarSign;
var faDolly = {
  prefix: 'fad',
  iconName: 'dolly',
  icon: [576, 512, [], "f472", ["M515.3 228.4L454.9 47.2a16 16 0 0 0-20.2-10.1l-183.4 61a16 16 0 0 0-10.1 20.2l53 159.4a145.7 145.7 0 0 1 49.5 24.7l161.5-53.8a16 16 0 0 0 10.1-20.2zM256 320a96 96 0 1 0 96 96 96 96 0 0 0-96-96zm0 128a32 32 0 1 1 32-32 32 32 0 0 1-32 32z", "M575.2 326.4L565 296a16 16 0 0 0-20.2-10.1l-181.38 60.49a127.12 127.12 0 0 1 20.27 60.76L565 346.6a16 16 0 0 0 10.2-20.2zM128 0H16A16 16 0 0 0 0 16v32a16 16 0 0 0 16 16h88.9l81.49 244.57a127.23 127.23 0 0 1 60.81-20.26L158.4 21.9A32 32 0 0 0 128 0zm245.6 57.5l-60.7 20.1L346 177l60.7-20.1z"]]
};
exports.faDolly = faDolly;
var faDollyEmpty = {
  prefix: 'fad',
  iconName: 'dolly-empty',
  icon: [576, 512, [], "f473", ["M256 320a96 96 0 1 0 96 96 96 96 0 0 0-96-96zm0 128a32 32 0 1 1 32-32 32 32 0 0 1-32 32z", "M128 0H16A16 16 0 0 0 0 16v32a16 16 0 0 0 16 16h88.9l81.49 244.57a127.23 127.23 0 0 1 60.81-20.26L158.4 21.9A32 32 0 0 0 128 0zm447.2 326.4L565 296a16 16 0 0 0-20.2-10.1l-181.38 60.49a127.12 127.12 0 0 1 20.27 60.76L565 346.6a16 16 0 0 0 10.2-20.2z"]]
};
exports.faDollyEmpty = faDollyEmpty;
var faDollyFlatbed = {
  prefix: 'fad',
  iconName: 'dolly-flatbed',
  icon: [640, 512, [], "f474", ["M450.74 448a48 48 0 1 0 90.52 0zm-288 0a48 48 0 1 0 90.52 0zM592 32H448v128l-48-32-48 32V32H208a16 16 0 0 0-16 16v256a16 16 0 0 0 16 16h384a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z", "M448 160V32h-96v128l48-32zm176 224H128V16a16 16 0 0 0-16-16H16A16 16 0 0 0 0 16v32a16 16 0 0 0 16 16h48v368a16 16 0 0 0 16 16h544a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z"]]
};
exports.faDollyFlatbed = faDollyFlatbed;
var faDollyFlatbedAlt = {
  prefix: 'fad',
  iconName: 'dolly-flatbed-alt',
  icon: [640, 512, [], "f475", ["M432 160h96a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16h-96a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16zM368 32H208a16 16 0 0 0-16 16v256a16 16 0 0 0 16 16h160a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zm224 160H432a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16h160a16 16 0 0 0 16-16v-96a16 16 0 0 0-16-16zM450.74 448a48 48 0 1 0 90.52 0zm-288 0a48 48 0 1 0 90.52 0z", "M640 400v32a16 16 0 0 1-16 16H80a16 16 0 0 1-16-16V64H16A16 16 0 0 1 0 48V16A16 16 0 0 1 16 0h96a16 16 0 0 1 16 16v368h496a16 16 0 0 1 16 16z"]]
};
exports.faDollyFlatbedAlt = faDollyFlatbedAlt;
var faDollyFlatbedEmpty = {
  prefix: 'fad',
  iconName: 'dolly-flatbed-empty',
  icon: [640, 512, [], "f476", ["M162.74 448a48 48 0 1 0 90.52 0zm378.52 0h-90.52a48 48 0 1 0 90.52 0z", "M640 400v32a16 16 0 0 1-16 16H80a16 16 0 0 1-16-16V64H16A16 16 0 0 1 0 48V16A16 16 0 0 1 16 0h96a16 16 0 0 1 16 16v368h496a16 16 0 0 1 16 16z"]]
};
exports.faDollyFlatbedEmpty = faDollyFlatbedEmpty;
var faDonate = {
  prefix: 'fad',
  iconName: 'donate',
  icon: [512, 512, [], "f4b9", ["M256 416c114.9 0 208-93.1 208-208S370.9 0 256 0 48 93.1 48 208s93.1 208 208 208zM233.8 97.4V80.6A16.56 16.56 0 0 1 250.4 64h11.1a16.56 16.56 0 0 1 16.6 16.6v17a78.84 78.84 0 0 1 43 15.4 11.21 11.21 0 0 1 1.2 17.1L306 145.6c-3.8 3.7-9.5 3.8-14 1a32.91 32.91 0 0 0-17.8-5.1h-38.9c-9 0-16.3 8.2-16.3 18.3 0 8.2 5 15.5 12.1 17.6l62.3 18.7c25.7 7.7 43.7 32.4 43.7 60.1 0 34-26.4 61.5-59.1 62.4v16.8a16.56 16.56 0 0 1-16.6 16.6h-11.1a16.56 16.56 0 0 1-16.6-16.6v-17a78.84 78.84 0 0 1-43-15.4 11.21 11.21 0 0 1-1.2-17.1l16.3-15.5c3.8-3.7 9.5-3.8 14-1a32.91 32.91 0 0 0 17.8 5.1h38.9c9 0 16.3-8.2 16.3-18.3 0-8.2-5-15.5-12.1-17.6l-62.3-18.7c-25.7-7.7-43.7-32.4-43.7-60.1.1-34 26.4-61.5 59.1-62.4z", "M218.4 219.9l62.3 18.7c7.1 2.1 12.1 9.4 12.1 17.6 0 10.1-7.3 18.3-16.3 18.3h-38.9a32.91 32.91 0 0 1-17.8-5.1c-4.5-2.8-10.2-2.7-14 1l-16.3 15.5a11.21 11.21 0 0 0 1.2 17.1 78.84 78.84 0 0 0 43 15.4v17a16.56 16.56 0 0 0 16.6 16.6h11.1a16.56 16.56 0 0 0 16.6-16.6v-16.8c32.7-.9 59.1-28.4 59.1-62.4 0-27.7-18-52.4-43.7-60.1l-62.3-18.7c-7.1-2.1-12.1-9.4-12.1-17.6 0-10.1 7.3-18.3 16.3-18.3h38.9a32.91 32.91 0 0 1 17.8 5.1c4.5 2.8 10.2 2.7 14-1l16.3-15.5a11.21 11.21 0 0 0-1.2-17.1 78.84 78.84 0 0 0-43-15.4v-17A16.56 16.56 0 0 0 261.5 64h-11.1a16.56 16.56 0 0 0-16.6 16.6v16.8c-32.7.9-59 28.4-59.1 62.4 0 27.7 18 52.4 43.7 60.1zM480 352h-32.5a242.37 242.37 0 0 1-73 64h63.8c5.3 0 9.6 3.6 9.6 8v16c0 4.4-4.3 8-9.6 8H73.6c-5.3 0-9.6-3.6-9.6-8v-16c0-4.4 4.3-8 9.6-8h63.8a243.57 243.57 0 0 1-73-64H32a32 32 0 0 0-32 32v96a32 32 0 0 0 32 32h448a32 32 0 0 0 32-32v-96a32 32 0 0 0-32-32z"]]
};
exports.faDonate = faDonate;
var faDoorClosed = {
  prefix: 'fad',
  iconName: 'door-closed',
  icon: [640, 512, [], "f52a", ["M640 464v32a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h608a16 16 0 0 1 16 16z", "M464 0H176c-26.47 0-48 22.78-48 50.8V448h384V50.8C512 22.78 490.47 0 464 0zm-48 288a32 32 0 1 1 32-32 32 32 0 0 1-32 32z"]]
};
exports.faDoorClosed = faDoorClosed;
var faDoorOpen = {
  prefix: 'fad',
  iconName: 'door-open',
  icon: [640, 512, [], "f52b", ["M0 464v32a16 16 0 0 0 16 16h336v-64H16a16 16 0 0 0-16 16zm624-16h-80V113.45C544 86.19 522.47 64 496 64H384v64h96v384h144a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z", "M312.24 1l-192 49.74C106 54.44 96 67.7 96 82.92V448h256V33.18C352 11.6 332.44-4.23 312.24 1zM264 288c-13.25 0-24-14.33-24-32s10.75-32 24-32 24 14.33 24 32-10.75 32-24 32z"]]
};
exports.faDoorOpen = faDoorOpen;
var faDotCircle = {
  prefix: 'fad',
  iconName: 'dot-circle',
  icon: [512, 512, [], "f192", ["M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm124.45 372.45A176 176 0 1 1 432 256a174.85 174.85 0 0 1-51.55 124.45z", "M256 336a80 80 0 1 1 80-80 80.09 80.09 0 0 1-80 80z"]]
};
exports.faDotCircle = faDotCircle;
var faDove = {
  prefix: 'fad',
  iconName: 'dove',
  icon: [512, 512, [], "f4ba", ["M400 64a80.07 80.07 0 0 0-80 80.1v59.4A271.57 271.57 0 0 1 87 41.75c-5.5-12.5-23.2-13.2-29-.9a269.8 269.8 0 0 0-26 115.7c0 70.8 34.1 136.9 85.1 185.9a406.94 406.94 0 0 0 38.9 32.8l-143.9 36a16.1 16.1 0 0 0-9.5 24.4C20 462.55 63 508.15 155.88 512a32.09 32.09 0 0 0 22.1-7.9l65.2-56.1H320a159.86 159.86 0 0 0 160-159.74V128l32-64zm.05 96.1H400a11.31 11.31 0 1 1 .05 0z", "M320 176.69v26.81a271.52 271.52 0 0 1-174.12-76.79c1.12-5.68 2.44-11.34 4-17A269.78 269.78 0 0 1 206.16 5.35C215.07-4.94 231.92.51 233.85 14A271.5 271.5 0 0 0 320 176.69z"]]
};
exports.faDove = faDove;
var faDownload = {
  prefix: 'fad',
  iconName: 'download',
  icon: [512, 512, [], "f019", ["M320 24v168h87.7c17.8 0 26.7 21.5 14.1 34.1L269.7 378.3a19.37 19.37 0 0 1-27.3 0L90.1 226.1c-12.6-12.6-3.7-34.1 14.1-34.1H192V24a23.94 23.94 0 0 1 24-24h80a23.94 23.94 0 0 1 24 24z", "M488 352H341.3l-49 49a51.24 51.24 0 0 1-72.6 0l-49-49H24a23.94 23.94 0 0 0-24 24v112a23.94 23.94 0 0 0 24 24h464a23.94 23.94 0 0 0 24-24V376a23.94 23.94 0 0 0-24-24zm-120 96a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm64 0a16 16 0 1 1 16-16 16 16 0 0 1-16 16z"]]
};
exports.faDownload = faDownload;
var faDraftingCompass = {
  prefix: 'fad',
  iconName: 'drafting-compass',
  icon: [512, 512, [], "f568", ["M12.5 249.86c-4.86-7.67-1.89-18 6.05-22.39l28.07-15.57c7.48-4.15 16.61-1.46 21.26 5.72a223.89 223.89 0 0 0 35.75 42.55L71 316.68a288.08 288.08 0 0 1-58.5-66.82zm487 0c4.86-7.67 1.89-18-6.05-22.39l-28.07-15.57c-7.48-4.15-16.61-1.46-21.26 5.72a223.95 223.95 0 0 1-257.77 91.26l-32.53 56.35A287.42 287.42 0 0 0 256 384a288.42 288.42 0 0 0 243.5-134.14z", "M457.21 344.75a318.63 318.63 0 0 1-82.85 48.51l54.5 94.4 53.95 23A16 16 0 0 0 505 497.9l7-58.25zM340.9 143.3a96.5 96.5 0 1 0-169.29-.88L0 439.65l7 58.25a16 16 0 0 0 22.17 12.8l54-23 170.11-294.76c1.07 0 2.14.06 3.22.06h2.24l50.49 87.47a191.71 191.71 0 0 0 82.65-48.85zM256.5 128A31.5 31.5 0 1 1 288 96.5a31.5 31.5 0 0 1-31.5 31.5z"]]
};
exports.faDraftingCompass = faDraftingCompass;
var faDragon = {
  prefix: 'fad',
  iconName: 'dragon',
  icon: [640, 512, [], "f6d5", ["M320 194.35v42.27A247.35 247.35 0 0 0 334.73 320H112c-14.25 0-21.39-17.23-11.31-27.31L192 224 18.32 255.82C2.36 258.1-6.57 238 5.81 227.68l117.4-116.34a64 64 0 0 1 77.06-4.59z", "M575.19 289.88l-100.66-50.31A48 48 0 0 1 448 196.65V160h64l28.09 22.63a32 32 0 0 0 22.63 9.37h31a32 32 0 0 0 28.62-17.69l14.31-28.62a32 32 0 0 0-3-33.51l-74.58-99.42A32 32 0 0 0 533.47 0H296a8 8 0 0 0-5.66 13.61L352 64l-59.58 24.8a8 8 0 0 0 0 14.31L352 128v108.58A215.61 215.61 0 0 0 448 416c-195.59 6.81-344.56 41-434.1 60.91A17.78 17.78 0 0 0 17.76 512h499.08c63.29 0 119.61-47.56 123-110.76a116.7 116.7 0 0 0-64.65-111.36zm-86-223.63l45.65 11.41c-2.75 10.91-12.47 18.89-24.13 18.26-12.97-.71-25.86-12.53-21.53-29.67z"]]
};
exports.faDragon = faDragon;
var faDrawCircle = {
  prefix: 'fad',
  iconName: 'draw-circle',
  icon: [512, 512, [], "f5ed", ["M39.9 196.71A224.68 224.68 0 0 1 196.71 39.9a64 64 0 0 0 9.34 64.1A160.73 160.73 0 0 0 104 206.06a64 64 0 0 0-64.1-9.35zM320 64a63.76 63.76 0 0 1-14 40 160.73 160.73 0 0 1 102 102.06 64 64 0 0 1 64.1-9.35A224.68 224.68 0 0 0 315.29 39.9 63.73 63.73 0 0 1 320 64zm128 256a63.76 63.76 0 0 1-40-14 160.73 160.73 0 0 1-102 102 64 64 0 0 1 9.34 64.1A224.68 224.68 0 0 0 472.1 315.29 63.73 63.73 0 0 1 448 320zM192 448a63.76 63.76 0 0 1 14.05-40A160.73 160.73 0 0 1 104 306a64 64 0 0 1-64.1 9.34A224.68 224.68 0 0 0 196.71 472.1 63.73 63.73 0 0 1 192 448z", "M256 384a64 64 0 1 0 64 64 64 64 0 0 0-64-64zm0 80a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm0-464a64 64 0 1 0 64 64 64 64 0 0 0-64-64zm0 80a16 16 0 1 1 16-16 16 16 0 0 1-16 16zM64 192a64 64 0 1 0 64 64 64 64 0 0 0-64-64zm0 80a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm384-80a64 64 0 1 0 64 64 64 64 0 0 0-64-64zm0 80a16 16 0 1 1 16-16 16 16 0 0 1-16 16z"]]
};
exports.faDrawCircle = faDrawCircle;
var faDrawPolygon = {
  prefix: 'fad',
  iconName: 'draw-polygon',
  icon: [448, 512, [], "f5ee", ["M32 360.58V151.42a64 64 0 0 0 64 0v209.16a64 64 0 0 0-64 0zM119.42 64a64 64 0 0 1 0 64h208.06l-38.41 64A64 64 0 0 1 344 224.94l39-65a64 64 0 0 1-54.35-96zm209.16 384a64 64 0 0 1 54.35-96l-39-65a64 64 0 0 1-54.86 33l38.41 64H119.42a64 64 0 0 1 0 64z", "M64 32a64 64 0 1 0 64 64 64 64 0 0 0-64-64zm0 80a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm320 48a64 64 0 1 0-64-64 64 64 0 0 0 64 64zm0-80a16 16 0 1 1-16 16 16 16 0 0 1 16-16zM64 352a64 64 0 1 0 64 64 64 64 0 0 0-64-64zm0 80a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm320-80a64 64 0 1 0 64 64 64 64 0 0 0-64-64zm0 80a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm-32-176a64 64 0 1 0-64 64 64 64 0 0 0 64-64zm-64 16a16 16 0 1 1 16-16 16 16 0 0 1-16 16z"]]
};
exports.faDrawPolygon = faDrawPolygon;
var faDrawSquare = {
  prefix: 'fad',
  iconName: 'draw-square',
  icon: [448, 512, [], "f5ef", ["M32 360.58V151.42a64 64 0 0 0 64 0v209.16a64 64 0 0 0-64 0zM119.42 64a64 64 0 0 1 0 64h209.16a64 64 0 0 1 0-64zM384 160a63.68 63.68 0 0 1-32-8.58v209.16a64 64 0 0 1 64 0V151.42a63.68 63.68 0 0 1-32 8.58zm-55.42 288a64 64 0 0 1 0-64H119.42a64 64 0 0 1 0 64z", "M64 32a64 64 0 1 0 64 64 64 64 0 0 0-64-64zm0 80a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm320 48a64 64 0 1 0-64-64 64 64 0 0 0 64 64zm0-80a16 16 0 1 1-16 16 16 16 0 0 1 16-16zm0 272a64 64 0 1 0 64 64 64 64 0 0 0-64-64zm0 80a16 16 0 1 1 16-16 16 16 0 0 1-16 16zM64 352a64 64 0 1 0 64 64 64 64 0 0 0-64-64zm0 80a16 16 0 1 1 16-16 16 16 0 0 1-16 16z"]]
};
exports.faDrawSquare = faDrawSquare;
var faDreidel = {
  prefix: 'fad',
  iconName: 'dreidel',
  icon: [448, 512, [], "f792", ["M443.3 82l-109 109 72 71.9a33.38 33.38 0 0 1 0 47.3l-68.7 68.7-236.4-236.45 68.7-68.7a33.38 33.38 0 0 1 47.3 0l71.9 71.9 109-109a16.06 16.06 0 0 1 22.6 0l22.6 22.6a16 16 0 0 1 0 22.75z", "M78.5 165.05l236.4 236.4-58.9 58.9A66.83 66.83 0 0 1 208.7 480H66.9A66.83 66.83 0 0 1 0 413.05v-141.8A66.49 66.49 0 0 1 19.6 224z"]]
};
exports.faDreidel = faDreidel;
var faDrone = {
  prefix: 'fad',
  iconName: 'drone',
  icon: [512, 512, [], "f85f", ["M300.34 160l38.86-28.06a64.05 64.05 0 1 1 40.86 40.86L352 211.66v1.56A111.93 111.93 0 1 0 298.78 160zm-88.68 192L172 380.64a64.06 64.06 0 1 1-40.25-41.17L160 300.34v-1.08A111.93 111.93 0 1 0 212.22 352zM111 0a112 112 0 1 0 49 212.74v-1.08l-28.25-39.13A64 64 0 1 1 172 131.36L211.66 160h.56A112 112 0 0 0 111 0zm289 288a111.58 111.58 0 0 0-48 10.78v1.56l28.06 38.86a64.05 64.05 0 1 1-40.86 40.86L300.34 352h-1.56A112 112 0 1 0 400 288z", "M432 399.19a31.91 31.91 0 1 1-63.8 1.81l-67.86-49h-88.68l-67.86 49a31.91 31.91 0 1 1-32.8-32.8l49-67.86v-88.68l-49-67.86a31.91 31.91 0 1 1 32.8-32.8l67.86 49h88.68l67.86-49a31.91 31.91 0 1 1 32.8 32.8l-49 67.86v88.68l49 67.86a31.9 31.9 0 0 1 31 30.99z"]]
};
exports.faDrone = faDrone;
var faDroneAlt = {
  prefix: 'fad',
  iconName: 'drone-alt',
  icon: [640, 512, [], "f860", ["M264 112H24a24 24 0 0 0 0 48h240a24 24 0 0 0 0-48zm352 0H376a24 24 0 0 0 0 48h240a24 24 0 0 0 0-48z", "M472 192v45.65l-96.83-29.05a191.93 191.93 0 0 0-110.34 0L168 237.65V192h-48v64.05a32 32 0 0 0 32 32h45.41a179 179 0 0 0-53.33 110.24 16.14 16.14 0 0 0 16 17.71h16.26c8.33 0 14.75-6.58 15.68-14.87a130 130 0 0 1 53.66-91.38l32.93 32.93a32 32 0 0 0 22.62 9.37h37.49a32 32 0 0 0 22.63-9.37l32.93-32.93A130 130 0 0 1 448 401.13c.93 8.29 7.35 14.85 15.68 14.87h16.22a16.13 16.13 0 0 0 16-17.71 178.94 178.94 0 0 0-53.32-110.24H488a32 32 0 0 0 32-32V192zM144 96a23.68 23.68 0 0 0-22.23 16h44.5A23.72 23.72 0 0 0 144 96zm352 0a23.68 23.68 0 0 0-22.23 16h44.5A23.72 23.72 0 0 0 496 96z"]]
};
exports.faDroneAlt = faDroneAlt;
var faDrum = {
  prefix: 'fad',
  iconName: 'drum',
  icon: [512, 512, [], "f569", ["M256 352a24 24 0 0 0-24 24v103.47c7.91.32 15.9.53 24 .53s16.09-.21 24-.53V376a24 24 0 0 0-24-24zM96 320a24 24 0 0 0-24 24v101.76a327.89 327.89 0 0 0 48 17V344a24 24 0 0 0-24-24zm320 0a24 24 0 0 0-24 24v118.77a327.89 327.89 0 0 0 48-17V344a24 24 0 0 0-24-24zm93.31-267.56l-8.87-13.31a16 16 0 0 0-22.19-4.44L232.88 192.94a16 16 0 0 0-4.44 22.19l8.87 13.31a16 16 0 0 0 22.19 4.44L504.88 74.63a16 16 0 0 0 4.43-22.19z", "M512 208v160c0 30.23-27.5 57.61-72 77.76V344a24 24 0 0 0-48 0v118.77c-33.05 9.1-71.07 15-112 16.7V376a24 24 0 0 0-48 0v103.47c-40.93-1.67-78.95-7.6-112-16.7V344a24 24 0 0 0-48 0v101.76C27.5 425.61 0 398.23 0 368V208a37.5 37.5 0 0 1 1.33-10.38C15.09 101.32 214.73 96 256 96c17.58 0 63.9 1 112.32 9.58l-62.55 40.34c-16-1.21-32.58-1.92-49.77-1.92-114.87 0-208 28.65-208 64s93.13 64 208 64 208-28.65 208-64c0-21.27-33.87-40.07-85.77-51.7l53.23-34.3c40.86 15 73.91 38.5 79.21 75.65A37.5 37.5 0 0 1 512 208z"]]
};
exports.faDrum = faDrum;
var faDrumSteelpan = {
  prefix: 'fad',
  iconName: 'drum-steelpan',
  icon: [576, 512, [], "f56a", ["M172 90l25.6 44.34a73.16 73.16 0 0 1-20.94 96.53C100.23 217.46 48 190.78 48 160c0-30.16 50.11-56.39 124-70zm116 70a64.07 64.07 0 0 0 64-64V83c-20.4-1.88-41.8-3-64-3s-43.6 1.08-64 3v13a64.07 64.07 0 0 0 64 64zm110.93 70.9C475.6 217.54 528 190.83 528 160c0-30.21-50.28-56.5-124.44-70.1l-25.65 44.42a73.13 73.13 0 0 0 21 96.58zm-50 6.4c-8.1-26.13-32.19-45.3-60.93-45.3s-52.83 19.17-60.89 45.3c19.48 1.7 39.81 2.7 60.89 2.7s41.41-1 60.89-2.7z", "M288 32C128.94 32 0 89.31 0 160v192c0 70.69 128.94 128 288 128s288-57.31 288-128V160c0-70.69-128.94-128-288-128zm-83 158.36a73 73 0 0 1-28.31 40.48C100.23 217.46 48 190.78 48 160c0-30.16 50.11-56.39 124-70l25.6 44.34a73.39 73.39 0 0 1 7.4 56.02zM288 240c-21.08 0-41.41-1-60.89-2.7 8.06-26.13 32.15-45.3 60.89-45.3s52.83 19.17 60.89 45.3C329.41 239 309.08 240 288 240zm64-144a64 64 0 0 1-128 0V83c20.4-1.88 41.8-3 64-3s43.6 1.08 64 3zm46.93 134.9a73.13 73.13 0 0 1-21-96.58l25.63-44.42C477.72 103.5 528 129.79 528 160c0 30.83-52.4 57.54-129.07 70.9z"]]
};
exports.faDrumSteelpan = faDrumSteelpan;
var faDrumstick = {
  prefix: 'fad',
  iconName: 'drumstick',
  icon: [512, 512, [], "f6d6", ["M193.7 392.5c-9.7 9.8-11.1 24-6 36.8 12.4 30.9-2.6 66-33.6 78.4-22.4 9-48.1 3.7-65.2-13.4-15.3-15.3-19.6-36.5-15.1-56.1-19.6 4.5-40.8.2-56.1-15.1-23.6-23.5-23.7-61.7-.2-85.3 17.1-17.2 42.7-22.4 65.2-13.4 12.8 5.1 27 3.7 36.8-6l40.5-40.5V288c0 35.3 28.7 64 64 64h10.2l-40.5 40.5z", "M160.1 192c0-64 27.6-107 63.1-142.4 66.1-66.1 173.2-66 239.3 0s66 173.2 0 239.3C427 324.3 384 352 320.1 352H224c-35.3 0-64-28.7-64-64l.1-96z"]]
};
exports.faDrumstick = faDrumstick;
var faDrumstickBite = {
  prefix: 'fad',
  iconName: 'drumstick-bite',
  icon: [512, 512, [], "f6d7", ["M193.69 392.5c-9.72 9.75-11.09 24-6 36.75a60.32 60.32 0 0 1-98.73 65c-15.27-15.27-19.58-36.5-15.09-56.1-19.6 4.49-40.83.18-56.1-15.09a60.31 60.31 0 0 1 65-98.72c12.76 5.07 27.05 3.69 36.76-6L160 277.87V288a64 64 0 0 0 64 64h10.2z", "M160.06 192c0-64 27.7-107 63.18-142.43a169.5 169.5 0 0 1 239.55 0c34.32 34.28 50.44 79.6 49.14 124.56-42-22.66-94.38-17.56-128.77 16.8-40.88 40.84-40.69 107.17-1.05 151.07a187.7 187.7 0 0 1-61.9 10H224a64 64 0 0 1-64-64z"]]
};
exports.faDrumstickBite = faDrumstickBite;
var faDryer = {
  prefix: 'fad',
  iconName: 'dryer',
  icon: [448, 512, [], "f861", ["M216 272c0-22.64-11.95-34.59-20.69-43.33-5.83-5.82-9.24-9.45-10.61-14.62A8 8 0 0 0 177 208h-16.29a8.17 8.17 0 0 0-8 9.53c2.77 16.64 12.51 26.38 19.93 33.8C180.53 259.17 184 263 184 272s-3.47 12.86-11.31 20.7C164 301.47 152 313.42 152 336.06s11.95 34.57 20.69 43.28c5.82 5.82 9.23 9.44 10.6 14.59A8 8 0 0 0 191 400h16.32a8.15 8.15 0 0 0 7.94-9.53c-2.76-16.61-12.5-26.35-19.92-33.75C187.47 348.88 184 345 184 336.06s3.47-12.86 11.31-20.7C204.05 306.63 216 294.67 216 272zm48 64c0-9 3.47-12.86 11.31-20.7 8.74-8.67 20.69-20.63 20.69-43.3s-11.95-34.59-20.69-43.33c-5.83-5.82-9.24-9.45-10.61-14.62A8 8 0 0 0 257 208h-16.29a8.17 8.17 0 0 0-8 9.53c2.77 16.64 12.51 26.38 19.93 33.8C260.53 259.17 264 263 264 272s-3.47 12.86-11.31 20.7C244 301.47 232 313.42 232 336.06s11.95 34.57 20.69 43.28c5.82 5.82 9.23 9.44 10.6 14.59A8 8 0 0 0 271 400h16.32a8.15 8.15 0 0 0 7.94-9.53c-2.76-16.61-12.5-26.35-19.92-33.75C267.47 348.88 264 345 264 336.06z", "M384 0H64A64 64 0 0 0 0 64v416a32 32 0 0 0 32 32h384a32 32 0 0 0 32-32V64a64 64 0 0 0-64-64zM184 64a24 24 0 1 1-24 24 24 24 0 0 1 24-24zM64 88a24 24 0 1 1 24 24 24 24 0 0 1-24-24zm160 360a144 144 0 1 1 144-144 144 144 0 0 1-144 144z"]]
};
exports.faDryer = faDryer;
var faDryerAlt = {
  prefix: 'fad',
  iconName: 'dryer-alt',
  icon: [448, 512, [], "f862", ["M224 192a112 112 0 1 0 112 112 112 112 0 0 0-112-112zm0 192a80 80 0 0 1-78.39-64H184a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8h-38.39A80 80 0 1 1 224 384z", "M384 0H64A64 64 0 0 0 0 64v416a32 32 0 0 0 32 32h384a32 32 0 0 0 32-32V64a64 64 0 0 0-64-64zM184 64a24 24 0 1 1-24 24 24 24 0 0 1 24-24zM64 88a24 24 0 1 1 24 24 24 24 0 0 1-24-24zm160 360a144 144 0 1 1 144-144 144 144 0 0 1-144 144z"]]
};
exports.faDryerAlt = faDryerAlt;
var faDuck = {
  prefix: 'fad',
  iconName: 'duck',
  icon: [512, 512, [], "f6d8", ["M512 128a96 96 0 0 1-96 96h-27c37.28-13.18 59-54.2 59-96z", "M401.31 277.43A41.38 41.38 0 0 1 384 243.8a39.9 39.9 0 0 1 5-19.8c37.28-13.18 59-54.2 59-96a96 96 0 0 0-192 0 94.05 94.05 0 0 0 22.1 60.59 41.44 41.44 0 0 1 9.9 26.53A40.88 40.88 0 0 1 247.13 256h-21.69c-31.51 0-80.18-13.2-101.68-36.24C113.74 209 96 216.17 96 230.63A153.38 153.38 0 0 0 249.38 384h-32c-76 0-138.67-55.44-150.82-128h-50.4C7 256-.63 263.66 0 272.75 8.62 388.64 105.36 480 223.43 480h107.2c55.51 0 110.81-44.52 116.72-99.71a111.23 111.23 0 0 0-46.04-102.86zM352 144a16 16 0 1 1 16-16 16 16 0 0 1-16 16z"]]
};
exports.faDuck = faDuck;
var faDumbbell = {
  prefix: 'fad',
  iconName: 'dumbbell',
  icon: [640, 512, [], "f44b", ["M32 288H16a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h16zm352-64H256v64h128zm240 0h-16v64h16a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z", "M232 32h-48a23.94 23.94 0 0 0-24 24v400a23.94 23.94 0 0 0 24 24h48a23.94 23.94 0 0 0 24-24V56a23.94 23.94 0 0 0-24-24zm224 0h-48a23.94 23.94 0 0 0-24 24v400a23.94 23.94 0 0 0 24 24h48a23.94 23.94 0 0 0 24-24V56a23.94 23.94 0 0 0-24-24zm128 64h-48a23.94 23.94 0 0 0-24 24v272a23.94 23.94 0 0 0 24 24h48a23.94 23.94 0 0 0 24-24V120a23.94 23.94 0 0 0-24-24zm-480 0H56a23.94 23.94 0 0 0-24 24v272a23.94 23.94 0 0 0 24 24h48a23.94 23.94 0 0 0 24-24V120a23.94 23.94 0 0 0-24-24z"]]
};
exports.faDumbbell = faDumbbell;
var faDumpster = {
  prefix: 'fad',
  iconName: 'dumpster',
  icon: [576, 512, [], "f793", ["M576 240v32a16 16 0 0 1-16 16h-28l-20 160v16a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-16H128v16a16 16 0 0 1-16 16H80a16 16 0 0 1-16-16v-16L44 288H16a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h20l-4-32h512l-4 32h20a16 16 0 0 1 16 16z", "M24.5 44.1l-24 96A16 16 0 0 0 16 160h97.3l25.6-128H40a16 16 0 0 0-15.5 12.1zM145.9 160H272V32H171.5zM304 32v128h126.1L404.5 32zm271.5 108.1l-24-96A16 16 0 0 0 536 32h-98.9l25.6 128H560a16 16 0 0 0 15.5-19.9z"]]
};
exports.faDumpster = faDumpster;
var faDumpsterFire = {
  prefix: 'fad',
  iconName: 'dumpster-fire',
  icon: [640, 512, [], "f794", ["M288 321.6c0 48.5 18.6 92.7 48.8 126.4H128v16a16 16 0 0 1-16 16H80a16 16 0 0 1-16-16v-16L44 288H16a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h20l-4-32h308.6c-32.7 46.7-52.6 93.7-52.6 129.6z", "M461.72 104.14a606.78 606.78 0 0 1 51.15 51.46c5.7-5.59 11.41-11.09 17.32-16.28l21.32-19 21.32 19c1.1.9 2.1 2.09 3.1 3.09a17.5 17.5 0 0 0 0-2.29l-24-95.93a15.85 15.85 0 0 0-15.44-12.09h-99l12.31 61.45zM146 160h126.24V32.1h-100.6zM24.5 44.19l-24 95.93A16 16 0 0 0 16 160h97.4L139 32.1H40a16.05 16.05 0 0 0-15.5 12.09zm526.7 119A419.31 419.31 0 0 0 511 204.4a538.72 538.72 0 0 0-71-76.4c-70.2 62.7-120 144.3-120 193.6 0 87.5 71.6 158.4 160 158.4s160-70.9 160-158.4c.1-36.6-37-112.2-88.8-158.4zM532.6 392.6a89 89 0 0 1-52.5 17c-49 0-88.9-33.5-88.9-88 0-27.1 16.5-51 49.4-91.9 4.7 5.6 67.1 88.1 67.1 88.1l39.8-47c2.8 4.8 5.4 9.5 7.7 14 18.6 36.7 10.8 83.6-22.6 107.8zM419.08 104.14l.2-.2L404.87 32h-100.6v127.9h60.86a543.28 543.28 0 0 1 53.95-55.76z"]]
};
exports.faDumpsterFire = faDumpsterFire;
var faDungeon = {
  prefix: 'fad',
  iconName: 'dungeon',
  icon: [512, 512, [], "f6d9", ["M304 189.36V472a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8V219.13a96.32 96.32 0 0 0-32-29.77zm-64-11.74V472a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8V177.62a94.83 94.83 0 0 0-16-1.62 94.83 94.83 0 0 0-16 1.62zm-64 41.51V472a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8V189.36a96.32 96.32 0 0 0-32 29.77z", "M112 288H16a16 16 0 0 0-16 16v64a16 16 0 0 0 16 16h96a16 16 0 0 0 16-16v-64a16 16 0 0 0-16-16zm16.73-92.68l-82.81-51.76c-8-5-19-2.17-22.93 6.45A254.32 254.32 0 0 0 .54 239.28C0 248.37 7.59 256 16.69 256h97.13c8 0 14.08-6.25 15-14.16a126.36 126.36 0 0 1 6.24-26.94c2.57-7.34.26-15.46-6.33-19.58zM453 93.11a257.4 257.4 0 0 0-71.61-59.89c-8.28-4.68-18.88-.52-22.42 8.31l-36.32 90.8c-2.85 7.12 0 14.88 6.3 19.28a127.56 127.56 0 0 1 16.79 14c5.44 5.41 13.6 6.86 20.11 2.79l82.93-51.83c8.1-4.98 10.32-16.14 4.22-23.46zM496 416h-96a16 16 0 0 0-16 16v64a16 16 0 0 0 16 16h96a16 16 0 0 0 16-16v-64a16 16 0 0 0-16-16zM153 41.53c-3.53-8.83-14.13-13-22.42-8.31A257.4 257.4 0 0 0 59 93.11c-6.06 7.32-3.85 18.48 4.22 23.52l82.93 51.83c6.51 4.07 14.66 2.62 20.11-2.79a127.56 127.56 0 0 1 16.79-14c6.28-4.41 9.15-12.17 6.3-19.29zM112 416H16a16 16 0 0 0-16 16v64a16 16 0 0 0 16 16h96a16 16 0 0 0 16-16v-64a16 16 0 0 0-16-16zm384-128h-96a16 16 0 0 0-16 16v64a16 16 0 0 0 16 16h96a16 16 0 0 0 16-16v-64a16 16 0 0 0-16-16zm-97.82-32h97.13c9.1 0 16.74-7.63 16.15-16.72A254.05 254.05 0 0 0 489 150c-3.94-8.62-14.89-11.47-22.93-6.45l-82.81 51.76c-6.59 4.12-8.9 12.24-6.34 19.58a125.9 125.9 0 0 1 6.24 26.94c.94 7.92 7.06 14.17 15.02 14.17zM319 8a252.3 252.3 0 0 0-126 0c-9.17 2.35-13.91 12.6-10.39 21.39l37.47 104a16 16 0 0 0 15 10.58h41.8A16 16 0 0 0 292 133.42l37.47-104C332.94 20.6 328.2 10.36 319 8z"]]
};
exports.faDungeon = faDungeon;
var faEar = {
  prefix: 'fad',
  iconName: 'ear',
  icon: [384, 512, [], "f5f0", ["M192 0C86 0 0 86 0 192v176a144 144 0 0 0 288 0v-9.9c57.33-33.21 96-95.1 96-166.1C384 86 298 0 192 0zm128 200a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8v-8a96 96 0 0 0-192 0 32 32 0 0 0 32 32h32a64 64 0 0 1 0 128h-8a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h8a32 32 0 0 0 0-64h-32a64.06 64.06 0 0 1-64-64 128 128 0 0 1 256 0z", "M320 200a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8v-8a96 96 0 0 0-192 0 32 32 0 0 0 32 32h32a64 64 0 0 1 0 128h-8a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h8a32 32 0 0 0 0-64h-32a64.06 64.06 0 0 1-64-64 128 128 0 0 1 256 0z"]]
};
exports.faEar = faEar;
var faEarMuffs = {
  prefix: 'fad',
  iconName: 'ear-muffs',
  icon: [640, 512, [], "f795", ["M83.44 200.9C102.24 87.1 200.94 0 319.94 0s217.8 87.2 236.5 201a69.63 69.63 0 0 0-15.7-2 72.82 72.82 0 0 0-18 2.3 71.77 71.77 0 0 0-16.5-6.8C485.74 110.6 410.14 48 319.94 48s-165.8 62.6-186.3 146.6a73.62 73.62 0 0 0-16 6.5 72.82 72.82 0 0 0-18-2.3 67.89 67.89 0 0 0-16.2 2.1z", "M639 335a39.92 39.92 0 0 0-21.4-26.9 39 39 0 0 0-8-33.6 40.3 40.3 0 0 0-31.7-14.7 39.6 39.6 0 0 0-23.4-26.2c-12.7-5-26.1-2.5-36.8 4.5-7.3-8.4-17.8-14.1-29.9-14.1a40 40 0 0 0-40 40c0 10.1 4.1 19 10.2 26a39.5 39.5 0 0 0-10.2 26.1 39.05 39.05 0 0 0 9.6 25.9 39.74 39.74 0 0 0 0 51.8 39.05 39.05 0 0 0-9.6 25.9 39.5 39.5 0 0 0 10.2 26.1 39.63 39.63 0 0 0 59.1 52.8 40.47 40.47 0 0 0 22 6.5 33.57 33.57 0 0 0 14.7-2.9 38.75 38.75 0 0 0 23.4-25.9 41.17 41.17 0 0 0 32-14.4 40.39 40.39 0 0 0 8.3-33.6 40.36 40.36 0 0 0 21.1-26.9 39 39 0 0 0-7.4-33.3A39.19 39.19 0 0 0 639 335zM151.94 224a39.23 39.23 0 0 0-29.6 13.7c-10.6-6.9-23.8-9.3-36.4-4.4a41.06 41.06 0 0 0-23.7 26.2 39.81 39.81 0 0 0-40 48 39.93 39.93 0 0 0-13.7 60.2 39.79 39.79 0 0 0 13.7 60.5 38.59 38.59 0 0 0 8 33.3 40.3 40.3 0 0 0 31.7 14.7 40.26 40.26 0 0 0 23.4 26.2 42 42 0 0 0 15 2.9 39.46 39.46 0 0 0 22.1-6.8 39.35 39.35 0 0 0 29.5 13.5 40 40 0 0 0 40-40 39.3 39.3 0 0 0-10.1-25.9 39.3 39.3 0 0 0 10.1-25.9 39.84 39.84 0 0 0-9.6-26.2 39.74 39.74 0 0 0 0-51.8 39.05 39.05 0 0 0 9.6-25.9 39.5 39.5 0 0 0-10.2-26.1 39.65 39.65 0 0 0-29.8-66.2z"]]
};
exports.faEarMuffs = faEarMuffs;
var faEclipse = {
  prefix: 'fad',
  iconName: 'eclipse',
  icon: [640, 512, [], "f749", ["M295.2 377.2c-44.2 14.3-94.6 4.4-129.7-30.7a128.13 128.13 0 0 1 0-181c35.1-35.1 85.5-45 129.8-30.7a203.26 203.26 0 0 1 25.1-28.9L271.5 9.6a17.31 17.31 0 0 0-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4a17.31 17.31 0 0 0 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7a17.31 17.31 0 0 0 31 0l47.3-94.7 5.3 1.8a205.94 205.94 0 0 1-28.8-32.3zM256 160a96 96 0 1 0 22.3 189.1 205.49 205.49 0 0 1 0-186.2A96.63 96.63 0 0 0 256 160z", "M640 256A176 176 0 1 1 464 80a176 176 0 0 1 176 176z"]]
};
exports.faEclipse = faEclipse;
var faEclipseAlt = {
  prefix: 'fad',
  iconName: 'eclipse-alt',
  icon: [512, 512, [], "f74a", ["M502.42 240.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.41-94.8a17.31 17.31 0 0 0-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.51 100.4L9.6 240.5a17.31 17.31 0 0 0 0 31l94.71 47.3L70.8 419.3c-4.5 13.6 8.4 26.5 21.9 21.9l100.41-33.5 47.3 94.7a17.31 17.31 0 0 0 31 0l47.31-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3a17.33 17.33 0 0 0 .2-31.1zm-155.9 106c-49.91 49.9-131.11 49.9-181 0a128.13 128.13 0 0 1 0-181c49.9-49.9 131.1-49.9 181 0a128.13 128.13 0 0 1 0 181z", "M330.4 316.5A96 96 0 1 1 255.9 160a93.4 93.4 0 0 1 17.5 1.6 4.49 4.49 0 0 1 1.4 8.3 75.21 75.21 0 0 0-38 65.4c0 47.1 42.8 82.8 89.3 73.9a4.5 4.5 0 0 1 4.3 7.3z"]]
};
exports.faEclipseAlt = faEclipseAlt;
var faEdit = {
  prefix: 'fad',
  iconName: 'edit',
  icon: [576, 512, [], "f044", ["M564.6 60.2l-48.8-48.8a39.11 39.11 0 0 0-55.2 0l-35.4 35.4a9.78 9.78 0 0 0 0 13.8l90.2 90.2a9.78 9.78 0 0 0 13.8 0l35.4-35.4a39.11 39.11 0 0 0 0-55.2zM427.5 297.6l-40 40a12.3 12.3 0 0 0-3.5 8.5v101.8H64v-320h229.8a12.3 12.3 0 0 0 8.5-3.5l40-40a12 12 0 0 0-8.5-20.5H48a48 48 0 0 0-48 48v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V306.1a12 12 0 0 0-20.5-8.5z", "M492.8 173.3a9.78 9.78 0 0 1 0 13.8L274.4 405.5l-92.8 10.3a19.45 19.45 0 0 1-21.5-21.5l10.3-92.8L388.8 83.1a9.78 9.78 0 0 1 13.8 0z"]]
};
exports.faEdit = faEdit;
var faEgg = {
  prefix: 'fad',
  iconName: 'egg',
  icon: [384, 512, [], "f7fb", ["M304 320a112 112 0 0 1-224 0c0-18.32 4.26-44.4 11.69-71.56a471.69 471.69 0 0 1 33.84-88c14-27.45 29.29-49.88 44.29-64.87l.36-.36a31 31 0 0 1 43.64 0l.36.36c15 15 30.31 37.42 44.29 64.87a471.69 471.69 0 0 1 33.84 88C299.74 275.6 304 301.68 304 320z", "M192 0C86 0 0 214 0 320s86 192 192 192 192-86 192-192S298 0 192 0zm0 432A112.12 112.12 0 0 1 80 320c0-18.32 4.26-44.4 11.69-71.56a471.69 471.69 0 0 1 33.84-88c14-27.45 29.29-49.88 44.29-64.87l.36-.36a31 31 0 0 1 43.64 0l.36.36c15 15 30.31 37.42 44.29 64.87a471.69 471.69 0 0 1 33.84 88C299.74 275.6 304 301.68 304 320a112.12 112.12 0 0 1-112 112z"]]
};
exports.faEgg = faEgg;
var faEggFried = {
  prefix: 'fad',
  iconName: 'egg-fried',
  icon: [512, 512, [], "f7fc", ["M478.31 150.45c-39.5-40.71-100.74-46.29-144.41-82.24C284.09 27.2 245.77-9.25 175.34 2.1c-86.79 14-111.73 80-125 157.14-11.1 64.34-54.42 127-50 192.91s52.84 128.43 115 150.74c93 33.39 147-31.71 204.67-86.45 43.69-41.44 93.41-37.72 141-73.89 56.2-42.82 71.63-140.55 17.3-192.1zM224 352.38c-61.75 0-112-50.3-112-112.11s50.27-112.12 112-112.12 112 50.29 112 112.12a112.14 112.14 0 0 1-112 112.11z", "M224 128a112 112 0 1 0 112 112 112.15 112.15 0 0 0-112-112zm-8 63.78a40 40 0 0 0-40 40 16 16 0 0 1-32 0 72.05 72.05 0 0 1 72-71.92 16 16 0 1 1 0 32z"]]
};
exports.faEggFried = faEggFried;
var faEject = {
  prefix: 'fad',
  iconName: 'eject',
  icon: [448, 512, [], "f052", ["M448 384v64a32 32 0 0 1-32 32H32a32 32 0 0 1-32-32v-64a32 32 0 0 1 32-32h384a32 32 0 0 1 32 32z", "M259.38 47.56l175.94 192c28.2 30.77 6.27 80.44-35.38 80.44H48.05c-41.73 0-63.52-49.73-35.38-80.44l176-192a48 48 0 0 1 70.71 0z"]]
};
exports.faEject = faEject;
var faElephant = {
  prefix: 'fad',
  iconName: 'elephant',
  icon: [640, 512, [], "f6da", ["M512 32.15h-72.65A63.9 63.9 0 1 0 352 119.24v72.86a32 32 0 0 0 28.78 31.83H408a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8l-24 .12a64.06 64.06 0 0 1-64-64v-56.73a96 96 0 0 1-32-71.18 94.71 94.71 0 0 1 5.9-32H192c-106 0-192 86-192 191.94v112a16 16 0 0 0 16 16h16V496a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16V388.19C160.35 405.73 198.72 416 240 416s79.65-10.3 112-27.84V496a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16V288.07h64c23.44 0 45.11-6.76 64-17.74v97.31A16.26 16.26 0 0 1 560.14 384 16 16 0 0 1 544 368.19v-.14c0-8.78-7.64-16-16.42-16H496a16 16 0 0 0-16 16 80.07 80.07 0 0 0 88.36 79.54C610 443.34 640 405.14 640 363.32V160.11A128 128 0 0 0 512 32.15zm16 128a16 16 0 1 1 16-16 16 16 0 0 1-16 15.96z", "M528 128a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm-176 64.16v-72.88A63.89 63.89 0 0 1 328.54 32l-34.64.16a94.77 94.77 0 0 0-5.9 32 96 96 0 0 0 32 71.2v56.8A64.07 64.07 0 0 0 379.74 256H408a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8h-27.22A32 32 0 0 1 352 192.16z"]]
};
exports.faElephant = faElephant;
var faEllipsisH = {
  prefix: 'fad',
  iconName: 'ellipsis-h',
  icon: [512, 512, [], "f141", ["M256 184a72 72 0 1 0 72 72 72 72 0 0 0-72-72z", "M432 184a72 72 0 1 0 72 72 72 72 0 0 0-72-72zm-352 0a72 72 0 1 0 72 72 72 72 0 0 0-72-72z"]]
};
exports.faEllipsisH = faEllipsisH;
var faEllipsisHAlt = {
  prefix: 'fad',
  iconName: 'ellipsis-h-alt',
  icon: [512, 512, [], "f39b", ["M80 184a72 72 0 1 0 72 72 72 72 0 0 0-72-72zm0 96a24 24 0 1 1 24-24 24 24 0 0 1-24 24zm352-96a72 72 0 1 0 72 72 72 72 0 0 0-72-72zm0 96a24 24 0 1 1 24-24 24 24 0 0 1-24 24zm-176-96a72 72 0 1 0 72 72 72 72 0 0 0-72-72zm0 96a24 24 0 1 1 24-24 24 24 0 0 1-24 24z", "M80 232a24 24 0 1 0 24 24 24 24 0 0 0-24-24zm176 0a24 24 0 1 0 24 24 24 24 0 0 0-24-24zm176 0a24 24 0 1 0 24 24 24 24 0 0 0-24-24z"]]
};
exports.faEllipsisHAlt = faEllipsisHAlt;
var faEllipsisV = {
  prefix: 'fad',
  iconName: 'ellipsis-v',
  icon: [192, 512, [], "f142", ["M96 184a72 72 0 1 0 72 72 72 72 0 0 0-72-72z", "M96 152a72 72 0 1 0-72-72 72 72 0 0 0 72 72zm0 208a72 72 0 1 0 72 72 72 72 0 0 0-72-72z"]]
};
exports.faEllipsisV = faEllipsisV;
var faEllipsisVAlt = {
  prefix: 'fad',
  iconName: 'ellipsis-v-alt',
  icon: [192, 512, [], "f39c", ["M168 80a72 72 0 1 0-72 72 72 72 0 0 0 72-72zm-96 0a24 24 0 1 1 24 24 24 24 0 0 1-24-24zm96 352a72 72 0 1 0-72 72 72 72 0 0 0 72-72zm-96 0a24 24 0 1 1 24 24 24 24 0 0 1-24-24zm96-176a72 72 0 1 0-72 72 72 72 0 0 0 72-72zm-96 0a24 24 0 1 1 24 24 24 24 0 0 1-24-24z", "M120 80a24 24 0 1 0-24 24 24 24 0 0 0 24-24zm0 176a24 24 0 1 0-24 24 24 24 0 0 0 24-24zm0 176a24 24 0 1 0-24 24 24 24 0 0 0 24-24z"]]
};
exports.faEllipsisVAlt = faEllipsisVAlt;
var faEmptySet = {
  prefix: 'fad',
  iconName: 'empty-set',
  icon: [512, 512, [], "f656", ["M76.6 390.15A223 223 0 0 1 32 256C32 132.29 132.29 32 256 32a223 223 0 0 1 134.15 44.6l-57.46 57.46a144.07 144.07 0 0 0-198.63 198.63zm301.34-210.83a144.07 144.07 0 0 1-198.62 198.62l-57.46 57.47A223 223 0 0 0 256 480c123.71 0 224-100.29 224-224a223 223 0 0 0-44.6-134.15z", "M507.31 50L50 507.32a16 16 0 0 1-22.63 0L4.69 484.69a16 16 0 0 1 0-22.63L462.06 4.69a16 16 0 0 1 22.63 0l22.62 22.62a16 16 0 0 1 0 22.69z"]]
};
exports.faEmptySet = faEmptySet;
var faEngineWarning = {
  prefix: 'fad',
  iconName: 'engine-warning',
  icon: [640, 512, [], "f5f2", ["M320 32C196.3 32 96 132.3 96 256s100.3 224 224 224 224-100.24 224-224S443.7 32 320 32zm0 352a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm38.24-238.41l-12.8 128A16 16 0 0 1 329.52 288h-19a16 16 0 0 1-15.92-14.41l-12.8-128A16 16 0 0 1 297.68 128h44.64a16 16 0 0 1 15.92 17.59z", "M101.33 69.63l-12.2-10.41c-6.91-5.9-17.62-5.06-23.15 2.15a320.08 320.08 0 0 0 0 389.25c5.53 7.21 16.23 8.05 23.15 2.16l12.19-10.4a15.88 15.88 0 0 0 2-21.86 272.17 272.17 0 0 1 0-329 15.87 15.87 0 0 0-1.99-21.89zm471.4-9.92c-5.58-7.18-16.29-8-23.17-2l-12.15 10.51a15.87 15.87 0 0 0-1.88 21.87 272 272 0 0 1 0 331.86 15.87 15.87 0 0 0 1.88 21.87l12.15 10.5c6.87 5.95 17.59 5.18 23.17-2a320.08 320.08 0 0 0 0-392.61zM342.32 128h-44.64a16 16 0 0 0-15.92 17.59l12.8 128A16 16 0 0 0 310.48 288h19a16 16 0 0 0 15.92-14.41l12.8-128A16 16 0 0 0 342.32 128zM320 320a32 32 0 1 0 32 32 32 32 0 0 0-32-32z"]]
};
exports.faEngineWarning = faEngineWarning;
var faEnvelope = {
  prefix: 'fad',
  iconName: 'envelope',
  icon: [512, 512, [], "f0e0", ["M256.47 352h-.94c-30.1 0-60.41-23.42-82.54-40.52C169.39 308.7 24.77 202.7 0 183.33V400a48 48 0 0 0 48 48h416a48 48 0 0 0 48-48V183.36c-24.46 19.17-169.4 125.34-173 128.12-22.12 17.1-52.43 40.52-82.53 40.52zM464 64H48a48 48 0 0 0-48 48v19a24.08 24.08 0 0 0 9.2 18.9c30.6 23.9 40.7 32.4 173.4 128.7 16.8 12.2 50.2 41.8 73.4 41.4 23.2.4 56.6-29.2 73.4-41.4 132.7-96.3 142.8-104.7 173.4-128.7A23.93 23.93 0 0 0 512 131v-19a48 48 0 0 0-48-48z", "M512 131v52.36c-24.46 19.17-169.4 125.34-173 128.12-22.12 17.1-52.43 40.52-82.53 40.52h-.94c-30.1 0-60.41-23.42-82.54-40.52C169.39 308.7 24.77 202.7 0 183.33V131a24.08 24.08 0 0 0 9.2 18.9c30.6 23.9 40.7 32.4 173.4 128.7 16.69 12.12 49.75 41.4 72.93 41.4h.94c23.18 0 56.24-29.28 72.93-41.4 132.7-96.3 142.8-104.7 173.4-128.7A23.93 23.93 0 0 0 512 131z"]]
};
exports.faEnvelope = faEnvelope;
var faEnvelopeOpen = {
  prefix: 'fad',
  iconName: 'envelope-open',
  icon: [512, 512, [], "f2b6", ["M492.61 163c-24.89-19.52-45.51-35.38-164.2-121.51C311.6 29.17 278.2-.35 255 0c-23.2-.35-56.59 29.17-73.41 41.44C62.89 127.58 42.3 143.42 17.39 163 7.24 170.9-1 187.83-1 200.72V464a48 48 0 0 0 48 48h416a48 48 0 0 0 48-48V200.72c0-12.89-8.24-29.82-18.39-37.72zm-40 128.61c-22.89 16.9-55.46 40.69-105.31 76.87C327 383.23 290.72 416.24 255 416c-35.74.24-72-32.79-92.26-47.57-49.85-36.18-82.42-60-105.31-76.87a9 9 0 0 1-3.24-6.44 9.44 9.44 0 0 1 1.4-4.53l9.08-13.2a8 8 0 0 1 11.33-1.9c22.85 16.87 55.47 40.71 105.59 77.08 16.85 12.28 50.2 41.77 73.41 41.43 23.2.35 56.59-29.17 73.41-41.43 50.12-36.38 82.74-60.21 105.59-77.08a8 8 0 0 1 11.33 1.9l9.08 13.2a9.44 9.44 0 0 1 1.4 4.53 9 9 0 0 1-3.24 6.44z", "M455.81 285.12a9 9 0 0 1-3.24 6.44c-22.89 16.9-55.46 40.69-105.31 76.87C327 383.23 290.72 416.24 255 416c-35.74.24-72-32.79-92.26-47.57-49.85-36.18-82.42-60-105.31-76.87a9 9 0 0 1-3.24-6.44 9.44 9.44 0 0 1 1.4-4.53l9.08-13.2a8 8 0 0 1 11.33-1.9c22.85 16.87 55.47 40.71 105.59 77.08 16.85 12.28 50.2 41.77 73.41 41.43 23.2.35 56.59-29.17 73.41-41.43 50.12-36.38 82.74-60.21 105.59-77.08a8 8 0 0 1 11.33 1.9l9.08 13.2a9.44 9.44 0 0 1 1.4 4.53z"]]
};
exports.faEnvelopeOpen = faEnvelopeOpen;
var faEnvelopeOpenDollar = {
  prefix: 'fad',
  iconName: 'envelope-open-dollar',
  icon: [512, 512, [], "f657", ["M416 64H96a32 32 0 0 0-32 32v161.62L227.91 376a47.89 47.89 0 0 0 56.21 0L448 257.62V96a32 32 0 0 0-32-32z", "M248 319h16a8 8 0 0 0 8-8v-16.12c23.62-.63 42.67-20.54 42.67-45.07 0-20-13-37.81-31.58-43.39l-45-13.5c-5.16-1.55-8.77-6.78-8.77-12.73 0-7.27 5.3-13.19 11.8-13.19h28.11a24.14 24.14 0 0 1 12.82 3.72 8.19 8.19 0 0 0 10.13-.73l11.75-11.21a8 8 0 0 0-.57-12.14A57.29 57.29 0 0 0 272 135.29V119a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v16.12c-23.62.63-42.67 20.55-42.67 45.07 0 20 13 37.81 31.58 43.39l45 13.5c5.16 1.55 8.77 6.78 8.77 12.73 0 7.27-5.3 13.19-11.8 13.19h-28.11a24 24 0 0 1-12.77-3.72 8.22 8.22 0 0 0-10.13.73l-11.75 11.21a8 8 0 0 0-.34 11.31 7.17 7.17 0 0 0 .91.83A57.13 57.13 0 0 0 240 294.71V311a8 8 0 0 0 8 8zm81.4-277.56C312.6 29.18 279.2-.35 256 0c-23.2-.35-56.59 29.17-73.41 41.44L152 64h208zM64 129c-23.88 17.69-42.67 31.65-45.61 34A48 48 0 0 0 0 200.72v10.65l64 46.24zm429.61 34c-2.94-2.3-21.73-16.26-45.61-33.93v128.54l64-46.24v-10.65A48 48 0 0 0 493.61 163zM256 417.13a79.83 79.83 0 0 1-46.86-15.19L0 250.86V464a48 48 0 0 0 48 48h416a48 48 0 0 0 48-48V250.86L302.86 401.94A80 80 0 0 1 256 417.13z"]]
};
exports.faEnvelopeOpenDollar = faEnvelopeOpenDollar;
var faEnvelopeOpenText = {
  prefix: 'fad',
  iconName: 'envelope-open-text',
  icon: [512, 512, [], "f658", ["M448 96v161.62L284.12 376a47.89 47.89 0 0 1-56.21 0L64 257.62V96a32 32 0 0 1 32-32h320a32 32 0 0 1 32 32z", "M336 224H176a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h160a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16zm16-64a16 16 0 0 0-16-16H176a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h160a16 16 0 0 0 16-16zM329.41 41.44C312.6 29.18 279.2-.35 256 0c-23.2-.35-56.59 29.17-73.41 41.44L152 64h208zM64 129c-23.88 17.69-42.67 31.65-45.61 34A48 48 0 0 0 0 200.72v10.65l64 46.24zm429.61 34c-2.94-2.3-21.73-16.26-45.61-33.93v128.54l64-46.24v-10.65A48 48 0 0 0 493.61 163zM256 417.13a79.83 79.83 0 0 1-46.86-15.19L0 250.86V464a48 48 0 0 0 48 48h416a48 48 0 0 0 48-48V250.86L302.86 401.94A80 80 0 0 1 256 417.13z"]]
};
exports.faEnvelopeOpenText = faEnvelopeOpenText;
var faEnvelopeSquare = {
  prefix: 'fad',
  iconName: 'envelope-square',
  icon: [448, 512, [], "f199", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-16 328a24 24 0 0 1-24 24H88a24 24 0 0 1-24-24V152a24 24 0 0 1 24-24h272a24 24 0 0 1 24 24z", "M224 320c-26.72.13-50.54-21.67-64.7-32C97.33 243 78 228.57 64 217.77V360a24 24 0 0 0 24 24h272a24 24 0 0 0 24-24V217.77c-14 10.8-33.33 25.24-95.28 70.2C275 298 250.88 320.13 224 320zm136-192H88a24 24 0 0 0-24 24v25.17c24.35 19 23.43 19.12 114.12 84.93 10.51 7.67 31.38 26.12 45.88 25.9 14.49.22 35.38-18.24 45.88-25.9 90.69-65.81 89.75-66 114.12-84.93V152a24 24 0 0 0-24-24z"]]
};
exports.faEnvelopeSquare = faEnvelopeSquare;
var faEquals = {
  prefix: 'fad',
  iconName: 'equals',
  icon: [448, 512, [], "f52c", ["M448 336v32a32 32 0 0 1-32 32H32a32 32 0 0 1-32-32v-32a32 32 0 0 1 32-32h384a32 32 0 0 1 32 32z", "M448 144v32a32 32 0 0 1-32 32H32a32 32 0 0 1-32-32v-32a32 32 0 0 1 32-32h384a32 32 0 0 1 32 32z"]]
};
exports.faEquals = faEquals;
var faEraser = {
  prefix: 'fad',
  iconName: 'eraser',
  icon: [512, 512, [], "f12d", ["M512 428v40a12 12 0 0 1-12 12H144a48 48 0 0 1-33.94-14.06l-96-96a48 48 0 0 1 0-67.88l136-136 227.88 227.88L355.88 416H500a12 12 0 0 1 12 12z", "M377.94 393.94l120-120a48 48 0 0 0 0-67.88l-160-160a48 48 0 0 0-67.88 0l-120 120 45.25 45.25z"]]
};
exports.faEraser = faEraser;
var faEthernet = {
  prefix: 'fad',
  iconName: 'ethernet',
  icon: [512, 512, [], "f796", ["M512 208v224a16 16 0 0 1-16 16h-80V320h-32v128h-64V320h-32v128h-64V320h-32v128h-64V320H96v128H16a16 16 0 0 1-16-16V208a16 16 0 0 1 16-16h48v-48a16 16 0 0 1 16-16h48V80a16 16 0 0 1 16-16h224a16 16 0 0 1 16 16v48h48a16 16 0 0 1 16 16v48h48a16 16 0 0 1 16 16z", "M192 448h32V320h-32zm-96 0h32V320H96zm192 0h32V320h-32zm96-128v128h32V320z"]]
};
exports.faEthernet = faEthernet;
var faEuroSign = {
  prefix: 'fad',
  iconName: 'euro-sign',
  icon: [320, 512, [], "f153", ["M249.46 272H12a12 12 0 0 0-12 12v28.37a12 12 0 0 0 12 12h231.08a12 12 0 0 0 11.71-9.37l6.37-28.37a12.16 12.16 0 0 0 .29-2.62A12 12 0 0 0 249.46 272zm19-96H12a12 12 0 0 0-12 12v29.76a12 12 0 0 0 12 12h250a12 12 0 0 0 11.67-9.44l6.51-29.75a12.26 12.26 0 0 0 .28-2.57 12 12 0 0 0-12-12z", "M310.74 472.22a249.39 249.39 0 0 1-61.1 7.79c-287.91 0-290.74-448 0-448a290.17 290.17 0 0 1 52.68 5.21 12 12 0 0 1 9.53 14c-.06.29-.12.58-.2.87l-12 44.37a12 12 0 0 1-14 8.62c-234.25-48.79-225.48 354 10.63 299.3a12 12 0 0 1 14.36 9c0 .11.05.22.07.33l8.81 44.49a12 12 0 0 1-8.78 14.02z"]]
};
exports.faEuroSign = faEuroSign;
var faExchange = {
  prefix: 'fad',
  iconName: 'exchange',
  icon: [512, 512, [], "f0ec", ["M488 384H106l30.47 27.73a24 24 0 0 1 .47 34.4L126.13 457a24 24 0 0 1-33.94 0L9.37 374.63a32 32 0 0 1 0-45.26L92.19 247a24 24 0 0 1 33.94 0L137 257.87a24 24 0 0 1-.47 34.4L106 320h382a24 24 0 0 1 24 24v16a24 24 0 0 1-24 24z", "M0 168v-16a24 24 0 0 1 24-24h382l-30.5-27.73a24 24 0 0 1-.47-34.4L385.87 55a24 24 0 0 1 33.94 0l82.82 82.34a32 32 0 0 1 0 45.26L419.81 265a24 24 0 0 1-33.94 0L375 254.13a24 24 0 0 1 .47-34.4L406 192H24a24 24 0 0 1-24-24z"]]
};
exports.faExchange = faExchange;
var faExchangeAlt = {
  prefix: 'fad',
  iconName: 'exchange-alt',
  icon: [512, 512, [], "f362", ["M128 272v48h360a24 24 0 0 1 24 24v16a24 24 0 0 1-24 24H128v48c0 21.44-25.94 32-41 17L7 369a24 24 0 0 1 0-33.94l80-80c15.14-15.12 41-4.35 41 16.94z", "M505 143.05a24 24 0 0 1 0 33.95l-80 80c-15 15-41 4.49-41-17v-48H24a24 24 0 0 1-24-24v-16a24 24 0 0 1 24-24h360V80c0-21.36 25.9-32 41-17z"]]
};
exports.faExchangeAlt = faExchangeAlt;
var faExclamation = {
  prefix: 'fad',
  iconName: 'exclamation',
  icon: [192, 512, [], "f12a", ["M96 512a80 80 0 1 1 80-80 80.09 80.09 0 0 1-80 80z", "M49.22 0h93.56a24 24 0 0 1 24 25.2l-13.63 272a24 24 0 0 1-24 22.8H62.84a24 24 0 0 1-24-22.8l-13.59-272A24 24 0 0 1 49.22 0z"]]
};
exports.faExclamation = faExclamation;
var faExclamationCircle = {
  prefix: 'fad',
  iconName: 'exclamation-circle',
  icon: [512, 512, [], "f06a", ["M256 8C119 8 8 119.08 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 376a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm38.24-238.41l-12.8 128A16 16 0 0 1 265.52 288h-19a16 16 0 0 1-15.92-14.41l-12.8-128A16 16 0 0 1 233.68 128h44.64a16 16 0 0 1 15.92 17.59z", "M278.32 128h-44.64a16 16 0 0 0-15.92 17.59l12.8 128A16 16 0 0 0 246.48 288h19a16 16 0 0 0 15.92-14.41l12.8-128A16 16 0 0 0 278.32 128zM256 320a32 32 0 1 0 32 32 32 32 0 0 0-32-32z"]]
};
exports.faExclamationCircle = faExclamationCircle;
var faExclamationSquare = {
  prefix: 'fad',
  iconName: 'exclamation-square',
  icon: [448, 512, [], "f321", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zM224 384a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm38.24-238.41l-12.8 128A16 16 0 0 1 233.52 288h-19a16 16 0 0 1-15.92-14.41l-12.8-128A16 16 0 0 1 201.68 128h44.64a16 16 0 0 1 15.92 17.59z", "M246.32 128h-44.64a16 16 0 0 0-15.92 17.59l12.8 128A16 16 0 0 0 214.48 288h19a16 16 0 0 0 15.92-14.41l12.8-128A16 16 0 0 0 246.32 128zM224 320a32 32 0 1 0 32 32 32 32 0 0 0-32-32z"]]
};
exports.faExclamationSquare = faExclamationSquare;
var faExclamationTriangle = {
  prefix: 'fad',
  iconName: 'exclamation-triangle',
  icon: [576, 512, [], "f071", ["M569.52 440L329.58 24c-18.44-32-64.69-32-83.16 0L6.48 440c-18.42 31.94 4.64 72 41.57 72h479.89c36.87 0 60.06-40 41.58-72zM288 448a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm38.24-238.41l-12.8 128A16 16 0 0 1 297.52 352h-19a16 16 0 0 1-15.92-14.41l-12.8-128A16 16 0 0 1 265.68 192h44.64a16 16 0 0 1 15.92 17.59z", "M310.32 192h-44.64a16 16 0 0 0-15.92 17.59l12.8 128A16 16 0 0 0 278.48 352h19a16 16 0 0 0 15.92-14.41l12.8-128A16 16 0 0 0 310.32 192zM288 384a32 32 0 1 0 32 32 32 32 0 0 0-32-32z"]]
};
exports.faExclamationTriangle = faExclamationTriangle;
var faExpand = {
  prefix: 'fad',
  iconName: 'expand',
  icon: [448, 512, [], "f065", ["M148 32H24A23.94 23.94 0 0 0 0 56v124a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12V96h84a12 12 0 0 0 12-12V44a12 12 0 0 0-12-12zm288 288h-40a12 12 0 0 0-12 12v84h-84a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h124a23.94 23.94 0 0 0 24-24V332a12 12 0 0 0-12-12z", "M148 416H64v-84a12 12 0 0 0-12-12H12a12 12 0 0 0-12 12v124a23.94 23.94 0 0 0 24 24h124a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zM424 32H300a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h84v84a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12V56a23.94 23.94 0 0 0-24-24z"]]
};
exports.faExpand = faExpand;
var faExpandAlt = {
  prefix: 'fad',
  iconName: 'expand-alt',
  icon: [448, 512, [], "f424", ["M0 456V344c0-21.38 25.8-32.09 40.92-17L72 360l92.69-92.69a16 16 0 0 1 22.62 0l25.38 25.38a16 16 0 0 1 0 22.62L120 408l32.92 31c15.12 15.12 4.41 41-17 41H24a24 24 0 0 1-24-24z", "M235.31 196.69L328 104l-32.92-31c-15.12-15.12-4.41-41 17-41h112A24 24 0 0 1 448 56v112c0 21.38-25.8 32.09-40.92 17L376 152l-92.69 92.69a16 16 0 0 1-22.62 0l-25.38-25.38a16 16 0 0 1 0-22.62z"]]
};
exports.faExpandAlt = faExpandAlt;
var faExpandArrows = {
  prefix: 'fad',
  iconName: 'expand-arrows',
  icon: [448, 512, [], "f31d", ["M0 200V64a32 32 0 0 1 32-32h136a23.94 23.94 0 0 1 24 24v15.3a24 24 0 0 1-24.7 24L101 93.4l123 123-39.6 39.6-123-123 1.9 66.3a24 24 0 0 1-24 24.7H24a23.94 23.94 0 0 1-24-24zm424 88h-15.3a24 24 0 0 0-24 24.7l1.9 66.3-123-123-39.6 39.6 123 123-66.3-1.9a24 24 0 0 0-24.7 24V456a23.94 23.94 0 0 0 24 24h136a32 32 0 0 0 32-32V312a23.94 23.94 0 0 0-24-24z", "M101 418.6l66.3-1.9a24 24 0 0 1 24.7 24V456a23.94 23.94 0 0 1-24 24H32a32 32 0 0 1-32-32V312a23.94 23.94 0 0 1 24-24h15.3a24 24 0 0 1 24 24.7L61.4 379 347 93.4l-66.3 1.9a24 24 0 0 1-24.7-24V56a23.94 23.94 0 0 1 24-24h136a32 32 0 0 1 32 32v136a23.94 23.94 0 0 1-24 24h-15.3a24 24 0 0 1-24-24.7l1.9-66.3z"]]
};
exports.faExpandArrows = faExpandArrows;
var faExpandArrowsAlt = {
  prefix: 'fad',
  iconName: 'expand-arrows-alt',
  icon: [448, 512, [], "f31e", ["M.05 168V56a23.94 23.94 0 0 1 24-24h112c21.4 0 32.1 25.9 17 41l-36.2 36.2 107.2 107.2L184.4 256 77.15 148.75 41.05 185c-15.05 15.05-41 4.35-41-17zm407 159.1L371 363.25 263.7 256l-39.65 39.65 107.2 107.2-36.2 36.2c-15.1 15.1-4.4 41 17 41h112a23.94 23.94 0 0 0 24-24v-112c0-21.4-25.9-32.05-41-17z", "M370.9 148.8L116.8 402.9 153 439c15.1 15.1 4.4 41-17 41H24a23.94 23.94 0 0 1-24-24V344c0-21.4 25.9-32.1 41-17l36.2 36.2 254.1-254.1L295.1 73c-15.1-15.1-4.4-41 17-41h112a23.94 23.94 0 0 1 24 24v112c0 21.4-25.9 32.1-41 17z"]]
};
exports.faExpandArrowsAlt = faExpandArrowsAlt;
var faExpandWide = {
  prefix: 'fad',
  iconName: 'expand-wide',
  icon: [512, 512, [], "f320", ["M148 64H24A23.94 23.94 0 0 0 0 88v124a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-84h84a12 12 0 0 0 12-12V76a12 12 0 0 0-12-12zm352 224h-40a12 12 0 0 0-12 12v84h-84a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h124a23.94 23.94 0 0 0 24-24V300a12 12 0 0 0-12-12z", "M148 384H64v-84a12 12 0 0 0-12-12H12a12 12 0 0 0-12 12v124a23.94 23.94 0 0 0 24 24h124a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zM488 64H364a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h84v84a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12V88a23.94 23.94 0 0 0-24-24z"]]
};
exports.faExpandWide = faExpandWide;
var faExternalLink = {
  prefix: 'fad',
  iconName: 'external-link',
  icon: [512, 512, [], "f08e", ["M400 320h32a16 16 0 0 1 16 16v128a48 48 0 0 1-48 48H48a48 48 0 0 1-48-48V112a48 48 0 0 1 48-48h160a16 16 0 0 1 16 16v32a16 16 0 0 1-16 16H64v320h320V336a16 16 0 0 1 16-16z", "M484 224h-17.88a28 28 0 0 1-28-28v-.78L440 128 192.91 376.91A24 24 0 0 1 159 377l-.06-.06L135 353.09a24 24 0 0 1 0-33.94l.06-.06L384 72l-67.21 1.9A28 28 0 0 1 288 46.68V28a28 28 0 0 1 28-28h158.67A37.33 37.33 0 0 1 512 37.33V196a28 28 0 0 1-28 28z"]]
};
exports.faExternalLink = faExternalLink;
var faExternalLinkAlt = {
  prefix: 'fad',
  iconName: 'external-link-alt',
  icon: [512, 512, [], "f35d", ["M400 320h32a16 16 0 0 1 16 16v128a48 48 0 0 1-48 48H48a48 48 0 0 1-48-48V112a48 48 0 0 1 48-48h160a16 16 0 0 1 16 16v32a16 16 0 0 1-16 16H64v320h320V336a16 16 0 0 1 16-16z", "M512 24v128c0 21.47-26 32-41 17l-35.71-35.71L191.8 376.77a24 24 0 0 1-33.94 0l-22.63-22.63a24 24 0 0 1 0-33.94L378.76 76.68 343.05 41C328 25.9 338.66 0 360 0h128a24 24 0 0 1 24 24z"]]
};
exports.faExternalLinkAlt = faExternalLinkAlt;
var faExternalLinkSquare = {
  prefix: 'fad',
  iconName: 'external-link-square',
  icon: [448, 512, [], "f14c", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-16 227.33a23.34 23.34 0 0 1-23.33 23.34h-14.91a23.34 23.34 0 0 1-23.32-24l1.59-56-205.94 207.42a20 20 0 0 1-28.33.05l-19.9-19.9a20 20 0 0 1 0-28.33L277.31 156l-56 1.59a23.34 23.34 0 0 1-24-23.32v-14.94A23.34 23.34 0 0 1 220.67 96h132.22A31.11 31.11 0 0 1 384 127.11z", "M69.91 361.91L277.31 156l-56 1.59a23.34 23.34 0 0 1-24-23.32v-14.94A23.34 23.34 0 0 1 220.67 96h132.22A31.11 31.11 0 0 1 384 127.11v132.22a23.34 23.34 0 0 1-23.33 23.34h-14.91a23.34 23.34 0 0 1-23.32-24l1.59-56-205.94 207.42a20 20 0 0 1-28.33.05l-19.9-19.9a20 20 0 0 1 .05-28.33z"]]
};
exports.faExternalLinkSquare = faExternalLinkSquare;
var faExternalLinkSquareAlt = {
  prefix: 'fad',
  iconName: 'external-link-square-alt',
  icon: [448, 512, [], "f360", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-16 200c0 21.45-25.94 32-41 17l-32-32-195.48 195.48a12 12 0 0 1-17 0l-31-31a12 12 0 0 1 0-17L263 169l-32-32c-15.11-15.11-4.34-41 17-41h112a24 24 0 0 1 24 24z", "M384 232c0 21.44-25.94 32-41 17l-32-32-195.48 195.48a12 12 0 0 1-17 0l-31-31a12 12 0 0 1 0-17L263 169l-32-32c-15.11-15.11-4.34-41 17-41h112a24 24 0 0 1 24 24z"]]
};
exports.faExternalLinkSquareAlt = faExternalLinkSquareAlt;
var faEye = {
  prefix: 'fad',
  iconName: 'eye',
  icon: [576, 512, [], "f06e", ["M572.52 241.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288.14 400H288a143.93 143.93 0 1 1 .14 0z", "M380.66 280.87a95.78 95.78 0 1 1-184.87-50.18 47.85 47.85 0 0 0 66.9-66.9 95.3 95.3 0 0 1 118 117.08z"]]
};
exports.faEye = faEye;
var faEyeDropper = {
  prefix: 'fad',
  iconName: 'eye-dropper',
  icon: [512, 512, [], "f1fb", ["M32 512L0 480l32-56v-45.5c0-17 6.7-33.3 18.8-45.3l126.6-126.6 128 128-126.7 126.7c-12 12-28.3 18.7-45.2 18.7H88l-56 32z", "M483.9 163.9L406.8 241l13.1 13.1c9.4 9.4 9.4 24.6 0 33.9l-41 41c-9.4 9.3-24.5 9.3-33.9 0L183 167c-9.4-9.4-9.4-24.6 0-33.9l41-41c9.4-9.4 24.6-9.4 33.9 0l13.1 13.2 77.1-77.1c37.5-37.5 98.3-37.5 135.8 0s37.5 98.2 0 135.7z"]]
};
exports.faEyeDropper = faEyeDropper;
var faEyeEvil = {
  prefix: 'fad',
  iconName: 'eye-evil',
  icon: [640, 512, [], "f6db", ["M344.35 222.25A81 81 0 0 1 352 256c-.49 42.66-32 64-32 64s-31.48-21.34-32-64a81.1 81.1 0 0 1 7.64-33.75 170.14 170.14 0 0 0 48.68 0z", "M627 239.08l-111.87-30.3c-4.79-6.56-10.15-13.4-16.13-20.45 1.35-2.07 55.18-88 55.18-88 8.98-14.33-6.06-31.33-22.41-25.4L412 118.29A215 215 0 0 0 381.36 106l-44.47-95.27c-6.68-14.31-27.08-14.31-33.76 0L258.66 106A213.81 213.81 0 0 0 228 118.29L108.24 74.93C91.89 69 76.86 86 85.79 100.35c0 0 53.84 85.92 55.18 88q-8.43 9.93-16.13 20.45L13 239.08c-17.29 4.68-17.29 29.15 0 33.83l111.87 30.3c4.78 6.54 10.11 13.35 16.07 20.38-1.34 2.09-55.12 88.05-55.12 88.05-8.97 14.36 6.07 31.36 22.42 25.43L228 393.71A213.81 213.81 0 0 0 258.66 406l44.47 95.24c6.68 14.31 27.08 14.31 33.76 0L381.36 406A213.81 213.81 0 0 0 412 393.71l119.77 43.36c16.35 5.92 31.39-11.11 22.45-25.43 0 0-53.78-86-55.12-88.05 6-7 11.29-13.84 16.07-20.38l111.87-30.3c17.29-4.68 17.29-29.14-.04-33.83zM320 352a96 96 0 0 1-80-149.08C261.92 216.1 289.72 224 320 224s58.08-7.9 80-21.08A96 96 0 0 1 320 352z"]]
};
exports.faEyeEvil = faEyeEvil;
var faEyeSlash = {
  prefix: 'fad',
  iconName: 'eye-slash',
  icon: [640, 512, [], "f070", ["M172.12 101.27A311.47 311.47 0 0 1 320 64c122.93 0 230.29 71.59 284.52 177.4a32.35 32.35 0 0 1 0 29.19 332.58 332.58 0 0 1-81 102.25l-72.81-56.27a144 144 0 0 0-222.2-171.73zm239 184.73c.55-1.68 1.07-3.38 1.54-5.11a95 95 0 0 0-118-117.08 47.73 47.73 0 0 1 8.21 38.55zM320 400c-75.85 0-137.25-58.71-142.9-133.11L72.2 185.82c-13.79 17.3-26.48 35.59-36.72 55.59a32.35 32.35 0 0 0 0 29.19C89.71 376.41 197.07 448 320 448c26.91 0 52.87-4 77.89-10.46L346 397.39a143.62 143.62 0 0 1-26 2.61z", "M636.64 480.55L617 505.82a16 16 0 0 1-22.45 2.8L6.18 53.9a16 16 0 0 1-2.81-22.45L23 6.18a16 16 0 0 1 22.45-2.8L633.82 458.1a16 16 0 0 1 2.82 22.45z"]]
};
exports.faEyeSlash = faEyeSlash;
var faFan = {
  prefix: 'fad',
  iconName: 'fan',
  icon: [512, 512, [], "f863", ["M352.57 128c-28.09 0-54.09 4.52-77.06 12.86l12.41-123.11C289 7.31 279.81-1.18 269.33.13 189.63 10.13 128 77.64 128 159.43c0 28.09 4.52 54.09 12.86 77.06L17.75 224.08C7.31 223-1.18 232.19.13 242.67c10 79.7 77.51 141.33 159.3 141.33 28.09 0 54.09-4.52 77.06-12.86l-12.41 123.11c-1.05 10.43 8.11 18.93 18.59 17.62 79.7-10 141.33-77.51 141.33-159.3 0-28.09-4.52-54.09-12.86-77.06l123.11 12.41c10.44 1.05 18.93-8.11 17.62-18.59-10-79.7-77.51-141.33-159.3-141.33zM256 292a36 36 0 1 1 36-36 36 36 0 0 1-36 36z", "M256 292a36 36 0 1 1 36-36 36 36 0 0 1-36 36z"]]
};
exports.faFan = faFan;
var faFarm = {
  prefix: 'fad',
  iconName: 'farm',
  icon: [576, 512, [], "f864", ["M190.24 120.94l-55.48 111a64.35 64.35 0 0 0-6.76 28.6V512H0V112a111.93 111.93 0 0 1 221.87-21.09l-.37.17a64.12 64.12 0 0 0-31.26 29.86z", "M572.62 246.22l-55.49-111a32 32 0 0 0-15.62-14.93L381 66.76a32 32 0 0 0-26 0l-120.51 53.56a32 32 0 0 0-15.62 14.93l-55.49 111a32.08 32.08 0 0 0-3.38 14.29V512h128v-96h160v96h128V260.54a32.08 32.08 0 0 0-3.38-14.32zM416 320h-96v-96h96z"]]
};
exports.faFarm = faFarm;
var faFastBackward = {
  prefix: 'fad',
  iconName: 'fast-backward',
  icon: [512, 512, [], "f049", ["M64 285.31V436a12 12 0 0 1-12 12H12a12 12 0 0 1-12-12V76a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12v209.3z", "M512 96v320c0 27.4-31.9 41.7-52.5 24.6L288 285.31V416c0 27.4-31.9 41.7-52.5 24.6L96 314.28V198.71l139.5-127.3C256.1 54.31 288 68.61 288 96v131.9L459.5 71.41C480.1 54.31 512 68.61 512 96z"]]
};
exports.faFastBackward = faFastBackward;
var faFastForward = {
  prefix: 'fad',
  iconName: 'fast-forward',
  icon: [512, 512, [], "f050", ["M512 76v360a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12V76a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12z", "M416 313.31l-139.5 127.3c-20.6 17.2-52.5 2.8-52.5-24.6v-131.9L52.5 440.61C31.9 457.81 0 443.41 0 416V96c0-27.4 31.9-41.7 52.5-24.6L224 226.81V96c0-27.4 31.9-41.7 52.5-24.6L416 197.81z"]]
};
exports.faFastForward = faFastForward;
var faFax = {
  prefix: 'fad',
  iconName: 'fax',
  icon: [512, 512, [], "f1ac", ["M480 96v96H128V32a32 32 0 0 1 32-32h224v80a16 16 0 0 0 16 16z", "M64 128H32a32 32 0 0 0-32 32v320a32 32 0 0 0 32 32h32a32 32 0 0 0 32-32V160a32 32 0 0 0-32-32zm416 64H128v288a32 32 0 0 0 32 32h320a32 32 0 0 0 32-32V224a32 32 0 0 0-32-32zM288 432a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16zm0-128a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16zm128 128a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16zm0-128a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16zM400 96h80v-4.58a17.92 17.92 0 0 0-5.25-12.67l-73.43-73.5A18 18 0 0 0 388.57 0H384v80a16 16 0 0 0 16 16z"]]
};
exports.faFax = faFax;
var faFeather = {
  prefix: 'fad',
  iconName: 'feather',
  icon: [512, 512, [], "f52d", ["M483.4 244.2L351.85 288h97.78c-9.92 10.68 3.68-3.07-46.3 46.86L255.75 384h98.19c-74.94 73.11-194.52 70.65-246.82 54.94l-.06-.05L305 241a24 24 0 0 0-34-34L73.19 404.87l-.2-.21c-12.13-40.37-26.12-166.28 56.11-248.43 24.78-24.74 7.15-7.14 85.75-85.66 90.61-90.51 189.73-88.21 252.28-25.73 50.58 50.52 61.7 124.9 16.27 199.36z", "M24 512a24 24 0 0 1-17-41l264-264a24 24 0 0 1 34 34L41 505a23.92 23.92 0 0 1-17 7z"]]
};
exports.faFeather = faFeather;
var faFeatherAlt = {
  prefix: 'fad',
  iconName: 'feather-alt',
  icon: [512, 512, [], "f56b", ["M458.38 234.79L351.83 288H433a396.85 396.85 0 0 1-30.46 47.12L255.73 384h101c-35.57 30.07-79.11 51.1-132.59 56.54a1130.32 1130.32 0 0 1-125.99 7.36h-.06L305 241a24 24 0 0 0-34-34L64 414c.08-62.81 4-100.05 7-126.44C96.44 38.2 460.21 3.56 512 0c-1.81 26.26-11.71 132.86-53.62 234.79z", "M24 512a24 24 0 0 1-17-41l264-264a24 24 0 0 1 34 34L41 505a23.92 23.92 0 0 1-17 7z"]]
};
exports.faFeatherAlt = faFeatherAlt;
var faFemale = {
  prefix: 'fad',
  iconName: 'female',
  icon: [256, 512, [], "f182", ["M64 64a64 64 0 1 1 64 64 64 64 0 0 1-64-64z", "M80 144h11.37a87.91 87.91 0 0 0 73.28 0H176a24 24 0 0 1 23.28 18.18l48 192A24 24 0 0 1 224 384h-56v104a24 24 0 0 1-24 24h-32a24 24 0 0 1-24-24V384H32a24 24 0 0 1-23.27-29.82l48-192A24 24 0 0 1 80 144z"]]
};
exports.faFemale = faFemale;
var faFieldHockey = {
  prefix: 'fad',
  iconName: 'field-hockey',
  icon: [640, 512, [], "f44c", ["M628 0h-67.3a11.57 11.57 0 0 0-8.4 3.6L479 76.9 592 190l44.5-44.6a12.3 12.3 0 0 0 3.5-8.5V12a12 12 0 0 0-12-12zM480.2 320a96 96 0 1 0 95.9 96 95.94 95.94 0 0 0-95.9-96z", "M0 319.2a190.68 190.68 0 0 1 56.2-135.8 79.94 79.94 0 0 1 113 113.1c-29.8 29.9 15.2 75.2 45.2 45.3l230.7-231 113 113.1-50.8 50.8c-99.6-19.1-187.4 68-168.1 168.5-14.9 14.8-61.3 68-147.4 68-106.2 0-191.8-86-191.8-192z"]]
};
exports.faFieldHockey = faFieldHockey;
var faFighterJet = {
  prefix: 'fad',
  iconName: 'fighter-jet',
  icon: [640, 512, [], "f0fb", ["M168 192h176L227.16 44h39.51c11.66 0 21.33-2.62 21.33-6s-9.67-6-21.33-6H152v12h16zm0 128v148h-16v12h114.67c11.66 0 21.33-2.62 21.33-6s-9.67-6-21.33-6h-39.51L344 320z", "M640 256c0 5.42 0 10.67-96 32l-128 16-48 16H106.67l-53.34 64H18.67L8 373.33V304h8v-16h48v-2.67l-64-8v-42.66l64-8V224H16v-16H8v-69.33L18.67 128h34.66l53.34 64H368l48 16 128 16c96 21.33 96 26.58 96 32z"]]
};
exports.faFighterJet = faFighterJet;
var faFile = {
  prefix: 'fad',
  iconName: 'file',
  icon: [384, 512, [], "f15b", ["M256 0H24A23.94 23.94 0 0 0 0 23.88V488a23.94 23.94 0 0 0 23.88 24H360a23.94 23.94 0 0 0 24-23.88V128H272a16 16 0 0 1-16-16z", "M384 121.9v6.1H272a16 16 0 0 1-16-16V0h6.1a24 24 0 0 1 17 7l97.9 98a23.9 23.9 0 0 1 7 16.9z"]]
};
exports.faFile = faFile;
var faFileAlt = {
  prefix: 'fad',
  iconName: 'file-alt',
  icon: [384, 512, [], "f15c", ["M384 128H272a16 16 0 0 1-16-16V0H24A23.94 23.94 0 0 0 0 23.88V488a23.94 23.94 0 0 0 23.88 24H360a23.94 23.94 0 0 0 24-23.88V128zm-96 244a12 12 0 0 1-12 12H108a12 12 0 0 1-12-12v-8a12 12 0 0 1 12-12h168a12 12 0 0 1 12 12zm0-64a12 12 0 0 1-12 12H108a12 12 0 0 1-12-12v-8a12 12 0 0 1 12-12h168a12 12 0 0 1 12 12zm0-64a12 12 0 0 1-12 12H108a12 12 0 0 1-12-12v-8a12 12 0 0 1 12-12h168a12 12 0 0 1 12 12z", "M377 105L279.1 7a24 24 0 0 0-17-7H256v112a16 16 0 0 0 16 16h112v-6.1a23.9 23.9 0 0 0-7-16.9zM276 352H108a12 12 0 0 0-12 12v8a12 12 0 0 0 12 12h168a12 12 0 0 0 12-12v-8a12 12 0 0 0-12-12zm0-64H108a12 12 0 0 0-12 12v8a12 12 0 0 0 12 12h168a12 12 0 0 0 12-12v-8a12 12 0 0 0-12-12zm0-64H108a12 12 0 0 0-12 12v8a12 12 0 0 0 12 12h168a12 12 0 0 0 12-12v-8a12 12 0 0 0-12-12z"]]
};
exports.faFileAlt = faFileAlt;
var faFileArchive = {
  prefix: 'fad',
  iconName: 'file-archive',
  icon: [384, 512, [], "f1c6", ["M272 128a16 16 0 0 1-16-16V0h-96v32h-32V0H24A23.94 23.94 0 0 0 0 23.88V488a23.94 23.94 0 0 0 23.88 24H360a23.94 23.94 0 0 0 24-23.88V128zM95.9 32h32v32h-32zm83.47 342.08a52.43 52.43 0 1 1-102.74-21L96 256v-32h32v-32H96v-32h32v-32H96V96h32V64h32v32h-32v32h32v32h-32v32h32v32h-32v32h22.33a12.08 12.08 0 0 1 11.8 9.7l17.3 87.7a52.54 52.54 0 0 1-.06 20.68z", "M377 105L279.1 7a24 24 0 0 0-17-7H256v112a16 16 0 0 0 16 16h112v-6.1a23.9 23.9 0 0 0-7-16.9zM127.9 32h-32v32h32zM96 160v32h32v-32zM160 0h-32v32h32zM96 96v32h32V96zm83.43 257.4l-17.3-87.7a12.08 12.08 0 0 0-11.8-9.7H128v-32H96v32l-19.37 97.1a52.43 52.43 0 1 0 102.8.3zm-51.1 36.6c-17.9 0-32.5-12-32.5-27s14.5-27 32.4-27 32.5 12.1 32.5 27-14.5 27-32.4 27zM160 192h-32v32h32zm0-64h-32v32h32zm0-64h-32v32h32z"]]
};
exports.faFileArchive = faFileArchive;
var faFileAudio = {
  prefix: 'fad',
  iconName: 'file-audio',
  icon: [384, 512, [], "f1c7", ["M384 128H272a16 16 0 0 1-16-16V0H24A23.94 23.94 0 0 0 0 23.88V488a23.94 23.94 0 0 0 23.88 24H360a23.94 23.94 0 0 0 24-23.88V128zM160 404a12 12 0 0 1-20.5 8.5L104 376H76a12 12 0 0 1-12-12v-56a12 12 0 0 1 12-12h28l35.5-36.48A12 12 0 0 1 160 268zm33.24-51.13a24.05 24.05 0 0 0 0-33.57c-22.08-22.91 12.2-56.48 34.38-33.66a72.64 72.64 0 0 1 0 100.9c-21.78 22.38-56.86-10.48-34.38-33.7zm86.2 83.66c-21.67 22.4-56.66-10.31-34.19-33.52a96.39 96.39 0 0 0 0-133.85c-22-22.81 12.22-56.32 34.19-33.51 54.08 55.87 54.08 144.94 0 200.85z", "M377 105L279.1 7a24 24 0 0 0-17-7H256v112a16 16 0 0 0 16 16h112v-6.1a23.9 23.9 0 0 0-7-16.9zM148 256a12 12 0 0 0-8.53 3.53L104 296H76a12 12 0 0 0-12 12v56a12 12 0 0 0 12 12h28l35.5 36.48A12 12 0 0 0 160 404V268a12 12 0 0 0-12-12zm79.59 29.61c-22.18-22.82-56.46 10.75-34.38 33.66a24.05 24.05 0 0 1 0 33.57c-22.48 23.22 12.6 56.08 34.38 33.67a72.64 72.64 0 0 0 .03-100.9zm51.82-50c-22-22.81-56.16 10.7-34.19 33.51a96.39 96.39 0 0 1 0 133.85c-22.47 23.21 12.52 55.92 34.19 33.52 54.08-55.91 54.08-145 0-200.88z"]]
};
exports.faFileAudio = faFileAudio;
var faFileCertificate = {
  prefix: 'fad',
  iconName: 'file-certificate',
  icon: [512, 512, [], "f5f3", ["M512 128v360.12A23.94 23.94 0 0 1 488 512H224v-91.19a61.78 61.78 0 0 0 35.49-41.11c.38-1.42.72-2.72 1-3.94.66-2.56 1.4-5.39 1.89-7 1.14-1.23 3.12-3.24 4.92-5.06l2.91-2.94A62.5 62.5 0 0 0 286 301.38c-.37-1.41-.72-2.71-1-3.92-.69-2.61-1.46-5.5-1.84-7.16.38-1.68 1.16-4.6 1.86-7.25.31-1.18.65-2.45 1-3.83a62.45 62.45 0 0 0-15.63-59.28l-2.76-2.81c-1.85-1.88-3.9-3.95-5.05-5.2-.49-1.64-1.23-4.51-1.91-7.1q-.47-1.8-1-3.9a61.69 61.69 0 0 0-43.13-43.7h-.11l-3.75-1c-2.44-.66-5.13-1.39-6.75-1.88-1.23-1.18-3.22-3.21-5-5.05-.84-.86-1.73-1.78-2.71-2.77a60.88 60.88 0 0 0-59.47-16.31h-.05l-3.77 1c-2.4.66-5 1.39-6.69 1.79V23.88A23.94 23.94 0 0 1 152 0h232v112a16 16 0 0 0 16 16z", "M505 105L407.1 7a24 24 0 0 0-17-7H384v112a16 16 0 0 0 16 16h112v-6.1a23.9 23.9 0 0 0-7-16.9zM255 271.09a30.14 30.14 0 0 0-7.58-28.79c-14.86-15.12-13.42-12.61-18.86-33.3a29.57 29.57 0 0 0-20.71-21c-20.28-5.53-17.84-4.1-32.69-19.21a28.92 28.92 0 0 0-28.28-7.79c-20.32 5.54-17.46 5.53-37.75 0a28.94 28.94 0 0 0-28.28 7.71c-14.91 15.18-12.5 13.7-32.68 19.21A29.53 29.53 0 0 0 27.46 209c-5.46 20.74-4 18.13-18.87 33.27A30.15 30.15 0 0 0 1 271.09c5.45 20.71 5.42 17.79 0 38.41a30.12 30.12 0 0 0 7.58 28.78c14.86 15.11 13.42 12.61 18.88 33.27a29.52 29.52 0 0 0 20.71 21.07c14.3 3.9 11.52 3 15.83 5V512l64-32 64 32V397.63c4.31-2 1.52-1.1 15.84-5a29.53 29.53 0 0 0 20.7-21.07c5.47-20.74 4-18.13 18.88-33.27a30.12 30.12 0 0 0 7.58-28.78c-5.43-20.65-5.44-17.74 0-38.42zM128 352a64 64 0 1 1 64-64 64 64 0 0 1-64 64z"]]
};
exports.faFileCertificate = faFileCertificate;
var faFileChartLine = {
  prefix: 'fad',
  iconName: 'file-chart-line',
  icon: [384, 512, [], "f659", ["M272 128a16 16 0 0 1-16-16V0H24A23.94 23.94 0 0 0 0 23.88V488a23.94 23.94 0 0 0 23.88 24H360a23.94 23.94 0 0 0 24-23.88V128zM128 435.2c0 6.4-6.4 12.8-12.8 12.8H76.8c-6.4 0-12.8-6.4-12.8-12.8v-70.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8zm96 0c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8V236.8c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8zm96 0c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8V300.8c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8z", "M377 105L279.1 7a24 24 0 0 0-17-7H256v112a16 16 0 0 0 16 16h112v-6.1a23.9 23.9 0 0 0-7-16.9zM115.2 352H76.8c-6.4 0-12.8 6.4-12.8 12.8v70.4c0 6.4 6.4 12.8 12.8 12.8h38.4c6.4 0 12.8-6.4 12.8-12.8v-70.4c0-6.4-6.4-12.8-12.8-12.8zm96-128h-38.4c-6.4 0-12.8 6.4-12.8 12.8v198.4c0 6.4 6.4 12.8 12.8 12.8h38.4c6.4 0 12.8-6.4 12.8-12.8V236.8c0-6.4-6.4-12.8-12.8-12.8zm96 64h-38.4c-6.4 0-12.8 6.4-12.8 12.8v134.4c0 6.4 6.4 12.8 12.8 12.8h38.4c6.4 0 12.8-6.4 12.8-12.8V300.8c0-6.4-6.4-12.8-12.8-12.8z"]]
};
exports.faFileChartLine = faFileChartLine;
var faFileChartPie = {
  prefix: 'fad',
  iconName: 'file-chart-pie',
  icon: [384, 512, [], "f65a", ["M384 128H272a16 16 0 0 1-16-16V0H24A23.94 23.94 0 0 0 0 23.88V488a23.94 23.94 0 0 0 23.88 24H360a23.94 23.94 0 0 0 24-23.88V128zM136.47 438.5a111.26 111.26 0 0 1-63-63c-30-77.36 17.44-150.7 86.53-164.84V352h141.34c-14.14 69.09-87.48 116.58-164.87 86.5zM192 320V199.86A120.12 120.12 0 0 1 312.14 320z", "M377 105L279.1 7a24 24 0 0 0-17-7H256v112a16 16 0 0 0 16 16h112v-6.1a23.9 23.9 0 0 0-7-16.9zM160 210.66C90.91 224.8 43.42 298.14 73.47 375.5a111.26 111.26 0 0 0 63 63c77.39 30.08 150.73-17.41 164.87-86.5H160z"]]
};
exports.faFileChartPie = faFileChartPie;
var faFileCheck = {
  prefix: 'fad',
  iconName: 'file-check',
  icon: [384, 512, [], "f316", ["M384 128H272a16 16 0 0 1-16-16V0H24A23.94 23.94 0 0 0 0 23.88V488a23.94 23.94 0 0 0 23.88 24H360a23.94 23.94 0 0 0 24-23.88V128zm-70.7 158.67l-143 141.81a12 12 0 0 1-17 0l-82.6-83.31a12 12 0 0 1 .07-17L99.17 300a12 12 0 0 1 17 0l46 46.35 106-105.18a12 12 0 0 1 17 0l28.17 28.4a12 12 0 0 1-.04 17.1z", "M285.17 241.3a12 12 0 0 0-17 0l-106 105.18-46-46.35a12 12 0 0 0-17 0l-28.4 28.2a12 12 0 0 0-.07 17l82.57 83.27a12 12 0 0 0 17 0l143-141.81a12 12 0 0 0 0-17zM377 105L279.1 7a24 24 0 0 0-17-7H256v112a16 16 0 0 0 16 16h112v-6.1a23.9 23.9 0 0 0-7-16.9z"]]
};
exports.faFileCheck = faFileCheck;
var faFileCode = {
  prefix: 'fad',
  iconName: 'file-code',
  icon: [384, 512, [], "f1c9", ["M384 128H272a16 16 0 0 1-16-16V0H24A23.94 23.94 0 0 0 0 23.88V488a23.94 23.94 0 0 0 23.88 24H360a23.94 23.94 0 0 0 24-23.88V128zM141.79 379.54l-19.58 20.84a5.41 5.41 0 0 1-7.64.24l-64.86-60.69a5.37 5.37 0 0 1-.24-7.6l.25-.25 64.86-60.7a5.42 5.42 0 0 1 7.64.24l19.58 20.85a5.4 5.4 0 0 1-.25 7.62l-.13.12L100.65 336l40.76 35.8a5.4 5.4 0 0 1 .49 7.62zm31.71 71.25l-27.45-8a5.38 5.38 0 0 1-3.67-6.67l61.49-211.24a5.38 5.38 0 0 1 6.68-3.64l27.45 8a5.4 5.4 0 0 1 3.63 6.67l-61.45 211.2a5.4 5.4 0 0 1-6.68 3.68zm161-111.12l-.25.25-64.86 60.69a5.42 5.42 0 0 1-7.64-.23l-19.58-20.84a5.37 5.37 0 0 1 .26-7.6l.13-.12L283.35 336l-40.76-35.8a5.4 5.4 0 0 1-.49-7.62l.11-.12 19.58-20.85a5.42 5.42 0 0 1 7.64-.24l64.86 60.7a5.36 5.36 0 0 1 .25 7.6z", "M377 105L279.1 7a24 24 0 0 0-17-7H256v112a16 16 0 0 0 16 16h112v-6.1a23.9 23.9 0 0 0-7-16.9zM141.41 371.8L100.65 336l40.76-35.8.13-.12a5.4 5.4 0 0 0 .25-7.62l-19.58-20.85a5.42 5.42 0 0 0-7.64-.24l-64.86 60.7-.25.25a5.37 5.37 0 0 0 .24 7.6l64.86 60.69a5.41 5.41 0 0 0 7.64-.24l19.58-20.84.11-.12a5.4 5.4 0 0 0-.48-7.61zm100.22-135.93a5.4 5.4 0 0 0-3.63-6.67l-27.45-8a5.38 5.38 0 0 0-6.68 3.64l-61.5 211.29a5.38 5.38 0 0 0 3.63 6.67l27.45 8a5.4 5.4 0 0 0 6.68-3.68l61.44-211.22zm92.66 96.2l-64.86-60.7a5.42 5.42 0 0 0-7.64.24l-19.58 20.85-.11.12a5.4 5.4 0 0 0 .49 7.62l40.76 35.8-40.76 35.8-.13.12a5.37 5.37 0 0 0-.26 7.6l19.58 20.84a5.42 5.42 0 0 0 7.64.23l64.86-60.69.25-.25a5.36 5.36 0 0 0-.25-7.6z"]]
};
exports.faFileCode = faFileCode;
var faFileContract = {
  prefix: 'fad',
  iconName: 'file-contract',
  icon: [384, 512, [], "f56c", ["M384 128H272a16 16 0 0 1-16-16V0H24A23.94 23.94 0 0 0 0 23.88V488a23.94 23.94 0 0 0 23.88 24H360a23.94 23.94 0 0 0 24-23.88V128zM64 72a8 8 0 0 1 8-8h80a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H72a8 8 0 0 1-8-8zm0 64a8 8 0 0 1 8-8h80a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H72a8 8 0 0 1-8-8zm240 280h-47.19a43 43 0 0 1-38.64-23.86 11.08 11.08 0 0 0-10.17-6.52 10.91 10.91 0 0 0-10 6.19l-7.67 15.34A16 16 0 0 1 176 416a8.77 8.77 0 0 1-1.14-.05 16 16 0 0 1-14-10.89L144 354.59l-10.61 31.88a43.17 43.17 0 0 1-41 29.53H80a16 16 0 0 1 0-32h12.39a11.21 11.21 0 0 0 10.61-7.66l18.19-54.64a24 24 0 0 1 45.55 0l13.88 41.64c19.8-16.19 54.08-9.7 66 14.16a11.39 11.39 0 0 0 10.16 6.5H304a16 16 0 0 1 0 32z", "M377 105L279.1 7a24 24 0 0 0-17-7H256v112a16 16 0 0 0 16 16h112v-6.1a23.9 23.9 0 0 0-7-16.9zm-73 279h-47.19a11.39 11.39 0 0 1-10.16-6.5c-12-23.86-46.23-30.35-66-14.16l-13.91-41.64a24 24 0 0 0-45.55 0L103 376.34A11.21 11.21 0 0 1 92.39 384H80a16 16 0 0 0 0 32h12.39a43.17 43.17 0 0 0 41-29.53L144 354.59l16.86 50.47a16 16 0 0 0 14 10.89 8.77 8.77 0 0 0 1.14.05 16 16 0 0 0 14.33-8.85l7.67-15.34a10.91 10.91 0 0 1 10-6.19 11.08 11.08 0 0 1 10.17 6.52A43 43 0 0 0 256.81 416H304a16 16 0 0 0 0-32z"]]
};
exports.faFileContract = faFileContract;
var faFileCsv = {
  prefix: 'fad',
  iconName: 'file-csv',
  icon: [384, 512, [], "f6dd", ["M384 128H272a16 16 0 0 1-16-16V0H24A23.94 23.94 0 0 0 0 23.88V488a23.94 23.94 0 0 0 23.88 24H360a23.94 23.94 0 0 0 24-23.88V128zM128 280a8 8 0 0 1-8 8h-8a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h8a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8h-8a48 48 0 0 1-48-48v-32a48 48 0 0 1 48-48h8a8 8 0 0 1 8 8zm44.27 104H160a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h12.27c5.95 0 10.41-3.5 10.41-6.62a5.28 5.28 0 0 0-2.12-3.84l-21.89-18.77a37.11 37.11 0 0 1-13.33-28.14c0-21.3 19-38.62 42.41-38.62H200a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8h-12.27c-5.95 0-10.41 3.5-10.41 6.62a5.28 5.28 0 0 0 2.12 3.84l21.89 18.77a37.12 37.12 0 0 1 13.33 28.13c.01 21.29-19 38.63-42.39 38.63zM320 284.8c0 35.48-12.88 68.89-36.28 94.09-.27.29-.54.56-.83.83a16 16 0 0 1-22.61-.83c-23.4-25.2-36.28-58.61-36.28-94.09V264a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v20.8a109 109 0 0 0 16 56.88 109 109 0 0 0 16-56.88V264a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8z", "M377 105L279.1 7a24 24 0 0 0-17-7H256v112a16 16 0 0 0 16 16h112v-6.1a23.9 23.9 0 0 0-7-16.9zM120 256h-8a48 48 0 0 0-48 48v32a48 48 0 0 0 48 48h8a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8h-8a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h8a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8zm192 0h-16a8 8 0 0 0-8 8v20.8a109 109 0 0 1-16 56.88 109 109 0 0 1-16-56.88V264a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v20.8c0 35.48 12.88 68.89 36.28 94.09a16 16 0 0 0 22.61.83c.29-.27.56-.54.83-.83 23.4-25.2 36.28-58.61 36.28-94.09V264a8 8 0 0 0-8-8zm-110.67 61.24l-21.89-18.77a5.28 5.28 0 0 1-2.12-3.84c0-3.12 4.46-6.62 10.41-6.62H200a8 8 0 0 0 8-8V264a8 8 0 0 0-8-8h-12.25c-23.39 0-42.41 17.32-42.41 38.62a37.11 37.11 0 0 0 13.33 28.14l21.89 18.77a5.28 5.28 0 0 1 2.12 3.84c0 3.12-4.46 6.62-10.41 6.62H160a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h12.27c23.39 0 42.4-17.33 42.39-38.62a37.12 37.12 0 0 0-13.33-28.13z"]]
};
exports.faFileCsv = faFileCsv;
var faFileDownload = {
  prefix: 'fad',
  iconName: 'file-download',
  icon: [384, 512, [], "f56d", ["M384 128H272a16 16 0 0 1-16-16V0H24A23.94 23.94 0 0 0 0 23.88V488a23.94 23.94 0 0 0 23.88 24H360a23.94 23.94 0 0 0 24-23.88V128zm-83.55 219.36L204 443.06a17.06 17.06 0 0 1-24 0l-96.42-95.7C73.42 337.29 80.54 320 94.82 320H160v-80a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16v80h65.18c14.28 0 21.4 17.29 11.27 27.36z", "M377 105L279.1 7a24 24 0 0 0-17-7H256v112a16 16 0 0 0 16 16h112v-6.1a23.9 23.9 0 0 0-7-16.9zm-87.82 215H224v-80a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v80H94.82c-14.28 0-21.4 17.29-11.24 27.36l96.42 95.7a17.06 17.06 0 0 0 24 0l96.45-95.7c10.13-10.07 3.01-27.36-11.27-27.36z"]]
};
exports.faFileDownload = faFileDownload;
var faFileEdit = {
  prefix: 'fad',
  iconName: 'file-edit',
  icon: [384, 512, [], "f31c", ["M384 128H272a16 16 0 0 1-16-16V0H24A23.94 23.94 0 0 0 0 23.88V488a23.94 23.94 0 0 0 23.88 24H360a23.94 23.94 0 0 0 24-23.88V128zM242.4 323.6l-95 95-48.2 5.4a9.93 9.93 0 0 1-2.2 0 10.17 10.17 0 0 1-9-11.2l5.4-48.2 95-95a5.07 5.07 0 0 1 7.17 0l46.8 46.8a5.07 5.07 0 0 1 .03 7.2zm55.7-55.7l-26 26a5.07 5.07 0 0 1-7.17 0l-46.8-46.8a5.07 5.07 0 0 1 0-7.17l26-26a20.22 20.22 0 0 1 28.6 0l25.4 25.4a20.22 20.22 0 0 1-.03 28.57z", "M377 105L279.1 7a24 24 0 0 0-17-7H256v112a16 16 0 0 0 16 16h112v-6.1a23.9 23.9 0 0 0-7-16.9zM242.4 316.4l-46.8-46.8a5.07 5.07 0 0 0-7.17 0l-95 95L88 412.8a10.17 10.17 0 0 0 9 11.2 9.93 9.93 0 0 0 2.18 0l48.2-5.4 95-95a5.07 5.07 0 0 0 0-7.17zm55.7-77.1l-25.4-25.4a20.22 20.22 0 0 0-28.6 0l-26 26a5.07 5.07 0 0 0 0 7.17l46.8 46.8a5.07 5.07 0 0 0 7.17 0l26-26a20.22 20.22 0 0 0 0-28.6z"]]
};
exports.faFileEdit = faFileEdit;
var faFileExcel = {
  prefix: 'fad',
  iconName: 'file-excel',
  icon: [384, 512, [], "f1c3", ["M384 128H272a16 16 0 0 1-16-16V0H24A23.94 23.94 0 0 0 0 23.88V488a23.94 23.94 0 0 0 23.88 24H360a23.94 23.94 0 0 0 24-23.88V128zM280.51 446.09A12 12 0 0 1 274 448h-34.9a12 12 0 0 1-10.6-6.3C208.9 405.5 192 373 192 373c-6.4 14.8-10 20-36.6 68.8a11.89 11.89 0 0 1-10.5 6.3H110a12 12 0 0 1-10.1-18.5l60.3-93.5-60.3-93.5a12 12 0 0 1 10.1-18.5h34.8a12 12 0 0 1 10.6 6.3c26.1 48.8 20 33.6 36.6 68.5 0 0 6.1-11.7 36.6-68.5a12 12 0 0 1 10.6-6.3H274a11.93 11.93 0 0 1 10.1 18.4L224 336l60.1 93.5a12 12 0 0 1-3.59 16.59z", "M377 105L279.1 7a24 24 0 0 0-17-7H256v112a16 16 0 0 0 16 16h112v-6.1a23.9 23.9 0 0 0-7-16.9zM224 336l60.1-93.5a11.93 11.93 0 0 0-10.1-18.4h-34.8a12 12 0 0 0-10.6 6.3c-30.5 56.8-36.6 68.5-36.6 68.5-16.6-34.9-10.5-19.7-36.6-68.5a12 12 0 0 0-10.6-6.3H110a12 12 0 0 0-10.1 18.5l60.3 93.5-60.3 93.5a12 12 0 0 0 10.1 18.5h34.9a11.89 11.89 0 0 0 10.5-6.3c26.6-48.8 30.2-54 36.6-68.8 0 0 16.9 32.5 36.5 68.7a12 12 0 0 0 10.6 6.3H274a12 12 0 0 0 10.1-18.5z"]]
};
exports.faFileExcel = faFileExcel;
var faFileExclamation = {
  prefix: 'fad',
  iconName: 'file-exclamation',
  icon: [384, 512, [], "f31a", ["M384 128H272a16 16 0 0 1-16-16V0H24A23.94 23.94 0 0 0 0 23.88V488a23.94 23.94 0 0 0 23.88 24H360a23.94 23.94 0 0 0 24-23.88V128zm-219.2 80h55.23a12 12 0 0 1 11.17 12.8l-7.2 112a12 12 0 0 1-12 11.2h-40a12 12 0 0 1-12-11.2l-7.2-112v-.83a12 12 0 0 1 12-11.97zM192 440a40 40 0 1 1 40-40 40 40 0 0 1-40 40z", "M377 105L279.1 7a24 24 0 0 0-17-7H256v112a16 16 0 0 0 16 16h112v-6.1a23.9 23.9 0 0 0-7-16.9zM160 332.8a12 12 0 0 0 12 11.2h40a12 12 0 0 0 12-11.2l7.2-112A12 12 0 0 0 220 208h-55.2a12 12 0 0 0-12 12v.83zm32 27.2a40 40 0 1 0 40 40 40 40 0 0 0-40-40z"]]
};
exports.faFileExclamation = faFileExclamation;
var faFileExport = {
  prefix: 'fad',
  iconName: 'file-export',
  icon: [576, 512, [], "f56e", ["M384 352.05v136.07A23.94 23.94 0 0 1 360 512H23.88A23.94 23.94 0 0 1 0 488V23.88A23.94 23.94 0 0 1 24 0h232v112a16 16 0 0 0 16 16h112v160.05H208a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16z", "M272 128h112v-6.1a23.9 23.9 0 0 0-7-16.9L279.1 7a24 24 0 0 0-17-7H256v112a16 16 0 0 0 16 16zm299 180.05l-95.61-96.5c-10.1-10.1-27.41-3-27.41 11.3v65.2H208a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h239.93v65.1c0 14.3 17.31 21.4 27.41 11.3l95.71-96.4a17 17 0 0 0-.05-24z"]]
};
exports.faFileExport = faFileExport;
var faFileImage = {
  prefix: 'fad',
  iconName: 'file-image',
  icon: [384, 512, [], "f1c5", ["M384 128H272a16 16 0 0 1-16-16V0H24A23.94 23.94 0 0 0 0 23.88V488a23.94 23.94 0 0 0 23.88 24H360a23.94 23.94 0 0 0 24-23.88V128zm-271.46 48a48 48 0 1 1-48 48 48 48 0 0 1 48-48zm208 240h-256l.46-48.48L104.51 328c4.69-4.69 11.8-4.2 16.49.48L160.54 368 264 264.48a12 12 0 0 1 17 0L320.54 304z", "M377 105L279.1 7a24 24 0 0 0-17-7H256v112a16 16 0 0 0 16 16h112v-6.1a23.9 23.9 0 0 0-7-16.9zM112.54 272a48 48 0 1 0-48-48 48 48 0 0 0 48 48zM264 264.45L160.54 368 121 328.48c-4.69-4.68-11.8-5.17-16.49-.48L65 367.52 64.54 416h256V304L281 264.48a12 12 0 0 0-17-.03z"]]
};
exports.faFileImage = faFileImage;
var faFileImport = {
  prefix: 'fad',
  iconName: 'file-import',
  icon: [512, 512, [], "f56f", ["M512 488v.12A23.94 23.94 0 0 1 488 512H151.88A23.94 23.94 0 0 1 128 488V352h127.63v64.9c0 14.27 17.28 21.34 27.37 11.27L378.56 332a17 17 0 0 0 0-23.93l-95.49-96.25c-10.09-10.07-27.37-3-27.37 11.27v65H128V23.88A23.94 23.94 0 0 1 152 0h232v112a16 16 0 0 0 16 16h112z", "M505 105L407.1 7a24 24 0 0 0-17-7H384v112a16 16 0 0 0 16 16h112v-6.1a23.9 23.9 0 0 0-7-16.9zM283.07 211.82c-10.09-10.07-27.37-3-27.37 11.27v65H16a16 16 0 0 0-16 16V336a16 16 0 0 0 16 16h239.63v64.9c0 14.27 17.28 21.34 27.37 11.27L378.56 332a17 17 0 0 0 0-23.93z"]]
};
exports.faFileImport = faFileImport;
var faFileInvoice = {
  prefix: 'fad',
  iconName: 'file-invoice',
  icon: [384, 512, [], "f570", ["M96 320h192v-64H96zm288-192H272a16 16 0 0 1-16-16V0H24A23.94 23.94 0 0 0 0 23.88V488a23.94 23.94 0 0 0 23.88 24H360a23.94 23.94 0 0 0 24-23.88V128zM64 72a8 8 0 0 1 8-8h80a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H72a8 8 0 0 1-8-8zm0 64a8 8 0 0 1 8-8h80a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H72a8 8 0 0 1-8-8zm256 304a8 8 0 0 1-8 8h-80a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h80a8 8 0 0 1 8 8zm0-104a16 16 0 0 1-16 16H80a16 16 0 0 1-16-16v-96a16 16 0 0 1 16-16h224a16 16 0 0 1 16 16z", "M377 105L279.1 7a24 24 0 0 0-17-7H256v112a16 16 0 0 0 16 16h112v-6.1a23.9 23.9 0 0 0-7-16.9zm-73 119H80a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16h224a16 16 0 0 0 16-16v-96a16 16 0 0 0-16-16zm-16 96H96v-64h192zm24 96h-80a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8z"]]
};
exports.faFileInvoice = faFileInvoice;
var faFileInvoiceDollar = {
  prefix: 'fad',
  iconName: 'file-invoice-dollar',
  icon: [384, 512, [], "f571", ["M384 128H272a16 16 0 0 1-16-16V0H24A23.94 23.94 0 0 0 0 23.88V488a23.94 23.94 0 0 0 23.88 24H360a23.94 23.94 0 0 0 24-23.88V128zM64 72a8 8 0 0 1 8-8h80a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H72a8 8 0 0 1-8-8zm0 80v-16a8 8 0 0 1 8-8h80a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H72a8 8 0 0 1-8-8zm144 263.88V440a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8v-24.29a57.32 57.32 0 0 1-31.37-11.35 8 8 0 0 1-.57-12.14L155.81 381a8.22 8.22 0 0 1 10.13-.73 24.06 24.06 0 0 0 12.82 3.73h28.11c6.5 0 11.8-5.92 11.8-13.19 0-5.95-3.61-11.19-8.77-12.73l-45-13.5c-18.59-5.58-31.58-23.42-31.58-43.39 0-24.52 19.05-44.44 42.67-45.07V232a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v24.29a57.17 57.17 0 0 1 31.37 11.35 8 8 0 0 1 .57 12.14L228.18 291a8.22 8.22 0 0 1-10.13.73 24 24 0 0 0-12.82-3.73h-28.11c-6.5 0-11.8 5.92-11.8 13.19 0 5.95 3.61 11.19 8.77 12.73l45 13.5c18.59 5.58 31.58 23.42 31.58 43.39 0 24.53-19 44.44-42.67 45.07z", "M377 105L279.1 7a24 24 0 0 0-17-7H256v112a16 16 0 0 0 16 16h112v-6.1a23.9 23.9 0 0 0-7-16.9zM219.09 327.42l-45-13.5c-5.16-1.54-8.77-6.78-8.77-12.73 0-7.27 5.3-13.19 11.8-13.19h28.11a24 24 0 0 1 12.82 3.73 8.22 8.22 0 0 0 10.13-.73l11.76-11.22a8 8 0 0 0-.57-12.14A57.17 57.17 0 0 0 208 256.29V232a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v24.12c-23.62.63-42.67 20.55-42.67 45.07 0 20 13 37.81 31.58 43.39l45 13.5c5.16 1.54 8.77 6.78 8.77 12.73 0 7.27-5.3 13.19-11.8 13.19h-28.12a24.06 24.06 0 0 1-12.82-3.73 8.22 8.22 0 0 0-10.13.73l-11.75 11.22a8 8 0 0 0 .57 12.14A57.32 57.32 0 0 0 176 415.71V440a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-24.12c23.67-.63 42.67-20.54 42.67-45.07 0-19.97-12.99-37.81-31.58-43.39z"]]
};
exports.faFileInvoiceDollar = faFileInvoiceDollar;
var faFileMedical = {
  prefix: 'fad',
  iconName: 'file-medical',
  icon: [384, 512, [], "f477", ["M384 128H272a16 16 0 0 1-16-16V0H24A23.94 23.94 0 0 0 0 23.88V488a23.94 23.94 0 0 0 23.88 24H360a23.94 23.94 0 0 0 24-23.88V128zm-96 216a8 8 0 0 1-8 8h-56v56a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8v-56h-56a8 8 0 0 1-8-8v-48a8 8 0 0 1 8-8h56v-56a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v56h56a8 8 0 0 1 8 8z", "M377 105L279.1 7a24 24 0 0 0-17-7H256v112a16 16 0 0 0 16 16h112v-6.1a23.9 23.9 0 0 0-7-16.9zm-97 183h-56v-56a8 8 0 0 0-8-8h-48a8 8 0 0 0-8 8v56h-56a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8h56v56a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8v-56h56a8 8 0 0 0 8-8v-48a8 8 0 0 0-8-8z"]]
};
exports.faFileMedical = faFileMedical;
var faFileMedicalAlt = {
  prefix: 'fad',
  iconName: 'file-medical-alt',
  icon: [448, 512, [], "f478", ["M448 488v.12A23.94 23.94 0 0 1 424 512H87.88A23.94 23.94 0 0 1 64 488V320h70.1l34.8 69.5a8 8 0 0 0 14.3 0L240 275.8l22.1 44.2h89.48a16.27 16.27 0 0 0 16.3-14 16.82 16.82 0 0 0 .13-2 16 16 0 0 0-16-16H281.8l-34.7-69.5a8 8 0 0 0-14.3 0L176 332.2l-19.9-39.8a8.14 8.14 0 0 0-7.2-4.4H64V23.88A23.94 23.94 0 0 1 88 0h232v112a16 16 0 0 0 16 16h112z", "M441 105L343.1 7a24 24 0 0 0-17-7H320v112a16 16 0 0 0 16 16h112v-6.1a23.9 23.9 0 0 0-7-16.9zm-89 183h-70.2l-34.7-69.5a8 8 0 0 0-14.3 0L176 332.2l-19.9-39.8a8.14 8.14 0 0 0-7.2-4.4H8a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h126.1l34.8 69.5a8 8 0 0 0 14.3 0L240 275.8l22.1 44.2h89.48a16.27 16.27 0 0 0 16.3-14 16.82 16.82 0 0 0 .13-2A16 16 0 0 0 352 288z"]]
};
exports.faFileMedicalAlt = faFileMedicalAlt;
var faFileMinus = {
  prefix: 'fad',
  iconName: 'file-minus',
  icon: [384, 512, [], "f318", ["M384 128H272a16 16 0 0 1-16-16V0H24A23.94 23.94 0 0 0 0 23.88V488a23.94 23.94 0 0 0 23.88 24H360a23.94 23.94 0 0 0 24-23.88V128zm-88 212a12 12 0 0 1-12 12H100a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h184a12 12 0 0 1 12 12z", "M377 105L279.1 7a24 24 0 0 0-17-7H256v112a16 16 0 0 0 16 16h112v-6.1a23.9 23.9 0 0 0-7-16.9zm-93 183H100a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h184a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12z"]]
};
exports.faFileMinus = faFileMinus;
var faFileMusic = {
  prefix: 'fad',
  iconName: 'file-music',
  icon: [384, 512, [], "f8b6", ["M377 105L279.09 7a24 24 0 0 0-17-7H256v128h128v-6.09a23.91 23.91 0 0 0-7-16.91zm-153 31V0H24A23.94 23.94 0 0 0 0 24v464a23.94 23.94 0 0 0 24 24h336a23.94 23.94 0 0 0 24-24V160H248a24.08 24.08 0 0 1-24-24zm64 88v160c0 17.67-21.5 32-48 32s-48-14.33-48-32 21.5-32 48-32a69.82 69.82 0 0 1 16 2v-76.36l-96 37.52V416c0 17.67-21.5 32-48 32s-48-14.33-48-32 21.5-32 48-32a69.82 69.82 0 0 1 16 2V271.25A16 16 0 0 1 139.19 256l128-47.25A16 16 0 0 1 288 224z", "M288 224v160c0 17.67-21.5 32-48 32s-48-14.33-48-32 21.5-32 48-32a69.82 69.82 0 0 1 16 2v-76.36l-96 37.52V416c0 17.67-21.5 32-48 32s-48-14.33-48-32 21.5-32 48-32a69.82 69.82 0 0 1 16 2V271.25A16 16 0 0 1 139.19 256l128-47.25A16 16 0 0 1 288 224z"]]
};
exports.faFileMusic = faFileMusic;
var faFilePdf = {
  prefix: 'fad',
  iconName: 'file-pdf',
  icon: [384, 512, [], "f1c1", ["M86.1 428.1c0 .8 13.2-5.4 34.9-40.2-6.7 6.3-29.1 24.5-34.9 40.2zm93.8-218.9c-2.9 0-3 30.9 2 46.9 5.6-10 6.4-46.9-2-46.9zm80.2 142.1c37.1 15.8 42.8 9 42.8 9 4.1-2.7-2.5-11.9-42.8-9zm-79.9-48c-7.7 20.2-17.3 43.3-28.4 62.7 18.3-7 39-17.2 62.9-21.9-12.7-9.6-24.9-23.4-34.5-40.8zM272 128a16 16 0 0 1-16-16V0H24A23.94 23.94 0 0 0 0 23.88V488a23.94 23.94 0 0 0 23.88 24H360a23.94 23.94 0 0 0 24-23.88V128zm21.9 254.4c-16.9 0-42.3-7.7-64-19.5-24.9 4.1-53.2 14.7-79 23.2-25.4 43.8-43.2 61.8-61.1 61.8-5.5 0-15.9-3.1-21.5-10-19.1-23.5 27.4-54.1 54.5-68 .1 0 .1-.1.2-.1 12.1-21.2 29.2-58.2 40.8-85.8-8.5-32.9-13.1-58.7-8.1-77 5.4-19.7 43.1-22.6 47.8 6.8 5.4 17.6-1.7 45.7-6.2 64.2 9.4 24.8 22.7 41.6 42.7 53.8 19.3-2.5 59.7-6.4 73.6 7.2 11.5 11.4 9.5 43.4-19.7 43.4z", "M377 105L279.1 7a24 24 0 0 0-17-7H256v112a16 16 0 0 0 16 16h112v-6.1a23.9 23.9 0 0 0-7-16.9zM240 331.8c-20-12.2-33.3-29-42.7-53.8 4.5-18.5 11.6-46.6 6.2-64.2-4.7-29.4-42.4-26.5-47.8-6.8-5 18.3-.4 44.1 8.1 77-11.6 27.6-28.7 64.6-40.8 85.8-.1 0-.1.1-.2.1-27.1 13.9-73.6 44.5-54.5 68 5.6 6.9 16 10 21.5 10 17.9 0 35.7-18 61.1-61.8 25.8-8.5 54.1-19.1 79-23.2 21.7 11.8 47.1 19.5 64 19.5 29.2 0 31.2-32 19.7-43.4-13.9-13.6-54.3-9.7-73.6-7.2zM86.1 428.1c5.8-15.7 28.2-33.9 34.9-40.2-21.7 34.8-34.9 41-34.9 40.2zm93.8-218.9c8.4 0 7.6 36.9 2 46.9-5-16-4.9-46.9-2-46.9zM151.8 366c11.1-19.4 20.7-42.5 28.4-62.7 9.6 17.4 21.8 31.2 34.5 40.8-23.9 4.7-44.6 14.9-62.9 21.9zm151.1-5.7s-5.7 6.8-42.8-9c40.3-2.9 46.9 6.3 42.8 9z"]]
};
exports.faFilePdf = faFilePdf;
var faFilePlus = {
  prefix: 'fad',
  iconName: 'file-plus',
  icon: [384, 512, [], "f319", ["M384 128H272a16 16 0 0 1-16-16V0H24A23.94 23.94 0 0 0 0 23.88V488a23.94 23.94 0 0 0 23.88 24H360a23.94 23.94 0 0 0 24-23.88V128zm-88 212a12 12 0 0 1-12 12h-60v60a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-60h-60a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h60v-60a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12v60h60a12 12 0 0 1 12 12z", "M377 105L279.1 7a24 24 0 0 0-17-7H256v112a16 16 0 0 0 16 16h112v-6.1a23.9 23.9 0 0 0-7-16.9zm-93 183h-60v-60a12 12 0 0 0-12-12h-40a12 12 0 0 0-12 12v60h-60a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h60v60a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-60h60a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12z"]]
};
exports.faFilePlus = faFilePlus;
var faFilePowerpoint = {
  prefix: 'fad',
  iconName: 'file-powerpoint',
  icon: [384, 512, [], "f1c4", ["M384 128H272a16 16 0 0 1-16-16V0H24A23.94 23.94 0 0 0 0 23.88V488a23.94 23.94 0 0 0 23.88 24H360a23.94 23.94 0 0 0 24-23.88V128zM165.9 378.8V436a12 12 0 0 1-12 12h-30.8a12 12 0 0 1-12-12V236.2a12 12 0 0 1 12-12h81c44.5 0 72.9 32.8 72.9 77 0 90.3-88.8 77.6-111.1 77.6zm27.8-107.6h-27.9v60.7h26.9c9.2 0 16.2-2.9 21.1-8.5 10-11.4 9.8-33.2.2-44.1-4.8-5.4-11.5-8.1-20.3-8.1z", "M377 105L279.1 7a24 24 0 0 0-17-7H256v112a16 16 0 0 0 16 16h112v-6.1a23.9 23.9 0 0 0-7-16.9zM204.1 224.2h-81a12 12 0 0 0-12 12V436a12 12 0 0 0 12 12h30.8a12 12 0 0 0 12-12v-57.2c22.3 0 111.1 12.7 111.1-77.6 0-44.2-28.4-77-72.9-77zm9.7 99.2c-4.9 5.6-11.9 8.5-21.1 8.5h-26.9v-60.7h27.9c8.8 0 15.5 2.7 20.3 8.1 9.6 10.9 9.8 32.7-.2 44.1z"]]
};
exports.faFilePowerpoint = faFilePowerpoint;
var faFilePrescription = {
  prefix: 'fad',
  iconName: 'file-prescription',
  icon: [384, 512, [], "f572", ["M176 240h-48v32h48a16 16 0 0 0 0-32zm96-112a16 16 0 0 1-16-16V0H24A23.94 23.94 0 0 0 0 23.88V488a23.94 23.94 0 0 0 23.88 24H360a23.94 23.94 0 0 0 24-23.88V128zm32 304l-11.31 11.32a16 16 0 0 1-22.63 0L240 413.25l-30.06 30.06a16 16 0 0 1-22.63 0L176 432a16 16 0 0 1 0-22.63l30.06-30.06L146.74 320H128v48a16 16 0 0 1-16 16H96a16 16 0 0 1-16-16V208a16 16 0 0 1 16-16h80a63.8 63.8 0 0 1 30.54 119.92L240 345.38l29.9-29.9a16 16 0 0 1 22.63 0l11.31 11.31a16 16 0 0 1 0 22.63l-29.9 29.9L304 409.38a16 16 0 0 1 0 22.62z", "M377 105L279.1 7a24 24 0 0 0-17-7H256v112a16 16 0 0 0 16 16h112v-6.1a23.9 23.9 0 0 0-7-16.9zM273.94 379.32l29.9-29.9a16 16 0 0 0 0-22.63l-11.31-11.31a16 16 0 0 0-22.63 0l-29.9 29.9-33.46-33.46A63.8 63.8 0 0 0 176 192H96a16 16 0 0 0-16 16v160a16 16 0 0 0 16 16h16a16 16 0 0 0 16-16v-48h18.74l59.32 59.31L176 409.37a16 16 0 0 0 0 22.63l11.31 11.31a16 16 0 0 0 22.63 0L240 413.25l30.06 30.07a16 16 0 0 0 22.63 0L304 432a16 16 0 0 0 0-22.62zM176 272h-48v-32h48a16 16 0 0 1 0 32z"]]
};
exports.faFilePrescription = faFilePrescription;
var faFileSearch = {
  prefix: 'fad',
  iconName: 'file-search',
  icon: [640, 512, [], "f865", ["M300.59 257.71a160.1 160.1 0 0 0 83.41 209v21.45A23.94 23.94 0 0 1 360 512H23.88A23.94 23.94 0 0 1 0 488V23.88A23.94 23.94 0 0 1 24 0h232v112a16 16 0 0 0 16 16h112v45.33a160.34 160.34 0 0 0-83.41 84.38z", "M384 121.9a23.9 23.9 0 0 0-7-16.9L279.1 7a24 24 0 0 0-17-7H256v112a16 16 0 0 0 16 16h112zm251.31 340.16l-77.41-77.41A126.65 126.65 0 0 0 576 320a128 128 0 1 0-128 128c23.7 0 45.61-6.88 64.65-18.11l77.41 77.42a16 16 0 0 0 22.63 0l22.62-22.62a16 16 0 0 0 0-22.63zM448 384a64 64 0 1 1 64-64 64 64 0 0 1-64 64z"]]
};
exports.faFileSearch = faFileSearch;
var faFileSignature = {
  prefix: 'fad',
  iconName: 'file-signature',
  icon: [576, 512, [], "f573", ["M64 400a16 16 0 0 0 16 16h12.39a43.17 43.17 0 0 0 41-29.53L144 354.59l16.83 50.47c4.45 13.46 23.11 14.87 29.48 2.09l7.69-15.34a10.91 10.91 0 0 1 10-6.19 11.08 11.08 0 0 1 10.17 6.52A43 43 0 0 0 256 416h101l27-27.19v99.31A23.94 23.94 0 0 1 360 512H23.88A23.94 23.94 0 0 1 0 488V23.88A23.94 23.94 0 0 1 24 0h232v112a16 16 0 0 0 16 16h112v123.67L288 347v37h-32a11.63 11.63 0 0 1-9.35-6.5c-11.94-23.86-46.25-30.35-66-14.16l-13.88-41.64a24 24 0 0 0-45.55 0L103 376.34A11.21 11.21 0 0 1 92.39 384H80a16 16 0 0 0-16 16z", "M384 121.9a23.9 23.9 0 0 0-7-16.9L279.1 7a24 24 0 0 0-17-7H256v112a16 16 0 0 0 16 16h112zM288 347v69h69l161.67-162.78-67.88-67.88zm280.56-179.65l-31.87-31.87a25.48 25.48 0 0 0-36 0l-27.25 27.25 67.88 67.88 27.25-27.25a25.45 25.45 0 0 0-.01-36.01z"]]
};
exports.faFileSignature = faFileSignature;
var faFileSpreadsheet = {
  prefix: 'fad',
  iconName: 'file-spreadsheet',
  icon: [384, 512, [], "f65b", ["M272 128a16 16 0 0 1-16-16V0H24A23.94 23.94 0 0 0 0 23.88V488a23.94 23.94 0 0 0 23.88 24H360a23.94 23.94 0 0 0 24-23.88V128zm56 304a16 16 0 0 1-16 16H72a16 16 0 0 1-16-16V240a16 16 0 0 1 16-16h240a16 16 0 0 1 16 16z", "M377 105L279.1 7a24 24 0 0 0-17-7H256v112a16 16 0 0 0 16 16h112v-6.1a23.9 23.9 0 0 0-7-16.9zm-65 119H72a16 16 0 0 0-16 16v192a16 16 0 0 0 16 16h240a16 16 0 0 0 16-16V240a16 16 0 0 0-16-16zM136 416H88v-48h48zm0-80H88v-48h48zm80 80h-48v-48h48zm0-80h-48v-48h48zm80 80h-48v-48h48zm0-80h-48v-48h48z"]]
};
exports.faFileSpreadsheet = faFileSpreadsheet;
var faFileTimes = {
  prefix: 'fad',
  iconName: 'file-times',
  icon: [384, 512, [], "f317", ["M384 128H272a16 16 0 0 1-16-16V0H24A23.94 23.94 0 0 0 0 23.88V488a23.94 23.94 0 0 0 23.88 24H360a23.94 23.94 0 0 0 24-23.88V128zm-98.6 240.1a12 12 0 0 1 0 17l-28.3 28.3a12 12 0 0 1-17 0L192 365.3l-48.1 48.1a12 12 0 0 1-17 0l-28.3-28.3a12 12 0 0 1 0-17l48.1-48.1-48.1-48.1a12 12 0 0 1 0-17l28.3-28.3a12 12 0 0 1 17 0l48.1 48.1 48.1-48.1a12 12 0 0 1 17 0l28.3 28.3a12 12 0 0 1 0 17L237.3 320z", "M377 105L279.1 7a24 24 0 0 0-17-7H256v112a16 16 0 0 0 16 16h112v-6.1a23.9 23.9 0 0 0-7-16.9zm-91.57 166.87a12 12 0 0 0 0-17l-28.3-28.3a12 12 0 0 0-17 0L192 274.7l-48.1-48.1a12 12 0 0 0-17 0l-28.3 28.3a12 12 0 0 0 0 17l48.1 48.1-48.1 48.1a12 12 0 0 0 0 17l28.3 28.3a12 12 0 0 0 17 0l48.1-48.1 48.1 48.1a12 12 0 0 0 17 0l28.33-28.33a12 12 0 0 0 0-17L237.3 320l48.1-48.1z"]]
};
exports.faFileTimes = faFileTimes;
var faFileUpload = {
  prefix: 'fad',
  iconName: 'file-upload',
  icon: [384, 512, [], "f574", ["M384 128H272a16 16 0 0 1-16-16V0H24A23.94 23.94 0 0 0 0 23.88V488a23.94 23.94 0 0 0 23.88 24H360a23.94 23.94 0 0 0 24-23.88V128zm-94.82 224H224v80a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-80H94.82c-14.28 0-21.41-17.29-11.27-27.36L180 229a17.06 17.06 0 0 1 24 0l96.43 95.65c10.15 10.07 3 27.35-11.25 27.35z", "M377 105L279.1 7a24 24 0 0 0-17-7H256v112a16 16 0 0 0 16 16h112v-6.1a23.9 23.9 0 0 0-7-16.9zM204 229a17.06 17.06 0 0 0-24 0l-96.45 95.64C73.41 334.71 80.54 352 94.82 352H160v80a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-80h65.18c14.25 0 21.4-17.29 11.25-27.36z"]]
};
exports.faFileUpload = faFileUpload;
var faFileUser = {
  prefix: 'fad',
  iconName: 'file-user',
  icon: [384, 512, [], "f65c", ["M384 128H272a16 16 0 0 1-16-16V0H24A23.94 23.94 0 0 0 0 23.88V488a23.94 23.94 0 0 0 23.88 24H360a23.94 23.94 0 0 0 24-23.88V128zm-192 64a64 64 0 1 1-64 64 64 64 0 0 1 64-64zm112 236.8c0 10.61-10 19.2-22.4 19.2H102.4C90 448 80 439.4 80 428.8v-19.2c0-31.81 30.09-57.6 67.1-57.6h5a103.22 103.22 0 0 0 79.7 0h5c37.11 0 67.2 25.79 67.2 57.6z", "M377 105L279.1 7a24 24 0 0 0-17-7H256v112a16 16 0 0 0 16 16h112v-6.1a23.9 23.9 0 0 0-7-16.9zM192 320a64 64 0 1 0-64-64 64 64 0 0 0 64 64zm44.8 32h-5a103.22 103.22 0 0 1-79.7 0h-5c-37 0-67.1 25.79-67.1 57.6v19.2c0 10.6 10 19.2 22.4 19.2h179.2c12.37 0 22.4-8.59 22.4-19.2v-19.2c0-31.81-30.09-57.6-67.2-57.6z"]]
};
exports.faFileUser = faFileUser;
var faFileVideo = {
  prefix: 'fad',
  iconName: 'file-video',
  icon: [384, 512, [], "f1c8", ["M384 128H272a16 16 0 0 1-16-16V0H24A23.94 23.94 0 0 0 0 23.88V488a23.94 23.94 0 0 0 23.88 24H360a23.94 23.94 0 0 0 24-23.88V128zm-64 264c0 21.44-25.94 32-41 17l-55-55v38a24 24 0 0 1-24 24H88a24 24 0 0 1-24-24V280a24 24 0 0 1 24-24h112a24 24 0 0 1 24 24v38.06l55-55c15-15.06 41-4.5 41 16.94z", "M377 105L279.1 7a24 24 0 0 0-17-7H256v112a16 16 0 0 0 16 16h112v-6.1a23.9 23.9 0 0 0-7-16.9zm-98 158.06l-55 55V280a24 24 0 0 0-24-24H88a24 24 0 0 0-24 24v112a24 24 0 0 0 24 24h112a24 24 0 0 0 24-24v-38l55 55c15.06 15 41 4.44 41-17V280c0-21.44-26-32-41-16.94z"]]
};
exports.faFileVideo = faFileVideo;
var faFileWord = {
  prefix: 'fad',
  iconName: 'file-word',
  icon: [384, 512, [], "f1c2", ["M384 128H272a16 16 0 0 1-16-16V0H24A23.94 23.94 0 0 0 0 23.88V488a23.94 23.94 0 0 0 23.88 24H360a23.94 23.94 0 0 0 24-23.88V128zm-67.3 142.7l-38 168A11.9 11.9 0 0 1 267 448h-38a12 12 0 0 1-11.6-9.1c-25.8-103.5-20.8-81.2-25.6-110.5h-.5c-1.1 14.3-2.4 17.4-25.6 110.5a12 12 0 0 1-11.6 9.1H117a12 12 0 0 1-11.7-9.4l-37.8-168A12 12 0 0 1 79.2 256h24.5a12 12 0 0 1 11.8 9.7c15.6 78 20.1 109.5 21 122.2 1.6-10.2 7.3-32.7 29.4-122.7a11.9 11.9 0 0 1 11.7-9.1h29.1a12 12 0 0 1 11.7 9.2c24 100.4 28.8 124 29.6 129.4-.2-11.2-2.6-17.8 21.6-129.2a11.59 11.59 0 0 1 11.5-9.5H305a12 12 0 0 1 12 12 11.8 11.8 0 0 1-.3 2.7z", "M377 105L279.1 7a24 24 0 0 0-17-7H256v112a16 16 0 0 0 16 16h112v-6.1a23.9 23.9 0 0 0-7-16.9zm-72 151h-23.9a11.59 11.59 0 0 0-11.5 9.5c-24.2 111.4-21.8 118-21.6 129.2-.8-5.4-5.6-29-29.6-129.4a12 12 0 0 0-11.7-9.2h-29.1a11.9 11.9 0 0 0-11.7 9.1c-22.1 90-27.8 112.5-29.4 122.7-.9-12.7-5.4-44.2-21-122.2a12 12 0 0 0-11.8-9.7H79.2a12 12 0 0 0-11.7 14.6l37.8 168A12 12 0 0 0 117 448h37.1a12 12 0 0 0 11.6-9.1c23.2-93.1 24.5-96.2 25.6-110.5h.5c4.8 29.3-.2 7 25.6 110.5A12 12 0 0 0 229 448h38a11.9 11.9 0 0 0 11.7-9.3l38-168a11.8 11.8 0 0 0 .3-2.7 12 12 0 0 0-12-12z"]]
};
exports.faFileWord = faFileWord;
var faFilesMedical = {
  prefix: 'fad',
  iconName: 'files-medical',
  icon: [448, 512, [], "f7fd", ["M352 96V0H152a24 24 0 0 0-24 24v368a24 24 0 0 0 24 24h272a24 24 0 0 0 24-24V96zm32 184a8 8 0 0 1-8 8h-56v56a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8v-56h-56a8 8 0 0 1-8-8v-48a8 8 0 0 1 8-8h56v-56a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v56h56a8 8 0 0 1 8 8z", "M96 392V96H24a24 24 0 0 0-24 24v368a24 24 0 0 0 24 24h272a24 24 0 0 0 24-24v-40H152a56.06 56.06 0 0 1-56-56zm280-168h-56v-56a8 8 0 0 0-8-8h-48a8 8 0 0 0-8 8v56h-56a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8h56v56a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8v-56h56a8 8 0 0 0 8-8v-48a8 8 0 0 0-8-8zm65-151L375 7a24 24 0 0 0-17-7h-6v96h96v-6.06A24 24 0 0 0 441 73z"]]
};
exports.faFilesMedical = faFilesMedical;
var faFill = {
  prefix: 'fad',
  iconName: 'fill',
  icon: [512, 512, [], "f575", ["M386.39 288L235.78 438.61a32 32 0 0 1-45.22 0L73.37 321.4A31.86 31.86 0 0 1 64 298.78 32.59 32.59 0 0 1 65.87 288z", "M502.63 217L294.94 9.34a32 32 0 0 0-45.25 0l-81.58 81.58L81.93 4.73a16 16 0 0 0-22.62 0L36.69 27.35a16 16 0 0 0 0 22.62l86.19 86.18-94.76 94.76a96 96 0 0 0 0 135.75l117.19 117.19a96 96 0 0 0 135.74 0l221.57-221.57a32 32 0 0 0 .01-45.28zM235.78 438.61a32 32 0 0 1-45.22 0L73.37 321.4a32 32 0 0 1 0-45.24l94.75-94.74 58.6 58.58A32 32 0 0 0 272 194.77l-58.6-58.6 58.92-58.93 162.42 162.41z"]]
};
exports.faFill = faFill;
var faFillDrip = {
  prefix: 'fad',
  iconName: 'fill-drip',
  icon: [576, 512, [], "f576", ["M387.39 288L236.78 438.61a32 32 0 0 1-45.22 0L74.37 321.4A31.86 31.86 0 0 1 65 298.78 32.59 32.59 0 0 1 66.87 288zM512 320s-64 92.65-64 128a64 64 0 0 0 128 0c0-35.35-64-128-64-128z", "M503.63 217L295.94 9.34a32 32 0 0 0-45.25 0l-81.58 81.58L82.93 4.73a16 16 0 0 0-22.62 0L37.69 27.35a16 16 0 0 0 0 22.62l86.19 86.18-94.76 94.76a96 96 0 0 0 0 135.75l117.19 117.19a96 96 0 0 0 135.74 0l221.57-221.57a32 32 0 0 0 .01-45.28zM236.78 438.61a32 32 0 0 1-45.22 0L74.37 321.4a32 32 0 0 1 0-45.24l94.75-94.74 58.6 58.58A32 32 0 0 0 273 194.77l-58.6-58.6 58.92-58.93 162.42 162.41z"]]
};
exports.faFillDrip = faFillDrip;
var faFilm = {
  prefix: 'fad',
  iconName: 'film',
  icon: [512, 512, [], "f008", ["M356 280H156a12 12 0 0 0-12 12v96a12 12 0 0 0 12 12h200a12 12 0 0 0 12-12v-96a12 12 0 0 0-12-12zm0-168H156a12 12 0 0 0-12 12v96a12 12 0 0 0 12 12h200a12 12 0 0 0 12-12v-96a12 12 0 0 0-12-12z", "M488 64h-8v20a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12V64H96v20a12 12 0 0 1-12 12H44a12 12 0 0 1-12-12V64h-8A23.94 23.94 0 0 0 0 88v336a23.94 23.94 0 0 0 24 24h8v-20a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12v20h320v-20a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12v20h8a23.94 23.94 0 0 0 24-24V88a23.94 23.94 0 0 0-24-24zM96 372a12 12 0 0 1-12 12H44a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-96a12 12 0 0 1-12 12H44a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-96a12 12 0 0 1-12 12H44a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm272 208a12 12 0 0 1-12 12H156a12 12 0 0 1-12-12v-96a12 12 0 0 1 12-12h200a12 12 0 0 1 12 12zm0-168a12 12 0 0 1-12 12H156a12 12 0 0 1-12-12v-96a12 12 0 0 1 12-12h200a12 12 0 0 1 12 12zm112 152a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-96a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-96a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12z"]]
};
exports.faFilm = faFilm;
var faFilmAlt = {
  prefix: 'fad',
  iconName: 'film-alt',
  icon: [512, 512, [], "f3a0", ["M369 448H143V64h226z", "M488.12 64H480v20a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12V64h-47v384h47v-20a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12v20h8a23.94 23.94 0 0 0 24-23.88V88a23.94 23.94 0 0 0-23.88-24zM480 372a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-96a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-96a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zM96 84a12 12 0 0 1-12 12H44a12 12 0 0 1-12-12V64h-8A23.94 23.94 0 0 0 0 87.88V424a23.94 23.94 0 0 0 23.88 24H32v-20a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12v20h47V64H96zm0 288a12 12 0 0 1-12 12H44a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-96a12 12 0 0 1-12 12H44a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-96a12 12 0 0 1-12 12H44a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12z"]]
};
exports.faFilmAlt = faFilmAlt;
var faFilmCanister = {
  prefix: 'fad',
  iconName: 'film-canister',
  icon: [576, 512, [], "f8b7", ["M320 448H32V96h288z", "M544 128H320v288h160a32 32 0 0 0 32-32v-32a32 32 0 0 1 32-32 32 32 0 0 0 32-32V160a32 32 0 0 0-32-32zM440 360a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16zm0-160a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16zm96 0a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16zM16 96h320a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16h-80V16a16 16 0 0 0-16-16H112a16 16 0 0 0-16 16v16H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16zm320 352H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z"]]
};
exports.faFilmCanister = faFilmCanister;
var faFilter = {
  prefix: 'fad',
  iconName: 'filter',
  icon: [512, 512, [], "f0b0", ["M505 41L320 225.93V488c0 19.51-22 30.71-37.76 19.66l-80-56A24 24 0 0 1 192 432V226L7 41C-8 25.87 2.69 0 24 0h464c21.33 0 32 25.9 17 41z", ""]]
};
exports.faFilter = faFilter;
var faFingerprint = {
  prefix: 'fad',
  iconName: 'fingerprint',
  icon: [512, 512, [], "f577", ["M506.1 203.57a24 24 0 1 0-46.87 10.34c4.71 21.41 4.91 37.41 4.7 61.6a24 24 0 0 0 23.8 24.2h.2a24 24 0 0 0 24-23.8c.18-22.18.4-44.11-5.83-72.34zM256.11 246a24 24 0 0 0-24 24 731.23 731.23 0 0 1-27.7 211.55c-2.73 9.72 2.15 30.49 23.12 30.49a24 24 0 0 0 23.09-17.52A774 774 0 0 0 280.1 270a24 24 0 0 0-23.99-24zM144.56 144.45a24 24 0 0 0-33.76 3.48 173.44 173.44 0 0 0-38.75 112A580.75 580.75 0 0 1 62.94 372a24 24 0 0 0 19.36 27.87c20.11 3.5 27.07-14.81 27.89-19.36a629 629 0 0 0 9.86-121.33 123.59 123.59 0 0 1 28-81 24 24 0 0 0-3.49-33.73z", "M466 112.85A266 266 0 0 0 252.8 0C183-.82 118.46 24.91 70.45 72.94A238.49 238.49 0 0 0 .13 246.65L0 268.12a24 24 0 0 0 23.28 24.69H24a24 24 0 0 0 24-23.3l.16-23.64a190.77 190.77 0 0 1 56.28-139C143.18 68.09 195.76 47.22 252.1 48a217.86 217.86 0 0 1 174.62 92.39A24 24 0 1 0 466 112.85zM254 82.12a178.75 178.75 0 0 0-45.78 5 24 24 0 1 0 11.06 46.72 143.52 143.52 0 0 1 34-3.69c75.43 1.13 137.73 61.5 138.88 134.58a881.07 881.07 0 0 1-5.58 113.63 24 24 0 0 0 21.11 26.58c16.72 1.95 25.51-11.88 26.58-21.11A929.94 929.94 0 0 0 440.19 264C438.63 165.2 355.12 83.62 254 82.12zm1.22 82.11c-61.26-.07-104 47.07-103.16 101.09a656.09 656.09 0 0 1-13.37 142.55 24 24 0 1 0 47 9.72 704 704 0 0 0 14.37-153c-.41-25.95 19.92-52.49 54.45-52.34 31.31.47 57.15 25.34 57.62 55.47a804 804 0 0 1-10.61 143.55 24 24 0 0 0 19.76 27.58c20 3.33 26.81-15.1 27.58-19.77A853 853 0 0 0 360.16 267c-.88-55.85-47.94-101.93-104.91-102.77z"]]
};
exports.faFingerprint = faFingerprint;
var faFire = {
  prefix: 'fad',
  iconName: 'fire',
  icon: [384, 512, [], "f06d", ["M216 23.86C216 9.06 204.15 0 192 0a24 24 0 0 0-20.1 10.82C48 191.85 224 200 224 288v.81A64 64 0 0 1 160 352h-.87C124 351.5 96 322.18 96 287v-85.5c0-14.52-11.83-24-24.15-24a23.63 23.63 0 0 0-17.28 7.5C27.8 213.16 0 261.33 0 320c0 105.87 86.13 192 192 192s192-86.13 192-192c0-170.29-168-193-168-296.14zM192 444a123.61 123.61 0 0 1-87.78-36.5l2.63 1.21a129.9 129.9 0 0 0 51.39 11.23h1.78A132 132 0 0 0 292 289.71V288c0-27.83-8.69-54.44-25.84-79.11l-.3-.43c10.81 11 20.62 22.28 28.61 34.68C309.16 265.92 316 290.34 316 320a124.15 124.15 0 0 1-124 124z", "M265.86 208.46c10.81 11 20.62 22.28 28.61 34.68C309.16 265.92 316 290.34 316 320a123.94 123.94 0 0 1-211.78 87.5l2.63 1.21a129.9 129.9 0 0 0 51.39 11.23h1.78A132 132 0 0 0 292 289.71V288c0-27.83-8.69-54.44-25.84-79.11l-.3-.43"]]
};
exports.faFire = faFire;
var faFireAlt = {
  prefix: 'fad',
  iconName: 'fire-alt',
  icon: [448, 512, [], "f7e4", ["M323.56 51.2a597.38 597.38 0 0 0-56.22 60C240.08 73.62 206.28 35.53 168 0 69.74 91.17 0 210 0 281.6 0 408.85 100.29 512 224 512s224-103.15 224-230.4c0-53.27-52-163.14-124.44-230.4zm-1.12 366.87A165.81 165.81 0 0 1 226.86 448c-43.93 0-84.43-14.89-114.06-41.92a146.18 146.18 0 0 1-35.88-50.39C68.35 335.82 64 314 64 290.75c0-59.43 42.8-106.39 104.3-180.12 30 34.59 18.49 19.78 100.7 124.59l62-70.74c24.32 40.25 27.78 45.59 34.84 59.1a157.93 157.93 0 0 1 15 104.62c-7.49 36.85-28.24 68.8-58.4 89.87z", "M304.09 391.85A134.39 134.39 0 0 1 226.86 416C154.71 416 96 368.26 96 290.75c0-38.61 24.31-72.63 72.79-130.75 6.93 8 98.83 125.34 98.83 125.34l58.63-66.88c4.14 6.85 7.91 13.55 11.27 20 27.35 52.19 15.81 119-33.43 153.42z"]]
};
exports.faFireAlt = faFireAlt;
var faFireExtinguisher = {
  prefix: 'fad',
  iconName: 'fire-extinguisher',
  icon: [448, 512, [], "f134", ["M256 67.09V72c0-1.18-.1-2.94 0-4.91zM46.29 184.91a24 24 0 0 1-44.57-17.82c14.67-36.67 38-77.84 90.05-90.89C77.63 39.68 104.57 0 144 0a56 56 0 0 1 53.67 72H256v48h-40v26a96.87 96.87 0 0 0-48 0v-26c-61 0-92.94-7-121.71 64.91zM144 72a16 16 0 1 0-16-16 16 16 0 0 0 16 16zm112 53.54V120a51.87 51.87 0 0 0 0 5.54z", "M434 26.33l-168 28c-8.15 1.36-9.77 7.73-10 12.76v58.45c.38 4.79 2.24 10.83 10 12.13l168 28a12 12 0 0 0 14-11.84V38.17a12 12 0 0 0-14-11.84zM192 143a96 96 0 0 0-96 96v241a32 32 0 0 0 32 32h128a32 32 0 0 0 32-32V239a96 96 0 0 0-96-96z"]]
};
exports.faFireExtinguisher = faFireExtinguisher;
var faFireSmoke = {
  prefix: 'fad',
  iconName: 'fire-smoke',
  icon: [640, 512, [], "f74b", ["M195.7 283.2a145 145 0 0 0-44.5-21.3A171.61 171.61 0 0 1 144 213c0-54.2 54.8-144.1 132-213 30.1 26.9 56.6 55.7 77.9 84a458.59 458.59 0 0 1 44.2-45.4c57 50.8 97.8 133.9 97.8 174.2a171.61 171.61 0 0 1-7.2 48.9 145 145 0 0 0-44.5 21.3 160.46 160.46 0 0 0-36.5-32.8 99.68 99.68 0 0 0-5.1-77.8c-2.5-4.9-5.3-10.1-8.4-15.4l-43.8 51.7s-68.6-90.7-73.8-96.9c-36.2 45-54.4 71.3-54.4 101.1a103.85 103.85 0 0 0 7.4 39.3 161 161 0 0 0-33.9 31z", "M640 400a111.94 111.94 0 0 1-112 112H112a112 112 0 0 1 0-224c37.1 0 69.7 18.3 90.1 46.1a128 128 0 0 1 235.8 0c20.4-27.8 53-46.1 90.1-46.1a111.94 111.94 0 0 1 112 112z"]]
};
exports.faFireSmoke = faFireSmoke;
var faFireplace = {
  prefix: 'fad',
  iconName: 'fireplace',
  icon: [640, 512, [], "f79a", ["M371.2 281.6a289.37 289.37 0 0 0-28.9 30 390.58 390.58 0 0 0-51.1-55.6c-50.5 45.6-86.4 105-86.4 140.8a115.2 115.2 0 0 0 230.4 0c0-26.6-26.7-81.6-64-115.2zm-13.4 166.9a64.22 64.22 0 0 1-37.8 12.3c-35.3 0-64-24.4-64-64 0-19.7 11.9-37.1 35.6-66.8 3.4 4.1 48.3 64.1 48.3 64.1l28.7-34.2c2 3.5 3.9 6.9 5.5 10.2 13.4 26.6 7.8 60.8-16.3 78.4z", "M624 0H16A16 16 0 0 0 0 16v64a16 16 0 0 0 16 16h608a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16zM32 512h96V384c0-106 86-192 192-192s192 86 192 192v128h96V128H32z"]]
};
exports.faFireplace = faFireplace;
var faFirstAid = {
  prefix: 'fad',
  iconName: 'first-aid',
  icon: [576, 512, [], "f479", ["M64 480h64V32H64zM448 32v448h64V32z", "M128 480h320V32H128zm64-248a8 8 0 0 1 8-8h56v-56a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v56h56a8 8 0 0 1 8 8v48a8 8 0 0 1-8 8h-56v56a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8v-56h-56a8 8 0 0 1-8-8zM0 80v352a48 48 0 0 0 48 48h16V32H48A48 48 0 0 0 0 80zm528-48h-16v448h16a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48z"]]
};
exports.faFirstAid = faFirstAid;
var faFish = {
  prefix: 'fad',
  iconName: 'fish',
  icon: [576, 512, [], "f578", ["M327.1 96c-90 0-168.54 54.77-212.27 101.63l-87.33-66c-12.13-9.18-30.24.6-27.14 14.66L24.54 256 .35 365.77c-3.1 14.06 15 23.83 27.14 14.66l87.33-66.05C158.55 361.23 237.13 416 327.1 416 464.56 416 576 288 576 256S464.56 96 327.1 96zm87.43 192a32 32 0 1 1 32-32 32 32 0 0 1-32 32z", "M446.53 256a32 32 0 1 1-32-32 32 32 0 0 1 32 32z"]]
};
exports.faFish = faFish;
var faFishCooked = {
  prefix: 'fad',
  iconName: 'fish-cooked',
  icon: [640, 512, [], "f7fe", ["M363.43 64c-100 0-187.26 65.72-235.85 122l-97-79.26C17.07 95.68-3 107.42.39 124.29L27.26 256 .38 387.73C-3 404.6 17.06 416.32 30.53 405.32l97-79.26C176.16 382.28 263.47 448 363.43 448 516.17 448 640 294.4 640 256S516.17 64 363.43 64zM245.68 261.68l-11.31-11.31a8 8 0 0 1 0-11.31L319 154.34a8 8 0 0 1 11.31 0l11.32 11.32a8 8 0 0 1 0 11.31L257 261.65a8 8 0 0 1-11.32.03zm59.28 80a8 8 0 0 1-11.31 0l-11.31-11.31a8 8 0 0 1 0-11.31L431 170.34a8 8 0 0 1 11.31 0l11.32 11.32a8 8 0 0 1 0 11.31zM501.69 273L417 357.65a8 8 0 0 1-11.31 0l-11.31-11.31a8 8 0 0 1 0-11.31L479 250.34a8 8 0 0 1 11.31 0l11.32 11.32a8 8 0 0 1 .06 11.34z", "M453.63 193a8 8 0 0 0 0-11.31l-11.33-11.36a8 8 0 0 0-11.31 0L282.34 319a8 8 0 0 0 0 11.31l11.31 11.31a8 8 0 0 0 11.31 0L453.62 193zm-112-16a8 8 0 0 0 0-11.31l-11.33-11.36a8 8 0 0 0-11.31 0L234.34 239a8 8 0 0 0 0 11.31l11.31 11.31a8 8 0 0 0 11.31 0L341.62 177zm160 84.69l-11.33-11.36a8 8 0 0 0-11.31 0L394.37 335a8 8 0 0 0 0 11.31l11.31 11.31a8 8 0 0 0 11.31 0L501.65 273a8 8 0 0 0-.03-11.35z"]]
};
exports.faFishCooked = faFishCooked;
var faFistRaised = {
  prefix: 'fad',
  iconName: 'fist-raised',
  icon: [384, 512, [], "f6de", ["M64 512v-64l-26.5-26.51A128 128 0 0 1 0 331v-77.95A47.26 47.26 0 0 0 16 256h32a47.65 47.65 0 0 0 32-12.49A47.65 47.65 0 0 0 112 256h32a47.4 47.4 0 0 0 21.87-5.52 64.34 64.34 0 0 0 38.87 34.45c-17.11 14.82-31.58 34.48-47.31 58.08l-6.31 9.47a8 8 0 0 0 2.22 11.08l13.31 8.88a8 8 0 0 0 11.08-2.22l6.31-9.47c31.89-47.84 51.53-70.27 96.05-72.55a8.22 8.22 0 0 0 7.88-8V264c0-4.42-3.52-8-13.2-8h-35.25A47.59 47.59 0 0 1 192 208.41v-.56A15.86 15.86 0 0 1 207.85 192H320a64 64 0 0 1 64 64v88.22a96 96 0 0 1-28.12 67.91L320 448v64z", "M144 32h-32a16 16 0 0 0-16 16v160a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM48 64H16A16 16 0 0 0 0 80v128a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm288-32h-32a16 16 0 0 0-16 16v112h32a94.76 94.76 0 0 1 32 5.9V48a16 16 0 0 0-16-16zM240 0h-32a16 16 0 0 0-16 16v146.93a47.56 47.56 0 0 1 16-2.93h48V16a16 16 0 0 0-16-16z"]]
};
exports.faFistRaised = faFistRaised;
var faFlag = {
  prefix: 'fad',
  iconName: 'flag',
  icon: [512, 512, [], "f024", ["M512 91.33v277c0 11.31-7.1 21.88-18.5 26.47C317.7 465 281.7 331.25 96 416V102a56.57 56.57 0 0 0 14.64-15c194.19-74.48 184.75 58.25 352-20.08C485.2 56.31 512 68.26 512 91.33z", "M120 56a55.93 55.93 0 0 1-24 46v388a22 22 0 0 1-22 22H54a22 22 0 0 1-22-22V102a56 56 0 1 1 88-46z"]]
};
exports.faFlag = faFlag;
var faFlagAlt = {
  prefix: 'fad',
  iconName: 'flag-alt',
  icon: [512, 512, [], "f74c", ["M512 30.83v301.29a31.39 31.39 0 0 1-18.5 28.8C317.7 437.33 281.7 291.83 96 384V32.42c209.4-94.59 195.3 59.1 366.6-28.19 22.6-11.5 49.4 1.5 49.4 26.6z", "M64 32v464a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16V32a32 32 0 0 1 64 0z"]]
};
exports.faFlagAlt = faFlagAlt;
var faFlagCheckered = {
  prefix: 'fad',
  iconName: 'flag-checkered',
  icon: [512, 512, [], "f11e", ["M96 298.66v95c28.3-12.1 63.6-22.1 114.4-22.1a144.77 144.77 0 0 1 29.6 3.26v-95a144.77 144.77 0 0 0-29.6-3.26c-50.8 0-86.1 10-114.4 22.1zM184.3 64c-19.3 0-42.3 0-68.14 12.36A56.18 56.18 0 0 1 96 102v93.66c28.3-12.1 63.6-22.1 114.4-22.1a144.77 144.77 0 0 1 29.6 3.26V71.64C223 67.2 204.69 64 184.3 64zm191.3 342.36c48.2 0 86.7-16.3 122.5-40.9a31.88 31.88 0 0 0 13.8-26.4v-76c-35.79 24.58-88.14 48.3-136.3 48.3-2.57 0-5.09-.07-7.6-.16v95c2.51.09 5 .16 7.6.16zm136.3-246.3V96c.1-23.35-24.2-38.85-45.4-29-29.1 13.4-63.89 27-98.5 30.76V208.2c2.51.09 5 .16 7.6.16 48.16 0 100.51-23.72 136.3-48.3zM240 176.82v103c39.58 8.25 77.24 29.4 128 31.38v-103c-50.76-1.98-88.42-23.13-128-31.38z", "M210.4 173.6c-50.8 0-86.1 10-114.4 22.1V102a56 56 0 1 0-64 0v388a22 22 0 0 0 22 22h20a22 22 0 0 0 22-22V298.7c28.3-12.1 63.6-22.1 114.4-22.1a144.77 144.77 0 0 1 29.6 3.26v-103a144.77 144.77 0 0 0-29.6-3.26zM240 374.82c39.58 8.25 77.24 29.4 128 31.38v-95c-50.76-2-88.42-23.13-128-31.38zM368 97.76a169.27 169.27 0 0 1-18.5 1c-37.32 0-70.17-16.92-109.5-27.17v105.23c39.58 8.25 77.24 29.4 128 31.38zm143.9 146.3v-84c-35.79 24.58-88.14 48.3-136.3 48.3-2.57 0-5.09-.07-7.6-.16v103c2.51.09 5 .16 7.6.16 48.2 0 100.6-23.76 136.4-48.36v-17.16c-.06-.57-.09-1.16-.1-1.78z"]]
};
exports.faFlagCheckered = faFlagCheckered;
var faFlagUsa = {
  prefix: 'fad',
  iconName: 'flag-usa',
  icon: [512, 512, [], "f74d", ["M299.9 303.62c-57.2-15.09-111.7-28.79-203.9 11.1V384c185.7-92.2 221.7 53.3 397.5-23.11a31.39 31.39 0 0 0 18.5-28.8v-36c-43.6 17.3-80.2 24.1-112.1 24.1-37.4-.07-68.9-8.36-100-16.57zm9.5-221.89c51.8 15.6 97.4 29 202.6-20.11V30.83c0-25.1-26.8-38.1-49.4-26.6-89.25 45.48-128.17 25.54-174.6 9.39v158c6.76 1.66 13.45 3.4 20.1 5.14 57.2 15 111.7 28.7 203.9-11.1V96.73c-53.6 23.5-93.3 31.39-126.1 31.39s-59-7.79-85.7-15.89c-4-1.21-8.1-2.4-12.1-3.5V75.52c7.2 2 14.3 4.1 21.3 6.21zm-9.5 125.89c-57.2-15.09-111.7-28.79-203.9 11.1v61.5c94.8-37.6 154.6-22.69 212.1-7.6 57.2 15.1 111.7 28.8 203.9-11.09V200c-43.6 17.3-80.2 24.09-112.1 24.09-37.4.03-68.9-8.26-100-16.47z", "M32 0A32 32 0 0 0 0 32v464a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V32A32 32 0 0 0 32 0zm64 32.4v151.93c83.83-33.17 140.29-25.43 192-12.75v-158C245.32-1.23 196.3-12.89 96 32.42zm64 95.7a16 16 0 1 1 16-16 16 16 0 0 1-16 16.02zm0-55.79a16 16 0 1 1 16-16 16 16 0 0 1-16 16.02zm64 47.9a16 16 0 1 1 16-16 16 16 0 0 1-16 16.02zm0-55.9a16 16 0 1 1 16-16 16 16 0 0 1-16 16.02z"]]
};
exports.faFlagUsa = faFlagUsa;
var faFlame = {
  prefix: 'fad',
  iconName: 'flame',
  icon: [384, 512, [], "f6df", ["M192 0C79.7 101.33 0 220.92 0 300.55 0 425.05 79 512 192 512s192-86.95 192-211.45C384 220.6 303.78 100.86 192 0zm0 448c-70.58 0-128-52.89-128-117.89 0-44.11 25.84-71.51 34.34-79.76A8 8 0 0 1 112 256v40a56 56 0 0 0 112 0c0-72-112.64-64.77-39.43-164.33a9.37 9.37 0 0 1 10.58-3.17c1.62.53 5.38 2.24 5.38 6.78 0 33.55 25 55 51.57 77.63 33.38 28.54 67.9 58 67.9 117.21C320 395.11 262.58 448 192 448z", "M252.09 212.92c33.38 28.54 67.9 58 67.9 117.21 0 65-57.41 117.87-128 117.87S64 395.11 64 330.11c0-44.11 25.84-71.51 34.34-79.76A8 8 0 0 1 112 256v40a56 56 0 0 0 112 0c0-72-112.64-64.77-39.43-164.33a9.37 9.37 0 0 1 10.58-3.17c1.62.53 5.38 2.24 5.38 6.78 0 33.56 25 55 51.56 77.64z"]]
};
exports.faFlame = faFlame;
var faFlashlight = {
  prefix: 'fad',
  iconName: 'flashlight',
  icon: [640, 512, [], "f8b8", ["M400.13 149.25L384 160H32a32 32 0 0 0-32 32v128a32 32 0 0 0 32 32h352l16.13 10.75A317 317 0 0 0 576 416V96a317 317 0 0 0-175.87 53.25zM288 288h-32a32 32 0 0 1 0-64h32a32 32 0 0 1 0 64z", "M608 96h-32v320h32a32 32 0 0 0 32-32V128a32 32 0 0 0-32-32zM288 224h-32a32 32 0 0 0 0 64h32a32 32 0 0 0 0-64z"]]
};
exports.faFlashlight = faFlashlight;
var faFlask = {
  prefix: 'fad',
  iconName: 'flask',
  icon: [448, 512, [], "f0c3", ["M138.07 320h171.84l72.93 117.29a6.4 6.4 0 0 1 .09 7.12 6.11 6.11 0 0 1-5.88 3.52H70.89a6.08 6.08 0 0 1-5.89-3.46 6.45 6.45 0 0 1 .11-7.18z", "M112 64h224a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16H112a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm325.19 339.5L320 215V96h-64v137.27l126.85 204a6.4 6.4 0 0 1 .09 7.12 6.11 6.11 0 0 1-5.88 3.52H70.89a6.08 6.08 0 0 1-5.89-3.44 6.45 6.45 0 0 1 .11-7.18L192 233.27V96h-64v119L10.79 403.5c-29.3 47.1 4.5 108.5 60.1 108.5h306.2c55.7 0 89.4-61.5 60.1-108.5z"]]
};
exports.faFlask = faFlask;
var faFlaskPoison = {
  prefix: 'fad',
  iconName: 'flask-poison',
  icon: [416, 512, [], "f6e0", ["M208 224c-61.86 0-112 39.4-112 88 0 29.87 19 56.17 48 72.08V416a16 16 0 0 0 16 16h96a16 16 0 0 0 16-16v-31.92c29-15.91 48-42.21 48-72.08 0-48.6-50.17-88-112-88zm-40 112a24 24 0 1 1 24-24 24 24 0 0 1-24 24zm80 0a24 24 0 1 1 24-24 24 24 0 0 1-24 24z", "M96 64h224a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16H96a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm208 105.05V96H112v72.12C45.61 202.85 0 271.88 0 352a207.15 207.15 0 0 0 53.93 139.7 63.44 63.44 0 0 0 47 20.3H315a64 64 0 0 0 47.57-20.85A207.15 207.15 0 0 0 416 356.67c1.71-79.95-44.8-151.49-112-187.62zm-32 215V416a16 16 0 0 1-16 16h-96a16 16 0 0 1-16-16v-31.92c-29-15.91-48-42.21-48-72.08 0-48.6 50.13-88 112-88s112 39.4 112 88c0 29.87-19 56.17-48 72.08z"]]
};
exports.faFlaskPoison = faFlaskPoison;
var faFlaskPotion = {
  prefix: 'fad',
  iconName: 'flask-potion',
  icon: [416, 512, [], "f6e1", ["M64 352a154.39 154.39 0 0 1 1.92-24.48c61.84-24.46 131.65-20.73 181 4 36.58 18.29 78.12 20.41 105 20.56v3.23A143.83 143.83 0 0 1 315.29 448h-214.6A143.6 143.6 0 0 1 64 352z", "M304 169.05V96h-64v111.3c24.51 13.18 114.1 49.87 112 148a143.82 143.82 0 0 1-36.71 92.7h-214.6A143.6 143.6 0 0 1 64 352c0-99.51 88.31-132.74 112-145.13V96h-64v72.12C45.61 202.85 0 271.88 0 352a207.15 207.15 0 0 0 53.93 139.7 63.44 63.44 0 0 0 47 20.3H315a64 64 0 0 0 47.57-20.85A207.15 207.15 0 0 0 416 356.67c1.71-79.95-44.8-151.49-112-187.62zM96 64h224a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16H96a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16z"]]
};
exports.faFlaskPotion = faFlaskPotion;
var faFlower = {
  prefix: 'fad',
  iconName: 'flower',
  icon: [512, 512, [], "f7ff", ["M435.86,256C462.7,232.54,480,198.45,480,160A128,128,0,0,0,352,32c-38.45,0-72.54,17.3-96,44.14C232.54,49.3,198.45,32,160,32A128,128,0,0,0,32,160c0,38.45,17.3,72.54,44.14,96C49.3,279.46,32,313.55,32,352A128,128,0,0,0,160,480c38.45,0,72.54-17.3,96-44.14C279.46,462.7,313.55,480,352,480A128,128,0,0,0,480,352C480,313.55,462.7,279.46,435.86,256ZM335.2,335.2A112,112,0,1,1,368,256,112,112,0,0,1,335.2,335.2Z", "M336,256a80,80,0,1,1-80-80A80,80,0,0,1,336,256Z"]]
};
exports.faFlower = faFlower;
var faFlowerDaffodil = {
  prefix: 'fad',
  iconName: 'flower-daffodil',
  icon: [512, 512, [], "f800", ["M511.93 336.84C501.94 435 405.57 512 288.17 512h-64.34C106.43 512 10.06 435 .07 336.84-.87 327.72 6.94 320 16.13 320h47.26c63 0 119.82 22.23 160.61 57.92v-96.58A80.33 80.33 0 0 0 256 256a80.33 80.33 0 0 0 32 25.34v96.58C328.79 342.23 385.61 320 448.61 320h47.26c9.19 0 16.98 7.72 16.06 16.84z", "M368 144A80 80 0 1 0 256 32a80 80 0 1 0-112 112 80 80 0 1 0 112 112 80 80 0 1 0 112-112zm-112 48a48 48 0 1 1 48-48 48 48 0 0 1-48 48z"]]
};
exports.faFlowerDaffodil = faFlowerDaffodil;
var faFlowerTulip = {
  prefix: 'fad',
  iconName: 'flower-tulip',
  icon: [512, 512, [], "f801", ["M511.94 336.84C502 435 405.58 512 288.18 512h-64.34C106.44 512 10.07 435 .08 336.84-.86 327.72 7 320 16.14 320H63.4c63 0 119.82 22.23 160.61 57.92V256h64v121.92C328.8 342.23 385.62 320 448.62 320h47.26c9.19 0 16.98 7.72 16.06 16.84z", "M224 256A128 128 0 0 1 96 128V32l80 48 81.15-80L336 80l80-48v96a128 128 0 0 1-128 128z"]]
};
exports.faFlowerTulip = faFlowerTulip;
var faFlushed = {
  prefix: 'fad',
  iconName: 'flushed',
  icon: [496, 512, [], "f579", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8ZM80,224a72,72,0,1,1,72,72,72,72,0,0,1-72-72ZM312,400H184c-21.2,0-21.2-32,0-32H312C333.2,368,333.2,400,312,400Zm32-104a72,72,0,1,1,72-72,72,72,0,0,1-72,72Z", "M152,200a23.94,23.94,0,1,0,.12,0Zm192,0a23.94,23.94,0,1,0,.12,0Z"]]
};
exports.faFlushed = faFlushed;
var faFlute = {
  prefix: 'fad',
  iconName: 'flute',
  icon: [640, 512, [], "f8b9", ["M608 176H96v160h512a32 32 0 0 0 32-32v-96a32 32 0 0 0-32-32z", "M320 232a24 24 0 1 0 24 24 24 24 0 0 0-24-24zM0 208v96a32 32 0 0 0 32 32h64V176H32a32 32 0 0 0-32 32zm416 24a24 24 0 1 0 24 24 24 24 0 0 0-24-24zm96 0a24 24 0 1 0 24 24 24 24 0 0 0-24-24z"]]
};
exports.faFlute = faFlute;
var faFluxCapacitor = {
  prefix: 'fad',
  iconName: 'flux-capacitor',
  icon: [448, 512, [], "f8ba", ["M248 352a24 24 0 0 1-48 0v-41.32a48 48 0 1 0 48 0zM128 112a48 48 0 0 0 0 96 47.36 47.36 0 0 0 12.27-1.79L111 177a24 24 0 0 1 34-34l29.24 29.24A47.36 47.36 0 0 0 176 160a48.05 48.05 0 0 0-48-48zm240-80H80a80.09 80.09 0 0 0-80 80v288a80.09 80.09 0 0 0 80 80h288a80.09 80.09 0 0 0 80-80V112a80.09 80.09 0 0 0-80-80zm-48 208a79.11 79.11 0 0 1-36.74-9.32L248 265.94v10.13c32.38 10.24 56 40.17 56 75.93a80 80 0 0 1-160 0c0-35.76 23.62-65.69 56-75.93v-10.13l-35.26-35.26A79.11 79.11 0 0 1 128 240a80 80 0 1 1 80-80 79.12 79.12 0 0 1-9.33 36.74L224 222.06l25.33-25.32A79.12 79.12 0 0 1 240 160a80 80 0 1 1 80 80zm0-128a48.05 48.05 0 0 0-48 48 47.36 47.36 0 0 0 1.79 12.27L303 143a24 24 0 0 1 34 34l-29.24 29.24A47.36 47.36 0 0 0 320 208a48 48 0 0 0 0-96z", "M337 177l-89 89v86a24 24 0 0 1-48 0v-86.06l-89-89A24 24 0 0 1 145 143l79 79 79-79a24 24 0 0 1 34 34z"]]
};
exports.faFluxCapacitor = faFluxCapacitor;
var faFog = {
  prefix: 'fad',
  iconName: 'fog',
  icon: [640, 512, [], "f74e", ["M208 464H80a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16zm416 0H288a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h336a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16zm-48-64v-16a16 16 0 0 0-16-16H16a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h544a16 16 0 0 0 16-16z", "M64 224c0-42.5 27.8-78.2 66.1-90.8A113.72 113.72 0 0 1 128 112 111.94 111.94 0 0 1 240 0c43.3 0 80.4 24.8 99 60.8C353.7 43.3 375.4 32 400 32a80 80 0 0 1 80 80 78.09 78.09 0 0 1-1.6 16.2c.5 0 1-.2 1.6-.2a96 96 0 0 1 0 192H160a96 96 0 0 1-96-96z"]]
};
exports.faFog = faFog;
var faFolder = {
  prefix: 'fad',
  iconName: 'folder',
  icon: [512, 512, [], "f07b", ["M464 128H272l-64-64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V176c0-26.51-21.49-48-48-48z", ""]]
};
exports.faFolder = faFolder;
var faFolderMinus = {
  prefix: 'fad',
  iconName: 'folder-minus',
  icon: [512, 512, [], "f65d", ["M464 128H272l-64-64H48a48 48 0 0 0-48 48v288a48 48 0 0 0 48 48h416a48 48 0 0 0 48-48V176a48 48 0 0 0-48-48zm-96 168a16 16 0 0 1-16 16H160a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16h192a16 16 0 0 1 16 16z", "M368 280v16a16 16 0 0 1-16 16H160a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16h192a16 16 0 0 1 16 16z"]]
};
exports.faFolderMinus = faFolderMinus;
var faFolderOpen = {
  prefix: 'fad',
  iconName: 'folder-open',
  icon: [576, 512, [], "f07c", ["M69.08 271.63L0 390.05V112a48 48 0 0 1 48-48h160l64 64h160a48 48 0 0 1 48 48v48H152a96.31 96.31 0 0 0-82.92 47.63z", "M152 256h400a24 24 0 0 1 20.73 36.09l-72.46 124.16A64 64 0 0 1 445 448H45a24 24 0 0 1-20.73-36.09l72.45-124.16A64 64 0 0 1 152 256z"]]
};
exports.faFolderOpen = faFolderOpen;
var faFolderPlus = {
  prefix: 'fad',
  iconName: 'folder-plus',
  icon: [512, 512, [], "f65e", ["M464 128H272l-64-64H48a48 48 0 0 0-48 48v288a48 48 0 0 0 48 48h416a48 48 0 0 0 48-48V176a48 48 0 0 0-48-48zm-96 168a16 16 0 0 1-16 16h-72v72a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-72h-72a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16h72v-72a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v72h72a16 16 0 0 1 16 16z", "M144 280a16 16 0 0 1 16-16h72v-72a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v72h72a16 16 0 0 1 16 16v16a16 16 0 0 1-16 16h-72v72a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-72h-72a16 16 0 0 1-16-16z"]]
};
exports.faFolderPlus = faFolderPlus;
var faFolderTimes = {
  prefix: 'fad',
  iconName: 'folder-times',
  icon: [512, 512, [], "f65f", ["M464 128H272l-64-64H48a48 48 0 0 0-48 48v288a48 48 0 0 0 48 48h416a48 48 0 0 0 48-48V176a48 48 0 0 0-48-48zM340.85 338.91a16 16 0 0 1 0 22.63l-11.31 11.31a16 16 0 0 1-22.63 0L256 321.94l-50.91 50.91a16 16 0 0 1-22.63 0l-11.31-11.31a16 16 0 0 1 0-22.63L222.06 288l-50.91-50.91a16 16 0 0 1 0-22.63l11.31-11.31a16 16 0 0 1 22.63 0L256 254.06l50.91-50.91a16 16 0 0 1 22.63 0l11.31 11.31a16 16 0 0 1 0 22.63L289.94 288z", "M171.15 237.09a16 16 0 0 1 0-22.63l11.31-11.31a16 16 0 0 1 22.63 0L256 254.06l50.91-50.91a16 16 0 0 1 22.63 0l11.31 11.31a16 16 0 0 1 0 22.63L289.94 288l50.91 50.91a16 16 0 0 1 0 22.63l-11.31 11.31a16 16 0 0 1-22.63 0L256 321.94l-50.91 50.91a16 16 0 0 1-22.63 0l-11.31-11.31a16 16 0 0 1 0-22.63L222.06 288z"]]
};
exports.faFolderTimes = faFolderTimes;
var faFolderTree = {
  prefix: 'fad',
  iconName: 'folder-tree',
  icon: [576, 512, [], "f802", ["M0 416V16A16 16 0 0 1 16 0h32a16 16 0 0 1 16 16v80h192v64H64v224h192v64H32a32 32 0 0 1-32-32z", "M544 320H432l-32-32h-80a32 32 0 0 0-32 32v160a32 32 0 0 0 32 32h224a32 32 0 0 0 32-32V352a32 32 0 0 0-32-32zm0-288H432L400 0h-80a32 32 0 0 0-32 32v160a32 32 0 0 0 32 32h224a32 32 0 0 0 32-32V64a32 32 0 0 0-32-32z"]]
};
exports.faFolderTree = faFolderTree;
var faFolders = {
  prefix: 'fad',
  iconName: 'folders',
  icon: [640, 512, [], "f660", ["M640 112v224a48 48 0 0 1-48 48H176a48 48 0 0 1-48-48V48a48 48 0 0 1 48-48h160l64 64h192a48 48 0 0 1 48 48z", "M48 512a48 48 0 0 1-48-48V176a48 48 0 0 1 48-48h48v208a80.09 80.09 0 0 0 80 80h336v48a48 48 0 0 1-48 48z"]]
};
exports.faFolders = faFolders;
var faFont = {
  prefix: 'fad',
  iconName: 'font',
  icon: [448, 512, [], "f031", ["M432 416H304a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-288 0H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z", "M147.72 352h152.56l23.31 64h85L277.87 53.69C273.81 41.72 260.22 32 247.59 32h-47.18c-12.63 0-26.22 9.72-30.29 21.69L39.41 416h85zM224 142.52L271.16 272h-94.32z"]]
};
exports.faFont = faFont;
var faFontAwesomeLogoFull = {
  prefix: 'fad',
  iconName: 'font-awesome-logo-full',
  icon: [3992, 512, ["Font Awesome"], "f4e6", ["", "M454.6 0H57.4C25.9 0 0 25.9 0 57.4v397.3C0 486.1 25.9 512 57.4 512h397.3c31.4 0 57.4-25.9 57.4-57.4V57.4C512 25.9 486.1 0 454.6 0zm-58.9 324.9c0 4.8-4.1 6.9-8.9 8.9-19.2 8.1-39.7 15.7-61.5 15.7-40.5 0-68.7-44.8-163.2 2.5v51.8c0 30.3-45.7 30.2-45.7 0v-250c-9-7-15-17.9-15-30.3 0-21 17.1-38.2 38.2-38.2 21 0 38.2 17.1 38.2 38.2 0 12.2-5.8 23.2-14.9 30.2v21c37.1-12 65.5-34.4 146.1-3.4 26.6 11.4 68.7-15.7 76.5-15.7 5.5 0 10.3 4.1 10.3 8.9v160.4zm432.9-174.2h-137v70.1H825c39.8 0 40.4 62.2 0 62.2H691.6v105.6c0 45.5-70.7 46.4-70.7 0V128.3c0-22 18-39.8 39.8-39.8h167.8c39.6 0 40.5 62.2.1 62.2zm191.1 23.4c-169.3 0-169.1 252.4 0 252.4 169.9 0 169.9-252.4 0-252.4zm0 196.1c-81.6 0-82.1-139.8 0-139.8 82.5 0 82.4 139.8 0 139.8zm372.4 53.4c-17.5 0-31.4-13.9-31.4-31.4v-117c0-62.4-72.6-52.5-99.1-16.4v133.4c0 41.5-63.3 41.8-63.3 0V208c0-40 63.1-41.6 63.1 0v3.4c43.3-51.6 162.4-60.4 162.4 39.3v141.5c.3 30.4-31.5 31.4-31.7 31.4zm179.7 2.9c-44.3 0-68.3-22.9-68.3-65.8V235.2H1488c-35.6 0-36.7-55.3 0-55.3h15.5v-37.3c0-41.3 63.8-42.1 63.8 0v37.5h24.9c35.4 0 35.7 55.3 0 55.3h-24.9v108.5c0 29.6 26.1 26.3 27.4 26.3 31.4 0 52.6 56.3-22.9 56.3zM1992 123c-19.5-50.2-95.5-50-114.5 0-107.3 275.7-99.5 252.7-99.5 262.8 0 42.8 58.3 51.2 72.1 14.4l13.5-35.9H2006l13 35.9c14.2 37.7 72.1 27.2 72.1-14.4 0-10.1 5.3 6.8-99.1-262.8zm-108.9 179.1l51.7-142.9 51.8 142.9h-103.5zm591.3-85.6l-53.7 176.3c-12.4 41.2-72 41-84 0l-42.3-135.9-42.3 135.9c-12.4 40.9-72 41.2-84.5 0l-54.2-176.3c-12.5-39.4 49.8-56.1 60.2-16.9L2213 342l45.3-139.5c10.9-32.7 59.6-34.7 71.2 0l45.3 139.5 39.3-142.4c10.3-38.3 72.6-23.8 60.3 16.9zm275.4 75.1c0-42.4-33.9-117.5-119.5-117.5-73.2 0-124.4 56.3-124.4 126 0 77.2 55.3 126.4 128.5 126.4 31.7 0 93-11.5 93-39.8 0-18.3-21.1-31.5-39.3-22.4-49.4 26.2-109 8.4-115.9-43.8h148.3c16.3 0 29.3-13.4 29.3-28.9zM2571 277.7c9.5-73.4 113.9-68.6 118.6 0H2571zm316.7 148.8c-31.4 0-81.6-10.5-96.6-31.9-12.4-17 2.5-39.8 21.8-39.8 16.3 0 36.8 22.9 77.7 22.9 27.4 0 40.4-11 40.4-25.8 0-39.8-142.9-7.4-142.9-102 0-40.4 35.3-75.7 98.6-75.7 31.4 0 74.1 9.9 87.6 29.4 10.8 14.8-1.4 36.2-20.9 36.2-15.1 0-26.7-17.3-66.2-17.3-22.9 0-37.8 10.5-37.8 23.8 0 35.9 142.4 6 142.4 103.1-.1 43.7-37.4 77.1-104.1 77.1zm266.8-252.4c-169.3 0-169.1 252.4 0 252.4 170.1 0 169.6-252.4 0-252.4zm0 196.1c-81.8 0-82-139.8 0-139.8 82.5 0 82.4 139.8 0 139.8zm476.9 22V268.7c0-53.8-61.4-45.8-85.7-10.5v134c0 41.3-63.8 42.1-63.8 0V268.7c0-52.1-59.5-47.4-85.7-10.1v133.6c0 41.5-63.3 41.8-63.3 0V208c0-40 63.1-41.6 63.1 0v3.4c9.9-14.4 41.8-37.3 78.6-37.3 35.3 0 57.7 16.4 66.7 43.8 13.9-21.8 45.8-43.8 82.6-43.8 44.3 0 70.7 23.4 70.7 72.7v145.3c.5 17.3-13.5 31.4-31.9 31.4 3.5.1-31.3 1.1-31.3-31.3zM3992 291.6c0-42.4-32.4-117.5-117.9-117.5-73.2 0-127.5 56.3-127.5 126 0 77.2 58.3 126.4 131.6 126.4 31.7 0 91.5-11.5 91.5-39.8 0-18.3-21.1-31.5-39.3-22.4-49.4 26.2-110.5 8.4-117.5-43.8h149.8c16.3 0 29.1-13.4 29.3-28.9zm-180.5-13.9c9.7-74.4 115.9-68.3 120.1 0h-120.1z"]]
};
exports.faFontAwesomeLogoFull = faFontAwesomeLogoFull;
var faFontCase = {
  prefix: 'fad',
  iconName: 'font-case',
  icon: [640, 512, [], "f866", ["M624 160h-32a16 16 0 0 0-16 16v1.81c-18.9-11-40.58-17.81-64-17.81a128.14 128.14 0 0 0-128 128v32a128.14 128.14 0 0 0 128 128c23.42 0 45.1-6.78 64-17.81V432a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V176a16 16 0 0 0-16-16zm-64 160a48 48 0 0 1-96 0v-32a48 48 0 0 1 96 0z", "M229.88 85.69A32 32 0 0 0 199.58 64h-47.16a32 32 0 0 0-30.3 21.69L.85 426.89A16 16 0 0 0 16 448h50.62a16 16 0 0 0 15.16-10.89L100.85 384h150.3l19.07 53.11A16 16 0 0 0 285.38 448H336a16 16 0 0 0 15.16-21.11zM129.58 304L176 174.74 222.42 304z"]]
};
exports.faFontCase = faFontCase;
var faFootballBall = {
  prefix: 'fad',
  iconName: 'football-ball',
  icon: [496, 512, [], "f44e", ["M0,328.41v1.53L174.06,504h1.53a321.72,321.72,0,0,0,60.6-5.75L5.75,267.81A321.72,321.72,0,0,0,0,328.41ZM496,182.06,321.94,8h-1.53a321.72,321.72,0,0,0-60.6,5.75L490.25,244.19a321.72,321.72,0,0,0,5.75-60.6Z", "M14.5,451.7a52.8,52.8,0,0,0,37.3,37.4c49.3,13.2,88.49,14.9,122.26,14.9L0,329.94C0,363.51,1.47,402.26,14.5,451.7Zm467-391.4a52.8,52.8,0,0,0-37.3-37.4C394.9,9.7,355.71,8.05,321.94,8L496,182.06c0-33.57-1.47-72.32-14.5-121.76ZM5.75,267.81,236.19,498.25c128.35-24.57,229.49-125.71,254.06-254.06L259.81,13.75C131.46,38.32,30.32,139.46,5.75,267.81Zm288.91-81.69,29.21-29.42a8.29,8.29,0,0,1,11.67,0l11.66,11.66a8.29,8.29,0,0,1,0,11.67L318,209.24l29.21,29.21a8.29,8.29,0,0,1,0,11.67l-11.66,11.66a8.29,8.29,0,0,1-11.67,0l-29.21-29.21L271.33,256l29.21,29.21a8.29,8.29,0,0,1,0,11.67l-11.66,11.66a8.29,8.29,0,0,1-11.67,0L248,279.33l-23.33,23.33,29.21,29.21a8.29,8.29,0,0,1,0,11.67L242.22,355.2a8.29,8.29,0,0,1-11.67,0L201.34,326l-29.21,29.2a8.29,8.29,0,0,1-11.67,0L148.8,343.54a8.29,8.29,0,0,1,0-11.67L178,302.66l-29.2-29.11a8.29,8.29,0,0,1,0-11.67l11.66-11.66a8.29,8.29,0,0,1,11.67,0l29.21,29.21,23.33-23.33-29.21-29.21a8.28,8.28,0,0,1,0-11.66l11.66-11.67a8.29,8.29,0,0,1,11.67,0L248,232.77l23.33-23.32-29.21-29.22a8.28,8.28,0,0,1,0-11.66l11.66-11.67a8.29,8.29,0,0,1,11.67,0Z"]]
};
exports.faFootballBall = faFootballBall;
var faFootballHelmet = {
  prefix: 'fad',
  iconName: 'football-helmet',
  icon: [512, 512, [], "f44f", ["M480 320H355.46l-15.2-76-31.8 4.1 14.4 71.9h-49.3s18.7 46.8 12.8 32h42.9l9.5 47.3c9.5 47.4 48 85.3 95.9 91.3 44 5.5 42.5 5.4 45.3 5.4 22.5 0 32-19.7 32-32V352A32 32 0 0 0 480 320zm0 144l-41.3-5.2a79.72 79.72 0 0 1-60.1-40.7H480zm0-80H368.26l-6.4-32H480z", "M491 207.46C466.2 82.56 347.9-8.64 211.9 10.56c-107.3 15.1-194.1 102-209.3 209.3-10.2 72.1 10.7 139.1 51.1 190a16.26 16.26 0 0 0 12.8 6.1H120l85.7 45a65.58 65.58 0 0 0 75.7-12.3c36.2-36.2 10.9-81.9 5-96.7l-23.1-57.7a32 32 0 0 1 25.6-43.6l188.2-24.5c8.96-1.16 15.56-9.8 13.9-18.7zM176 360a24 24 0 1 1 24-24 23.94 23.94 0 0 1-24 24z"]]
};
exports.faFootballHelmet = faFootballHelmet;
var faForklift = {
  prefix: 'fad',
  iconName: 'forklift',
  icon: [640, 512, [], "f47a", ["M96 352a80 80 0 1 0 80 80 80 80 0 0 0-80-80zm528 32h-80V16a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v416a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-272-32a80 80 0 1 0 80 80 80 80 0 0 0-80-80z", "M410.8 211.9L332.5 29.1A48 48 0 0 0 288.3 0H144a48 48 0 0 0-48 48v112H48a48 48 0 0 0-48 48v166.23a113.49 113.49 0 0 1 16.8-21.43 112 112 0 0 1 158.4 0 111.19 111.19 0 0 1 31.67 63.2h34.26A112 112 0 0 1 416 340.06v-103a64.23 64.23 0 0 0-5.2-25.16zM352 256h-96l-96-96V64h117.8L352 237.1z"]]
};
exports.faForklift = faForklift;
var faForward = {
  prefix: 'fad',
  iconName: 'forward',
  icon: [512, 512, [], "f04e", ["M224 297.69L52.5 440.61C31.9 457.81 0 443.41 0 416V96c0-27.4 31.9-41.7 52.5-24.6L224 214.32z", "M500.5 231.41a32.11 32.11 0 0 1 0 49.2l-192 160c-20.6 17.2-52.5 2.8-52.5-24.6V96c0-27.4 31.9-41.7 52.5-24.6z"]]
};
exports.faForward = faForward;
var faFragile = {
  prefix: 'fad',
  iconName: 'fragile',
  icon: [288, 512, [], "f4bb", ["M192.21 0l30.6 63.7-85.5 56 49.4 104.3-121.5-119.7 85.5-56L117.91 0z", "M160 350.3V480h53.9c24.5 0 33.1 32 20 32H54.11c-13.2 0-4.5-32 20-32H128V350.3C51.31 341.6-6.59 272.7.61 192.7l16-178.1A15.79 15.79 0 0 1 32.31 0h85.6l32.8 48.3-85.5 56L186.71 224l-49.4-104.3 85.5-56L192.21 0h63.5a15.79 15.79 0 0 1 15.7 14.6l16 178.1c7.2 80-50.7 148.8-127.41 157.6z"]]
};
exports.faFragile = faFragile;
var faFrenchFries = {
  prefix: 'fad',
  iconName: 'french-fries',
  icon: [512, 512, [], "f803", ["M169.57.3a16.22,16.22,0,0,0-6.72,3L134.34,24.9a16,16,0,0,0-6.07,15.68l36.9,197.22c5.3,7.59,14.49,14.87,26.83,20.75V33.19l-3.76-20.11A16,16,0,0,0,169.57.3Zm109.6,17.4-32-16A16,16,0,0,0,224,16V268.79a160.37,160.37,0,0,0,64,0V32A16,16,0,0,0,279.17,17.7ZM84.61,80.7A16,16,0,0,0,64.25,98.78L80.55,192H114c3.6,0,7,1,10.35,1.75l-20-107.16ZM370.75,32.27a16.38,16.38,0,0,0-7.33.43L329.14,43c-4.24,1.27-7.17,4.51-9.13,8.33V258.55c17.55-8.38,29.15-19.54,31.54-30.39.4-1.79,1.46-3.22,2.06-4.92L383.76,50.78A16,16,0,0,0,370.75,32.27Zm64,48a16.38,16.38,0,0,0-7.33.43l-17.31,5.17L391.36,193.13c2.24-.32,4.33-1.12,6.63-1.12h33.47l16.3-93.23A16,16,0,0,0,434.75,80.27Z", "M64,240a16,16,0,0,1,16-16h34c6.92,0,13.7,4.24,15.19,11,8.6,39,62.09,69,126.79,69s118.2-30,126.8-69c1.49-6.73,8.27-11,15.19-11h34a16,16,0,0,1,16,16,16.16,16.16,0,0,1-.38,3.46L393.48,487A32,32,0,0,1,362.28,512H149.73A32,32,0,0,1,118.48,487L64.38,243.48A16.18,16.18,0,0,1,64,240Z"]]
};
exports.faFrenchFries = faFrenchFries;
var faFrog = {
  prefix: 'fad',
  iconName: 'frog',
  icon: [576, 512, [], "f52e", ["M576 464a16 16 0 0 1-16 16h-90.38L351.09 354.09c5.07-54.15-29.93-85.06-40.8-93.21a104.78 104.78 0 0 0-125.13 0L150.38 287a16 16 0 0 0 19.22 25.6l32.76-24.6c20.69-15.53 48.35-20.81 72.24-10.88 44.06 18.32 57.85 70.37 33.71 106.6L272.51 432H352a32 32 0 0 1 32 32 16 16 0 0 1-16 16H64c-34.92 0-63.89-28-64-63-.5-166.8 126.69-303.9 289.33-319.45-.21 1.15-.4 2.32-.56 3.49a82.14 82.14 0 0 0-.77 11c0 47.54 39.29 80 80 80 46 0 80-37.61 80-80a81.4 81.4 0 0 0-1.34-14.53c3 1 59.41 19.62 98.86 41.23a58.22 58.22 0 0 1 .77 102l-154.44 86.61L490.37 432H544a32 32 0 0 1 32 32z", "M368 32a80 80 0 1 0 80 80 80 80 0 0 0-80-80zm0 48a32 32 0 0 1 32 32h-64a32 32 0 0 1 32-32z"]]
};
exports.faFrog = faFrog;
var faFrostyHead = {
  prefix: 'fad',
  iconName: 'frosty-head',
  icon: [384, 512, [], "f79b", ["M357 329.4a165 165 0 0 0-13.7-41.4H40.4A169.38 169.38 0 0 0 24 360.9c0 59.9 31.3 112.1 78.2 142 10.2 6.5 22.5 9.1 34.6 9.1h109.6a71.86 71.86 0 0 0 41.1-13c51.4-35.8 82.2-99.4 69.5-169.6zm-226.3 33.3a21.3 21.3 0 1 1 21.3-21.3 21.32 21.32 0 0 1-21.3 21.3zM192 464s-32-46.3-32-64a32 32 0 0 1 64 0c0 17.7-32 64-32 64zm61.3-101.3a21.3 21.3 0 1 1 21.3-21.3 21.32 21.32 0 0 1-21.3 21.3z", "M368 240H16a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h352a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16zM320 16a16 16 0 0 0-16-16H80a16 16 0 0 0-16 16v192h256z"]]
};
exports.faFrostyHead = faFrostyHead;
var faFrown = {
  prefix: 'fad',
  iconName: 'frown',
  icon: [496, 512, [], "f119", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8Zm80,168a32,32,0,1,1-32,32A32,32,0,0,1,328,176Zm-160,0a32,32,0,1,1-32,32A32,32,0,0,1,168,176ZM338.2,394.2a117.5,117.5,0,0,0-180.4,0c-13.5,16.3-38.1-4.2-24.6-20.5a149.34,149.34,0,0,1,229.5.1C376.3,390,351.7,410.5,338.2,394.2Z", "M168,176a32,32,0,1,0,32,32A32,32,0,0,0,168,176Zm160,0a32,32,0,1,0,32,32A32,32,0,0,0,328,176Z"]]
};
exports.faFrown = faFrown;
var faFrownOpen = {
  prefix: 'fad',
  iconName: 'frown-open',
  icon: [496, 512, [], "f57a", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8ZM136,208a32,32,0,1,1,32,32A32,32,0,0,1,136,208ZM323.3,391.3C292.1,381.7,263.9,376,248,376s-44.1,5.7-75.3,15.3a16,16,0,0,1-20.5-18.1c7-40,60.1-61.2,95.8-61.2s88.8,21.3,95.8,61.2a16,16,0,0,1-20.5,18.1ZM328,240a32,32,0,1,1,32-32A32,32,0,0,1,328,240Z", "M168,176a32,32,0,1,0,32,32A32,32,0,0,0,168,176Zm160,0a32,32,0,1,0,32,32A32,32,0,0,0,328,176Z"]]
};
exports.faFrownOpen = faFrownOpen;
var faFunction = {
  prefix: 'fad',
  iconName: 'function',
  icon: [640, 512, [], "f661", ["M334.59 152.91l-24.69-21c-7-6-17.83-5.09-23.38 2.23a307.46 307.46 0 0 0 0 371.68c5.56 7.32 16.38 8.18 23.38 2.23l24.69-21c6.59-5.61 7.31-15.2 2.15-22.14a242.8 242.8 0 0 1 0-289.89c5.17-6.91 4.45-16.51-2.15-22.11zm242.89-18.75c-5.56-7.32-16.38-8.18-23.38-2.23l-24.69 21c-6.59 5.61-7.31 15.2-2.15 22.14a242.82 242.82 0 0 1 0 289.9c-5.17 6.94-4.45 16.54 2.15 22.14l24.69 21c7 5.95 17.83 5.09 23.38-2.23a307.48 307.48 0 0 0 0-371.69z", "M477.25 320l46.06-46.06a16 16 0 0 0 0-22.63l-22.62-22.62a16 16 0 0 0-22.63 0L432 274.75l-46.06-46.06a16 16 0 0 0-22.63 0l-22.62 22.62a16 16 0 0 0 0 22.63L386.75 320l-46.06 46.06a16 16 0 0 0 0 22.63l22.62 22.62a16 16 0 0 0 22.63 0L432 365.25l46.06 46.06a16 16 0 0 0 22.63 0l22.62-22.62a16 16 0 0 0 0-22.63zM208 0h-48A104 104 0 0 0 56 104v64H16a16 16 0 0 0-16 16v48a16 16 0 0 0 16 16h40v128a24.07 24.07 0 0 1-24 24H16a16 16 0 0 0-16 16v48a16 16 0 0 0 16 16h16a104 104 0 0 0 104-104V248h40a16 16 0 0 0 16-16v-48a16 16 0 0 0-16-16h-40v-64a24.07 24.07 0 0 1 24-24h48a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16z"]]
};
exports.faFunction = faFunction;
var faFunnelDollar = {
  prefix: 'fad',
  iconName: 'funnel-dollar',
  icon: [640, 512, [], "f662", ["M480 192a160 160 0 1 0 160 160 160 160 0 0 0-160-160zm16 239.88V448a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8v-16.29a57.26 57.26 0 0 1-31.37-11.35 8 8 0 0 1-.57-12.14L443.81 397a8.21 8.21 0 0 1 10.13-.73 24.08 24.08 0 0 0 12.82 3.73h28.11c6.5 0 11.8-5.92 11.8-13.19 0-5.95-3.61-11.19-8.77-12.73l-45-13.5c-18.59-5.58-31.58-23.42-31.58-43.39 0-24.52 19.05-44.44 42.67-45.07V256a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16.29a57.18 57.18 0 0 1 31.37 11.35 8 8 0 0 1 .57 12.14L516.18 307a8.21 8.21 0 0 1-10.13.73 24 24 0 0 0-12.82-3.73h-28.11c-6.5 0-11.8 5.92-11.8 13.19 0 5.95 3.61 11.19 8.77 12.73l45 13.5c18.59 5.58 31.58 23.42 31.58 43.39 0 24.53-19.04 44.44-42.67 45.07z", "M507.09 343.42l-45-13.5c-5.16-1.54-8.77-6.78-8.77-12.73 0-7.27 5.3-13.19 11.8-13.19h28.11a24 24 0 0 1 12.82 3.72 8.21 8.21 0 0 0 10.13-.73l11.75-11.21a8 8 0 0 0-.57-12.14A57.18 57.18 0 0 0 496 272.29V256a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v16.12c-23.62.63-42.67 20.55-42.67 45.07 0 20 13 37.81 31.58 43.39l45 13.5c5.16 1.54 8.77 6.78 8.77 12.73 0 7.27-5.3 13.19-11.8 13.19h-28.12a24.08 24.08 0 0 1-12.82-3.72 8.21 8.21 0 0 0-10.13.73l-11.75 11.21a8 8 0 0 0 .57 12.14A57.26 57.26 0 0 0 464 431.71V448a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-16.12c23.63-.63 42.67-20.54 42.67-45.07 0-19.97-12.99-37.81-31.58-43.39zM288 352c0-89.79 62.05-165.17 145.46-186.06l101.2-111.87c20-20 5.82-54.07-22.4-54.07H31.74C3.52 0-10.61 34.12 9.34 54.07L192 256v155.92a40 40 0 0 0 16 32l80 60c20.86 15.64 48.47 7 59.22-13.57A191.33 191.33 0 0 1 288 352z"]]
};
exports.faFunnelDollar = faFunnelDollar;
var faFutbol = {
  prefix: 'fad',
  iconName: 'futbol',
  icon: [512, 512, [], "f1e3", ["M452 104v-.05.05zm51.88 159.77A246.7 246.7 0 0 1 461 395.61l-7.15-31.45-109.5 13.43-46.69 100.1L325 494l.06.23a248.87 248.87 0 0 1-138.06 0V494l27.37-16.28-46.69-100.1-109.52-13.46L51 395.61a246.7 246.7 0 0 1-42.87-131.8l24.17 21.08 80.61-75.24-20.83-108.5L60 104a248.5 248.5 0 0 1 111.65-81.26l.35.26-12.4 29.11 96.4 53.41 96.4-53.41-12.65-29.6A248.6 248.6 0 0 1 452 104l-31.7-2.84-21.16 108.5 80.62 75.24zM356.32 228L256 155.33 155.68 228l38.45 117.44h124.09z", "M352.4 52.11l-12.65-29.6a249 249 0 0 0-167.5 0l-12.65 29.6 96.4 53.41zm-34.18 293.37L356.32 228 256 155.33 155.68 228l38.45 117.44zM92.08 101.15L60 104A246.92 246.92 0 0 0 8 256c0 2.61.05 5.21.13 7.81l24.17 21.08 80.61-75.24zm252.26 276.44l-46.69 100.1 27.69 16.47A248.45 248.45 0 0 0 461 395.61l-7.15-31.45zM58.16 364.16L51 395.61a248.45 248.45 0 0 0 135.65 98.55l27.69-16.47-46.69-100.1zM452 104l-31.7-2.84-21.16 108.5 80.62 75.24 24.16-21.08c.08-2.6.13-5.2.13-7.81A246.92 246.92 0 0 0 452 104z"]]
};
exports.faFutbol = faFutbol;
var faGameBoard = {
  prefix: 'fad',
  iconName: 'game-board',
  icon: [512, 512, [], "f867", ["M480 0H32A32 32 0 0 0 0 32v448a32 32 0 0 0 32 32h448a32 32 0 0 0 32-32V32a32 32 0 0 0-32-32zm-31.8 448H64v-96h.2v-96H64v-96h.2V64h384z", "M256 256v-96h-95.9V64.1h-96v96H160V256H64.2v96h96v-96zm0 96h-95.8v96h96v-96H352v-96h-96zm96.1 96.1h96v-96h-96zm.1-288.1v96h96v-96zm-96-96v96h96V64z"]]
};
exports.faGameBoard = faGameBoard;
var faGameBoardAlt = {
  prefix: 'fad',
  iconName: 'game-board-alt',
  icon: [512, 512, [], "f868", ["M480 0H32A32 32 0 0 0 0 32v448a32 32 0 0 0 32 32h448a32 32 0 0 0 32-32V32a32 32 0 0 0-32-32zm-31.8 448h-384V64h384z", "M256 64v192h192V64zM64 448h192V256H64z"]]
};
exports.faGameBoardAlt = faGameBoardAlt;
var faGameConsoleHandheld = {
  prefix: 'fad',
  iconName: 'game-console-handheld',
  icon: [384, 512, [], "f8bb", ["M352 0H32A32 32 0 0 0 0 32v448a32 32 0 0 0 32 32h256a96 96 0 0 0 96-96V32a32 32 0 0 0-32-32zM160 344a8 8 0 0 1-8 8h-24v24a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8v-24H72a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h24v-24a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v24h24a8 8 0 0 1 8 8zm72 40a24 24 0 1 1 24-24 24 24 0 0 1-24 24zM112 224a16 16 0 0 1-16-16V80a16 16 0 0 1 16-16h160a16 16 0 0 1 16 16v112a32 32 0 0 1-32 32zm184 112a24 24 0 1 1 24-24 24 24 0 0 1-24 24z", "M112 224a16 16 0 0 1-16-16V80a16 16 0 0 1 16-16h160a16 16 0 0 1 16 16v112a32 32 0 0 1-32 32z"]]
};
exports.faGameConsoleHandheld = faGameConsoleHandheld;
var faGamepad = {
  prefix: 'fad',
  iconName: 'gamepad',
  icon: [640, 512, [], "f11b", ["M480.07 96H160a160 160 0 1 0 114.24 272h91.52A160 160 0 1 0 480.07 96zM248 268a12 12 0 0 1-12 12h-52v52a12 12 0 0 1-12 12h-24a12 12 0 0 1-12-12v-52H84a12 12 0 0 1-12-12v-24a12 12 0 0 1 12-12h52v-52a12 12 0 0 1 12-12h24a12 12 0 0 1 12 12v52h52a12 12 0 0 1 12 12zm216 76a40 40 0 1 1 40-40 40 40 0 0 1-40 40zm64-96a40 40 0 1 1 40-40 40 40 0 0 1-40 40z", "M248 268a12 12 0 0 1-12 12h-52v52a12 12 0 0 1-12 12h-24a12 12 0 0 1-12-12v-52H84a12 12 0 0 1-12-12v-24a12 12 0 0 1 12-12h52v-52a12 12 0 0 1 12-12h24a12 12 0 0 1 12 12v52h52a12 12 0 0 1 12 12z"]]
};
exports.faGamepad = faGamepad;
var faGamepadAlt = {
  prefix: 'fad',
  iconName: 'gamepad-alt',
  icon: [640, 512, [], "f8bc", ["M638.59 368.22l-33.37-211.59c-8.86-50.26-48.4-90.77-100.66-103.13h-.07a803.19 803.19 0 0 0-369 0C83.17 65.86 43.64 106.36 34.78 156.63L1.41 368.22C-8.9 426.73 38.8 480 101.51 480c49.67 0 93.77-30.07 109.48-74.64l7.52-21.36h203l7.49 21.36C444.72 449.93 488.82 480 538.49 480c62.71 0 110.41-53.27 100.1-111.78zM280 236a12 12 0 0 1-12 12h-52v52a12 12 0 0 1-12 12h-24a12 12 0 0 1-12-12v-52h-52a12 12 0 0 1-12-12v-24a12 12 0 0 1 12-12h52v-52a12 12 0 0 1 12-12h24a12 12 0 0 1 12 12v52h52a12 12 0 0 1 12 12zm152 76a40 40 0 1 1 40-40 40 40 0 0 1-40 40zm64-96a40 40 0 1 1 40-40 40 40 0 0 1-40 40z", "M280 236a12 12 0 0 1-12 12h-52v52a12 12 0 0 1-12 12h-24a12 12 0 0 1-12-12v-52h-52a12 12 0 0 1-12-12v-24a12 12 0 0 1 12-12h52v-52a12 12 0 0 1 12-12h24a12 12 0 0 1 12 12v52h52a12 12 0 0 1 12 12z"]]
};
exports.faGamepadAlt = faGamepadAlt;
var faGasPump = {
  prefix: 'fad',
  iconName: 'gas-pump',
  icon: [512, 512, [], "f52f", ["M256 0H96a64.06 64.06 0 0 0-64 64v384h288V64a64.06 64.06 0 0 0-64-64zm0 192H96V64h160z", "M256 64H96v128h160zm80 384H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm157.2-340.7l-81-81a16.06 16.06 0 0 0-22.6 0l-11.3 11.3a16.06 16.06 0 0 0 0 22.6L416 97.9V160a55.9 55.9 0 0 0 48 55.2V376a24 24 0 0 1-48 0v-32a88 88 0 0 0-88-88h-8v48h8a40 40 0 0 1 40 40v27.8c0 37.7 27 72 64.5 75.9A72.2 72.2 0 0 0 512 376V152.6a64.15 64.15 0 0 0-18.8-45.3z"]]
};
exports.faGasPump = faGasPump;
var faGasPumpSlash = {
  prefix: 'fad',
  iconName: 'gas-pump-slash',
  icon: [640, 512, [], "f5f4", ["M442.3 60.2a16.06 16.06 0 0 1 0-22.6l11.3-11.3a16.06 16.06 0 0 1 22.6 0l81 81a64.12 64.12 0 0 1 18.8 45.3V376a71.45 71.45 0 0 1-7.39 31.7L528 376.3V215.2a55.91 55.91 0 0 1-48-55.2V97.9zM370 416L96 204.21V416zM160 91.89V64h160v128h-30.47l190.33 147.11A88 88 0 0 0 392 256h-8V64a64.06 64.06 0 0 0-64-64H160a64.1 64.1 0 0 0-61 44.72zM400 448H80a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z", "M636.64 480.55L617 505.82a16 16 0 0 1-22.46 2.81L6.18 53.9a16 16 0 0 1-2.81-22.45L23 6.18a16 16 0 0 1 22.47-2.81L633.82 458.1a16 16 0 0 1 2.82 22.45z"]]
};
exports.faGasPumpSlash = faGasPumpSlash;
var faGavel = {
  prefix: 'fad',
  iconName: 'gavel',
  icon: [512, 512, [], "f0e3", ["M442.75 182.39L329.61 295.53 290 255.93l-81 81L175 303l81-81-39.6-39.6L329.61 69.26z", "M169 297.37a31.9 31.9 0 0 0-45.16 0L9.35 412.12a32 32 0 0 0 0 45.25l45.17 45.26a31.91 31.91 0 0 0 45.17 0l114.52-114.75a32 32 0 0 0 0-45.25zm7.49-109.32a23.92 23.92 0 0 0 33.87 0L334.61 63.6a24 24 0 0 0 0-33.94L312 7a23.93 23.93 0 0 0-33.88 0L153.94 131.48a24 24 0 0 0 0 33.94zM504 199.36l-22.6-22.62a23.9 23.9 0 0 0-33.87 0L323.32 301.19a24 24 0 0 0 0 33.94l22.58 22.62a23.91 23.91 0 0 0 33.88 0L504 233.3a24 24 0 0 0 0-33.94z"]]
};
exports.faGavel = faGavel;
var faGem = {
  prefix: 'fad',
  iconName: 'gem',
  icon: [576, 512, [], "f3a5", ["M100.7 192H0l218.7 255a3 3 0 0 0 5-3.3zm374.6 0l-123 251.7a3 3 0 0 0 5 3.2L576 192zm-327.1 0l137.1 318.2a3 3 0 0 0 5.5 0l137-318.2z", "M90.5 0L0 160h101.1L170.3 0zm395 0h-79.8l69.2 160H576zm-267 0l-69.2 160h277.4L357.5 0z"]]
};
exports.faGem = faGem;
var faGenderless = {
  prefix: 'fad',
  iconName: 'genderless',
  icon: [288, 512, [], "f22d", ["M144,336a80,80,0,1,1,80-80A80,80,0,0,1,144,336Z", "M144,112A144,144,0,1,0,288,256,144,144,0,0,0,144,112Zm0,224a80,80,0,1,1,80-80A80,80,0,0,1,144,336Z"]]
};
exports.faGenderless = faGenderless;
var faGhost = {
  prefix: 'fad',
  iconName: 'ghost',
  icon: [384, 512, [], "f6e2", ["M186.1.09C81 3.24 0 94.92 0 200.05V464a16 16 0 0 0 27.31 11.31l24.92-18.53A16 16 0 0 1 73.74 459l43 48.35a16 16 0 0 0 22.63 0L180 461.46a16 16 0 0 1 23.92 0l40.72 45.85a16 16 0 0 0 22.63 0L310.26 459a16 16 0 0 1 21.51-2.21l24.92 18.53C366.77 485.36 384 478.22 384 464V192C384 84 294.83-3.17 186.1.09zM128 224a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm128 0a32 32 0 1 1 32-32 32 32 0 0 1-32 32z", "M128 160a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm128 0a32 32 0 1 0 32 32 32 32 0 0 0-32-32z"]]
};
exports.faGhost = faGhost;
var faGift = {
  prefix: 'fad',
  iconName: 'gift',
  icon: [512, 512, [], "f06b", ["M224 320v160H64a32 32 0 0 1-32-32V320zm0-160H32a32 32 0 0 0-32 32v80a16 16 0 0 0 16 16h208zm256 0H288v128h208a16 16 0 0 0 16-16v-80a32 32 0 0 0-32-32zM288 480h160a32 32 0 0 0 32-32V320H288z", "M224 480h64V320h-64zM359.54 32c-41.82 0-68.86 21.3-103.54 68.3-34.68-47-61.72-68.3-103.54-68.3C103.71 32 64 71.5 64 120a85.65 85.65 0 0 0 10.15 40h78.21a40 40 0 1 1 0-80c20 0 34.78 3.3 86.55 80H224v128h64V160h-15c51.67-76.5 66-80 86.55-80a40 40 0 1 1 0 80h78.31A86.86 86.86 0 0 0 448 120c0-48.5-39.71-88-88.46-88z"]]
};
exports.faGift = faGift;
var faGiftCard = {
  prefix: 'fad',
  iconName: 'gift-card',
  icon: [576, 512, [], "f663", ["M0 416h576v48a48 48 0 0 1-48 48H48a48 48 0 0 1-48-48zm528-288h-57.66a88.38 88.38 0 0 1-78.61 48h-48.48l62.41 51.71a16 16 0 0 1 0 22.63l-11.31 11.31a16 16 0 0 1-22.63 0L288 188.07l-83.73 73.59a16 16 0 0 1-22.63 0l-11.31-11.31a16 16 0 0 1 0-22.63L232.75 176h-48.48a88.38 88.38 0 0 1-78.61-48H48a48 48 0 0 0-48 48v144h576V176a48 48 0 0 0-48-48z", "M0 320v96h576v-96zm184.27-144h48.48l-62.41 51.72a16 16 0 0 0 0 22.63l11.31 11.31a16 16 0 0 0 22.63 0L288 188.07l83.71 73.58a16 16 0 0 0 22.63 0l11.31-11.31a16 16 0 0 0 0-22.63L343.25 176h48.48C440.4 176 480 136.52 480 88S440.4 0 391.73 0c-17.4 0-38.41 2.65-62.2 22.31C317.35 32.37 304.27 47 288 68.89c-16.32-22-29.51-36.61-41.87-46.75C222.37 2.63 201.52 0 184.27 0 135.6 0 96 39.48 96 88s39.6 88 88.27 88zM391.73 48a40 40 0 1 1 0 80h-86.67c51.74-76.5 66.14-80 86.67-80zm-207.46 0c20 0 34.83 3.3 86.67 80h-86.67a40 40 0 1 1 0-80z"]]
};
exports.faGiftCard = faGiftCard;
var faGifts = {
  prefix: 'fad',
  iconName: 'gifts',
  icon: [640, 512, [], "f79c", ["M27 51.72l9.3-13A16 16 0 0 1 58.6 35l32.1 22.8-11.5-30.58a15.89 15.89 0 0 1 9.3-20.6l15-5.6a16 16 0 0 1 20.6 9.4l19.9 53.1 19.9-53a16 16 0 0 1 20.6-9.4l15 5.6a16 16 0 0 1 9.4 20.6l-11.5 30.6 32-22.9a15.9 15.9 0 0 1 22.3 3.7l9.3 13A15.9 15.9 0 0 1 257.3 74l-30.67 22H61.37L30.7 74A16 16 0 0 1 27 51.72zM224 256v88h184v-88h-65.88a68.15 68.15 0 0 1-44.4-16.33h-.05l-.06-.06-.2-.17-.2-.18A75.7 75.7 0 0 1 284 224h-28a32 32 0 0 0-32 32zm232 256h152a32 32 0 0 0 32-32v-88H456zm152-288h-28a75.7 75.7 0 0 1-13.21 15.18l-.2.18-.2.17-.07.06h-.05A68.15 68.15 0 0 1 521.88 256H456v88h184v-88a32 32 0 0 0-32-32zM224 392v88a32 32 0 0 0 32 32h152V392z", "M240.6 194.12c1.9-30.8 17.3-61.2 44-79.8A31.71 31.71 0 0 0 256 96H32a32 32 0 0 0-32 32v352a32 32 0 0 0 32 32h168.9a63.54 63.54 0 0 1-8.9-32V256a64 64 0 0 1 48.6-61.88zM456 344v-88h65.88a68.15 68.15 0 0 0 44.4-16.33h.05l.07-.06.2-.17.2-.18a73.09 73.09 0 0 0 25.2-55.55A74.58 74.58 0 0 0 576.29 138a69.14 69.14 0 0 0-24.07-19.58A72.41 72.41 0 0 0 519.9 111c-29.34 0-50.57 18.68-63.22 34.35C445.18 159.62 437 175.6 432 187c-5-11.46-13.23-27.52-24.75-41.76-12.62-15.6-33.82-34.2-63.15-34.2a72.41 72.41 0 0 0-32.32 7.35A69.14 69.14 0 0 0 287.71 138 74.58 74.58 0 0 0 272 183.71a73.09 73.09 0 0 0 25.16 55.47l.2.18.2.17.06.06h.05A68.15 68.15 0 0 0 342.12 256H408v88H224v48h184v120h48V392h184v-48zm63.9-184.65c17.7 0 24.1 14.6 24.1 24.36a24.78 24.78 0 0 1-8.8 19.13l-.06.06a20.35 20.35 0 0 1-13.26 4.77H475.4c8.8-20.43 25.8-48.32 44.5-48.32zm-177.78 48.32a20.35 20.35 0 0 1-13.26-4.77l-.06-.06a24.78 24.78 0 0 1-8.8-19.13c0-9.76 6.4-24.36 24.1-24.36 18.7 0 35.6 27.58 44.5 48.32z"]]
};
exports.faGifts = faGifts;
var faGingerbreadMan = {
  prefix: 'fad',
  iconName: 'gingerbread-man',
  icon: [416, 512, [], "f79d", ["M322.21 304H352a64.07 64.07 0 0 0 63.11-74.8c-5.1-31.5-34.71-53.2-66.51-53.2h-65.89a7.86 7.86 0 0 1-5.5-13.5c20.8-21.6 31.6-52.79 24.9-86.29-7.5-37.5-38.5-67.8-76-74.6C165-9.38 112 37.12 112 96a95.56 95.56 0 0 0 26.7 66.29c5 5.2 1.7 13.7-5.5 13.7H67.38C35.48 176 6 197.81.87 229.21A64.07 64.07 0 0 0 64 304h29.79a18.2 18.2 0 0 1 18.2 18.2 18.43 18.43 0 0 1-4.2 11.7l-58.21 69.8c-23.3 27.9-21.6 72.4 7.1 94.7A63 63 0 0 0 96 512a63.92 63.92 0 0 0 49.2-23l38.31-45.9a32 32 0 0 1 49.2 0L271 489a64.06 64.06 0 0 0 88.51 9.5c28.7-22.4 30.4-66.8 7.1-94.7l-58.2-69.8a18.43 18.43 0 0 1-4.2-11.7 18 18 0 0 1 18-18.3zM176 96a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm32 272a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm0-64a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm0-64a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm32-144a16 16 0 1 1 16-16 16 16 0 0 1-16 16z", "M208 240a16 16 0 1 0-16-16 16 16 0 0 0 16 16zm0 32a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm0 64a16 16 0 1 0 16 16 16 16 0 0 0-16-16z"]]
};
exports.faGingerbreadMan = faGingerbreadMan;
var faGlass = {
  prefix: 'fad',
  iconName: 'glass',
  icon: [384, 512, [], "f804", ["M93.8 448L73.22 160h237.55L290.2 448z", "M317.63 64L290.2 448H93.8L66.37 64h251.26M352 0H32A32 32 0 0 0 0 32c0 .67 0 1.33.06 2l32 448A32 32 0 0 0 64 512h256a32 32 0 0 0 31.94-30l32-448A32 32 0 0 0 354 .06c-.67 0-1.34-.06-2-.06z"]]
};
exports.faGlass = faGlass;
var faGlassChampagne = {
  prefix: 'fad',
  iconName: 'glass-champagne',
  icon: [256, 512, [], "f79e", ["M64.44 221L78 128h100l13.59 93a55.77 55.77 0 0 1-10.26 39.82c-25.64 35.81-81.15 35.65-106.67 0A55.67 55.67 0 0 1 64.44 221z", "M216 464h-56V347.7c60.7-15.2 103.3-72 95-135.4L228 27.4A32.07 32.07 0 0 0 196.33 0H59.73A32.07 32.07 0 0 0 28 27.4L1 212.3c-8.3 63.4 34.3 120.2 95 135.4V464H40a40 40 0 0 0-40 40 8 8 0 0 0 8 8h240a8 8 0 0 0 8-8 40 40 0 0 0-40-40zM74.7 260.82A55.67 55.67 0 0 1 64.44 221L87.37 64h81.33l22.93 157a55.77 55.77 0 0 1-10.26 39.82c-25.64 35.81-81.15 35.65-106.67 0z"]]
};
exports.faGlassChampagne = faGlassChampagne;
var faGlassCheers = {
  prefix: 'fad',
  iconName: 'glass-cheers',
  icon: [640, 512, [], "f79f", ["M378.84 156.05l84.21-34.93 45.6 76a51.11 51.11 0 0 1 5.35 37.41c-9 39.24-56 59-90.43 37.72a51.21 51.21 0 0 1-22.77-30.13zm-252.68 78.48c9 39.24 56 59 90.42 37.72a51.18 51.18 0 0 0 22.78-30.13l22-86-84.23-34.94-45.57 76a51.15 51.15 0 0 0-5.4 37.35z", "M639.39 433.59a39.84 39.84 0 0 0-52.2-21.6l-22.09 9.2-38.7-101.88c47.89-35 64.79-100.29 34.5-152.78L474.3 16.05a32.1 32.1 0 0 0-40-13.59L320 49.85 205.71 2.46A31.71 31.71 0 0 0 193.46 0a32.05 32.05 0 0 0-27.75 16.05L79.12 166.53c-30.2 52.49-13.4 117.78 34.5 152.68l-38.7 101.88-22.1-9.2a39.84 39.84 0 0 0-52.2 21.6A8 8 0 0 0 4.92 444l162.29 67.39a8.13 8.13 0 0 0 3.1.62 7.88 7.88 0 0 0 7.3-4.92 40.08 40.08 0 0 0-21.61-52.3l-22.09-9.2L173.31 342c4.4.5 8.8 1.3 13.1 1.3 51.7 0 99.4-33.09 113.4-85.28L320 182.63 340.21 258c14 52.19 61.69 85.28 113.39 85.28 4.3 0 8.7-.8 13.1-1.3L506 445.59l-22.1 9.2a40 40 0 0 0-21.6 52.29 8 8 0 0 0 7.35 4.92 7.81 7.81 0 0 0 3.05-.62L635.09 444a8 8 0 0 0 4.3-10.41zm-400-191.47a51.18 51.18 0 0 1-22.78 30.13c-34.4 21.29-81.39 1.52-90.42-37.72a51.15 51.15 0 0 1 5.38-37.38l75-125 68.95 28.76zM514 234.53c-9 39.24-56 59-90.43 37.72a51.21 51.21 0 0 1-22.77-30.13l-36.04-141.18 68.94-28.76 74.95 125a51.11 51.11 0 0 1 5.35 37.35z"]]
};
exports.faGlassCheers = faGlassCheers;
var faGlassCitrus = {
  prefix: 'fad',
  iconName: 'glass-citrus',
  icon: [512, 512, [], "f869", ["M512 144c0 78.32-62.61 141.73-140.48 143.64l4.85-48.49c49-4.31 87.63-45.08 87.63-95.15a96.11 96.11 0 0 0-96-96c-35.37 0-66 19.45-82.64 48h-52.54C252.65 40.2 305.39 0 368 0a144 144 0 0 1 144 144zM256 448l20.57-192H73.23L93.8 448z", "M283.43 192L256 448H93.8L66.37 192h217.06m34.37-64H32a32 32 0 0 0-32 32c0 .67 0 1.33.06 2l32 320A32 32 0 0 0 64 512h221.8a32 32 0 0 0 31.94-30l32-320a32 32 0 0 0-29.93-33.94c-.68 0-1.35-.06-2.01-.06z"]]
};
exports.faGlassCitrus = faGlassCitrus;
var faGlassMartini = {
  prefix: 'fad',
  iconName: 'glass-martini',
  icon: [512, 512, [], "f000", ["M405.12 64L256 213.13 106.84 64z", "M502 57.6C523.28 36.34 508.23 0 478.18 0H33.78C3.73 0-11.32 36.34 10 57.6l214 214V464h-56a40 40 0 0 0-40 40 8 8 0 0 0 8 8h240a8 8 0 0 0 8-8 40 40 0 0 0-40-40h-56V271.64zM256 213.13L106.84 64h298.28z"]]
};
exports.faGlassMartini = faGlassMartini;
var faGlassMartiniAlt = {
  prefix: 'fad',
  iconName: 'glass-martini-alt',
  icon: [512, 512, [], "f57b", ["M256 213.13L154.84 112h202.27z", "M405.12 64L256 213.13 106.84 64h298.28m73.06-64H33.78C3.73 0-11.32 36.34 10 57.6l214 214V464h-56a40 40 0 0 0-40 40 8 8 0 0 0 8 8h240a8 8 0 0 0 8-8 40 40 0 0 0-40-40h-56V271.64l214-214C523.28 36.34 508.23 0 478.18 0z"]]
};
exports.faGlassMartiniAlt = faGlassMartiniAlt;
var faGlassWhiskey = {
  prefix: 'fad',
  iconName: 'glass-whiskey',
  icon: [512, 512, [], "f7a0", ["M119.53 415.15L89.52 224h333.15l-29.81 191.22-.07.43v.31H119.73l-.06-.4z", "M442.63 96l-49.77 319.22-.07.43v.31H119.73l-.06-.4-.07-.44L69.42 96h373.21M480 32H32A32 32 0 0 0 .32 68.51l56 356.58A64 64 0 0 0 119.71 480h273a64.07 64.07 0 0 0 63.4-54.91l55.57-356.58A32 32 0 0 0 480 32z"]]
};
exports.faGlassWhiskey = faGlassWhiskey;
var faGlassWhiskeyRocks = {
  prefix: 'fad',
  iconName: 'glass-whiskey-rocks',
  icon: [512, 512, [], "f7a1", ["M119.6 415.59l.06.4h273.06v-.31l.07-.43L427.66 192H84.49l35 223.15zM327.43 233.7l46.87 46.89a33.19 33.19 0 0 1 0 46.89l-46.87 46.89a33.14 33.14 0 0 1-46.86 0l-46.87-46.89a33.19 33.19 0 0 1 0-46.89l46.87-46.89a33.15 33.15 0 0 1 46.86 0zM128 256a32 32 0 0 1 32-32h64a31.86 31.86 0 0 1 16.47 4.55L211.07 258a65.24 65.24 0 0 0 0 92.13L213 352h-53a32 32 0 0 1-32-32z", "M442.63 96l-49.77 319.22-.07.43v.31H119.73l-.06-.4-.07-.44L69.42 96h373.21M480 32H32A32 32 0 0 0 .32 68.51l56 356.58A64 64 0 0 0 119.71 480h273a64.07 64.07 0 0 0 63.4-54.91l55.57-356.58A32 32 0 0 0 480 32z"]]
};
exports.faGlassWhiskeyRocks = faGlassWhiskeyRocks;
var faGlasses = {
  prefix: 'fad',
  iconName: 'glasses',
  icon: [576, 512, [], "f530", ["M64 328.58v37.54C64 393.63 87 416 115.2 416h37.12c26.66 0 49.09-20.3 51.06-46.21l3.13-41.22a196.2 196.2 0 0 0-69.93-12.92A217.08 217.08 0 0 0 64 328.58zm448 37.55v-37.54a217.07 217.07 0 0 0-72.55-12.93 196.27 196.27 0 0 0-69.95 12.92l3.13 41.22c2 25.91 24.39 46.21 51.06 46.21h37.11C489 416 512 393.64 512 366.13z", "M574.1 280.38L528.75 98.67a87.94 87.94 0 0 0-113.19-62.14l-15.25 5.08a16 16 0 0 0-10.12 20.24L395.25 77a16 16 0 0 0 20.23 10.12l13.18-4.39c10.87-3.62 23-3.57 33.16 1.73a39.62 39.62 0 0 1 20.37 25.82l38.46 153.82a276.75 276.75 0 0 0-81.2-12.46c-34.77 0-74 7-114.85 26.74h-73.18c-40.87-19.74-80.08-26.75-114.86-26.75a276.76 276.76 0 0 0-81.21 12.46l38.46-153.8a39.59 39.59 0 0 1 20.38-25.81c10.16-5.3 22.28-5.35 33.15-1.73l13.17 4.39A16 16 0 0 0 180.74 77l5.06-15.18a16 16 0 0 0-10.12-20.22l-15.25-5.08A87.95 87.95 0 0 0 47.24 98.65L1.9 280.38A64.16 64.16 0 0 0 0 295.87v70.25C0 429 51.58 480 115.2 480h37.12c60.28 0 110.37-45.94 114.88-105.37l2.93-38.63h35.75l2.93 38.63C313.31 434.07 363.4 480 423.68 480h37.12c63.62 0 115.2-51 115.2-113.87v-70.25a64.24 64.24 0 0 0-1.9-15.5zM203.38 369.8c-2 25.91-24.4 46.21-51.06 46.21H115.2C87 416 64 393.63 64 366.12v-37.54a217.08 217.08 0 0 1 72.58-12.92 196.2 196.2 0 0 1 69.93 12.92zM460.8 416h-37.12c-26.67 0-49.1-20.3-51.06-46.21l-3.13-41.22a196.27 196.27 0 0 1 69.95-12.92A217.07 217.07 0 0 1 512 328.59v37.54c0 27.51-23 49.87-51.2 49.87z"]]
};
exports.faGlasses = faGlasses;
var faGlassesAlt = {
  prefix: 'fad',
  iconName: 'glasses-alt',
  icon: [576, 512, [], "f5f5", ["M136 272a72 72 0 1 0 72 72 72.08 72.08 0 0 0-72-72zm304 0a72 72 0 1 0 72 72 72.08 72.08 0 0 0-72-72z", "M560.51 225.9L528.75 98.64C522.05 71.78 495 32 443.33 32c-15.63 0-23 2.94-43 9.6a16 16 0 0 0-10.12 20.24L395.25 77a16 16 0 0 0 15.18 11c3.54 0 4.82-.74 18.23-5.21 26.07-8.68 48.2 6.13 53.53 27.54L511.86 229A134.81 134.81 0 0 0 440 208c-55.09 0-102.27 32.91-123.65 80h-56.7c-21.38-47.09-68.56-80-123.65-80a134.89 134.89 0 0 0-71.86 21l29.67-118.72c5.32-21.41 27.46-36.22 53.53-27.54C160.76 87.21 162 88 165.57 88a16 16 0 0 0 15.18-11l5.06-15.18a16 16 0 0 0-10.12-20.24c-20-6.65-27.39-9.59-43-9.59C81 32 54 71.78 47.25 98.64L15.49 225.9C2.16 279.34 0 300.12 0 344a136 136 0 0 0 136 136c72.37 0 131-56.69 135.19-128h33.61c4.2 71.31 62.82 128 135.2 128a136 136 0 0 0 136-136c0-43.88-2.16-64.66-15.49-118.1zM136 416a72 72 0 1 1 72-72 72.08 72.08 0 0 1-72 72zm304 0a72 72 0 1 1 72-72 72.08 72.08 0 0 1-72 72z"]]
};
exports.faGlassesAlt = faGlassesAlt;
var faGlobe = {
  prefix: 'fad',
  iconName: 'globe',
  icon: [496, 512, [], "f0ac", ["M340.45,320H155.55a579.08,579.08,0,0,1,0-128h184.9A575,575,0,0,1,344,256,575,575,0,0,1,340.45,320ZM160.2,160H335.8c-.41-2.31-.84-4.62-1.28-6.91-6-30.85-14.42-58.37-25.13-81.78C299.54,49.77,288,32.54,276.05,21.48,266.38,12.53,256.94,8,248,8s-18.38,4.53-28,13.48c-12,11.06-23.49,28.29-33.34,49.83C176,94.72,167.5,122.24,161.53,153.09,161,155.38,160.61,157.69,160.2,160ZM120,256a608,608,0,0,1,3.34-64H8.35a249.52,249.52,0,0,0,0,128h115A608,608,0,0,1,120,256Zm367.62-64h-115A608.06,608.06,0,0,1,376,256a608,608,0,0,1-3.34,64h115a249.52,249.52,0,0,0,0-128ZM476.7,160A248.62,248.62,0,0,0,315.58,17.32c24.13,33,42.89,83.15,52.75,142.68ZM315.58,494.68A248.59,248.59,0,0,0,476.71,352H368.33C358.47,411.53,339.71,461.68,315.58,494.68ZM335.8,352H160.2c.41,2.31.84,4.62,1.28,6.91,6,30.85,14.42,58.37,25.13,81.78,9.85,21.54,21.38,38.77,33.34,49.83,9.67,9,19.11,13.48,28.05,13.48s18.38-4.53,28.05-13.48c12-11.06,23.49-28.29,33.34-49.83,10.71-23.41,19.16-50.93,25.13-81.78C335,356.62,335.39,354.31,335.8,352ZM180.42,17.32A248.59,248.59,0,0,0,19.29,160H127.67C137.53,100.47,156.29,50.32,180.42,17.32ZM19.29,352A248.59,248.59,0,0,0,180.42,494.68c-24.13-33-42.89-83.15-52.75-142.68Z", "M376,256a608,608,0,0,0-3.34-64h115a245.72,245.72,0,0,0-10.92-32H368.33c-9.86-59.53-28.62-109.68-52.75-142.68A248.23,248.23,0,0,0,248,8c8.94,0,18.38,4.53,28.05,13.48,12,11.06,23.49,28.29,33.34,49.83,10.71,23.41,19.16,50.93,25.13,81.78.44,2.29.87,4.6,1.28,6.91H160.2c.41-2.31.84-4.62,1.28-6.91,6-30.85,14.42-58.37,25.13-81.78C196.46,49.77,208,32.54,220,21.48,229.62,12.53,239.06,8,248,8a248.23,248.23,0,0,0-67.58,9.32c-24.13,33-42.89,83.15-52.75,142.68H19.29A245.72,245.72,0,0,0,8.37,192h115a613.93,613.93,0,0,0,0,128H8.37a245.72,245.72,0,0,0,10.92,32H127.67c9.86,59.53,28.62,109.68,52.75,142.68A248.23,248.23,0,0,0,248,504c-8.94,0-18.38-4.53-28.05-13.48-12-11.06-23.49-28.29-33.34-49.83-10.71-23.41-19.16-50.93-25.13-81.78-.44-2.29-.87-4.6-1.28-6.91H335.8c-.41,2.31-.84,4.62-1.28,6.91-6,30.85-14.42,58.37-25.13,81.78-9.85,21.54-21.38,38.77-33.34,49.83-9.67,9-19.11,13.48-28.05,13.48a248.23,248.23,0,0,0,67.58-9.32c24.13-33,42.89-83.15,52.75-142.68H476.71a245.72,245.72,0,0,0,10.92-32h-115A605.37,605.37,0,0,0,376,256Zm-35.54,64H155.55a579.08,579.08,0,0,1,0-128h184.9A575,575,0,0,1,344,256a575,575,0,0,1-3.55,64Z"]]
};
exports.faGlobe = faGlobe;
var faGlobeAfrica = {
  prefix: 'fad',
  iconName: 'globe-africa',
  icon: [496, 512, [], "f57c", ["M491.33,208H423.5A15.5,15.5,0,0,0,408,223.5h0v6.93a15.49,15.49,0,0,1-8.57,13.86L384,252a15.49,15.49,0,0,1-15.53-1L350.3,238.88a15.52,15.52,0,0,0-13.5-1.81l-2.65.88a15.47,15.47,0,0,0-9.83,19.56,15.83,15.83,0,0,0,1.83,3.74l13.24,19.86a15.49,15.49,0,0,0,12.89,6.9h8.21a15.5,15.5,0,0,1,15.5,15.5v11.34a15.52,15.52,0,0,1-3.1,9.3l-18.74,25a15.57,15.57,0,0,0-2.83,6.43L347,378.39a15.53,15.53,0,0,1-4.76,8.56,159.61,159.61,0,0,0-25,29.16l-13,19.55a27.77,27.77,0,0,1-47.91-3A78.82,78.82,0,0,1,248,397.39V367.5A15.5,15.5,0,0,0,232.5,352H206.62A54.63,54.63,0,0,1,152,297.37V283.31a54.65,54.65,0,0,1,21.85-43.7l27.58-20.69A54.6,54.6,0,0,1,234.2,208h.89a54.52,54.52,0,0,1,24.43,5.77l14.72,7.36a15.49,15.49,0,0,0,11.83.84l47.31-15.77a15.5,15.5,0,0,0-4.9-30.2H318.39a15.5,15.5,0,0,1-11-4.54l-6.92-6.92a15.5,15.5,0,0,0-11-4.54h-90A15.5,15.5,0,0,1,184,144.5v-4.4a15.52,15.52,0,0,1,11.74-15l14.45-3.61a15.53,15.53,0,0,0,9.14-6.44l8.08-12.11A15.47,15.47,0,0,1,240.3,96h24.21A15.5,15.5,0,0,0,280,80.49V10.05A249.89,249.89,0,0,0,248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256A249.51,249.51,0,0,0,491.33,208Z", "M423.5,208A15.5,15.5,0,0,0,408,223.5h0v6.93a15.49,15.49,0,0,1-8.57,13.86L384,252a15.49,15.49,0,0,1-15.53-1L350.3,238.88a15.52,15.52,0,0,0-13.5-1.81l-2.65.88a15.47,15.47,0,0,0-9.83,19.56,15.83,15.83,0,0,0,1.83,3.74l13.24,19.86a15.49,15.49,0,0,0,12.89,6.9h8.21a15.5,15.5,0,0,1,15.5,15.5v11.34a15.52,15.52,0,0,1-3.1,9.3l-18.74,25a15.57,15.57,0,0,0-2.83,6.43L347,378.39a15.53,15.53,0,0,1-4.76,8.56,159.61,159.61,0,0,0-25,29.16l-13,19.55a27.77,27.77,0,0,1-47.91-3A78.82,78.82,0,0,1,248,397.39V367.5A15.5,15.5,0,0,0,232.5,352H206.62A54.63,54.63,0,0,1,152,297.37V283.31a54.65,54.65,0,0,1,21.85-43.7l27.58-20.69A54.6,54.6,0,0,1,234.2,208h.89a54.52,54.52,0,0,1,24.43,5.77l14.72,7.36a15.49,15.49,0,0,0,11.83.84l47.31-15.77a15.5,15.5,0,0,0-4.9-30.2H318.39a15.5,15.5,0,0,1-11-4.54l-6.92-6.92a15.5,15.5,0,0,0-11-4.54h-90A15.5,15.5,0,0,1,184,144.5v-4.4a15.52,15.52,0,0,1,11.74-15l14.45-3.61a15.53,15.53,0,0,0,9.14-6.44l8.08-12.11A15.47,15.47,0,0,1,240.3,96h24.21A15.5,15.5,0,0,0,280,80.49V10.05C386,23.7,471,104.24,491.34,208Z"]]
};
exports.faGlobeAfrica = faGlobeAfrica;
var faGlobeAmericas = {
  prefix: 'fad',
  iconName: 'globe-americas',
  icon: [496, 512, [], "f57d", ["M489.55,312.41C464,422.22,365.59,504,248,504,111,504,0,393,0,256A247,247,0,0,1,56,99v45.71a50,50,0,0,0,8.55,27.95c11.72,17.39,28.38,42.07,35.67,52.77a114.79,114.79,0,0,0,18.06,20.74l.8.72a144.26,144.26,0,0,0,31.65,21.75c14,7.05,34.44,18.16,48.81,26.11a31.9,31.9,0,0,1,16.46,28v32a32,32,0,0,0,9.37,22.63c15,15,24.32,38.63,22.63,51.25V457.7a21,21,0,0,0,23.49,20.85c1.75-.21,3.49-.44,5.23-.7a20.91,20.91,0,0,0,17.17-15.76L308,404.46c2-5.49,3.26-11.21,4.77-16.87A23.9,23.9,0,0,1,319,376.88c3.32-3.33,7.41-7.4,11.31-11.28a46.46,46.46,0,0,0,13.72-33A30.49,30.49,0,0,0,335.1,311l-13.71-13.67A32,32,0,0,0,298.76,288H232c-9.41-4.71-21.48-32-32-32a67.72,67.72,0,0,1-30.31-7.16l-11.08-5.54a12,12,0,0,1,1.56-22l31.17-10.39A16,16,0,0,1,206.9,214l9.28,8.06a8,8,0,0,0,5.24,2h5.64a8,8,0,0,0,7.15-11.58l-15.59-31.19A8,8,0,0,1,220.2,172l9.92-9.65A8,8,0,0,1,235.7,160h9a8,8,0,0,0,5.66-2.34l8-8a8,8,0,0,0,0-11.31l-4.69-4.69a8,8,0,0,1,0-11.31L264,112l4.69-4.68a16,16,0,0,0,0-22.63h0l-24.4-24.4a12.38,12.38,0,0,0-9.55-3.61c-2.53.17-5.05.38-7.58.65A12.41,12.41,0,0,0,216,69.66a16.35,16.35,0,0,1-11.59,15.83,16,16,0,0,1-11.57-1.07,66.09,66.09,0,0,1-16-11.24L136.26,34.54A247,247,0,0,1,248,8C351.83,8,440.71,71.76,477.67,162.27l-36.51,3.15a76.22,76.22,0,0,0-27.48,7.74,24.05,24.05,0,0,0-9.24,8.15l-19.59,29.38a24,24,0,0,0,0,26.62l18,27a24,24,0,0,0,10.54,8.78l20.52,10.1Z", "M321.39,297.36A32,32,0,0,0,298.76,288H232c-9.41-4.71-21.48-32-32-32a67.72,67.72,0,0,1-30.31-7.16l-11.08-5.54a12,12,0,0,1,1.56-22l31.17-10.39A16,16,0,0,1,206.9,214l9.28,8.06a8,8,0,0,0,5.24,2h5.64a8,8,0,0,0,7.15-11.58l-15.59-31.19A8,8,0,0,1,220.2,172l9.92-9.65A8,8,0,0,1,235.7,160h9a8,8,0,0,0,5.66-2.34l8-8a8,8,0,0,0,0-11.31l-4.69-4.69a8,8,0,0,1,0-11.31L264,112l4.69-4.68a16,16,0,0,0,0-22.63h0l-24.4-24.4a12.38,12.38,0,0,0-9.55-3.61c-2.53.17-5.05.38-7.58.65A12.41,12.41,0,0,0,216,69.66a16.35,16.35,0,0,1-11.59,15.83,16,16,0,0,1-11.57-1.07,66.09,66.09,0,0,1-16-11.24L136.26,34.54A249,249,0,0,0,56,99v45.71a50,50,0,0,0,8.55,27.95c11.72,17.39,28.38,42.07,35.67,52.77a114.79,114.79,0,0,0,18.06,20.74l.8.72a144.26,144.26,0,0,0,31.65,21.75c14,7.05,34.44,18.16,48.81,26.11a31.9,31.9,0,0,1,16.46,28v32a32,32,0,0,0,9.37,22.63c15,15,24.32,38.63,22.63,51.25V457.7a21,21,0,0,0,23.49,20.85c1.75-.21,3.49-.44,5.23-.7a20.91,20.91,0,0,0,17.17-15.76L308,404.46c2-5.49,3.26-11.21,4.77-16.87A23.9,23.9,0,0,1,319,376.88c3.32-3.33,7.41-7.4,11.31-11.28a46.46,46.46,0,0,0,13.72-33A30.49,30.49,0,0,0,335.1,311ZM477.67,162.27l-36.51,3.15a76.22,76.22,0,0,0-27.48,7.74,24.05,24.05,0,0,0-9.24,8.15l-19.59,29.38a24,24,0,0,0,0,26.62l18,27a24,24,0,0,0,10.54,8.78l20.52,10.1,55.64,29.22a249.21,249.21,0,0,0-11.88-150.14Z"]]
};
exports.faGlobeAmericas = faGlobeAmericas;
var faGlobeAsia = {
  prefix: 'fad',
  iconName: 'globe-asia',
  icon: [496, 512, [], "f57e", ["M312,16.35V50.73a28,28,0,0,1-11.12,22.35l-41.41,31.27a8,8,0,0,0,.86,13.81l10.83,5.41A16,16,0,0,1,280,137.88V216a8,8,0,0,1-8,8h-3.06a8,8,0,0,1-7.15-4.42,4.47,4.47,0,0,0-1.72-1.86,4.42,4.42,0,0,0-6.06,1.54h0l-17.34,29A16,16,0,0,1,222.94,256h-.31a16,16,0,0,0-11.32,4.69l-5.66,5.66a8,8,0,0,0,0,11.31l5.66,5.66A16,16,0,0,1,216,294.63V304a16,16,0,0,1-16,16h-6.1a16,16,0,0,1-14.28-8.85L157,265.92a8,8,0,0,0-10.72-3.6h0a8.14,8.14,0,0,0-2.11,1.53l-19.47,19.46A16,16,0,0,1,113.38,288H2.05C17.74,409.88,121.84,504,248,504c137,0,248-111,248-248C496,141.13,418,44.56,312,16.35Zm96,342.08a16,16,0,0,1-4.69,11.31l-9.57,9.57A16,16,0,0,1,382.43,384H367.27a16,16,0,0,1-11.36-4.74l-13-13a26.78,26.78,0,0,0-25.42-7l-21.27,5.32a15.86,15.86,0,0,1-3.88.48H282a16,16,0,0,1-11.24-4.69l-11.91-11.91a8,8,0,0,1-2.34-5.66V332.6a8,8,0,0,1,5-7.43l39.34-15.74a26.35,26.35,0,0,0,5.59-3.05l23.71-16.89a8,8,0,0,1,4.64-1.48h12.14a8,8,0,0,1,7.39,4.93l5.35,12.85a4,4,0,0,0,3.69,2.46h3.8a4,4,0,0,0,3.84-2.88l4.16-14.49A4,4,0,0,1,379,288h6.06a4,4,0,0,1,4,4v13a8,8,0,0,0,2.34,5.66l11.91,11.91A16,16,0,0,1,408,333.83Z", "M260.07,217.72a4.47,4.47,0,0,1,1.72,1.86,8,8,0,0,0,7.15,4.42H272a8,8,0,0,0,8-8V137.88a16,16,0,0,0-8.84-14.31l-10.83-5.41a8,8,0,0,1-.86-13.81l41.41-31.27A28,28,0,0,0,312,50.73V16.35A248.23,248.23,0,0,0,248,8C111,8,0,119,0,256a249.89,249.89,0,0,0,2.05,32H113.38a16,16,0,0,0,11.31-4.69l19.47-19.46A8,8,0,0,1,157,265.92l22.62,45.23A16,16,0,0,0,193.9,320H200a16,16,0,0,0,16-16v-9.37a16,16,0,0,0-4.69-11.31l-5.66-5.66a8,8,0,0,1,0-11.31l5.66-5.66A16,16,0,0,1,222.63,256h.31a16,16,0,0,0,13.72-7.77L254,219.28a4.42,4.42,0,0,1,6.05-1.57Zm143.24,104.8L391.4,310.61a8,8,0,0,1-2.34-5.66V292a4,4,0,0,0-4-4H379a4,4,0,0,0-3.84,2.88L371,305.37a4,4,0,0,1-3.84,2.88h-3.8a4,4,0,0,1-3.69-2.46l-5.35-12.85a8,8,0,0,0-7.39-4.93H334.79a8,8,0,0,0-4.64,1.48l-23.71,16.89a26.35,26.35,0,0,1-5.59,3.05l-39.34,15.74a8,8,0,0,0-5,7.43v10.2a8,8,0,0,0,2.34,5.66l11.91,11.91A16,16,0,0,0,282,365.06h10.34a15.86,15.86,0,0,0,3.88-.48l21.27-5.32a26.78,26.78,0,0,1,25.42,7l13,13A16,16,0,0,0,367.27,384h15.16a16,16,0,0,0,11.31-4.69l9.57-9.57A16,16,0,0,0,408,358.43v-24.6a16,16,0,0,0-4.69-11.31Z"]]
};
exports.faGlobeAsia = faGlobeAsia;
var faGlobeEurope = {
  prefix: 'fad',
  iconName: 'globe-europe',
  icon: [496, 512, [], "f7a2", ["M487.54,320.4H438.9a15.8,15.8,0,0,1-11.4-4.8l-32-32.6a11.92,11.92,0,0,1,.1-16.7l12.5-12.5v-8.7a11.37,11.37,0,0,0-3.3-8l-9.4-9.4a11.37,11.37,0,0,0-8-3.3h-16a11.31,11.31,0,0,1-8-19.3l9.4-9.4a11.37,11.37,0,0,1,8-3.3h32a11.35,11.35,0,0,0,11.3-11.3v-9.4a11.35,11.35,0,0,0-11.3-11.3H376.1a16,16,0,0,0-16,16v4.5a16,16,0,0,1-10.9,15.2l-31.6,10.5a8,8,0,0,0-5.5,7.6v2.2a8,8,0,0,1-8,8h-16a8,8,0,0,1-8-8,8,8,0,0,0-8-8H269a8.14,8.14,0,0,0-7.2,4.4l-9.4,18.7a15.94,15.94,0,0,1-14.3,8.8H216a16,16,0,0,1-16-16V199a16,16,0,0,1,4.7-11.3l20.1-20.1a24.77,24.77,0,0,0,7.2-17.5,8,8,0,0,1,5.5-7.6l40-13.3a11.66,11.66,0,0,0,4.4-2.7l26.8-26.8a11.31,11.31,0,0,0-8-19.3H280l-16,16v8a8,8,0,0,1-8,8H240a8,8,0,0,1-8-8v-20a8.05,8.05,0,0,1,3.2-6.4l82.42-60.08A247.79,247.79,0,0,0,248,8C111,8,0,119,0,256S111,504,248,504a251.57,251.57,0,0,0,32.1-2.06V448.4a16,16,0,0,0-16-16H243.9c-10.8,0-26.7-5.3-35.4-11.8l-22.2-16.7a45.42,45.42,0,0,1-18.2-36.4V343.6a45.46,45.46,0,0,1,22.1-39l42.9-25.7a46.13,46.13,0,0,1,23.4-6.5h31.2a45.62,45.62,0,0,1,29.6,10.9l43.2,37.1h18.3a32,32,0,0,1,22.6,9.4l17.3,17.3.08.08C432,359.06,440,375.62,440,393.37V413A247.11,247.11,0,0,0,487.54,320.4ZM187.4,157.1a11.37,11.37,0,0,1-8,3.3h-16a11.31,11.31,0,0,1-8-19.3l25.4-25.4a11.31,11.31,0,0,1,19.3,8v16a11.37,11.37,0,0,1-3.3,8Z", "M187.4,157.1l9.4-9.4a11.37,11.37,0,0,0,3.3-8v-16a11.31,11.31,0,0,0-19.3-8l-25.4,25.4a11.31,11.31,0,0,0,8,19.3h16A11.37,11.37,0,0,0,187.4,157.1ZM418.78,347.18l-.08-.08-17.3-17.3a32,32,0,0,0-22.6-9.4H360.5l-43.2-37.1a45.62,45.62,0,0,0-29.6-10.9H256.5a46.13,46.13,0,0,0-23.4,6.5l-42.9,25.7a45.46,45.46,0,0,0-22.1,39v23.9a45.42,45.42,0,0,0,18.2,36.4l22.2,16.7c8.7,6.5,24.6,11.8,35.4,11.8h20.2a16,16,0,0,1,16,16v53.54A247.57,247.57,0,0,0,440,413V393.37C440,375.62,432,359.06,418.78,347.18ZM317.62,17.92,235.2,78a8.05,8.05,0,0,0-3.2,6.4v20a8,8,0,0,0,8,8h16a8,8,0,0,0,8-8v-8l16-16h20.7a11.31,11.31,0,0,1,8,19.3l-26.8,26.8a11.66,11.66,0,0,1-4.4,2.7l-40,13.3a8,8,0,0,0-5.5,7.6,24.77,24.77,0,0,1-7.2,17.5l-20.1,20.1A16,16,0,0,0,200,199v25.3a16,16,0,0,0,16,16h22.1a15.94,15.94,0,0,0,14.3-8.8l9.4-18.7a8.14,8.14,0,0,1,7.2-4.4h3.1a8,8,0,0,1,8,8,8,8,0,0,0,8,8h16a8,8,0,0,0,8-8v-2.2a8,8,0,0,1,5.5-7.6l31.6-10.5a16,16,0,0,0,10.9-15.2v-4.5a16,16,0,0,1,16-16h36.7a11.35,11.35,0,0,1,11.3,11.3v9.4a11.35,11.35,0,0,1-11.3,11.3h-32a11.37,11.37,0,0,0-8,3.3l-9.4,9.4a11.31,11.31,0,0,0,8,19.3h16a11.37,11.37,0,0,1,8,3.3l9.4,9.4a11.37,11.37,0,0,1,3.3,8v8.7l-12.5,12.5a11.92,11.92,0,0,0-.1,16.7l32,32.6a15.8,15.8,0,0,0,11.4,4.8h48.64A248.29,248.29,0,0,0,496,256C496,143.18,420.71,48,317.62,17.92Z"]]
};
exports.faGlobeEurope = faGlobeEurope;
var faGlobeSnow = {
  prefix: 'fad',
  iconName: 'globe-snow',
  icon: [448, 512, [], "f7a3", ["M67.9 384H192v-32h-57.9c-14.2 0-22-15-12.9-24.9l65.5-71.1h-30.1c-10.7 0-16.5-11.2-9.7-18.7l67.4-73.2a13.35 13.35 0 0 1 19.3 0l67.4 73.2c6.8 7.4 1 18.7-9.7 18.7h-30.1l65.5 71.1c9.1 9.9 1.3 24.9-12.9 24.9H256v32h124.1c41.7-40.6 67.9-97.1 67.9-160C448 100.3 347.7 0 224 0S0 100.3 0 224c0 62.9 26.1 119.4 67.9 160zM336 160a16 16 0 1 1-16 16 16 16 0 0 1 16-16zm-96-96a16 16 0 1 1-16 16 16 16 0 0 1 16-16zM80 224a16 16 0 1 1-16 16 16 16 0 0 1 16-16z", "M134.1 352H192v32h64v-32h57.8c14.2 0 22-15 12.9-24.9L261.2 256h30.1c10.7 0 16.5-11.3 9.7-18.7l-67.4-73.2a13.35 13.35 0 0 0-19.3 0l-67.4 73.2c-6.8 7.5-1 18.7 9.7 18.7h30.1l-65.5 71.1c-9.1 9.9-1.3 24.9 12.9 24.9zm297.3 135.1L384 416H64l-47.4 71.1A16 16 0 0 0 29.9 512h388.2a16 16 0 0 0 13.3-24.9z"]]
};
exports.faGlobeSnow = faGlobeSnow;
var faGlobeStand = {
  prefix: 'fad',
  iconName: 'globe-stand',
  icon: [448, 512, [], "f5f6", ["M94.87 305.14a160 160 0 1 1 226.27 0 160 160 0 0 1-226.27 0z", "M4.69 377.38l59.5-59.5c2.82 3.23 5 6.81 8.07 9.88a192.1 192.1 0 0 0 271.62 0c74.89-74.86 74.89-196.67 0-271.53-3-3-6.23-5.74-9.41-8.53l43-43a16 16 0 0 1 22.64 0L411.45 16a16 16 0 0 1 0 22.63l-10.7 10.7c69.82 93.94 62.34 227.16-22.91 312.38A238.35 238.35 0 0 1 256.09 427v37h92a36 36 0 0 1 36 36 12 12 0 0 1-12 12H76a12 12 0 0 1-12-12 36 36 0 0 1 36-36h92v-32.75a239.42 239.42 0 0 1-126.65-46.64l-26.71 26.7a16 16 0 0 1-22.64 0L4.69 400a16 16 0 0 1 0-22.62z"]]
};
exports.faGlobeStand = faGlobeStand;
var faGolfBall = {
  prefix: 'fad',
  iconName: 'golf-ball',
  icon: [416, 512, [], "f450", ["M208 0C93.1 0 0 93.1 0 208c0 74.2 39 139.2 97.5 176h221C377 347.2 416 282.2 416 208 416 93.1 322.9 0 208 0zm-3 229.8c26.3 9.4 51.5-15.1 41.9-41.9a32.91 32.91 0 1 1-41.9 41.9zm46.9 102.1a32.88 32.88 0 0 1-30.9-22.1c26.3 9.4 51.5-15.1 41.9-41.9a32.91 32.91 0 0 1-11 64zm64-64a32.88 32.88 0 0 1-30.9-22.1c26.3 9.4 51.5-15.1 41.9-41.9a32.91 32.91 0 0 1-11 64z", "M326.9 203.9c9.6 26.8-15.6 51.3-41.9 41.9a32.91 32.91 0 1 0 41.9-41.9zM221 309.8a32.91 32.91 0 1 0 41.9-41.9c9.6 26.8-15.6 51.3-41.9 41.9zm14.9-57.9a32.91 32.91 0 0 0 11-64c9.6 26.8-15.6 51.3-41.9 41.9a32.88 32.88 0 0 0 30.9 22.1zM128 448h16a32 32 0 0 1 32 32v20a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-20a32 32 0 0 1 32-32h16a32 32 0 0 0 32-32H96a32 32 0 0 0 32 32z"]]
};
exports.faGolfBall = faGolfBall;
var faGolfClub = {
  prefix: 'fad',
  iconName: 'golf-club',
  icon: [640, 512, [], "f451", ["M64 205.15a64 64 0 0 0-64 64v26.9h120a8 8 0 0 1 8 8v32a8 8 0 0 1-8 8H0v48h120a8 8 0 0 1 8 8v32a8 8 0 0 1-8 8H0v8a64.06 64.06 0 0 0 64 64h302.6a64 64 0 0 0 57.7-36.26l90-187.42-438.5-82.12a64 64 0 0 0-11.8-1.1z", "M120 392.05H0v48h120a8 8 0 0 0 8-8v-32a8 8 0 0 0-8-8zm0-96H0v48h120a8 8 0 0 0 8-8v-32a8 8 0 0 0-8-8zM631 8.59l-14.4-6.94-.18-.09a15.91 15.91 0 0 0-21.22 7.49L465.55 279.24l48.76 9.13L638.4 30A16.14 16.14 0 0 0 631 8.59z"]]
};
exports.faGolfClub = faGolfClub;
var faGopuram = {
  prefix: 'fad',
  iconName: 'gopuram',
  icon: [512, 512, [], "f664", ["M160 224h32v-96h-32zm-32 128h32V224h-32zM96 512h32V352H96zm256-288v128h32V224zm-32-96v96h32v-96zm64 224v160h32V352z", "M496 352h-16V240a16 16 0 0 0-16-16h-16v-80a16 16 0 0 0-16-16h-16V16a16 16 0 0 0-32 0v16h-64V16a16 16 0 0 0-32 0v16h-64V16a16 16 0 0 0-32 0v16h-64V16a16 16 0 0 0-32 0v112H80a16 16 0 0 0-16 16v80H48a16 16 0 0 0-16 16v112H16a16 16 0 0 0-16 16v128a16 16 0 0 0 16 16h80V352h32V224h32v-96h32v96h-32v128h-32v160h80v-80a16 16 0 0 1 16-16h64a16 16 0 0 1 16 16v80h80V352h-32V224h-32v-96h32v96h32v128h32v160h80a16 16 0 0 0 16-16V368a16 16 0 0 0-16-16zM232 176a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v48h-48zm56 176h-64v-64a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16z"]]
};
exports.faGopuram = faGopuram;
var faGraduationCap = {
  prefix: 'fad',
  iconName: 'graduation-cap',
  icon: [640, 512, [], "f19d", ["M323.07 175.7L118.8 215.6a48.1 48.1 0 0 0-38.74 44.73 32 32 0 0 1 2.21 53.94l25.4 114.26A16 16 0 0 1 92 448H35.94a16 16 0 0 1-15.61-19.47l25.39-114.27a32 32 0 0 1 2.33-54 80.16 80.16 0 0 1 64.62-76.07l204.26-39.89a16 16 0 1 1 6.14 31.4z", "M622.33 198.8l-279 85.7a80 80 0 0 1-46.79 0L99.67 224a47.84 47.84 0 0 1 19.13-8.39l204.27-39.9a16 16 0 1 0-6.14-31.4l-204.26 39.88a79.87 79.87 0 0 0-47.57 29.18l-47.44-14.58c-23.54-7.23-23.54-38.36 0-45.59L296.6 67.5a79.92 79.92 0 0 1 46.8 0l278.93 85.7c23.55 7.24 23.55 38.36 0 45.6zM352.79 315.09a111.94 111.94 0 0 1-65.59 0l-145-44.55L128 384c0 35.35 86 64 192 64s192-28.65 192-64l-14.19-113.47z"]]
};
exports.faGraduationCap = faGraduationCap;
var faGramophone = {
  prefix: 'fad',
  iconName: 'gramophone',
  icon: [384, 512, [], "f8bd", ["M69.56 317.08c62.84-43.05 161.76-94.4 238.6-73.8A26.79 26.79 0 0 1 328 269.15a34.81 34.81 0 0 1-34.78 34.77H184a24 24 0 0 0-24 24v24h133.22A82.88 82.88 0 0 0 376 269.15a74.89 74.89 0 0 0-55.41-72.27C243.17 176.13 183 80.83 150.84 13.62 141.2-6.5 111.76-3.68 106 17.79L32.82 291.06c-5.82 21.62 18.53 38.49 36.74 26.02z", "M368 448h-16v-32a32 32 0 0 0-32-32H64a32 32 0 0 0-32 32v32H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h352a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z"]]
};
exports.faGramophone = faGramophone;
var faGreaterThan = {
  prefix: 'fad',
  iconName: 'greater-than',
  icon: [384, 512, [], "f531", ["M18.49 358L237 256.1 18.53 154.25A32.09 32.09 0 0 1 3 111.61l13.58-29.08A32.09 32.09 0 0 1 59.22 67l306.3 142.84a32 32 0 0 1 18.49 29v34.23a32 32 0 0 1-18.48 29L59.06 445a32 32 0 0 1-42.53-15.48L3 400.52A32 32 0 0 1 18.49 358z", ""]]
};
exports.faGreaterThan = faGreaterThan;
var faGreaterThanEqual = {
  prefix: 'fad',
  iconName: 'greater-than-equal',
  icon: [448, 512, [], "f532", ["M24 400h400a24 24 0 0 1 24 24v48a24 24 0 0 1-24 24H24a24 24 0 0 1-24-24v-48a24 24 0 0 1 24-24z", "M55.34 243.83l175.44-68.05-175.56-68.09c-18.29-6-27.74-24.26-21.1-40.79L46.15 37C52.79 20.45 73 11.92 91.3 17.92L393 137.9c13.77 4.52 23 16.61 23 30.17v16c0 13.56-9.21 25.65-23 30.17L91.61 334.06c-18.39 6-38.7-2.54-45.38-19.15l-12.09-30.08c-6.68-16.61 2.86-34.97 21.2-41z"]]
};
exports.faGreaterThanEqual = faGreaterThanEqual;
var faGrimace = {
  prefix: 'fad',
  iconName: 'grimace',
  icon: [496, 512, [], "f57f", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8ZM144,400h-8a32,32,0,0,1-32-32v-8h40Zm0-56H104v-8a32,32,0,0,1,32-32h8Zm-8-136a32,32,0,1,1,32,32A32,32,0,0,1,136,208Zm72,192H160V360h48Zm0-56H160V304h48Zm64,56H224V360h48Zm0-56H224V304h48Zm64,56H288V360h48Zm0-56H288V304h48Zm-8-104a32,32,0,1,1,32-32A32,32,0,0,1,328,240Zm64,128a32,32,0,0,1-32,32h-8V360h40Zm0-24H352V304h8a32,32,0,0,1,32,32Z", "M168,176a32,32,0,1,0,32,32A32,32,0,0,0,168,176Zm160,0a32,32,0,1,0,32,32A32,32,0,0,0,328,176Z"]]
};
exports.faGrimace = faGrimace;
var faGrin = {
  prefix: 'fad',
  iconName: 'grin',
  icon: [496, 512, [], "f580", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8Zm80,168a32,32,0,1,1-32,32A32,32,0,0,1,328,176Zm-160,0a32,32,0,1,1-32,32A32,32,0,0,1,168,176ZM391.8,338.7c-9.3,55-83.2,93.3-143.8,93.3s-134.5-38.3-143.8-93.3a16,16,0,0,1,20.7-17.9C155.1,330.5,200,336,248,336s92.9-5.5,123.1-15.2c11.3-3.7,22.6,6.1,20.7,17.9Z", "M168,176a32,32,0,1,0,32,32A32,32,0,0,0,168,176Zm160,0a32,32,0,1,0,32,32A32,32,0,0,0,328,176Z"]]
};
exports.faGrin = faGrin;
var faGrinAlt = {
  prefix: 'fad',
  iconName: 'grin-alt',
  icon: [496, 512, [], "f581", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8Zm63.7,128.7a19.76,19.76,0,0,1,32.7,0c12.4,18.4,15.1,36.9,15.7,55.3-.5,18.4-3.3,36.9-15.7,55.3a19.76,19.76,0,0,1-32.7,0c-12.4-18.4-15.1-36.9-15.7-55.3C296.5,173.6,299.3,155.1,311.7,136.7Zm-160,0a19.76,19.76,0,0,1,32.7,0c12.4,18.4,15.1,36.9,15.7,55.3-.5,18.4-3.3,36.9-15.7,55.3a19.76,19.76,0,0,1-32.7,0c-12.4-18.4-15.1-36.9-15.7-55.3C136.5,173.6,139.3,155.1,151.7,136.7Zm240.1,202c-9.3,55-83.2,93.3-143.8,93.3s-134.5-38.3-143.8-93.3a16,16,0,0,1,20.7-17.9C155.1,330.5,200,336,248,336s92.9-5.5,123.1-15.2a16,16,0,0,1,20.7,17.9Z", "M151.7,136.7c-12.4,18.4-15.2,36.9-15.7,55.3.6,18.4,3.3,36.9,15.7,55.3a19.76,19.76,0,0,0,32.7,0c12.4-18.4,15.2-36.9,15.7-55.3-.6-18.4-3.3-36.9-15.7-55.3a19.76,19.76,0,0,0-32.7,0Zm192.7,0a19.76,19.76,0,0,0-32.7,0c-12.4,18.4-15.2,36.9-15.7,55.3.6,18.4,3.3,36.9,15.7,55.3a19.76,19.76,0,0,0,32.7,0c12.4-18.4,15.2-36.9,15.7-55.3C359.5,173.6,356.8,155.1,344.4,136.7Z"]]
};
exports.faGrinAlt = faGrinAlt;
var faGrinBeam = {
  prefix: 'fad',
  iconName: 'grin-beam',
  icon: [496, 512, [], "f582", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8Zm24.2,215.4c3.1-42.1,32-71.4,55.8-71.4s52.7,29.3,56,71.4c.7,8.6-10.8,11.9-14.9,4.5l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8,7.9-31.5,21.6l-9.5,17C283,235.2,271.5,231.9,272.2,223.4Zm-160,0c3.1-42.1,32-71.4,55.8-71.4s52.7,29.3,56,71.4c.7,8.6-10.8,11.9-14.9,4.5l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8,7.9-31.5,21.6l-9.5,17C122.9,235.3,111.5,231.9,112.2,223.4ZM391.8,338.7c-9.3,55-83.2,93.3-143.8,93.3s-134.5-38.3-143.8-93.3a16,16,0,0,1,20.7-17.9C155.1,330.5,200,336,248,336s92.9-5.5,123.1-15.2a16,16,0,0,1,20.7,17.9Z", "M168,152c-23.8,0-52.7,29.3-55.8,71.4-.7,8.5,10.7,11.9,14.9,4.5l9.5-17c7.7-13.7,19.2-21.6,31.5-21.6s23.8,7.9,31.5,21.6l9.5,17c4.1,7.4,15.6,4.1,14.9-4.5-3.3-42.1-32.2-71.4-56-71.4Zm216,71.4c-3.3-42.1-32.2-71.4-56-71.4s-52.7,29.3-55.8,71.4c-.7,8.5,10.8,11.8,14.9,4.5l9.5-17c7.7-13.7,19.2-21.6,31.5-21.6s23.8,7.9,31.5,21.6l9.5,17C373.2,235.3,384.7,232,384,223.4Z"]]
};
exports.faGrinBeam = faGrinBeam;
var faGrinBeamSweat = {
  prefix: 'fad',
  iconName: 'grin-beam-sweat',
  icon: [504, 512, [], "f583", ["M456,160c-44.1,0-80-35.4-80-79,0-4.41.3-14.2,8.1-32.2A246.82,246.82,0,0,0,248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256a247.08,247.08,0,0,0-20.5-98.61A83.3,83.3,0,0,1,456,160ZM272.2,223.4c3.1-42.09,32-71.4,55.8-71.4s52.7,29.31,56,71.4c.7,8.6-10.8,12-14.9,4.5l-9.5-17c-7.7-13.69-19.2-21.59-31.5-21.59s-23.8,7.9-31.5,21.59l-9.5,17c-4.1,7.43-15.6,4-14.9-4.48Zm-160,0c3.1-42.09,32-71.4,55.8-71.4s52.7,29.31,56,71.4c.7,8.6-10.8,12-14.9,4.5l-9.5-17c-7.7-13.69-19.2-21.59-31.5-21.59s-23.8,7.9-31.5,21.59l-9.5,17c-4.2,7.43-15.6,4-14.9-4.48ZM391.8,338.72C382.5,393.72,308.6,432,248,432s-134.5-38.3-143.8-93.3a16,16,0,0,1,20.7-17.9C155.1,330.51,200,336,248,336s92.9-5.5,123.1-15.19a16.05,16.05,0,0,1,20.7,17.92Z", "M462.4,3.2a8,8,0,0,0-11.2-1.6h0a7.58,7.58,0,0,0-1.6,1.6C436.5,20.59,408,61,408,81c0,26,21.5,47,48,47s48-21,48-47C504,61,475.5,20.59,462.4,3.2ZM168,152c-23.8,0-52.7,29.31-55.8,71.4-.7,8.5,10.7,11.91,14.9,4.5l9.5-17c7.7-13.69,19.2-21.59,31.5-21.59s23.8,7.9,31.5,21.59l9.5,17c4.1,7.5,15.6,4.1,14.9-4.5-3.3-42.07-32.2-71.4-56-71.4Zm160,0c-23.8,0-52.7,29.31-55.8,71.4-.7,8.5,10.8,11.91,14.9,4.5l9.5-17c7.7-13.69,19.2-21.59,31.5-21.59s23.8,7.9,31.5,21.59l9.5,17c4.1,7.5,15.6,4.1,14.9-4.5C380.7,181.31,351.8,152,328,152Z"]]
};
exports.faGrinBeamSweat = faGrinBeamSweat;
var faGrinHearts = {
  prefix: 'fad',
  iconName: 'grin-hearts',
  icon: [496, 512, [], "f584", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8ZM90.4,183.6c6.7-17.6,26.7-26.7,44.9-21.9l7.1,1.9,2-7.1c5-18.1,22.8-30.9,41.5-27.9a35.38,35.38,0,0,1,29.71,40.26h0a35.93,35.93,0,0,1-.91,4.24L195.3,243a8.59,8.59,0,0,1-10.5,6l-70.2-18.2a35.49,35.49,0,0,1-25.47-43.25h0A34.27,34.27,0,0,1,90.4,183.6ZM391.8,338.7c-9.3,55-83.2,93.3-143.8,93.3s-134.5-38.3-143.8-93.3a16,16,0,0,1,20.7-17.9C155.1,330.5,200,336,248,336s92.9-5.5,123.1-15.2a16.08,16.08,0,0,1,20.7,17.9Zm-10.4-108-70.2,18.2a8.68,8.68,0,0,1-10.5-6L281.3,173a35.38,35.38,0,0,1,24.54-43.59h0a35.93,35.93,0,0,1,4.24-.91c18.6-3,36.4,9.8,41.5,27.9l2,7.1,7.1-1.9c18.2-4.7,38.2,4.3,44.9,21.9a35.42,35.42,0,0,1-20.1,45.88,36.92,36.92,0,0,1-4.1,1.32Z", "M185.9,128.6c-18.7-3-36.5,9.8-41.5,27.9l-2,7.1-7.1-1.9c-18.2-4.8-38.2,4.3-44.9,21.9a35.5,35.5,0,0,0,20.25,45.93,36.32,36.32,0,0,0,3.95,1.27L184.8,249a8.59,8.59,0,0,0,10.5-6l19.4-69.9a35.38,35.38,0,0,0-24.54-43.59h0a35.93,35.93,0,0,0-4.24-.91Zm219.7,54.9c-6.7-17.6-26.7-26.6-44.9-21.9l-7.1,1.9-2-7.1c-5.1-18.1-22.9-30.9-41.5-27.9a35.38,35.38,0,0,0-29.71,40.26h0a35.93,35.93,0,0,0,.91,4.24l19.4,69.9a8.68,8.68,0,0,0,10.5,6l70.2-18.2a35.4,35.4,0,0,0,25.52-43.08v0a36.92,36.92,0,0,0-1.32-4.1Z"]]
};
exports.faGrinHearts = faGrinHearts;
var faGrinSquint = {
  prefix: 'fad',
  iconName: 'grin-squint',
  icon: [496, 512, [], "f585", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8Zm33.8,189.7,80-48c11.6-6.9,24,7.7,15.4,18L343.6,208l33.6,40.3c8.7,10.4-3.9,24.8-15.4,18l-80-48a12.07,12.07,0,0,1,0-20.6Zm-147.6-48,80,48a12,12,0,0,1,0,20.6l-80,48c-11.5,6.8-24-7.6-15.4-18L152.4,208l-33.6-40.3c-8.6-10.3,3.8-24.9,15.4-18Zm257.6,189c-9.3,55-83.2,93.3-143.8,93.3s-134.5-38.3-143.8-93.3a16,16,0,0,1,20.7-17.9C155.1,330.5,200,336,248,336s92.9-5.5,123.1-15.2a16.06,16.06,0,0,1,20.7,17.9Z", "M214.2,197.7l-80-48c-11.6-6.9-24,7.7-15.4,18L152.4,208l-33.6,40.3c-8.6,10.4,3.9,24.8,15.4,18l80-48a12,12,0,0,0,0-20.6Zm163,50.6L343.6,208l33.6-40.3c8.6-10.3-3.8-24.9-15.4-18l-80,48a12.07,12.07,0,0,0,0,20.6l80,48C373.3,273.1,385.9,258.7,377.2,248.3Z"]]
};
exports.faGrinSquint = faGrinSquint;
var faGrinSquintTears = {
  prefix: 'fad',
  iconName: 'grin-squint-tears',
  icon: [512, 512, [], "f586", ["M414.12 143.6c-33 3.9-48.6-25.1-45.7-45.7 3.4-24 7.4-42.1 11.5-56.5-94.8-54.8-218.1-41.9-299.3 39.2s-94 204.4-39.2 299.3c14.4-4.1 32.4-8 56.5-11.5 33.2-3.9 48.6 25.2 45.7 45.7-3.4 24-7.4 42.1-11.5 56.5 94.8 54.8 218.1 41.9 299.3-39.2s94-204.4 39.2-299.3c-14.4 4.1-32.5 8-56.5 11.5zm-180.9 53l22.5-90.6c3.3-13.2 22.4-11.5 23.6 1.8l4.8 52.3 52.3 4.8c13.4 1.2 14.9 20.3 1.8 23.6l-90.5 22.6a12 12 0 0 1-14.5-14.5zm-68.4 139.7L160 284l-52.3-4.8c-13.4-1.2-14.9-20.3-1.8-23.6l90.5-22.6a12 12 0 0 1 14.5 14.5L188.32 338c-3.1 13.2-22.2 11.7-23.5-1.7zm215.7 44.2c-29.3 29.3-75.7 50.4-116.7 50.4-18.9 0-36.6-4.5-51-14.7a15.92 15.92 0 0 1 2-27.2c28.3-14.6 63.9-42.4 97.8-76.3s61.7-69.6 76.3-97.8a16 16 0 0 1 27.3-2c32.3 45.3 7.1 124.7-35.7 167.6z", "M102.42 400.1c-22.6 3.2-73.5 12-88.3 26.8-19.1 19.1-18.8 50.6.8 70.2s51 19.9 70.2.7c14.8-14.8 23.5-65.7 26.8-88.3a8.31 8.31 0 0 0-9.5-9.4zm94-167.1l-90.5 22.6c-13.1 3.3-11.6 22.4 1.8 23.6L160 284l4.8 52.3c1.3 13.4 20.4 14.9 23.5 1.7l22.6-90.5a12 12 0 0 0-14.48-14.5zm140-68.1l-52.3-4.8-4.8-52.3c-1.2-13.3-20.3-15-23.6-1.8l-22.5 90.6a12 12 0 0 0 14.5 14.5l90.5-22.6c13.1-3.3 11.6-22.4-1.8-23.6zm160.8-150C477.62-4.7 446-5 426.92 14.2c-14.8 14.8-23.5 65.7-26.8 88.3a8.31 8.31 0 0 0 9.5 9.4c22.6-3.2 73.5-12 88.3-26.8 19.2-19.2 18.9-50.6-.7-70.2z"]]
};
exports.faGrinSquintTears = faGrinSquintTears;
var faGrinStars = {
  prefix: 'fad',
  iconName: 'grin-stars',
  icon: [496, 512, [], "f587", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8ZM94.6,168.9l34.9-5L145,132.3a7.73,7.73,0,0,1,13.9,0l15.5,31.6,34.9,5a7.78,7.78,0,0,1,4.3,13.2l-25.4,24.6,6,34.9a7.48,7.48,0,0,1-11,7.9L152,233.3l-31.3,16.3a7.48,7.48,0,0,1-11-7.9l6-34.9L90.3,182.2a7.85,7.85,0,0,1,4.3-13.3ZM391.8,338.7c-9.3,55-83.2,93.3-143.8,93.3s-134.5-38.3-143.8-93.3a16.06,16.06,0,0,1,20.7-17.9C155.1,330.5,200,336,248,336s92.9-5.5,123.1-15.2a16,16,0,0,1,20.7,17.9Zm13.9-156.6-25.4,24.6,6,34.9a7.48,7.48,0,0,1-11,7.9L344,233.3l-31.3,16.3a7.48,7.48,0,0,1-11-7.9l6-34.9-25.4-24.6a7.81,7.81,0,0,1,4.3-13.2l34.9-5L337,132.4a7.73,7.73,0,0,1,13.9,0L366.4,164l34.9,5a7.7,7.7,0,0,1,4.4,13.1Z", "M209.3,168.9l-34.9-5-15.5-31.6a7.73,7.73,0,0,0-13.9,0l-15.5,31.6-34.9,5a7.85,7.85,0,0,0-4.3,13.3l25.4,24.6-6,34.9a7.48,7.48,0,0,0,11,7.9L152,233.3l31.2,16.2a7.48,7.48,0,0,0,11-7.9l-6-34.9,25.4-24.6a7.78,7.78,0,0,0-4.3-13.2Zm192,.1-34.9-5-15.5-31.6a7.73,7.73,0,0,0-13.9,0L321.5,164l-34.9,5a7.81,7.81,0,0,0-6.47,8.95V178a7.92,7.92,0,0,0,2.16,4.24l25.4,24.6-6,34.9a7.48,7.48,0,0,0,11,7.9L344,233.3l31.3,16.2a7.48,7.48,0,0,0,11-7.9l-6-34.9,25.4-24.6a7.68,7.68,0,0,0-4.4-13.1Z"]]
};
exports.faGrinStars = faGrinStars;
var faGrinTears = {
  prefix: 'fad',
  iconName: 'grin-tears',
  icon: [640, 512, [], "f588", ["M496.42 270.1a40.45 40.45 0 0 1 45.7-45.7c8.9 1.3 16.8 2.7 24.3 4.1C552.72 104.5 447.72 8 320 8S87.32 104.5 73.62 228.5c7.5-1.4 15.4-2.8 24.3-4.1 33.2-3.9 48.6 25.3 45.7 45.7-11.8 82.3-29.9 100.4-35.8 106.4-.9.9-2 1.6-3 2.5 42.7 74.6 123 125 215.2 125s172.5-50.4 215.2-125.1a36.12 36.12 0 0 1-3-2.5c-5.9-5.9-24-24-35.8-106.3zm-152.2-46.7c3.1-42.1 32-71.4 55.8-71.4s52.7 29.3 56 71.4c.7 8.6-10.8 12-14.9 4.5l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.2 7.4-15.6 4-14.9-4.5zm-160 0c3.1-42.1 32-71.4 55.8-71.4s52.7 29.3 56 71.4c.7 8.6-10.8 12-14.9 4.5l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8 7.9-31.5 21.6l-9.5 17c-4.2 7.4-15.6 4-14.9-4.5zm279.6 115.3c-9.3 55-83.2 93.3-143.8 93.3s-134.5-38.3-143.8-93.3a16 16 0 0 1 20.7-17.9C227.12 330.5 272 336 320 336s92.9-5.5 123.1-15.2a16.05 16.05 0 0 1 20.72 17.9z", "M102.42 256.1c-22.6 3.2-73.5 12-88.3 26.8-19.1 19.1-18.8 50.6.8 70.2s51 19.9 70.2.7c14.8-14.8 23.5-65.7 26.8-88.3a8.31 8.31 0 0 0-9.5-9.4zM240 152c-23.8 0-52.7 29.3-55.8 71.4-.7 8.5 10.7 11.9 14.9 4.5l9.5-17c7.7-13.7 19.2-21.6 31.5-21.6s23.8 7.9 31.5 21.6l9.5 17c4.1 7.5 15.6 4.1 14.9-4.5-3.28-42.1-32.18-71.4-56-71.4zm385.8 130.9c-14.8-14.8-65.7-23.5-88.3-26.8a8.38 8.38 0 0 0-9.5 9.5c3.2 22.6 12 73.5 26.8 88.3 19.2 19.2 50.6 18.9 70.2-.7s20-51.2.82-70.3zM400 152c-23.8 0-52.7 29.3-55.8 71.4-.7 8.5 10.7 11.9 14.9 4.5l9.5-17c7.7-13.7 19.2-21.6 31.5-21.6s23.8 7.9 31.5 21.6l9.5 17c4.1 7.5 15.6 4.1 14.9-4.5-3.28-42.1-32.18-71.4-56-71.4z"]]
};
exports.faGrinTears = faGrinTears;
var faGrinTongue = {
  prefix: 'fad',
  iconName: 'grin-tongue',
  icon: [496, 512, [], "f589", ["M248,8C111,8,0,119,0,256.06c0,106.32,67,196.73,161,232a95.5,95.5,0,0,1-9-40V402.58c-24.7-16.2-43.5-38.1-47.8-63.81a16.06,16.06,0,0,1,20.7-17.9c30.2,9.7,75.1,15.2,123.1,15.2s92.9-5.5,123.1-15.2a16.08,16.08,0,0,1,20.7,17.9c-4.3,25.71-23.1,47.61-47.8,63.81v45.51a95.5,95.5,0,0,1-9,40c94-35.31,161-125.72,161-232C496,119,385,8,248,8ZM168,240a32,32,0,1,1,32-32A32,32,0,0,1,168,240Zm160,0a32,32,0,1,1,32-32A32,32,0,0,1,328,240Z", "M258.5,392.28l-1.8,7.8c-2.1,9.21-15.2,9.21-17.3,0l-1.8-7.8c-3.5-15.4-20.2-24.1-34.6-17.6-.9.4.3-.2-18.9,9.4v63c0,35.21,28,64.51,63.1,64.91a64,64,0,0,0,64.89-63.22V384c-19.5-9.6-18.2-8.9-19-9.3-14.4-6.5-31.1,2.2-34.6,17.6ZM200,208a32,32,0,1,0-32,32A32,32,0,0,0,200,208Zm128-32a32,32,0,1,0,32,32A32,32,0,0,0,328,176Z"]]
};
exports.faGrinTongue = faGrinTongue;
var faGrinTongueSquint = {
  prefix: 'fad',
  iconName: 'grin-tongue-squint',
  icon: [496, 512, [], "f58a", ["M248,8C111,8,0,119,0,256.06c0,106.32,67,196.73,161,232a95.5,95.5,0,0,1-9-40V402.58c-24.7-16.2-43.5-38.1-47.8-63.81a16,16,0,0,1,20.7-17.9c30.2,9.7,75.1,15.2,123.1,15.2s92.9-5.5,123.1-15.2a16,16,0,0,1,20.7,17.9c-4.3,25.71-23.1,47.61-47.8,63.81v45.51a95.5,95.5,0,0,1-9,40c94-35.31,161-125.72,161-232C496,119,385,8,248,8ZM214.2,218.35l-80,48c-11.5,6.8-24-7.6-15.4-18L152.4,208l-33.6-40.32c-8.6-10.3,3.8-24.9,15.4-18l80,48a12.07,12.07,0,0,1,4,16.59,12.2,12.2,0,0,1-4,4Zm147.6,48-80-48a12,12,0,0,1,0-20.6l80-48c11.7-6.9,23.9,7.7,15.4,18L343.6,208l33.6,40.31c8.7,10.4-3.9,24.8-15.4,18Z", "M214.2,197.75l-80-48c-11.6-6.9-24,7.7-15.4,18L152.4,208l-33.6,40.31c-8.6,10.4,3.9,24.8,15.4,18l80-48a12.05,12.05,0,0,0,0-20.6Zm44.3,194.53-1.8,7.8c-2.1,9.21-15.2,9.21-17.3,0l-1.8-7.8c-3.5-15.4-20.2-24.1-34.6-17.6-.9.4.3-.2-18.9,9.4v63c0,35.21,28,64.51,63.1,64.91a64,64,0,0,0,64.89-63.22V384c-19.5-9.6-18.2-8.9-19-9.3-14.39-6.53-31.09,2.17-34.59,17.57ZM377.2,248.36,343.6,208l33.6-40.32c8.5-10.3-3.7-24.9-15.4-18l-80,48a12,12,0,0,0,0,20.6l80,48c11.5,6.8,24.1-7.6,15.4-18Z"]]
};
exports.faGrinTongueSquint = faGrinTongueSquint;
var faGrinTongueWink = {
  prefix: 'fad',
  iconName: 'grin-tongue-wink',
  icon: [496, 512, [], "f58b", ["M248,8C111,8,0,119,0,256.07c0,106.33,67,196.75,161,232a95.5,95.5,0,0,1-9-40V402.6c-24.7-16.2-43.5-38.1-47.8-63.81a16.06,16.06,0,0,1,20.7-17.9c30.2,9.7,75.1,15.2,123.1,15.2s92.9-5.5,123.1-15.2a16,16,0,0,1,20.7,17.9c-4.3,25.71-23.1,47.61-47.8,63.81v45.52a95.5,95.5,0,0,1-9,40c94-35.31,161-125.73,161-232C496,119,385,8,248,8ZM192,233l-9.5-8.5c-14.8-13.2-46.2-13.2-61,0L112,233c-8.5,7.4-21.6.3-19.8-10.8,4-25.2,34.2-42.11,59.9-42.11S208,197,212,222.26C213.6,233.36,200.4,240.46,192,233Zm152,39a45.25,45.25,0,1,1,.05.05H344Z", "M212,222.26c-4-25.2-34.2-42.11-59.9-42.11S96.2,197,92.2,222.26c-1.8,11.1,11.3,18.2,19.8,10.8l9.5-8.5c14.8-13.2,46.2-13.2,61,0L192,233c8.4,7.4,21.6.3,20-10.8Zm46.5,170-1.8,7.8c-2.1,9.22-15.2,9.22-17.3,0l-1.8-7.8c-3.5-15.4-20.2-24.1-34.6-17.6-.9.4.3-.2-18.9,9.4v63c0,35.21,28,64.51,63.1,64.91a64,64,0,0,0,64.89-63.22V384c-19.5-9.6-18.2-8.9-19-9.3C278.7,368.2,262,376.9,258.5,392.3ZM344,184a23.94,23.94,0,1,0,.12,0Z"]]
};
exports.faGrinTongueWink = faGrinTongueWink;
var faGrinWink = {
  prefix: 'fad',
  iconName: 'grin-wink',
  icon: [496, 512, [], "f58c", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8Zm20.2,214.2c4-25.2,34.2-42.1,59.9-42.1S384,197,388,222.2c1.6,11-11.5,18.2-20,10.8l-9.5-8.5c-14.8-13.2-46.2-13.2-61,0L288,233C279.7,240.4,266.4,233.4,268.2,222.2ZM168,176a32,32,0,1,1-32,32A32,32,0,0,1,168,176ZM391.8,338.7c-9.2,55-83.2,93.3-143.8,93.3s-134.5-38.3-143.8-93.3a16,16,0,0,1,20.7-17.9C155.1,330.5,200,336,248,336s92.9-5.5,123.1-15.2a16,16,0,0,1,20.7,17.9Z", "M168,176a32,32,0,1,0,32,32A32,32,0,0,0,168,176Zm220,46.2c-4-25.2-34.2-42.1-59.9-42.1s-55.9,16.9-59.9,42.1c-1.8,11.2,11.5,18.2,19.8,10.8l9.5-8.5c14.8-13.2,46.2-13.2,61,0L368,233c8.5,7.4,21.6.2,20-10.8Z"]]
};
exports.faGrinWink = faGrinWink;
var faGripHorizontal = {
  prefix: 'fad',
  iconName: 'grip-horizontal',
  icon: [448, 512, [], "f58d", ["M96 288H32a32 32 0 0 0-32 32v64a32 32 0 0 0 32 32h64a32 32 0 0 0 32-32v-64a32 32 0 0 0-32-32zm160 0h-64a32 32 0 0 0-32 32v64a32 32 0 0 0 32 32h64a32 32 0 0 0 32-32v-64a32 32 0 0 0-32-32zm160 0h-64a32 32 0 0 0-32 32v64a32 32 0 0 0 32 32h64a32 32 0 0 0 32-32v-64a32 32 0 0 0-32-32z", "M416 96h-64a32 32 0 0 0-32 32v64a32 32 0 0 0 32 32h64a32 32 0 0 0 32-32v-64a32 32 0 0 0-32-32zM96 96H32a32 32 0 0 0-32 32v64a32 32 0 0 0 32 32h64a32 32 0 0 0 32-32v-64a32 32 0 0 0-32-32zm160 0h-64a32 32 0 0 0-32 32v64a32 32 0 0 0 32 32h64a32 32 0 0 0 32-32v-64a32 32 0 0 0-32-32z"]]
};
exports.faGripHorizontal = faGripHorizontal;
var faGripLines = {
  prefix: 'fad',
  iconName: 'grip-lines',
  icon: [512, 512, [], "f7a4", ["M512 304v32a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h480a16 16 0 0 1 16 16z", "M512 176v32a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h480a16 16 0 0 1 16 16z"]]
};
exports.faGripLines = faGripLines;
var faGripLinesVertical = {
  prefix: 'fad',
  iconName: 'grip-lines-vertical',
  icon: [256, 512, [], "f7a5", ["M224,16V496a16,16,0,0,1-16,16H176a16,16,0,0,1-16-16V16A16,16,0,0,1,176,0h32A16,16,0,0,1,224,16Z", "M96,16V496a16,16,0,0,1-16,16H48a16,16,0,0,1-16-16V16A16,16,0,0,1,48,0H80A16,16,0,0,1,96,16Z"]]
};
exports.faGripLinesVertical = faGripLinesVertical;
var faGripVertical = {
  prefix: 'fad',
  iconName: 'grip-vertical',
  icon: [320, 512, [], "f58e", ["M288 352h-64a32 32 0 0 0-32 32v64a32 32 0 0 0 32 32h64a32 32 0 0 0 32-32v-64a32 32 0 0 0-32-32zm0-320h-64a32 32 0 0 0-32 32v64a32 32 0 0 0 32 32h64a32 32 0 0 0 32-32V64a32 32 0 0 0-32-32zm0 160h-64a32 32 0 0 0-32 32v64a32 32 0 0 0 32 32h64a32 32 0 0 0 32-32v-64a32 32 0 0 0-32-32z", "M96 352H32a32 32 0 0 0-32 32v64a32 32 0 0 0 32 32h64a32 32 0 0 0 32-32v-64a32 32 0 0 0-32-32zm0-160H32a32 32 0 0 0-32 32v64a32 32 0 0 0 32 32h64a32 32 0 0 0 32-32v-64a32 32 0 0 0-32-32zm0-160H32A32 32 0 0 0 0 64v64a32 32 0 0 0 32 32h64a32 32 0 0 0 32-32V64a32 32 0 0 0-32-32z"]]
};
exports.faGripVertical = faGripVertical;
var faGuitar = {
  prefix: 'fad',
  iconName: 'guitar',
  icon: [512, 512, [], "f7a6", ["M348.88 267.67c7.72 33.39.86 66.87-22 89.75a82.56 82.56 0 0 1-33.47 20.25c-18.54 6-32.67 23.29-34.43 42.15-2.28 23.8-11.48 45.82-28.45 62.7C185 528 103.08 519.94 47.57 464.45s-63.67-137.45-18-183c16.87-17 38.9-26.17 62.59-28.44 18.95-1.77 36.13-15.9 42.15-34.46a82.45 82.45 0 0 1 20.24-33.47c22.9-22.91 56.42-29.81 89.86-22 14.62 3.41 28 10.39 40.15 19.17l-74 74c-.85 0-1.65-.25-2.52-.25a48 48 0 1 0 48 48c0-.84-.21-1.62-.25-2.45l74-74.06c8.74 12.2 15.72 25.51 19.09 40.18z", "M502.63 84.22l-46.32 46.32a35.26 35.26 0 0 1-13.79 8.53l-36.47 12.16-150.33 150.35a47.77 47.77 0 0 0-45.22-45.29L360.79 106 373 69.49a35.26 35.26 0 0 1 8.53-13.79l46.26-46.33a32 32 0 0 1 45.26 0L502.63 39a32 32 0 0 1 0 45.22z"]]
};
exports.faGuitar = faGuitar;
var faGuitarElectric = {
  prefix: 'fad',
  iconName: 'guitar-electric',
  icon: [512, 512, [], "f8be", ["M243.76 223.27a39.45 39.45 0 0 1-3.18-38.42l17.29-37.13a18.82 18.82 0 0 0-30.38-21.23l-38.31 38.27a77.49 77.49 0 0 0-18.24 28.83A77.6 77.6 0 0 1 130.42 238L54 273.33C-3.23 296.19-18.4 370 25.16 413.54l73.39 73.33c43.56 43.51 117.45 28.36 140.35-28.78l35.4-76.38a77.64 77.64 0 0 1 44.41-40.48A77.77 77.77 0 0 0 347.57 323l21.57-21.55a19.87 19.87 0 0 0-20.11-33L325.32 276a39.67 39.67 0 0 1-36.76-7.11zm-62.1 171.09l-11.31 11.31a8 8 0 0 1-11.32 0L106.34 353a8 8 0 0 1 0-11.31l11.32-11.31a8 8 0 0 1 11.31 0l52.69 52.68a8 8 0 0 1 0 11.3zm64-64l-11.31 11.31a8 8 0 0 1-11.32 0L170.35 289a8 8 0 0 1 0-11.31l11.31-11.31a8 8 0 0 1 11.31 0l52.69 52.68a8 8 0 0 1 0 11.31z", "M511.21 39.57a48.12 48.12 0 0 0-37.79-38.26C450.48-3 450.66.79 366.74 54.93A32.15 32.15 0 0 0 352 81.88v33.27L243.81 223.33l44.75 45.6.09.05 173-172.93c.82.06 1.57.35 2.4.35a48 48 0 0 0 47.16-56.83zM129 330.37a8 8 0 0 0-11.31 0l-11.32 11.31a8 8 0 0 0 0 11.31L159 405.67a8 8 0 0 0 11.32 0l11.31-11.31a8 8 0 0 0 0-11.31zm64-64a8 8 0 0 0-11.31 0l-11.31 11.31a8 8 0 0 0 0 11.31L223 341.68a8 8 0 0 0 11.32 0l11.31-11.31a8 8 0 0 0 0-11.31z"]]
};
exports.faGuitarElectric = faGuitarElectric;
var faGuitars = {
  prefix: 'fad',
  iconName: 'guitars',
  icon: [512, 512, [], "f8bf", ["M229.27 300.21A74.51 74.51 0 0 0 237.7 266c0-29.14-17-54.82-43.15-71.17-12.82-8-27.53-12-42.55-13.88v-54.22l16.6-33.21a29 29 0 0 0 3.08-13v-54.1A26.42 26.42 0 0 0 145.25 0h-34.53A26.41 26.41 0 0 0 84.3 26.41v54.08a29.12 29.12 0 0 0 3.07 13L104 126.74V181c-15 1.84-29.74 5.84-42.58 13.83a104 104 0 0 0-18.58 14.67c-15.39 15.39-24.62 35-24.61 56.58a74.36 74.36 0 0 0 8.41 34.2c8 15.65 6 35.59-4.88 48.78C8.11 365.55-.07 385.43 0 407c-.07 58 57.34 105 128 105 39.89 0 75.55-15 99-38.47 1.28-1.27 2.23-2.75 3.43-4.07a111.41 111.41 0 0 1 2.32-80.3L243 361.42a103.64 103.64 0 0 0-8.81-12.42c-10.89-13.16-12.89-33.16-4.92-48.79zm-73 32.08a40 40 0 1 1 0-56.58 40 40 0 0 1 .02 56.58zM424 368h-80a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8zm0-64.12h-80a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8z", "M505.48 400.82l-26.93-73.45a72.15 72.15 0 0 1 2.57-55.79 72.13 72.13 0 0 0 7-30.94v-28.32a18.47 18.47 0 0 0-34.88-8.47l-10.62 20.55c-5.36 10.37-15.35 17-26.62 19l-8-.1V73.38a34.2 34.2 0 0 0 5.09-3.8 40.77 40.77 0 0 0-51.44-62.75c-16.38 11.15-14 13.35-31.85 96.24a27.3 27.3 0 0 0 7.33 25L360 151v91.66l-8-.11c-11.3-3.11-20.84-11-25-22.37l-13-35.76a17.49 17.49 0 0 0-33.92 6v50.33a72.07 72.07 0 0 0 7 30.93 72.07 72.07 0 0 1 2.53 55.78l-27 73.48C240 453.53 278.54 512 335.76 512h96.41c57.23-.06 95.83-58.59 73.31-111.18zM432 392a8 8 0 0 1-8 8h-80a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h80a8 8 0 0 1 8 8zm0-64.12a8 8 0 0 1-8 8h-80a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h80a8 8 0 0 1 8 8z"]]
};
exports.faGuitars = faGuitars;
var faHSquare = {
  prefix: 'fad',
  iconName: 'h-square',
  icon: [448, 512, [], "f0fd", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-48 336a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-80H160v80a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V144a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16v80h128v-80a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16z", "M352 368a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-80H160v80a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V144a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16v80h128v-80a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16z"]]
};
exports.faHSquare = faHSquare;
var faH1 = {
  prefix: 'fad',
  iconName: 'h1',
  icon: [576, 512, [], "f313", ["M304 96h-98.94A13.06 13.06 0 0 0 192 109.06v37.88A13.06 13.06 0 0 0 205.06 160H224v64H96v-64h18.94A13.06 13.06 0 0 0 128 146.94V112a16 16 0 0 0-16-16H16a16 16 0 0 0-16 16v34.94A13.06 13.06 0 0 0 13.06 160H32v192H13.06A13.06 13.06 0 0 0 0 365.06V400a16 16 0 0 0 16 16h98.94A13.06 13.06 0 0 0 128 402.94v-37.88A13.06 13.06 0 0 0 114.94 352H96v-64h128v64h-18.94A13.06 13.06 0 0 0 192 365.06V400a16 16 0 0 0 16 16h96a16 16 0 0 0 16-16v-34.94A13.06 13.06 0 0 0 306.94 352H288V160h18.94A13.06 13.06 0 0 0 320 146.94V112a16 16 0 0 0-16-16z", "M560 352h-48V120a24 24 0 0 0-24-24h-40a24 24 0 0 0-21.44 13.26l-24 48A24 24 0 0 0 424 192h24v160h-48a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h160a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z"]]
};
exports.faH1 = faH1;
var faH2 = {
  prefix: 'fad',
  iconName: 'h2',
  icon: [576, 512, [], "f314", ["M304 96h-98.94A13.06 13.06 0 0 0 192 109.06v37.88A13.06 13.06 0 0 0 205.06 160H224v64H96v-64h18.94A13.06 13.06 0 0 0 128 146.94V112a16 16 0 0 0-16-16H16a16 16 0 0 0-16 16v34.94A13.06 13.06 0 0 0 13.06 160H32v192H13.06A13.06 13.06 0 0 0 0 365.06V400a16 16 0 0 0 16 16h98.94A13.06 13.06 0 0 0 128 402.94v-37.88A13.06 13.06 0 0 0 114.94 352H96v-64h128v64h-18.94A13.06 13.06 0 0 0 192 365.06V400a16 16 0 0 0 16 16h96a16 16 0 0 0 16-16v-34.94A13.06 13.06 0 0 0 306.94 352H288V160h18.94A13.06 13.06 0 0 0 320 146.94V112a16 16 0 0 0-16-16z", "M560 352H440.79c17-42.95 135.21-66.57 135.21-159.62C576 132.55 528.33 96 469.14 96c-43.83 0-81.41 21.38-103.42 57a15.66 15.66 0 0 0 4.75 21.4l28.26 18.6a16.15 16.15 0 0 0 21.86-3.83c10.77-14.86 24.94-26 43.85-26s38.22 10.46 38.22 33.84c0 52.18-142.1 73.21-142.1 184.56a155.06 155.06 0 0 0 1.71 20.66A15.94 15.94 0 0 0 378.14 416H560a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z"]]
};
exports.faH2 = faH2;
var faH3 = {
  prefix: 'fad',
  iconName: 'h3',
  icon: [576, 512, [], "f315", ["M304 96h-98.94A13.06 13.06 0 0 0 192 109.06v37.88A13.06 13.06 0 0 0 205.06 160H224v64H96v-64h18.94A13.06 13.06 0 0 0 128 146.94V112a16 16 0 0 0-16-16H16a16 16 0 0 0-16 16v34.94A13.06 13.06 0 0 0 13.06 160H32v192H13.06A13.06 13.06 0 0 0 0 365.06V400a16 16 0 0 0 16 16h98.94A13.06 13.06 0 0 0 128 402.94v-37.88A13.06 13.06 0 0 0 114.94 352H96v-64h128v64h-18.94A13.06 13.06 0 0 0 192 365.06V400a16 16 0 0 0 16 16h96a16 16 0 0 0 16-16v-34.94A13.06 13.06 0 0 0 306.94 352H288V160h18.94A13.06 13.06 0 0 0 320 146.94V112a16 16 0 0 0-16-16z", "M499 217.69l64.4-72.31a15.48 15.48 0 0 0 4-10.31v-23.32A16 16 0 0 0 551.12 96H384a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h85.18c-2.29 2.45-4.65 5-7.19 7.9l-53.1 61.1a18 18 0 0 0-3.83 10.17 18.36 18.36 0 0 0 1.38 6.34l8.41 18.59c2.35 5.21 9 9.42 14.84 9.42h15.95c28.94 0 57.79 10.32 57.79 38.48 0 21.32-19.93 36.79-47.39 36.79-22.08 0-41.18-9.17-57.7-22.83a16.46 16.46 0 0 0-23.87 3.34l-19.75 28.8a15.46 15.46 0 0 0 2.53 20.35C384.9 403.21 422 416 459.51 416c71 0 116.49-48.86 116.49-106.06 0-47.3-32.73-80.89-77-92.25z"]]
};
exports.faH3 = faH3;
var faH4 = {
  prefix: 'fad',
  iconName: 'h4',
  icon: [576, 512, [], "f86a", ["M304 96h-98.94A13.06 13.06 0 0 0 192 109.06v37.88A13.06 13.06 0 0 0 205.06 160H224v64H96v-64h18.94A13.06 13.06 0 0 0 128 146.94V112a16 16 0 0 0-16-16H16a16 16 0 0 0-16 16v34.94A13.06 13.06 0 0 0 13.06 160H32v192H13.06A13.06 13.06 0 0 0 0 365.06V400a16 16 0 0 0 16 16h98.94A13.06 13.06 0 0 0 128 402.94v-37.88A13.06 13.06 0 0 0 114.94 352H96v-64h128v64h-18.94A13.06 13.06 0 0 0 192 365.06V400a16 16 0 0 0 16 16h96a16 16 0 0 0 16-16v-34.94A13.06 13.06 0 0 0 306.94 352H288V160h18.94A13.06 13.06 0 0 0 320 146.94V112a16 16 0 0 0-16-16z", "M560 224h-16V112a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v112h-64V112a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v144a32 32 0 0 0 32 32h96v112a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V288h16a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z"]]
};
exports.faH4 = faH4;
var faHamburger = {
  prefix: 'fad',
  iconName: 'hamburger',
  icon: [512, 512, [], "f805", ["M58.64 224h394.72c34.57 0 54.62-43.9 34.82-75.88C448 83.2 359.55 32.1 256 32c-103.54.1-192 51.2-232.18 116.11C4 180.09 24.07 224 58.64 224zM384 112a16 16 0 1 1-16 16 16 16 0 0 1 16-16zM256 80a16 16 0 1 1-16 16 16 16 0 0 1 16-16zm-128 32a16 16 0 1 1-16 16 16 16 0 0 1 16-16zm352 272H32a16 16 0 0 0-16 16v16a64 64 0 0 0 64 64h352a64 64 0 0 0 64-64v-16a16 16 0 0 0-16-16z", "M512 304a48 48 0 0 1-48 48H48a48 48 0 0 1 0-96h416a48 48 0 0 1 48 48z"]]
};
exports.faHamburger = faHamburger;
var faHammer = {
  prefix: 'fad',
  iconName: 'hammer',
  icon: [576, 512, [], "f6e3", ["M19.64 405l255.1-238.17a97 97 0 0 0 9.85 12l49.14 49.14a97.23 97.23 0 0 0 11.44 9.41L107 492.36A61.84 61.84 0 1 1 19.64 405z", "M435.56 261.81l11.31-11.31L418 221.6a63.73 63.73 0 0 1-61.61-16.35l-49.14-49.14a64 64 0 0 1-18.75-45.25V92.11L198 46.86a160 160 0 0 1 226.28 0l45.25 45.25a63.73 63.73 0 0 1 16.35 61.61l28.9 28.9 11.31-11.31a16 16 0 0 1 22.63 0l22.63 22.63a16 16 0 0 1 0 22.62l-90.51 90.51a16 16 0 0 1-22.63 0l-22.63-22.63a16 16 0 0 1-.02-22.63z"]]
};
exports.faHammer = faHammer;
var faHammerWar = {
  prefix: 'fad',
  iconName: 'hammer-war',
  icon: [384, 512, [], "f6e4", ["M384 64v192a32 32 0 0 1-37.26 31.56L192 261.77 37.26 287.55A32 32 0 0 1 0 256V64a32 32 0 0 1 37.26-31.56L192 58.23l154.74-25.78A32 32 0 0 1 384 64z", "M160 52.9V16a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16v36.9l-32 5.33zm0 246.64V496a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V299.54l-32-5.33z"]]
};
exports.faHammerWar = faHammerWar;
var faHamsa = {
  prefix: 'fad',
  iconName: 'hamsa',
  icon: [512, 512, [], "f665", ["M288 352a32 32 0 1 1-32-32 32 32 0 0 1 32 32z", "M509.34 307.25A32 32 0 0 0 480 288h-64V80a40 40 0 0 0-80 0v134a10 10 0 0 1-10 10h-20a10 10 0 0 1-10-10V40a40 40 0 0 0-80 0v174a10 10 0 0 1-10 10h-20a10 10 0 0 1-10-10V80a40 40 0 0 0-80 0v208H32a32 32 0 0 0-23.4 53.83l102.69 110C147 490.08 199.69 512 256 512s109-21.92 144.72-60.14l102.68-110a32 32 0 0 0 5.94-34.61zM256 416c-53 0-96-64-96-64s43-64 96-64 96 64 96 64-43 64-96 64z"]]
};
exports.faHamsa = faHamsa;
var faHandHeart = {
  prefix: 'fad',
  iconName: 'hand-heart',
  icon: [448, 512, [], "f4bc", ["M416 112a32.09 32.09 0 0 0-32 32v72a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8V64a32 32 0 0 0-64 0v152a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8V32a32 32 0 0 0-64 0v184a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8V64a32 32 0 0 0-64 0v241l-23.6-32.5a40 40 0 1 0-64.7 47.1l125.6 172.7a48.08 48.08 0 0 0 38.8 19.8h197.6a47.93 47.93 0 0 0 46.7-37l26.5-112.7a201.31 201.31 0 0 0 5.1-42.3V144a32.09 32.09 0 0 0-32-32zm-62.9 261.2l-72.6 71.4a12.2 12.2 0 0 1-17 0l-72.6-71.4a49.59 49.59 0 0 1 3.7-74.2c20.5-16.7 51.1-13.7 70 4.8l7.4 7.3 7.4-7.3c18.8-18.5 49.4-21.5 70-4.8a49.66 49.66 0 0 1 3.67 74.2z", "M194.57 299c20.5-16.7 51.1-13.7 70 4.8l7.4 7.3 7.4-7.3c18.8-18.5 49.4-21.5 70-4.8a49.66 49.66 0 0 1 3.7 74.2l-72.6 71.4a12.2 12.2 0 0 1-17 0l-72.6-71.4a49.59 49.59 0 0 1 3.7-74.2z"]]
};
exports.faHandHeart = faHandHeart;
var faHandHolding = {
  prefix: 'fad',
  iconName: 'hand-holding',
  icon: [576, 512, [], "f4bd", ["M564 377L412.8 498a64.08 64.08 0 0 1-40 14H16a16 16 0 0 1-16-16v-96a16 16 0 0 1 16-16h55.4l46.5-37.7A117.69 117.69 0 0 1 192 320h160a32 32 0 0 1 31.6 37.4c-2.6 15.7-17.4 26.6-33.3 26.6H272a16 16 0 0 0 0 32h118.3a63.67 63.67 0 0 0 40-14l92.4-73.9c12.4-10 30.8-10.7 42.6 0A32 32 0 0 1 564 377z", ""]]
};
exports.faHandHolding = faHandHolding;
var faHandHoldingBox = {
  prefix: 'fad',
  iconName: 'hand-holding-box',
  icon: [576, 512, [], "f47b", ["M352 128V0H224v128l64-32zm213.3 200.1c-11.8-10.7-30.2-10-42.6 0L430.3 402a63.67 63.67 0 0 1-40 14H272a16 16 0 0 1 0-32h78.3c15.9 0 30.7-10.9 33.3-26.6A32 32 0 0 0 352 320H192a117.69 117.69 0 0 0-74.1 26.3L71.4 384H16a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16h356.8a64.08 64.08 0 0 0 40-14L564 377a32 32 0 0 0 1.3-48.9z", "M480 16v224a16 16 0 0 1-16 16H112a16 16 0 0 1-16-16V16a16 16 0 0 1 16-16h112v128l64-32 64 32V0h112a16 16 0 0 1 16 16z"]]
};
exports.faHandHoldingBox = faHandHoldingBox;
var faHandHoldingHeart = {
  prefix: 'fad',
  iconName: 'hand-holding-heart',
  icon: [576, 512, [], "f4be", ["M564 377L412.8 498a64.08 64.08 0 0 1-40 14H16a16 16 0 0 1-16-16v-96a16 16 0 0 1 16-16h55.4l46.5-37.7A117.69 117.69 0 0 1 192 320h160a32 32 0 0 1 31.6 37.4c-2.6 15.7-17.4 26.6-33.3 26.6H272a16 16 0 0 0 0 32h118.3a63.67 63.67 0 0 0 40-14l92.4-73.9c12.4-10 30.8-10.7 42.6 0A32 32 0 0 1 564 377z", "M404.1 17.52c35.4 30.6 37.2 85.6 5.6 118.8l-108.9 114.2a17.42 17.42 0 0 1-25.5 0l-108.9-114.2c-31.6-33.2-29.7-88.2 5.6-118.8 30.8-26.7 76.7-21.9 104.9 7.8l11.1 11.6 11.2-11.7c28.2-29.6 74.1-34.4 104.9-7.7z"]]
};
exports.faHandHoldingHeart = faHandHoldingHeart;
var faHandHoldingMagic = {
  prefix: 'fad',
  iconName: 'hand-holding-magic',
  icon: [576, 512, [], "f6e5", ["M564 377L412.75 498a64 64 0 0 1-40 14H16a16 16 0 0 1-16-16v-96a16 16 0 0 1 16-16h55.44l46.5-37.73A117.51 117.51 0 0 1 192 320h160a32 32 0 0 1 31.56 37.37C381 373.11 366.22 384 350.28 384H272a16 16 0 0 0 0 32h118.33a64 64 0 0 0 40-14l92.34-73.87c12.45-10 30.8-10.69 42.63 0A32 32 0 0 1 564 377z", "M384 128V96a32 32 0 0 0-32-32H224a32 32 0 0 0-32 32v32c0 14.5 14.28 32 32 32 64 0 96-32 96-32a96.1 96.1 0 0 1-96 96c-51.14 0-96-44.86-96-96V96a96.1 96.1 0 0 1 96-96h128a96.1 96.1 0 0 1 96 96v33.56c-.6 76.16-65.13 137.07-142.18 141.43L288 272l53.91-53.2C366.49 194.54 384 162.3 384 128z"]]
};
exports.faHandHoldingMagic = faHandHoldingMagic;
var faHandHoldingSeedling = {
  prefix: 'fad',
  iconName: 'hand-holding-seedling',
  icon: [576, 512, [], "f4bf", ["M564 377L412.8 498a64.08 64.08 0 0 1-40 14H16a16 16 0 0 1-16-16v-96a16 16 0 0 1 16-16h55.4l46.5-37.7A117.69 117.69 0 0 1 192 320h160a32 32 0 0 1 31.6 37.4c-2.6 15.7-17.4 26.6-33.3 26.6H272a16 16 0 0 0 0 32h118.3a63.67 63.67 0 0 0 40-14l92.4-73.9c12.4-10 30.8-10.7 42.6 0A32 32 0 0 1 564 377z", "M160 0H96a160 160 0 0 0 160 160v112a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V160A160 160 0 0 0 160 0zm256 0c-40.7 0-77.5 15.7-105.8 40.8a190.94 190.94 0 0 1 41.6 116C424.9 142 480 77.5 480 0z"]]
};
exports.faHandHoldingSeedling = faHandHoldingSeedling;
var faHandHoldingUsd = {
  prefix: 'fad',
  iconName: 'hand-holding-usd',
  icon: [576, 512, [], "f4c0", ["M564 377L412.78 498a64 64 0 0 1-40 14H16a16 16 0 0 1-16-16v-96a16 16 0 0 1 16-16h55.4l46.5-37.71A117.65 117.65 0 0 1 192 320h160a32 32 0 0 1 32 31.94 31.2 31.2 0 0 1-.46 5.46C381 373.1 366.19 384 350.29 384H272a16 16 0 0 0 0 32h118.28a63.64 63.64 0 0 0 40-14l92.4-73.9c12.4-10 30.8-10.7 42.6 0A32 32 0 0 1 564 377z", "M329.28 222.4V240c0 8.8-7.77 16-17.26 16h-17.25c-9.48 0-17.25-7.2-17.25-16v-17.7a82.78 82.78 0 0 1-34.28-11.5 11.46 11.46 0 0 1-3.85-15.74 11.64 11.64 0 0 1 2.23-2.66l18.87-17.5c4-3.7 10-4.2 15.2-2a29.62 29.62 0 0 0 11.11 2.2h35.36c5 0 9.06-3.8 9.06-8.4a8.58 8.58 0 0 0-6.58-8.1l-53.91-14.3c-23.93-6.4-43.13-24.7-46.25-47.7-4.31-32 20.48-59.4 53.15-63V16c0-8.8 7.76-16 17.25-16h17.25c9.49 0 17.25 7.2 17.25 16v17.7a82.92 82.92 0 0 1 34.29 11.5 11.48 11.48 0 0 1 1.62 18.4l-18.87 17.5c-4 3.7-10 4.2-15.2 2a29.62 29.62 0 0 0-11.11-2.2h-35.36c-5 0-9.06 3.8-9.06 8.4a8.58 8.58 0 0 0 6.58 8.1l53.91 14.3c23.93 6.4 43.11 24.7 46.24 47.7 4.31 32-20.43 59.4-53.14 63z"]]
};
exports.faHandHoldingUsd = faHandHoldingUsd;
var faHandHoldingWater = {
  prefix: 'fad',
  iconName: 'hand-holding-water',
  icon: [576, 512, [], "f4c1", ["M564 377L412.8 498a64.08 64.08 0 0 1-40 14H16a16.05 16.05 0 0 1-16-16v-96a16 16 0 0 1 16-16h55.4l46.5-37.71A117.69 117.69 0 0 1 192 320h160a32 32 0 0 1 31.6 37.4c-2.6 15.7-17.4 26.6-33.3 26.6H272a16 16 0 0 0 0 32h118.3a63.67 63.67 0 0 0 40-14l92.4-73.9c12.4-10 30.8-10.7 42.6 0A32 32 0 0 1 564 377z", "M300.8 6.38C326.9 41.27 384 122 384 162c0 51.9-43 94-96 94s-96-42.1-96-94c0-40 57.1-120.71 83.2-155.6a16 16 0 0 1 25.6-.02z"]]
};
exports.faHandHoldingWater = faHandHoldingWater;
var faHandLizard = {
  prefix: 'fad',
  iconName: 'hand-lizard',
  icon: [576, 512, [], "f258", ["M561.17 312.52A96 96 0 0 1 576 363.78V480H384v-61.46a24 24 0 0 0-11.15-20.27L261.1 327.46a48 48 0 0 0-25.69-7.46H88a24 24 0 0 1-24-24v-8a64 64 0 0 1 64-64h123.65a32 32 0 0 0 29.54-19.69l21.41-51.39A18 18 0 0 0 286 128H56A56 56 0 0 1 0 72V56a24 24 0 0 1 24-24h333.54a48 48 0 0 1 40.59 22.37z", ""]]
};
exports.faHandLizard = faHandLizard;
var faHandMiddleFinger = {
  prefix: 'fad',
  iconName: 'hand-middle-finger',
  icon: [512, 512, [], "f806", ["", "M479.93,317.16,480,400A112,112,0,0,1,368.05,512h-215a112,112,0,0,1-79.19-32.81L42.93,448.28A37.31,37.31,0,0,1,32,421.89V348.44A37.34,37.34,0,0,1,52.64,315L80,300v76a8,8,0,0,0,16,0V229c0-15.26,12.87-28.38,30.87-31.38l30.68-5.12c17.82-3,34.45,8.39,34.45,23.54v32a8,8,0,0,0,16,0V46.54A48,48,0,0,1,257.44,0h0C283.75.86,304,23.78,304,50V248a8,8,0,0,0,16,0V216c0-15.14,16.63-26.49,34.45-23.53l38.4,6.4C406.31,201.16,416,211,416,222.45V272l35.65,9A37.34,37.34,0,0,1,479.93,317.16Z"]]
};
exports.faHandMiddleFinger = faHandMiddleFinger;
var faHandPaper = {
  prefix: 'fad',
  iconName: 'hand-paper',
  icon: [448, 512, [], "f256", ["M448 168v150.36a192 192 0 0 1-5.1 44L416.39 475a48 48 0 0 1-46.73 37H172.07a48 48 0 0 1-38.82-19.77L7.65 319.53a40 40 0 0 1 64.7-47.06L104 316V80a40 40 0 0 1 39.22-40C165.64 39.58 184 58.36 184 80.79V256h8V40a40 40 0 0 1 39.22-40C253.64-.42 272 18.36 272 40.79V256h8V79a40 40 0 0 1 39.22-40C341.64 38.58 360 57.36 360 79.79V256h8v-87.21c0-22.43 18.36-41.21 40.78-40.78A40 40 0 0 1 448 168z", ""]]
};
exports.faHandPaper = faHandPaper;
var faHandPeace = {
  prefix: 'fad',
  iconName: 'hand-peace',
  icon: [448, 512, [], "f25b", ["M448 256v80a40.36 40.36 0 0 1-1.06 9.16l-32 136A40 40 0 0 1 376 512H136a40 40 0 0 1-34.73-20.15l-64-112A40 40 0 0 1 47 328.77l31.1-24.88L3.34 113.55a48 48 0 1 1 89.35-35.1L162.43 256H176V48a48 48 0 0 1 96 0v208h8v-32a40 40 0 0 1 80 0v32h8a40 40 0 0 1 80 0z", ""]]
};
exports.faHandPeace = faHandPeace;
var faHandPointDown = {
  prefix: 'fad',
  iconName: 'hand-point-down',
  icon: [384, 512, [], "f0a7", ["M383.81 256c0 2.72.19 13.25.19 16 0 50.65-22.12 81.57-71.26 72.6-9.3 18.6-39.49 30.74-62.32 16.45-21.17 24.64-53.89 22.64-70.94 6.3v99.85c0 24.15-20.2 44.8-43.83 44.8-23.28 0-43.82-21.35-43.82-44.8V318a135.83 135.83 0 0 1-24.92 14.15C35.1 345.75 0 322.22 0 288c0-18.62 10.9-32.2 29.09-40 28.29-12.12 64.33-78.65 77.33-107.53A48 48 0 0 1 150.26 112h171.53a24 24 0 0 1 23.7 20.27C352.74 179.11 384 194 383.81 256z", "M328 0H136a24 24 0 0 0-24 24v48a24 24 0 0 0 24 24h192a24 24 0 0 0 24-24V24a24 24 0 0 0-24-24zm-24 68a20 20 0 1 1 20-20 20 20 0 0 1-20 20z"]]
};
exports.faHandPointDown = faHandPointDown;
var faHandPointLeft = {
  prefix: 'fad',
  iconName: 'hand-point-left',
  icon: [512, 512, [], "f0a5", ["M400 214.26v171.53a24 24 0 0 1-20.27 23.7C332.89 416.74 318 448 256 447.81c-2.72 0-13.25.19-16 .19-50.65 0-81.57-22.12-72.6-71.26-18.6-9.3-30.74-39.49-16.45-62.32-24.64-21.17-22.64-53.89-6.3-70.94H44.8c-24.15 0-44.8-20.2-44.8-43.83 0-23.28 21.35-43.82 44.8-43.82H194a135.83 135.83 0 0 1-14.15-24.92C166.25 99.1 189.78 64 224 64c18.62 0 32.2 10.9 40 29.09 12.12 28.29 78.65 64.33 107.53 77.33A48 48 0 0 1 400 214.26z", "M488 176h-48a24 24 0 0 0-24 24v192a24 24 0 0 0 24 24h48a24 24 0 0 0 24-24V200a24 24 0 0 0-24-24zm-24 212a20 20 0 1 1 20-20 20 20 0 0 1-20 20z"]]
};
exports.faHandPointLeft = faHandPointLeft;
var faHandPointRight = {
  prefix: 'fad',
  iconName: 'hand-point-right',
  icon: [512, 512, [], "f0a4", ["M512 199.65c0 23.63-20.65 43.83-44.8 43.83h-99.85c16.34 17 18.34 49.76-6.3 70.94 14.29 22.83 2.15 53-16.45 62.32 9 49.14-22 71.26-72.6 71.26-2.75 0-13.28-.2-16-.19-62 .16-76.89-31.07-123.73-38.32a24 24 0 0 1-20.27-23.7V214.26a48 48 0 0 1 28.47-43.84c28.88-13 95.41-49 107.53-77.33C255.8 74.9 269.38 64 288 64c34.22 0 57.75 35.1 44.12 66.91A135.83 135.83 0 0 1 318 155.83h149.2c23.45 0 44.8 20.54 44.8 43.82z", "M72 176H24a24 24 0 0 0-24 24v192a24 24 0 0 0 24 24h48a24 24 0 0 0 24-24V200a24 24 0 0 0-24-24zM48 388a20 20 0 1 1 20-20 20 20 0 0 1-20 20z"]]
};
exports.faHandPointRight = faHandPointRight;
var faHandPointUp = {
  prefix: 'fad',
  iconName: 'hand-point-up',
  icon: [384, 512, [], "f0a6", ["M0 224c0-34.22 35.1-57.75 66.91-44.12A135.83 135.83 0 0 1 91.83 194V44.8c0-23.45 20.54-44.8 43.82-44.8 23.63 0 43.83 20.65 43.83 44.8v99.85c17.05-16.34 49.76-18.35 70.94 6.3 22.83-14.29 53-2.15 62.32 16.45 49.14-9 71.26 21.95 71.26 72.6 0 2.75-.2 13.28-.2 16 .17 62-31.06 76.89-38.31 123.73a24 24 0 0 1-23.7 20.27H150.26a48 48 0 0 1-43.84-28.47c-13-28.88-49-95.41-77.33-107.53C10.9 256.2 0 242.62 0 224z", "M328 416H136a24 24 0 0 0-24 24v48a24 24 0 0 0 24 24h192a24 24 0 0 0 24-24v-48a24 24 0 0 0-24-24zm-24 68a20 20 0 1 1 20-20 20 20 0 0 1-20 20z"]]
};
exports.faHandPointUp = faHandPointUp;
var faHandPointer = {
  prefix: 'fad',
  iconName: 'hand-pointer',
  icon: [448, 512, [], "f25a", ["M408 200a40 40 0 0 0-40 40h-8v-24a40 40 0 0 0-80 0v24h-8v-40a40 40 0 0 0-80 0v40h-8V40a40 40 0 0 0-80 0v276l-31.65-43.53a40 40 0 0 0-64.7 47.06l128 176A40 40 0 0 0 168 512h208a40 40 0 0 0 38.94-30.84l32-136A40.36 40.36 0 0 0 448 336v-96a40 40 0 0 0-40-40zM224 400a16 16 0 0 1-32 0v-64a16 16 0 0 1 32 0zm64 0a16 16 0 0 1-32 0v-64a16 16 0 0 1 32 0zm64 0a16 16 0 0 1-32 0v-64a16 16 0 0 1 32 0z", "M272 320a16 16 0 0 0-16 16v64a16 16 0 0 0 32 0v-64a16 16 0 0 0-16-16zm-64 0a16 16 0 0 0-16 16v64a16 16 0 0 0 32 0v-64a16 16 0 0 0-16-16zm128 0a16 16 0 0 0-16 16v64a16 16 0 0 0 32 0v-64a16 16 0 0 0-16-16z"]]
};
exports.faHandPointer = faHandPointer;
var faHandReceiving = {
  prefix: 'fad',
  iconName: 'hand-receiving',
  icon: [640, 512, [], "f47c", ["M204.8 230.4a32 32 0 1 0-51.2 38.4l38.1 50.8a16 16 0 0 1-1.5 20.9l-12.8 12.8a15.9 15.9 0 0 1-23.6-1.1L64 244.4V96a32 32 0 0 0-64 0v218.4a48.05 48.05 0 0 0 10.5 30l104.1 134.3a59.69 59.69 0 0 1 10.4 21.7 15.67 15.67 0 0 0 15.3 11.6H272a16 16 0 0 0 16-16V384a128.2 128.2 0 0 0-25.6-76.8zM608 64a32 32 0 0 0-32 32v148.4l-89.8 107.8a16.06 16.06 0 0 1-23.6 1.1l-12.8-12.8a16 16 0 0 1-1.5-20.9l38.1-50.8a32 32 0 1 0-51.2-38.4l-57.6 76.8A128.2 128.2 0 0 0 352 384v112a16 16 0 0 0 16 16h131.7a15.76 15.76 0 0 0 15.3-11.6 59.69 59.69 0 0 1 10.4-21.7l104.1-134.3a48.05 48.05 0 0 0 10.5-30V96a32 32 0 0 0-32-32z", "M201.2 150.4a31.51 31.51 0 0 1 0-44.7l96.4-96.4a31.63 31.63 0 0 1 44.8 0l96.3 96.3a31.63 31.63 0 0 1 0 44.8l-96.4 96.4a31.69 31.69 0 0 1-44.7 0z"]]
};
exports.faHandReceiving = faHandReceiving;
var faHandRock = {
  prefix: 'fad',
  iconName: 'hand-rock',
  icon: [512, 512, [], "f255", ["M0 242.41V176a48 48 0 0 1 48.8-48c26.3.5 47.2 22.5 47.2 48.8v48.1l8 7.1V96a48 48 0 0 1 48.8-48c26.3.5 47.2 22.5 47.2 48.8V128h8V80a48 48 0 0 1 48.8-48c26.3.5 47.2 22.5 47.2 48.8V128h8V96a48 48 0 0 1 48.8-48c26.3.5 47.2 22.5 47.2 48.8V128h8a48 48 0 0 1 48.8-48c26.3.4 47.2 22.5 47.2 48.8v133.5a95.58 95.58 0 0 1-7.5 37.3l-49 116.3a97.42 97.42 0 0 0-7.5 37.3v2.9a23.94 23.94 0 0 1-24 24H184a23.94 23.94 0 0 1-24-24v-6.7a48.21 48.21 0 0 0-16.1-35.9L32.2 314.21A96.23 96.23 0 0 1 0 242.41z", ""]]
};
exports.faHandRock = faHandRock;
var faHandScissors = {
  prefix: 'fad',
  iconName: 'hand-scissors',
  icon: [512, 512, [], "f257", ["M512 168v240a40 40 0 0 1-30.84 38.94l-136 32A40.36 40.36 0 0 1 336 480h-80a40 40 0 0 1 0-80v-8h-32a40 40 0 0 1 0-80h32v-8H48a48 48 0 0 1 0-96h208v-13.57L78.45 124.69a48 48 0 1 1 35.1-89.35l190.34 74.76L328.77 79a40 40 0 0 1 51.08-9.74l112 64A40 40 0 0 1 512 168z", ""]]
};
exports.faHandScissors = faHandScissors;
var faHandSpock = {
  prefix: 'fad',
  iconName: 'hand-spock',
  icon: [512, 512, [], "f259", ["M511 145.31l-36.3 152.5a97 97 0 0 0-2.6 22.2v42a97 97 0 0 1-4 27.3l-26.2 88.3a47.91 47.91 0 0 1-46 34.4H179.17a47.91 47.91 0 0 1-32.9-13l-133.7-125.9a40 40 0 1 1 54.8-58.2l60.6 57v-79.4L89 120.91a40 40 0 0 1 78-17.8l34.8 152.8h9.8l-47.6-207a40 40 0 1 1 78-17.8L293.67 256h15.1l48.4-193.7a40 40 0 1 1 77.6 19.4L391.17 256h11.1l30.8-129.3a40 40 0 0 1 77.9 18.6z", ""]]
};
exports.faHandSpock = faHandSpock;
var faHands = {
  prefix: 'fad',
  iconName: 'hands',
  icon: [640, 512, [], "f4c2", ["M204.8 230.4a32 32 0 1 0-51.2 38.4l38.1 50.8a16 16 0 0 1-1.5 20.9l-12.8 12.8a15.9 15.9 0 0 1-23.6-1.1L64 244.4V96a32 32 0 0 0-64 0v218.4a48.05 48.05 0 0 0 10.5 30l104.1 134.3a59.69 59.69 0 0 1 10.4 21.7 15.67 15.67 0 0 0 15.3 11.6H272a16 16 0 0 0 16-16V384a128.2 128.2 0 0 0-25.6-76.8zM608 64a32 32 0 0 0-32 32v148.4l-89.8 107.8a16.06 16.06 0 0 1-23.6 1.1l-12.8-12.8a16 16 0 0 1-1.5-20.9l38.1-50.8a32 32 0 1 0-51.2-38.4l-57.6 76.8A128.2 128.2 0 0 0 352 384v112a16 16 0 0 0 16 16h131.7a15.76 15.76 0 0 0 15.3-11.6 59.69 59.69 0 0 1 10.4-21.7l104.1-134.3a48.05 48.05 0 0 0 10.5-30V96a32 32 0 0 0-32-32z", ""]]
};
exports.faHands = faHands;
var faHandsHeart = {
  prefix: 'fad',
  iconName: 'hands-heart',
  icon: [640, 512, [], "f4c3", ["M608 64a32 32 0 0 0-32 32v148.4l-89.8 107.8a16.06 16.06 0 0 1-23.6 1.1l-12.8-12.8a16 16 0 0 1-1.5-20.9l38.1-50.8a32 32 0 1 0-51.2-38.4l-57.6 76.8A128.2 128.2 0 0 0 352 384v112a16 16 0 0 0 16 16h131.7a15.76 15.76 0 0 0 15.3-11.6 59.69 59.69 0 0 1 10.4-21.7l104.1-134.3a48.05 48.05 0 0 0 10.5-30V96a32 32 0 0 0-32-32zM204.8 230.42a32 32 0 1 0-51.2 38.4l38.1 50.8a16 16 0 0 1-1.5 20.9l-12.8 12.8a15.9 15.9 0 0 1-23.6-1.1L64 244.42V96a32 32 0 1 0-64 0v218.4a48.05 48.05 0 0 0 10.5 30l104.1 134.3a59.69 59.69 0 0 1 10.4 21.7 15.67 15.67 0 0 0 15.3 11.6H272a16 16 0 0 0 16-16V384a128.2 128.2 0 0 0-25.6-76.8z", "M198.4 136.32c-31.6-33.2-29.7-88.2 5.6-118.8 30.8-26.7 76.7-21.9 104.9 7.8l11.1 11.6 11.1-11.7c28.2-29.6 74.1-34.4 104.9-7.7 35.4 30.6 37.2 85.6 5.7 118.8l-108.9 114.2a17.42 17.42 0 0 1-25.5 0z"]]
};
exports.faHandsHeart = faHandsHeart;
var faHandsHelping = {
  prefix: 'fad',
  iconName: 'hands-helping',
  icon: [640, 512, [], "f4c4", ["M224 248V121.68a31.78 31.78 0 0 1 15-27.1l33.5-20.9A64.48 64.48 0 0 1 306.4 64h102.21L512 4.28A32 32 0 0 1 555.72 16l80 138.6a32 32 0 0 1-11.7 43.7l-80 46.2V216a56 56 0 0 0-56-56H304v88a40 40 0 1 1-80 0z", "M4.32 357.38A31.92 31.92 0 0 1 16 313.68l80-46.2v-47.3a63.86 63.86 0 0 1 31.1-54.8l64.89-39V248a72 72 0 1 0 144 0v-56H488a23.94 23.94 0 0 1 24 24v48a23.94 23.94 0 0 1-24 24h-8v64a32 32 0 0 1-32 32h-16a64.06 64.06 0 0 1-64 64H231.41L128 507.68A32 32 0 0 1 84.32 496z"]]
};
exports.faHandsHelping = faHandsHelping;
var faHandsUsd = {
  prefix: 'fad',
  iconName: 'hands-usd',
  icon: [640, 512, [], "f4c5", ["M608 64a32 32 0 0 0-32 32v148.4l-89.8 107.8a16.06 16.06 0 0 1-23.6 1.1l-12.8-12.8a16 16 0 0 1-1.5-20.9l38.1-50.8a32 32 0 1 0-51.2-38.4l-57.6 76.8A128.2 128.2 0 0 0 352 384v112a16 16 0 0 0 16 16h131.7a15.76 15.76 0 0 0 15.3-11.6 59.69 59.69 0 0 1 10.4-21.7l104.1-134.3a48.05 48.05 0 0 0 10.5-30V96a32 32 0 0 0-32-32zM204.8 230.4a32 32 0 1 0-51.2 38.4l38.1 50.8a16 16 0 0 1-1.5 20.9l-12.8 12.8a15.9 15.9 0 0 1-23.6-1.1L64 244.4V96a32 32 0 0 0-64 0v218.4a48.05 48.05 0 0 0 10.5 30l104.1 134.3a59.69 59.69 0 0 1 10.4 21.7 15.67 15.67 0 0 0 15.3 11.6H272a16 16 0 0 0 16-16V384a128.2 128.2 0 0 0-25.6-76.8z", "M246.7 96.6c-4.1-32 19-59.4 49.3-63V16a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v17.7a73.53 73.53 0 0 1 31.8 11.5c6.2 4.1 6.8 13.1 1.5 18.4l-17.5 17.5c-3.7 3.7-9.3 4.2-14.1 2a25.73 25.73 0 0 0-10.3-2.2h-32.8a8.41 8.41 0 0 0-2.3 16.5l50.1 14.3c22.2 6.4 40 24.7 42.9 47.7a56.14 56.14 0 0 1-49.3 63V240a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-17.7a73.53 73.53 0 0 1-31.8-11.5c-6.2-4.1-6.8-13.1-1.5-18.4l17.5-17.5c3.7-3.7 9.3-4.2 14.1-2a25.73 25.73 0 0 0 10.3 2.2h32.8a8.41 8.41 0 0 0 2.3-16.5l-50.1-14.3c-22.2-6.4-40-24.7-42.9-47.7z"]]
};
exports.faHandsUsd = faHandsUsd;
var faHandshake = {
  prefix: 'fad',
  iconName: 'handshake',
  icon: [640, 512, [], "f2b5", ["M0 384h64a32 32 0 0 0 32-32V128.2H0zm48-63.9a16 16 0 1 1-16 16 16 16 0 0 1 16-16zM457.3 73.4a31.77 31.77 0 0 0-22.6-9.4h-85.9a32 32 0 0 0-21.6 8.4l-98.3 90c-.1.1-.2.3-.3.4a39.78 39.78 0 0 0-2.1 56c12.7 13.9 39.4 17.6 56.1 2.7.1-.1.3-.1.4-.2l79.9-73.2a16 16 0 0 1 21.6 23.6l-26.1 23.9L504 313.8a72 72 0 0 1 7.9 7.7V128z", "M544 128.2v223.9a32 32 0 0 0 32 32h64V128.2zm48 223.9a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm-108.1-13.4L334.6 217.5l-30 27.5a72 72 0 0 1-97.3-106.1L289.1 64h-83.8a31.94 31.94 0 0 0-22.6 9.4L128 128v223.9h18.3l90.5 81.9a64 64 0 0 0 90-9.3l.2-.2 17.9 15.5a37.16 37.16 0 0 0 52.3-5.4l31.4-38.6 5.4 4.4a32 32 0 0 0 45-4.7l9.5-11.7a32.06 32.06 0 0 0-4.6-45.1z"]]
};
exports.faHandshake = faHandshake;
var faHandshakeAlt = {
  prefix: 'fad',
  iconName: 'handshake-alt',
  icon: [640, 512, [], "f4c6", ["M640 143.9v191.8a16 16 0 0 1-16 16h-97.6a63.36 63.36 0 0 0-22.2-37.9L358.6 195.6l26.1-23.9a16 16 0 0 0-21.6-23.6l-27 24.7-53 48.5c-.1.1-.3.1-.4.2-21.1 18.9-46.5 7.8-56.1-2.7a39.69 39.69 0 0 1 2.1-56c.1-.1.2-.3.3-.4l98.3-90a32 32 0 0 1 21.6-8.4h85.9a31.94 31.94 0 0 1 22.6 9.4L512 128h112a16 16 0 0 1 16 15.9z", "M0 335.9V144a16 16 0 0 1 16-16h112l54.7-54.6a31.94 31.94 0 0 1 22.6-9.4h83.8l-81.8 74.9a72 72 0 0 0-4.4 101.7c14.9 16.3 61.1 41.5 101.7 4.4l30-27.5 149.3 121.2a32.06 32.06 0 0 1 4.6 45.1l-9.5 11.7a32 32 0 0 1-45 4.7l-5.4-4.4-31.4 38.6a37.16 37.16 0 0 1-52.3 5.4L327 424.3l-.2.2a64 64 0 0 1-90 9.3l-90.5-81.9H16a16 16 0 0 1-16-16z"]]
};
exports.faHandshakeAlt = faHandshakeAlt;
var faHanukiah = {
  prefix: 'fad',
  iconName: 'hanukiah',
  icon: [640, 512, [], "f6e6", ["M152 101.33c0 14.72 10.75 26.67 24 26.67s24-11.94 24-26.67S176 48 176 48s-24 38.61-24 53.33zm64 0c0 14.72 10.75 26.67 24 26.67s24-11.94 24-26.67S240 48 240 48s-24 38.61-24 53.33zm-208 0C8 116.05 18.75 128 32 128s24-11.94 24-26.67S32 48 32 48 8 86.61 8 101.33zm80 0C88 116.05 98.75 128 112 128s24-11.94 24-26.67S112 48 112 48s-24 38.61-24 53.33zm208-48C296 68.05 306.75 80 320 80s24-11.94 24-26.67S320 0 320 0s-24 38.61-24 53.33zm208 48c0 14.72 10.75 26.67 24 26.67s24-11.94 24-26.67S528 48 528 48s-24 38.61-24 53.33zM608 48s-24 38.61-24 53.33S594.75 128 608 128s24-11.94 24-26.67S608 48 608 48zm-232 53.33c0 14.72 10.75 26.67 24 26.67s24-11.94 24-26.67S400 48 400 48s-24 38.61-24 53.33zm64 0c0 14.72 10.75 26.67 24 26.67s24-11.94 24-26.67S464 48 464 48s-24 38.61-24 53.33z", "M544 168a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v120h32zm-352 0a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v120h32zm-64 0a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v120h32zm288 0a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v120h32zm64 0a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v120h32zm-224 0a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v120h32zm368-8h-32a16 16 0 0 0-16 16v112a32 32 0 0 1-32 32H352V128a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v192H96a32 32 0 0 1-32-32V176a16 16 0 0 0-16-16H16a16 16 0 0 0-16 16v112a96 96 0 0 0 96 96h192v64H112a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H352v-64h192a96 96 0 0 0 96-96V176a16 16 0 0 0-16-16z"]]
};
exports.faHanukiah = faHanukiah;
var faHardHat = {
  prefix: 'fad',
  iconName: 'hard-hat',
  icon: [512, 512, [], "f807", ["M0 432v-32a16 16 0 0 1 16-16h480a16 16 0 0 1 16 16v32a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16z", "M320 80v112l40.81-81.62C430.72 139.08 480 207.75 480 288v64H32v-64c0-80.25 49.28-148.92 119.19-177.62L192 192V80a16 16 0 0 1 16-16h96a16 16 0 0 1 16 16z"]]
};
exports.faHardHat = faHardHat;
var faHashtag = {
  prefix: 'fad',
  iconName: 'hashtag',
  icon: [448, 512, [], "f292", ["M202.46 32.19a11.5 11.5 0 0 0-2.11-.19h-40.63a12 12 0 0 0-11.81 9.89L132.53 128h65l14.62-81.89a12 12 0 0 0-9.69-13.92zM72.19 465.89a12 12 0 0 0 9.7 13.92A11.5 11.5 0 0 0 84 480h40.64a12 12 0 0 0 11.81-9.89L186.11 192h-65zm163.65 0a12 12 0 0 0 9.7 13.92 11.5 11.5 0 0 0 2.11.19h40.63a12 12 0 0 0 11.82-9.89L315.47 384h-65zm130.27-433.7A11.5 11.5 0 0 0 364 32h-40.63a12 12 0 0 0-11.82 9.89L261.89 320h65l48.92-273.89a12 12 0 0 0-9.7-13.92z", "M44.18 191.81a11.5 11.5 0 0 0 2.11.19H285l11-64H53.43a12 12 0 0 0-11.81 9.89l-7.14 40a12 12 0 0 0 9.7 13.92zM7.33 329.89l-7.14 40a12 12 0 0 0 9.7 13.92A11.5 11.5 0 0 0 12 384h75l11-64H19.15a12 12 0 0 0-11.82 9.89zm430.78-201.7A11.5 11.5 0 0 0 436 128h-75l-11 64h78.85a12 12 0 0 0 11.82-9.89l7.14-40a12 12 0 0 0-9.7-13.92zm-34.29 192a11.5 11.5 0 0 0-2.11-.19H163l-11 64h242.57a12 12 0 0 0 11.81-9.89l7.14-40a12 12 0 0 0-9.7-13.92z"]]
};
exports.faHashtag = faHashtag;
var faHatChef = {
  prefix: 'fad',
  iconName: 'hat-chef',
  icon: [512, 512, [], "f86b", ["M416 32a95.17 95.17 0 0 0-57.73 19.74C334.93 20.5 298 0 256 0s-78.93 20.5-102.27 51.74A95.56 95.56 0 0 0 0 128c0 41.74 64 192 64 192h60.09L112 169.25a8 8 0 0 1 7.33-8.61l16-1.28a8 8 0 0 1 8.61 7.34L156.2 320h83.14V168a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v152h84.46l12.27-153.3a8 8 0 0 1 8.61-7.34l16 1.28a8 8 0 0 1 7.33 8.61L387.91 320H448s64-150.26 64-192a96 96 0 0 0-96-96z", "M64 480a32 32 0 0 0 32 32h320a32 32 0 0 0 32-32V352H64z"]]
};
exports.faHatChef = faHatChef;
var faHatCowboy = {
  prefix: 'fad',
  iconName: 'hat-cowboy',
  icon: [640, 512, [], "f8c0", ["M509.94 318.61C462.5 336.65 399.18 352 320 352c-79 0-142.34-15.44-189.9-33.56.12-.87.24-1.71.35-2.53 2.59-15.31 6.08-35.12 10.62-57.23C180.16 274.28 237.79 288 320 288s139.87-13.71 179-29.3c4.56 22.18 8.05 42 10.64 57.35.06.84.18 1.69.3 2.56z", "M499 258.7C481.92 175.83 450.62 64 401.33 64c-15.75 0-29.81 6.67-41.63 15.7a65.47 65.47 0 0 1-79.4 0c-11.82-9-25.87-15.7-41.63-15.7-49.28 0-80.57 111.82-97.61 194.68C180.16 274.28 237.79 288 320 288s139.87-13.71 179-29.3zm134 1a16 16 0 0 0-19.75 1.5c-1 .9-101.27 90.78-293.16 90.78-190.82 0-292.22-89.94-293.24-90.84A16 16 0 0 0 1 278.53C1.73 280.55 78.32 480 320 480s318.27-199.45 319-201.47a16 16 0 0 0-6.09-18.81z"]]
};
exports.faHatCowboy = faHatCowboy;
var faHatCowboySide = {
  prefix: 'fad',
  iconName: 'hat-cowboy-side',
  icon: [640, 512, [], "f8c1", ["M640 400c0 67.24-60.25 80-75.2 80-92.89 0-139.5-37.07-209.87-104.46l-88.21-84.48C241 268.12 211 256 180 256c-69.69 0-128.64 62.72-146.68 156.06-3.19 16.6-.38 33.83 7.71 47.3C48.86 472.47 60.64 480 73.28 480h-42.7a23.86 23.86 0 0 1-21.64-13.63C-3.73 439.33.3 414.1 1.87 406 22.9 297.14 94.47 224 180 224c38.95 0 76.31 14.92 108.89 43.95l88.21 84.48C446.45 418.88 485.18 448 564.8 448c23.82 0 43.2-21.53 43.2-48 0-21.81-20.61-108.08-112.45-124.87L490 242.05C601.87 256 640 355.47 640 400z", "M354.93 375.54l-88.21-84.48C241 268.12 211 256 180 256c-69.69 0-128.64 62.72-146.68 156.06-3.19 16.6-.38 33.83 7.71 47.3C48.86 472.47 60.64 480 73.28 480H564.8c-71.12 0-115.11-21.73-163.41-62.16-14.78-12.38-29.97-26.5-46.46-42.3zm140.62-100.41l-27.16-162c-6.14-33-40.81-54.75-76.36-47.79l-191.18 37.38c-27.09 5.3-47.41 26.07-50.35 51.48l-7.57 74.53A146.73 146.73 0 0 1 180 224c38.95 0 76.31 14.92 108.89 43.95l88.21 84.48C446.45 418.88 485.18 448 564.8 448c23.82 0 43.2-21.53 43.2-48 0-21.81-20.61-108.08-112.45-124.87z"]]
};
exports.faHatCowboySide = faHatCowboySide;
var faHatSanta = {
  prefix: 'fad',
  iconName: 'hat-santa',
  icon: [640, 512, [], "f7a7", ["M452.6 352H58.7l89.7-215.5A170 170 0 0 1 435 92.1l53.1 62.7a55.94 55.94 0 0 0-24.2 45.3 54.08 54.08 0 0 0-8.2 11.4L384 192z", "M480 384H32a32 32 0 0 0-32 32v32a32 32 0 0 0 32 32h448a32 32 0 0 0 32-32v-32a32 32 0 0 0-32-32zm160-144c0-12.1-8.2-21.9-19.2-25.2 5.5-10.1 4.4-22.8-4.2-31.4s-21.3-9.7-31.4-4.2c-3.3-11-13.1-19.2-25.2-19.2s-21.9 8.2-25.2 19.2c-10.1-5.5-22.8-4.4-31.4 4.2s-9.7 21.3-4.2 31.4c-11 3.3-19.2 13.1-19.2 25.2s8.2 21.9 19.2 25.2c-5.5 10.1-4.4 22.8 4.2 31.4a25.45 25.45 0 0 0 31.4 4.2c3.3 11 13.1 19.2 25.2 19.2s21.9-8.2 25.2-19.2c4 2.1 8.2 3.6 12.5 3.6a26.9 26.9 0 0 0 18.9-7.8c8.6-8.6 9.7-21.3 4.2-31.4 11-3.3 19.2-13.1 19.2-25.2z"]]
};
exports.faHatSanta = faHatSanta;
var faHatWinter = {
  prefix: 'fad',
  iconName: 'hat-winter',
  icon: [512, 512, [], "f7a8", ["M128 270.1l64 32 64-32 64 32 64-32 64 32 7.2-3.6c-19.7-50.2-55.2-104.9-119-140.5-.4.4-.6.8-1 1.2a58.46 58.46 0 0 1-39.6 17.2 57.79 57.79 0 0 1-79.2 0 58.4 58.4 0 0 1-39.6-17.2c-.4-.4-.6-.8-1-1.2-63.9 35.6-99.4 90.4-119 140.5l7.2 3.6zM496 448H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h480a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z", "M195.2 105.2c-5.5 10.1-4.4 22.8 4.2 31.4a25.45 25.45 0 0 0 31.4 4.2c3.3 11 13.1 19.2 25.2 19.2s21.9-8.2 25.2-19.2c4 2.1 8.2 3.6 12.5 3.6a26.9 26.9 0 0 0 18.9-7.8c8.6-8.6 9.7-21.3 4.2-31.4 11-3.3 19.2-13.1 19.2-25.2s-8.2-21.9-19.2-25.2c5.5-10.1 4.4-22.8-4.2-31.4s-21.3-9.7-31.4-4.2C277.9 8.2 268.1 0 256 0s-21.9 8.2-25.2 19.2c-10.1-5.5-22.8-4.4-31.4 4.2s-9.7 21.3-4.2 31.4C184.2 58.1 176 67.9 176 80s8.2 21.9 19.2 25.2zm270.5 223.9l-17.7 8.8-64-32-64 32-64-32-64 32-64-32-64 32-17.7-8.8C32.2 377.8 32 416 32 416h448s-.2-38.2-14.3-86.9z"]]
};
exports.faHatWinter = faHatWinter;
var faHatWitch = {
  prefix: 'fad',
  iconName: 'hat-witch',
  icon: [576, 512, [], "f6e7", ["M571.21 426.81l-22.67-22.66c-6-6-15.49-6-22-.43A185.1 185.1 0 0 1 405.88 448H170.1a185.14 185.14 0 0 1-120.68-44.28c-6.5-5.53-16-5.61-22 .43L4.78 426.81c-6.44 6.44-6.45 17.25.4 23.25A248.62 248.62 0 0 0 170.1 512h235.78a248.64 248.64 0 0 0 164.93-61.94c6.84-6 6.84-16.81.4-23.25zM320 352h-64v64h64z", "M542.35 114.76L512 192l-14-42.12A32 32 0 0 0 467.59 128H428.4a32 32 0 0 0-30.4 21.87l-6.35 19a64.06 64.06 0 0 0 1.89 45.45l79.6 185.73A152.57 152.57 0 0 1 405.88 416H352v-64a32 32 0 0 0-32-32h-64a32 32 0 0 0-32 32v64h-53.9a152.51 152.51 0 0 1-67.1-15.81l104-233.86a128.08 128.08 0 0 1 53.46-59.15l166.35-103a32 32 0 0 1 38.5 5.16L534.62 82a32 32 0 0 1 7.73 32.76z"]]
};
exports.faHatWitch = faHatWitch;
var faHatWizard = {
  prefix: 'fad',
  iconName: 'hat-wizard',
  icon: [512, 512, [], "f6e8", ["M512 464v32a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h480a16 16 0 0 1 16 16z", "M240 416h208l-86.41-201.63a64 64 0 0 1-1.89-45.45L416 0 228.42 107.19A128 128 0 0 0 175 166.34L64 416h144l-16-32-64-32 64-32 32-64 32 64 64 32-64 32zm48-224l-16 32-16-32-32-16 32-16 16-32 16 32 32 16z"]]
};
exports.faHatWizard = faHatWizard;
var faHaykal = {
  prefix: 'fad',
  iconName: 'haykal',
  icon: [512, 512, [], "f666", ["M239.69 218L256 166.72 272.29 218l44.95-28.62-20 49.87 52.57 7.38-46.91 25.12 35.61 39.93-51.89-11.3 2 53.79L256 311.68l-32.59 42.49 2-53.79-51.89 11.3 35.6-39.93-46.92-25.17 52.57-7.38-20-49.87z", "M496.25 202.52l-110-15.44 41.82-104.34c6.67-16.64-11.6-32.18-26.59-22.63l-94 59.89-34.13-107.18a18.15 18.15 0 0 0-34.7 0L204.56 120l-94-59.89c-15-9.55-33.25 6-26.59 22.63l41.82 104.34-110 15.43c-17.54 2.46-21.68 26.27-6 34.67l98.16 52.66-74.55 83.55c-10.92 12.25-1.72 30.93 13.29 30.93a18.79 18.79 0 0 0 4.07-.45l108.57-23.65-4.11 112.55A18.32 18.32 0 0 0 173.63 512a17.65 17.65 0 0 0 14.2-7.18L256 415.91l68.18 88.9a17.64 17.64 0 0 0 14.2 7.18 18.32 18.32 0 0 0 18.41-19.22l-4.11-112.55 108.57 23.65c17.36 3.76 29.21-17.2 17.35-30.49l-74.48-83.54 98.16-52.66c15.65-8.39 11.51-32.18-6.03-34.66zM338.51 311.68l-51.89-11.3 2 53.79L256 311.68l-32.59 42.49 2-53.79-51.89 11.3 35.6-39.93-46.92-25.17 52.57-7.38-20-49.87L239.69 218 256 166.72 272.29 218l44.95-28.62-20 49.87 52.57 7.38-46.91 25.12z"]]
};
exports.faHaykal = faHaykal;
var faHdd = {
  prefix: 'fad',
  iconName: 'hdd',
  icon: [576, 512, [], "f0a0", ["M384 320a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm175.88-88.18L462.25 85.37A48 48 0 0 0 422.31 64H153.69a48 48 0 0 0-39.94 21.37L16.12 231.82A96 96 0 0 0 0 285.07V304a48 48 0 0 1 48-48h480a48 48 0 0 1 48 48v-18.93a96 96 0 0 0-16.12-53.25z", "M528 256H48a48 48 0 0 0-48 48v96a48 48 0 0 0 48 48h480a48 48 0 0 0 48-48v-96a48 48 0 0 0-48-48zM384 384a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm96 0a32 32 0 1 1 32-32 32 32 0 0 1-32 32z"]]
};
exports.faHdd = faHdd;
var faHeadSide = {
  prefix: 'fad',
  iconName: 'head-side',
  icon: [512, 512, [], "f6e9", ["M509.21 275c-20.94-47.12-48.44-151.73-73.08-186.75A208 208 0 0 0 266.09 0H192C86 0 0 86 0 192a191.28 191.28 0 0 0 64 142.82V512h256v-64h64a64 64 0 0 0 64-64v-64h32a32 32 0 0 0 29.21-45zM320 224a32 32 0 1 1 32-32 32 32 0 0 1-32 32z", "M320 224a32 32 0 1 1 32-32 32 32 0 0 1-32 32z"]]
};
exports.faHeadSide = faHeadSide;
var faHeadSideBrain = {
  prefix: 'fad',
  iconName: 'head-side-brain',
  icon: [512, 512, [], "f808", ["M509.21 275c-20.94-47.12-48.44-151.73-73.08-186.75A208 208 0 0 0 266.09 0H192C86 0 0 86 0 192a191.28 191.28 0 0 0 64 142.82V512h256v-64h64a64 64 0 0 0 64-64v-64h32a32 32 0 0 0 29.21-45zM336 208h-50.94a47.5 47.5 0 0 1 2.94 16 48 48 0 0 1-48 48 47.5 47.5 0 0 1-16-2.94V320h-64v-50.94a47.5 47.5 0 0 1-16 2.94 48 48 0 0 1-48-48c0-1 .23-1.89.29-2.85A47.88 47.88 0 0 1 112 128a48 48 0 0 1 48-48 47.43 47.43 0 0 1 23.53 6.4 47.76 47.76 0 0 1 80.94 0 47.38 47.38 0 0 1 68.59 25.6H336a48 48 0 0 1 0 96z", "M66.61 160.29A47.89 47.89 0 0 1 112 128a48 48 0 0 1 48-48 47.43 47.43 0 0 1 23.53 6.4 47.76 47.76 0 0 1 80.94 0 47.38 47.38 0 0 1 68.59 25.6H336a48 48 0 0 1 0 96h-50.94a47.5 47.5 0 0 1 2.94 16 48 48 0 0 1-48 48 47.5 47.5 0 0 1-16-2.94V320h-64v-50.94a47.5 47.5 0 0 1-16 2.94 48 48 0 0 1-48-48c0-1 .23-1.89.29-2.85a47.88 47.88 0 0 1-29.68-60.86z"]]
};
exports.faHeadSideBrain = faHeadSideBrain;
var faHeadSideHeadphones = {
  prefix: 'fad',
  iconName: 'head-side-headphones',
  icon: [512, 512, [], "f8c2", ["M480 320h-32v64a64 64 0 0 1-64 64h-64v64H64V334.81A191.27 191.27 0 0 1 0 192C0 86 86 0 192 0a191.52 191.52 0 0 0-32 2.88V107.2c-37.73 18-64 56.2-64 100.8a112 112 0 0 0 224 0c0-44.61-26.27-82.8-64-100.81V0h10.08a207.87 207.87 0 0 1 170 88.25c24.66 35 52.16 139.63 73.1 186.75A32 32 0 0 1 480 320z", "M256 107.19V0h-64a191.52 191.52 0 0 0-32 2.88V107.2c-37.73 18-64 56.2-64 100.8a112 112 0 0 0 224 0c0-44.61-26.25-82.8-64-100.81zM208 272a64 64 0 1 1 64-64 64 64 0 0 1-64 64zm0-96a32 32 0 1 0 32 32 32 32 0 0 0-32-32z"]]
};
exports.faHeadSideHeadphones = faHeadSideHeadphones;
var faHeadSideMedical = {
  prefix: 'fad',
  iconName: 'head-side-medical',
  icon: [512, 512, [], "f809", ["M509.21 275c-20.94-47.12-48.44-151.73-73.08-186.75A208 208 0 0 0 266.09 0H192C86 0 0 86 0 192a191.28 191.28 0 0 0 64 142.82V512h256v-64h64a64 64 0 0 0 64-64v-64h32a32 32 0 0 0 29.21-45zM320 216a8 8 0 0 1-8 8h-56v56a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8v-56h-56a8 8 0 0 1-8-8v-48a8 8 0 0 1 8-8h56v-56a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v56h56a8 8 0 0 1 8 8z", "M320 216a8 8 0 0 1-8 8h-56v56a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8v-56h-56a8 8 0 0 1-8-8v-48a8 8 0 0 1 8-8h56v-56a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v56h56a8 8 0 0 1 8 8z"]]
};
exports.faHeadSideMedical = faHeadSideMedical;
var faHeadVr = {
  prefix: 'fad',
  iconName: 'head-vr',
  icon: [512, 512, [], "f6ea", ["M509.2 275c-2.47-5.56-5.05-12-7.69-19H308.56a119.09 119.09 0 0 1-80.92-32H35a191.65 191.65 0 0 0 61 110.82V512h224v-64h64a64 64 0 0 0 64-64v-64h32a32 32 0 0 0 29.2-45zM220.94 68.87A112.21 112.21 0 0 1 304 32h72.3A207.36 207.36 0 0 0 266.09 0H224C140.44 0 69.54 53.48 43.16 128h150a112.22 112.22 0 0 1 27.78-59.13z", "M496 64h-48v160h48a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm-270.4 64H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h224.84c15.81 19.71 41 32 67.72 32H416V64H304a80 80 0 0 0-78.4 64z"]]
};
exports.faHeadVr = faHeadVr;
var faHeading = {
  prefix: 'fad',
  iconName: 'heading',
  icon: [512, 512, [], "f1dc", ["M480 32H320a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h160a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zm-288 0H32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h160a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zm0 384H32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h160a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm288 0H320a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h160a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z", "M352 96h96v320h-96V288H160v128H64V96h96v128h192z"]]
};
exports.faHeading = faHeading;
var faHeadphones = {
  prefix: 'fad',
  iconName: 'headphones',
  icon: [512, 512, [], "f025", ["M512 288v48a32 32 0 0 1-17.69 28.62l-14.37 7c0-1.19.06-2.38.06-3.58a111.64 111.64 0 0 0-32-78.37V288c0-105.87-86.13-192-192-192S64 182.13 64 288v1.63A111.64 111.64 0 0 0 32 368c0 1.2 0 2.39.06 3.58l-14.37-7A32 32 0 0 1 0 336v-48C0 146.5 114.52 32 256 32s256 114.52 256 256z", "M168 256h-24a112 112 0 0 0 0 224h24a24 24 0 0 0 24-24V280a24 24 0 0 0-24-24zm200 0h-24a24 24 0 0 0-24 24v176a24 24 0 0 0 24 24h24a112 112 0 0 0 0-224z"]]
};
exports.faHeadphones = faHeadphones;
var faHeadphonesAlt = {
  prefix: 'fad',
  iconName: 'headphones-alt',
  icon: [512, 512, [], "f58f", ["M496 416h-16a16 16 0 0 1-16-16V288c0-114.67-93.33-207.8-208-207.82S48 173.33 48 288v112a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16V288C4.57 151.13 112.91 32 256 32s251.43 119.13 256 256v112a16 16 0 0 1-16 16z", "M160 288h-16a64.05 64.05 0 0 0-64 64.12v63.76A64.06 64.06 0 0 0 144 480h16a32 32 0 0 0 32-32.06V320.06A32 32 0 0 0 160 288zm208 0h-16a32 32 0 0 0-32 32.06v127.88A32 32 0 0 0 352 480h16a64.06 64.06 0 0 0 64-64.12v-63.76A64.06 64.06 0 0 0 368 288z"]]
};
exports.faHeadphonesAlt = faHeadphonesAlt;
var faHeadset = {
  prefix: 'fad',
  iconName: 'headset',
  icon: [512, 512, [], "f590", ["M192 464a48 48 0 0 1 48-48h32a48 48 0 0 1 48 48h101.72A42.28 42.28 0 0 0 464 421.72s0-163.29-.12-165.72h.12c0-114.69-93.31-208-208-208S48 141.31 48 256v16a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16v-16C4.58 118.83 113.18 0 256 0s251.42 118.83 256 256v165.72A90.28 90.28 0 0 1 421.72 512H240a48 48 0 0 1-48-48z", "M368 176h-16a32 32 0 0 0-32 32v112a32 32 0 0 0 32 32h16a64 64 0 0 0 64-64v-48a64 64 0 0 0-64-64zm-208 0h-16a64 64 0 0 0-64 64v48a64 64 0 0 0 64 64h16a32 32 0 0 0 32-32V208a32 32 0 0 0-32-32z"]]
};
exports.faHeadset = faHeadset;
var faHeart = {
  prefix: 'fad',
  iconName: 'heart',
  icon: [512, 512, [], "f004", ["M462.32 62.63C407.5 15.94 326 24.33 275.69 76.23L256 96.53l-19.69-20.3c-50.21-51.9-131.8-60.29-186.61-13.6-62.78 53.6-66.09 149.81-9.88 207.9l193.5 199.79a31.31 31.31 0 0 0 45.28 0l193.5-199.79c56.31-58.09 53-154.3-9.78-207.9zm-52.8 185l-143.1 143.85a15.29 15.29 0 0 1-21.7 0l-140-140.78c-28.37-28.52-33.78-75-8.37-106.23a76.44 76.44 0 0 1 113.77-5.88l45.49 45.7 42.37-42.58c28.38-28.52 74.65-34 105.71-8.45a77.35 77.35 0 0 1 5.83 114.36z", "M244.72 391.48l-140-140.78c-28.37-28.52-33.78-75-8.36-106.23a76.43 76.43 0 0 1 113.76-5.88l45.49 45.7 42.37-42.58c28.38-28.51 74.65-34 105.71-8.45a77.35 77.35 0 0 1 5.87 114.36L266.41 391.48a15.28 15.28 0 0 1-21.69 0z"]]
};
exports.faHeart = faHeart;
var faHeartBroken = {
  prefix: 'fad',
  iconName: 'heart-broken',
  icon: [512, 512, [], "f7a9", ["M473.68 73.78c48.71 49.79 50.8 129.08 7.3 182.08L268.8 474.53a17.82 17.82 0 0 1-25.19.5l-.51-.5L31 256c-43.49-53.1-41.39-132.39 7.3-182.18l2.4-2.4C87 24 159.7 19.6 211.41 57.39L240 143.87l-96 64 144 144-48-128 96-64-34.31-103.39c51.6-36.89 123.59-32.19 169.59 14.8z", "M288 352L144 208l96-64.1-28.59-86.52q16.68 14.15 32 29.81L256 100l11.67-12q16.23-16.64 34-31.6L336 159.87l-96 64z"]]
};
exports.faHeartBroken = faHeartBroken;
var faHeartCircle = {
  prefix: 'fad',
  iconName: 'heart-circle',
  icon: [496, 512, [], "f4c7", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8ZM371.5,280.3,260.9,394.5a17.88,17.88,0,0,1-25.28.62h0c-.21-.2-.42-.41-.62-.62L124.5,280.3c-32.1-33.2-30.2-88.2,5.7-118.8,31.3-26.7,77.9-21.9,106.6,7.7l11.3,11.6,11.3-11.6c28.7-29.6,75.3-34.4,106.6-7.7,35.8,30.6,37.7,85.6,5.5,118.8Z", "M371.5,280.3,260.9,394.5a17.88,17.88,0,0,1-25.28.62h0c-.21-.2-.42-.41-.62-.62L124.5,280.3c-32.1-33.2-30.2-88.2,5.7-118.8,31.3-26.7,77.9-21.9,106.6,7.7l11.3,11.6,11.3-11.6c28.7-29.6,75.3-34.4,106.6-7.7,35.8,30.6,37.7,85.6,5.5,118.8Z"]]
};
exports.faHeartCircle = faHeartCircle;
var faHeartRate = {
  prefix: 'fad',
  iconName: 'heart-rate',
  icon: [640, 512, [], "f5f8", ["M640 240v32a16 16 0 0 1-16 16H499.78l-55.15 110.3a32 32 0 0 1-59.5-5.89l-61.39-225.12-68.44 319.4A32 32 0 0 1 225.08 512h-1.09a32 32 0 0 1-30.75-23.2L135.86 288H16a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h144a32 32 0 0 1 30.77 23.2L219.56 348 288.7 25.3a32 32 0 0 1 62.18-1.72l73.95 271.2 26.54-53.09A32 32 0 0 1 480 224h144a16 16 0 0 1 16 16z", ""]]
};
exports.faHeartRate = faHeartRate;
var faHeartSquare = {
  prefix: 'fad',
  iconName: 'heart-square',
  icon: [448, 512, [], "f4c8", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-52.5 248.3L236.9 394.5a17.88 17.88 0 0 1-25.9 0L100.5 280.3c-32.1-33.2-30.2-88.2 5.7-118.8 31.3-26.7 77.9-21.9 106.6 7.7l11.3 11.6 11.3-11.6c28.7-29.6 75.3-34.4 106.6-7.7 35.8 30.6 37.7 85.6 5.5 118.8z", "M106.2 161.5c31.3-26.7 77.9-21.9 106.6 7.7l11.3 11.6 11.3-11.6c28.7-29.6 75.3-34.4 106.6-7.7 35.8 30.6 37.7 85.6 5.5 118.8L236.9 394.5a17.88 17.88 0 0 1-25.9 0L100.5 280.3c-32.1-33.2-30.2-88.2 5.7-118.8z"]]
};
exports.faHeartSquare = faHeartSquare;
var faHeartbeat = {
  prefix: 'fad',
  iconName: 'heartbeat',
  icon: [512, 512, [], "f21e", ["M320.21 243.85l-49.7 99.4a16 16 0 0 1-28.9-.6l-56.9-126.3-30 71.7h-94.1l182.5 186.5a17.82 17.82 0 0 0 25.7 0l182.61-186.5H342.31zM473.71 74l-2.4-2.5a131 131 0 0 0-187.39 0L256 100.05l-27.9-28.5a130.83 130.83 0 0 0-187.4 0L38.31 74c-48.7 49.8-50.8 129.1-7.3 182.1h102.41l35.89-86.2a16 16 0 0 1 29.4-.4l58.21 129.3 49-97.9a16 16 0 0 1 28.59 0l27.6 55.2H481c43.51-53.05 41.42-132.35-7.29-182.1z", "M451 288l-.1.05H342.31l-22.1-44.2-49.7 99.4a16 16 0 0 1-28.9-.6l-56.9-126.3-30 71.7H61V288l-29.95-31.95h102.37l35.89-86.2a16 16 0 0 1 29.4-.4l58.21 129.3 49-97.9a16 16 0 0 1 28.59 0l27.6 55.2H481z"]]
};
exports.faHeartbeat = faHeartbeat;
var faHelicopter = {
  prefix: 'fad',
  iconName: 'helicopter',
  icon: [640, 512, [], "f533", ["M635.37 458.81l-22.15-22.2a16.13 16.13 0 0 0-22.64 0c-7.09 6.77-13.84 11.25-24.64 11.25H240a16 16 0 0 0-16 16V496a16 16 0 0 0 16 16h325.94c14.88 0 35.3-.47 68.45-29.52a16.28 16.28 0 0 0 .98-23.67zM320 128h64V64h176a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16H144a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h176z", "M384 128H112L68.8 70.4A16 16 0 0 0 56 64H16A16 16 0 0 0 .49 83.88L32 192l160 64 86.4 115.2A32 32 0 0 0 304 384h272a32 32 0 0 0 32-32c0-123.71-100.29-224-224-224zm32 192V195.51C478.55 208.3 528 257.44 540.79 320z"]]
};
exports.faHelicopter = faHelicopter;
var faHelmetBattle = {
  prefix: 'fad',
  iconName: 'helmet-battle',
  icon: [576, 512, [], "f6eb", ["M32 256c17.67 0 32-12.56 32-28.06V0L1 221.13C-4.08 238.84 11.2 256 32 256zm543-34.87L512 0v227.94c0 15.5 14.32 28.06 32 28.06 20.8 0 36.08-17.16 31-34.87z", "M494.82 426.77L320 512V256l96-32v-32H160v32l96 32v256L81.19 426.77C68.46 420.9 61.44 406 64.87 391.53 73.14 356.72 96 293.58 96 210.82 96 90.35 288 0 288 0s192 90.35 192 210.82c0 82.76 22.86 145.9 31.14 180.71 3.43 14.47-3.59 29.37-16.32 35.24z"]]
};
exports.faHelmetBattle = faHelmetBattle;
var faHexagon = {
  prefix: 'fad',
  iconName: 'hexagon',
  icon: [576, 512, [], "f312", ["M553.48 231.8l-112-192A48.08 48.08 0 0 0 400 16H176a48.08 48.08 0 0 0-41.5 23.8l-112 192a48.19 48.19 0 0 0 0 48.4l112 192A48.08 48.08 0 0 0 176 496h224a48.08 48.08 0 0 0 41.5-23.8l112-192a48.19 48.19 0 0 0-.02-48.4zm-87.19 38.86l-76.38 130.91A29.1 29.1 0 0 1 364.78 416H211.22a29.1 29.1 0 0 1-25.13-14.43l-76.38-130.91a29.12 29.12 0 0 1 0-29.32l76.38-130.91A29.08 29.08 0 0 1 211.22 96h153.56a29.08 29.08 0 0 1 25.13 14.43l76.38 130.91a29.12 29.12 0 0 1 0 29.32z", "M466.29 270.66l-76.38 130.91A29.1 29.1 0 0 1 364.78 416H211.22a29.1 29.1 0 0 1-25.13-14.43l-76.38-130.91a29.12 29.12 0 0 1 0-29.32l76.38-130.91A29.08 29.08 0 0 1 211.22 96h153.56a29.08 29.08 0 0 1 25.13 14.43l76.38 130.91a29.12 29.12 0 0 1 0 29.32z"]]
};
exports.faHexagon = faHexagon;
var faHighlighter = {
  prefix: 'fad',
  iconName: 'highlighter',
  icon: [544, 512, [], "f591", ["M0 480l99.92 32 35.45-35.45-67-67zM527.92 79.27l-63.2-63.2a54.89 54.89 0 0 0-75.12-2.35l-199 170 169.72 169.74 170-199.06a54.88 54.88 0 0 0-2.4-75.13z", "M75.94 371.84l50.93-50.94-13.05-42.83A36.6 36.6 0 0 1 124.61 240l41.52-35.44 173.34 173.31-35.55 41.64a36.59 36.59 0 0 1-38.15 10.78L223 417.21l-50.86 50.86z"]]
};
exports.faHighlighter = faHighlighter;
var faHiking = {
  prefix: 'fad',
  iconName: 'hiking',
  icon: [384, 512, [], "f6ec", ["M368 160h-16a16 16 0 0 0-16 16v320a16 16 0 0 0 16 16h16a16 16 0 0 0 16-16V176a16 16 0 0 0-16-16zM240 0a48 48 0 1 0 48 48 48 48 0 0 0-48-48zM125.08 97.94C81.2 87.42 36.73 113 25.76 155.11L.49 253.24c-2.19 8.42 3.14 16.95 11.92 19.06L76 287.55c8.79 2.1 17.68-3 19.87-11.44L137 117c2.19-8.42-3.14-16.95-11.92-19.06z", "M81 472.23a32 32 0 0 0 62.1 15.53l25.24-101L115.51 334zm162-248l22.43 22.43A32 32 0 0 0 288 256h48v-64h-34.75l-46.78-46.78a58.78 58.78 0 0 0-98.59 27.3L129 280.24a32 32 0 0 0 8.42 30.39L224 397.25V480a32 32 0 0 0 64 0v-82.75A63.58 63.58 0 0 0 269.25 352l-46.82-46.82c.15-.5.49-.89.62-1.41z"]]
};
exports.faHiking = faHiking;
var faHippo = {
  prefix: 'fad',
  iconName: 'hippo',
  icon: [640, 512, [], "f6ed", ["M581.12 96.2c-27.67-.15-52.5 17.58-76.6 26.62A96 96 0 0 0 416 64a95 95 0 0 0-32 5.88V56a24 24 0 0 0-24-24h-16a24 24 0 0 0-24 24v49c-34-25.4-78.76-41-128-41C86 64 0 135.64 0 224v240a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16v-70.79C128.35 407.57 166.72 416 208 416s79.65-8.43 112-22.79V464a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16V288h192a32 32 0 0 0 32-32v-92c0-34.11-24.79-67.61-58.88-67.8zM448 176a16 16 0 1 1 16-16 16 16 0 0 1-16 16z", "M544 288v16a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-16zm-96-144a16 16 0 1 0 16 16 16 16 0 0 0-16-16z"]]
};
exports.faHippo = faHippo;
var faHistory = {
  prefix: 'fad',
  iconName: 'history',
  icon: [512, 512, [], "f1da", ["M141.68 400.23a184 184 0 1 0-11.75-278.3l50.76 50.76c10.08 10.08 2.94 27.31-11.32 27.31H24a16 16 0 0 1-16-16V38.63c0-14.26 17.23-21.4 27.31-11.32l49.38 49.38A247.14 247.14 0 0 1 256 8c136.81 0 247.75 110.78 248 247.53S392.82 503.9 256.18 504a247 247 0 0 1-155.82-54.91 24 24 0 0 1-1.84-35.61l11.27-11.27a24 24 0 0 1 31.89-1.98z", "M288 152v104.35L328.7 288a24 24 0 0 1 4.21 33.68l-9.82 12.62a24 24 0 0 1-33.68 4.21L224 287.65V152a24 24 0 0 1 24-24h16a24 24 0 0 1 24 24z"]]
};
exports.faHistory = faHistory;
var faHockeyMask = {
  prefix: 'fad',
  iconName: 'hockey-mask',
  icon: [448, 512, [], "f6ee", ["M376.61 54.46c-82.95-72.61-222.26-72.61-305.22 0-64 56-102.4 170-38.76 361.54C64.53 512 224 512 224 512s159.47 0 191.37-96C479 224.44 440.64 110.5 376.61 54.46zM288 64a16 16 0 1 1-16 16 16 16 0 0 1 16-16zm-128 0a16 16 0 1 1-16 16 16 16 0 0 1 16-16zm16 400a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm0-64a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm0-64a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm-48-64a64 64 0 0 1-64-64 32 32 0 0 1 32-32h64a32 32 0 0 1 32 32 64 64 0 0 1-64 64zm96-128a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm48 320a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm0-64a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm0-64a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm48-64a64 64 0 0 1-64-64 32 32 0 0 1 32-32h64a32 32 0 0 1 32 32 64 64 0 0 1-64 64z", "M176 432a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm0-64a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm0-64a16 16 0 1 0 16 16 16 16 0 0 0-16-16zM288 64a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm-16 240a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm0 64a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm0 64a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm-48-320a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm-48-32a16 16 0 1 0-16 16 16 16 0 0 0 16-16z"]]
};
exports.faHockeyMask = faHockeyMask;
var faHockeyPuck = {
  prefix: 'fad',
  iconName: 'hockey-puck',
  icon: [512, 512, [], "f453", ["M0 160c0-53 114.6-96 256-96s256 43 256 96-114.6 96-256 96S0 213 0 160z", "M0 352V242.2c113.5 82.4 398.6 82.3 512 0V352c0 53-114.6 96-256 96S0 405 0 352z"]]
};
exports.faHockeyPuck = faHockeyPuck;
var faHockeySticks = {
  prefix: 'fad',
  iconName: 'hockey-sticks',
  icon: [640, 512, [], "f454", ["M233.65 8.93v-.08a16 16 0 0 0-21.49-7.16l-57.26 28.6a16.11 16.11 0 0 0-7.21 21.5l118.66 237L320 181.47zM624 352h-48v160h48a16 16 0 0 0 16-16V368a16 16 0 0 0-16-16zm-223-8.8l-27.26-54.46L320 395.94l40.39 80.66A64.52 64.52 0 0 0 418 512h126V352H416c-6.06 0-12.35-3.39-15.06-8.8zM64 512h32V352H64z", "M485.13 30.29l-57.26-28.6a16 16 0 0 0-21.49 7.16v.08L239.06 343.2c-2.71 5.41-9 8.82-15.06 8.8H96v160h126a64.52 64.52 0 0 0 57.61-35.4L492.34 51.79a16.11 16.11 0 0 0-7.21-21.5zM0 368v128a16 16 0 0 0 16 16h48V352H16a16 16 0 0 0-16 16zm544-16v160h32V352z"]]
};
exports.faHockeySticks = faHockeySticks;
var faHollyBerry = {
  prefix: 'fad',
  iconName: 'holly-berry',
  icon: [448, 512, [], "f7aa", ["M207.86 235.1a15.66 15.66 0 0 0-23.8-13.7c-34.3 20.3-71.4 32.7-108.7 36.2a14.38 14.38 0 0 0-11.6 20.2 247.71 247.71 0 0 1 14.7 43.8 29.59 29.59 0 0 1-20.2 35.1A237.74 237.74 0 0 1 13 365.8 14.45 14.45 0 0 0 1.26 386c15 32.8 22.9 69.5 23 107.7a18.34 18.34 0 0 0 27.6 16c33.2-19 68.9-30.5 104.8-33.9a14.38 14.38 0 0 0 11.6-20.2 247.71 247.71 0 0 1-14.7-43.8 29.59 29.59 0 0 1 20.2-35.1 237.74 237.74 0 0 1 45.3-9.1 14.45 14.45 0 0 0 11.7-20.2c-15.5-34.2-23.3-72.5-22.9-112.3zm227.2 130.5a256.08 256.08 0 0 1-45.3-9.1 29.59 29.59 0 0 1-20.2-35.1 250.47 250.47 0 0 1 14.7-43.8 14.38 14.38 0 0 0-11.6-20.2c-37.3-3.5-74.4-15.9-108.7-36.2a15.72 15.72 0 0 0-23.8 13.7c0 1.6-.2 3.2-.2 4.9.2 33.3 7 65.7 19.9 94a46 46 0 0 1-.6 38.9c4.9 1.2 9.9 2.2 14.8 3.7a29.59 29.59 0 0 1 20.2 35.1 250.47 250.47 0 0 1-14.7 43.8 14.38 14.38 0 0 0 11.6 20.2c35.9 3.4 71.6 14.9 104.8 33.9a18.3 18.3 0 0 0 27.6-16c.2-38.2 8-75 23-107.7 4.3-8.7-1.8-19.1-11.5-20.1z", "M144.06 96a48 48 0 1 0 48 48 48 48 0 0 0-48-48zm160 0a48 48 0 1 0 48 48 48 48 0 0 0-48-48zm-32-48a48 48 0 1 0-48 48 48 48 0 0 0 48-48z"]]
};
exports.faHollyBerry = faHollyBerry;
var faHome = {
  prefix: 'fad',
  iconName: 'home',
  icon: [576, 512, [], "f015", ["M336 463.59V368a16 16 0 0 0-16-16h-64a16 16 0 0 0-16 16v95.71a16 16 0 0 1-15.92 16L112 480a16 16 0 0 1-16-16V300.06l184.39-151.85a12.19 12.19 0 0 1 15.3 0L480 300v164a16 16 0 0 1-16 16l-112-.31a16 16 0 0 1-16-16.1z", "M573.32 268.35l-25.5 31a12 12 0 0 1-16.9 1.65L295.69 107.21a12.19 12.19 0 0 0-15.3 0L45.17 301a12 12 0 0 1-16.89-1.65l-25.5-31a12 12 0 0 1 1.61-16.89L257.49 43a48 48 0 0 1 61 0L408 116.61V44a12 12 0 0 1 12-12h56a12 12 0 0 1 12 12v138.51l83.6 68.91a12 12 0 0 1 1.72 16.93z"]]
};
exports.faHome = faHome;
var faHomeAlt = {
  prefix: 'fad',
  iconName: 'home-alt',
  icon: [576, 512, [], "f80a", ["M336 463.58v-95.64a16 16 0 0 0-16-16h-64a16 16 0 0 0-16 16v95.71a16 16 0 0 1-15.92 16l-112.08.29a16 16 0 0 1-16-16V300.05L280.39 148.2a12.19 12.19 0 0 1 15.3 0L480 299.94v164a16 16 0 0 1-16 16l-112-.31a16 16 0 0 1-16-16.05z", "M530.92 300.94L295.69 107.2a12.19 12.19 0 0 0-15.3 0L45.17 300.94a12 12 0 0 1-16.89-1.64l-25.5-31a12 12 0 0 1 1.61-16.89l253.1-208.47a48 48 0 0 1 61 0l253.13 208.47a12 12 0 0 1 1.66 16.89l-25.5 31a12 12 0 0 1-16.86 1.64z"]]
};
exports.faHomeAlt = faHomeAlt;
var faHomeHeart = {
  prefix: 'fad',
  iconName: 'home-heart',
  icon: [576, 512, [], "f4c9", ["M64.11 311.38V496a16.05 16.05 0 0 0 16 16h416a16.05 16.05 0 0 0 16-16V311.38c-6.7-5.5-44.7-38.31-224-196.4-180.11 158.9-217.6 191.09-224 196.4zm314.1-26.31a60.6 60.6 0 0 1 4.5 89.11L298 459.77a13.94 13.94 0 0 1-19.8 0l-84.7-85.59a60.66 60.66 0 0 1 4.3-89.11c24-20 59.7-16.39 81.6 5.81l8.6 8.69 8.6-8.69c22.01-22.2 57.71-25.81 81.61-5.81z", "M378.21 285.07c-23.9-20-59.6-16.39-81.6 5.81l-8.6 8.69-8.6-8.69c-21.9-22.2-57.6-25.81-81.6-5.81a60.66 60.66 0 0 0-4.3 89.11l84.7 85.59a13.94 13.94 0 0 0 19.8 0l84.7-85.59a60.6 60.6 0 0 0-4.5-89.11zm192.6-48.8l-58.7-51.79V48a16 16 0 0 0-16-16h-64a16 16 0 0 0-16 16v51.7l-101.3-89.43a40 40 0 0 0-53.5 0l-256 226a16 16 0 0 0-1.2 22.61l21.4 23.8a16 16 0 0 0 22.6 1.2l229.4-202.2a16.12 16.12 0 0 1 21.2 0L528 284a16 16 0 0 0 22.6-1.21L572 259a16.11 16.11 0 0 0-1.19-22.73z"]]
};
exports.faHomeHeart = faHomeHeart;
var faHomeLg = {
  prefix: 'fad',
  iconName: 'home-lg',
  icon: [576, 512, [], "f80b", ["M496 512H368a16 16 0 0 1-16-16V368a16 16 0 0 0-16-16h-96a16 16 0 0 0-16 16v128a16 16 0 0 1-16 16H80a16 16 0 0 1-16-16V311c1.78-1.21 3.85-1.89 5.47-3.35L288 115l218.74 192.9c1.54 1.38 3.56 2 5.26 3.2V496a16 16 0 0 1-16 16z", "M527.92 283.88L298.6 81.61a16 16 0 0 0-21.17 0L48.11 283.89a16 16 0 0 1-22.59-1.21L4.1 258.89a16 16 0 0 1 1.21-22.59l256-226a39.85 39.85 0 0 1 53.45 0L416 99.67V48a16 16 0 0 1 16-16h64a16 16 0 0 1 16 16v136.43l58.69 51.83a16 16 0 0 1 1.22 22.59l-21.4 23.82a16 16 0 0 1-22.59 1.21z"]]
};
exports.faHomeLg = faHomeLg;
var faHomeLgAlt = {
  prefix: 'fad',
  iconName: 'home-lg-alt',
  icon: [576, 512, [], "f80c", ["M352 496V368a16 16 0 0 0-16-16h-96a16 16 0 0 0-16 16v128a16 16 0 0 1-16 16H80a16 16 0 0 1-16-16V311.07c1.78-1.21 3.85-1.89 5.47-3.35L288 115l218.74 192.9c1.54 1.38 3.56 2 5.26 3.2V496a16 16 0 0 1-16 16H368a16 16 0 0 1-16-16z", "M527.92 283.91L298.6 81.64a16 16 0 0 0-21.17 0L48.11 283.92a16 16 0 0 1-22.59-1.21L4.1 258.89a16 16 0 0 1 1.21-22.59l256-226a39.85 39.85 0 0 1 53.45 0l255.94 226a16 16 0 0 1 1.22 22.59l-21.4 23.82a16 16 0 0 1-22.6 1.2z"]]
};
exports.faHomeLgAlt = faHomeLgAlt;
var faHoodCloak = {
  prefix: 'fad',
  iconName: 'hood-cloak',
  icon: [576, 512, [], "f6ef", ["M576 480c-.19 16.52-13.46 32-32.33 32h-127.4V320a128 128 0 0 0-256 0v192H32.33C13.46 512 .19 496.52 0 480a31.1 31.1 0 0 1 6.36-19.16C64 383.87 64 320 64 320v-64C64 109.45 192 0 287.6 0h149.11C454.22 0 463 21.17 450.6 33.55L410.85 73.3C465.66 133 512 172 512 256v64s0 63.87 57.67 140.84A31.11 31.11 0 0 1 576 480z", "M416.27 320v192h-256V320a128 128 0 0 1 256 0z"]]
};
exports.faHoodCloak = faHoodCloak;
var faHorizontalRule = {
  prefix: 'fad',
  iconName: 'horizontal-rule',
  icon: [640, 512, [], "f86c", ["M640 240.13v31.74A16 16 0 0 1 624.13 288H15.87A16 16 0 0 1 0 271.87v-31.74A16 16 0 0 1 15.87 224h608.26A16 16 0 0 1 640 240.13z", ""]]
};
exports.faHorizontalRule = faHorizontalRule;
var faHorse = {
  prefix: 'fad',
  iconName: 'horse',
  icon: [576, 512, [], "f6f0", ["M575.94 76.6a31.75 31.75 0 0 0-8.59-21.8c-3.78-4-8.58-9.12-13.69-14.5 11.06-6.84 19.5-17.49 22.18-30.66a8.08 8.08 0 0 0-6.39-9.49 8 8 0 0 0-1.54-.15h-120a128 128 0 0 0-128 128H160a96 96 0 0 0-65.56 166.12l-25.62 68.36a64 64 0 0 0-2.16 38l24.85 99.41A16 16 0 0 0 107 512h66a16 16 0 0 0 15.52-19.88l-26.33-105.26L186 323.27l134 22.31V496a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16V318.22A111.49 111.49 0 0 0 448 240c0-.22-.07-.42-.08-.64V224l.08-32a1.15 1.15 0 0 1-.08.41v-55.52h.08l15.93 7.11 18.9 37.7a32 32 0 0 0 40.49 15.37l32.55-13A32 32 0 0 0 576 154.31zm-64 19.4a16 16 0 1 1 16-16 16 16 0 0 1-16.01 16z", "M0 248v56a16 16 0 0 0 16 16h16a16 16 0 0 0 16-16v-56a39.93 39.93 0 0 1 16.36-32.26A95.65 95.65 0 0 1 88.45 160H88a88 88 0 0 0-88 88zM511.93 64a16 16 0 1 0 16 16 16 16 0 0 0-16-16z"]]
};
exports.faHorse = faHorse;
var faHorseHead = {
  prefix: 'fad',
  iconName: 'horse-head',
  icon: [512, 512, [], "f7ab", ["M509.8 332.43l-69.9-164.3a123.55 123.55 0 0 0-93-79.2c18-10.6 46.3-35.9 34.2-82.3A9.29 9.29 0 0 0 369.54.39l-.44.14-202.2 75.7C35.9 123.33 0 238.83 0 398.73v81.2a32 32 0 0 0 32 32h236.2a32 32 0 0 0 28.6-46.3l-40.8-81.7v-.7a127.76 127.76 0 0 1-104.3-69.6 7.93 7.93 0 0 1 1.6-9.3l12.1-12.1a8 8 0 0 1 11.31.09 8.14 8.14 0 0 1 1.59 2.31A95.46 95.46 0 0 0 265.7 352c17.2 0 33-5.1 46.8-13.2l46 63.9a31.87 31.87 0 0 0 26 13.3h50.3a31.9 31.9 0 0 0 22.6-9.4l45.3-39.8a32.45 32.45 0 0 0 7.1-34.37zM328 223.93a23.94 23.94 0 1 1 .12 0z", "M178.3 294.63a8 8 0 0 0-12.9-2.4l-12.1 12.1a7.93 7.93 0 0 0-1.6 9.3 127.76 127.76 0 0 0 104.3 69.6v.77l10.66-32h-1a95.46 95.46 0 0 1-87.36-57.37zm149.82-118.58a23.94 23.94 0 1 0-.12 47.88h.12a23.94 23.94 0 0 0 0-47.88z"]]
};
exports.faHorseHead = faHorseHead;
var faHorseSaddle = {
  prefix: 'fad',
  iconName: 'horse-saddle',
  icon: [576, 512, [], "f8c3", ["M128 160v-26.12C90.8 147.11 64 182.27 64 224a96 96 0 0 0 30.43 70.11l-25.61 68.37a64 64 0 0 0-2.16 38l24.85 99.41A16 16 0 0 0 107 512h66a16 16 0 0 0 15.52-19.88l-26.33-105.26L186 323.27l22 3.66v-72.54A95.83 95.83 0 0 1 128 160zm447.94-83.4a31.75 31.75 0 0 0-8.59-21.8c-3.78-4-8.58-9.12-13.69-14.5 11.06-6.84 19.5-17.49 22.18-30.66a8.08 8.08 0 0 0-6.37-9.49 8 8 0 0 0-1.56-.15h-120A127.94 127.94 0 0 0 320 127.11V160a95.83 95.83 0 0 1-80 94.39v77.87l80 13.32V496a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16V318.22A111.49 111.49 0 0 0 448 240c0-.22-.07-.42-.08-.64V224l.08-32a1.15 1.15 0 0 1-.08.41v-55.52h.08l15.93 7.11 18.9 37.7a32 32 0 0 0 40.49 15.37l32.55-13A32 32 0 0 0 576 154.31zm-64 19.4a16 16 0 1 1 16-16 16 16 0 0 1-16 16z", "M0 248v56a16 16 0 0 0 16 16h16a16 16 0 0 0 16-16v-56a39.93 39.93 0 0 1 16.36-32.26A95.65 95.65 0 0 1 88.45 160H88a88 88 0 0 0-88 88zm160-120c-11.35 0-22 2.5-32 6.17V160a95.83 95.83 0 0 0 80 94.39v72.54l32 5.33v-77.87A95.83 95.83 0 0 0 320 160v-32.93c0 .32-.09.61-.09.93zm351.93-64a16 16 0 1 0 16 16 16 16 0 0 0-16-16z"]]
};
exports.faHorseSaddle = faHorseSaddle;
var faHospital = {
  prefix: 'fad',
  iconName: 'hospital',
  icon: [448, 512, [], "f0f8", ["M436 480h-20V120a24 24 0 0 0-24-24h-72V24a24 24 0 0 0-24-24H152a24 24 0 0 0-24 24v72H56a24 24 0 0 0-24 24v360H12a12 12 0 0 0-12 12v20h192v-96a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12v96h192v-20a12 12 0 0 0-12-12zM192 340a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-96a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm53.33-126.67V152a8 8 0 0 1-8 8h-26.66a8 8 0 0 1-8-8v-34.67H168a8 8 0 0 1-8-8V82.67a8 8 0 0 1 8-8h34.67V40a8 8 0 0 1 8-8h26.66a8 8 0 0 1 8 8v34.67H280a8 8 0 0 1 8 8v26.66a8 8 0 0 1-8 8zM320 340a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-96a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12z", "M180 288h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm0-96h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm108-82.67V82.67a8 8 0 0 0-8-8h-34.67V40a8 8 0 0 0-8-8h-26.66a8 8 0 0 0-8 8v34.67H168a8 8 0 0 0-8 8v26.66a8 8 0 0 0 8 8h34.67V152a8 8 0 0 0 8 8h26.66a8 8 0 0 0 8-8v-34.67H280a8 8 0 0 0 8-8zM308 288h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm0-96h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12z"]]
};
exports.faHospital = faHospital;
var faHospitalAlt = {
  prefix: 'fad',
  iconName: 'hospital-alt',
  icon: [576, 512, [], "f47d", ["M544 96H416V32a32 32 0 0 0-32-32H192a32 32 0 0 0-32 32v64H32a32 32 0 0 0-32 32v368a16 16 0 0 0 16 16h544a16 16 0 0 0 16-16V128a32 32 0 0 0-32-32zM160 436a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-128a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm160 128a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-128a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm32-182.67a8 8 0 0 1-8 8h-34.67V168a8 8 0 0 1-8 8h-26.66a8 8 0 0 1-8-8v-34.67H232a8 8 0 0 1-8-8V98.67a8 8 0 0 1 8-8h34.67V56a8 8 0 0 1 8-8h26.66a8 8 0 0 1 8 8v34.67H344a8 8 0 0 1 8 8zM480 436a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-128a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12z", "M344 90.67h-34.67V56a8 8 0 0 0-8-8h-26.66a8 8 0 0 0-8 8v34.67H232a8 8 0 0 0-8 8v26.66a8 8 0 0 0 8 8h34.67V168a8 8 0 0 0 8 8h26.66a8 8 0 0 0 8-8v-34.67H344a8 8 0 0 0 8-8V98.67a8 8 0 0 0-8-8zM148 384h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm0-128h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm160 128h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm0-128h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm160 128h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm0-128h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12z"]]
};
exports.faHospitalAlt = faHospitalAlt;
var faHospitalSymbol = {
  prefix: 'fad',
  iconName: 'hospital-symbol',
  icon: [512, 512, [], "f47e", ["M256 0C114.6 0 0 114.6 0 256s114.6 256 256 256 256-114.6 256-256S397.4 0 256 0zm112 376a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8v-88h-96v88a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8V136a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v88h96v-88a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8z", "M368 376a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8v-88h-96v88a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8V136a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v88h96v-88a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8z"]]
};
exports.faHospitalSymbol = faHospitalSymbol;
var faHospitalUser = {
  prefix: 'fad',
  iconName: 'hospital-user',
  icon: [640, 512, [], "f80d", ["M320 96h-32V32a32 32 0 0 0-32-32H96a32 32 0 0 0-32 32v64H32a32 32 0 0 0-32 32v368a16 16 0 0 0 16 16h288.31A78.66 78.66 0 0 1 288 464.79a143.1 143.1 0 0 1 41.91-102.34A145.13 145.13 0 0 1 352 344.62V128a32 32 0 0 0-32-32zM144 404a12 12 0 0 1-12 12H92a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-128a12 12 0 0 1-12 12H92a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm53.33-108a8 8 0 0 1-8 8h-26.66a8 8 0 0 1-8-8v-34.67H120a8 8 0 0 1-8-8V98.67a8 8 0 0 1 8-8h34.67V56a8 8 0 0 1 8-8h26.66a8 8 0 0 1 8 8v34.67H232a8 8 0 0 1 8 8v26.66a8 8 0 0 1-8 8h-34.67zM272 404a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-128a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12z", "M528.62 352H528a22.83 22.83 0 0 0-7.06 1.09 124.81 124.81 0 0 1-81.89 0A22.82 22.82 0 0 0 432 352a112 112 0 0 0-112 112v.62c.14 26.26 21.73 47.38 48 47.38h224c26.27 0 47.86-21.12 48-47.38A112 112 0 0 0 528.62 352zM480 320a96 96 0 1 0-96-96 96 96 0 0 0 96 96zM232 90.67h-34.67V56a8 8 0 0 0-8-8h-26.66a8 8 0 0 0-8 8v34.67H120a8 8 0 0 0-8 8v26.66a8 8 0 0 0 8 8h34.67V168a8 8 0 0 0 8 8h26.66a8 8 0 0 0 8-8v-34.67H232a8 8 0 0 0 8-8V98.67a8 8 0 0 0-8-8z"]]
};
exports.faHospitalUser = faHospitalUser;
var faHospitals = {
  prefix: 'fad',
  iconName: 'hospitals',
  icon: [640, 512, [], "f80e", ["M608 96V32a32 32 0 0 0-32-32H416a32 32 0 0 0-32 32v64a32 32 0 0 0-32 32v352a32 32 0 0 0 32 32h224a32 32 0 0 0 32-32V128a32 32 0 0 0-32-32zM480 404a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-128a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm2.67-116a8 8 0 0 1-8-8v-34.67H440a8 8 0 0 1-8-8V82.67a8 8 0 0 1 8-8h34.67V40a8 8 0 0 1 8-8h26.66a8 8 0 0 1 8 8v34.67H552a8 8 0 0 1 8 8v26.66a8 8 0 0 1-8 8h-34.67V152a8 8 0 0 1-8 8zM576 404a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-128a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zM200 74.67h-34.67V40a8 8 0 0 0-8-8h-26.66a8 8 0 0 0-8 8v34.67H88a8 8 0 0 0-8 8v26.66a8 8 0 0 0 8 8h34.67V152a8 8 0 0 0 8 8h26.66a8 8 0 0 0 8-8v-34.67H200a8 8 0 0 0 8-8V82.67a8 8 0 0 0-8-8z", "M256 96V32a32 32 0 0 0-32-32H64a32 32 0 0 0-32 32v64a32 32 0 0 0-32 32v352a32 32 0 0 0 32 32h224a32 32 0 0 0 32-32V128a32 32 0 0 0-32-32zM128 404a12 12 0 0 1-12 12H76a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-128a12 12 0 0 1-12 12H76a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm2.67-116a8 8 0 0 1-8-8v-34.67H88a8 8 0 0 1-8-8V82.67a8 8 0 0 1 8-8h34.67V40a8 8 0 0 1 8-8h26.66a8 8 0 0 1 8 8v34.67H200a8 8 0 0 1 8 8v26.66a8 8 0 0 1-8 8h-34.67V152a8 8 0 0 1-8 8zM224 404a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-128a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zM552 74.67h-34.67V40a8 8 0 0 0-8-8h-26.66a8 8 0 0 0-8 8v34.67H440a8 8 0 0 0-8 8v26.66a8 8 0 0 0 8 8h34.67V152a8 8 0 0 0 8 8h26.66a8 8 0 0 0 8-8v-34.67H552a8 8 0 0 0 8-8V82.67a8 8 0 0 0-8-8z"]]
};
exports.faHospitals = faHospitals;
var faHotTub = {
  prefix: 'fad',
  iconName: 'hot-tub',
  icon: [512, 512, [], "f593", ["M304 76.49c-17.37-14.17-28.82-36.75-32-62.15A16.06 16.06 0 0 0 256.23 0h-16.12c-9.51 0-17.09 8.57-16 18.35 4.34 39.11 22.4 74.53 50.13 97.16 17.36 14.17 28.82 36.75 32 62.14A16.07 16.07 0 0 0 322 192h16.12c9.51 0 17.08-8.57 16-18.35-4.38-39.11-22.44-74.53-50.12-97.16zM64 128A64 64 0 1 0 0 64a64 64 0 0 0 64 64zm398.08 45.65c-4.34-39.11-22.4-74.53-50.13-97.16-17.37-14.17-28.82-36.75-32-62.15A16.06 16.06 0 0 0 364.23 0h-16.12c-9.51 0-17.09 8.57-16 18.35 4.34 39.11 22.4 74.53 50.13 97.16 17.36 14.17 28.82 36.75 32 62.14A16.07 16.07 0 0 0 430 192h16.12c9.47 0 17.04-8.57 15.96-18.35zM106.67 160H64a64 64 0 0 0-64 64v32h256l-110.93-83.2a64 64 0 0 0-38.4-12.8z", "M480 256H0v192a64 64 0 0 0 64 64h384a64 64 0 0 0 64-64V288a32 32 0 0 0-32-32zM128 440a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8V328a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8zm96 0a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8V328a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8zm96 0a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8V328a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8zm96 0a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8V328a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8z"]]
};
exports.faHotTub = faHotTub;
var faHotdog = {
  prefix: 'fad',
  iconName: 'hotdog',
  icon: [512, 512, [], "f80f", ["M488.62 23.38a79.86 79.86 0 0 0-112.91 0L24.38 374.72a79.85 79.85 0 1 0 110.94 114.87c.67-.65 1.32-1.3 2-2l351.3-351.3a79.86 79.86 0 0 0 0-112.91zm-50 95.25c-19.6 19.59-37.52 22.67-51.93 25.14C373.74 146 364.38 147.6 352 160s-14 21.76-16.23 34.71c-2.48 14.4-5.55 32.33-25.15 51.92s-37.52 22.67-51.92 25.15c-13 2.22-22.3 3.82-34.7 16.22s-14 21.75-16.23 34.7c-2.47 14.4-5.54 32.33-25.14 51.92s-37.53 22.68-51.93 25.15C117.74 402 108.38 403.6 96 416a16 16 0 1 1-22.63-22.63c19.6-19.59 37.52-22.67 51.92-25.14 13-2.22 22.3-3.82 34.71-16.23s14-21.75 16.22-34.7c2.48-14.4 5.55-32.33 25.15-51.92s37.52-22.67 51.92-25.14c13-2.22 22.3-3.83 34.7-16.23s14-21.76 16.24-34.71c2.47-14.4 5.54-32.33 25.14-51.92s37.52-22.68 51.92-25.15c13-2.23 22.3-3.82 34.71-16.23a16 16 0 0 1 22.63 22.63z", "M310.64 19.89c-25-25-63.85-26.66-86.79-3.72L16.17 223.85c-22.94 22.94-21.27 61.79 3.72 86.78l11.55 11.55L322.18 31.44zm181.47 181.47l-11.55-11.54-290.74 290.74 11.54 11.55c25 25 63.85 26.66 86.79 3.72l207.68-207.68c22.94-22.94 21.27-61.79-3.72-86.79zM224 288c12.4-12.4 21.75-14 34.7-16.22 14.4-2.48 32.32-5.56 51.92-25.15s22.67-37.52 25.15-51.92c2.23-13 3.83-22.31 16.23-34.71s21.76-14 34.7-16.23c14.41-2.47 32.33-5.55 51.93-25.14A16 16 0 0 0 416 96c-12.41 12.41-21.76 14-34.71 16.23-14.4 2.47-32.32 5.56-51.92 25.15s-22.67 37.52-25.14 51.92C302 202.25 300.37 211.61 288 224s-21.7 14-34.7 16.23c-14.4 2.47-32.32 5.55-51.92 25.14s-22.7 37.53-25.18 51.93c-2.2 12.95-3.81 22.29-16.2 34.7s-21.71 14-34.71 16.23c-14.4 2.47-32.32 5.55-51.92 25.14A16 16 0 1 0 96 416c12.4-12.4 21.76-14 34.7-16.23 14.4-2.47 32.33-5.56 51.93-25.15s22.67-37.52 25.14-51.92c2.23-12.95 3.81-22.3 16.23-34.7z"]]
};
exports.faHotdog = faHotdog;
var faHotel = {
  prefix: 'fad',
  iconName: 'hotel',
  icon: [576, 512, [], "f594", ["M288 288a128 128 0 0 0-128 128h256a128 128 0 0 0-128-128zm-96-44.8v-38.4c0-6.4-6.4-12.8-12.8-12.8h-38.4c-6.4 0-12.8 6.4-12.8 12.8v38.4c0 6.4 6.4 12.8 12.8 12.8h38.4c6.4 0 12.8-6.4 12.8-12.8zM140.8 160h38.4c6.4 0 12.8-6.4 12.8-12.8v-38.4c0-6.4-6.4-12.8-12.8-12.8h-38.4c-6.4 0-12.8 6.4-12.8 12.8v38.4c0 6.4 6.4 12.8 12.8 12.8zm128 96h38.4c6.4 0 12.8-6.4 12.8-12.8v-38.4c0-6.4-6.4-12.8-12.8-12.8h-38.4c-6.4 0-12.8 6.4-12.8 12.8v38.4c0 6.4 6.4 12.8 12.8 12.8zm0-96h38.4c6.4 0 12.8-6.4 12.8-12.8v-38.4c0-6.4-6.4-12.8-12.8-12.8h-38.4c-6.4 0-12.8 6.4-12.8 12.8v38.4c0 6.4 6.4 12.8 12.8 12.8zm166.4 32h-38.4c-6.4 0-12.8 6.4-12.8 12.8v38.4c0 6.4 6.4 12.8 12.8 12.8h38.4c6.4 0 12.8-6.4 12.8-12.8v-38.4c0-6.4-6.4-12.8-12.8-12.8zm0-96h-38.4c-6.4 0-12.8 6.4-12.8 12.8v38.4c0 6.4 6.4 12.8 12.8 12.8h38.4c6.4 0 12.8-6.4 12.8-12.8v-38.4c0-6.4-6.4-12.8-12.8-12.8z", "M560 64a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16H16A16 16 0 0 0 0 16v32a16 16 0 0 0 16 16h16v384H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h240v-96h-96a128 128 0 0 1 256 0h-96v96h240a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-16V64zM192 243.2c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8zm0-96c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8zm128 96c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8zm0-96c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8zm128 96c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8zm0-96c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8z"]]
};
exports.faHotel = faHotel;
var faHourglass = {
  prefix: 'fad',
  iconName: 'hourglass',
  icon: [384, 512, [], "f254", ["M192 304c-57.8 0-104 66.54-104 144h208c0-77.48-46.21-144-104-144zm0-96c57.8 0 104-66.54 104-144H88c0 77.48 46.21 144 104 144z", "M360 64a24 24 0 0 0 24-24V24a24 24 0 0 0-24-24H24A24 24 0 0 0 0 24v16a24 24 0 0 0 24 24c0 91 51 167.73 120.84 192C75 280.27 24 357 24 448a24 24 0 0 0-24 24v16a24 24 0 0 0 24 24h336a24 24 0 0 0 24-24v-16a24 24 0 0 0-24-24c0-91-51-167.73-120.84-192C309 231.73 360 155 360 64zm-64 384H88c0-77.46 46.2-144 104-144s104 66.52 104 144zM192 208c-57.79 0-104-66.52-104-144h208c0 77.46-46.2 144-104 144z"]]
};
exports.faHourglass = faHourglass;
var faHourglassEnd = {
  prefix: 'fad',
  iconName: 'hourglass-end',
  icon: [384, 512, [], "f253", ["M296 448H88c0-77.46 46.2-144 104-144s104 66.52 104 144z", "M24 448a24 24 0 0 0-24 24v16a24 24 0 0 0 24 24h336a24 24 0 0 0 24-24v-16a24 24 0 0 0-24-24c0-91-51-167.73-120.84-192C309 231.73 360 155 360 64a24 24 0 0 0 24-24V24a24 24 0 0 0-24-24H24A24 24 0 0 0 0 24v16a24 24 0 0 0 24 24c0 91 51 167.73 120.84 192C75 280.27 24 357 24 448zM88 64h208c0 77.46-46.2 144-104 144S88 141.48 88 64zm104 240c57.79 0 104 66.52 104 144H88c0-77.46 46.2-144 104-144z"]]
};
exports.faHourglassEnd = faHourglassEnd;
var faHourglassHalf = {
  prefix: 'fad',
  iconName: 'hourglass-half',
  icon: [384, 512, [], "f252", ["M284.92 384H99.06A187.69 187.69 0 0 0 88 448h208a187.6 187.6 0 0 0-11.08-64zM192 208c40.83 0 75.86-33.2 92.92-80H99.08c17.06 46.8 52.1 80 92.92 80z", "M360 64a24 24 0 0 0 24-24V24a24 24 0 0 0-24-24H24A24 24 0 0 0 0 24v16a24 24 0 0 0 24 24c0 91 51 167.73 120.84 192C75 280.27 24 357 24 448a24 24 0 0 0-24 24v16a24 24 0 0 0 24 24h336a24 24 0 0 0 24-24v-16a24 24 0 0 0-24-24c0-91-51-167.73-120.84-192C309 231.73 360 155 360 64zm-64 384H88c0-77.46 46.2-144 104-144s104 66.52 104 144zM192 208c-57.79 0-104-66.52-104-144h208c0 77.46-46.2 144-104 144z"]]
};
exports.faHourglassHalf = faHourglassHalf;
var faHourglassStart = {
  prefix: 'fad',
  iconName: 'hourglass-start',
  icon: [384, 512, [], "f251", ["M296 64c0 77.46-46.2 144-104 144S88 141.48 88 64z", "M360 64a24 24 0 0 0 24-24V24a24 24 0 0 0-24-24H24A24 24 0 0 0 0 24v16a24 24 0 0 0 24 24c0 91 51 167.73 120.84 192C75 280.27 24 357 24 448a24 24 0 0 0-24 24v16a24 24 0 0 0 24 24h336a24 24 0 0 0 24-24v-16a24 24 0 0 0-24-24c0-91-51-167.73-120.84-192C309 231.73 360 155 360 64zm-64 384H88c0-77.46 46.2-144 104-144s104 66.52 104 144zM192 208c-57.79 0-104-66.52-104-144h208c0 77.46-46.2 144-104 144z"]]
};
exports.faHourglassStart = faHourglassStart;
var faHouseDamage = {
  prefix: 'fad',
  iconName: 'house-damage',
  icon: [576, 512, [], "f6f1", ["M512 311.08V496a16 16 0 0 1-16 16H319.82l-39.92-55.26 104.11-64L236 256l60.11 119.2L192 439.18 229.24 512H80a16 16 0 0 1-16-16V311c1.78-1.21 3.85-1.89 5.47-3.35L288 115l218.74 192.9c1.55 1.36 3.57 2.02 5.26 3.18z", "M236 256l60.11 119.2L192 439.18 229.24 512h90.58l-39.92-55.26 104.11-64zm334.7-19.74L512 184.43V48a16 16 0 0 0-16-16h-64a16 16 0 0 0-16 16v51.67L314.76 10.29a39.85 39.85 0 0 0-53.45 0l-256 226a16 16 0 0 0-1.21 22.59l21.41 23.79a16 16 0 0 0 22.59 1.21L277.43 81.61a16 16 0 0 1 21.17 0l229.32 202.27a16 16 0 0 0 22.6-1.2l21.4-23.82a16 16 0 0 0-1.22-22.6z"]]
};
exports.faHouseDamage = faHouseDamage;
var faHouseFlood = {
  prefix: 'fad',
  iconName: 'house-flood',
  icon: [576, 512, [], "f74f", ["M287.94 114.85L96.29 285v99.4c.5 0 .89-.1 1.39-.1A64 64 0 0 1 139 399c12.77 10.6 32.23 16.7 53.38 16.7 20.36 0 39-5.6 51.39-15.4a73.57 73.57 0 0 1 45.4-16.1 64.13 64.13 0 0 1 41.5 14.8c12.78 10.6 32.23 16.7 53.39 16.7 20.15 0 39.41-5.8 51.58-15.6a70 70 0 0 1 43.8-15.4h.1v-99.8zm47.91 125.25v64a16 16 0 0 1-16 16H256a16 16 0 0 1-16-16v-64a16 16 0 0 1 16-16h63.91a16 16 0 0 1 15.91 16z", "M562.2 447.88c-21.51-2.4-42.11-10.51-57.91-22.92a38.76 38.76 0 0 0-48.21 0c-37.91 30.43-107.22 30.43-145.73-1.5-13.5-11.2-33-9.11-46.7 1.8-38 30.13-106.92 30-145.23-1.7-13.5-11.21-33.31-8.91-47.11 2-15.5 12.21-36 20.12-57.71 22.42-7.9.8-13.6 7.81-13.6 15.72v32.22c0 9.1 7.6 16.8 16.7 16 28.81-2.5 56.11-11.41 79.42-25.92 56.48 34.63 137 34.13 192 0 56.48 34.63 137 34.13 192 0a184.87 184.87 0 0 0 79.12 25.83c9.1.81 16.7-6.89 16.7-16V464.2c.06-8.01-5.7-15.42-13.74-16.32zM22 244.05l21.15 24a16 16 0 0 0 22.5 1.45l.05-.05 222.24-197.3 222.31 197.3a16 16 0 0 0 22.55-1.4l21.15-24a16.11 16.11 0 0 0-1.38-22.6v.05l-73-64.8V48.05a16 16 0 0 0-16-16h-31.93a16 16 0 0 0-16 16v52l-101.24-90a39.67 39.67 0 0 0-52.78 0L23.35 221.45A16 16 0 0 0 21.94 244z"]]
};
exports.faHouseFlood = faHouseFlood;
var faHryvnia = {
  prefix: 'fad',
  iconName: 'hryvnia',
  icon: [384, 512, [], "f6f2", ["M0 224v-32a16 16 0 0 1 16-16h205.38L156 240H16a16 16 0 0 1-16-16zm77.91 92.38L123.27 272H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h46.56a94.82 94.82 0 0 1 15.35-19.62zM368 272H228l-65.4 64H368a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-96h-46.56a94.78 94.78 0 0 1-15.34 19.61L260.74 240H368a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z", "M323.32 84.26c20.07 36.58 12.6 82.17-17.22 111.35L134.81 363.22A21.21 21.21 0 0 0 149.2 400h83.63a24 24 0 0 0 15.36-5.56l11.75-9.8a24 24 0 0 1 33.81 3.07l20.49 24.59a24 24 0 0 1-3.07 33.8l-11.77 9.81A104 104 0 0 1 232.86 480H154c-37.14 0-73.38-17.85-92-49.95-.45-.77-.88-1.54-1.31-2.31-20.07-36.58-12.6-82.18 17.23-111.35l171.28-167.6A21.21 21.21 0 0 0 234.8 112h-83.62a24 24 0 0 0-15.39 5.57l-11.73 9.78a24 24 0 0 1-33.81-3.07L69.76 99.7a24 24 0 0 1 3.07-33.8l11.77-9.81A104 104 0 0 1 151.14 32H230c37.14 0 73.38 17.84 92 50 .46.72.89 1.49 1.32 2.26z"]]
};
exports.faHryvnia = faHryvnia;
var faHumidity = {
  prefix: 'fad',
  iconName: 'humidity',
  icon: [384, 512, [], "f750", ["M223.9 22.09c-8.7-28.8-53.9-30.1-63.8 0C109.1 179.79 0 222.69 0 333.9 0 432.3 85.9 512 192 512s192-79.7 192-178.1c0-111.71-108.9-153.31-160.1-311.81zM96 288a32 32 0 1 1 32 32 32 32 0 0 1-32-32zm49.5 131.8a7.87 7.87 0 0 1-11.2 1.2l-12.5-10a8 8 0 0 1-1.2-11.2l118-147.51a8 8 0 0 1 11.2-1.2l12.5 10a7.87 7.87 0 0 1 1.2 11.2zM256 416a32 32 0 1 1 32-32 32 32 0 0 1-32 32z", "M128 256a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm128 96a32 32 0 1 0 32 32 32 32 0 0 0-32-32z"]]
};
exports.faHumidity = faHumidity;
var faHurricane = {
  prefix: 'fad',
  iconName: 'hurricane',
  icon: [384, 512, [], "f751", ["M176 96l24.5-74.79A16.22 16.22 0 0 0 183.1.12C80 12.42 0 101.61 0 208c0 114.9 93.1 208 208 208l-24.5 74.79a16.24 16.24 0 0 0 17.4 21.1C304 499.58 384 410.39 384 304c0-114.9-93.1-208-208-208zm16 256a96 96 0 1 1 96-96 96 96 0 0 1-96 96z", "M236 256a44 44 0 1 1-44-44 44 44 0 0 1 44 44z"]]
};
exports.faHurricane = faHurricane;
var faICursor = {
  prefix: 'fad',
  iconName: 'i-cursor',
  icon: [256, 512, [], "f246", ["M32 236v40a12 12 0 0 0 12 12h52v-64H43.91A12 12 0 0 0 32 236zm180.09-12H160v64h52a12 12 0 0 0 12-12v-40a12 12 0 0 0-11.91-12z", "M160 400c0 44.94 57.89 48.55 83.85 48.24A12 12 0 0 1 256 460.08v39.8a12 12 0 0 1-11.91 12c-35.09.23-78.36-.62-116.09-37.88-38.47 38-83.62 38.34-116.16 37.93a12 12 0 0 1-11.84-12V460a12 12 0 0 1 12-12h.05c27.87 0 84-3.07 84-48V112.18c0-44.94-57.89-48.73-83.85-48.42A12 12 0 0 1 0 51.91v-39.8a12 12 0 0 1 11.91-12C47-.11 90.27.74 128 38 166.47 0 211.62-.34 244.16.07a12 12 0 0 1 11.84 12v40A12 12 0 0 1 244 64c-27.92 0-84 3.25-84 48.18z"]]
};
exports.faICursor = faICursor;
var faIceCream = {
  prefix: 'fad',
  iconName: 'ice-cream',
  icon: [448, 512, [], "f810", ["M367.94,256.19H80.06a48,48,0,0,1-4.16-95.92c1.39-.06,2.77-.06,4.16,0H81a143.94,143.94,0,1,1,286,0h.94a48,48,0,0,1,4.16,95.92c-1.39.06-2.77.06-4.16,0Z", "M195.39,493.69,96.05,288.17H352L252.61,493.69a31.52,31.52,0,0,1-57.22,0Z"]]
};
exports.faIceCream = faIceCream;
var faIceSkate = {
  prefix: 'fad',
  iconName: 'ice-skate',
  icon: [576, 512, [], "f7ac", ["M568 416h-32a8 8 0 0 0-8 8v16a23.94 23.94 0 0 1-24 24h-72v-48h-48v48H144v-48H96v48H8a8 8 0 0 0-8 8v32a8 8 0 0 0 8 8h504a64.06 64.06 0 0 0 64-64v-24a8 8 0 0 0-8-8zM264 192h56v-32h-56a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm0-64h56V96h-56a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8z", "M78.4 82.7L256 32V16a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16v80h-56a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h56v32h-56a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h56l119.3 29.9A96 96 0 0 1 512 315v37a32 32 0 0 1-32 32H64a32 32 0 0 1-32-32V144.2a64 64 0 0 1 46.4-61.5z"]]
};
exports.faIceSkate = faIceSkate;
var faIcicles = {
  prefix: 'fad',
  iconName: 'icicles',
  icon: [512, 512, [], "f7ad", ["M511.36 37.9l-87.5 467.7c-1.7 8.6-14 8.6-15.7 0l-66.7-363.8-45.8 172.5a8 8 0 0 1-15.3 0l-34.1-133.4-46.5 196.9c-1.9 8.3-13.7 8.3-15.6 0L140 190.5l-36.4 124.1c-2.4 7.2-12.6 7.2-15.1 0L1.36 41.2A32 32 0 0 1 32 0h448a32 32 0 0 1 31.95 32.05 32.83 32.83 0 0 1-.55 5.85z", "M480 0H353.41a32 32 0 0 0-31.47 37.8l86.22 467.8c1.7 8.6 14 8.6 15.7 0l87.5-467.7a32.83 32.83 0 0 0 .55-5.85A32 32 0 0 0 480 0z"]]
};
exports.faIcicles = faIcicles;
var faIcons = {
  prefix: 'fad',
  iconName: 'icons',
  icon: [512, 512, [], "f86d", ["M137.86 22.44L128 32.58l-9.85-10.14C93.05-3.5 52.25-7.7 24.86 15.64c-31.41 26.78-33 74.85-5 103.88l96.75 99.83a15.68 15.68 0 0 0 22.65 0l96.75-99.83c28.14-29 26.5-77.1-4.91-103.88C203.75-7.7 163-3.5 137.86 22.44zM499.4 352.1h-60.58l22.36-50.75c2.1-6.65-3.94-13.21-12.18-13.21h-75.6c-6.3 0-11.65 3.9-12.49 9.1l-16.8 106.93c-1 6.3 4.88 11.89 12.49 11.89h62.32l-24.2 83c-1.89 6.65 4.2 12.9 12.23 12.9a13.26 13.26 0 0 0 10.92-5.25l92.4-138.91c4.88-6.91-1.16-15.7-10.87-15.7z", "M260.57 319.84h-48l-7.08-14.24a27.39 27.39 0 0 0-25.66-17.78h-71.71a27.39 27.39 0 0 0-25.66 17.78l-7 14.24h-48A27.45 27.45 0 0 0 0 347.3v137.25A27.45 27.45 0 0 0 27.43 512h233.14A27.45 27.45 0 0 0 288 484.55V347.3a27.45 27.45 0 0 0-27.43-27.46zM144 468a52 52 0 1 1 52-52 52 52 0 0 1-52 52zM478.08.33L329.51 23.17C314.87 25.42 304 38.92 304 54.83V161.6a83.25 83.25 0 0 0-16-1.7c-35.35 0-64 21.48-64 48s28.65 48 64 48c35.2 0 63.73-21.32 64-47.66V99.66l112-17.22v47.18a83.25 83.25 0 0 0-16-1.7c-35.35 0-64 21.48-64 48s28.65 48 64 48c35.2 0 63.73-21.32 64-47.66V32c0-19.48-16-34.42-33.92-31.67z"]]
};
exports.faIcons = faIcons;
var faIconsAlt = {
  prefix: 'fad',
  iconName: 'icons-alt',
  icon: [512, 512, [], "f86e", ["M208 96H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h64v48a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-48h64a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-96H16A16 16 0 0 0 0 16v32a16 16 0 0 0 16 16h192a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16zm120 368a40 40 0 1 0-40-40 40 40 0 0 0 40 40zm179.31-52.69l-22.62-22.62a16 16 0 0 0-22.63 0L292.69 462.06a16 16 0 0 0 0 22.63l22.62 22.62a16 16 0 0 0 22.63 0l169.37-169.37a16 16 0 0 0 0-22.63zM472 432a40 40 0 1 0 40 40 40 40 0 0 0-40-40z", "M478.08.33L329.51 23.18C314.87 25.44 304 38.94 304 54.86V161.7a83.25 83.25 0 0 0-16-1.7c-35.35 0-64 21.49-64 48s28.65 48 64 48c35.2 0 63.73-21.33 64-47.69V99.73L464 82.5v47.2a83.25 83.25 0 0 0-16-1.7c-35.35 0-64 21.49-64 48s28.65 48 64 48c35.2 0 63.73-21.33 64-47.69V32c0-19.47-16-34.43-33.92-31.67zM219.59 383.94L197 361.31a16 16 0 0 0-22.63 0l-27.92 27.89-22.7-22.7a64 64 0 1 0-90.7-3.3l-6.92 6.92c-29.59 29.59-35.69 77.63-9.81 110.52A81.31 81.31 0 0 0 138 488.19l8.48-8.49 27.61 27.61a16 16 0 0 0 22.63 0l22.62-22.62a16 16 0 0 0 0-22.63l-27.64-27.61 27.89-27.89a16 16 0 0 0 0-22.62zM80 304a16 16 0 1 1-16 16 16 16 0 0 1 16-16zm12.72 138.94a17.29 17.29 0 1 1-24.45-24.46l8.48-8.48 24.45 24.45z"]]
};
exports.faIconsAlt = faIconsAlt;
var faIdBadge = {
  prefix: 'fad',
  iconName: 'id-badge',
  icon: [384, 512, [], "f2c1", ["M336 0H48A48 48 0 0 0 0 48v416a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V48a48 48 0 0 0-48-48zM144 32h96a16 16 0 0 1 0 32h-96a16 16 0 0 1 0-32zm48 128a64 64 0 1 1-64 64 64.06 64.06 0 0 1 64-64zm112 236.8c0 10.6-10 19.2-22.4 19.2H102.4C90 416 80 407.4 80 396.8v-19.2c0-31.8 30.1-57.6 67.2-57.6h5a103 103 0 0 0 79.6 0h5c37.1 0 67.2 25.8 67.2 57.6z", "M192 288a64 64 0 1 0-64-64 64.06 64.06 0 0 0 64 64zm44.8 32h-5a103 103 0 0 1-79.6 0h-5c-37.1 0-67.2 25.8-67.2 57.6v19.2c0 10.6 10 19.2 22.4 19.2h179.2c12.4 0 22.4-8.6 22.4-19.2v-19.2c0-31.8-30.1-57.6-67.2-57.6z"]]
};
exports.faIdBadge = faIdBadge;
var faIdCard = {
  prefix: 'fad',
  iconName: 'id-card',
  icon: [576, 512, [], "f2c2", ["M0 128v304a48 48 0 0 0 48 48h480a48 48 0 0 0 48-48V128zm176 64a64 64 0 1 1-64 64 64 64 0 0 1 64-64zm93.3 224H82.7c-10.4 0-18.8-10-15.6-19.8A64.09 64.09 0 0 1 128 352h8.2a103 103 0 0 0 79.6 0h8.2a64.09 64.09 0 0 1 60.9 44.2c3.2 9.9-5.2 19.8-15.6 19.8zM512 344a8 8 0 0 1-8 8H360a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h144a8 8 0 0 1 8 8zm0-64a8 8 0 0 1-8 8H360a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h144a8 8 0 0 1 8 8zm0-64a8 8 0 0 1-8 8H360a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h144a8 8 0 0 1 8 8z", "M224 352h-8.2a103 103 0 0 1-79.6 0H128a64.09 64.09 0 0 0-60.9 44.2C63.9 406 72.3 416 82.7 416h186.6c10.4 0 18.8-9.9 15.6-19.8A64.09 64.09 0 0 0 224 352zM528 32H48A48 48 0 0 0 0 80v48h576V80a48 48 0 0 0-48-48zM176 320a64 64 0 1 0-64-64 64 64 0 0 0 64 64z"]]
};
exports.faIdCard = faIdCard;
var faIdCardAlt = {
  prefix: 'fad',
  iconName: 'id-card-alt',
  icon: [576, 512, [], "f47f", ["M528 64H352v64h16a16 16 0 0 1 0 32H208a16 16 0 0 1 0-32h16V64H48a48 48 0 0 0-48 48v352a48 48 0 0 0 48 48h480a48 48 0 0 0 48-48V112a48 48 0 0 0-48-48zM288 224a64 64 0 1 1-64 64 64 64 0 0 1 64-64zm93.3 224H194.7c-10.4 0-18.8-10-15.6-19.8A64 64 0 0 1 240 384h8.2a103 103 0 0 0 79.6 0h8.2a64.09 64.09 0 0 1 60.9 44.2c3.2 9.8-5.2 19.8-15.6 19.8z", "M352 32a32 32 0 0 0-32-32h-64a32 32 0 0 0-32 32v96h128zm-64 320a64 64 0 1 0-64-64 64 64 0 0 0 64 64zm108.9 76.2A64.09 64.09 0 0 0 336 384h-8.2a103 103 0 0 1-79.6 0H240a64 64 0 0 0-60.9 44.2c-3.2 9.8 5.2 19.8 15.6 19.8h186.6c10.4 0 18.8-10 15.6-19.8z"]]
};
exports.faIdCardAlt = faIdCardAlt;
var faIgloo = {
  prefix: 'fad',
  iconName: 'igloo',
  icon: [576, 512, [], "f7ae", ["M384 384v96H192v-96a96 96 0 0 1 192 0z", "M320 33.9a282 282 0 0 0-32-1.9A287.48 287.48 0 0 0 48.6 160H320zM96 192H30.3A286.63 286.63 0 0 0 0 320h96zM352 39.4V160h175.4A287.83 287.83 0 0 0 352 39.4zM480 320h96a286.63 286.63 0 0 0-30.3-128H480zm-64 64v96h128a32 32 0 0 0 32-32v-96H411.5c2.6 10.3 4.5 20.9 4.5 32zm32-192H128v128h49.8c22.2-38.1 63-64 110.2-64s88 25.9 110.2 64H448zM0 448a32 32 0 0 0 32 32h128v-96c0-11.1 1.9-21.7 4.5-32H0z"]]
};
exports.faIgloo = faIgloo;
var faImage = {
  prefix: 'fad',
  iconName: 'image',
  icon: [512, 512, [], "f03e", ["M448 384H64v-48l71.51-71.52a12 12 0 0 1 17 0L208 320l135.51-135.52a12 12 0 0 1 17 0L448 272z", "M464 64H48a48 48 0 0 0-48 48v288a48 48 0 0 0 48 48h416a48 48 0 0 0 48-48V112a48 48 0 0 0-48-48zm-352 56a56 56 0 1 1-56 56 56 56 0 0 1 56-56zm336 264H64v-48l71.51-71.52a12 12 0 0 1 17 0L208 320l135.51-135.52a12 12 0 0 1 17 0L448 272z"]]
};
exports.faImage = faImage;
var faImagePolaroid = {
  prefix: 'fad',
  iconName: 'image-polaroid',
  icon: [448, 512, [], "f8c4", ["M416 32H32A32 32 0 0 0 0 64v384a32 32 0 0 0 32 32h384a32 32 0 0 0 32-32V64a32 32 0 0 0-32-32zm-32 320H64V96h320z", "M64 96v256h320V96zm64 32a32 32 0 1 1-32 32 32 32 0 0 1 32-32zM96 320l50.69-76a16 16 0 0 1 26.62 0l20.57 30.85 49.32-65.75a16 16 0 0 1 25.6 0L352 320z"]]
};
exports.faImagePolaroid = faImagePolaroid;
var faImages = {
  prefix: 'fad',
  iconName: 'images',
  icon: [576, 512, [], "f302", ["M424.49 120.48a12 12 0 0 0-17 0L272 256l-39.51-39.52a12 12 0 0 0-17 0L160 272v48h352V208zM64 336V128H48a48 48 0 0 0-48 48v256a48 48 0 0 0 48 48h384a48 48 0 0 0 48-48v-16H144a80.09 80.09 0 0 1-80-80z", "M528 32H144a48 48 0 0 0-48 48v256a48 48 0 0 0 48 48h384a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zM208 80a48 48 0 1 1-48 48 48 48 0 0 1 48-48zm304 240H160v-48l55.52-55.52a12 12 0 0 1 17 0L272 256l135.52-135.52a12 12 0 0 1 17 0L512 208z"]]
};
exports.faImages = faImages;
var faInbox = {
  prefix: 'fad',
  iconName: 'inbox',
  icon: [576, 512, [], "f01c", ["M376 256l-32 64H232l-32-64H76.92l85.33-128h251.5l85.33 128z", "M567.94 243.91L462.25 85.37A48 48 0 0 0 422.31 64H153.69a48 48 0 0 0-39.94 21.37L8.06 243.91A48 48 0 0 0 0 270.53V400a48 48 0 0 0 48 48h480a48 48 0 0 0 48-48V270.53a48 48 0 0 0-8.06-26.62zM376 256l-32 64H232l-32-64H76.92l85.33-128h251.5l85.33 128z"]]
};
exports.faInbox = faInbox;
var faInboxIn = {
  prefix: 'fad',
  iconName: 'inbox-in',
  icon: [576, 512, [], "f310", ["M528 512H48a48 48 0 0 1-48-48v-95.2a47.29 47.29 0 0 1 10.7-30l94.4-118a12 12 0 0 1 18.1-.7l27.6 29.5a12 12 0 0 1 .6 15.7L107.6 320H200l32 64h112l32-64h92.3L424 264.6a12.16 12.16 0 0 1 .8-15.9l28.1-28.9a12.12 12.12 0 0 1 18 .9l94.6 118.2a47.77 47.77 0 0 1 10.5 29.9V464a48 48 0 0 1-48 48z", "M171.5 160h61.9V17.1A17.16 17.16 0 0 1 250.5 0h68.6a17.09 17.09 0 0 1 17.1 17.1V160h68.3c17.8 0 26.7 21.5 14.1 34.1l-119.4 120a20 20 0 0 1-28.6-.3L157 193.8c-12.1-12.7-3.1-33.8 14.5-33.8z"]]
};
exports.faInboxIn = faInboxIn;
var faInboxOut = {
  prefix: 'fad',
  iconName: 'inbox-out',
  icon: [576, 512, [], "f311", ["M565.6 338.89a48.27 48.27 0 0 1 10.4 29.9V464a48 48 0 0 1-48 48H48a48 48 0 0 1-48-48v-95.2a48.05 48.05 0 0 1 10.5-30l94.4-118a12 12 0 0 1 18.1-.7l27.6 29.5a12 12 0 0 1 .6 15.7L107.6 320H200l32 64h112l32-64h92.4l-44.3-55.4a11.94 11.94 0 0 1 .8-15.9l28.1-28.9a12 12 0 0 1 18 .9z", "M239.7 302.89V160h-68.3c-17.8 0-26.7-21.5-14.1-34.1l119.4-120a20 20 0 0 1 28.6.3l113.7 120c12.1 12.7 3.1 33.8-14.5 33.8h-61.9v142.9a17.18 17.18 0 0 1-17.2 17.1h-68.6a17.09 17.09 0 0 1-17.1-17.11z"]]
};
exports.faInboxOut = faInboxOut;
var faIndent = {
  prefix: 'fad',
  iconName: 'indent',
  icon: [448, 512, [], "f03c", ["M432 416H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm3.17-128H204.83A12.82 12.82 0 0 0 192 300.83v38.34A12.82 12.82 0 0 0 204.83 352h230.34A12.82 12.82 0 0 0 448 339.17v-38.34A12.82 12.82 0 0 0 435.17 288zm0-128H204.83A12.82 12.82 0 0 0 192 172.83v38.34A12.82 12.82 0 0 0 204.83 224h230.34A12.82 12.82 0 0 0 448 211.17v-38.34A12.82 12.82 0 0 0 435.17 160zM432 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z", "M27.31 363.3l96-96a16 16 0 0 0 0-22.62l-96-96C17.27 138.66 0 145.78 0 160v192c0 14.31 17.33 21.3 27.31 11.3z"]]
};
exports.faIndent = faIndent;
var faIndustry = {
  prefix: 'fad',
  iconName: 'industry',
  icon: [512, 512, [], "f275", ["M512 184v272a24 24 0 0 1-24 24H136a24 24 0 0 0 24-24V252.31l139.12-88.53A24 24 0 0 1 336 184v68.28l139.12-88.53A24 24 0 0 1 512 184z", "M136 480H24a24 24 0 0 1-24-24V56a24 24 0 0 1 24-24h112a24 24 0 0 1 24 24v400a24 24 0 0 1-24 24z"]]
};
exports.faIndustry = faIndustry;
var faIndustryAlt = {
  prefix: 'fad',
  iconName: 'industry-alt',
  icon: [512, 512, [], "f3b3", ["M148 320h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm128 0h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm128 0h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12z", "M475.12 163.78L336 252.31V184a24 24 0 0 0-36.88-20.25L160 252.31V56a24 24 0 0 0-24-24H24A24 24 0 0 0 0 56v400a24 24 0 0 0 24 24h464a24 24 0 0 0 24-24V184a24 24 0 0 0-36.88-20.22zM160 372a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm128 0a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm128 0a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12z"]]
};
exports.faIndustryAlt = faIndustryAlt;
var faInfinity = {
  prefix: 'fad',
  iconName: 'infinity',
  icon: [640, 512, [], "f534", ["M471.1 96C405 96 353.3 137.3 320 174.6 286.7 137.3 235 96 168.9 96 75.8 96 0 167.8 0 256s75.8 160 168.9 160c66.1 0 117.8-41.3 151.1-78.6 33.3 37.3 85 78.6 151.1 78.6 93.1 0 168.9-71.8 168.9-160S564.2 96 471.1 96zM168.9 320c-40.2 0-72.9-28.7-72.9-64s32.7-64 72.9-64c38.2 0 73.4 36.1 94 64-20.4 27.6-55.9 64-94 64zm302.2 0c-38.2 0-73.4-36.1-94-64 20.4-27.6 55.9-64 94-64 40.2 0 72.9 28.7 72.9 64s-32.7 64-72.9 64z", ""]]
};
exports.faInfinity = faInfinity;
var faInfo = {
  prefix: 'fad',
  iconName: 'info',
  icon: [192, 512, [], "f129", ["M20 448h152a20 20 0 0 1 20 20v24a20 20 0 0 1-20 20H20a20 20 0 0 1-20-20v-24a20 20 0 0 1 20-20z", "M96 128a64 64 0 1 0-64-64 64 64 0 0 0 64 64zm28 64H20a20 20 0 0 0-20 20v24a20 20 0 0 0 20 20h28v192h96V212a20 20 0 0 0-20-20z"]]
};
exports.faInfo = faInfo;
var faInfoCircle = {
  prefix: 'fad',
  iconName: 'info-circle',
  icon: [512, 512, [], "f05a", ["M256 8C119 8 8 119.08 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 110a42 42 0 1 1-42 42 42 42 0 0 1 42-42zm56 254a12 12 0 0 1-12 12h-88a12 12 0 0 1-12-12v-24a12 12 0 0 1 12-12h12v-64h-12a12 12 0 0 1-12-12v-24a12 12 0 0 1 12-12h64a12 12 0 0 1 12 12v100h12a12 12 0 0 1 12 12z", "M256 202a42 42 0 1 0-42-42 42 42 0 0 0 42 42zm44 134h-12V236a12 12 0 0 0-12-12h-64a12 12 0 0 0-12 12v24a12 12 0 0 0 12 12h12v64h-12a12 12 0 0 0-12 12v24a12 12 0 0 0 12 12h88a12 12 0 0 0 12-12v-24a12 12 0 0 0-12-12z"]]
};
exports.faInfoCircle = faInfoCircle;
var faInfoSquare = {
  prefix: 'fad',
  iconName: 'info-square',
  icon: [448, 512, [], "f30f", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-176 86a42 42 0 1 1-42 42 42 42 0 0 1 42-42zm56 254a12 12 0 0 1-12 12h-88a12 12 0 0 1-12-12v-24a12 12 0 0 1 12-12h12v-64h-12a12 12 0 0 1-12-12v-24a12 12 0 0 1 12-12h64a12 12 0 0 1 12 12v100h12a12 12 0 0 1 12 12z", "M224 202a42 42 0 1 0-42-42 42 42 0 0 0 42 42zm44 134h-12V236a12 12 0 0 0-12-12h-64a12 12 0 0 0-12 12v24a12 12 0 0 0 12 12h12v64h-12a12 12 0 0 0-12 12v24a12 12 0 0 0 12 12h88a12 12 0 0 0 12-12v-24a12 12 0 0 0-12-12z"]]
};
exports.faInfoSquare = faInfoSquare;
var faInhaler = {
  prefix: 'fad',
  iconName: 'inhaler',
  icon: [640, 512, [], "f5f9", ["M32 448a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm96-144a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm-96-48a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm0 96a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm96 48a32 32 0 1 0 32 32 32 32 0 0 0-32-32zM616.27 38L478.47 1.1a32 32 0 0 0-39.19 22.63l-15.41 57.52L592.61 250 638.9 77.21A32 32 0 0 0 616.27 38z", "M586.15 288.78a32 32 0 0 1 8.33 30.75l-44.22 168.59a32 32 0 0 1-31 23.88H224a32 32 0 0 1-32-32V288a32 32 0 0 1 32-32h122.49l35.91-136.92a16 16 0 0 1 26.79-7.26z"]]
};
exports.faInhaler = faInhaler;
var faIntegral = {
  prefix: 'fad',
  iconName: 'integral',
  icon: [384, 512, [], "f667", ["M377.21 73a32.71 32.71 0 0 1-4.84 45l-24.18 20a30.29 30.29 0 0 1-43.52-5l-28-36.2-79.2 339.11C186.5 485 141.92 517.8 92.1 511.13c-25.36-3.39-47.91-18.58-63.89-39.21L6.79 444.27a32.73 32.73 0 0 1 4.82-45l24.17-20a30.3 30.3 0 0 1 43.53 5l24 30.91 78.11-334.36C190.54 40 221.86 6.41 262.05.89c33.82-4.64 66.38 9.09 87.16 36z", ""]]
};
exports.faIntegral = faIntegral;
var faIntersection = {
  prefix: 'fad',
  iconName: 'intersection',
  icon: [384, 512, [], "f668", ["M384 224v240a16 16 0 0 1-16 16h-64a16 16 0 0 1-16-16V227.79c0-46.43-31.29-89.08-76.87-97.93A96.16 96.16 0 0 0 96 224v240a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16V230.68C0 133.11 70 46 166.74 33.62 283.83 18.6 384 109.82 384 224z", ""]]
};
exports.faIntersection = faIntersection;
var faInventory = {
  prefix: 'fad',
  iconName: 'inventory',
  icon: [640, 512, [], "f480", ["M624 0h-32a16 16 0 0 0-16 16v144H64V16A16 16 0 0 0 48 0H16A16 16 0 0 0 0 16v496h64v-32h512v32h64V16a16 16 0 0 0-16-16zm-48 416H64V224h512z", "M208 256h-96a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16h96a16 16 0 0 0 16-16v-96a16 16 0 0 0-16-16zM464 0h-96a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16h96a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16zm-96 256h-96a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16h96a16 16 0 0 0 16-16v-96a16 16 0 0 0-16-16z"]]
};
exports.faInventory = faInventory;
var faIslandTropical = {
  prefix: 'fad',
  iconName: 'island-tropical',
  icon: [448, 512, [], "f811", ["M284.91 358.8a144 144 0 0 0-43.71-6.8h-45.07c10-42.85 25-122.77 21-202.33L238.89 128h27.39c11.16 48 28.58 142.41 18.63 230.8z", "M241.2 352h-98.4A144 144 0 0 0 .36 474.78C-2.53 494.3 12.39 512 32.12 512h319.76c19.73 0 34.65-17.7 31.76-37.22A144 144 0 0 0 241.2 352zm206.62-238.36C439.69 67.43 393 32 336.53 32c-34.88 0-65.66 13.82-86.3 35.08C235.78 28.29 193.72 0 143.47 0 87 0 40.31 35.43 32.18 81.64a12.37 12.37 0 0 0 10.24 14.2 12.24 12.24 0 0 0 2.18.16H80l16-32 16 32h30.17c-34.21 35-39.62 86.88-14.54 122.58 4.36 6.2 13.14 7.31 18.5 1.95L238.89 128H368l16-32 16 32h35.4a12.38 12.38 0 0 0 12.6-12.18 12.24 12.24 0 0 0-.18-2.18z"]]
};
exports.faIslandTropical = faIslandTropical;
var faItalic = {
  prefix: 'fad',
  iconName: 'italic',
  icon: [320, 512, [], "f033", ["M208 416H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h192a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm96-384H112a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h192a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z", "M158.75 96h82.5l-80 320h-82.5z"]]
};
exports.faItalic = faItalic;
var faJackOLantern = {
  prefix: 'fad',
  iconName: 'jack-o-lantern',
  icon: [576, 512, [], "f30e", ["M495.3 153.12c-27-23.08-65.36-29.75-99.49-20.92 6.09 5.5 12.16 11 17.19 17.8 3.1 4.26 5.46 9.42 8.15 14.17C389.39 140.54 345.54 128 288 128s-101.39 12.54-133.15 36.17c2.69-4.75 5-9.91 8.15-14.17 5-6.79 11.1-12.29 17.19-17.8-34.13-8.83-72.49-2.16-99.49 20.92-107.6 92-107.6 241.73 0 333.75 38.63 33 100.82 33.34 140.12 1.25C238.65 503.51 260.72 512 288 512s49.35-8.49 67.19-23.88c39.3 32.09 101.49 31.78 140.12-1.25 107.59-92.01 107.59-241.73-.01-333.75zM320.85 278L362 211.33c2.33-4.57 8.6-4.42 12 0L415.15 278c1.66 3.25.9 10-6 10h-82.29c-6.86 0-7.7-6.69-6.01-10zm-160 0L202 211.33c2.33-4.57 8.6-4.42 12 0L255.15 278c1.66 3.25.9 10-6 10h-82.29c-6.86 0-7.7-6.69-6.01-10zm309 67.6c-6 17-12.75 28.61-18.7 37-9.38 12.94-21.34 23.8-35.19 33A15.94 15.94 0 0 0 400 400h-16a16 16 0 0 0-16 16v21.48c-23.46 6.88-50.16 10.52-80 10.52s-56.56-3.65-80-10.51V416a16 16 0 0 0-16-16h-16a16 16 0 0 0-15.92 15.62c-13.71-9.08-25.53-19.78-34.75-32.5a146.4 146.4 0 0 1-19-37.46c-4.87-13.89 10.56-26.15 23.24-18.67A308.41 308.41 0 0 0 240 365.83V384a16 16 0 0 0 16 16h16a16 16 0 0 0 16-16v-14.26c58.38 0 112.72-15.74 158.54-42.79 12.68-7.49 28.11 4.76 23.26 18.65z", "M326.86 288h82.29c6.9 0 7.66-6.75 6-10L374 211.33c-3.4-4.42-9.67-4.57-12 0L320.85 278c-1.69 3.31-.85 10 6.01 10zm-160 0h82.29c6.9 0 7.66-6.75 6-10L214 211.33c-3.4-4.42-9.67-4.57-12 0L160.85 278c-1.69 3.31-.85 10 6.01 10zm279.7 39C400.74 354 346.4 369.74 288 369.74V384a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-18.17A308.41 308.41 0 0 1 129.53 327c-12.68-7.48-28.11 4.78-23.24 18.67a146.4 146.4 0 0 0 19 37.46c9.22 12.72 21 23.42 34.75 32.5A16 16 0 0 1 176 400h16a16 16 0 0 1 16 16v21.49c23.46 6.86 50.17 10.51 80 10.51s56.52-3.64 80-10.52V416a16 16 0 0 1 16-16h16a15.94 15.94 0 0 1 15.91 15.54c13.85-9.18 25.81-20 35.19-33 5.95-8.35 12.74-19.92 18.7-37 4.85-13.83-10.58-26.08-23.24-18.54zM352 106.6V35.81a16 16 0 0 0-8.84-14.31l-39.6-19.8a16 16 0 0 0-22 8.37l-36.06 90.15A214 214 0 0 1 288 96a189.94 189.94 0 0 1 64 10.6z"]]
};
exports.faJackOLantern = faJackOLantern;
var faJedi = {
  prefix: 'fad',
  iconName: 'jedi',
  icon: [544, 512, [], "f669", ["M210.69 285.7a8 8 0 0 1 11.36-10.7l30.39 20.66L264 7.67a8 8 0 0 1 16 0l11.53 287.93 30.35-20.6a8 8 0 0 1 11.38 10.71l-20.13 33.77 42.07 8.73a8 8 0 0 1 0 15.66l-42.07 8.72 20.11 33.73a8 8 0 0 1-1.34 9.92 8.24 8.24 0 0 1-10 .8l-27.17-18.47 2.27 63.31a123.4 123.4 0 0 1-22.07 1.95h-6.37a123.38 123.38 0 0 1-21.62-1.95l2.29-63.35L222.06 397a8.34 8.34 0 0 1-10-.75 8 8 0 0 1-1.39-9.94l20.13-33.77-42.07-8.72a8 8 0 0 1 0-15.66l42.07-8.73z", "M543 224c.37 5.76 1 11.46 1 17.27a269.51 269.51 0 0 1-5.13 51.86L480 352h40c-42.63 94.17-137.64 160-248 160q-6.39 0-12.85-.29C155.15 506.94 65.27 442.23 24 352h39.93l-58.6-58.6A263 263 0 0 1 .22 254a272.2 272.2 0 0 1 .5-30h47.21L6.55 182.62a269.74 269.74 0 0 1 108-162.07 16 16 0 0 1 9.27-3 16.35 16.35 0 0 1 13.48 7.25 16 16 0 0 1 1.62 15.09 138.38 138.38 0 0 0-9.84 51.26c0 45.12 21 86.58 57.71 113.74a16.3 16.3 0 0 1 1.21 25.39c-26.55 24-41.17 56.5-41.17 91.58a123.26 123.26 0 0 0 19.76 67.06c22.25 34.48 60.92 54.83 102 54.9h6.37c48.67.09 93.33-28.39 112.38-73.18a119.78 119.78 0 0 0 7.22-23.28A123.5 123.5 0 0 0 356 230.3a16.33 16.33 0 0 1 1.21-25.43c36.66-27.16 57.69-68.61 57.69-113.73a138.21 138.21 0 0 0-9.9-51.31 16 16 0 0 1 1.61-15.09 16.35 16.35 0 0 1 13.49-7.24 16 16 0 0 1 9.25 3 271.22 271.22 0 0 1 107.9 162.26L496 224z"]]
};
exports.faJedi = faJedi;
var faJoint = {
  prefix: 'fad',
  iconName: 'joint',
  icon: [640, 512, [], "f595", ["M487.66 141.63C463.85 125 448 99.34 448 70.31V8a8 8 0 0 0-8-8h-48a8 8 0 0 0-8 8v66.4c0 43.69 24.56 81.63 60.34 106.7A83.55 83.55 0 0 1 480 249.69V280a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8v-30.31a131.49 131.49 0 0 0-56.34-108.06zm65.62-54.54A20.28 20.28 0 0 1 544 70.31V8a8 8 0 0 0-8-8h-48a8 8 0 0 0-8 8v62.31c0 22 10.17 43.41 28.64 55.39a147.47 147.47 0 0 1 67.36 124V280a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8v-30.31a195.36 195.36 0 0 0-86.72-162.6z", "M360.89 352.05c-34.4.06-86.81.15-88.21.17l117.8 137.43A64 64 0 0 0 439.07 512h88.45L409.57 374.4a64 64 0 0 0-48.68-22.35zM195 359A525 525 0 0 0 0 432a526.3 526.3 0 0 0 278.94 80h88.57L254.79 380.49A65 65 0 0 0 195 359zm421-7H432l118 137.65A64 64 0 0 0 598.58 512H616a24 24 0 0 0 24-24V376a24 24 0 0 0-24-24z"]]
};
exports.faJoint = faJoint;
var faJournalWhills = {
  prefix: 'fad',
  iconName: 'journal-whills',
  icon: [448, 512, [], "f66a", ["M96 448c-19.2 0-32-12.8-32-32s16-32 32-32h319.33c-1.93 16.24-1.76 48.38.53 64z", "M96 384h328a24 24 0 0 0 24-24V32a32 32 0 0 0-32-32H96A96 96 0 0 0 0 96v320a96 96 0 0 0 96 96h328a24 24 0 0 0 24-24v-16a24 24 0 0 0-24-24H96c-19.2 0-32-12.8-32-32s16-32 32-32zm37.08-239.61l21.26 21.26a8 8 0 0 0 11.32-11.31l-26.42-26.42a111.86 111.86 0 0 1 46.37-49.26 63 63 0 0 0 14 82.65 55.86 55.86 0 0 0 28.72 93.45l1.36-32.71-10.37 7a4.19 4.19 0 0 1-2.25.69 4 4 0 0 1-3.44-6l8.54-14.31-17.91-3.72a4 4 0 0 1 0-7.84l17.91-3.72-8.54-14.31a4 4 0 0 1 5.69-5.36l12 8.16L236 71.83a4 4 0 1 1 8 0l4.68 112.29 14.2-9.65a4.07 4.07 0 0 1 5 .41 4 4 0 0 1 .69 5L260 194.14l17.91 3.72a4 4 0 0 1 0 7.84L260 209.42l8.54 14.31a4 4 0 0 1-5.69 5.31l-12.68-8.62 1.43 34.28a55.84 55.84 0 0 0 28.71-93.43 63 63 0 0 0 14.09-82.6 111.86 111.86 0 0 1 46.37 49.26l-26.42 26.42a8 8 0 1 0 11.32 11.31l21.26-21.26c3 10.08 5.07 20.6 5.07 31.6 0 .52-.14 1-.15 1.51L314.74 210a8 8 0 1 0 10.52 12l23.59-20.64a111.71 111.71 0 0 1-217.71 0L154.73 222A8 8 0 0 0 166 210.63q-.35-.33-.72-.63l-37.11-32.47c0-.52-.15-1-.15-1.51-.02-11.02 2.08-21.54 5.06-31.63z"]]
};
exports.faJournalWhills = faJournalWhills;
var faJoystick = {
  prefix: 'fad',
  iconName: 'joystick',
  icon: [448, 512, [], "f8c5", ["M112 320H80a16 16 0 0 0-16 16v16h64v-16a16 16 0 0 0-16-16zm112-96c-11.2 0-21.8-2.14-32-5.2V352h64V218.8c-10.2 3.06-20.8 5.2-32 5.2z", "M416 352H32a32 32 0 0 0-32 32v96a32 32 0 0 0 32 32h384a32 32 0 0 0 32-32v-96a32 32 0 0 0-32-32zM224 224a112 112 0 1 0-112-112 112 112 0 0 0 112 112zM200 48a24 24 0 1 1-24 24 24 24 0 0 1 24-24z"]]
};
exports.faJoystick = faJoystick;
var faJug = {
  prefix: 'fad',
  iconName: 'jug',
  icon: [448, 512, [], "f8c6", ["M144 64h160a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16H144a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zM32 288v128h384V288z", "M448 168a71.72 71.72 0 0 0-126.68-46.35L311 108.77a32 32 0 0 1-7-20V64H144v24.78a32 32 0 0 1-7 20l-76.95 96.16a128 128 0 0 0-28 80V288H416v-3.1a127.59 127.59 0 0 0-11.1-51A72 72 0 0 0 448 168zm-70.62 23.72l-24.09-30.1C356.14 151.54 365 144 376 144a23.88 23.88 0 0 1 1.38 47.72zM32 448a64 64 0 0 0 64 64h256a64 64 0 0 0 64-64v-32H32z"]]
};
exports.faJug = faJug;
var faKaaba = {
  prefix: 'fad',
  iconName: 'kaaba',
  icon: [576, 512, [], "f66b", ["M117.89 205.81l-80 21.82a8 8 0 0 0-5.89 7.72v16.58a8 8 0 0 0 10.11 7.72l80-21.82a8 8 0 0 0 5.89-7.72v-16.58a8 8 0 0 0-10.11-7.72zm144-39.28l-96 26.18a8 8 0 0 0-5.89 7.72V217a8 8 0 0 0 10.11 7.72l96-26.18a8 8 0 0 0 5.89-7.72v-16.57a8 8 0 0 0-10.11-7.72zm276.22 61.1l-80-21.82a8 8 0 0 0-10.11 7.72v16.58a8 8 0 0 0 5.89 7.72l80 21.82a8 8 0 0 0 10.11-7.72v-16.58a8 8 0 0 0-5.89-7.72zm-128-34.91l-96-26.18a8 8 0 0 0-10.11 7.72v16.58a8 8 0 0 0 5.89 7.72l96 26.18A8 8 0 0 0 416 217v-16.56a8 8 0 0 0-5.89-7.72z", "M301.81 114a47.66 47.66 0 0 0-27.59 0L0 196.3v228.38a32 32 0 0 0 25.06 31.24l242.12 53.8a95.94 95.94 0 0 0 41.65 0L551 455.92a32 32 0 0 0 25-31.24V196.29zM128 230.11a8 8 0 0 1-5.89 7.72l-80 21.82A8 8 0 0 1 32 251.93v-16.58a8 8 0 0 1 5.89-7.72l80-21.82a8 8 0 0 1 10.11 7.72zm144-39.28a8 8 0 0 1-5.89 7.72l-96 26.18A8 8 0 0 1 160 217v-16.57a8 8 0 0 1 5.89-7.72l96-26.18a8 8 0 0 1 10.11 7.72zM416 217a8 8 0 0 1-10.11 7.72l-96-26.18a8 8 0 0 1-5.89-7.72v-16.56a8 8 0 0 1 10.11-7.72l96 26.18a8 8 0 0 1 5.89 7.72zm128 34.91a8 8 0 0 1-10.11 7.72l-80-21.82a8 8 0 0 1-5.89-7.72v-16.56a8 8 0 0 1 10.11-7.72l80 21.82a8 8 0 0 1 5.89 7.72zM265 83.37L0 162.88v-49a32 32 0 0 1 21.88-30.37L257.65 4.93a96 96 0 0 1 60.71 0l235.76 78.58A32 32 0 0 1 576 113.87v49l-265-79.5a80 80 0 0 0-46 0z"]]
};
exports.faKaaba = faKaaba;
var faKazoo = {
  prefix: 'fad',
  iconName: 'kazoo',
  icon: [640, 512, [], "f8c7", ["M608 128h-95.32C559.55 151.75 592 199.86 592 256s-32.45 104.25-79.32 128H608a32 32 0 0 0 32-32V160a32 32 0 0 0-32-32zM304 256c0-56.14 32.45-104.25 79.32-128H241.93a128.18 128.18 0 0 0-35.16 4.92L23.21 185.37A32 32 0 0 0 0 216.14v79.72a32 32 0 0 0 23.21 30.77l183.56 52.44a127.81 127.81 0 0 0 35.16 4.93h141.39C336.45 360.25 304 312.14 304 256zm240 0a96 96 0 1 0-96 96 96 96 0 0 0 96-96zm-45.09 28.28a8 8 0 0 1 0 11.32l-11.31 11.31a8 8 0 0 1-11.32 0L448 278.63l-28.29 28.28a8 8 0 0 1-11.31 0l-11.31-11.31a8 8 0 0 1 0-11.32L425.38 256l-28.29-28.29a8 8 0 0 1 0-11.31l11.31-11.31a8 8 0 0 1 11.31 0L448 233.37l28.28-28.28a8 8 0 0 1 11.32 0l11.31 11.31a8 8 0 0 1 0 11.31L470.63 256z", "M448 112a144 144 0 1 0 144 144 144 144 0 0 0-144-144zm0 240a96 96 0 1 1 96-96 96 96 0 0 1-96 96z"]]
};
exports.faKazoo = faKazoo;
var faKerning = {
  prefix: 'fad',
  iconName: 'kerning',
  icon: [640, 512, [], "f86f", ["M416.54 0h-17A8 8 0 0 0 392 5.32l-176.28 496a8 8 0 0 0 7.55 10.68h17a8 8 0 0 0 7.54-5.32l176.28-496A8 8 0 0 0 416.54 0z", "M304 96h-50.62a16 16 0 0 0-15.16 10.89L160 306.68 81.78 106.89A16 16 0 0 0 66.62 96H16A16 16 0 0 0 .85 117.11l105.27 277.2a32 32 0 0 0 30.3 21.69h47.16a32 32 0 0 0 30.3-21.69l105.27-277.2A16 16 0 0 0 304 96zm335.15 298.89l-105.27-277.2A32 32 0 0 0 503.58 96h-47.16a32 32 0 0 0-30.3 21.69l-105.27 277.2A16 16 0 0 0 336 416h50.61a16 16 0 0 0 15.16-10.89L416.31 368h127.38l14.53 37.11A16 16 0 0 0 573.38 416H624a16 16 0 0 0 15.15-21.11zM447.63 288L480 205.32 512.37 288z"]]
};
exports.faKerning = faKerning;
var faKey = {
  prefix: 'fad',
  iconName: 'key',
  icon: [512, 512, [], "f084", ["M303.06 348.91l.1.09-24 27a24 24 0 0 1-17.94 8H224v40a24 24 0 0 1-24 24h-40v40a24 24 0 0 1-24 24H24a24 24 0 0 1-24-24v-78a24 24 0 0 1 7-17l161.83-161.83-.11-.35a176.24 176.24 0 0 0 134.34 118.09z", "M336 0a176 176 0 1 0 176 176A176 176 0 0 0 336 0zm48 176a48 48 0 1 1 48-48 48 48 0 0 1-48 48z"]]
};
exports.faKey = faKey;
var faKeySkeleton = {
  prefix: 'fad',
  iconName: 'key-skeleton',
  icon: [512, 512, [], "f6f3", ["M251.31 372.91a16 16 0 0 1 0 22.63l-15.77 15.77a16 16 0 0 1-22.62 0L176 374.4l-30.87 30.86 36.11 36.11a16 16 0 0 1 0 22.63l-43.16 43.17a16 16 0 0 1-22.62 0l-36.12-36.11-36.26 36.25a16 16 0 0 1-22.62 0L4.69 491.54a16 16 0 0 1 0-22.63l255.12-255.12a64.18 64.18 0 0 0 38.4 38.4L214.4 336l36.91 36.91z", "M448 0H320a64 64 0 0 0-64 64v128a64 64 0 0 0 64 64h128a64 64 0 0 0 64-64V64a64 64 0 0 0-64-64zm-73.37 182.63a32 32 0 1 1 0-45.25 32 32 0 0 1 0 45.25zm64-64a32 32 0 1 1 0-45.25 32 32 0 0 1 0 45.25z"]]
};
exports.faKeySkeleton = faKeySkeleton;
var faKeyboard = {
  prefix: 'fad',
  iconName: 'keyboard',
  icon: [576, 512, [], "f11c", ["M528 64H48a48 48 0 0 0-48 48v288a48 48 0 0 0 48 48h480a48 48 0 0 0 48-48V112a48 48 0 0 0-48-48zm-176 76a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12v40a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12zm100 84a12 12 0 0 1 12 12v40a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12zm-84 12v40a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm-112-96a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12v40a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12zm16 96v40a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm-112-96a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12v40a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12zm16 96v40a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zM64 140a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12v40a12 12 0 0 1-12 12H76a12 12 0 0 1-12-12zm64 232a12 12 0 0 1-12 12H76a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm288 0a12 12 0 0 1-12 12H172a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h232a12 12 0 0 1 12 12zm96 0a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12zm0-192a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12z", "M164 224h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm96 0h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm96 0h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm108 52v-40a12 12 0 0 0-12-12h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12zm36 44h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm0-192h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm-136 64h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12zm-96 0h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12zm-96 0h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12zm-96 0h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12H76a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12zm40 128H76a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12z"]]
};
exports.faKeyboard = faKeyboard;
var faKeynote = {
  prefix: 'fad',
  iconName: 'keynote',
  icon: [512, 512, [], "f66c", ["M368 448h-80v-64h-64v64h-80a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h224a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM206.68 82.45A47.73 47.73 0 0 0 240 96h64a48 48 0 0 0 0-96h-64a47.89 47.89 0 0 0-46.31 36C137.77 49.72 96 99.91 96 160h48c0-37.62 26.21-69.06 62.68-77.55z", "M508.62 281.24a32.07 32.07 0 0 1 3.38 14.31V320a32 32 0 0 1-32 32H32a32 32 0 0 1-32-32v-24.45a32 32 0 0 1 3.38-14.31l51.78-103.55A32 32 0 0 1 83.78 160h344.44a32 32 0 0 1 28.62 17.69z"]]
};
exports.faKeynote = faKeynote;
var faKhanda = {
  prefix: 'fad',
  iconName: 'khanda',
  icon: [512, 512, [], "f66d", ["M193.3 68.85a14.25 14.25 0 0 1 3.57-16L255.86 0l59 52.82a14.23 14.23 0 0 1 3.57 16l-5 11L293.27 124l-7.93 17.39a112 112 0 0 0 0 75.56l33.36 73.27a14.16 14.16 0 0 1-2.81 15.28l-44.05 36.09v20.1L256 372.77l-16.08-11.2v-20l-44-36.09a14.19 14.19 0 0 1-2.92-15.24l16.1-35.37 11.62-25.5 5.66-12.37a112 112 0 0 0 0-75.56l-7.86-17.25L198.36 80zm78.55 384.06v-30.1L256 411.75 239.87 423v30c-9.39 5.57-16 15.38-16 27.1a32 32 0 1 0 64 0c-.03-11.8-6.64-21.61-16.02-27.19z", "M291.05 229.51l20 44a112 112 0 0 0 2.33-193.7L293.27 124a63.92 63.92 0 0 1-2.22 105.49zm-90.36 43.89l20.05-44a63.92 63.92 0 0 1-2.22-105.2L198.36 80a112 112 0 0 0 2.33 193.44zM415.81 66a16 16 0 0 0-21.27 22.54 163.69 163.69 0 0 1 25.2 87.46 159.64 159.64 0 0 1-71.27 132.41L256 372.77l-92.52-64.41A159.64 159.64 0 0 1 92.17 176a163.69 163.69 0 0 1 25.2-87.41A16 16 0 0 0 96.1 66C22.39 106.24-15.68 189.85 5.94 273.51c7.25 28.09 22.38 53.57 41.25 75.59l52.51 61.31a16 16 0 0 0 19.65 3.71l79.35-42.23 29.3 20.37-47 32.75a22.72 22.72 0 0 0-5-1 24 24 0 0 0 0 48c12.1 0 21.69-9.11 23.33-20.76l56.67-39.5 56.71 39.49C314.31 462.89 323.9 472 336 472a24 24 0 0 0 0-48 22.72 22.72 0 0 0-5 1l-47-32.75 29.26-20.37 79.35 42.23a16 16 0 0 0 19.65-3.71l52.51-61.31c18.87-22 34-47.5 41.25-75.59 21.57-83.65-16.5-167.26-90.21-207.5z"]]
};
exports.faKhanda = faKhanda;
var faKidneys = {
  prefix: 'fad',
  iconName: 'kidneys',
  icon: [640, 512, [], "f5fb", ["M402.73 199.72l-35.89 18a55.81 55.81 0 0 0-31 50.09v228.21a16 16 0 0 0 16 16h16a16 16 0 0 0 16-16V267.77a8 8 0 0 1 4.47-7.16l23.87-11.94 2.13-7.39c4.92-16.94-3.05-31.56-11.58-41.56zm-98.86 68a55.74 55.74 0 0 0-31-50.09l-35.84-17.92c-8.57 10.12-16.55 25-11.66 42.26l1.82 6.49 24.21 12.11a8 8 0 0 1 4.44 7.16V496a16 16 0 0 0 16 16h16a16 16 0 0 0 16-16v-48z", "M639.9 224c-2.09-74-35.81-146.16-96-199.7a96 96 0 1 0-127.69 143.42c49.6 44.12 26.49 91.15 25.76 93.71C424.49 322 469.62 384 534.29 384a96.07 96.07 0 0 0 92.26-69.46c5.54-19.27 14.54-48.08 13.35-90.54zM96 24.38C36.08 77.85 2.39 150 .13 224-1.15 266 7.6 294.91 13 314.06A96 96 0 0 0 105.37 384c64.31 0 109.65-61.47 92.47-122.11-1-3.7-23.08-50.43 26.07-94.27A96 96 0 1 0 96 24.38z"]]
};
exports.faKidneys = faKidneys;
var faKiss = {
  prefix: 'fad',
  iconName: 'kiss',
  icon: [496, 512, [], "f596", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8ZM168,240a32,32,0,1,1,32-32A32,32,0,0,1,168,240ZM304,396c0,19.2-28.7,41.5-71.5,44-8.5.8-12.1-11.8-3.6-15.4l17-7.2c13-5.5,20.8-13.5,20.8-21.5s-7.8-16-20.8-21.5l-17-7.2c-6-2.5-6.1-12.2,0-14.8l17-7.2c13-5.5,20.8-13.5,20.8-21.5s-7.8-16-20.8-21.5l-17-7.2c-8.6-3.6-4.8-16.5,3.6-15.4,42.8,2.5,71.5,24.8,71.5,44,0,13-13.4,27.3-35.2,36C290.6,368.7,304,383,304,396Zm24-156a32,32,0,1,1,32-32A32,32,0,0,1,328,240Z", "M328,176a32,32,0,1,0,32,32A32,32,0,0,0,328,176Zm-160,0a32,32,0,1,0,32,32A32,32,0,0,0,168,176Z"]]
};
exports.faKiss = faKiss;
var faKissBeam = {
  prefix: 'fad',
  iconName: 'kiss-beam',
  icon: [496, 512, [], "f597", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8ZM209,227.9l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8,7.9-31.5,21.6l-9.5,17c-4.2,7.4-15.6,4-14.9-4.5,3.3-42.1,32.2-71.4,56-71.4s52.7,29.3,56,71.4C224.6,231.9,213.2,235.4,209,227.9ZM304,396c0,19.2-28.7,41.5-71.5,44-8.5.8-12.1-11.8-3.6-15.4l17-7.2c13-5.5,20.8-13.5,20.8-21.5s-7.8-16-20.8-21.5l-17-7.2c-6-2.5-6.1-12.2,0-14.8l17-7.2c13-5.5,20.8-13.5,20.8-21.5s-7.8-16-20.8-21.5l-17-7.2c-8.6-3.6-4.8-16.5,3.6-15.4,42.8,2.5,71.5,24.8,71.5,44,0,13-13.4,27.3-35.2,36C290.6,368.7,304,383,304,396Zm65-168.1-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8,7.9-31.5,21.6l-9.5,17c-4.1,7.3-15.6,4-14.9-4.5,3.3-42.1,32.2-71.4,56-71.4s52.7,29.3,56,71.4C384.6,231.9,373.2,235.4,369,227.9Z", "M384.1,223.4c-3.3-42.1-32.2-71.4-56-71.4s-52.7,29.3-56,71.4c-.7,8.5,10.8,11.8,14.9,4.5l9.5-17c7.7-13.7,19.2-21.6,31.5-21.6s23.8,7.9,31.5,21.6l9.5,17C373.2,235.4,384.6,231.9,384.1,223.4ZM168.1,152c-23.8,0-52.7,29.3-56,71.4-.7,8.5,10.7,11.9,14.9,4.5l9.5-17c7.7-13.7,19.2-21.6,31.5-21.6s23.8,7.9,31.5,21.6l9.5,17c4.2,7.5,15.6,4,15.1-4.5C220.8,181.3,191.9,152,168.1,152Z"]]
};
exports.faKissBeam = faKissBeam;
var faKissWinkHeart = {
  prefix: 'fad',
  iconName: 'kiss-wink-heart',
  icon: [504, 512, [], "f598", ["M332.49,338.8c29.7-46.3,98.7-45.5,127.8,4.3a81.91,81.91,0,0,1,18.6,2.9A246.65,246.65,0,0,0,496,256C496,119,385,8,248,8S0,119,0,256,111,504,248,504a246.15,246.15,0,0,0,99.4-20.9c-.3-.7-23.9-84.6-23.9-84.6A74.25,74.25,0,0,1,332.49,338.8ZM168,240a32,32,0,1,1,32-32A32,32,0,0,1,168,240ZM288,396c0,19.2-28.7,41.5-71.49,44-8.5.8-12.1-11.8-3.6-15.4l17-7.2c13-5.5,20.8-13.5,20.8-21.5s-7.8-16-20.8-21.5l-17-7.2c-6-2.5-5.7-12.3,0-14.8l17-7.2c13-5.5,20.8-13.5,20.8-21.5s-7.8-16-20.8-21.5l-17-7.2c-8.8-3.7-4.6-16.6,3.6-15.4,42.79,2.5,71.49,24.8,71.49,44,0,13-13.4,27.3-35.2,36C274.59,368.7,288,383,288,396Zm16-179c-8.3,7.4-21.6.4-19.8-10.8,4-25.2,34.2-42.1,59.9-42.1S400,181,404,206.2A12,12,0,0,1,384.2,217l-9.5-8.5c-14.8-13.2-46.2-13.2-61,0Z", "M501.09,402.5c-8-20.8-31.5-31.5-53.1-25.9l-8.4,2.2-2.3-8.4c-5.9-21.4-27-36.5-49-33a41.87,41.87,0,0,0-34,52.6l22.9,82.6a10.23,10.23,0,0,0,12.4,7.1l83-21.5a41.75,41.75,0,0,0,28.5-55.72ZM384.19,217A12,12,0,0,0,404,206.2c-4-25.2-34.2-42.1-59.9-42.1s-55.9,16.9-59.9,42.1c-1.8,11.2,11.5,18.2,19.8,10.8l9.7-8.5c14.8-13.2,46.2-13.2,61,0ZM168,176a32,32,0,1,0,32,32A32,32,0,0,0,168,176Z"]]
};
exports.faKissWinkHeart = faKissWinkHeart;
var faKite = {
  prefix: 'fad',
  iconName: 'kite',
  icon: [640, 512, [], "f6f4", ["M72 251l24 15.87L120 251v-27a88 88 0 0 0-88-88H16a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h16a40 40 0 0 1 40 40zM630.63 9.37L475.1 164.9l153.82 153.82A32 32 0 0 0 640 294.5V32a31.9 31.9 0 0 0-9.37-22.63zm-309.36 1.74a32 32 0 0 0-7 13.69l-80.09 347.09-87.54 87.54a15.6 15.6 0 0 1-26.63-11V325L96 309.16 72 325v118.31c0 16.55 5 33 15.7 45.71 26.48 31.53 69 28.26 92.87 4.34l87.55-87.55-6.7 1.55a24 24 0 0 1-22.36-6.42L475 165z", "M154.69 228L96 266.84 37.31 228c-16-10.55-37.31.79-37.31 19.8v80.32c0 19 21.36 30.35 37.31 19.8L96 309.16 154.69 348c15.95 10.55 37.31-.79 37.31-19.8v-80.36c0-19.01-21.36-30.35-37.31-19.84zM630.63 9.37A31.9 31.9 0 0 0 608 0H345.5a32.08 32.08 0 0 0-24.23 11.11L475 165 239.06 400.94a24 24 0 0 0 22.36 6.42L615.2 325.7a31.76 31.76 0 0 0 13.72-7L475.1 164.9z"]]
};
exports.faKite = faKite;
var faKiwiBird = {
  prefix: 'fad',
  iconName: 'kiwi-bird',
  icon: [576, 512, [], "f535", ["M144 410v54a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-73.69A190.9 190.9 0 0 0 144 410zm432-186a112 112 0 0 1-102.62 111.61l72.54 136.05A16 16 0 0 0 560 480a16.2 16.2 0 0 0 3.95-.5A16 16 0 0 0 576 464V224zM208 415.32V464a16 16 0 0 0 16 16h16a16 16 0 0 0 16-16v-58.95a191 191 0 0 1-48 10.27z", "M464 112h-15.74a260.23 260.23 0 0 1-147.74-46.24q-6.09-4.22-12.52-7.94v-.13A191.08 191.08 0 0 0 192 32C86 32 0 118 0 224s86 192 192 192a191.08 191.08 0 0 0 96-25.69v-.2c2.83-1.61 5.61-3.28 8.33-5.05C342 355.33 393.58 336.1 448 336h16a112 112 0 0 0 0-224zm0 136a24 24 0 1 1 24-24 24 24 0 0 1-24 24z"]]
};
exports.faKiwiBird = faKiwiBird;
var faKnifeKitchen = {
  prefix: 'fad',
  iconName: 'knife-kitchen',
  icon: [576, 512, [], "f6f5", ["M4.87 469.83L267.52 216.6l129.09 124.45a15.6 15.6 0 0 1 0 22.63l-61 58.85c-84.89 81.81-210.41 110.38-324.25 73.79-11.71-3.75-15.21-18.08-6.49-26.49z", "M566.28 43.31L531.07 9.38a34.07 34.07 0 0 0-46.94 0L291.82 194.77l112.1 108.08 34.35-27.7a31.47 31.47 0 0 0 9.73-22.64V208L566.28 88.57a31.2 31.2 0 0 0 0-45.26zm-122 106.36a17 17 0 0 1-23.47 0 15.6 15.6 0 0 1 0-22.63 17 17 0 0 1 23.47 0 15.6 15.6 0 0 1-.04 22.63zm60.52-58.36a17 17 0 0 1-23.47 0 15.59 15.59 0 0 1 0-22.62 17 17 0 0 1 23.47 0 15.59 15.59 0 0 1-.04 22.62z"]]
};
exports.faKnifeKitchen = faKnifeKitchen;
var faLambda = {
  prefix: 'fad',
  iconName: 'lambda',
  icon: [448, 512, [], "f66e", ["M194.62 243.73l-95 221.72A24 24 0 0 1 77.54 480H25.31a24 24 0 0 1-22.06-33.45l132.88-310.06z", "M448 408v48a24 24 0 0 1-24 24h-81.5a32 32 0 0 1-28.1-16.68L131.5 128H24a24 24 0 0 1-24-24V56a24 24 0 0 1 24-24h145.5a32 32 0 0 1 28.1 16.68L380.5 384H424a24 24 0 0 1 24 24z"]]
};
exports.faLambda = faLambda;
var faLamp = {
  prefix: 'fad',
  iconName: 'lamp',
  icon: [448, 512, [], "f4ca", ["M158.31 288h131.4C327 325.2 352 386.8 352 428.8c0 28.4-11.5 54.2-30.5 74.3-5.7 6-13.9 8.9-22.2 8.9H148.71c-8.3 0-16.5-2.9-22.2-8.9-19-20-30.5-45.9-30.5-74.3-.01-42 24.99-103.6 62.3-140.8z", "M93.61 17.7c5.2-10.9 15.6-17.7 27-17.7h219.8c12 0 22.9 7.6 27.6 19.4l77.5 192c8.6 21.1-6 44.6-27.6 44.6H30.21c-22.4 0-37-25-27-46.3z"]]
};
exports.faLamp = faLamp;
var faLandmark = {
  prefix: 'fad',
  iconName: 'landmark',
  icon: [512, 512, [], "f66f", ["M496 448H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h480a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-16-80a16 16 0 0 0-16-16h-16V192h-64v160h-96V192h-64v160h-96V192H64v160H48a16 16 0 0 0-16 16v48h448z", "M10.38 92.11L244.77 2a32 32 0 0 1 22.47 0l234.38 90.11a16 16 0 0 1 10.38 15V144a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16v-36.91a16 16 0 0 1 10.38-14.98z"]]
};
exports.faLandmark = faLandmark;
var faLandmarkAlt = {
  prefix: 'fad',
  iconName: 'landmark-alt',
  icon: [512, 512, [], "f752", ["M0 496v-32a16 16 0 0 1 16-16h16v-16a16 16 0 0 1 16-16h16V288h64v128h96V288h64v128h96V288h64v128h16a16 16 0 0 1 16 16v16h16a16 16 0 0 1 16 16v32a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16z", "M288 16v18.9A191.88 191.88 0 0 1 445.1 192H464a16 16 0 0 1 16 16v32a16 16 0 0 1-16 16H48a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h18.9A191.88 191.88 0 0 1 224 34.9V16a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16z"]]
};
exports.faLandmarkAlt = faLandmarkAlt;
var faLanguage = {
  prefix: 'fad',
  iconName: 'language',
  icon: [640, 512, [], "f1ab", ["M168.1 236.2c-3.5-12.1-7.8-33.2-7.8-33.2h-.5s-4.3 21.1-7.8 33.2l-11.1 37.5H179zM0 120v272.12A23.94 23.94 0 0 0 24 416h296V96H23.88A23.94 23.94 0 0 0 0 120zm74.62 216.19l57.65-168.14A12 12 0 0 1 143.7 160h32.58a12.23 12.23 0 0 1 11.43 8.05l57.64 168.14a11.7 11.7 0 0 1 .65 3.93A12 12 0 0 1 233.92 352H211a12 12 0 0 1-11.53-8.55L190 311.73h-60.34l-9.12 31.62A12.11 12.11 0 0 1 109 352H86a12.07 12.07 0 0 1-11.43-15.81zM564 188h-64v-16a12 12 0 0 0-12-12h-16a12 12 0 0 0-12 12v16h-64a12 12 0 0 0-12 12v16a12 12 0 0 0 12 12h114.3c-6.2 14.3-16.5 29-30 43.19a191 191 0 0 1-17.4-20.89 12.09 12.09 0 0 0-16-3.4l-7.3 4.3-6.5 3.89-.64.41a12 12 0 0 0-3.06 16.69 231.81 231.81 0 0 0 21 25.69 284.34 284.34 0 0 1-26.1 18 12 12 0 0 0-4.2 16.2l7.9 13.89.2.34a12 12 0 0 0 16.5 4 352.44 352.44 0 0 0 35.4-24.89 348.11 348.11 0 0 0 35.4 24.89 3.79 3.79 0 0 0 .34.2 12 12 0 0 0 16.36-4.5l7.9-14.01a12 12 0 0 0-4.1-16.2 310.64 310.64 0 0 1-26.1-18c21-22.49 35.8-46.28 42.7-69.88H564a12 12 0 0 0 12-12V200a12 12 0 0 0-12-12z", "M616.12 96H320v320h296a23.94 23.94 0 0 0 24-23.88V120a23.94 23.94 0 0 0-23.88-24zM576 216a12 12 0 0 1-12 12h-11.4c-6.9 23.6-21.7 47.39-42.7 69.88a310.64 310.64 0 0 0 26.1 18 12 12 0 0 1 4.1 16.2l-7.9 13.89a12 12 0 0 1-16.36 4.5 3.79 3.79 0 0 1-.34-.2 348.11 348.11 0 0 1-35.4-24.89 352.44 352.44 0 0 1-35.4 24.89 12 12 0 0 1-16.5-4l-.2-.34-7.9-13.93a12 12 0 0 1 4.2-16.2 284.34 284.34 0 0 0 26.1-18 231.81 231.81 0 0 1-21-25.69 12 12 0 0 1 3.06-16.69l.64-.41 6.5-3.89 7.3-4.3a12.09 12.09 0 0 1 16 3.4 191 191 0 0 0 17.4 20.89c13.5-14.2 23.8-28.89 30-43.19H396a12 12 0 0 1-12-12V200a12 12 0 0 1 12-12h64v-16a12 12 0 0 1 12-12h16a12 12 0 0 1 12 12v16h64a12 12 0 0 1 12 12zm-388.29-47.95a12.23 12.23 0 0 0-11.43-8.05H143.7a12 12 0 0 0-11.43 8.05L74.62 336.19A12.07 12.07 0 0 0 86.05 352h23a12.11 12.11 0 0 0 11.53-8.65l9.12-31.62H190l9.42 31.72A12 12 0 0 0 211 352h23a12 12 0 0 0 12-11.88 11.7 11.7 0 0 0-.65-3.93zM140.9 273.7l11.1-37.5c3.5-12.1 7.8-33.2 7.8-33.2h.5s4.3 21.1 7.8 33.2l10.9 37.5z"]]
};
exports.faLanguage = faLanguage;
var faLaptop = {
  prefix: 'fad',
  iconName: 'laptop',
  icon: [640, 512, [], "f109", ["M528 0H112a48.14 48.14 0 0 0-48 48v336h512V48a48.14 48.14 0 0 0-48-48zm-16 320H128V64h384z", "M512 64H128v256h384zm112 352H381.54c-.74 19.81-14.71 32-32.74 32H288c-18.69 0-33-17.47-32.77-32H16a16 16 0 0 0-16 16v16a64.19 64.19 0 0 0 64 64h512a64.19 64.19 0 0 0 64-64v-16a16 16 0 0 0-16-16z"]]
};
exports.faLaptop = faLaptop;
var faLaptopCode = {
  prefix: 'fad',
  iconName: 'laptop-code',
  icon: [640, 512, [], "f5fc", ["M528 0H112a48.14 48.14 0 0 0-48 48v336h512V48a48.14 48.14 0 0 0-48-48zm-16 320H128V64h384z", "M624 416H381.54c-.74 19.81-14.71 32-32.74 32H288c-18.69 0-33-17.47-32.77-32H16a16 16 0 0 0-16 16v16a64.19 64.19 0 0 0 64 64h512a64.19 64.19 0 0 0 64-64v-16a16 16 0 0 0-16-16zM512 64H128v256h384zM289 250.34l-11.31 11.31a16 16 0 0 1-22.63 0l-58.35-58.34a16 16 0 0 1 0-22.63L255 122.34a16 16 0 0 1 22.63 0L289 133.65a16 16 0 0 1 0 22.63L253.25 192 289 227.71a16 16 0 0 1 0 22.63zm154.35-47L385 261.66a16 16 0 0 1-22.63 0L351 250.35a16 16 0 0 1 0-22.63L386.75 192 351 156.29a16 16 0 0 1 0-22.63l11.31-11.31a16 16 0 0 1 22.63 0l58.34 58.34a16 16 0 0 1 .04 22.63z"]]
};
exports.faLaptopCode = faLaptopCode;
var faLaptopMedical = {
  prefix: 'fad',
  iconName: 'laptop-medical',
  icon: [640, 512, [], "f812", ["M528 0H112a48.14 48.14 0 0 0-48 48v336h512V48a48.14 48.14 0 0 0-48-48zm-16 320H128V64h384z", "M624 416H381.54c-.74 19.81-14.71 32-32.74 32H288c-18.69 0-33-17.47-32.77-32H16a16 16 0 0 0-16 16v16a64.19 64.19 0 0 0 64 64h512a64.19 64.19 0 0 0 64-64v-16a16 16 0 0 0-16-16zM512 64H128v256h384zm-96 152a8 8 0 0 1-8 8h-56v56a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8v-56h-56a8 8 0 0 1-8-8v-48a8 8 0 0 1 8-8h56v-56a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v56h56a8 8 0 0 1 8 8z"]]
};
exports.faLaptopMedical = faLaptopMedical;
var faLasso = {
  prefix: 'fad',
  iconName: 'lasso',
  icon: [576, 512, [], "f8c8", ["M178.13 384.21a68.83 68.83 0 0 1 2.58 17.53 45.9 45.9 0 0 1-45.77 46.5H48a16 16 0 0 0-16 15.94v31.88A16 16 0 0 0 48 512h86.94c59.38 0 108.8-47.23 109.76-106.38a134.89 134.89 0 0 0-6.57-45.28c-14.24 14.12-35.65 23.35-60 23.87zM288 0C126.5 0 0 79.64 0 181.3c0 49.78 30.22 95.84 85 129.7 3.54 2.17 7.41 4.31 11.37 6.45 1.39-22.07 16.73-41 39.25-51.59-5.91-3-11.92-6-16.9-9.07C98.31 244.17 64 217.57 64 181.3c0-62.61 104.69-117.54 224-117.54s224 54.93 224 117.54-104.69 117.52-224 117.52c-12.82 0-25.42-.8-37.88-2a52.39 52.39 0 0 1 5.88 23.8c0 14.93-6.7 28.47-17.48 39.34a470.13 470.13 0 0 0 49.48 2.62c161.5 0 288-79.64 288-181.28S449.5 0 288 0z", "M256 320.62c0 35.21-35.82 63.76-80 63.76s-80-28.55-80-63.76 35.82-63.76 80-63.76 80 28.55 80 63.76z"]]
};
exports.faLasso = faLasso;
var faLaugh = {
  prefix: 'fad',
  iconName: 'laugh',
  icon: [496, 512, [], "f599", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8Zm80,152a32,32,0,1,1-32,32A32,32,0,0,1,328,160Zm-160,0a32,32,0,1,1-32,32A32,32,0,0,1,168,160ZM398.9,306A144.12,144.12,0,0,1,256,432H240A144.12,144.12,0,0,1,97.1,306a16.06,16.06,0,0,1,14-17.88A15,15,0,0,1,113,288H383a16,16,0,0,1,16,16A16.64,16.64,0,0,1,398.9,306Z", "M328,160a32,32,0,1,0,32,32A32,32,0,0,0,328,160Zm-160,0a32,32,0,1,0,32,32A32,32,0,0,0,168,160Z"]]
};
exports.faLaugh = faLaugh;
var faLaughBeam = {
  prefix: 'fad',
  iconName: 'laugh-beam',
  icon: [496, 512, [], "f59a", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8Zm24,199.4c3.3-42.1,32.2-71.4,56-71.4s52.7,29.3,56,71.4c.7,8.6-10.8,11.9-14.9,4.5l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8,7.9-31.5,21.6l-9.5,17C282.9,219.3,271.3,216,272,207.4Zm-160,0c3.3-42.1,32.2-71.4,56-71.4s52.7,29.3,56,71.4c.7,8.6-10.8,11.9-14.9,4.5l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.8,7.9-31.5,21.6l-9.5,17C122.8,219.3,111.3,215.9,112,207.4ZM398.9,306A144.12,144.12,0,0,1,256,432H240A144.12,144.12,0,0,1,97.1,306a16.06,16.06,0,0,1,14-17.88A15,15,0,0,1,113,288H383a16,16,0,0,1,16,16A16.64,16.64,0,0,1,398.9,306Z", "M384,207.4c-3.3-42.1-32.2-71.4-56-71.4s-52.7,29.3-56,71.4c-.7,8.6,10.9,11.9,15.1,4.5l9.5-17c7.7-13.7,19.2-21.6,31.5-21.6s23.8,7.9,31.5,21.6l9.5,17C373.2,219.3,384.7,216,384,207.4ZM168,136c-23.8,0-52.7,29.3-56,71.4-.7,8.5,10.8,11.9,15.1,4.5l9.5-17c7.7-13.7,19.2-21.6,31.5-21.6s23.8,7.9,31.5,21.6l9.5,17c4.1,7.4,15.6,4.1,14.9-4.5C220.7,165.3,191.8,136,168,136Z"]]
};
exports.faLaughBeam = faLaughBeam;
var faLaughSquint = {
  prefix: 'fad',
  iconName: 'laugh-squint',
  icon: [496, 512, [], "f59b", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8Zm33.8,161.7,80-48c11.6-6.9,24,7.7,15.4,18L343.6,180l33.6,40.3c8.7,10.4-3.9,24.8-15.4,18l-80-48a12.07,12.07,0,0,1,0-20.6Zm-147.6-48,80,48a12,12,0,0,1,0,20.6l-80,48c-11.5,6.8-24-7.6-15.4-18L152.4,180l-33.6-40.3C110.2,129.4,122.6,114.8,134.2,121.7ZM398.9,306A144.12,144.12,0,0,1,256,432H240A144.12,144.12,0,0,1,97.1,306a16.06,16.06,0,0,1,14-17.88A15,15,0,0,1,113,288H383a16,16,0,0,1,16,16A16.64,16.64,0,0,1,398.9,306Z", "M377.2,220.3,343.6,180l33.6-40.3c8.6-10.3-3.8-24.9-15.4-18l-80,48a12.07,12.07,0,0,0,0,20.6l80,48C373.3,245.1,385.9,230.7,377.2,220.3Zm-163-50.6-80-48c-11.6-6.9-24,7.7-15.4,18L152.4,180l-33.6,40.3c-8.6,10.4,3.9,24.8,15.4,18l80-48a12,12,0,0,0,0-20.6Z"]]
};
exports.faLaughSquint = faLaughSquint;
var faLaughWink = {
  prefix: 'fad',
  iconName: 'laugh-wink',
  icon: [496, 512, [], "f59c", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8Zm20.1,198.1c4-25.2,34.2-42.1,59.9-42.1s55.9,16.9,59.9,42.1c1.7,11.1-11.4,18.3-19.8,10.8l-9.5-8.5c-14.8-13.2-46.2-13.2-61,0L288,217a12.08,12.08,0,0,1-19.9-10.9ZM168,160a32,32,0,1,1-32,32A32,32,0,0,1,168,160ZM398.9,306A144.12,144.12,0,0,1,256,432H240A144.12,144.12,0,0,1,97.1,306a16.06,16.06,0,0,1,14-17.88A15,15,0,0,1,113,288H383a16,16,0,0,1,16,16A16.64,16.64,0,0,1,398.9,306Z", "M387.9,206.1c-4-25.2-34.2-42.1-59.9-42.1s-55.9,16.9-59.9,42.1A12.08,12.08,0,0,0,288,217l9.6-8.6c14.8-13.2,46.2-13.2,61,0l9.5,8.5c8.4,7.5,21.5.3,19.8-10.8ZM168,160a32,32,0,1,0,32,32A32,32,0,0,0,168,160Z"]]
};
exports.faLaughWink = faLaughWink;
var faLayerGroup = {
  prefix: 'fad',
  iconName: 'layer-group',
  icon: [512, 512, [], "f5fd", ["M12.41 236.31L70.51 210l161.63 73.27a57.64 57.64 0 0 0 47.72 0L441.5 210l58.09 26.33c16.55 7.5 16.55 32.5 0 40L266.64 381.9a25.68 25.68 0 0 1-21.29 0L12.41 276.31c-16.55-7.5-16.55-32.5 0-40z", "M12.41 148l232.94 105.7a25.61 25.61 0 0 0 21.29 0L499.58 148c16.55-7.51 16.55-32.52 0-40L266.65 2.32a25.61 25.61 0 0 0-21.29 0L12.41 108c-16.55 7.5-16.55 32.52 0 40zm487.18 216.11l-57.87-26.23-161.86 73.37a57.64 57.64 0 0 1-47.72 0L70.29 337.88l-57.88 26.23c-16.55 7.5-16.55 32.5 0 40L245.35 509.7a25.68 25.68 0 0 0 21.29 0l233-105.59c16.5-7.5 16.5-32.5-.05-40z"]]
};
exports.faLayerGroup = faLayerGroup;
var faLayerMinus = {
  prefix: 'fad',
  iconName: 'layer-minus',
  icon: [512, 512, [], "f5fe", ["M12.41 236.3l233-105.58a25.68 25.68 0 0 1 21.29 0L499.59 236.3c16.55 7.5 16.55 32.5 0 40L266.64 381.89a25.68 25.68 0 0 1-21.29 0L12.41 276.3c-16.55-7.5-16.55-32.5 0-40z", "M499.59 364.1l-58.09-26.33L279.87 411a57.64 57.64 0 0 1-47.72 0L70.51 337.77l-58.1 26.33c-16.55 7.5-16.55 32.5 0 40l232.94 105.59a25.68 25.68 0 0 0 21.29 0l233-105.59c16.5-7.5 16.5-32.5-.05-40zM304 64h192a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16H304a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16z"]]
};
exports.faLayerMinus = faLayerMinus;
var faLayerPlus = {
  prefix: 'fad',
  iconName: 'layer-plus',
  icon: [512, 512, [], "f5ff", ["M400 288c16.73 0 32.68-2.91 48-7.29v18.58l-181.36 82.2a25.68 25.68 0 0 1-21.29 0L12.41 275.9c-16.55-7.5-16.55-32.5 0-40l213.87-97C239.28 223.32 312 288 400 288z", "M499.59 364.1l-58.54-26.53-161.19 73.06a57.64 57.64 0 0 1-47.72 0L71 337.57 12.41 364.1c-16.55 7.5-16.55 32.5 0 40l232.94 105.59a25.68 25.68 0 0 0 21.29 0l233-105.59c16.5-7.5 16.5-32.5-.05-40zM304 144h64v64a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-64h64a16 16 0 0 0 16-16V96a16 16 0 0 0-16-16h-64V16a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v64h-64a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16z"]]
};
exports.faLayerPlus = faLayerPlus;
var faLeaf = {
  prefix: 'fad',
  iconName: 'leaf',
  icon: [576, 512, [], "f06c", ["M576 154.31c0 172.38-110.51 313.17-267.53 324.57A199 199 0 0 1 288 480v-.55h-.25a191.66 191.66 0 0 1-165.63-95.07l.77-.85c29.58-32.23 62.28-57.84 97.18-76.12a297.55 297.55 0 0 1 139.4-34.05 24.69 24.69 0 0 0 0-49.37 345.79 345.79 0 0 0-162.94 40.1c-33.77 17.81-65.56 41.48-94.77 70.49A192.06 192.06 0 0 1 96 287.72C96 181.83 181.86 96 287.77 96H368c63.4 0 118.91-33.59 149.91-87.49 6.7-11.8 22.71-11.3 28.31 1.2C565.2 52.12 576 104.11 576 154.31z", "M24.5 512a24.32 24.32 0 0 1-9.5-1.95 24.73 24.73 0 0 1-13-32.3c1.08-2.6 27.24-64.33 83.81-126.43 33.47-36.75 70.75-66.09 110.81-87.22A345.79 345.79 0 0 1 359.49 224a24.69 24.69 0 0 1 0 49.37 297.55 297.55 0 0 0-139.4 34.05c-34.9 18.28-67.6 43.89-97.18 76.12-51.25 55.85-75.58 112.83-75.82 113.4A24.54 24.54 0 0 1 24.5 512z"]]
};
exports.faLeaf = faLeaf;
var faLeafHeart = {
  prefix: 'fad',
  iconName: 'leaf-heart',
  icon: [576, 512, [], "f4cb", ["M546.2 9.72c-5.6-12.5-21.61-13-28.31-1.2C486.89 62.42 431.38 96 368 96h-80.25C181.86 96 96 181.83 96 287.72a192.06 192.06 0 0 0 5.78 46.87q-8.16 8.1-16 16.73C29.17 413.42 3 475.15 1.93 477.75A24.73 24.73 0 0 0 15 510.05a24.41 24.41 0 0 0 32.11-13.11c.24-.57 24.33-57 75.05-112.55a191.66 191.66 0 0 0 165.63 95.07h.21v.54a199 199 0 0 0 20.45-1.12C465.49 467.48 576 326.69 576 154.31c0-50.2-10.8-102.19-29.8-144.59zm-115.65 284.7L345.85 380a13.94 13.94 0 0 1-19.8 0l-84.7-85.6a60.65 60.65 0 0 1 4.3-89.1c24-20 59.6-16.4 81.6 5.8l8.6 8.7 8.6-8.7c22-22.2 57.7-25.8 81.6-5.8a60.58 60.58 0 0 1 4.5 89.12z", "M245.65 205.32c24-20 59.6-16.4 81.6 5.8l8.6 8.7 8.6-8.7c22-22.2 57.7-25.8 81.6-5.8a60.58 60.58 0 0 1 4.5 89.1L345.85 380a13.94 13.94 0 0 1-19.8 0l-84.7-85.6a60.65 60.65 0 0 1 4.3-89.08z"]]
};
exports.faLeafHeart = faLeafHeart;
var faLeafMaple = {
  prefix: 'fad',
  iconName: 'leaf-maple',
  icon: [512, 512, [], "f6f6", ["M504 195.56l-140.83 89.59L428 268.57a17.33 17.33 0 0 1 20.57 21.12l-13.8 25.72 51.31 45.3a17.34 17.34 0 0 1 0 27.07l-51.31 45.3 13.8 25.72A17.33 17.33 0 0 1 428 479.92l-160.19-33L251.94 484c-6 14-25.86 14-31.88 0l-49.14-108 141.86-141.91a24.65 24.65 0 1 0-34.86-34.87L136.06 341.1 28 291.94c-14-6-14-25.87 0-31.87l37.08-15.89L32.08 84a17.34 17.34 0 0 1 21.13-20.59l25.73 13.81 45.3-51.33a17.33 17.33 0 0 1 27.06 0l45.3 51.33 25.73-13.82A17.33 17.33 0 0 1 243.45 84l-16.58 64.84L316.46 8a17.35 17.35 0 0 1 29.5.39l22.33 37.23 88.77-9.86a17.34 17.34 0 0 1 19.15 19.14l-9.87 88.78 37.24 22.34a17.35 17.35 0 0 1 .42 29.54z", "M24.67 512a24.61 24.61 0 0 1-17.43-42l270.68-270.78a24.65 24.65 0 1 1 34.86 34.87L42.1 504.82A24.51 24.51 0 0 1 24.67 512z"]]
};
exports.faLeafMaple = faLeafMaple;
var faLeafOak = {
  prefix: 'fad',
  iconName: 'leaf-oak',
  icon: [512, 512, [], "f6f7", ["M498.05 232.79c-6.27 6.76-14.7 11.71-22.66 16.65-12.63 7.82-25.7 14.94-39.93 23.13 5.51 6.72 9.75 11.65 13.73 16.77 22.23 28.61 16 59.63-15.4 77.62-22.74 13.04-47.07 11.64-71.79 8.47-12.84-1.65-25.76-2.69-42.31-4.38 4.27 6.14 6.24 8.58 7.78 11.27 14.94 26.1 4.3 55.32-24.64 63.17a80.79 80.79 0 0 1-37.58.86c-17.31-3.93-33.46-12.87-50.66-17.61-9.41-2.6-21-3.91-29.81-.72-16.38 6-42.38 15.09-68.62 2.7l196.62-196.63a24.65 24.65 0 1 0-34.86-34.87L81.31 395.87C68.88 369.61 78 343.58 84 327.19c3.19-8.77 1.88-20.4-.72-29.81-4.74-17.2-13.68-33.35-17.61-50.66a80.79 80.79 0 0 1 .86-37.58c7.85-28.94 37.07-39.58 63.17-24.64 2.69 1.54 5.13 3.51 11.27 7.78-1.69-16.55-2.73-29.47-4.38-42.31C133.4 125.28 132 101 145 78.21c18-31.36 49-37.63 77.62-15.4 5.12 4 10.05 8.22 16.77 13.73 8.19-14.23 15.31-27.3 23.13-39.93 4.94-8 9.89-16.39 16.65-22.66C303-8.1 338.37-3.38 357 23.6a75.46 75.46 0 0 1 7.36 12.47c3.19 7.33 11.8 10.35 19.56 8.06 33.07-9.76 57-2.91 71.5 12.43 15.34 14.49 22.18 38.43 12.43 71.5-2.29 7.76.73 16.37 8.06 19.56A75.46 75.46 0 0 1 488.4 155c26.98 18.63 31.7 54 9.65 77.79z", "M24.67 512a24.61 24.61 0 0 1-17.43-42l270.68-270.78a24.65 24.65 0 1 1 34.86 34.87L42.1 504.82A24.51 24.51 0 0 1 24.67 512z"]]
};
exports.faLeafOak = faLeafOak;
var faLemon = {
  prefix: 'fad',
  iconName: 'lemon',
  icon: [512, 512, [], "f094", ["M489 23C465.94-.13 434.65-5.93 414 6.13 355 40.44 232.7-46.95 92.87 92.88S40.44 355 6.13 413.94C-5.93 434.65-.13 465.94 23 489s54.39 28.89 75.1 16.83c58.9-34.27 181.2 53.17 321-86.7S471.56 157 505.87 98.06c12.06-20.71 6.26-52-16.87-75.06zM243.88 95.52c-58.19 14.55-133.81 90.16-148.36 148.36a16 16 0 0 1-31-7.76c17.38-69.69 101.8-154.19 171.6-171.64a16 16 0 0 1 7.76 31z", "M243.88 95.48c-58.19 14.55-133.81 90.16-148.36 148.36a16 16 0 0 1-31-7.76c17.38-69.65 101.8-154.15 171.6-171.6a16 16 0 0 1 7.76 31z"]]
};
exports.faLemon = faLemon;
var faLessThan = {
  prefix: 'fad',
  iconName: 'less-than',
  icon: [384, 512, [], "f536", ["M381 400.39l-13.56 29.08A32.09 32.09 0 0 1 324.79 445L18.48 302.16a32 32 0 0 1-18.48-29v-34.24a32 32 0 0 1 18.48-29L324.94 67a32 32 0 0 1 42.53 15.48l13.52 29A32 32 0 0 1 365.51 154L147 255.9l218.46 101.85A32.08 32.08 0 0 1 381 400.39z", ""]]
};
exports.faLessThan = faLessThan;
var faLessThanEqual = {
  prefix: 'fad',
  iconName: 'less-than-equal',
  icon: [448, 512, [], "f537", ["M24 400h400a24 24 0 0 1 24 24v48a24 24 0 0 1-24 24H24a24 24 0 0 1-24-24v-48a24 24 0 0 1 24-24z", "M392.77 107.69l-175.56 68.09 175.44 68.05c18.39 6 27.89 24.39 21.21 41l-12.09 30.08c-6.67 16.61-27 25.18-45.38 19.15L55 214.19c-13.79-4.52-23-16.61-23-30.19v-16c0-13.57 9.21-25.66 23-30.18l301.71-120c18.29-6 38.51 2.53 45.15 19.06l12 29.92c6.65 16.62-2.8 34.89-21.09 40.89z"]]
};
exports.faLessThanEqual = faLessThanEqual;
var faLevelDown = {
  prefix: 'fad',
  iconName: 'level-down',
  icon: [352, 512, [], "f149", ["M59.51 76.48l-56-56A12 12 0 0 1 12 0h196a24 24 0 0 1 24 24v348.71l-40 43.21-40-43.23V80H68a12 12 0 0 1-8.49-3.52z", "M345 367.28L209.09 504.87l-.09.13a24.08 24.08 0 0 1-33.95 0l-.14-.14L39 367.28a24.22 24.22 0 0 1 0-34l22-22.17a23.91 23.91 0 0 1 33.81-.11l.13.13c.21.21.42.43.62.65L192 415.92l96.45-104.21c.2-.22.41-.44.62-.65a23.92 23.92 0 0 1 33.82-.13l.12.13 22 22.17a24.22 24.22 0 0 1 0 34z"]]
};
exports.faLevelDown = faLevelDown;
var faLevelDownAlt = {
  prefix: 'fad',
  iconName: 'level-down-alt',
  icon: [320, 512, [], "f3be", ["M152 352V80H68a12 12 0 0 1-8.48-3.52l-56-56A12 12 0 0 1 12 0h196a24 24 0 0 1 24 24v328z", "M296 352c20.87 0 31.85 25 17.58 40.33l-104 112a24 24 0 0 1-33.91 1.26c-.44-.4-.86-.83-1.26-1.26l-104-112C56.25 377 67.07 352 88 352z"]]
};
exports.faLevelDownAlt = faLevelDownAlt;
var faLevelUp = {
  prefix: 'fad',
  iconName: 'level-up',
  icon: [352, 512, [], "f148", ["M68,432h84V139.31l40-43.23,40,43.21V488a24,24,0,0,1-24,24H12a12,12,0,0,1-8.48-20.48l56-56A12,12,0,0,1,68,432Z", "M345,178.76l-22,22.17a23.93,23.93,0,0,1-33.83.13l-.12-.13c-.21-.21-.42-.43-.62-.65L192,96.08,95.53,200.29c-.2.22-.41.44-.62.65a23.93,23.93,0,0,1-33.83.13.53.53,0,0,0-.13-.13L39,178.76a24.22,24.22,0,0,1,0-34L174.91,7.13a.93.93,0,0,0,.14-.14A24.1,24.1,0,0,1,209,7l.14.14L345,144.72a24.22,24.22,0,0,1,0,34Z"]]
};
exports.faLevelUp = faLevelUp;
var faLevelUpAlt = {
  prefix: 'fad',
  iconName: 'level-up-alt',
  icon: [320, 512, [], "f3bf", ["M232 160v328a24 24 0 0 1-24 24H12a12 12 0 0 1-8.48-20.48l56-56A12 12 0 0 1 68 432h84V160z", "M88 160c-20.94 0-31.76-25-17.6-40.33l104-112c.4-.43.82-.86 1.26-1.26a24 24 0 0 1 33.91 1.26l104 112C327.82 135 316.84 160 296 160z"]]
};
exports.faLevelUpAlt = faLevelUpAlt;
var faLifeRing = {
  prefix: 'fad',
  iconName: 'life-ring',
  icon: [512, 512, [], "f1cd", ["M292.08 167l-.41-.17zm-66.62-2a96.5 96.5 0 0 1 61.08 0l112-112a248 248 0 0 0-285 0zm68.67 2.92l.52.22zm2.49 1.12l.46.21zM186.25 322l-.19-.21zm-5.51-6.36l.21.26zm1.65 2c.12.14.23.28.35.41-.12-.15-.23-.29-.35-.43zm1.74 2l.36.4zm135.51-135.51l.4.36zM177.51 311.29l-.1-.15zM304.18 173l.34.19zm11.42 7.78l.26.21zm6.36 5.51l-.21-.19zm-3.96-3.55l-.42-.35zm-11.6-8.43l.47.29zm4.68 3.09l.17.12zm-2-1.35l-.43-.29zm-9.71-5.68l-.1-.05zm-123.61 32.91c.1-.14.19-.28.28-.42-.04.14-.18.28-.28.42zm-1.45 2.28l.29-.46zm-1.31 2.25l.19-.32zm-2.6 4.77zm10.38-16.18l.21-.26zm2-2.43c-.12.13-.23.27-.35.41.08-.14.19-.28.31-.38zm-5.33 6.89l.1-.15zm-8.2 14.07c-.07.14-.13.29-.2.43.03-.14.09-.29.16-.43zm5.39 92l-.29-.46zm-4.27-7.53v.05zm2.82 5.14l-.19-.32zm2.61 4.21c.1.14.19.28.28.42-.08-.17-.22-.31-.32-.45zm-6.8-12.11c.07.14.13.29.2.43-.06-.14-.12-.29-.2-.43zm-2-76.7c0 .13-.1.25-.16.38.07-.13.16-.25.16-.38zm1.09-2.58c-.07.17-.15.34-.22.5.13-.16.13-.33.23-.5zm-.22 76.78c.07.16.15.33.22.5-.09-.17-.09-.34-.21-.5zm-1-2.46c.06.13.11.25.16.38-.03-.13-.12-.25-.18-.38zm172-84.19l.19.32zM327.51 320l.36-.4zm-1.57 1.71l-.19.21zM325.75 190l.19.21zm3.51 128c.12-.13.23-.27.35-.41-.12.17-.23.31-.35.41zm2-121.63l-.21-.26zm0 119.2l-.21.26zm-1.65-121.22c-.12-.14-.23-.28-.35-.41.12.16.23.3.35.44zm-1.74-2l-.36-.4zm6.62 8.35l.1.15zm.1 110.43l-.1.15zM398.49 53q2 1.41 4 2.85-2-1.43-4-2.85zM343.9 294.64c.07-.17.15-.34.22-.5-.07.16-.12.33-.22.5zm1.09-2.58c.05-.13.1-.25.16-.38-.06.13-.15.25-.15.38zm-3.35 7.36v-.05zm-5.4 9.3l-.28.42zm1.45-2.28l-.29.46zm1.35-2.25l-.19.32zm3.75-7.12c.07-.14.13-.29.2-.43-.07.14-.13.29-.2.43zM449 100.21q-1.41-1.75-2.85-3.46 1.39 1.71 2.85 3.46zM445.49 96c-1-1.18-2-2.35-3-3.51 1 1.19 2.01 2.36 3 3.51zm6.87 8.5q-1.36-1.74-2.76-3.5 1.4 1.76 2.76 3.53zm3.36 4.44c-.91-1.23-1.83-2.44-2.75-3.65.92 1.24 1.84 2.45 2.75 3.71zm-119.48 94.34l-.28-.42zm66.76-147q1.85 1.36 3.66 2.76-1.78-1.39-3.66-2.76zm12.23 9.62q-1.72-1.44-3.47-2.85 1.77 1.41 3.5 2.85zM411 62.4q-1.74-1.4-3.51-2.77Q409.24 61 411 62.4zm8.5 7.13q-1.74-1.53-3.51-3 1.75 1.47 3.49 3zm-75.38 148.33c-.07-.16-.15-.33-.22-.5.1.17.15.34.22.5zM184.49 192l-.36.4zM343 215.36c-.07-.14-.13-.29-.2-.43.06.14.12.29.2.43zm113.16-105.8c1 1.31 1.9 2.62 2.84 3.94-.95-1.32-1.89-2.63-2.85-3.94zM337.4 205.1l.29.46zm82.53-135.18a248.82 248.82 0 0 1 22.14 22.15 250.17 250.17 0 0 0-22.14-22.15zm-74.78 150.4a6.15 6.15 0 0 1-.16-.38c.01.13.1.25.16.38zM459 398.49a248 248 0 0 0 0-285L347 225.46a96.5 96.5 0 0 1 0 61.08zM341.67 212.63zM220.33 345.15l-.41-.17zm-2.46-1l-.52-.22zm-5.3-2.49l.1.05zM322 325.75l-.21.19zM309.14 336l-.43.29zm2-1.35l.17-.12zm4.48-3.34l.26-.21zm4-3.39l.4-.36zm-1.6 1.39l-.42.35zM215.38 343l-.46-.21zm-19-11.74l-.26-.21zm-4-3.39l-.4-.36zm-6.3-137.62l.19-.21zm4 135.5l.21.19zm15.52 11.94l-.47-.29zm2.26 1.35l-.34-.19zm78.72 8a96.5 96.5 0 0 1-61.08 0L113.51 459a248 248 0 0 0 285 0zM202.86 336l.43.29zm-2-1.35l-.17-.12zM416 445.49q1.77-1.49 3.51-3-1.77 1.51-3.51 3zm43-47c-.93 1.33-1.88 2.64-2.84 3.95.95-1.31 1.9-2.62 2.84-3.95zM411.79 449q1.74-1.41 3.47-2.85-1.72 1.39-3.47 2.85zm-4.32 3.42q1.77-1.38 3.51-2.77-1.74 1.35-3.51 2.72zM455.72 403q-1.37 1.85-2.76 3.66 1.4-1.78 2.76-3.66zm-10.23 13c-1 1.18-2 2.35-3 3.51 1-1.19 2.01-2.36 3-3.51zm3.46-4.18q-1.41 1.74-2.85 3.47 1.44-1.75 2.9-3.5zm.65-.81q1.39-1.74 2.77-3.51-1.37 1.74-2.77 3.5zm-150.17-69.38a.31.31 0 0 1-.1.05.31.31 0 0 0 .1-.05zm-5.3 2.49l.52-.22zm12.31-6.43l.47-.29zm-9.82 5.31l.46-.21zm7.56-4l.34-.19zm137.9 80.89a248.94 248.94 0 0 1-22.15 22.15 248.94 248.94 0 0 0 22.15-22.11zm-39.63 36.21q-2 1.44-4 2.85 2.04-1.37 4-2.81zM292.08 345l-.41.17zM403 455.72q1.85-1.37 3.66-2.76-1.78 1.4-3.66 2.76zM194 329.26l.42.35zM69.93 92.07a248.82 248.82 0 0 1 22.14-22.15 250.17 250.17 0 0 0-22.14 22.15zm30.28-29q-1.74 1.41-3.47 2.85 1.73-1.46 3.47-2.87zm90 123l-.21.19zm4.13-3.67l-.42.35zM109.55 55.86q2-1.44 4-2.85-2.03 1.41-4 2.85zM196.14 181l.26-.21zM104.53 59.63Q102.76 61 101 62.4q1.76-1.4 3.53-2.77zm.78-.59q1.81-1.4 3.66-2.76-1.84 1.37-3.66 2.72zm87.05 125.09l-.4.36zm22.56-14.92l.46-.21zm-2.25 1.11l-.1.05zm4.68-2.22l.52-.22zm2.57-1.08l.41-.17zm-17.06 9l.43-.29zm5-3.09l-.34.19zm-7.11 4.56l.17-.12zm4.38-2.92l.47-.29zM96.74 446.1q1.73 1.44 3.47 2.85-1.74-1.41-3.47-2.85zm-33.69-34.31q1.41 1.74 2.85 3.47-1.44-1.72-2.85-3.47zm3.46 4.21c1 1.18 2 2.35 3 3.51-1-1.19-2.01-2.36-3-3.51zm-10.23-13q1.36 1.85 2.76 3.66-1.39-1.78-2.76-3.66zm3.35 4.44q1.37 1.8 2.77 3.56-1.4-1.76-2.77-3.53zm32.89 35q1.74 1.53 3.51 3-1.77-1.44-3.51-2.97zM105.31 453q1.81 1.4 3.66 2.76-1.84-1.4-3.66-2.76zm8.2 6q-2-1.41-4-2.85 2.01 1.43 4 2.85zM101 449.6q1.74 1.39 3.51 2.77-1.75-1.37-3.51-2.77zm-45.15-47.16c-1-1.31-1.9-2.62-2.84-3.95.99 1.33 1.88 2.64 2.84 3.95zM65.9 96.75q-1.44 1.71-2.85 3.46 1.41-1.75 2.85-3.46zM56.29 109c.9-1.23 1.82-2.45 2.74-3.65-.92 1.17-1.84 2.39-2.74 3.65zm6.11-8q-1.4 1.74-2.76 3.51Q61 102.76 62.4 101zm7.12-8.5c-1 1.16-2 2.33-3 3.51.98-1.16 1.99-2.33 3-3.49zm23-23q1.74-1.53 3.51-3-1.77 1.5-3.51 3.03zm-.45 372.55a248.94 248.94 0 0 1-22.15-22.15 248.94 248.94 0 0 0 22.15 22.18zM165 286.54a96.5 96.5 0 0 1 0-61.08L53 113.51a248 248 0 0 0 0 285zm-109.11-177q-1.44 2-2.84 3.93 1.36-1.95 2.8-3.9z", "M347 225.46l112-111.95A249.4 249.4 0 0 0 398.49 53L286.54 165A96.26 96.26 0 0 1 347 225.46zm-182 61.08l-112 112a249.4 249.4 0 0 0 60.5 60.5L225.46 347A96.26 96.26 0 0 1 165 286.54zm-112-173l112 112a96.26 96.26 0 0 1 60.5-60.5L113.51 53A249.4 249.4 0 0 0 53 113.51zM286.54 347l112 112a249.4 249.4 0 0 0 60.5-60.5L347 286.54A96.26 96.26 0 0 1 286.54 347z"]]
};
exports.faLifeRing = faLifeRing;
var faLightbulb = {
  prefix: 'fad',
  iconName: 'lightbulb',
  icon: [352, 512, [], "f0eb", ["M175.45 0C73.44.31 0 83 0 176a175 175 0 0 0 43.56 115.78c16.52 18.85 42.36 58.22 52.21 91.45 0 .26.07.52.11.78h160.24c0-.26.07-.51.11-.78 9.85-33.22 35.69-72.6 52.21-91.45A175.9 175.9 0 0 0 175.45 0zm.55 96a80.09 80.09 0 0 0-80 80 16 16 0 0 1-32 0A112.12 112.12 0 0 1 176 64a16 16 0 0 1 0 32z", "M96.06 454.35L96 416h160v38.35a32 32 0 0 1-5.41 17.65l-17.09 25.73A32 32 0 0 1 206.86 512h-61.71a32 32 0 0 1-26.64-14.28L101.42 472a32 32 0 0 1-5.36-17.65z"]]
};
exports.faLightbulb = faLightbulb;
var faLightbulbDollar = {
  prefix: 'fad',
  iconName: 'lightbulb-dollar',
  icon: [352, 512, [], "f670", ["M175.45 0C73.44.31 0 83 0 176a175 175 0 0 0 43.56 115.78c16.52 18.85 42.36 58.22 52.21 91.45 0 .26.07.52.11.78h160.24c0-.26.07-.51.11-.78 9.85-33.22 35.69-72.6 52.21-91.45A175.9 175.9 0 0 0 175.45 0zM192 255.88V272a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8v-16.29a57.26 57.26 0 0 1-31.37-11.35 8 8 0 0 1-.57-12.14L139.81 221a8.21 8.21 0 0 1 10.13-.73 24.08 24.08 0 0 0 12.82 3.73h28.11c6.5 0 11.8-5.92 11.8-13.19 0-5.95-3.61-11.19-8.77-12.73l-45-13.5c-18.59-5.58-31.58-23.42-31.58-43.39 0-24.52 19.05-44.44 42.67-45.07V80a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16.29a57.18 57.18 0 0 1 31.37 11.35 8 8 0 0 1 .57 12.14L212.18 131a8.21 8.21 0 0 1-10.13.73 24 24 0 0 0-12.82-3.73h-28.11c-6.5 0-11.8 5.92-11.8 13.19 0 5.95 3.61 11.19 8.77 12.73l45 13.5c18.59 5.58 31.58 23.42 31.58 43.39 0 24.53-19.05 44.44-42.67 45.07z", "M96 416v38.35a32 32 0 0 0 5.42 17.65l17.09 25.69A32 32 0 0 0 145.15 512h61.71a32 32 0 0 0 26.64-14.28L250.59 472a32 32 0 0 0 5.41-17.65V416zm52.9-231.42l45 13.5c5.16 1.54 8.77 6.78 8.77 12.73 0 7.27-5.3 13.19-11.8 13.19h-28.11a24.08 24.08 0 0 1-12.82-3.72 8.21 8.21 0 0 0-10.13.73l-11.75 11.21a8 8 0 0 0 .57 12.14A57.26 57.26 0 0 0 160 255.71V272a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-16.12c23.62-.63 42.67-20.54 42.67-45.07 0-20-13-37.81-31.58-43.39l-45-13.5c-5.16-1.54-8.77-6.78-8.77-12.73 0-7.27 5.3-13.19 11.8-13.19h28.11a24 24 0 0 1 12.82 3.72 8.21 8.21 0 0 0 10.13-.73l11.75-11.21a8 8 0 0 0-.57-12.14A57.18 57.18 0 0 0 192 96.29V80a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v16.12c-23.62.63-42.67 20.55-42.67 45.07-.01 19.97 12.98 37.81 31.57 43.39z"]]
};
exports.faLightbulbDollar = faLightbulbDollar;
var faLightbulbExclamation = {
  prefix: 'fad',
  iconName: 'lightbulb-exclamation',
  icon: [352, 512, [], "f671", ["M175.45 0C73.44.31 0 83 0 176a175 175 0 0 0 43.56 115.78c16.52 18.85 42.36 58.22 52.21 91.45 0 .26.07.52.11.78h160.24c0-.26.07-.51.11-.78 9.85-33.22 35.69-72.6 52.21-91.45A175.9 175.9 0 0 0 175.45 0zm.55 320a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm38.24-238.41l-12.8 128A16 16 0 0 1 185.52 224h-19a16 16 0 0 1-15.92-14.41l-12.8-128A16 16 0 0 1 153.68 64h44.64a16 16 0 0 1 15.92 17.59z", "M176 256a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm-25.44-46.41A16 16 0 0 0 166.48 224h19a16 16 0 0 0 15.92-14.41l12.8-128A16 16 0 0 0 198.32 64h-44.64a16 16 0 0 0-15.92 17.59zM96 416v38.35a32 32 0 0 0 5.42 17.65l17.09 25.69A32 32 0 0 0 145.15 512h61.71a32 32 0 0 0 26.64-14.28L250.59 472a32 32 0 0 0 5.41-17.65V416z"]]
};
exports.faLightbulbExclamation = faLightbulbExclamation;
var faLightbulbOn = {
  prefix: 'fad',
  iconName: 'lightbulb-on',
  icon: [640, 512, [], "f672", ["M319.45 0C217.44.31 144 83 144 176a175 175 0 0 0 43.56 115.78c16.52 18.85 42.36 58.23 52.21 91.45 0 .26.07.52.11.78h160.24c0-.26.07-.51.11-.78 9.85-33.22 35.69-72.6 52.21-91.45A175.9 175.9 0 0 0 319.45 0zm.55 96a80.09 80.09 0 0 0-80 80 16 16 0 0 1-32 0A112.12 112.12 0 0 1 320 64a16 16 0 0 1 0 32z", "M112.81 160H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h101.78a209.51 209.51 0 0 1-4.97-64zM40.73 67.71l80.88 46.69a203.27 203.27 0 0 1 28.12-57.66l-77-44.46a16 16 0 0 0-21.86 5.86l-16 27.71a16 16 0 0 0 5.86 21.86zm91 196l-91 52.55a16 16 0 0 0-5.86 21.86l16 27.71a16 16 0 0 0 21.86 5.86l94.42-54.51c-.88-1.06-1.83-2.27-2.64-3.18a207.68 207.68 0 0 1-32.76-50.26zm467.52 52.55l-91.49-52.82c-8.24 17.65-18.23 34.52-31.28 49.4-1.1 1.26-2.36 2.85-3.59 4.37l94.36 54.48a16 16 0 0 0 21.86-5.86l16-27.71a16 16 0 0 0-5.84-21.83zm0-248.58a16 16 0 0 0 5.86-21.86l-16-27.71a16 16 0 0 0-21.86-5.86l-77.08 44.5a207.31 207.31 0 0 1 28.46 57.47zM240.06 454.35a32 32 0 0 0 5.36 17.65l17.09 25.69A32 32 0 0 0 289.15 512h61.71a32 32 0 0 0 26.64-14.28L394.59 472a32 32 0 0 0 5.41-17.65V416H240zM624 160h-96.81c1.12 14.55 2.18 31.7-5.53 64H624a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z"]]
};
exports.faLightbulbOn = faLightbulbOn;
var faLightbulbSlash = {
  prefix: 'fad',
  iconName: 'lightbulb-slash',
  icon: [640, 512, [], "f673", ["M163.75 94.79C192.16 39.71 249 .2 319.45 0a175.9 175.9 0 0 1 133 291.78c-3.86 4.41-8.24 9.94-12.79 16.25l-197-152.29A80.16 80.16 0 0 1 320 96a16 16 0 1 0 0-32 112.16 112.16 0 0 0-104.22 71zm0 161.77a176 176 0 0 0 23.83 35.22c16.52 18.85 42.36 58.23 52.21 91.45 0 .26.07.52.11.78h88.74zM240 416v38.35a32 32 0 0 0 5.41 17.65l17.09 25.69A32 32 0 0 0 289.14 512h61.71a32 32 0 0 0 26.64-14.28L394.58 472a32 32 0 0 0 5.36-17.69V439.1L370 416z", "M3.37 31.45L23 6.18a16 16 0 0 1 22.47-2.81L633.82 458.1a16 16 0 0 1 2.82 22.45L617 505.82a16 16 0 0 1-22.46 2.81L6.18 53.9a16 16 0 0 1-2.81-22.45z"]]
};
exports.faLightbulbSlash = faLightbulbSlash;
var faLightsHoliday = {
  prefix: 'fad',
  iconName: 'lights-holiday',
  icon: [640, 512, [], "f7b2", ["M147 236.07c-14.66-5.5-69.17-20-93.77 45.56-18.61 49.62 13 129.22 26.53 134.28s89.65-34 108.3-83.71c26.17-69.79-34.06-93.46-41.06-96.13zm173 20c-15.67 0-71.8 5.54-71.8 75.59 0 53 57.6 116.41 72 116.41s72-63.3 72-116.41c.01-74.59-64.67-75.59-72.2-75.59zm266.8 25.59c-24.6-65.59-79.11-51.06-93.8-45.59-7 2.64-67.24 26.31-41.06 96.13 18.65 49.73 94.81 88.77 108.3 83.71s45.18-84.63 26.57-134.25z", "M632.59 121.75c-38.09 22.4-81.09 40-127 53l20.35 56.14a82.79 82.79 0 0 0-60.2 22.28l-23.15-63.82a701.58 701.58 0 0 1-90.4 9.8v63.37a82.78 82.78 0 0 0-64 0v-63.37a699.63 699.63 0 0 1-90.4-9.8l-23.14 63.82a85.87 85.87 0 0 0-27.47-17.1 84.92 84.92 0 0 0-32.73-5.21l20.35-56.14c-45.89-13-88.89-30.6-127-53-7.9-4.6-10.1-15.1-5.2-22.9l17.5-27.4a16 16 0 0 1 21.8-5.1C118 110.75 216 135.07 320 135.07s202-24.3 278.1-68.7a16 16 0 0 1 21.79 5.1l17.5 27.4c4.9 7.78 2.7 18.28-4.8 22.88z"]]
};
exports.faLightsHoliday = faLightsHoliday;
var faLineColumns = {
  prefix: 'fad',
  iconName: 'line-columns',
  icon: [512, 512, [], "f870", ["M496 288H304a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h192a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0 128H304a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h192a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-256H304a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h192a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-128H304a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h192a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z", "M208 288H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h192a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0 128H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h192a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-384H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h192a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zm0 128H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h192a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z"]]
};
exports.faLineColumns = faLineColumns;
var faLineHeight = {
  prefix: 'fad',
  iconName: 'line-height',
  icon: [640, 512, [], "f871", ["M626.29 224H269.71c-7.57 0-13.71 7.16-13.71 16v32c0 8.84 6.14 16 13.71 16h356.58c7.57 0 13.71-7.16 13.71-16v-32c0-8.84-6.14-16-13.71-16zm0 160H269.71c-7.57 0-13.71 7.16-13.71 16v32c0 8.84 6.14 16 13.71 16h356.58c7.57 0 13.71-7.16 13.71-16v-32c0-8.84-6.14-16-13.71-16zm0-320H269.71C262.14 64 256 71.16 256 80v32c0 8.84 6.14 16 13.71 16h356.58c7.57 0 13.71-7.16 13.71-16V80c0-8.84-6.14-16-13.71-16z", "M176 144c14.31 0 21.33-17.31 11.31-27.31l-80-80a16 16 0 0 0-22.62 0l-80 80C-4.64 126 .36 144 16 144h48v224H16c-14.29 0-21.31 17.31-11.29 27.31l80 80a16 16 0 0 0 22.62 0l80-80C196.64 386 191.64 368 176 368h-48V144z"]]
};
exports.faLineHeight = faLineHeight;
var faLink = {
  prefix: 'fad',
  iconName: 'link',
  icon: [512, 512, [], "f0c1", ["M44.45 252.59l37.11-37.1c9.84-9.84 26.78-3.3 27.29 10.6a184.45 184.45 0 0 0 9.69 52.72 16.08 16.08 0 0 1-3.78 16.61l-13.09 13.09c-28 28-28.9 73.66-1.15 102a72.07 72.07 0 0 0 102.32.51L270 343.79A72 72 0 0 0 270 242a75.64 75.64 0 0 0-10.34-8.57 16 16 0 0 1-6.95-12.6A39.86 39.86 0 0 1 264.45 191l21.06-21a16.06 16.06 0 0 1 20.58-1.74A152.05 152.05 0 0 1 327 400l-.36.37-67.2 67.2c-59.27 59.27-155.7 59.26-215 0s-59.26-155.72.01-214.98z", "M410.33 203.49c28-28 28.9-73.66 1.15-102a72.07 72.07 0 0 0-102.32-.49L242 168.21A72 72 0 0 0 242 270a75.64 75.64 0 0 0 10.34 8.57 16 16 0 0 1 6.94 12.6A39.81 39.81 0 0 1 247.55 321l-21.06 21.05a16.07 16.07 0 0 1-20.58 1.74A152.05 152.05 0 0 1 185 112l.36-.37 67.2-67.2c59.27-59.27 155.7-59.26 215 0s59.27 155.7 0 215l-37.11 37.1c-9.84 9.84-26.78 3.3-27.29-10.6a184.45 184.45 0 0 0-9.69-52.72 16.08 16.08 0 0 1 3.78-16.61z"]]
};
exports.faLink = faLink;
var faLips = {
  prefix: 'fad',
  iconName: 'lips',
  icon: [640, 512, [], "f600", ["M639.88 224a63 63 0 0 1-4.88 28.05C607 318.51 522.4 480 360.71 480h-81.43C117.59 480 33 318.51 5 252.06A62.88 62.88 0 0 1 .12 224H64s85.34 96 256 96 256-96 256-96z", "M.12 224a61.44 61.44 0 0 1 8.74-28.32C60.53 110 173.69 32 222.28 32c0 0 32.57 0 97.72 50 65.15-50 97.72-50 97.72-50 48.59 0 161.75 78 213.42 163.68a61.6 61.6 0 0 1 8.74 28.32H576s-64-32-160-32l-35.38 8.84A252.29 252.29 0 0 1 320 208a252.29 252.29 0 0 1-60.62-7.16L224 192c-96 0-160 32-160 32z"]]
};
exports.faLips = faLips;
var faLiraSign = {
  prefix: 'fad',
  iconName: 'lira-sign',
  icon: [384, 512, [], "f195", ["M0 232.82v41a11.71 11.71 0 0 0 .29 2.63 12 12 0 0 0 14.31 9.11l49.4-11V209L9.4 221.11A12 12 0 0 0 0 232.82zm0-96v41a11.71 11.71 0 0 0 .29 2.63 12 12 0 0 0 14.31 9.11l49.4-11V113L9.4 125.11A12 12 0 0 0 0 136.82zm287.71-61.24a12 12 0 0 0-14.31-9.12L144 95.22v65.56l134.6-29.88a12 12 0 0 0 9.4-11.72v-41a11.91 11.91 0 0 0-.29-2.6zm-14.31 86.88L144 191.22v65.56l134.6-29.89a12 12 0 0 0 9.4-11.71v-41a12 12 0 0 0-14.6-11.72z", "M64 468V44a12 12 0 0 1 12-12h56a12 12 0 0 1 12 12v372c86.18 0 168-48 168-148.75 0-6.34 5.64-11.25 12-11.25h48a12 12 0 0 1 12 12v.42C378.84 402.17 289.67 480 155.58 480H76a12 12 0 0 1-12-12z"]]
};
exports.faLiraSign = faLiraSign;
var faList = {
  prefix: 'fad',
  iconName: 'list',
  icon: [512, 512, [], "f03a", ["M496 384H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z", "M80 368H16a16 16 0 0 0-16 16v64a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16v-64a16 16 0 0 0-16-16zm0-320H16A16 16 0 0 0 0 64v64a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16V64a16 16 0 0 0-16-16zm0 160H16a16 16 0 0 0-16 16v64a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16v-64a16 16 0 0 0-16-16z"]]
};
exports.faList = faList;
var faListAlt = {
  prefix: 'fad',
  iconName: 'list-alt',
  icon: [512, 512, [], "f022", ["M464 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h416a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zM128 392a40 40 0 1 1 40-40 40 40 0 0 1-40 40zm0-96a40 40 0 1 1 40-40 40 40 0 0 1-40 40zm0-96a40 40 0 1 1 40-40 40 40 0 0 1-40 40zm288 168a12 12 0 0 1-12 12H204a12 12 0 0 1-12-12v-32a12 12 0 0 1 12-12h200a12 12 0 0 1 12 12zm0-96a12 12 0 0 1-12 12H204a12 12 0 0 1-12-12v-32a12 12 0 0 1 12-12h200a12 12 0 0 1 12 12zm0-96a12 12 0 0 1-12 12H204a12 12 0 0 1-12-12v-32a12 12 0 0 1 12-12h200a12 12 0 0 1 12 12z", "M128 200a40 40 0 1 0-40-40 40 40 0 0 0 40 40zm0 16a40 40 0 1 0 40 40 40 40 0 0 0-40-40zm0 96a40 40 0 1 0 40 40 40 40 0 0 0-40-40z"]]
};
exports.faListAlt = faListAlt;
var faListMusic = {
  prefix: 'fad',
  iconName: 'list-music',
  icon: [512, 512, [], "f8c9", ["M272 192H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h256a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-128H16A16 16 0 0 0 0 80v32a16 16 0 0 0 16 16h256a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zM144 320H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z", "M192 432c0 44.18 50.14 80 112 80s112-35.82 112-80V148.15l73-21.39a32 32 0 0 0 23-30.71V32a32 32 0 0 0-41.06-30.67l-96.53 28.51A32 32 0 0 0 352 60.34V360a148.76 148.76 0 0 0-48-8c-61.86 0-112 35.82-112 80z"]]
};
exports.faListMusic = faListMusic;
var faListOl = {
  prefix: 'fad',
  iconName: 'list-ol',
  icon: [512, 512, [], "f0cb", ["M496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z", "M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"]]
};
exports.faListOl = faListOl;
var faListUl = {
  prefix: 'fad',
  iconName: 'list-ul',
  icon: [512, 512, [], "f0ca", ["M496 384H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z", "M48 48a48 48 0 1 0 48 48 48 48 0 0 0-48-48zm0 160a48 48 0 1 0 48 48 48 48 0 0 0-48-48zm0 160a48 48 0 1 0 48 48 48 48 0 0 0-48-48z"]]
};
exports.faListUl = faListUl;
var faLocation = {
  prefix: 'fad',
  iconName: 'location',
  icon: [512, 512, [], "f601", ["M344 256a88 88 0 1 1-88-88 88 88 0 0 1 88 88z", "M496 224h-50.88A191.86 191.86 0 0 0 288 66.88V16a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v50.88A191.86 191.86 0 0 0 66.88 224H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h50.88A191.86 191.86 0 0 0 224 445.12V496a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-50.88A191.86 191.86 0 0 0 445.12 288H496a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM256 384a128 128 0 1 1 128-128 128 128 0 0 1-128 128z"]]
};
exports.faLocation = faLocation;
var faLocationArrow = {
  prefix: 'fad',
  iconName: 'location-arrow',
  icon: [512, 512, [], "f124", ["M461.91 0a45 45 0 0 0-17.4 3.52L28.73 195.42c-48 22.39-32 92.75 19.19 92.75h175.91v175.91c0 30 24.21 47.94 48.74 47.94 17.3 0 34.76-8.91 44-28.75L508.48 67.49C522.06 34.89 494.14 0 461.91 0zM303.83 320V208.17H192l207.67-95.85z", "M399.68 112.32L303.83 320V208.17H192l207.67-95.85"]]
};
exports.faLocationArrow = faLocationArrow;
var faLocationCircle = {
  prefix: 'fad',
  iconName: 'location-circle',
  icon: [496, 512, [], "f602", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8ZM358.24,177.74,262.29,385.63c-11.2,24-46.38,16-46.38-9.59V288H128c-25.59,0-33.58-35.18-9.59-46.38L326.3,145.71c19.15-8,39.94,12.84,31.94,32Z", "M118.36,241.7l207.89-95.95c19.2-8,40,12.8,32,32l-96,207.88c-11.2,24-46.38,16-46.38-9.59V288H128c-25.64,0-33.63-35.14-9.64-46.34Z"]]
};
exports.faLocationCircle = faLocationCircle;
var faLocationSlash = {
  prefix: 'fad',
  iconName: 'location-slash',
  icon: [640, 512, [], "f603", ["M189.36 115.58A191.34 191.34 0 0 1 288 66.88V16a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16v50.88A191.86 191.86 0 0 1 509.12 224H560a16 16 0 0 1 16 16v32a16 16 0 0 1-16 16h-50.88a190.53 190.53 0 0 1-20.3 59l-51.51-39.81A128 128 0 0 0 240.87 155.4zM320 384a127.93 127.93 0 0 1-125.55-103.7L121.61 224H80a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h50.88A191.86 191.86 0 0 0 288 445.12V496a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-50.88c14.07-2.37 27.35-6.75 40.19-12l-64.57-49.9c-2.57.16-5.01.78-7.62.78zm0-216a87.6 87.6 0 0 0-46 13l130.2 100.63A88 88 0 0 0 320 168z", "M3.37 32.45L23 7.18a16 16 0 0 1 22.47-2.81L633.82 459.1a16 16 0 0 1 2.82 22.45L617 506.82a16 16 0 0 1-22.46 2.81L6.18 54.9a16 16 0 0 1-2.81-22.45z"]]
};
exports.faLocationSlash = faLocationSlash;
var faLock = {
  prefix: 'fad',
  iconName: 'lock',
  icon: [448, 512, [], "f023", ["M152 224H72v-72C72 68.2 140.2 0 224 0s152 68.2 152 152v72h-80v-72a72 72 0 0 0-144 0z", "M448 272v192a48 48 0 0 1-48 48H48a48 48 0 0 1-48-48V272a48 48 0 0 1 48-48h352a48 48 0 0 1 48 48z"]]
};
exports.faLock = faLock;
var faLockAlt = {
  prefix: 'fad',
  iconName: 'lock-alt',
  icon: [448, 512, [], "f30d", ["M152 225H72v-72C72 69.2 140.2 1 224 1s152 68.2 152 152v72h-80v-72a72 72 0 0 0-144 0z", "M400 225H48a48 48 0 0 0-48 48v192a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V273a48 48 0 0 0-48-48zM264 392a40 40 0 0 1-80 0v-48a40 40 0 0 1 80 0z"]]
};
exports.faLockAlt = faLockAlt;
var faLockOpen = {
  prefix: 'fad',
  iconName: 'lock-open',
  icon: [576, 512, [], "f3c1", ["M576 152v80a23.94 23.94 0 0 1-24 24h-32a23.94 23.94 0 0 1-24-24v-80a72.11 72.11 0 0 0-72.7-72c-39.6.4-71.3 33.3-71.3 72.9V224h-80v-70.5C272 69.5 339.5.3 423.5 0S576 68 576 152z", "M448 272v192a48 48 0 0 1-48 48H48a48 48 0 0 1-48-48V272a48 48 0 0 1 48-48h352a48 48 0 0 1 48 48z"]]
};
exports.faLockOpen = faLockOpen;
var faLockOpenAlt = {
  prefix: 'fad',
  iconName: 'lock-open-alt',
  icon: [576, 512, [], "f3c2", ["M576 152v80a23.94 23.94 0 0 1-24 24h-32a23.94 23.94 0 0 1-24-24v-80a72.11 72.11 0 0 0-72.7-72c-39.6.4-71.3 33.3-71.3 72.9V224h-80v-70.5C272 69.5 339.5.3 423.5 0S576 68 576 152z", "M400 224H48a48 48 0 0 0-48 48v192a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V272a48 48 0 0 0-48-48zM264 392a40 40 0 0 1-80 0v-48a40 40 0 0 1 80 0z"]]
};
exports.faLockOpenAlt = faLockOpenAlt;
var faLongArrowAltDown = {
  prefix: 'fad',
  iconName: 'long-arrow-alt-down',
  icon: [256, 512, [], "f309", ["M168.11 44v301.94h-80V44a12 12 0 0 1 12-12h56a12 12 0 0 1 12 12z", "M231.17 386.94L145.08 473a24 24 0 0 1-33.94 0l-86.06-86.09c-15.12-15.12-4.41-41 17-41h172.09c21.38.03 32.09 25.88 17 41.03z"]]
};
exports.faLongArrowAltDown = faLongArrowAltDown;
var faLongArrowAltLeft = {
  prefix: 'fad',
  iconName: 'long-arrow-alt-left',
  icon: [448, 512, [], "f30a", ["M436.13 296H134.19v-80h301.94a12 12 0 0 1 12 12v56a12 12 0 0 1-12 12z", "M93.19 359.07L7.13 273a24 24 0 0 1 0-33.94L93.22 153c15.12-15.12 41-4.41 41 17v172.09c-.03 21.36-25.88 32.07-41.03 16.98z"]]
};
exports.faLongArrowAltLeft = faLongArrowAltLeft;
var faLongArrowAltRight = {
  prefix: 'fad',
  iconName: 'long-arrow-alt-right',
  icon: [448, 512, [], "f30b", ["M12.1 216H314v80H12.1a12 12 0 0 1-12-12v-56a12 12 0 0 1 12-12z", "M355 153l86.06 86.09a24 24 0 0 1 0 33.94L355 359.05c-15.12 15.12-41 4.41-41-17V170c0-21.42 25.89-32.13 41-17z"]]
};
exports.faLongArrowAltRight = faLongArrowAltRight;
var faLongArrowAltUp = {
  prefix: 'fad',
  iconName: 'long-arrow-alt-up',
  icon: [256, 512, [], "f30c", ["M88.12 468V166.09h80V468a12 12 0 0 1-12 12h-56a12 12 0 0 1-12-12z", "M25.06 125.09L111.15 39a24 24 0 0 1 33.94 0l86.06 86.09c15.12 15.12 4.41 41-17 41H42.06c-21.38 0-32.06-25.85-17-41z"]]
};
exports.faLongArrowAltUp = faLongArrowAltUp;
var faLongArrowDown = {
  prefix: 'fad',
  iconName: 'long-arrow-down',
  icon: [320, 512, [], "f175", ["M124 351.93V56a24 24 0 0 1 24-24h24a24 24 0 0 1 24 24v295.93l-36 35.67z", "M313 337.46L177.48 473l-.06.06a25.23 25.23 0 0 1-34.84 0l-.06-.06L7 337.46a24 24 0 0 1 0-33.94l17-17a24 24 0 0 1 33.94 0L160 387.6l102-101.08a24 24 0 0 1 33.94 0l17 17a24 24 0 0 1 .06 33.94z"]]
};
exports.faLongArrowDown = faLongArrowDown;
var faLongArrowLeft = {
  prefix: 'fad',
  iconName: 'long-arrow-left',
  icon: [448, 512, [], "f177", ["M128.09 220H424a24 24 0 0 1 24 24v24a24 24 0 0 1-24 24H128.09l-35.66-36z", "M142.56 409L7 273.5v-.06a25.23 25.23 0 0 1 0-34.84l.06-.06 135.5-135.49a24 24 0 0 1 33.94 0l17 17a24 24 0 0 1 0 33.94L92.43 256 193.5 358a24 24 0 0 1 0 33.94l-17 17a24 24 0 0 1-33.94.06z"]]
};
exports.faLongArrowLeft = faLongArrowLeft;
var faLongArrowRight = {
  prefix: 'fad',
  iconName: 'long-arrow-right',
  icon: [448, 512, [], "f178", ["M319.91 292H24a24 24 0 0 1-24-24v-24a24 24 0 0 1 24-24h295.91l35.66 36z", "M305.44 103.05L441 238.54l.06.06a25.23 25.23 0 0 1 0 34.84l-.06.06L305.44 409a24 24 0 0 1-33.94 0l-17-17a24 24 0 0 1 0-33.94L355.57 256 254.5 154a24 24 0 0 1 0-33.94l17-17a24 24 0 0 1 33.94-.01z"]]
};
exports.faLongArrowRight = faLongArrowRight;
var faLongArrowUp = {
  prefix: 'fad',
  iconName: 'long-arrow-up',
  icon: [320, 512, [], "f176", ["M196 160.11V456a24 24 0 0 1-24 24h-24a24 24 0 0 1-24-24V160.11l36-35.66z", "M7 174.58L142.52 39l.06-.06a25.23 25.23 0 0 1 34.84 0l.06.06L313 174.58a24 24 0 0 1 0 33.94l-17 17a24 24 0 0 1-33.94 0L160 124.45 58 225.52a24 24 0 0 1-33.94 0l-17-17A24 24 0 0 1 7 174.58z"]]
};
exports.faLongArrowUp = faLongArrowUp;
var faLoveseat = {
  prefix: 'fad',
  iconName: 'loveseat',
  icon: [512, 512, [], "f4cc", ["M160 288v-64a64.06 64.06 0 0 0-64-64H64a96 96 0 0 1 96-96h192a96 96 0 0 1 96 96h-32a64.06 64.06 0 0 0-64 64v64z", "M512 256a63.84 63.84 0 0 1-32 55.1V432a16 16 0 0 1-16 16h-64a16 16 0 0 1-16-16v-16H128v16a16 16 0 0 1-16 16H48a16 16 0 0 1-16-16V311.1A63.79 63.79 0 0 1 64 192h32a32 32 0 0 1 32 32v96h256v-96a32 32 0 0 1 32-32h32a64.06 64.06 0 0 1 64 64z"]]
};
exports.faLoveseat = faLoveseat;
var faLowVision = {
  prefix: 'fad',
  iconName: 'low-vision',
  icon: [576, 512, [], "f2a8", ["M320 192a32 32 0 0 0 60.57 14.41A105 105 0 0 1 372 319L256.19 155.91a105.27 105.27 0 0 1 81.4 7.52A32 32 0 0 0 320 192zm249.34 39.63C513 136 407.81 72 288 72a329.94 329.94 0 0 0-83.75 10.74l33.31 46.92A135.86 135.86 0 0 1 288 120a135.93 135.93 0 0 1 136 136 135.47 135.47 0 0 1-33.38 89.27l43.16 60.79a324.33 324.33 0 0 0 135.56-125.69A47.88 47.88 0 0 0 576 256a47.88 47.88 0 0 0-6.66-24.37zm-398.9-85.94L142.25 106A324.78 324.78 0 0 0 6.68 231.61a48 48 0 0 0 0 48.74 324.92 324.92 0 0 0 172.83 141.4L55.32 244.33a272.12 272.12 0 0 1 28.29-35.91L203 379l40.63 58a329.89 329.89 0 0 0 78.94 1.17l-190-271.4a277.74 277.74 0 0 1 37.87-21.08z", "M469.76 498.48l-13.11 9.18a24 24 0 0 1-33.43-5.9L100.34 46.94a24 24 0 0 1 5.9-33.42l13.11-9.18a24 24 0 0 1 33.43 5.9l322.88 454.82a24 24 0 0 1-5.9 33.42z"]]
};
exports.faLowVision = faLowVision;
var faLuchador = {
  prefix: 'fad',
  iconName: 'luchador',
  icon: [448, 512, [], "f455", ["M372 160h-68c-37.9 0-69.3 28.3-77.5 66.2-.9-.7-4.2-.7-5.1 0C213.3 188.3 182 160 144 160H76a12 12 0 0 0-12 12v30.7c0 47.1 35.8 85.3 80 85.3h22.4a177.85 177.85 0 0 0-15.8 32.9A63.87 63.87 0 0 0 96 384c0 35.5 29.4 64 64.9 64H287c35.5 0 64.9-28.5 64.9-64a63.87 63.87 0 0 0-54.6-63.1 174.87 174.87 0 0 0-15.8-32.9H304c44.2 0 80-38.2 80-85.3V172a12 12 0 0 0-12-12zM224 266.7c20.2 19.9 31.9 38.5 38.7 53.3h-77.4c6.8-14.8 18.5-33.4 38.7-53.3zM144 256c-26.5 0-48-23.9-48-53.3V192h48c26.5 0 48 23.9 48 53.3v7.47a3.19 3.19 0 0 1-.85 2.17 3.21 3.21 0 0 1-2.36 1zm144 96a32 32 0 0 1 0 64H160a32 32 0 0 1 0-64zm64-149.3c0 29.4-21.5 53.3-48 53.3h-44.77a3.21 3.21 0 0 1-2.36-1 3.19 3.19 0 0 1-.85-2.17v-7.53c0-29.4 21.5-53.3 48-53.3h48z", "M224 0C100.3 0 0 100.3 0 224v128a160 160 0 0 0 160 160h128a160 160 0 0 0 160-160V224C448 100.3 347.7 0 224 0zm160 202.7c0 47.1-35.8 85.3-80 85.3h-22.5a174.87 174.87 0 0 1 15.8 32.9 63.87 63.87 0 0 1 54.6 63.1c0 35.5-29.4 64-64.9 64H160.9c-35.5 0-64.9-28.5-64.9-64a63.87 63.87 0 0 1 54.6-63.1 177.85 177.85 0 0 1 15.8-32.9H144c-44.2 0-80-38.2-80-85.3V172a12 12 0 0 1 12-12h68c38 0 69.3 28.3 77.4 66.2.9-.7 4.2-.7 5.1 0 8.2-37.9 39.6-66.2 77.5-66.2h68a12 12 0 0 1 12 12z"]]
};
exports.faLuchador = faLuchador;
var faLuggageCart = {
  prefix: 'fad',
  iconName: 'luggage-cart',
  icon: [640, 512, [], "f59d", ["M480 48a48 48 0 0 0-48-48h-96a48 48 0 0 0-48 48v272h192zm-48 48h-96V48h96zm-240 32v160a32 32 0 0 0 32 32h32V96h-32a32 32 0 0 0-32 32zm352-32h-32v224h32a32 32 0 0 0 32-32V128a32 32 0 0 0-32-32zm-93.26 352a48 48 0 1 0 90.52 0zm-288 0a48 48 0 1 0 90.52 0z", "M624 384H128V16a16 16 0 0 0-16-16H16A16 16 0 0 0 0 16v32a16 16 0 0 0 16 16h48v368a16 16 0 0 0 16 16h544a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM288 96h-32v224h32zm224 0h-32v224h32z"]]
};
exports.faLuggageCart = faLuggageCart;
var faLungs = {
  prefix: 'fad',
  iconName: 'lungs',
  icon: [640, 512, [], "f604", ["M170.16 373.57L256 316.34v87.49c0 41.15-29.08 77.32-71.26 88.62l-59.5 15.95C62.48 525.22 0 481 0 419.78a114.68 114.68 0 0 1 3.89-29.63 821.31 821.31 0 0 1 102-231C128 124.56 142 96 186 96c38.64 0 70 29.42 70 65.71v60.11l-128 85.33a16 16 0 0 0-4.44 22.19l8.88 13.31a16 16 0 0 0 17.77 6.5 8 8 0 0 0 0 8.89l8.88 13.31a8 8 0 0 0 11.07 2.22zm466 16.58a821.31 821.31 0 0 0-102-231C512 124.56 498 96 454.05 96 415.36 96 384 125.42 384 161.71v60.11l128 85.33a16 16 0 0 1 4.44 22.19l-8.88 13.31a16 16 0 0 1-17.78 6.49 8 8 0 0 1 0 8.89l-8.88 13.31a8 8 0 0 1-11.08 2.22L384 316.34v87.49c0 41.15 29.08 77.31 71.26 88.62l59.5 15.95C577.52 525.22 640 481 640 419.78a114.68 114.68 0 0 0-3.89-29.63z", "M516.45 329.34l-8.88 13.31a16 16 0 0 1-22.19 4.44L320 236.84 154.63 347.09a16 16 0 0 1-22.19-4.44l-8.88-13.31a16 16 0 0 1 4.44-22.19L288.88 199.9a16 16 0 0 0 7.12-13.31V16a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v170.59a16 16 0 0 0 7.12 13.31L512 307.15a16 16 0 0 1 4.45 22.19z"]]
};
exports.faLungs = faLungs;
var faMace = {
  prefix: 'fad',
  iconName: 'mace',
  icon: [512, 512, [], "f6f8", ["M215.92 341.35l-166 166a16 16 0 0 1-22.63 0l-22.6-22.66a16 16 0 0 1 0-22.63l166-166a161.12 161.12 0 0 0 45.23 45.29z", "M501 195l-75-23.8a127.4 127.4 0 0 0-87.67-85.95L313.05 10.8C308.13-3.7 295.59-3.57 291 11l-23.8 75a127.43 127.43 0 0 0-86 87.67L106.8 199c-14.5 4.92-14.37 17.46.22 22.08l75 23.77a127.43 127.43 0 0 0 87.67 86l25.26 74.44c4.92 14.5 17.46 14.37 22.08-.22l23.77-75a127.4 127.4 0 0 0 85.95-87.67l74.44-25.26c14.51-5.01 14.38-17.55-.19-22.14zm-197 45a32 32 0 1 1 32-32 32 32 0 0 1-32 32z"]]
};
exports.faMace = faMace;
var faMagic = {
  prefix: 'fad',
  iconName: 'magic',
  icon: [512, 512, [], "f0d0", ["M80 0L53.34 53.33 0 80l53.34 26.67L80 160l26.66-53.33L160 80l-53.34-26.67zm192 48l-32-16-16-32-16 32-32 16 32 16 16 32 16-32zm186.66 293.33L432 288l-26.66 53.33L352 368l53.34 26.67L432 448l26.66-53.33L512 368zM399 243.07l86.6-86.55 17-17a32 32 0 0 0 0-45.26l-17-17-50.86-50.86-17-17a32 32 0 0 0-45.25 0l-17 17L269 112.94l-39.62 39.6 39.61 39.61 50.91 50.91 39.59 39.58zm-90.5-90.52L395.14 66l50.91 50.91-86.6 86.55z", "M359.44 282.64l-220 220a32 32 0 0 1-45.25 0L9.38 417.77a32 32 0 0 1 0-45.25l220-220z"]]
};
exports.faMagic = faMagic;
var faMagnet = {
  prefix: 'fad',
  iconName: 'magnet',
  icon: [512, 512, [], "f076", ["M476.1 20h-104a36 36 0 0 0-36 36v80a12 12 0 0 0 12 12h152a11.89 11.89 0 0 0 12-11.9V56a36 36 0 0 0-36-36zm-336.1.1H36a36 36 0 0 0-36 36v80a12 12 0 0 0 12 12h152.1a11.89 11.89 0 0 0 11.9-12v-80a36 36 0 0 0-36-36z", "M512 192.2c-.2 20.2-.6 40.4 0 53.2 0 150.7-134.5 246.7-255.1 246.7S.1 396.1.1 245.5c.6-13 .1-31.9 0-53.3a12 12 0 0 1 12-12.1h152a12 12 0 0 1 12 12v52c0 127.9 160 128.1 160 0v-52a12 12 0 0 1 12-12H500a12 12 0 0 1 12 12.1z"]]
};
exports.faMagnet = faMagnet;
var faMailBulk = {
  prefix: 'fad',
  iconName: 'mail-bulk',
  icon: [576, 512, [], "f674", ["M288 256H32a32 32 0 0 0-32 32v16c25.6 19.2 22.4 19.2 115.2 86.4 9.6 6.4 28.8 25.6 44.8 25.6s35.2-19.2 44.8-22.4c92.8-67.2 89.6-67.2 115.2-86.4V288a32 32 0 0 0-32-32zM160 448c-25.6 0-51.2-22.4-64-32-64-44.8-83.2-60.8-96-70.4V480a32 32 0 0 0 32 32h256a32 32 0 0 0 32-32V345.6c-12.8 9.6-32 25.6-96 70.4-12.8 9.6-38.4 32-64 32zm288-224v64h64v-64z", "M544 160H224a32 32 0 0 0-32 32v32h96a64.09 64.09 0 0 1 63.71 57.82l.29-.22V416h192a32 32 0 0 0 32-32V192a32 32 0 0 0-32-32zm-32 128h-64v-64h64zm-64-160V32a32 32 0 0 0-32-32H96a32 32 0 0 0-32 32v192h96v-32a64.07 64.07 0 0 1 64-64z"]]
};
exports.faMailBulk = faMailBulk;
var faMailbox = {
  prefix: 'fad',
  iconName: 'mailbox',
  icon: [576, 512, [], "f813", ["M432 64H144a144 144 0 0 1 144 144v208a32 32 0 0 1-32 32h288a32 32 0 0 0 32-32V208A144 144 0 0 0 432 64zm80 208a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-48h-56a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h104a16 16 0 0 1 16 16z", "M143.93 64C64.2 64 0 129.65 0 209.38V416a32 32 0 0 0 32 32h224a32 32 0 0 0 32-32V208A144 144 0 0 0 143.93 64zM224 240a16 16 0 0 1-16 16H80a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h128a16 16 0 0 1 16 16zm272-48H392a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h56v48a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-64a16 16 0 0 0-16-16z"]]
};
exports.faMailbox = faMailbox;
var faMale = {
  prefix: 'fad',
  iconName: 'male',
  icon: [192, 512, [], "f183", ["M32 64a64 64 0 1 1 64 64 64 64 0 0 1-64-64z", "M48 144h11.36a87.91 87.91 0 0 0 73.28 0H144a48 48 0 0 1 48 48v136a24 24 0 0 1-24 24h-16v136a24 24 0 0 1-24 24H64a24 24 0 0 1-24-24V352H24a24 24 0 0 1-24-24V192a48 48 0 0 1 48-48z"]]
};
exports.faMale = faMale;
var faMandolin = {
  prefix: 'fad',
  iconName: 'mandolin',
  icon: [512, 512, [], "f6f9", ["M278.63 278.63l-45.25-45.25 41.19-41.19C90.39 190.67 46 241 30.73 256.28c-46.8 46.79-39.51 150.36 17.54 207.45s160.66 64.34 207.45 17.53c15.28-15.26 65.6-59.64 64.08-243.8zM176 384a48 48 0 1 1 48-48 48 48 0 0 1-48 48z", "M509.56 70.48l-40.07 64a32 32 0 0 1-19.11 14L394.28 163 278.63 278.63l-45.25-45.25L349 117.74l14.51-56.12a32 32 0 0 1 14-19.11l64-40.07a16 16 0 0 1 19.81 2.25l46 46a16 16 0 0 1 2.24 19.79z"]]
};
exports.faMandolin = faMandolin;
var faMap = {
  prefix: 'fad',
  iconName: 'map',
  icon: [576, 512, [], "f279", ["M192 32l192 64v384l-192-64z", "M0 117.66V464a16 16 0 0 0 21.94 14.86L160 416V32L20.12 88A32 32 0 0 0 0 117.66zm554.06-84.5L416 96v384l139.88-55.95A32 32 0 0 0 576 394.34V48a16 16 0 0 0-21.94-14.84z"]]
};
exports.faMap = faMap;
var faMapMarked = {
  prefix: 'fad',
  iconName: 'map-marked',
  icon: [576, 512, [], "f59f", ["M288 359.67a47.78 47.78 0 0 1-36.51-17C231.83 319.51 210.92 293.09 192 266v182l192 64V266c-18.92 27.09-39.82 53.52-59.49 76.72A47.8 47.8 0 0 1 288 359.67zM20.12 216A32 32 0 0 0 0 245.66V496a16 16 0 0 0 21.94 14.86L160 448V214.92a302.84 302.84 0 0 1-21.25-46.42zm533.94-54.79L416 224v288l139.88-55.95A32 32 0 0 0 576 426.34V176a16 16 0 0 0-21.94-14.84z", "M414 126c0 56.26-82.35 158.8-113.9 196a15.77 15.77 0 0 1-24.2 0C244.35 284.8 162 182.26 162 126a126 126 0 0 1 252 0z"]]
};
exports.faMapMarked = faMapMarked;
var faMapMarkedAlt = {
  prefix: 'fad',
  iconName: 'map-marked-alt',
  icon: [576, 512, [], "f5a0", ["M554.06 161.16L416 224v288l139.88-55.95A32 32 0 0 0 576 426.34V176a16 16 0 0 0-21.94-14.84zM20.12 216A32 32 0 0 0 0 245.66V496a16 16 0 0 0 21.94 14.86L160 448V214.92a302.84 302.84 0 0 1-21.25-46.42zM288 359.67a47.78 47.78 0 0 1-36.51-17C231.83 319.51 210.92 293.09 192 266v182l192 64V266c-18.92 27.09-39.82 53.52-59.49 76.72A47.8 47.8 0 0 1 288 359.67z", "M288 0a126 126 0 0 0-126 126c0 56.26 82.35 158.8 113.9 196a15.77 15.77 0 0 0 24.2 0C331.65 284.8 414 182.26 414 126A126 126 0 0 0 288 0zm0 168a42 42 0 1 1 42-42 42 42 0 0 1-42 42z"]]
};
exports.faMapMarkedAlt = faMapMarkedAlt;
var faMapMarker = {
  prefix: 'fad',
  iconName: 'map-marker',
  icon: [384, 512, [], "f041", ["M384 192c0 77.41-27 99-172.27 309.67a24 24 0 0 1-39.46 0C27 291 0 269.41 0 192 0 86 86 0 192 0s192 86 192 192z", ""]]
};
exports.faMapMarker = faMapMarker;
var faMapMarkerAlt = {
  prefix: 'fad',
  iconName: 'map-marker-alt',
  icon: [384, 512, [], "f3c5", ["M192 0C86 0 0 86 0 192c0 77.41 27 99 172.27 309.67a24 24 0 0 0 39.46 0C357 291 384 269.41 384 192 384 86 298 0 192 0zm0 288a96 96 0 1 1 96-96 96 96 0 0 1-96 96z", "M192 256a64 64 0 1 1 64-64 64 64 0 0 1-64 64z"]]
};
exports.faMapMarkerAlt = faMapMarkerAlt;
var faMapMarkerAltSlash = {
  prefix: 'fad',
  iconName: 'map-marker-alt-slash',
  icon: [640, 512, [], "f605", ["M157.4 89.88A191.85 191.85 0 0 1 320 0c106 0 192 86 192 192 0 46.83-9.88 73.25-49.83 133.43l-79.06-61.1a96 96 0 1 0-149-115.17zM300.8 502.4a24 24 0 0 0 38.4 0c18.6-26.69 35.23-50.32 50.14-71.47L131.47 231.62c10.71 52.55 50.15 99.78 169.33 270.78zM320 128a64 64 0 0 0-59.84 41.3L357 244.18A64 64 0 0 0 320 128z", "M3.37 31.45L23 6.18a16 16 0 0 1 22.47-2.81L633.82 458.1a16 16 0 0 1 2.82 22.45L617 505.82a16 16 0 0 1-22.46 2.81L6.18 53.9a16 16 0 0 1-2.81-22.45z"]]
};
exports.faMapMarkerAltSlash = faMapMarkerAltSlash;
var faMapMarkerCheck = {
  prefix: 'fad',
  iconName: 'map-marker-check',
  icon: [384, 512, [], "f606", ["M192 0C86.4 0 0 86.4 0 192c0 76.8 25.6 99.2 172.8 310.4a24 24 0 0 0 38.4 0C358.4 291.2 384 268.8 384 192 384 86.4 297.6 0 192 0zm114.08 163.83l-131 130a11 11 0 0 1-15.55-.06l-75.76-76.34a11 11 0 0 1 .06-15.56l26-25.82a11 11 0 0 1 15.56.06l42.15 42.49 97.2-96.42a11 11 0 0 1 15.55.06l25.82 26a11 11 0 0 1-.03 15.59z", "M306.08 163.83l-131 130a11 11 0 0 1-15.55-.06l-75.76-76.34a11 11 0 0 1 .06-15.56l26-25.82a11 11 0 0 1 15.56.06l42.15 42.49 97.2-96.42a11 11 0 0 1 15.55.06l25.82 26a11 11 0 0 1-.03 15.59z"]]
};
exports.faMapMarkerCheck = faMapMarkerCheck;
var faMapMarkerEdit = {
  prefix: 'fad',
  iconName: 'map-marker-edit',
  icon: [384, 512, [], "f607", ["M192 0C86.4 0 0 86.4 0 192c0 76.8 25.6 99.2 172.8 310.4a24 24 0 0 0 38.4 0C358.4 291.2 384 268.8 384 192 384 86.4 297.6 0 192 0zm-43.17 283.15L106 288a9 9 0 0 1-10-9.95l4.8-42.83 85.54-85.54 48 48zm133.91-133.9l-28.26 28.26-48-48 28.26-28.26a18 18 0 0 1 25.41 0l22.57 22.57a18 18 0 0 1 .02 25.43z", "M282.74 123.84l-22.57-22.57a18 18 0 0 0-25.41 0l-28.26 28.26 48 48 28.26-28.26a18 18 0 0 0-.02-25.43zM100.85 235.17L96.05 278a9 9 0 0 0 9.95 10l42.83-4.8 85.54-85.54-48-48z"]]
};
exports.faMapMarkerEdit = faMapMarkerEdit;
var faMapMarkerExclamation = {
  prefix: 'fad',
  iconName: 'map-marker-exclamation',
  icon: [384, 512, [], "f608", ["M192 0C86.4 0 0 86.4 0 192c0 76.8 25.6 99.2 172.8 310.4a24 24 0 0 0 38.4 0C358.4 291.2 384 268.8 384 192 384 86.4 297.6 0 192 0zm0 336a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm38.24-238.41l-12.8 128A16 16 0 0 1 201.52 240h-19a16 16 0 0 1-15.92-14.41l-12.8-128A16 16 0 0 1 169.68 80h44.64a16 16 0 0 1 15.92 17.59z", "M192 272a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm22.32-192h-44.64a16 16 0 0 0-15.92 17.59l12.8 128A16 16 0 0 0 182.48 240h19a16 16 0 0 0 15.92-14.41l12.8-128A16 16 0 0 0 214.32 80z"]]
};
exports.faMapMarkerExclamation = faMapMarkerExclamation;
var faMapMarkerMinus = {
  prefix: 'fad',
  iconName: 'map-marker-minus',
  icon: [384, 512, [], "f609", ["M192 0C86.4 0 0 86.4 0 192c0 76.8 25.6 99.2 172.8 310.4a24 24 0 0 0 38.4 0C358.4 291.2 384 268.8 384 192 384 86.4 297.6 0 192 0zm112 200a16 16 0 0 1-16 16H96a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16h192a16 16 0 0 1 16 16z", "M304 184v16a16 16 0 0 1-16 16H96a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16h192a16 16 0 0 1 16 16z"]]
};
exports.faMapMarkerMinus = faMapMarkerMinus;
var faMapMarkerPlus = {
  prefix: 'fad',
  iconName: 'map-marker-plus',
  icon: [384, 512, [], "f60a", ["M192 0C86.4 0 0 86.4 0 192c0 76.8 25.6 99.2 172.8 310.4a24 24 0 0 0 38.4 0C358.4 291.2 384 268.8 384 192 384 86.4 297.6 0 192 0zm112 200a16 16 0 0 1-16 16h-72v72a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-72H96a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16h72V96a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v72h72a16 16 0 0 1 16 16z", "M304 200a16 16 0 0 1-16 16h-72v72a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-72H96a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16h72V96a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v72h72a16 16 0 0 1 16 16z"]]
};
exports.faMapMarkerPlus = faMapMarkerPlus;
var faMapMarkerQuestion = {
  prefix: 'fad',
  iconName: 'map-marker-question',
  icon: [384, 512, [], "f60b", ["M192 0C86.4 0 0 86.4 0 192c0 76.8 25.6 99.2 172.8 310.4a24 24 0 0 0 38.4 0C358.4 291.2 384 268.8 384 192 384 86.4 297.6 0 192 0zm0 352a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm26.67-113.27v1.43A15.84 15.84 0 0 1 202.83 256h-16.32a15.84 15.84 0 0 1-15.84-15.84V224A24.09 24.09 0 0 1 184 202.5c30.61-15.31 50.67-26.54 50.67-42.5 0-19.39-14-40-40-40a40.06 40.06 0 0 0-38.2 28.12C154.32 155 148.36 160 141.14 160H124.3a15.92 15.92 0 0 1-15.44-19.55A88.14 88.14 0 0 1 194.67 72c55.08 0 88 44.75 88 88 0 41-32.75 62.47-64 78.73z", "M192 288a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm2.67-216a88.14 88.14 0 0 0-85.81 68.45A15.92 15.92 0 0 0 124.3 160h16.84c7.22 0 13.18-5 15.33-11.88a40.06 40.06 0 0 1 38.2-28.12c26 0 40 20.61 40 40 0 16-20.06 27.19-50.67 42.5a24.09 24.09 0 0 0-13.33 21.5v16.16A15.84 15.84 0 0 0 186.51 256h16.32a15.84 15.84 0 0 0 15.84-15.84v-1.43c31.25-16.26 64-37.78 64-78.73 0-43.25-32.92-88-88-88z"]]
};
exports.faMapMarkerQuestion = faMapMarkerQuestion;
var faMapMarkerSlash = {
  prefix: 'fad',
  iconName: 'map-marker-slash',
  icon: [640, 512, [], "f60c", ["M157.4 89.88A191.85 191.85 0 0 1 320 0c106 0 192 86 192 192 0 46.83-9.88 73.25-49.83 133.43zM300.8 502.4a24 24 0 0 0 38.4 0c18.6-26.69 35.23-50.32 50.14-71.47L131.47 231.62c10.71 52.55 50.15 99.78 169.33 270.78z", "M3.37 31.45L23 6.18a16 16 0 0 1 22.47-2.81L633.82 458.1a16 16 0 0 1 2.82 22.45L617 505.82a16 16 0 0 1-22.46 2.81L6.18 53.9a16 16 0 0 1-2.81-22.45z"]]
};
exports.faMapMarkerSlash = faMapMarkerSlash;
var faMapMarkerSmile = {
  prefix: 'fad',
  iconName: 'map-marker-smile',
  icon: [384, 512, [], "f60d", ["M192 0C86.4 0 0 86.4 0 192c0 76.8 25.6 99.2 172.8 310.4a24 24 0 0 0 38.4 0C358.4 291.2 384 268.8 384 192 384 86.4 297.6 0 192 0zm64 117.16A26.84 26.84 0 1 1 229.16 144 26.84 26.84 0 0 1 256 117.16zm-128 0A26.84 26.84 0 1 1 101.16 144 26.84 26.84 0 0 1 128 117.16zm164.17 141a132.31 132.31 0 0 1-200.33 0 16 16 0 0 1 24.32-20.78 100.31 100.31 0 0 0 151.67 0 16 16 0 1 1 24.34 20.79z", "M256 170.84A26.84 26.84 0 1 0 229.16 144 26.84 26.84 0 0 0 256 170.84zm-128 0A26.84 26.84 0 1 0 101.16 144 26.84 26.84 0 0 0 128 170.84zm162.39 64.72a16 16 0 0 0-22.56 1.78 100.31 100.31 0 0 1-151.67 0 16 16 0 0 0-24.32 20.78 132.31 132.31 0 0 0 200.33 0 16 16 0 0 0-1.78-22.56z"]]
};
exports.faMapMarkerSmile = faMapMarkerSmile;
var faMapMarkerTimes = {
  prefix: 'fad',
  iconName: 'map-marker-times',
  icon: [384, 512, [], "f60e", ["M192 0C86.4 0 0 86.4 0 192c0 76.8 25.6 99.2 172.8 310.4a24 24 0 0 0 38.4 0C358.4 291.2 384 268.8 384 192 384 86.4 297.6 0 192 0zm84.85 242.91a16 16 0 0 1 0 22.63l-11.31 11.31a16 16 0 0 1-22.63 0L192 225.94l-50.91 50.91a16 16 0 0 1-22.63 0l-11.31-11.31a16 16 0 0 1 0-22.63L158.06 192l-50.91-50.91a16 16 0 0 1 0-22.63l11.31-11.31a16 16 0 0 1 22.63 0L192 158.06l50.91-50.91a16 16 0 0 1 22.63 0l11.31 11.31a16 16 0 0 1 0 22.63L225.94 192z", "M276.85 242.91a16 16 0 0 1 0 22.63l-11.31 11.31a16 16 0 0 1-22.63 0L192 225.94l-50.91 50.91a16 16 0 0 1-22.63 0l-11.31-11.31a16 16 0 0 1 0-22.63L158.06 192l-50.91-50.91a16 16 0 0 1 0-22.63l11.31-11.31a16 16 0 0 1 22.63 0L192 158.06l50.91-50.91a16 16 0 0 1 22.63 0l11.31 11.31a16 16 0 0 1 0 22.63L225.94 192z"]]
};
exports.faMapMarkerTimes = faMapMarkerTimes;
var faMapPin = {
  prefix: 'fad',
  iconName: 'map-pin',
  icon: [288, 512, [], "f276", ["M144 320a175.77 175.77 0 0 0 32-3.06v156.69l-22 33a12 12 0 0 1-20 0l-22-33V316.94a175.77 175.77 0 0 0 32 3.06z", "M144 0a144 144 0 1 0 144 144A144 144 0 0 0 144 0zm0 76a68.07 68.07 0 0 0-68 68 12 12 0 0 1-24 0 92.11 92.11 0 0 1 92-92 12 12 0 0 1 0 24z"]]
};
exports.faMapPin = faMapPin;
var faMapSigns = {
  prefix: 'fad',
  iconName: 'map-signs',
  icon: [512, 512, [], "f277", ["M224 496a16 16 0 0 0 16 16h32a15.88 15.88 0 0 0 5.71-1.07l.52-.19.1-.05a16.08 16.08 0 0 0 5-3.38A15.91 15.91 0 0 0 288 496V384h-64zM272 0h-32a16 16 0 0 0-16 16v16h64V16a16 16 0 0 0-16-16zm-48 224h64v-32h-64z", "M456 224H70.63A32 32 0 0 0 48 233.37L4.69 276.69a16 16 0 0 0 0 22.63L48 342.63A32 32 0 0 0 70.63 352H456a24 24 0 0 0 24-24v-80a24 24 0 0 0-24-24zm51.31-139.31L464 41.37A32 32 0 0 0 441.37 32H56a24 24 0 0 0-24 24v80a24 24 0 0 0 24 24h385.37a32 32 0 0 0 22.63-9.37l43.31-43.31a16 16 0 0 0 0-22.63z"]]
};
exports.faMapSigns = faMapSigns;
var faMarker = {
  prefix: 'fad',
  iconName: 'marker',
  icon: [512, 512, [], "f5a1", ["M169.36 214.63l128 128L222 418.05a327 327 0 0 1-195.34 93.8A24 24 0 0 1 .15 485.34v-.23A327 327 0 0 1 94 290z", "M485.5 154.53L320 320 192 192l98.48-98.47-19.6-19.59-87.15 87.15a16 16 0 0 1-22.63 0l-22.62-22.62a16 16 0 0 1 0-22.63L242.6 11.72a40 40 0 0 1 56.56 0l36.56 36.55 21.76-21.76a90.52 90.52 0 0 1 128 128z"]]
};
exports.faMarker = faMarker;
var faMars = {
  prefix: 'fad',
  iconName: 'mars',
  icon: [384, 512, [], "f222", ["M143.9 384a80 80 0 1 1 80-80 80 80 0 0 1-80 80z", "M371.9 64h-79a12 12 0 0 0-8.5 20.5l16.9 16.9-80.7 80.7a143.94 143.94 0 1 0 45.2 45.2l80.7-80.7 16.9 16.9a12 12 0 0 0 20.5-8.5V76a12 12 0 0 0-12-12zm-228 320a80 80 0 1 1 80-80 80 80 0 0 1-80 80z"]]
};
exports.faMars = faMars;
var faMarsDouble = {
  prefix: 'fad',
  iconName: 'mars-double',
  icon: [512, 512, [], "f227", ["M380.7 246l48.7-48.7-16.9-16.9a12 12 0 0 1 8.5-20.5h79a12.06 12.06 0 0 1 12 12.1v79a12 12 0 0 1-12.1 12 11.73 11.73 0 0 1-8.4-3.5l-16.9-16.9-48.7 48.7a144 144 0 1 1-265.1 91.8 174.49 174.49 0 0 0 63.3-18.4c-.1 1-.1 2.1-.1 3.2a80 80 0 1 0 80-80c-1 0-2.1.1-3.2.1a176.47 176.47 0 0 0 18.4-63.3 144.29 144.29 0 0 1 61.5 21.3z", "M340 0h-79a12 12 0 0 0-8.5 20.5l16.9 16.9-48.7 48.7a143.94 143.94 0 1 0 45.2 45.2l48.7-48.7 16.9 16.9A12 12 0 0 0 352 91V12a12 12 0 0 0-12-12zM144 288a80 80 0 1 1 80-80 80.11 80.11 0 0 1-80 80z"]]
};
exports.faMarsDouble = faMarsDouble;
var faMarsStroke = {
  prefix: 'fad',
  iconName: 'mars-stroke',
  icon: [384, 512, [], "f229", ["M144 384a80 80 0 1 1 80-80 80 80 0 0 1-80 80z", "M372 64h-79a12 12 0 0 0-8.5 20.5l16.9 16.9-17.5 17.5-14.1-14.1a12 12 0 0 0-17 0L224.5 133a12 12 0 0 0 0 17l14.1 14.1-18 18a143.3 143.3 0 0 0-76.7-22.1C64.5 160 0 224.5 0 304a144 144 0 1 0 265.9-76.7l18-18 14.1 14.1a12 12 0 0 0 17 0l28.3-28.3a12 12 0 0 0 0-17L329.2 164l17.5-17.5 16.9 16.9a12 12 0 0 0 20.5-8.5V76A12.19 12.19 0 0 0 372 64zM144 384a80 80 0 1 1 80-80 80 80 0 0 1-80 80z"]]
};
exports.faMarsStroke = faMarsStroke;
var faMarsStrokeH = {
  prefix: 'fad',
  iconName: 'mars-stroke-h',
  icon: [480, 512, [], "f22b", ["M200.54 312.58a80.06 80.06 0 1 1 0-113.2 80.09 80.09 0 0 1 0 113.2z", "M476.41 247.44l-56-55.93A12 12 0 0 0 399.9 200v24h-23.74v-20a12 12 0 0 0-12-12h-40a12 12 0 0 0-12 12v20h-27.69a144 144 0 1 0 0 64h27.63v20a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-20h23.93v23.91a12 12 0 0 0 20.52 8.51l55.95-55.93a12.12 12.12 0 0 0-.09-17.05zm-275.87 65.14a80.06 80.06 0 1 1 0-113.2 80.09 80.09 0 0 1 0 113.2z"]]
};
exports.faMarsStrokeH = faMarsStrokeH;
var faMarsStrokeV = {
  prefix: 'fad',
  iconName: 'mars-stroke-v',
  icon: [288, 512, [], "f22a", ["M200.58 408.27a80.12 80.12 0 1 1-.05-113.5l.05.05a80.45 80.45 0 0 1 0 113.45z", "M284.38 319.45a144.66 144.66 0 0 0-38.56-70.08A143 143 0 0 0 176 210.63v-25.45h20a12 12 0 0 0 12-12V133a12 12 0 0 0-12-12h-20V96.09h24a12 12 0 0 0 8.5-20.57l-55.89-56a12 12 0 0 0-17 0l-56 56.09A12 12 0 0 0 88.1 96.2h24V121h-20a12 12 0 0 0-12 12v40.13a12 12 0 0 0 12 12h20v25.45C34.52 228.34-14 305.76 3.62 383.56S98.42 510.07 176 492.37s126-95.13 108.38-172.92zm-83.8 88.82a80.12 80.12 0 1 1-.05-113.5l.05.05a80.45 80.45 0 0 1 0 113.45z"]]
};
exports.faMarsStrokeV = faMarsStrokeV;
var faMask = {
  prefix: 'fad',
  iconName: 'mask',
  icon: [640, 512, [], "f6fa", ["M320.67 64c-442.6 0-357.57 384-158.46 384 39.9 0 77.47-20.69 101.42-55.86l25.73-37.79c15.66-23 47-23 62.63 0l25.73 37.79C401.66 427.31 439.23 448 479.13 448 669 448 769.76 64 320.67 64zm-56.59 203.31c-12.32 15.4-39 41.05-80.08 41.05s-67.76-25.66-80.08-41.05a18.28 18.28 0 0 1 0-22.63c12.32-15.4 39-41.05 80.08-41.05s67.76 25.66 80.08 41.05a18.28 18.28 0 0 1 0 22.63zm272 0c-12.32 15.4-39 41.05-80.08 41.05s-67.76-25.66-80.08-41.05a18.28 18.28 0 0 1 0-22.63c12.32-15.4 39-41.05 80.08-41.05s67.76 25.66 80.08 41.05a18.28 18.28 0 0 1 0 22.63z", "M184 203.63c-41.08 0-67.76 25.65-80.08 41.05a18.28 18.28 0 0 0 0 22.63c12.32 15.39 39 41.05 80.08 41.05s67.76-25.65 80.08-41.05a18.28 18.28 0 0 0 0-22.63c-12.32-15.39-39-41.05-80.08-41.05zm352.08 41.05c-12.32-15.39-39-41.05-80.08-41.05s-67.76 25.65-80.08 41.05a18.28 18.28 0 0 0 0 22.63c12.32 15.39 39 41.05 80.08 41.05s67.76-25.65 80.08-41.05a18.28 18.28 0 0 0 0-22.63z"]]
};
exports.faMask = faMask;
var faMeat = {
  prefix: 'fad',
  iconName: 'meat',
  icon: [512, 512, [], "f814", ["M376.27 136.1c-14.72-14.71-34.57-18.64-44.42-8.87s-5.85 29.67 8.88 44.37 34.61 18.68 44.42 8.87 5.85-29.66-8.88-44.37zM128 312v-2.11l-8.51 8.5c-9.71 9.69-24 11.07-36.79 6a60.33 60.33 0 0 0-65 98.72c15.3 15.28 36.51 19.59 56.13 15.1-4.49 19.6-.18 40.83 15.11 56.1a60.36 60.36 0 0 0 98.83-65c-5.1-12.73-3.72-27 6-36.75l8.57-8.56H200a72 72 0 0 1-72-72z", "M444 68.52C399.41 24.05 345.07 0 299.13 0c-23.64 0-44.77 6.79-61.47 20a41.75 41.75 0 0 0-7.3 5.82C191.64 64.5 128.1 139.6 128.1 209.42v100.37l-.1.1V312a72 72 0 0 0 72 72h102.84c69.89 0 145.07-63.46 183.8-102.15a40.45 40.45 0 0 0 6.66-9c37.42-49.43 17.37-137.66-49.3-204.33zm8.73 179.39c-9.76 9.75-24.3 11.8-34.79 11.8-34.72 0-77.19-20.87-110.82-54.47-27.19-27.16-46.31-60.32-52.45-91-4.74-23.7-1.19-43.56 9.74-54.48C274.09 50.05 288.65 48 299.14 48c34.72 0 77.18 20.87 110.82 54.46 53.88 53.84 67 121.19 42.7 145.45z"]]
};
exports.faMeat = faMeat;
var faMedal = {
  prefix: 'fad',
  iconName: 'medal',
  icon: [512, 512, [], "f5a2", ["M127.18 0H16A16 16 0 0 0 2.92 25.18l111.27 159a207 207 0 0 1 109.56-53.39L154.62 15.54A32 32 0 0 0 127.18 0zM496 0H384.82a32 32 0 0 0-27.44 15.54l-69.13 115.21a207 207 0 0 1 109.56 53.38L509.08 25.18A16 16 0 0 0 496 0z", "M256 160a176 176 0 1 0 176 176 176 176 0 0 0-176-176zm92.52 157.26l-37.93 37 9 52.22a11.48 11.48 0 0 1-16.65 12.09L256 393.88l-46.9 24.65a11.48 11.48 0 0 1-16.65-12.09l9-52.22-37.93-37a11.49 11.49 0 0 1 6.35-19.59l52.4-7.63 23.43-47.52a11.5 11.5 0 0 1 20.61 0L289.74 290l52.43 7.64a11.49 11.49 0 0 1 6.35 19.62z"]]
};
exports.faMedal = faMedal;
var faMedkit = {
  prefix: 'fad',
  iconName: 'medkit',
  icon: [512, 512, [], "f0fa", ["M384 128v352h64V128zM64 480h64V128H64z", "M336 32H176a48 48 0 0 0-48 48v400h256V80a48 48 0 0 0-48-48zM192 96h128v32H192zm160 224a16 16 0 0 1-16 16h-48v48a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-48h-48a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h48v-48a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16v48h48a16 16 0 0 1 16 16zM0 176v256a48 48 0 0 0 48 48h16V128H48a48 48 0 0 0-48 48zm464-48h-16v352h16a48 48 0 0 0 48-48V176a48 48 0 0 0-48-48z"]]
};
exports.faMedkit = faMedkit;
var faMegaphone = {
  prefix: 'fad',
  iconName: 'megaphone',
  icon: [576, 512, [], "f675", ["M480 64L64 192v128l101.72 31.3a96 96 0 1 0 183.33 56.41L480 448zM256 432a48 48 0 0 1-44.27-66.54L303 393.55A48.07 48.07 0 0 1 256 432z", "M560 32h-32a16 16 0 0 0-16 16v416a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM32 160a32 32 0 0 0-32 32v128a32 32 0 0 0 64 0V192a32 32 0 0 0-32-32z"]]
};
exports.faMegaphone = faMegaphone;
var faMeh = {
  prefix: 'fad',
  iconName: 'meh',
  icon: [496, 512, [], "f11a", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8ZM168,176a32,32,0,1,1-32,32A32,32,0,0,1,168,176ZM344,368H152c-21.2,0-21.2-32,0-32H344C365.2,336,365.2,368,344,368ZM328,240a32,32,0,1,1,32-32A32,32,0,0,1,328,240Z", "M328,176a32,32,0,1,0,32,32A32,32,0,0,0,328,176Zm-160,0a32,32,0,1,0,32,32A32,32,0,0,0,168,176Z"]]
};
exports.faMeh = faMeh;
var faMehBlank = {
  prefix: 'fad',
  iconName: 'meh-blank',
  icon: [496, 512, [], "f5a4", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8ZM168,240a32,32,0,1,1,32-32A32,32,0,0,1,168,240Zm160,0a32,32,0,1,1,32-32A32,32,0,0,1,328,240Z", "M168,176a32,32,0,1,0,32,32A32,32,0,0,0,168,176Zm160,0a32,32,0,1,0,32,32A32,32,0,0,0,328,176Z"]]
};
exports.faMehBlank = faMehBlank;
var faMehRollingEyes = {
  prefix: 'fad',
  iconName: 'meh-rolling-eyes',
  icon: [496, 512, [], "f5a5", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8ZM88,224a64,64,0,1,1,64,64A64,64,0,0,1,88,224ZM312,400H184c-21.2,0-21.2-32,0-32H312C333.2,368,333.2,400,312,400Zm32-112a64,64,0,1,1,64-64A64,64,0,0,1,344,288Z", "M375,168a64,64,0,0,0-62,0,32,32,0,1,0,62,0Zm-223-8a63.66,63.66,0,0,0-31,8,32,32,0,1,0,62,0A63.66,63.66,0,0,0,152,160Z"]]
};
exports.faMehRollingEyes = faMehRollingEyes;
var faMemory = {
  prefix: 'fad',
  iconName: 'memory',
  icon: [640, 512, [], "f538", ["M640 130.94V96a32 32 0 0 0-32-32H32A32 32 0 0 0 0 96v34.94A47.86 47.86 0 0 1 32 176a47.86 47.86 0 0 1-32 45.06V320h640v-98.94a47.73 47.73 0 0 1 0-90.12zM224 256h-64V128h64zm128 0h-64V128h64zm128 0h-64V128h64z", "M224 128h-64v128h64zm128 0h-64v128h64zm128 0h-64v128h64zM0 352v96h64v-26.67a16 16 0 0 1 32 0V448h128v-26.67a16 16 0 1 1 32 0V448h128v-26.67a16 16 0 1 1 32 0V448h128v-26.67a16 16 0 1 1 32 0V448h64v-96z"]]
};
exports.faMemory = faMemory;
var faMenorah = {
  prefix: 'fad',
  iconName: 'menorah',
  icon: [640, 512, [], "f676", ["M480 64a32 32 0 0 0 64 0c0-17.67-32-64-32-64s-32 46.33-32 64zm-96 0a32 32 0 0 0 64 0c0-17.67-32-64-32-64s-32 46.33-32 64zM0 64a32 32 0 0 0 64 0C64 46.33 32 0 32 0S0 46.33 0 64zm288 0a32 32 0 0 0 64 0c0-17.67-32-64-32-64s-32 46.33-32 64zm-96 0a32 32 0 0 0 64 0c0-17.67-32-64-32-64s-32 46.33-32 64zm-96 0a32 32 0 0 0 64 0c0-17.67-32-64-32-64S96 46.33 96 64zM608 0s-32 46.33-32 64a32 32 0 0 0 64 0c0-17.67-32-64-32-64z", "M160 144a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v144h64zm288 0a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v144h64zm-192 0a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v144h64zm288 0a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v144h64zm80-16h-32a16 16 0 0 0-16 16v144a32 32 0 0 1-32 32H352V144a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v176H96a32 32 0 0 1-32-32V144a16 16 0 0 0-16-16H16a16 16 0 0 0-16 16v144a96 96 0 0 0 96 96h192v64H112a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H352v-64h192a96 96 0 0 0 96-96V144a16 16 0 0 0-16-16z"]]
};
exports.faMenorah = faMenorah;
var faMercury = {
  prefix: 'fad',
  iconName: 'mercury',
  icon: [288, 512, [], "f223", ["M143 288a80 80 0 1 1 80-80 80 80 0 0 1-80 80z", "M287 208a143.64 143.64 0 0 0-51.2-110.1c2.5-1.8 4.9-3.8 7.2-5.8 24.7-21.2 39.8-48.8 43.2-78.8A11.89 11.89 0 0 0 275.83.08a12.79 12.79 0 0 0-1.52-.08h-40.5A12 12 0 0 0 222 9.8c-2.4 12.5-9.6 24.3-20.69 33.8C186 56.8 165.32 64 143 64s-43-7.2-58.4-20.4C73.5 34.1 66.4 22.3 63.9 9.8A12 12 0 0 0 52.23 0h-40.5a11.88 11.88 0 0 0-12 11.76 13.08 13.08 0 0 0 .09 1.54C3.23 43.4 18.23 71 43 92.2c2.3 2 4.7 3.9 7.2 5.8A143.9 143.9 0 0 0 111 348.4V400H75a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h36v36a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-36h36a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12h-36v-51.6A144 144 0 0 0 287 208zm-144 80a80 80 0 1 1 80-80 80 80 0 0 1-80 80z"]]
};
exports.faMercury = faMercury;
var faMeteor = {
  prefix: 'fad',
  iconName: 'meteor',
  icon: [512, 512, [], "f753", ["M491.14.7C452.44 12.3 379.34 35 303.44 62c-2.1-7-4-13.5-5.6-18.6a16.06 16.06 0 0 0-20-10.69 16.6 16.6 0 0 0-2.86 1.19C232.54 56 122.14 116.5 60.54 176.4c-1.1 1-2.5 2-3.5 3C-19 255.5-19 378.87 57.09 455s199.48 76 275.55-.1c1-1 2-2.4 3-3.5C395.44 389.8 456 279.3 478.14 237a16.05 16.05 0 0 0-6.64-21.72 15.52 15.52 0 0 0-2.86-1.18c-5.2-1.6-11.6-3.5-18.6-5.6 27-76 49.7-149 61.3-187.7A16.17 16.17 0 0 0 491.14.7zM191.94 448a128 128 0 1 1 128-128 128 128 0 0 1-128 128z", "M191.94 192a128 128 0 1 0 128 128 128 128 0 0 0-128-128zm-32 128a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm48 64a16 16 0 1 1 16-16 16 16 0 0 1-16 16z"]]
};
exports.faMeteor = faMeteor;
var faMicrochip = {
  prefix: 'fad',
  iconName: 'microchip',
  icon: [512, 512, [], "f2db", ["M24 190v6H6a6 6 0 0 0-6 6v12a6 6 0 0 0 6 6h18v6a6 6 0 0 0 6 6h42v-48H30a6 6 0 0 0-6 6zm0-96v6H6a6 6 0 0 0-6 6v12a6 6 0 0 0 6 6h18v6a6 6 0 0 0 6 6h42V88H30a6 6 0 0 0-6 6zm482 6h-18v-6a6 6 0 0 0-6-6h-42v48h42a6 6 0 0 0 6-6v-6h18a6 6 0 0 0 6-6v-12a6 6 0 0 0-6-6zm0 192h-18v-6a6 6 0 0 0-6-6h-42v48h42a6 6 0 0 0 6-6v-6h18a6 6 0 0 0 6-6v-12a6 6 0 0 0-6-6zm0-96h-18v-6a6 6 0 0 0-6-6h-42v48h42a6 6 0 0 0 6-6v-6h18a6 6 0 0 0 6-6v-12a6 6 0 0 0-6-6zm0 192h-18v-6a6 6 0 0 0-6-6h-42v48h42a6 6 0 0 0 6-6v-6h18a6 6 0 0 0 6-6v-12a6 6 0 0 0-6-6zm-482-6v6H6a6 6 0 0 0-6 6v12a6 6 0 0 0 6 6h18v6a6 6 0 0 0 6 6h42v-48H30a6 6 0 0 0-6 6zm0-96v6H6a6 6 0 0 0-6 6v12a6 6 0 0 0 6 6h18v6a6 6 0 0 0 6 6h42v-48H30a6 6 0 0 0-6 6z", "M144 512a48 48 0 0 1-48-48V48a48 48 0 0 1 48-48h224a48 48 0 0 1 48 48v416a48 48 0 0 1-48 48z"]]
};
exports.faMicrochip = faMicrochip;
var faMicrophone = {
  prefix: 'fad',
  iconName: 'microphone',
  icon: [352, 512, [], "f130", ["M80 256V96a96 96 0 0 1 192 0v160a96 96 0 0 1-192 0z", "M352 256c0 88.9-66.29 162.47-152 174.23V464h56a16 16 0 0 1 16 16v16a16 16 0 0 1-16 16H96a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16h56v-34.15C64 417.71 0 337.8 0 248.16V208a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v42.3c0 66.81 48.71 126.59 115.21 133.08A128.15 128.15 0 0 0 304 256v-48a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16z"]]
};
exports.faMicrophone = faMicrophone;
var faMicrophoneAlt = {
  prefix: 'fad',
  iconName: 'microphone-alt',
  icon: [352, 512, [], "f3c9", ["M80 256V96a96 96 0 0 1 192 0h-85.33c-5.89 0-10.67 3.58-10.67 8v16c0 4.42 4.78 8 10.67 8H272v32h-85.33c-5.89 0-10.67 3.58-10.67 8v16c0 4.42 4.78 8 10.67 8H272v32h-85.33c-5.89 0-10.67 3.58-10.67 8v16c0 4.42 4.78 8 10.67 8H272a96 96 0 0 1-192 0z", "M186.67 128H272V96h-85.33c-5.89 0-10.67 3.58-10.67 8v16c0 4.42 4.78 8 10.67 8zm0 64H272v-32h-85.33c-5.89 0-10.67 3.58-10.67 8v16c0 4.42 4.78 8 10.67 8zM336 192h-16a16 16 0 0 0-16 16v48a128.15 128.15 0 0 1-140.79 127.38C96.71 376.89 48 317.11 48 250.3V208a16 16 0 0 0-16-16H16a16 16 0 0 0-16 16v40.16c0 89.64 64 169.55 152 181.69V464H96a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h160a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16h-56v-33.77C285.71 418.47 352 344.9 352 256v-48a16 16 0 0 0-16-16zm-149.33 64H272v-32h-85.33c-5.89 0-10.67 3.58-10.67 8v16c0 4.42 4.78 8 10.67 8z"]]
};
exports.faMicrophoneAlt = faMicrophoneAlt;
var faMicrophoneAltSlash = {
  prefix: 'fad',
  iconName: 'microphone-alt-slash',
  icon: [640, 512, [], "f539", ["M437.52 306.66A127.18 127.18 0 0 0 448 256v-48a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v48a174.64 174.64 0 0 1-19.69 80.76zm-26.38-20.46A95.78 95.78 0 0 0 416 256h-43.79zM400 464h-56v-33.78a175.69 175.69 0 0 0 34-8.08l-50.4-39c-6.71.4-13.41.87-20.35.2-55.85-5.45-98.74-48.63-111.18-101.85l-52-40.22v6.85c0 89.64 64 169.55 152 181.69V464H240a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h160a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16zm-69-240h85v-32h-85.33c-5.89 0-10.67-3.58-10.67-8v-16c0-4.42 4.78-8 10.67-8H416v-32h-85.33c-5.89 0-10.67-3.58-10.67-8v-16c0-4.42 4.78-8 10.67-8H416a96 96 0 0 0-192 0v45z", "M3.37 31.45L23 6.18a16 16 0 0 1 22.47-2.81L633.82 458.1a16 16 0 0 1 2.82 22.45L617 505.82a16 16 0 0 1-22.46 2.81L6.18 53.9a16 16 0 0 1-2.81-22.45z"]]
};
exports.faMicrophoneAltSlash = faMicrophoneAltSlash;
var faMicrophoneSlash = {
  prefix: 'fad',
  iconName: 'microphone-slash',
  icon: [640, 512, [], "f131", ["M436.61 306.45A127.25 127.25 0 0 0 447 256v-48a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v48a174.58 174.58 0 0 1-19.54 80.47zM399 464h-56v-33.78a175.69 175.69 0 0 0 34-8.08l-50.4-39c-6.71.4-13.41.87-20.35.2-55.85-5.45-98.74-48.63-111.18-101.85l-52-40.22v6.85c0 89.64 64 169.55 152 181.69V464H239a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h160a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16zm11.2-178a95.94 95.94 0 0 0 4.8-30V96a96 96 0 0 0-192 0v45.35z", "M2.37 31.45L22 6.18a16 16 0 0 1 22.47-2.81L632.82 458.1a16 16 0 0 1 2.82 22.45L616 505.82a16 16 0 0 1-22.46 2.81L5.18 53.9a16 16 0 0 1-2.81-22.45z"]]
};
exports.faMicrophoneSlash = faMicrophoneSlash;
var faMicrophoneStand = {
  prefix: 'fad',
  iconName: 'microphone-stand',
  icon: [512, 512, [], "f8cb", ["M6.73 423.18a26.67 26.67 0 0 0 1.08 36.57l44.44 44.44a26.67 26.67 0 0 0 36.57 1.07L344 280 232 168zM314.34 35.72l-22.62 22.62 161.94 161.94 22.62-22.63z", "M289.54 60.53c-23.84 23.84-34.56 55.55-33 86.77L364.7 255.44c31.21 1.58 62.93-9.14 86.77-33l2.19-2.18L291.72 58.34zm188.92-27a114.49 114.49 0 0 0-161.93 0l-2.19 2.18 161.94 161.94 2.18-2.18a114.49 114.49 0 0 0 0-161.93zM224 512h64V329.44l-64 56.49z"]]
};
exports.faMicrophoneStand = faMicrophoneStand;
var faMicroscope = {
  prefix: 'fad',
  iconName: 'microscope',
  icon: [512, 512, [], "f610", ["M104 384h208a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H104a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8z", "M464 448h-1.29A191 191 0 0 0 512 320c0-105.88-86.12-192-192-192v64a128 128 0 0 1 0 256H48a48 48 0 0 0-48 48 16 16 0 0 0 16 16h480a16 16 0 0 0 16-16 48 48 0 0 0-48-48zM160 320h12v16a16 16 0 0 0 16 16h40a16 16 0 0 0 16-16v-16h12a32 32 0 0 0 32-32V64a32 32 0 0 0-32-32V16a16 16 0 0 0-16-16h-64a16 16 0 0 0-16 16v16a32 32 0 0 0-32 32v224a32 32 0 0 0 32 32z"]]
};
exports.faMicroscope = faMicroscope;
var faMindShare = {
  prefix: 'fad',
  iconName: 'mind-share',
  icon: [640, 512, [], "f677", ["M467.14 118.15A59.61 59.61 0 0 0 408.47 45c-.71 0-1.36.18-2.07.21A60.14 60.14 0 0 0 288 60v324c12.64-57.14 64-102.33 122.42-110.89a124.7 124.7 0 0 1 18.64-1.11H480v-15.2a48.87 48.87 0 0 1 29-44.8c2.81-7.74 4.84-15.83 4.84-24.54a75 75 0 0 0-46.7-69.31zM256 60a60.14 60.14 0 0 0-118.4-14.79c-.7 0-1.36-.21-2.07-.21a60.12 60.12 0 0 0-60.23 60 59.46 59.46 0 0 0 1.56 13.16 75 75 0 0 0-46.74 69.34A74 74 0 0 0 38 220.23c-22.59 13-38 37-38 64.77a75 75 0 0 0 46.52 69.27A67.36 67.36 0 0 0 113 435a67 67 0 0 0 11.32-1.14A67.62 67.62 0 0 0 256 412.5z", "M635 364.21l-96 95.19c-10.12 10-27 2.6-27-12.21V400h-64c-65.85 0-69.27 68.95-60.28 95.52 3.77 11.13-8 20.9-17.82 14.38-35-23.3-56.08-67-48.29-113.67 7.84-46.92 46.39-84.56 93.45-91.46a113.79 113.79 0 0 1 17-.77H512v-47.19c0-14.82 16.88-22.23 27-12.21l96 95.19a17.38 17.38 0 0 1 0 24.42z"]]
};
exports.faMindShare = faMindShare;
var faMinus = {
  prefix: 'fad',
  iconName: 'minus',
  icon: [448, 512, [], "f068", ["M448 240v32a32 32 0 0 1-32 32H32a32 32 0 0 1-32-32v-32a32 32 0 0 1 32-32h384a32 32 0 0 1 32 32z", ""]]
};
exports.faMinus = faMinus;
var faMinusCircle = {
  prefix: 'fad',
  iconName: 'minus-circle',
  icon: [512, 512, [], "f056", ["M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276a12 12 0 0 1-12 12H124a12 12 0 0 1-12-12v-56a12 12 0 0 1 12-12h264a12 12 0 0 1 12 12z", "M400 284a12 12 0 0 1-12 12H124a12 12 0 0 1-12-12v-56a12 12 0 0 1 12-12h264a12 12 0 0 1 12 12z"]]
};
exports.faMinusCircle = faMinusCircle;
var faMinusHexagon = {
  prefix: 'fad',
  iconName: 'minus-hexagon',
  icon: [576, 512, [], "f307", ["M553.48 231.8l-112-192A48.11 48.11 0 0 0 400 16H176a48.11 48.11 0 0 0-41.5 23.8l-112 192a48.19 48.19 0 0 0 0 48.4l112 192A48.11 48.11 0 0 0 176 496h224a48.11 48.11 0 0 0 41.5-23.8l112-192a48.12 48.12 0 0 0 0-48.4zM432 284a12 12 0 0 1-12 12H156a12 12 0 0 1-12-12v-56a12 12 0 0 1 12-12h264a12 12 0 0 1 12 12z", "M432 228v56a12 12 0 0 1-12 12H156a12 12 0 0 1-12-12v-56a12 12 0 0 1 12-12h264a12 12 0 0 1 12 12z"]]
};
exports.faMinusHexagon = faMinusHexagon;
var faMinusOctagon = {
  prefix: 'fad',
  iconName: 'minus-octagon',
  icon: [512, 512, [], "f308", ["M497.9 150.5L361.4 14.1A48 48 0 0 0 327.5 0H184.4a48 48 0 0 0-33.9 14.1L14.1 150.6A48 48 0 0 0 0 184.5v143.1a48 48 0 0 0 14.1 33.9l136.5 136.4a48 48 0 0 0 33.9 14.1h143.1a48 48 0 0 0 33.9-14.1l136.4-136.5a48 48 0 0 0 14.1-33.9V184.4a48 48 0 0 0-14.1-33.9zM400 284a12 12 0 0 1-12 12H124a12 12 0 0 1-12-12v-56a12 12 0 0 1 12-12h264a12 12 0 0 1 12 12z", "M400 228v56a12 12 0 0 1-12 12H124a12 12 0 0 1-12-12v-56a12 12 0 0 1 12-12h264a12 12 0 0 1 12 12z"]]
};
exports.faMinusOctagon = faMinusOctagon;
var faMinusSquare = {
  prefix: 'fad',
  iconName: 'minus-square',
  icon: [448, 512, [], "f146", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-32 252a12 12 0 0 1-12 12H92a12 12 0 0 1-12-12v-56a12 12 0 0 1 12-12h264a12 12 0 0 1 12 12z", "M368 228v56a12 12 0 0 1-12 12H92a12 12 0 0 1-12-12v-56a12 12 0 0 1 12-12h264a12 12 0 0 1 12 12z"]]
};
exports.faMinusSquare = faMinusSquare;
var faMistletoe = {
  prefix: 'fad',
  iconName: 'mistletoe',
  icon: [576, 512, [], "f7b4", ["M554 394.1c-33.3 33.3-92.7 27.9-132.7-12.1-26-26-38.6-89.6-44.2-130.9l-65.2-65.2v96.3c28.4 32.7 72 89.2 72 127.3 0 56.6-43 102.4-96 102.4s-96-45.8-96-102.4c0-8.6 2.5-18.2 6.2-28.1a69.54 69.54 0 0 0 17.8 2.5 71.75 71.75 0 0 0 48-125.3v-72.8l-65.1 65.3c-.83 6.11-1.81 12.71-3 19.6a42.62 42.62 0 0 0-16 65.58c-6.46 18.72-14.75 35.26-25.2 45.72-40 40-99.4 45.4-132.7 12.1s-28-92.7 12-132.7c26-26 89.6-38.6 130.9-44.2l99.13-99.1V16a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v16.3a74.59 74.59 0 0 0-13.3 42.4 73.84 73.84 0 0 0 13.3 42.4l99.2 100.1c41.3 5.6 104.9 18.2 130.9 44.2 39.97 40 45.4 99.4 11.97 132.7z", "M373.23 32a42.65 42.65 0 1 0 42.7 42.6 42.68 42.68 0 0 0-42.7-42.6zm-160 235a42.65 42.65 0 1 0 42.7 42.6 42.68 42.68 0 0 0-42.7-42.6z"]]
};
exports.faMistletoe = faMistletoe;
var faMitten = {
  prefix: 'fad',
  iconName: 'mitten',
  icon: [448, 512, [], "f7b5", ["M368 416a16 16 0 0 1 16 16v64a16 16 0 0 1-16 16H48a16 16 0 0 1-16-16v-64a16 16 0 0 1 16-16z", "M433.12 297l-72.5 87h-309L3.72 176.42a144 144 0 0 1 107.9-172.7c77.4-17.9 154.8 30.5 172.8 108L314 240.12l20.9-25a63.94 63.94 0 1 1 98.2 81.9z"]]
};
exports.faMitten = faMitten;
var faMobile = {
  prefix: 'fad',
  iconName: 'mobile',
  icon: [320, 512, [], "f10b", ["M0 384v80a48 48 0 0 0 48 48h224a48 48 0 0 0 48-48v-80zm160 96a32 32 0 1 1 32-32 32 32 0 0 1-32 32z", "M0 384V48A48 48 0 0 1 48 0h224a48 48 0 0 1 48 48v336z"]]
};
exports.faMobile = faMobile;
var faMobileAlt = {
  prefix: 'fad',
  iconName: 'mobile-alt',
  icon: [320, 512, [], "f3cd", ["M272 0H48A48 48 0 0 0 0 48v416a48 48 0 0 0 48 48h224a48 48 0 0 0 48-48V48a48 48 0 0 0-48-48zM160 480a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm112-108a12 12 0 0 1-12 12H60a12 12 0 0 1-12-12V60a12 12 0 0 1 12-12h200a12 12 0 0 1 12 12z", "M272 372a12 12 0 0 1-12 12H60a12 12 0 0 1-12-12V60a12 12 0 0 1 12-12h200a12 12 0 0 1 12 12z"]]
};
exports.faMobileAlt = faMobileAlt;
var faMobileAndroid = {
  prefix: 'fad',
  iconName: 'mobile-android',
  icon: [320, 512, [], "f3ce", ["M0 384v80a48 48 0 0 0 48 48h224a48 48 0 0 0 48-48v-80zm208 68a12 12 0 0 1-12 12h-72a12 12 0 0 1-12-12v-8a12 12 0 0 1 12-12h72a12 12 0 0 1 12 12z", "M0 384V48A48 48 0 0 1 48 0h224a48 48 0 0 1 48 48v336z"]]
};
exports.faMobileAndroid = faMobileAndroid;
var faMobileAndroidAlt = {
  prefix: 'fad',
  iconName: 'mobile-android-alt',
  icon: [320, 512, [], "f3cf", ["M272 0H48A48 48 0 0 0 0 48v416a48 48 0 0 0 48 48h224a48 48 0 0 0 48-48V48a48 48 0 0 0-48-48zm-64 452a12 12 0 0 1-12 12h-72a12 12 0 0 1-12-12v-8a12 12 0 0 1 12-12h72a12 12 0 0 1 12 12zm64-80a12 12 0 0 1-12 12H60a12 12 0 0 1-12-12V60a12 12 0 0 1 12-12h200a12 12 0 0 1 12 12z", "M272 372a12 12 0 0 1-12 12H60a12 12 0 0 1-12-12V60a12 12 0 0 1 12-12h200a12 12 0 0 1 12 12z"]]
};
exports.faMobileAndroidAlt = faMobileAndroidAlt;
var faMoneyBill = {
  prefix: 'fad',
  iconName: 'money-bill',
  icon: [640, 512, [], "f0d6", ["M101.22 112A112.5 112.5 0 0 1 48 165.22v181.56A112.5 112.5 0 0 1 101.22 400h437.56A112.5 112.5 0 0 1 592 346.78V165.22A112.5 112.5 0 0 1 538.78 112zM320 352c-44.19 0-80-43-80-96s35.82-96 80-96 80 43 80 96-35.83 96-80 96z", "M616 64H24A24 24 0 0 0 0 88v336a24 24 0 0 0 24 24h592a24 24 0 0 0 24-24V88a24 24 0 0 0-24-24zm-24 282.78A112.5 112.5 0 0 0 538.78 400H101.22A112.5 112.5 0 0 0 48 346.78V165.22A112.5 112.5 0 0 0 101.22 112h437.56A112.5 112.5 0 0 0 592 165.22z"]]
};
exports.faMoneyBill = faMoneyBill;
var faMoneyBillAlt = {
  prefix: 'fad',
  iconName: 'money-bill-alt',
  icon: [640, 512, [], "f3d1", ["M101.22 112A112.5 112.5 0 0 1 48 165.22v181.56A112.5 112.5 0 0 1 101.22 400h437.56A112.5 112.5 0 0 1 592 346.78V165.22A112.5 112.5 0 0 1 538.78 112zM320 368c-53 0-96-50.16-96-112s43-112 96-112 96 50.14 96 112-43 112-96 112z", "M616 64H24A24 24 0 0 0 0 88v336a24 24 0 0 0 24 24h592a24 24 0 0 0 24-24V88a24 24 0 0 0-24-24zm-24 282.78A112.5 112.5 0 0 0 538.78 400H101.22A112.5 112.5 0 0 0 48 346.78V165.22A112.5 112.5 0 0 0 101.22 112h437.56A112.5 112.5 0 0 0 592 165.22zM352 288h-16v-88a8 8 0 0 0-8-8h-13.58a24 24 0 0 0-13.31 4l-15.33 10.22a8 8 0 0 0-2.22 11.08l8.88 13.31a8 8 0 0 0 11.08 2.22l.47-.31V288H288a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8z"]]
};
exports.faMoneyBillAlt = faMoneyBillAlt;
var faMoneyBillWave = {
  prefix: 'fad',
  iconName: 'money-bill-wave',
  icon: [640, 512, [], "f53a", ["M545.58 371.77a112.42 112.42 0 0 1 46.43-41V133.21a112.4 112.4 0 0 1-52.16-51.09 283.47 283.47 0 0 0-35.1-2.12c-55.6 0-112.61 14.43-173 29.7-63.39 16-128.95 32.64-196.51 32.64a385.14 385.14 0 0 1-40.83-2.12 112.42 112.42 0 0 1-46.42 41v197.57a112.42 112.42 0 0 1 52.15 51.09 283.47 283.47 0 0 0 35.1 2.12c55.6 0 112.62-14.43 173-29.71 63.4-16.05 129-32.64 196.53-32.64a385 385 0 0 1 40.81 2.12zM320 352c-44.19 0-80-43-80-96s35.82-96 80-96 80 43 80 96-35.83 96-80 96z", "M621.16 54.46C582.37 38.19 543.55 32 504.75 32c-123.19 0-246.34 62.34-369.5 62.34-30.89 0-61.76-3.92-92.65-13.72A34.19 34.19 0 0 0 32.25 79C15 79 0 92.32 0 110.81v317.26c0 12.63 7.23 24.6 18.84 29.46C57.63 473.81 96.45 480 135.25 480c123.17 0 246.34-62.35 369.51-62.35 30.89 0 61.76 3.92 92.65 13.72a34.19 34.19 0 0 0 10.35 1.63C625 433 640 419.67 640 401.18V83.93c0-12.64-7.23-24.6-18.84-29.47zM308.23 402.29C247.87 417.57 190.85 432 135.25 432a283.47 283.47 0 0 1-35.1-2.12A112.42 112.42 0 0 0 48 378.79V181.21a112.42 112.42 0 0 0 46.42-41 385.14 385.14 0 0 0 40.83 2.12c67.56 0 133.12-16.59 196.51-32.64C392.11 94.43 449.12 80 504.72 80a283.47 283.47 0 0 1 35.1 2.12A112.4 112.4 0 0 0 592 133.21v197.58a112.42 112.42 0 0 0-46.43 41 385 385 0 0 0-40.82-2.12c-67.56-.02-133.12 16.57-196.52 32.62z"]]
};
exports.faMoneyBillWave = faMoneyBillWave;
var faMoneyBillWaveAlt = {
  prefix: 'fad',
  iconName: 'money-bill-wave-alt',
  icon: [640, 512, [], "f53b", ["M320 352c-44.19 0-80-43-80-96s35.82-96 80-96 80 43 80 96-35.83 96-80 96z", "M621.16 54.46C582.37 38.19 543.55 32 504.75 32c-123.19 0-246.34 62.34-369.5 62.34-30.89 0-61.76-3.92-92.65-13.72A34 34 0 0 0 32.25 79C15 79 0 92.32 0 110.81v317.26c0 12.63 7.23 24.6 18.84 29.46C57.63 473.81 96.45 480 135.25 480c123.17 0 246.34-62.35 369.51-62.35 30.89 0 61.76 3.92 92.65 13.72a34.34 34.34 0 0 0 10.35 1.63C625 433 640 419.67 640 401.18V83.93c0-12.64-7.23-24.6-18.84-29.47zM320 352c-44.19 0-80-43-80-96s35.82-96 80-96 80 43 80 96-35.83 96-80 96z"]]
};
exports.faMoneyBillWaveAlt = faMoneyBillWaveAlt;
var faMoneyCheck = {
  prefix: 'fad',
  iconName: 'money-check',
  icon: [640, 512, [], "f53c", ["M0 448a32 32 0 0 0 32 32h576a32 32 0 0 0 32-32V128H0zm448-208a16 16 0 0 1 16-16h96a16 16 0 0 1 16 16v32a16 16 0 0 1-16 16h-96a16 16 0 0 1-16-16zm0 120a8 8 0 0 1 8-8h112a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H456a8 8 0 0 1-8-8zM64 264a8 8 0 0 1 8-8h304a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H72a8 8 0 0 1-8-8zm0 96a8 8 0 0 1 8-8h176a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H72a8 8 0 0 1-8-8z", "M568 352H456a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h112a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8zm-192-96H72a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h304a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8zm-128 96H72a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h176a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8zM624 32H16A16 16 0 0 0 0 48v48h640V48a16 16 0 0 0-16-16z"]]
};
exports.faMoneyCheck = faMoneyCheck;
var faMoneyCheckAlt = {
  prefix: 'fad',
  iconName: 'money-check-alt',
  icon: [640, 512, [], "f53d", ["M608 32H32A32 32 0 0 0 0 64v384a32 32 0 0 0 32 32h576a32 32 0 0 0 32-32V64a32 32 0 0 0-32-32zM176 327.88V344a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8v-16.29a57.26 57.26 0 0 1-31.37-11.35 8 8 0 0 1-.57-12.14L123.81 293a8.21 8.21 0 0 1 10.13-.73 24.08 24.08 0 0 0 12.82 3.73h28.11c6.5 0 11.8-5.92 11.8-13.19 0-5.95-3.61-11.19-8.77-12.73l-45-13.5c-18.59-5.58-31.58-23.42-31.58-43.39 0-24.52 19.05-44.44 42.67-45.07V152a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16.29a57.18 57.18 0 0 1 31.37 11.35 8 8 0 0 1 .57 12.14L196.18 203a8.21 8.21 0 0 1-10.13.73 24 24 0 0 0-12.82-3.73h-28.11c-6.5 0-11.8 5.92-11.8 13.19 0 5.95 3.61 11.19 8.77 12.73l45 13.5c18.59 5.58 31.58 23.42 31.58 43.39 0 24.53-19.05 44.44-42.67 45.07zM416 312a8 8 0 0 1-8 8H296a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h112a8 8 0 0 1 8 8zm160 0a8 8 0 0 1-8 8h-80a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h80a8 8 0 0 1 8 8zm0-96a8 8 0 0 1-8 8H296a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h272a8 8 0 0 1 8 8z", "M144 168.12V152a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16.29a57.18 57.18 0 0 1 31.37 11.35 8 8 0 0 1 .57 12.14L196.18 203a8.21 8.21 0 0 1-10.13.73 24 24 0 0 0-12.82-3.73h-28.11c-6.5 0-11.8 5.92-11.8 13.19 0 5.95 3.61 11.19 8.77 12.73l45 13.5c18.59 5.58 31.58 23.42 31.58 43.39 0 24.53-19 44.44-42.67 45.07V344a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8v-16.29a57.26 57.26 0 0 1-31.37-11.35 8 8 0 0 1-.57-12.14L123.81 293a8.21 8.21 0 0 1 10.13-.73 24.08 24.08 0 0 0 12.82 3.73h28.11c6.5 0 11.8-5.92 11.8-13.19 0-5.95-3.61-11.19-8.77-12.73l-45-13.5c-18.59-5.58-31.58-23.42-31.58-43.39 0-24.52 19.05-44.44 42.68-45.07z"]]
};
exports.faMoneyCheckAlt = faMoneyCheckAlt;
var faMoneyCheckEdit = {
  prefix: 'fad',
  iconName: 'money-check-edit',
  icon: [640, 512, [], "f872", ["M640 192v288a32 32 0 0 1-32 32H32a32 32 0 0 1-32-32V192a32 32 0 0 1 32-32h171.06L331 288H104a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h259l64 64H104a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h456a16 16 0 0 0 16-16v-74.46a64 64 0 0 0-18.74-45.26L437 160h171a32 32 0 0 1 32 32z", "M534.64 302.91L303.18 71.47l-71.7 71.7 231.39 231.45a32 32 0 0 0 22.64 9.38H528a16 16 0 0 0 16-16v-42.46a32 32 0 0 0-9.36-22.63zM238.78 7a24.1 24.1 0 0 0-33.9 0L167 44.87a24 24 0 0 0 0 33.8l41.9 41.9 71.7-71.8z"]]
};
exports.faMoneyCheckEdit = faMoneyCheckEdit;
var faMoneyCheckEditAlt = {
  prefix: 'fad',
  iconName: 'money-check-edit-alt',
  icon: [640, 512, [], "f873", ["M608 160H437l120.27 120.25A64 64 0 0 1 576 325.51V400a16 16 0 0 1-16 16H264a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h163l-64-64h-99a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h67L203 160H32a32 32 0 0 0-32 32v288a32 32 0 0 0 32 32h576a32 32 0 0 0 32-32V192a32 32 0 0 0-32-32zM144 415.85V432a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8v-16.32a57.32 57.32 0 0 1-31.37-11.35 8 8 0 0 1-.57-12.14L91.81 381a8.19 8.19 0 0 1 10.13-.73 24.06 24.06 0 0 0 12.82 3.73h28.11c6.5 0 11.8-5.92 11.8-13.19 0-5.95-3.61-11.19-8.77-12.73l-45-13.5c-18.59-5.58-31.58-23.45-31.58-43.42 0-24.52 19.05-44.44 42.67-45.07V240a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16.29a57.17 57.17 0 0 1 31.37 11.35 8 8 0 0 1 1.4 11.22 7.26 7.26 0 0 1-.83.92L164.18 291a8.22 8.22 0 0 1-10.13.73 24 24 0 0 0-12.82-3.73h-28.11c-6.5 0-11.8 5.92-11.8 13.19 0 5.95 3.61 11.19 8.77 12.73l45 13.5c18.59 5.58 31.58 23.42 31.58 43.39 0 24.5-19.05 44.41-42.67 45.04z", "M238.78 7a24.1 24.1 0 0 0-33.9 0L167 44.84a24 24 0 0 0 0 33.8l41.9 41.9 71.7-71.8zm295.86 295.88L303.18 71.44l-71.7 71.7 231.4 231.46a32 32 0 0 0 22.62 9.4H528a16 16 0 0 0 16-16v-42.49a32 32 0 0 0-9.36-22.63zm-379.55 24.51l-45-13.5c-5.16-1.54-8.77-6.78-8.77-12.73 0-7.27 5.3-13.19 11.8-13.19h28.11a24 24 0 0 1 12.82 3.73 8.22 8.22 0 0 0 10.13-.73l11.75-11.22a7.26 7.26 0 0 0 .83-.92 8 8 0 0 0-1.4-11.22A57.17 57.17 0 0 0 144 256.26V240a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v16.12c-23.62.63-42.67 20.55-42.67 45.07 0 20 13 37.81 31.58 43.39l45 13.5c5.16 1.54 8.77 6.78 8.77 12.73 0 7.27-5.3 13.19-11.8 13.19h-28.12a24.06 24.06 0 0 1-12.82-3.73 8.19 8.19 0 0 0-10.13.73l-11.75 11.19a8 8 0 0 0 .57 12.14A57.32 57.32 0 0 0 112 415.68V432a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-16.15c23.62-.63 42.67-20.54 42.67-45.07 0-19.97-12.99-37.78-31.58-43.39z"]]
};
exports.faMoneyCheckEditAlt = faMoneyCheckEditAlt;
var faMonitorHeartRate = {
  prefix: 'fad',
  iconName: 'monitor-heart-rate',
  icon: [576, 512, [], "f611", ["M512 64v384H64V288h118.11l27.58 55.16a16 16 0 0 0 28.62 0L288 243.78 310.11 288H400a16 16 0 0 0 0-32h-70.11l-27.58-55.16a16 16 0 0 0-28.62 0L224 300.22l-19.9-39.8A8 8 0 0 0 197 256H64V64z", "M528 0H48A48 48 0 0 0 0 48v416a48 48 0 0 0 48 48h480a48 48 0 0 0 48-48V48a48 48 0 0 0-48-48zm-16 448H64V64h448z"]]
};
exports.faMonitorHeartRate = faMonitorHeartRate;
var faMonkey = {
  prefix: 'fad',
  iconName: 'monkey',
  icon: [640, 512, [], "f6fb", ["M549.47 267.22A127 127 0 0 1 480 288c-56.67 0-104.29-37.26-121.08-88.38C262.91 224.9 192 312.05 192 416v32a32 32 0 0 1-32-32V176a80 80 0 0 0-160 0v48a32 32 0 0 0 64 0v-48a16 16 0 0 1 32 0v240a96.1 96.1 0 0 0 96 96h240a16 16 0 0 0 16-16v-16a32 32 0 0 0-32-32h-64l155.68-103.79 34.68 104 1.64 10.13V496a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-37.61a96 96 0 0 0-4.94-30.39zM592 64h-21.88C556.9 26.8 521.74 0 480 0s-76.9 26.8-90.12 64H368a48 48 0 0 0 0 96h16a96 96 0 0 0 192 0h16a48 48 0 0 0 0-96zm-32 48a48 48 0 0 1-32 45.26V176a48 48 0 0 1-48 48 48 48 0 0 1-48-48v-18.74A48 48 0 0 1 400 112a48 48 0 0 1 48-48h64a48 48 0 0 1 48 48z", "M512 64h-64a48 48 0 0 0-48 48 48 48 0 0 0 32 45.26V176a48 48 0 0 0 48 48 48 48 0 0 0 48-48v-18.74A48 48 0 0 0 560 112a48 48 0 0 0-48-48zm-72 56a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm80 0a16 16 0 1 1 16-16 16 16 0 0 1-16 16z"]]
};
exports.faMonkey = faMonkey;
var faMonument = {
  prefix: 'fad',
  iconName: 'monument',
  icon: [384, 512, [], "f5a6", ["M384 464v32a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h352a16 16 0 0 1 16 16z", "M289.14 100.74a32 32 0 0 0-9.21-19.44L203.31 4.69a16 16 0 0 0-22.63 0l-76.6 76.61a32 32 0 0 0-9.21 19.44L64 416h256zM240 307.2c0 6.4-6.4 12.8-12.8 12.8h-70.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h70.4c6.4 0 12.8 6.4 12.8 12.8z"]]
};
exports.faMonument = faMonument;
var faMoon = {
  prefix: 'fad',
  iconName: 'moon',
  icon: [512, 512, [], "f186", ["", "M32,256C32,114.51,144.29,0,282.64,0a246.91,246.91,0,0,1,45.8,4.28c10.77,2,13.16,16.72,3.67,22.23-61.52,35.76-99.37,102.17-99.37,174.39,0,125.38,111.67,220.61,233.28,197,10.69-2.08,18.24,10.64,11.32,19.35C430.56,476.08,360,512,282.64,512,144.11,512,32,397.31,32,256Z"]]
};
exports.faMoon = faMoon;
var faMoonCloud = {
  prefix: 'fad',
  iconName: 'moon-cloud',
  icon: [576, 512, [], "f754", ["M574.1 377a191.7 191.7 0 0 1-271.7 26.7c29.5-16.4 49.7-47.5 49.7-83.6a96 96 0 0 0-106.7-95.4 109.19 109.19 0 0 0-6.9-12.6C258.4 127.2 334.3 64 425.1 64a196.43 196.43 0 0 1 35 3.2c8.2 1.6 10.1 12.6 2.8 16.7a150.3 150.3 0 0 0-76.1 130.8c0 94 85.4 165.4 178.5 147.7 8.2-1.6 14 8 8.8 14.6z", "M320 320a64.06 64.06 0 0 1-64 64H64a64 64 0 0 1 0-128c.6 0 1.1.2 1.6.2a79.75 79.75 0 0 1 157.7 9A63.72 63.72 0 0 1 320 320z"]]
};
exports.faMoonCloud = faMoonCloud;
var faMoonStars = {
  prefix: 'fad',
  iconName: 'moon-stars',
  icon: [512, 512, [], "f755", ["M320 32L304 0l-16 32-32 16 32 16 16 32 16-32 32-16zm138.7 149.3L432 128l-26.7 53.3L352 208l53.3 26.7L432 288l26.7-53.3L512 208z", "M332.2 426.4c8.1-1.6 13.9 8 8.6 14.5a191.18 191.18 0 0 1-149 71.1C85.8 512 0 426 0 320c0-120 108.7-210.6 227-188.8 8.2 1.6 10.1 12.6 2.8 16.7a150.3 150.3 0 0 0-76.1 130.8c0 94 85.4 165.4 178.5 147.7z"]]
};
exports.faMoonStars = faMoonStars;
var faMortarPestle = {
  prefix: 'fad',
  iconName: 'mortar-pestle',
  icon: [512, 512, [], "f5a7", ["M501.54 60.91L402.46 160H251.09L454.9 7.14a35.68 35.68 0 0 1 46.64 53.77z", "M16 192h480a16 16 0 0 1 16 16v32a16 16 0 0 1-16 16h-16c0 81-50.2 150.11-121.13 178.32A128.08 128.08 0 0 1 383.82 493a16.43 16.43 0 0 1-16.07 19h-223.5a16.43 16.43 0 0 1-16.07-19 128.29 128.29 0 0 1 24.95-58.69C82.2 406.11 32 337 32 256H16a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16z"]]
};
exports.faMortarPestle = faMortarPestle;
var faMosque = {
  prefix: 'fad',
  iconName: 'mosque',
  icon: [640, 512, [], "f678", ["M64 0S0 32 0 96v32h128V96c0-64-64-96-64-96zm456.08 106.19c-41.94-26.47-80.63-57.77-112-96.22L400 0l-8.12 10c-31.33 38.45-70 69.76-112 96.22-46.13 29.11-87.92 70-87.92 122.9 0 21.57 11 41.52 28.84 58.91h358.36C597 270.61 608 250.66 608 229.09c0-52.86-41.79-93.79-87.92-122.9z", "M0 480a32 32 0 0 0 32 32h64a32 32 0 0 0 32-32V160H0zm608-160H192a32 32 0 0 0-32 32v128a32 32 0 0 0 32 32h32v-64a32 32 0 0 1 64 0v64h64v-72c0-48 48-72 48-72s48 24 48 72v72h64v-64a32 32 0 0 1 64 0v64h32a32 32 0 0 0 32-32V352a32 32 0 0 0-32-32z"]]
};
exports.faMosque = faMosque;
var faMotorcycle = {
  prefix: 'fad',
  iconName: 'motorcycle',
  icon: [640, 512, [], "f21c", ["M252 352a127.94 127.94 0 1 1-87.42-154.7l-24 43.69A80 80 0 1 0 201.3 352zm260-160a127.81 127.81 0 0 0-41.46 6.87l25.61 42.71a80.22 80.22 0 1 1-42 23.26l-25.26-42.17A128 128 0 1 0 512 192z", "M175.83 176.8c-9.1-13.9-23.3-24.8-47.8-24.8H72a24 24 0 0 1-24-23.5C47.73 115 59 104 72.53 104H128c55 0 82.2 16.9 99.9 40h153.7l-19.2-32H296a16 16 0 0 1-16-16V80a16 16 0 0 1 16-16h80a24.16 24.16 0 0 1 20.6 11.6l22.8 38 37.5-41.7a24 24 0 0 1 17.8-7.9H520a23.94 23.94 0 0 1 24 24v32a23.94 23.94 0 0 1-24 24h-82.4l107.1 178.6a16.07 16.07 0 0 1-5.5 22l-13.7 8.2a16.07 16.07 0 0 1-22-5.5l-87.1-145.4a151.48 151.48 0 0 0-56.2 125 24 24 0 0 1-24 25.1H120a24 24 0 0 1-21-35.6z"]]
};
exports.faMotorcycle = faMotorcycle;
var faMountain = {
  prefix: 'fad',
  iconName: 'mountain',
  icon: [640, 512, [], "f6fc", ["M256 242.75l-66.66-66.67L293.08 14.7a32 32 0 0 1 53.84 0L460.9 192H306.75l-9.37 9.37z", "M636.09 495.33A32 32 0 0 1 608 512H32a32 32 0 0 1-26.92-49.3l166.55-259.07L256 288l64-64h161.47l153.45 238.7a32 32 0 0 1 1.17 32.63z"]]
};
exports.faMountain = faMountain;
var faMountains = {
  prefix: 'fad',
  iconName: 'mountains',
  icon: [640, 512, [], "f6fd", ["M611.14 448h-69.72L357.48 159.68l32.84-50.37c11.57-17.75 39.8-17.75 51.37 0l194 297.6c11.77 18-2.05 41.09-24.55 41.09z", "M338.33 189.07L503.5 448H30.92C6.81 448-8 422.81 4.58 403.18l207.9-324.66c12.4-19.36 42.64-19.36 55 0z"]]
};
exports.faMountains = faMountains;
var faMouse = {
  prefix: 'fad',
  iconName: 'mouse',
  icon: [384, 512, [], "f8cc", ["M176 0h-16A160 160 0 0 0 0 160v32h176zm48 0h-16v192h176v-32A160 160 0 0 0 224 0zM0 352a160 160 0 0 0 160 160h64a160 160 0 0 0 160-160V224H0z", "M384 192v32H0v-32h176V0h32v192z"]]
};
exports.faMouse = faMouse;
var faMouseAlt = {
  prefix: 'fad',
  iconName: 'mouse-alt',
  icon: [384, 512, [], "f8cd", ["M224 0h-64A160 160 0 0 0 0 160v192a160 160 0 0 0 160 160h64a160 160 0 0 0 160-160V160A160 160 0 0 0 224 0zm0 160a32 32 0 0 1-64 0v-32a32 32 0 0 1 64 0z", "M224 160a32 32 0 0 1-64 0v-32a32 32 0 0 1 64 0z"]]
};
exports.faMouseAlt = faMouseAlt;
var faMousePointer = {
  prefix: 'fad',
  iconName: 'mouse-pointer',
  icon: [320, 512, [], "f245", ["M302.19 329.13H196.1l55.84 136a18.58 18.58 0 0 1-9.45 24l-49.16 21.42c-9.17 4-19.45-.57-23.34-9.71l-53.05-129.15-86.66 89.14C18.73 472.71 0 463.55 0 448V18.3C0 1.9 19.92-6.1 30.28 5.44L314.69 298c11.47 11.16 3.01 31.13-12.5 31.13z", ""]]
};
exports.faMousePointer = faMousePointer;
var faMp3Player = {
  prefix: 'fad',
  iconName: 'mp3-player',
  icon: [384, 512, [], "f8ce", ["M336 0H48A48 48 0 0 0 0 48v416a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V48a48 48 0 0 0-48-48zM192 448a96 96 0 1 1 96-96 96 96 0 0 1-96 96zm128-256H64V64h256z", "M64 64v128h256V64zm128 192a96 96 0 1 0 96 96 96 96 0 0 0-96-96zm0 128a32 32 0 1 1 32-32 32 32 0 0 1-32 32z"]]
};
exports.faMp3Player = faMp3Player;
var faMug = {
  prefix: 'fad',
  iconName: 'mug',
  icon: [576, 512, [], "f874", ["M448 64h-32v288-32h32a128 128 0 0 0 0-256zm0 192h-32V128h32a64 64 0 0 1 0 128z", "M416 352a96 96 0 0 1-96 96H128a96 96 0 0 1-96-96V87.88A23.94 23.94 0 0 1 56 64h360v288z"]]
};
exports.faMug = faMug;
var faMugHot = {
  prefix: 'fad',
  iconName: 'mug-hot',
  icon: [512, 512, [], "f7b6", ["M139.3 67.3a94.83 94.83 0 0 1-26.4-53.5A16.11 16.11 0 0 0 96.8 0H80.4a16.31 16.31 0 0 0-16.3 18 145.36 145.36 0 0 0 40.6 84.4 81.22 81.22 0 0 1 22.4 44.1 16.23 16.23 0 0 0 16 13.5h16.5c9.8 0 17.6-8.5 16.3-18a130.72 130.72 0 0 0-36.6-74.7zM287.9 142a130.72 130.72 0 0 0-36.6-74.7 94.83 94.83 0 0 1-26.4-53.5A16.11 16.11 0 0 0 208.8 0h-16.4c-9.8 0-17.5 8.5-16.3 18a145.36 145.36 0 0 0 40.6 84.4 81.22 81.22 0 0 1 22.4 44.1 16.23 16.23 0 0 0 16 13.5h16.5c9.8 0 17.6-8.5 16.3-18z", "M400 192H32a32 32 0 0 0-32 32v192a96 96 0 0 0 96 96h192a96 96 0 0 0 96-96h16a112 112 0 0 0 0-224zm0 160h-16v-96h16a48 48 0 0 1 0 96z"]]
};
exports.faMugHot = faMugHot;
var faMugMarshmallows = {
  prefix: 'fad',
  iconName: 'mug-marshmallows',
  icon: [512, 512, [], "f7b7", ["M200.9 44.79C195 37.5 186.4 32.4 176.3 32.4H64a32 32 0 0 0-32 32v63.89h130.1a63.41 63.41 0 0 1 16.4-61.1zM96 224a32 32 0 0 0 64 0v-64H96zM343.3 89.79L294.8 41.4a32 32 0 0 0-45.26 0L201 89.79c-10.4 10.5-11.5 26.31-4.3 38.61h151c7.2-12.3 6.1-28.11-4.4-38.61z", "M400 160H224v.27h-64v63.5a32 32 0 0 1-64 0v-63.5H32a32 32 0 0 0-32 32v191.81A95.94 95.94 0 0 0 96 480h192a95.94 95.94 0 0 0 96-95.88V384h16a112 112 0 0 0 0-224zm0 160h-16v-96h16a48 48 0 0 1 0 96z"]]
};
exports.faMugMarshmallows = faMugMarshmallows;
var faMugTea = {
  prefix: 'fad',
  iconName: 'mug-tea',
  icon: [640, 512, [], "f875", ["M595.6 416H12.35c-25 0-11.59 64 36 64h511.36c47.69 0 60.89-64 35.89-64zM192 256h64a32 32 0 0 0 32-32v-66.75a32 32 0 0 0-9.38-22.62L240 96V32h-32v64l-38.63 38.63a32 32 0 0 0-9.37 22.62V224a32 32 0 0 0 32 32z", "M512 32H240v64l38.62 38.63a32 32 0 0 1 9.38 22.62V224a32 32 0 0 1-32 32h-64a32 32 0 0 1-32-32v-66.75a32 32 0 0 1 9.37-22.62L208 96V32h-87.95a23.94 23.94 0 0 0-24 24v232a96 96 0 0 0 96 96H384a96 96 0 0 0 96-96h32a128 128 0 0 0 0-256zm0 192h-32V96h32a64 64 0 0 1 0 128z"]]
};
exports.faMugTea = faMugTea;
var faMusic = {
  prefix: 'fad',
  iconName: 'music',
  icon: [512, 512, [], "f001", ["M192 214.32V83.72l256-75.6V139.3z", "M128 126.51v261.41A139 139 0 0 0 96 384c-53 0-96 28.66-96 64s43 64 96 64 96-28.66 96-64V83.72L150.41 96A32 32 0 0 0 128 126.51zm342.38-125L448 8.12v315.81a138.4 138.4 0 0 0-32-3.93c-53 0-96 28.66-96 64s43 64 96 64 96-28.65 96-64V32a32 32 0 0 0-41.62-30.49z"]]
};
exports.faMusic = faMusic;
var faMusicAlt = {
  prefix: 'fad',
  iconName: 'music-alt',
  icon: [384, 512, [], "f8cf", ["M352 32v64a32 32 0 0 1-23 30.71l-73 21.39V17.56l54.94-16.23A32 32 0 0 1 352 32z", "M256 432c0 44.18-50.14 80-112 80S32 476.18 32 432s50.14-80 112-80a148.76 148.76 0 0 1 48 8V60.34a32 32 0 0 1 22.41-30.5L256 17.56z"]]
};
exports.faMusicAlt = faMusicAlt;
var faMusicAltSlash = {
  prefix: 'fad',
  iconName: 'music-alt-slash',
  icon: [640, 512, [], "f8d0", ["M272 352c-61.86 0-112 35.82-112 80s50.14 80 112 80 112-35.82 112-80v-5.18l-94.92-73.36A143.68 143.68 0 0 0 272 352zM438.94 1.33L342.4 29.84a32 32 0 0 0-22.4 30.5v155.22L384 265V148.15l73-21.39a32 32 0 0 0 23-30.71V32a32 32 0 0 0-41.06-30.67z", "M633.82 458.1L45.47 3.39A16 16 0 0 0 23 6.2L3.37 31.47a16 16 0 0 0 2.81 22.45l588.35 454.71a16 16 0 0 0 22.47-2.81l19.63-25.27a16 16 0 0 0-2.81-22.45z"]]
};
exports.faMusicAltSlash = faMusicAltSlash;
var faMusicSlash = {
  prefix: 'fad',
  iconName: 'music-slash',
  icon: [640, 512, [], "f8d1", ["M192 387.92a139 139 0 0 0-32-3.92c-53 0-96 28.66-96 64s43 64 96 64 96-28.66 96-64V327.88l-64-49.46zM534.38 1.51L214.41 96a31.87 31.87 0 0 0-21 21.73l107.82 83.32L512 139.3v184.62a139 139 0 0 0-32-3.92 136.93 136.93 0 0 0-22.15 2.11l110.91 85.71c4.51-7.37 7.24-15.35 7.24-23.82V32a32 32 0 0 0-41.62-30.49z", "M633.82 458.1L45.47 3.39A16 16 0 0 0 23 6.2L3.37 31.47a16 16 0 0 0 2.81 22.45l588.35 454.71a16 16 0 0 0 22.47-2.81l19.63-25.27a16 16 0 0 0-2.81-22.45z"]]
};
exports.faMusicSlash = faMusicSlash;
var faNarwhal = {
  prefix: 'fad',
  iconName: 'narwhal',
  icon: [640, 512, [], "f6fe", ["M544 192c-243 0-315.29 224-380.12 224A35.92 35.92 0 0 1 128 380.11v-98l49.75-30.51A32 32 0 0 0 192 225v-81a16 16 0 0 0-24.88-13.31L96 178.11l-71.12-47.42A16 16 0 0 0 0 144v81a32 32 0 0 0 14.25 26.6L64 282.12v98A100 100 0 0 0 163.88 480H576a64 64 0 0 0 64-64V288a96.11 96.11 0 0 0-96-96zM432 360a24 24 0 1 1 24-24 24 24 0 0 1-24 24z", "M634.6 33.32a10.48 10.48 0 0 0-14.25 4.07L535 192l.37.1c2.85-.1 5.73-.1 8.63-.1a95.55 95.55 0 0 1 56.9 18.73l38.83-165.87a10.49 10.49 0 0 0-5.13-11.54zM432 312a24 24 0 1 0 24 24 24 24 0 0 0-24-24z"]]
};
exports.faNarwhal = faNarwhal;
var faNetworkWired = {
  prefix: 'fad',
  iconName: 'network-wired',
  icon: [640, 512, [], "f6ff", ["M624 232H344v-40h-48v40H16a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h104v40h48v-40h304v40h48v-40h104a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16z", "M224 192h192a32 32 0 0 0 32-32V32a32 32 0 0 0-32-32H224a32 32 0 0 0-32 32v128a32 32 0 0 0 32 32zm32-128h128v64H256zm320 256H416a32 32 0 0 0-32 32v128a32 32 0 0 0 32 32h160a32 32 0 0 0 32-32V352a32 32 0 0 0-32-32zm-32 128h-96v-64h96zM224 320H64a32 32 0 0 0-32 32v128a32 32 0 0 0 32 32h160a32 32 0 0 0 32-32V352a32 32 0 0 0-32-32zm-32 128H96v-64h96z"]]
};
exports.faNetworkWired = faNetworkWired;
var faNeuter = {
  prefix: 'fad',
  iconName: 'neuter',
  icon: [288, 512, [], "f22c", ["M144 256a80 80 0 1 1 80-80 80 80 0 0 1-80 80z", "M284.37 144A144 144 0 1 0 112 316.41V468a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12V316.41A144 144 0 0 0 284.37 144zM144 256a80 80 0 1 1 80-80 80 80 0 0 1-80 80z"]]
};
exports.faNeuter = faNeuter;
var faNewspaper = {
  prefix: 'fad',
  iconName: 'newspaper',
  icon: [576, 512, [], "f1ea", ["M544 64H96a32 32 0 0 0-32 32v322.21c0 .36-.05.73-.09 1.09 0 .21 0 .42-.08.63s-.08.66-.13 1-.08.46-.12.68-.1.61-.16.91-.11.46-.16.69-.13.59-.21.87-.13.46-.19.69l-.24.84-.24.68c-.09.28-.18.55-.28.82s-.17.45-.26.67-.21.53-.32.79-.2.45-.3.67-.23.51-.35.76l-.33.65c-.13.25-.25.49-.39.74l-.36.63-.42.72-.39.61c-.15.23-.3.46-.46.69l-.42.6-.48.66c-.15.2-.3.39-.46.58s-.33.43-.51.64l-.48.55-.54.61-.51.53c-.18.2-.37.39-.57.59l-.53.5-.6.56-.55.48-.62.52-.58.46-.65.49-.6.43-.68.46c-.2.14-.41.27-.62.4l-.69.43-.65.37c-.23.13-.47.27-.71.39l-.67.34c-.24.13-.48.25-.73.36l-.69.31-.74.32-.71.28-.77.29-.72.24-.78.25-.75.21-.79.21-.76.17-.81.17-.77.14-.82.12-.79.1-.83.09-.81.06h-1.65H528a48 48 0 0 0 48-48V96a32 32 0 0 0-32-32zM304 372a12 12 0 0 1-12 12H140a12 12 0 0 1-12-12v-8a12 12 0 0 1 12-12h152a12 12 0 0 1 12 12zm0-96a12 12 0 0 1-12 12H140a12 12 0 0 1-12-12v-8a12 12 0 0 1 12-12h152a12 12 0 0 1 12 12zm208 96a12 12 0 0 1-12 12H348a12 12 0 0 1-12-12v-8a12 12 0 0 1 12-12h152a12 12 0 0 1 12 12zm0-96a12 12 0 0 1-12 12H348a12 12 0 0 1-12-12v-8a12 12 0 0 1 12-12h152a12 12 0 0 1 12 12zm0-96a12 12 0 0 1-12 12H140a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h360a12 12 0 0 1 12 12z", "M292 352H140a12 12 0 0 0-12 12v8a12 12 0 0 0 12 12h152a12 12 0 0 0 12-12v-8a12 12 0 0 0-12-12zm0-96H140a12 12 0 0 0-12 12v8a12 12 0 0 0 12 12h152a12 12 0 0 0 12-12v-8a12 12 0 0 0-12-12zm208 96H348a12 12 0 0 0-12 12v8a12 12 0 0 0 12 12h152a12 12 0 0 0 12-12v-8a12 12 0 0 0-12-12zm0-96H348a12 12 0 0 0-12 12v8a12 12 0 0 0 12 12h152a12 12 0 0 0 12-12v-8a12 12 0 0 0-12-12zM0 128v287.33c0 17.44 13.67 32.18 31.1 32.67A32 32 0 0 0 64 416V96H32a32 32 0 0 0-32 32z"]]
};
exports.faNewspaper = faNewspaper;
var faNotEqual = {
  prefix: 'fad',
  iconName: 'not-equal',
  icon: [448, 512, [], "f53e", ["M35.59 466.83a16 16 0 0 0 3 22.42L64 508.75a16 16 0 0 0 22.43-3L168.52 400h-81zM162 304h81l74.51-96h-81zM441 22.78L415.61 3.29a16 16 0 0 0-22.43 3L311.11 112h81L444 45.21a16 16 0 0 0-3-22.43z", "M416 304H32a32 32 0 0 0-32 32v32a32 32 0 0 0 32 32h384a32 32 0 0 0 32-32v-32a32 32 0 0 0-32-32zm0-192H32a32 32 0 0 0-32 32v32a32 32 0 0 0 32 32h384a32 32 0 0 0 32-32v-32a32 32 0 0 0-32-32z"]]
};
exports.faNotEqual = faNotEqual;
var faNotesMedical = {
  prefix: 'fad',
  iconName: 'notes-medical',
  icon: [384, 512, [], "f481", ["M335 63h-80a64 64 0 0 1 64 64H63a64 64 0 0 1 64-64H47a48 48 0 0 0-48 48v352a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V111a48 48 0 0 0-48-48zm-47 281a8 8 0 0 1-8 8h-56v56a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8v-56h-56a8 8 0 0 1-8-8v-48a8 8 0 0 1 8-8h56v-56a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v56h56a8 8 0 0 1 8 8z", "M255 63a64 64 0 0 0-128 0 64 64 0 0 0-64 64h256a64 64 0 0 0-64-64zm-64 24a24 24 0 1 1 24-24 23.94 23.94 0 0 1-24 24zm89 201h-56v-56a8 8 0 0 0-8-8h-48a8 8 0 0 0-8 8v56h-56a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8h56v56a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8v-56h56a8 8 0 0 0 8-8v-48a8 8 0 0 0-8-8z"]]
};
exports.faNotesMedical = faNotesMedical;
var faObjectGroup = {
  prefix: 'fad',
  iconName: 'object-group',
  icon: [512, 512, [], "f247", ["M500 96a12 12 0 0 0 12-12V44a12 12 0 0 0-12-12h-40a12 12 0 0 0-12 12v20H64V44a12 12 0 0 0-12-12H12A12 12 0 0 0 0 44v40a12 12 0 0 0 12 12h20v320H12a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-20h384v20a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12h-20V96zm-84 276a12 12 0 0 1-12 12H236a12 12 0 0 1-12-12v-84H108a12 12 0 0 1-12-12V140a12 12 0 0 1 12-12h168a12 12 0 0 1 12 12v84h116a12 12 0 0 1 12 12z", "M288 140v136a12 12 0 0 1-12 12H108a12 12 0 0 1-12-12V140a12 12 0 0 1 12-12h168a12 12 0 0 1 12 12z"]]
};
exports.faObjectGroup = faObjectGroup;
var faObjectUngroup = {
  prefix: 'fad',
  iconName: 'object-ungroup',
  icon: [576, 512, [], "f248", ["M544 224v192h26a6 6 0 0 1 6 6v52a6 6 0 0 1-6 6h-52a6 6 0 0 1-6-6v-26H224v26a6 6 0 0 1-6 6h-52a6 6 0 0 1-6-6v-52a6 6 0 0 1 6-6h26v-96h32v96h288V224H384v-32h128v-26a6 6 0 0 1 6-6h52a6 6 0 0 1 6 6v52a6 6 0 0 1-6 6z", "M384 96v192h26a6 6 0 0 1 6 6v52a6 6 0 0 1-6 6h-52a6 6 0 0 1-6-6v-26H64v26a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6v-52a6 6 0 0 1 6-6h26V96H6a6 6 0 0 1-6-6V38a6 6 0 0 1 6-6h52a6 6 0 0 1 6 6v26h288V38a6 6 0 0 1 6-6h52a6 6 0 0 1 6 6v52a6 6 0 0 1-6 6z"]]
};
exports.faObjectUngroup = faObjectUngroup;
var faOctagon = {
  prefix: 'fad',
  iconName: 'octagon',
  icon: [512, 512, [], "f306", ["M497.9 150.6L361.43 14.1A48 48 0 0 0 327.54 0H184.46a48 48 0 0 0-33.89 14.1L14.1 150.5A48 48 0 0 0 0 184.4v143.1a48 48 0 0 0 14.1 33.9l136.47 136.5a48 48 0 0 0 33.89 14.1h143.08a48 48 0 0 0 33.89-14.1L497.9 361.4a48 48 0 0 0 14.1-33.9v-143a48 48 0 0 0-14.1-33.9zM424.39 323L323 424.38a26 26 0 0 1-18.35 7.62h-97.3a26 26 0 0 1-18.35-7.62L87.61 323A26 26 0 0 1 80 304.62v-97.33a26 26 0 0 1 7.62-18.39L189 87.61A26 26 0 0 1 207.35 80h97.3A26 26 0 0 1 323 87.62L424.39 189a26 26 0 0 1 7.61 18.38v97.24a26 26 0 0 1-7.61 18.38z", "M432 207.38v97.24a26 26 0 0 1-7.61 18.38L323 424.38a26 26 0 0 1-18.35 7.62h-97.3a26 26 0 0 1-18.35-7.62L87.61 323A26 26 0 0 1 80 304.62v-97.33a26 26 0 0 1 7.62-18.39L189 87.61A26 26 0 0 1 207.35 80h97.3A26 26 0 0 1 323 87.62L424.39 189a26 26 0 0 1 7.61 18.38z"]]
};
exports.faOctagon = faOctagon;
var faOilCan = {
  prefix: 'fad',
  iconName: 'oil-can',
  icon: [640, 512, [], "f613", ["M629.81 160.31L416 224l-50.49-25.24A64.2 64.2 0 0 0 336.9 192H176L37.72 166.86A31.93 31.93 0 0 0 0 198.34v95a32 32 0 0 0 26.28 31.48L96 337.46V384a32 32 0 0 0 32 32h274.64a32 32 0 0 0 22.76-9.51l212.26-214.75a8 8 0 0 0 2.34-5.66V168a8 8 0 0 0-10.19-7.69zM96 288.67l-48-8.73v-62.43l48 8.73z", "M592 288s-42.67 61.77-42.67 85.33a42.67 42.67 0 0 0 85.34 0C634.67 349.76 592 288 592 288zM336 96H176a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h56v48h48v-48h56a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16z"]]
};
exports.faOilCan = faOilCan;
var faOilTemp = {
  prefix: 'fad',
  iconName: 'oil-temp',
  icon: [640, 512, [], "f614", ["M512 352.16c23.26 19.66 57.36 31.84 96 31.84h16a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-16c-26 0-45.8-8.42-56.09-17.9-8.9-8.21-19.66-14.1-31.77-14.1h-16.3c-12.11 0-22.87 5.89-31.77 14.1-8.24 7.6-22.8 14.3-41.59 16.74a111.54 111.54 0 0 1-31 63.86c5.46.51 10.79 1.3 16.46 1.3 38.66 0 72.76-12.19 96.06-31.84zM624 448h-16c-26 0-45.8-8.42-56.09-17.9-8.9-8.21-19.66-14.1-31.77-14.1h-16.3c-12.11 0-22.87 5.89-31.77 14.1C461.8 439.58 442 448 416 448s-45.8-8.42-56.09-17.9c-8.9-8.21-19.66-14.1-31.77-14.1h-16.3c-12.11 0-22.87 5.89-31.77 14.1C269.8 439.58 250 448 224 448s-45.8-8.42-56.09-17.9c-8.9-8.21-19.66-14.1-31.77-14.1h-16.3c-12.11 0-22.87 5.89-31.77 14.1C77.8 439.58 58 448 32 448H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h16c38.62 0 72.72-12.19 96-31.84 23.28 19.66 57.38 31.84 96 31.84s72.72-12.19 96-31.84c23.28 19.66 57.38 31.84 96 31.84s72.72-12.19 96-31.84c23.28 19.66 57.38 31.84 96 31.84h16a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 384h16c38.62 0 72.72-12.19 96-31.84 23.28 19.66 57.38 31.84 96 31.84 5.67 0 11-.79 16.46-1.3a111.47 111.47 0 0 1-31-63.86c-18.79-2.44-33.34-9.14-41.59-16.74-8.9-8.21-19.66-14.1-31.77-14.1h-16.3c-12.11 0-22.87 5.89-31.77 14.1C77.8 311.58 58 320 32 320H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16z", "M416 16v16a16 16 0 0 1-16 16h-48v32h48a16 16 0 0 1 16 16v16a16 16 0 0 1-16 16h-48v32h48a16 16 0 0 1 16 16v16a16 16 0 0 1-16 16h-48v22.75a80 80 0 1 1-64 0V16a16 16 0 0 1 16-16h96a16 16 0 0 1 16 16z"]]
};
exports.faOilTemp = faOilTemp;
var faOm = {
  prefix: 'fad',
  iconName: 'om',
  icon: [512, 512, [], "f679", ["M339 39.37l21.6 21.56a10.43 10.43 0 0 0 14.75 0l21.57-21.56a10.43 10.43 0 0 0 0-14.75L375.35 3.05a10.45 10.45 0 0 0-14.76 0L339 24.61a10.43 10.43 0 0 0 0 14.75zm115.29 27.89c-85.55 65.12-169 2.75-172.58 0a16 16 0 0 0-23.8 20.35c1.61 3 40.37 72.34 118.8 72.34 79.92 0 98.78-31.36 101.75-37.66a15.78 15.78 0 0 0 1.53-6.83V80a16 16 0 0 0-25.7-12.74z", "M224 384a64.07 64.07 0 0 0-64-64h-33a15.92 15.92 0 0 1-13.17-8.55l-16.18-32.18A16.08 16.08 0 0 1 112 256h31.9a48 48 0 1 0-30.27-85.29 15.57 15.57 0 0 1-19.2.21l-26.11-19.64a16.32 16.32 0 0 1-1.12-24.93c25.11-23.74 59.86-34.71 96-28.78 43.16 7.08 79.42 40.64 89.52 83.19A112.69 112.69 0 0 1 245 256h46.84a35.66 35.66 0 0 0 25.38-10.5l24.25-24.25A99.9 99.9 0 0 1 512 291.87V392c0 48.53-47.48 88-96 88-96 0-96-64-96-64v-37.88a8 8 0 0 1 14.2-5C349.31 391.75 376.58 416 416 416c13.24 0 32-10.77 32-24V291.87a35.89 35.89 0 0 0-61.26-25.38l-24.25 24.25A99.26 99.26 0 0 1 291.84 320h-21.69c11 18.9 17.81 40.58 17.81 64 0 70.58-57.43 128-128 128C41.13 512-.09 416 0 361.18c0-8.8 10.26-12.77 14.79-5.22 22.8 38 49.13 92 145.15 92A64.07 64.07 0 0 0 224 384z"]]
};
exports.faOm = faOm;
var faOmega = {
  prefix: 'fad',
  iconName: 'omega',
  icon: [512, 512, [], "f67a", ["M512 440v48a24 24 0 0 1-24 24H352a32 32 0 0 1-32-32v-42.92a57.66 57.66 0 0 1 4-21.08h164a24 24 0 0 1 24 24zM24 416a24 24 0 0 0-24 24v48a24 24 0 0 0 24 24h136a32 32 0 0 0 32-32v-42.7a56.91 56.91 0 0 0-4.15-21.3z", "M56.61 416A254 254 0 0 1 0 256C0 104.82 131.74-16.18 286.45 1.77 399.19 14.85 492.12 104.36 509 216.6c11.41 75.72-10.75 146.23-53.64 199.4H324a63 63 0 0 1 22.92-28.62A159.66 159.66 0 0 0 416 256c0-99.51-91.32-178.1-194.56-156.36-62.49 13.16-112.1 65.08-123 128-11.3 65.36 17.46 125.15 65.68 159.07A66.53 66.53 0 0 1 187.85 416H56.61z"]]
};
exports.faOmega = faOmega;
var faOrnament = {
  prefix: 'fad',
  iconName: 'ornament',
  icon: [384, 512, [], "f7b8", ["M384.1 320a190.88 190.88 0 0 1-11.2 64H11.2a186.89 186.89 0 0 1 .2-128h361.2a194 194 0 0 1 11.5 64zM136.58 96a64 64 0 1 1 110.84 0zM176 64a16 16 0 1 0 16-16 16 16 0 0 0-16 16z", "M192 512c71 0 132.9-38.7 166.1-96H25.9c33.2 57.3 95.1 96 166.1 96zm96-358.18V112a16 16 0 0 0-16-16H112a16 16 0 0 0-16 16v41.82A193.4 193.4 0 0 0 25.9 224h332.2a193.4 193.4 0 0 0-70.1-70.18z"]]
};
exports.faOrnament = faOrnament;
var faOtter = {
  prefix: 'fad',
  iconName: 'otter',
  icon: [640, 512, [], "f700", ["M544 192h-22.86l-92.47 49.79.19.39-.86-.18-34.57-70.71L512 112h126.67A96 96 0 0 1 544 192z", "M512 352h-28.22l-54.92-109.82-.86-.18-34.57-70.71L512 112h126.67A97 97 0 0 0 640 96V64a32 32 0 0 0-32-32h-32l-13.25-13.25A64 64 0 0 0 517.49 0H497a64 64 0 0 0-31.75 8.43L312 96h-56C150 96 64 182 64 288v1.61c0 32.75-16 62.14-39.56 84.89a79.91 79.91 0 0 0-23.19 71.8C8 485.1 44.15 512 83.53 512H192a32 32 0 0 0 0-64H80a16 16 0 0 1 0-32h224a16 16 0 0 0 16-16v-16a32 32 0 0 0-32-32h-64l149.49-80.5L448 416h80a16 16 0 0 0 16-16v-16a32 32 0 0 0-32-32zm0-304a16 16 0 1 1-16 16 16 16 0 0 1 16-16z"]]
};
exports.faOtter = faOtter;
var faOutdent = {
  prefix: 'fad',
  iconName: 'outdent',
  icon: [448, 512, [], "f03b", ["M432 416H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm3.17-128H204.83A12.82 12.82 0 0 0 192 300.83v38.34A12.82 12.82 0 0 0 204.83 352h230.34A12.82 12.82 0 0 0 448 339.17v-38.34A12.82 12.82 0 0 0 435.17 288zm0-128H204.83A12.82 12.82 0 0 0 192 172.83v38.34A12.82 12.82 0 0 0 204.83 224h230.34A12.82 12.82 0 0 0 448 211.17v-38.34A12.82 12.82 0 0 0 435.17 160zM432 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z", "M100.69 363.29c10 10 27.31 2.93 27.31-11.31V160c0-14.32-17.33-21.31-27.31-11.31l-96 96a16 16 0 0 0 0 22.62z"]]
};
exports.faOutdent = faOutdent;
var faOverline = {
  prefix: 'fad',
  iconName: 'overline',
  icon: [448, 512, [], "f876", ["M432 0H16A16 16 0 0 0 0 16v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16z", "M232.19 128h-16.38A167.81 167.81 0 0 0 48 295.81v48.38A167.81 167.81 0 0 0 215.81 512h16.38A167.81 167.81 0 0 0 400 344.19v-48.38A167.81 167.81 0 0 0 232.19 128zM320 344.19A87.91 87.91 0 0 1 232.19 432h-16.38A87.91 87.91 0 0 1 128 344.19v-48.38A87.91 87.91 0 0 1 215.81 208h16.38A87.91 87.91 0 0 1 320 295.81z"]]
};
exports.faOverline = faOverline;
var faPageBreak = {
  prefix: 'fad',
  iconName: 'page-break',
  icon: [576, 512, [], "f877", ["M160 64h176v64a16 16 0 0 0 16 16h64v64h64v-76.06a48.16 48.16 0 0 0-14.09-34L382 14.09A48 48 0 0 0 348.09 0H144a48.14 48.14 0 0 0-48 48.07V208h64zm256 384H160v-80H96v96a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48v-96h-64z", "M243.6 256a19.59 19.59 0 0 0-19.6 19.6v24.8a19.59 19.59 0 0 0 19.6 19.6h88.8a19.59 19.59 0 0 0 19.6-19.6v-24.8a19.59 19.59 0 0 0-19.6-19.6zm316.4 0H432a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-400 48v-32a16 16 0 0 0-16-16H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16z"]]
};
exports.faPageBreak = faPageBreak;
var faPager = {
  prefix: 'fad',
  iconName: 'pager',
  icon: [512, 512, [], "f815", ["M448 224a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32v-64a32 32 0 0 1 32-32h320a32 32 0 0 1 32 32z", "M448 64H64a64 64 0 0 0-64 64v256a64 64 0 0 0 64 64h384a64 64 0 0 0 64-64V128a64 64 0 0 0-64-64zM160 368H80a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16h80zm128-16a16 16 0 0 1-16 16h-80v-48h80a16 16 0 0 1 16 16zm160-128a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32v-64a32 32 0 0 1 32-32h320a32 32 0 0 1 32 32z"]]
};
exports.faPager = faPager;
var faPaintBrush = {
  prefix: 'fad',
  iconName: 'paint-brush',
  icon: [512, 512, [], "f1fc", ["M512 49.55c0 16.14-6.52 31.64-13.9 46C385.06 306.53 349.06 352 287 352a92 92 0 0 1-22.39-3l-63.82-53.18a92.58 92.58 0 0 1-8.73-38.7c0-53.75 21.27-58 225.68-240.64C428.53 6.71 442.74 0 457.9 0 486 0 512 20.64 512 49.55z", "M255 382.68a86.64 86.64 0 0 1 1 9.13C256 468.23 203.87 512 128 512 37.94 512 0 439.62 0 357.27c9.79 6.68 44.14 34.35 55.25 34.35a15.26 15.26 0 0 0 14.59-10c20.66-54.44 57.07-69.72 97.19-72.3z"]]
};
exports.faPaintBrush = faPaintBrush;
var faPaintBrushAlt = {
  prefix: 'fad',
  iconName: 'paint-brush-alt',
  icon: [512, 512, [], "f5a9", ["M490.92 133L272.11 354.51l-78-65L366 33.1c62-88.4 198.15 19.42 124.92 99.9z", "M167.87 309.29l87.07 72.56a86.87 86.87 0 0 1 1.06 10C256 468.23 203.86 512 128 512 37.93 512 0 439.62 0 357.27c9.79 6.68 44.14 34.35 55.25 34.35a15.26 15.26 0 0 0 14.59-10c20.8-54.8 57.58-69.92 98.03-72.33z"]]
};
exports.faPaintBrushAlt = faPaintBrushAlt;
var faPaintRoller = {
  prefix: 'fad',
  iconName: 'paint-roller',
  icon: [512, 512, [], "f5aa", ["M384 160H32a32 32 0 0 1-32-32V32A32 32 0 0 1 32 0h352a32 32 0 0 1 32 32v96a32 32 0 0 1-32 32z", "M512 128v64a96 96 0 0 1-96 96H256v32a32 32 0 0 1 32 32v128a32 32 0 0 1-32 32h-64a32 32 0 0 1-32-32V352a32 32 0 0 1 32-32v-32a64 64 0 0 1 64-64h160a32 32 0 0 0 32-32V64a64 64 0 0 1 64 64z"]]
};
exports.faPaintRoller = faPaintRoller;
var faPalette = {
  prefix: 'fad',
  iconName: 'palette',
  icon: [512, 512, [], "f53f", ["M204.29 5c-99.4 19.4-179.5 99.29-199.1 198.4-37 187 131.7 326.39 258.8 306.69 41.2-6.4 61.4-54.59 42.5-91.69-23.1-45.4 9.9-98.4 60.9-98.4h79.7c35.8 0 64.8-29.6 64.9-65.31C511.49 97.13 368.09-26.87 204.29 5zM96 320a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm32-128a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm128-64a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm128 64a32 32 0 1 1 32-32 32 32 0 0 1-32 32z", "M96 256a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm32-128a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm128-64a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm128 64a32 32 0 1 0 32 32 32 32 0 0 0-32-32z"]]
};
exports.faPalette = faPalette;
var faPallet = {
  prefix: 'fad',
  iconName: 'pallet',
  icon: [640, 512, [], "f482", ["M256 0v128l64-32 64 32V0h112a16 16 0 0 1 16 16v224a16 16 0 0 1-16 16H144a16 16 0 0 1-16-16V16a16 16 0 0 1 16-16z", "M624 384a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h48v64H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h608a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-48v-64zm-336 64H128v-64h160zm224 0H352v-64h160zM384 128V0H256v128l64-32z"]]
};
exports.faPallet = faPallet;
var faPalletAlt = {
  prefix: 'fad',
  iconName: 'pallet-alt',
  icon: [640, 512, [], "f483", ["M560 64H400a16 16 0 0 0-16 16v160a16 16 0 0 0 16 16h160a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zM304 0H80a16 16 0 0 0-16 16v224a16 16 0 0 0 16 16h224a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16z", "M624 384a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h48v64H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h608a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-48v-64zm-336 64H128v-64h160zm224 0H352v-64h160z"]]
};
exports.faPalletAlt = faPalletAlt;
var faPaperPlane = {
  prefix: 'fad',
  iconName: 'paper-plane',
  icon: [512, 512, [], "f1d8", ["M245.53 410.5l-75 92.83c-14 17.1-42.5 7.8-42.5-15.8V358l280.26-252.77c5.5-4.9 13.3 2.6 8.6 8.3L191.72 387.87z", "M511.59 28l-72 432a24.07 24.07 0 0 1-33 18.2l-214.87-90.33 225.17-274.34c4.7-5.7-3.1-13.2-8.6-8.3L128 358 14.69 313.83a24 24 0 0 1-2.2-43.2L476 3.23c17.29-10 39 4.6 35.59 24.77z"]]
};
exports.faPaperPlane = faPaperPlane;
var faPaperclip = {
  prefix: 'fad',
  iconName: 'paperclip',
  icon: [448, 512, [], "f0c6", ["M171.43 319.93c-4.94 5-5.24 13.43-.65 18.29a10.66 10.66 0 0 0 15.69.16l182.85-186.85a52.37 52.37 0 0 0 0-72.79 48 48 0 0 0-69.15 0L90.39 293.3c-34.76 35.56-35.3 93.12-1.19 128.31a85.28 85.28 0 0 0 123.06.28l172.06-176a16 16 0 0 1 22.62-.26L429.82 268a16 16 0 0 1 .26 22.63L258 466.63a149.21 149.21 0 0 1-214.77-.49c-58.43-60.29-57.35-157.51 1.38-217.58L254.39 34a111.9 111.9 0 0 1 160.67 0c43.89 44.89 43.95 117.33 0 162.28L232.21 383.13a74.61 74.61 0 0 1-108-1c-28.27-30-27.37-77.47 1.45-106.95l143.77-146.84a16 16 0 0 1 22.62-.24l22.86 22.38a16 16 0 0 1 .24 22.63z", ""]]
};
exports.faPaperclip = faPaperclip;
var faParachuteBox = {
  prefix: 'fad',
  iconName: 'parachute-box',
  icon: [512, 512, [], "f4cd", ["M487.1 192L350.3 343.9c.7 2.7 1.6 5.2 1.6 8.1v128a32 32 0 0 1-32 32h-128a32 32 0 0 1-32-32V352c0-2.9.9-5.5 1.6-8.1L24.8 192h43.1l116.6 129.5c2.5-.6 4.8-1.5 7.5-1.5h48V192h32v128h48c2.7 0 5 .9 7.5 1.5L444.1 192z", "M.1 175c-1.1 9.1 6.8 17 16 17H96c0-75.1 26-136.3 62.4-175.7C78.5 42.7 9.2 99.5.1 175zM256 0c-59.1 0-128 76.8-128 192h256C384 76.8 315.1 0 256 0zm255.9 175c-9.1-75.6-78.4-132.4-158.3-158.7C390 55.7 416 116.9 416 192h79.8c9.3 0 17.2-7.8 16.1-17z"]]
};
exports.faParachuteBox = faParachuteBox;
var faParagraph = {
  prefix: 'fad',
  iconName: 'paragraph',
  icon: [448, 512, [], "f1dd", ["M368 96v368a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V96z", "M432 48v32a16 16 0 0 1-16 16H272v368a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V352h-32a160 160 0 0 1 0-320h240a16 16 0 0 1 16 16z"]]
};
exports.faParagraph = faParagraph;
var faParagraphRtl = {
  prefix: 'fad',
  iconName: 'paragraph-rtl',
  icon: [384, 512, [], "f878", ["M144 224h16v80a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V64h32v240a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V64h16a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16H144C80 0 32 48 32 112s48 112 112 112z", "M368 384H112v-48c0-14.25-17.23-21.39-27.31-11.31l-80 80a16 16 0 0 0 0 22.62l80 80C94 516.64 112 511.64 112 496v-48h256a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z"]]
};
exports.faParagraphRtl = faParagraphRtl;
var faParking = {
  prefix: 'fad',
  iconName: 'parking',
  icon: [448, 512, [], "f540", ["M272 224a32.09 32.09 0 0 1-32 32h-48v-64h48a32.09 32.09 0 0 1 32 32zM448 80v352a48 48 0 0 1-48 48H48a48 48 0 0 1-48-48V80a48 48 0 0 1 48-48h352a48 48 0 0 1 48 48zM336 224a96.15 96.15 0 0 0-96-96h-96a16 16 0 0 0-16 16v224a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-48h48a96.15 96.15 0 0 0 96-96z", "M240 128h-96a16 16 0 0 0-16 16v224a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-48h48a96 96 0 0 0 0-192zm0 128h-48v-64h48a32 32 0 0 1 0 64z"]]
};
exports.faParking = faParking;
var faParkingCircle = {
  prefix: 'fad',
  iconName: 'parking-circle',
  icon: [496, 512, [], "f615", ["M280,208H232v32h48a16,16,0,0,0,0-32ZM248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8Zm32,296H232v48a16,16,0,0,1-16,16H184a16,16,0,0,1-16-16V160a16,16,0,0,1,16-16h96a80,80,0,0,1,0,160Z", "M280,144H184a16,16,0,0,0-16,16V352a16,16,0,0,0,16,16h32a16,16,0,0,0,16-16V304h48a80,80,0,0,0,0-160Zm0,96H232V208h48a16,16,0,0,1,0,32Z"]]
};
exports.faParkingCircle = faParkingCircle;
var faParkingCircleSlash = {
  prefix: 'fad',
  iconName: 'parking-circle-slash',
  icon: [496, 512, [], "f616", ["M168,352V234.61L257.78,304H232v48a16,16,0,0,1-16,16H184A16,16,0,0,1,168,352ZM360,224a80,80,0,0,0-80-80H184a16,16,0,0,0-15,10.49L238.22,208H280a16,16,0,0,1,0,32h-.38l54.95,42.47A79.75,79.75,0,0,0,360,224Z", "M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8Zm0,432C146.54,440,64,357.46,64,256a182.66,182.66,0,0,1,21.17-85.41L371.56,391.94A183.06,183.06,0,0,1,248,440Zm162.83-98.59L124.44,120.06A183.06,183.06,0,0,1,248,72c101.46,0,184,82.54,184,184a182.66,182.66,0,0,1-21.17,85.41Z"]]
};
exports.faParkingCircleSlash = faParkingCircleSlash;
var faParkingSlash = {
  prefix: 'fad',
  iconName: 'parking-slash',
  icon: [640, 512, [], "f617", ["M106.27 50.36A47.91 47.91 0 0 1 144 32h352a48 48 0 0 1 48 48v308.68L410 285.09A95.93 95.93 0 0 0 336 128h-96a16.06 16.06 0 0 0-15.79 13.52zM336 192h-46.47l69.74 53.9A32 32 0 0 0 336 192zm-48 176a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-64.86L96 204.21V432a48 48 0 0 0 48 48h308.83L288 352.6z", "M3.37 31.45L23 6.18a16 16 0 0 1 22.47-2.81L633.82 458.1a16 16 0 0 1 2.82 22.45L617 505.82a16 16 0 0 1-22.46 2.81L6.18 53.9a16 16 0 0 1-2.81-22.45z"]]
};
exports.faParkingSlash = faParkingSlash;
var faPassport = {
  prefix: 'fad',
  iconName: 'passport',
  icon: [448, 512, [], "f5ab", ["M224 64a128 128 0 1 0 128 128A128 128 0 0 0 224 64zm94.38 112h-39.09c-1.49-27-6.53-51.35-14.21-70.41a95.85 95.85 0 0 1 53.3 70.41zm-188.76 32h39.09c1.49 27 6.53 51.35 14.21 70.41a95.87 95.87 0 0 1-53.3-70.41zm39.09-32h-39.09a95.85 95.85 0 0 1 53.3-70.41C175.25 124.65 170.2 149 168.71 176zM224 286.69c-7.69-7.45-20.77-34.43-23.44-78.69h46.87c-2.66 44.27-15.74 71.24-23.43 78.69zM200.57 176c2.66-44.26 15.74-71.24 23.44-78.69 7.69 7.45 20.77 34.43 23.43 78.69zm64.51 102.41c7.68-19.06 12.72-43.41 14.21-70.41h39.09a95.85 95.85 0 0 1-53.3 70.41z", "M224 286.69c7.69-7.45 20.77-34.42 23.43-78.69h-46.87c2.67 44.26 15.75 71.24 23.44 78.69zM129.62 208a95.87 95.87 0 0 0 53.3 70.41C175.24 259.35 170.2 235 168.71 208zm0-32h39.09c1.49-27 6.54-51.35 14.21-70.41a95.85 95.85 0 0 0-53.3 70.41zm135.46-70.41c7.68 19.06 12.72 43.41 14.21 70.41h39.09a95.85 95.85 0 0 0-53.3-70.41zM200.57 176h46.87c-2.66-44.26-15.74-71.24-23.43-78.69-7.7 7.45-20.78 34.43-23.44 78.69zM416 0H64A64 64 0 0 0 0 64v384a64 64 0 0 0 64 64h352a32 32 0 0 0 32-32V32a32 32 0 0 0-32-32zm-80 416H112a16 16 0 0 1 0-32h224a16 16 0 0 1 0 32zm-112-96a128 128 0 1 1 128-128 128 128 0 0 1-128 128zm41.08-41.59a95.85 95.85 0 0 0 53.3-70.41h-39.09c-1.49 27-6.53 51.35-14.21 70.41z"]]
};
exports.faPassport = faPassport;
var faPastafarianism = {
  prefix: 'fad',
  iconName: 'pastafarianism',
  icon: [640, 512, [], "f67b", ["M638.43 378.65a23.94 23.94 0 0 1-31 13.88c-8.11-3.09-14.34-.19-31.39 11.36-13.55 9.15-30.83 20.84-52.42 20.84a63.85 63.85 0 0 1-23-4.39C468 407.9 460.69 379 455.35 357.9c-2.21-8.72-4-14.49-6-18.87a194.54 194.54 0 0 1-61.62 34.16c10 37 32.28 90.81 60.22 90.81a24 24 0 0 1 0 48c-66.74 0-97.05-88.63-107.42-129.14-6.69.6-13.42 1.14-20.58 1.14s-13.89-.54-20.58-1.14C289.05 423.37 258.74 512 192 512a24 24 0 0 1 0-48c28.08 0 50.3-53.8 60.26-90.8a194.47 194.47 0 0 1-61.64-34.2c-2 4.38-3.74 10.15-6 18.87-5.35 21.11-12.67 50-45.33 62.44a63.85 63.85 0 0 1-23 4.39c-21.59 0-38.87-11.68-52.42-20.84-17.05-11.55-23.23-14.45-31.39-11.36a24 24 0 0 1-17.1-44.85c32.65-12.47 57.34 4.25 75.37 16.45 17.08 11.53 23.3 14.42 31.41 11.36s10.83-9.38 15.89-29.38c3.33-13.15 7.44-29.32 18-42.65-2.24-2.91-4.43-5.78-6.38-8.57C139.53 304.45 126.29 312 108 312c-33.95 0-50.87-25.78-62.06-42.83C35.34 253 30.94 248 24 248a24 24 0 0 1 0-48c34 0 50.88 25.78 62.06 42.83C96.66 259 101.06 264 108 264c17.15 0 37.68-61.56 97.27-101.9l-17.11-34.22c1.27.07 2.55.12 3.84.12a63.93 63.93 0 0 0 53.42-28.76l18.13 36.27a216 216 0 0 1 112.92 0l18.12-36.25A64 64 0 0 0 448 128c1.29 0 2.57 0 3.85-.13l-17.11 34.22C494.52 202.57 514.69 264 532 264c6.94 0 11.34-5 21.94-21.17C565.13 225.78 582.05 200 616 200a24 24 0 0 1 0 48c-6.94 0-11.35 5-21.94 21.17C582.87 286.22 566 312 532 312c-18.29 0-31.53-7.55-41.7-17.12-1.95 2.78-4.14 5.66-6.38 8.57 10.51 13.33 14.62 29.5 17.95 42.65 5.06 20 7.77 26.29 15.89 29.38s14.35.17 31.41-11.36c18-12.2 42.67-29 75.37-16.45a24 24 0 0 1 13.89 30.98z", "M192 0a64 64 0 1 0 64 64 64 64 0 0 0-64-64zm0 80a16 16 0 1 1 16-16 16 16 0 0 1-16 16zM448 0a64 64 0 1 0 64 64 64 64 0 0 0-64-64zm0 80a16 16 0 1 1 16-16 16 16 0 0 1-16 16z"]]
};
exports.faPastafarianism = faPastafarianism;
var faPaste = {
  prefix: 'fad',
  iconName: 'paste',
  icon: [448, 512, [], "f0ea", ["M320 264V160H184a24 24 0 0 0-24 24v304a24 24 0 0 0 24 24h240a24 24 0 0 0 24-24V288H344a24.07 24.07 0 0 1-24-24zm121-31l-66-66a24 24 0 0 0-17-7h-6v96h96v-6.06a24 24 0 0 0-7-16.94z", "M296 32h-80.61a63.94 63.94 0 0 0-110.78 0H24A24 24 0 0 0 0 56v336a24 24 0 0 0 24 24h104V184a56.06 56.06 0 0 1 56-56h136V56a24 24 0 0 0-24-24zM160 88a24 24 0 1 1 24-24 24 24 0 0 1-24 24z"]]
};
exports.faPaste = faPaste;
var faPause = {
  prefix: 'fad',
  iconName: 'pause',
  icon: [448, 512, [], "f04c", ["M144 31H48A48 48 0 0 0 0 79v352a48 48 0 0 0 48 48h96a48 48 0 0 0 48-48V79a48 48 0 0 0-48-48zm-16 368a16 16 0 0 1-16 16H80a16 16 0 0 1-16-16V111a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16zM400 31h-96a48 48 0 0 0-48 48v352a48 48 0 0 0 48 48h96a48 48 0 0 0 48-48V79a48 48 0 0 0-48-48zm-16 368a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V111a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16z", "M112 95H80a16 16 0 0 0-16 16v288a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V111a16 16 0 0 0-16-16zm256 0h-32a16 16 0 0 0-16 16v288a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V111a16 16 0 0 0-16-16z"]]
};
exports.faPause = faPause;
var faPauseCircle = {
  prefix: 'fad',
  iconName: 'pause-circle',
  icon: [512, 512, [], "f28b", ["M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm-16 328a16 16 0 0 1-16 16h-48a16 16 0 0 1-16-16V176a16 16 0 0 1 16-16h48a16 16 0 0 1 16 16zm112 0a16 16 0 0 1-16 16h-48a16 16 0 0 1-16-16V176a16 16 0 0 1 16-16h48a16 16 0 0 1 16 16z", "M224 160h-48a16 16 0 0 0-16 16v160a16 16 0 0 0 16 16h48a16 16 0 0 0 16-16V176a16 16 0 0 0-16-16zm112 0h-48a16 16 0 0 0-16 16v160a16 16 0 0 0 16 16h48a16 16 0 0 0 16-16V176a16 16 0 0 0-16-16z"]]
};
exports.faPauseCircle = faPauseCircle;
var faPaw = {
  prefix: 'fad',
  iconName: 'paw',
  icon: [512, 512, [], "f1b0", ["M448 424.26c0 34.9-26.81 55.75-71.74 55.75-48.41 0-80.75-25.08-120.26-25.08-39.17 0-71.42 25.08-120.26 25.08C90.82 480 64 459.16 64 424.26 64 346.77 176.6 224 256 224s192 122.77 192 200.26z", "M474.84 161.28c-29.12-7-61.15 15.48-71.56 50.13s4.77 68.38 33.89 75.34 61.15-15.48 71.56-50.13-4.73-68.38-33.89-75.34zm-437.67 0C8.05 168.23-7.12 202 3.28 236.61s42.44 57.09 71.56 50.13 44.29-40.69 33.89-75.34-42.44-57.09-71.56-50.13zm113.4-127.89c-30.94 8.14-46.42 49.94-34.58 93.36s46.53 72 77.46 63.87 46.42-49.94 34.55-93.36-46.49-72.01-77.43-63.87zm210.88 0c-30.94-8.15-65.62 20.45-77.45 63.87s3.64 85.22 34.58 93.36 65.62-20.45 77.46-63.87-3.65-85.21-34.59-93.36z"]]
};
exports.faPaw = faPaw;
var faPawAlt = {
  prefix: 'fad',
  iconName: 'paw-alt',
  icon: [448, 512, [], "f701", ["M416 384a96 96 0 0 1-96 96c-51.71 1.76-72.19-32-96-32s-44.29 33.75-96 32a95.76 95.76 0 0 1-47.32-179.22c27.05-15.27 46.88-60.87 67.17-97.83C163.59 174.31 193.79 160 224 160s60.41 14.31 76.14 42.95c20 36.42 40.88 83 67.17 97.83A95.32 95.32 0 0 1 416 384z", "M400 144a48 48 0 1 0 48 48 48 48 0 0 0-48-48zM304 32a48 48 0 1 0 48 48 48 48 0 0 0-48-48zM48 144a48 48 0 1 0 48 48 48 48 0 0 0-48-48zm96-112a48 48 0 1 0 48 48 48 48 0 0 0-48-48z"]]
};
exports.faPawAlt = faPawAlt;
var faPawClaws = {
  prefix: 'fad',
  iconName: 'paw-claws',
  icon: [512, 512, [], "f702", ["M448 456.25c0 34.9-26.81 55.75-71.74 55.75-48.41 0-80.75-25.08-120.26-25.08-39.17 0-71.42 25.08-120.26 25.08C90.81 512 64 491.15 64 456.25 64 378.76 176.59 256 256 256s192 122.76 192 200.25z", "M320 0v75c-15.95 11.26-29.49 30.37-36 54.29-11.84 43.42 3.64 85.22 34.58 93.36s65.62-20.45 77.46-63.87c8.44-30.94 3-61.05-12-78.75zm173.51 190.37L448 128v66.94c-19.83 6.55-37.51 24.43-44.72 48.46-10.4 34.65 4.77 68.38 33.89 75.34s61.15-15.48 71.56-50.13a76 76 0 0 0 3.27-21.52 96.28 96.28 0 0 0-18.49-56.72zM192 75V0l-64 80c-15 17.7-20.45 47.82-12 78.75 11.84 43.42 46.53 72 77.46 63.87s46.42-49.94 34.58-93.36C221.49 105.33 208 86.21 192 75zM64 195v-67l-45.51 62.37A96.2 96.2 0 0 0 0 247.09a76.09 76.09 0 0 0 3.28 21.52c10.4 34.65 42.44 57.09 71.56 50.13s44.28-40.7 33.88-75.35c-7.21-24.03-24.89-41.91-44.72-48.46z"]]
};
exports.faPawClaws = faPawClaws;
var faPeace = {
  prefix: 'fad',
  iconName: 'peace',
  icon: [496, 512, [], "f67c", ["M409.54,344.25a184.93,184.93,0,0,1-31.43,41.86q-4.2,4.18-8.61,8.07L280,322.58V437.24a186.89,186.89,0,0,1-64,0V322.58l-89.5,71.6q-4.41-3.89-8.61-8.07a184.93,184.93,0,0,1-31.43-41.86L216,240.62V74.76a186.89,186.89,0,0,1,64,0V240.62Z", "M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8ZM378.11,386.11a184,184,0,0,1-260.22,0h0a183.93,183.93,0,0,1,0-260.21c71.74-72,188.25-72.15,260.21-.41s72.16,188.25.41,260.22Z"]]
};
exports.faPeace = faPeace;
var faPegasus = {
  prefix: 'fad',
  iconName: 'pegasus',
  icon: [576, 512, [], "f703", ["M64.36 215.74A39.92 39.92 0 0 0 48 248v56a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16v-56a88 88 0 0 1 88-88h.46a95.62 95.62 0 0 0-24.1 55.74z", "M567.34 54.8c-3.78-4-8.58-9.12-13.69-14.5 11.06-6.84 19.5-17.49 22.18-30.66A8.09 8.09 0 0 0 567.9 0h-120a128 128 0 0 0-128 128c-63.9 0-104.18-36.78-127.64-90.27-3.22-7.35-13.61-7.76-17-.5A158.37 158.37 0 0 0 160 105.1c0 67 51 133.09 128 147.74V256c-82.89 0-143.33-57.52-157-122.86q-1.5.49-3 1v-.7a95.72 95.72 0 0 0-33.46 160.44l-25.72 68.6a63.94 63.94 0 0 0-2.16 38l24.85 99.41A16 16 0 0 0 107 512h66a16 16 0 0 0 15.52-19.88l-26.33-105.26L186 323.27l134 22.33V496a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16V318.22A111.55 111.55 0 0 0 448 240c0-.22-.07-.42-.08-.64V136.89l16 7.11 18.9 37.7a32 32 0 0 0 40.49 15.37l32.55-13A32 32 0 0 0 576 154.31l-.06-77.71a31.76 31.76 0 0 0-8.6-21.8zM511.92 96a16 16 0 1 1 16-16 16 16 0 0 1-16 16z"]]
};
exports.faPegasus = faPegasus;
var faPen = {
  prefix: 'fad',
  iconName: 'pen',
  icon: [512, 512, [], "f304", ["M498 142.08l-56.6 56.55-128-128 56.55-56.55a48 48 0 0 1 67.91 0L498 74.17a48 48 0 0 1 0 67.91z", "M12.85 371.11L.15 485.33a24 24 0 0 0 26.49 26.51l114.14-12.6 278-278-128-128z"]]
};
exports.faPen = faPen;
var faPenAlt = {
  prefix: 'fad',
  iconName: 'pen-alt',
  icon: [512, 512, [], "f305", ["M498 74.17a48 48 0 0 1 0 67.91l-56.6 56.55-128-128 56.55-56.55a48 48 0 0 1 67.91 0z", "M336 138.49l82.77 82.77L222 418.05a327 327 0 0 1-195.34 93.8A24 24 0 0 1 .15 485.34v-.23A327 327 0 0 1 94 290l151.52-151.52-22.63-22.62-101.82 101.82a16 16 0 0 1-22.63 0l-22.63-22.63a16 16 0 0 1 0-22.62L194.59 53.64a40 40 0 0 1 56.56 0z"]]
};
exports.faPenAlt = faPenAlt;
var faPenFancy = {
  prefix: 'fad',
  iconName: 'pen-fancy',
  icon: [512, 512, [], "f5ac", ["M163.25 249.87l98.88 98.88-33.07 84.07a32 32 0 0 1-20.24 20.24L32 512l-4.68-4.68 92.89-92.89c2.56.66 5 1.57 7.8 1.57a32 32 0 1 0-32-32c0 2.77.91 5.24 1.57 7.8L4.69 484.69 0 480l58.94-176.82a32 32 0 0 1 20.24-20.24z", "M483.48 142.55L284 325.66l-97.85-97.85 183.1-199.49c74.48-84.26 199.15 39.16 114.23 114.23z"]]
};
exports.faPenFancy = faPenFancy;
var faPenNib = {
  prefix: 'fad',
  iconName: 'pen-nib',
  icon: [512, 512, [], "f5ad", ["M288 96l128 128-42.79 151.4a64 64 0 0 1-41.35 43.31L52 512l-14.69-14.69L187.42 347.2a48.45 48.45 0 1 0-22.62-22.62L14.69 474.69 0 460l93.29-279.86a64 64 0 0 1 43.31-41.35z", "M497.94 74.17a48 48 0 0 1 0 67.91l-56.55 56.55-128-128 56.55-56.55a48 48 0 0 1 67.91 0z"]]
};
exports.faPenNib = faPenNib;
var faPenSquare = {
  prefix: 'fad',
  iconName: 'pen-square',
  icon: [448, 512, [], "f14b", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-97.8 210L166.5 377.7l-57.1 6.3a12.11 12.11 0 0 1-13.3-13.3l6.3-57.1 135.7-135.7a6.13 6.13 0 0 1 8.6.1l55.5 55.5a6.1 6.1 0 0 1 0 8.5zm42.8-43l-23.1 23.1a6.1 6.1 0 0 1-8.5 0l-55.5-55.5a6.1 6.1 0 0 1 0-8.5L281 135a23.9 23.9 0 0 1 33.9 0l30.1 30.1a24.08 24.08 0 0 1 0 33.9z", "M345 165.1L314.9 135a23.9 23.9 0 0 0-33.9 0l-23.1 23.1a6.1 6.1 0 0 0 0 8.5l55.5 55.5a6.1 6.1 0 0 0 8.5 0L345 199a24.08 24.08 0 0 0 0-33.9zM246.7 178a6.13 6.13 0 0 0-8.6-.1L102.4 313.6l-6.3 57.1a12.11 12.11 0 0 0 13.3 13.3l57.1-6.3L302.2 242a6.1 6.1 0 0 0 0-8.5z"]]
};
exports.faPenSquare = faPenSquare;
var faPencil = {
  prefix: 'fad',
  iconName: 'pencil',
  icon: [512, 512, [], "f040", ["M96 352H32l-16 64 80 80 64-16v-64H96zM498 74.26l-.11-.11L437.77 14a48.09 48.09 0 0 0-67.9 0l-46.1 46.1a12 12 0 0 0 0 17l111 111a12 12 0 0 0 17 0l46.1-46.1a47.93 47.93 0 0 0 .13-67.74z", "M.37 483.85a24 24 0 0 0 19.47 27.8 24.27 24.27 0 0 0 8.33 0l67.32-16.16-79-79zM412.3 210.78l-111-111a12.13 12.13 0 0 0-17.1 0L32 352h64v64h64v64l252.27-252.25a12 12 0 0 0 .03-16.97z"]]
};
exports.faPencil = faPencil;
var faPencilAlt = {
  prefix: 'fad',
  iconName: 'pencil-alt',
  icon: [512, 512, [], "f303", ["M96 352H32l-16 64 80 80 64-16v-64H96zM498 74.26l-.11-.11L437.77 14a48.09 48.09 0 0 0-67.9 0l-46.1 46.1a12 12 0 0 0 0 17l111 111a12 12 0 0 0 17 0l46.1-46.1a47.93 47.93 0 0 0 .13-67.74z", "M.37 483.85a24 24 0 0 0 19.47 27.8 24.27 24.27 0 0 0 8.33 0l67.32-16.16-79-79zM412.3 210.78l-111-111a12.13 12.13 0 0 0-17.1 0L32 352h64v64h64v64l252.27-252.25a12 12 0 0 0 .03-16.97zm-114.41-24.93l-154 154a14 14 0 1 1-19.8-19.8l154-154a14 14 0 1 1 19.8 19.8z"]]
};
exports.faPencilAlt = faPencilAlt;
var faPencilPaintbrush = {
  prefix: 'fad',
  iconName: 'pencil-paintbrush',
  icon: [512, 512, [], "f618", ["M21.08 133l99.11 100.33L216 137.52 146 33.11C84.06-55.29-52.15 52.53 21.08 133zm435.68 258.63a15.26 15.26 0 0 1-14.59-10c-18.13-47.78-48.4-65.38-82.65-70.71l-101.69 101.7C266.65 476 315.43 512 384 512c90.07 0 128-72.38 128-154.73-9.78 6.73-44.14 34.36-55.24 34.36z", "M19.08 379.68L.33 487.12a21.23 21.23 0 0 0 24.59 24.56l107.44-18.84 296.93-296.93L316.08 82.72zM497.94 59.32l-45.26-45.25a48 48 0 0 0-67.94 0l-46 46 113.2 113.2 46-46a48 48 0 0 0 0-67.95z"]]
};
exports.faPencilPaintbrush = faPencilPaintbrush;
var faPencilRuler = {
  prefix: 'fad',
  iconName: 'pencil-ruler',
  icon: [512, 512, [], "f5ae", ["M138.25 127.05a7.92 7.92 0 0 1-11.2 0l-11.21-11.21a7.92 7.92 0 0 1 0-11.21L177.5 43 143.87 9.3A31.73 31.73 0 0 0 99 9.3L9.29 99a31.74 31.74 0 0 0 0 44.86l100.17 100.19L244 109.49l-44.08-44.12zm364.46 241.1l-33.63-33.64-61.68 61.68a7.92 7.92 0 0 1-11.21 0L385 385a7.92 7.92 0 0 1 0-11.21l61.68-61.68L402.52 268 267.94 402.51l100.21 100.2a31.7 31.7 0 0 0 44.85 0L502.71 413a31.72 31.72 0 0 0 0-44.85z", "M497.94 59.32l-45.25-45.25a48.05 48.05 0 0 0-67.95 0l-46 46 113.21 113.2 46-46a48 48 0 0 0-.01-67.95zM19.08 379.68L.33 487.12a21.23 21.23 0 0 0 24.59 24.56l107.45-18.84 296.92-296.93L316.08 82.72z"]]
};
exports.faPencilRuler = faPencilRuler;
var faPennant = {
  prefix: 'fad',
  iconName: 'pennant',
  icon: [576, 512, [], "f456", ["M128 360.8V112.5a15.8 15.8 0 0 1 16.3-16c43.2 2 95.3 13.2 155.2 42.4 140.6 68.5 223.7 62.9 252.9 57.2 18-3.8 31.3 18.1 18.6 32.4-78.1 88.2-179.8 108.8-184.1 109.6-134.8 26.1-153.3 7.5-237.1 37.5-10.6 3.8-21.8-3.6-21.8-14.8z", "M0 56a56 56 0 1 1 80 50.4V504a8 8 0 0 1-8 8H40a8 8 0 0 1-8-8V106.4A56 56 0 0 1 0 56z"]]
};
exports.faPennant = faPennant;
var faPeopleCarry = {
  prefix: 'fad',
  iconName: 'people-carry',
  icon: [640, 512, [], "f4ce", ["M512 0a48 48 0 1 0 48 48 48 48 0 0 0-48-48zM128 0a48 48 0 1 0 48 48 48 48 0 0 0-48-48zm272 128H240a16 16 0 0 0-16 16v171.59c4.63 2.49 11.33 3.95 16 4.32h160c4.67-.37 11.35-1.83 16-4.3V143.7a16 16 0 0 0-16-15.7z", "M637.71 468.1l-44-110-41.09 46.4-2 18.2 27.69 69.2A32 32 0 0 0 608 512a31.09 31.09 0 0 0 11.9-2.3 32 32 0 0 0 17.81-41.6zm-591.4-110l-44 110a32 32 0 0 0 59.4 23.8l27.71-69.2-2-18.2zm150.31-162.2a108.86 108.86 0 0 0-48.1-59.4 61.72 61.72 0 0 0-56.1-3.3 64.81 64.81 0 0 0-37.5 44.9l-18.4 80.2a64 64 0 0 0 14.4 56.7l67.2 75.9 10.09 92.6A32 32 0 0 0 160 512c1.19 0 2.29-.1 3.5-.2a31.94 31.94 0 0 0 28.29-35.3l-10.1-92.8a64 64 0 0 0-15.59-35l-43.31-49 17.61-70.3 6.79 20.4c4.1 12.5 11.91 23.4 24.5 32.6l51.1 32.5c.38.24.78.46 1.19.68V240l-16.06-10.2zm406.9 62.4L585 178.1a64.81 64.81 0 0 0-37.5-44.9 61.7 61.7 0 0 0-56.1 3.3 109.53 109.53 0 0 0-48.11 59.4L432 229.8 416 240v75.6c.42-.23.83-.46 1.21-.7l51.1-32.5c12.61-9.2 20.4-20 24.5-32.6l6.81-20.4 17.59 70.3-43.29 49a63.86 63.86 0 0 0-15.61 35l-10.1 92.8a32 32 0 0 0 28.31 35.3c1.19.1 2.29.2 3.5.2a32 32 0 0 0 31.79-28.5l10.11-92.6 67.19-75.9a64.4 64.4 0 0 0 14.41-56.7z"]]
};
exports.faPeopleCarry = faPeopleCarry;
var faPepperHot = {
  prefix: 'fad',
  iconName: 'pepper-hot',
  icon: [512, 512, [], "f816", ["M0 456a56 56 0 0 1 56-56c141.58 0 163.44-181.24 221.92-250.82l52.75 24.22v89.7h107.46l37.05 38.54C426.65 389.11 268.64 512 56 512a56 56 0 0 1-56-56z", "M362.67 152.86L288 118.57c22.34-14 48.34-22.59 76.34-22.59a142.91 142.91 0 0 1 57.16 12c18.45-37.22 8.26-62 1.4-72.32a8.07 8.07 0 0 1 .89-10.23l22.9-23a6.67 6.67 0 0 1 .68-.62A8 8 0 0 1 458.62 3c18.56 23.48 35.3 71.91 3.14 131.75A154 154 0 0 1 512 248.67c0 13.68-2.3 26.69-5.56 39.31l-54.68-56.88h-89.09z"]]
};
exports.faPepperHot = faPepperHot;
var faPercent = {
  prefix: 'fad',
  iconName: 'percent',
  icon: [448, 512, [], "f295", ["M336 288a112 112 0 1 0 112 112 111.94 111.94 0 0 0-112-112zm0 160a48 48 0 1 1 48-48 48 48 0 0 1-48 48zM112 0a112 112 0 1 0 112 112A111.94 111.94 0 0 0 112 0zm0 160a48 48 0 1 1 48-48 48 48 0 0 1-48 48z", "M4.7 474.1l368-463.7A24 24 0 0 1 392.3.2l31.6-.1c19.4-.1 30.9 21.8 19.7 37.8L77.4 501.6a24 24 0 0 1-19.6 10.2l-33.4.1c-19.5 0-30.9-21.9-19.7-37.8z"]]
};
exports.faPercent = faPercent;
var faPercentage = {
  prefix: 'fad',
  iconName: 'percentage',
  icon: [384, 512, [], "f541", ["M365.25 338.74a64 64 0 1 0 0 90.51 64 64 0 0 0 0-90.51zm-346.51-256a64 64 0 1 0 90.51 0 64 64 0 0 0-90.51 0z", "M363.31 152.56L88.56 427.31a32 32 0 0 1-45.25 0l-22.62-22.62a32 32 0 0 1 0-45.25L295.44 84.69a32 32 0 0 1 45.25 0l22.62 22.62a32 32 0 0 1 0 45.25z"]]
};
exports.faPercentage = faPercentage;
var faPersonBooth = {
  prefix: 'fad',
  iconName: 'person-booth',
  icon: [576, 512, [], "f756", ["M192 32v160h64V0h-32a32 32 0 0 0-32 32zm0 464a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V320h-64zM64 32a48 48 0 1 0 48 48 48 48 0 0 0-48-48zM544 0h-32v496a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V32a32 32 0 0 0-32-32z", "M288 0v32l31.5 223.1-30.9 154.6c-4.3 21.6 13 38.3 31.4 38.3 15.2 0 28-9.1 32.3-30.4A31.87 31.87 0 0 0 416 416a32 32 0 0 0 64 0V0zm-64 224h-50.9l-45.2-45.3A63.55 63.55 0 0 0 82.7 160H64a64 64 0 0 0-64 64.1L.2 320 0 480a32 32 0 1 0 63.9 0l.1-100.7c.9.5 1.6 1.3 2.5 1.7l29.1 43v56a32 32 0 0 0 64 0v-56.5a64.27 64.27 0 0 0-6.7-28.6l-41.2-61.3V253l20.9 20.9a47.58 47.58 0 0 0 33.9 14.1H224a32 32 0 0 0 0-64z"]]
};
exports.faPersonBooth = faPersonBooth;
var faPersonCarry = {
  prefix: 'fad',
  iconName: 'person-carry',
  icon: [384, 512, [], "f4cf", ["M80 0a48 48 0 1 0 48 48A48 48 0 0 0 80 0zm288 96H208a16 16 0 0 0-16 16v176h176a16 16 0 0 0 16-16V112a16 16 0 0 0-16-16z", "M0 479.9a32 32 0 0 0 64 0v-74.5C48 391.7.6 350.8 0 350.3zM128 288h64v-64h-25.4l-33.3-61.8A63.81 63.81 0 0 0 76.7 128H48a48 48 0 0 0-48 48v103a64.05 64.05 0 0 0 22.4 48.6l76 65.1 14.1 92.5c1 5.7 10.1 30.7 36.8 26.3a32 32 0 0 0 26.3-36.8l-14.1-92.5a64.41 64.41 0 0 0-21.5-38.1l-44-37.7v-78.3z"]]
};
exports.faPersonCarry = faPersonCarry;
var faPersonDolly = {
  prefix: 'fad',
  iconName: 'person-dolly',
  icon: [512, 512, [], "f4d0", ["M511.74 404.81l-8.2-30.9a8 8 0 0 0-9.77-5.71l-154.1 41.3a63.53 63.53 0 0 0-40.9-24.5l-59.4-221.6a8 8 0 0 0-9.77-5.71l-30.9 8.3a8 8 0 0 0-5.71 9.77l58.9 220a63.87 63.87 0 1 0 100 60.1L506 414.58a8 8 0 0 0 5.74-9.77zM288.73 464a16 16 0 1 1 16-16 16 16 0 0 1-16 16zM80 0h-.1a48.05 48.05 0 1 0 .1 0z", "M479 320.9L447.6 204a16 16 0 0 0-19.6-11.3L311 224a16 16 0 0 0-11.3 19.6l31.4 116.9a16 16 0 0 0 19.6 11.3l117-31.3a16 16 0 0 0 11.3-19.6zM0 479.9a32 32 0 0 0 64 0v-74.5C48 391.7.5 350.8 0 350.3zm128-192h94.8l-17.1-64h-39l-33.3-61.8a63.83 63.83 0 0 0-56.7-34.2H48a48 48 0 0 0-48 48v103a64.07 64.07 0 0 0 22.4 48.6l76 65.1 14.1 92.5c1 5.7 10.1 30.7 36.8 26.3a32 32 0 0 0 26.3-36.8l-14.1-92.5A64.4 64.4 0 0 0 140 344l-44-37.7V228z"]]
};
exports.faPersonDolly = faPersonDolly;
var faPersonDollyEmpty = {
  prefix: 'fad',
  iconName: 'person-dolly-empty',
  icon: [512, 512, [], "f4d1", ["M80 0h-.1a48.05 48.05 0 1 0 .1 0zm431.74 404.82l-8.2-30.9a8 8 0 0 0-9.77-5.7l-154.1 41.3a63.57 63.57 0 0 0-40.9-24.5l-59.4-221.6a8 8 0 0 0-9.77-5.7l-30.9 8.3a8 8 0 0 0-5.71 9.77l58.9 220a63.87 63.87 0 1 0 100 60.1L506 414.58a8 8 0 0 0 5.74-9.76zM288.73 464a16 16 0 1 1 16-16 16 16 0 0 1-16 16z", "M0 479.9a32 32 0 0 0 64 0v-74.5C48 391.7.5 350.8 0 350.3zm205.7-256h-39l-33.3-61.8a63.83 63.83 0 0 0-56.7-34.2H48a48 48 0 0 0-48 48v103a64.07 64.07 0 0 0 22.4 48.6l76 65.1 14.1 92.5c1 5.7 10.1 30.7 36.8 26.3a32 32 0 0 0 26.3-36.8l-14.1-92.5A64.4 64.4 0 0 0 140 344l-44-37.7V228l32 59.9h94.8z"]]
};
exports.faPersonDollyEmpty = faPersonDollyEmpty;
var faPersonSign = {
  prefix: 'fad',
  iconName: 'person-sign',
  icon: [512, 512, [], "f757", ["M144 0a48 48 0 1 0 48 48 48.08 48.08 0 0 0-48-48zm357.5 66.6L321.08 1a16 16 0 0 0-20.5 9.6l-43.8 120.3a16 16 0 0 0 9.6 20.5l180.5 65.6a16 16 0 0 0 20.5-9.6L511 87.1a15.93 15.93 0 0 0-9.52-20.5z", "M321 212l-47.8-16-49.3-49.3a63.47 63.47 0 0 0-45.2-18.8h-62.9a63.63 63.63 0 0 0-57.2 35.4L3.38 273.7a32 32 0 1 0 57.2 28.6L80 263.6v54.8L64.08 476.8a32 32 0 0 0 28.6 35c1.1.1 2.2.2 3.2.2a32.05 32.05 0 0 0 31.8-28.8l13.2-131.2h15.3L192 423.5V480a32 32 0 0 0 64 0v-56.5a64.27 64.27 0 0 0-6.7-28.6l-41.2-82.5v-91.2l20 20a65 65 0 0 0 25 15.5l46.1 15.4-11.2 30.8a16 16 0 0 0 9.6 20.5l15 5.5a16 16 0 0 0 20.5-9.6l46.19-126.87L334 176zM429.68 6.5l-15-5.5a16 16 0 0 0-20.5 9.6l-5.49 15 45.1 16.4 5.49-15a16 16 0 0 0-9.6-20.5z"]]
};
exports.faPersonSign = faPersonSign;
var faPhone = {
  prefix: 'fad',
  iconName: 'phone',
  icon: [512, 512, [], "f095", ["M336.23 167.12L406 4.43 389.41.61a24.16 24.16 0 0 0-27.5 13.9l-48 112a23.9 23.9 0 0 0 6.91 28zM154.6 320.71a24 24 0 0 0-28-6.91l-112 48a24.3 24.3 0 0 0-14 27.61l3.8 16.49 162.81-69.77zm338.81-296.1l-55.75-12.87L362 188.23l19.39 15.87A370.59 370.59 0 0 1 204.2 381.3l-15.88-19.4-176.6 75.69 12.89 55.82A24 24 0 0 0 48 512c256.1 0 464-207.49 464-464a24 24 0 0 0-18.59-23.39z", "M406 4.43l-69.77 162.69L362 188.23l75.66-176.49zM4.41 405.9l7.31 31.69 176.6-75.69-21.1-25.77z"]]
};
exports.faPhone = faPhone;
var faPhoneAlt = {
  prefix: 'fad',
  iconName: 'phone-alt',
  icon: [512, 512, [], "f879", ["M191.18 154.51a23.9 23.9 0 0 0 6.91-28l-48-112a24.16 24.16 0 0 0-27.5-13.9L106 4.43l69.73 162.69zm153.6 181.62l162.81 69.77 3.8-16.49a24.3 24.3 0 0 0-14-27.61l-112-48a24 24 0 0 0-28 6.91zM0 48c0 256.5 207.9 464 464 464a24 24 0 0 0 23.4-18.59l12.89-55.82-176.61-75.69-15.88 19.4a370.59 370.59 0 0 1-177.21-177.2L150 188.23 74.34 11.74 18.59 24.61A24 24 0 0 0 0 48z", "M74.34 11.74L150 188.23l25.79-21.11L106 4.43zm270.44 324.39l-21.1 25.77 176.6 75.69 7.31-31.69z"]]
};
exports.faPhoneAlt = faPhoneAlt;
var faPhoneLaptop = {
  prefix: 'fad',
  iconName: 'phone-laptop',
  icon: [640, 512, [], "f87a", ["M128 64h320v32h64V48a48.1 48.1 0 0 0-47.91-48H111.91A48.1 48.1 0 0 0 64 48v240H16a16 16 0 0 0-16 16v16a64.14 64.14 0 0 0 63.91 64H352v-96H128z", "M604 128H420a36 36 0 0 0-36 36v312a36 36 0 0 0 36 36h184a36 36 0 0 0 36-36V164a36 36 0 0 0-36-36zm-28 320H448V192h128z"]]
};
exports.faPhoneLaptop = faPhoneLaptop;
var faPhoneOffice = {
  prefix: 'fad',
  iconName: 'phone-office',
  icon: [576, 512, [], "f67d", ["M192 0h-64a32 32 0 0 0-32 32v352a32 32 0 0 0 32 32h64a32 32 0 0 0 32-32V32a32 32 0 0 0-32-32zm304 384h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-128h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM368 384h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-128h-32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z", "M528 32H256v352a64.07 64.07 0 0 1-64 64h-64a64.07 64.07 0 0 1-64-64V32H48A48 48 0 0 0 0 80v384a48 48 0 0 0 48 48h480a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zM384 432a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16zm0-128a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16zm128 128a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16zm0-128a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16zm0-112H320V96h192z"]]
};
exports.faPhoneOffice = faPhoneOffice;
var faPhonePlus = {
  prefix: 'fad',
  iconName: 'phone-plus',
  icon: [512, 512, [], "f4d2", ["M144 16v64h64a16 16 0 0 1 16 16v32a16 16 0 0 1-16 16h-64v64a16 16 0 0 1-16 16H96a16 16 0 0 1-16-16v-64H16a16 16 0 0 1-16-16V96a16 16 0 0 1 16-16h64V16A16 16 0 0 1 96 0h32a16 16 0 0 1 16 16z", "M512 48c0 256.5-207.9 464-464 464a24 24 0 0 1-23.4-18.6l-24-104a24.29 24.29 0 0 1 14-27.6l112-48a24 24 0 0 1 28 6.9l49.6 60.6a370.61 370.61 0 0 0 177.2-177.2l-60.6-49.6a23.94 23.94 0 0 1-6.9-28l48-112A24.16 24.16 0 0 1 389.41.61l104 24A24 24 0 0 1 512 48z"]]
};
exports.faPhonePlus = faPhonePlus;
var faPhoneRotary = {
  prefix: 'fad',
  iconName: 'phone-rotary',
  icon: [512, 512, [], "f8d3", ["M256 240a72 72 0 1 0 72 72 72 72 0 0 0-72-72zm250.18-117C436.76 65 347.38 32 256 32S75.24 65 5.82 123A16.45 16.45 0 0 0 0 135.64V192a16 16 0 0 0 16 16h70.11a16 16 0 0 0 14.31-8.85L128 128c39.9-17.28 83.2-24 128-24 44.77 0 88.07 6.72 128 24l27.58 71.15a16 16 0 0 0 14.31 8.85H496a16 16 0 0 0 16-16v-56.36a16.45 16.45 0 0 0-5.82-12.64z", "M475.78 376.62L370.43 192.25A64 64 0 0 0 314.86 160H197.14a64 64 0 0 0-55.57 32.25L36.22 376.62A32 32 0 0 0 32 392.5V448a32 32 0 0 0 32 32h384a32 32 0 0 0 32-32v-55.5a32 32 0 0 0-4.22-15.88zM256 384a72 72 0 1 1 72-72 72 72 0 0 1-72 72z"]]
};
exports.faPhoneRotary = faPhoneRotary;
var faPhoneSlash = {
  prefix: 'fad',
  iconName: 'phone-slash',
  icon: [640, 512, [], "f3dd", ["M377.91 126.51l48-112a24.16 24.16 0 0 1 27.5-13.9l104 24A24 24 0 0 1 576 48a462 462 0 0 1-100.17 288l-76-58.76a367.76 367.76 0 0 0 45.6-73.17l-60.6-49.6a23.94 23.94 0 0 1-6.92-27.96zm-109.74 254.9l-49.6-60.6a24 24 0 0 0-28-6.9l-112 48a24 24 0 0 0-13.9 27.5l24 104a24 24 0 0 0 23.4 18.6 461.2 461.2 0 0 0 269.7-86.9l-80-61.8c-10.9 6.5-22.1 12.69-33.6 18.1z", "M3.37 31.41L23 6.21a16.06 16.06 0 0 1 22.5-2.8l588.3 454.7a15.85 15.85 0 0 1 2.9 22.3l-19.6 25.3a16.06 16.06 0 0 1-22.5 2.8L6.17 53.81a15.93 15.93 0 0 1-2.8-22.4z"]]
};
exports.faPhoneSlash = faPhoneSlash;
var faPhoneSquare = {
  prefix: 'fad',
  iconName: 'phone-square',
  icon: [448, 512, [], "f098", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zM94 416a15 15 0 0 1-14.62-11.63l-15-65a15 15 0 0 1 8.7-17.16l70-30a15 15 0 0 1 17.52 4.29l31 37.89a231.87 231.87 0 0 0 110.79-110.78l-37.89-31a15 15 0 0 1-4.29-17.52l30-70a15 15 0 0 1 17.16-8.7l65 15A15 15 0 0 1 384 126c0 160.29-129.95 290-290 290z", "M73.09 322.21l70-30a15 15 0 0 1 17.52 4.29l31 37.89a231.91 231.91 0 0 0 110.78-110.78l-37.89-31a15 15 0 0 1-4.29-17.52l30-70a15 15 0 0 1 17.16-8.7l65 15A15 15 0 0 1 384 126c0 160.29-129.94 290-290 290a15 15 0 0 1-14.62-11.63l-15-65a15 15 0 0 1 8.71-17.16z"]]
};
exports.faPhoneSquare = faPhoneSquare;
var faPhoneSquareAlt = {
  prefix: 'fad',
  iconName: 'phone-square-alt',
  icon: [448, 512, [], "f87b", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-16.38 307.37l-15 65A15 15 0 0 1 354 416C194 416 64 286.29 64 126a15 15 0 0 1 11.63-14.61l65-15a15 15 0 0 1 17.16 8.7l30 70a15 15 0 0 1-4.29 17.52l-37.89 31A231.94 231.94 0 0 0 256.4 334.39l31-37.89a15 15 0 0 1 17.52-4.29l70 30a15 15 0 0 1 8.7 17.16z", "M383.62 339.37l-15 65A15 15 0 0 1 354 416C193.94 416 64 286.29 64 126a15 15 0 0 1 11.63-14.61l65-15a15 15 0 0 1 17.16 8.7l30 70a15 15 0 0 1-4.29 17.52l-37.89 31a231.92 231.92 0 0 0 110.78 110.78l31-37.89a15 15 0 0 1 17.52-4.29l70 30a15 15 0 0 1 8.71 17.16z"]]
};
exports.faPhoneSquareAlt = faPhoneSquareAlt;
var faPhoneVolume = {
  prefix: 'fad',
  iconName: 'phone-volume',
  icon: [384, 512, [], "f2a0", ["M292.94 49.23a12.06 12.06 0 0 0-17.85-1.31l-5.82 5.58A12 12 0 0 0 268 69.43a96.12 96.12 0 0 1 0 117.14 12 12 0 0 0 1.29 15.93l5.82 5.58a12.06 12.06 0 0 0 17.85-1.31 128.18 128.18 0 0 0-.02-157.54zm46-44.94a12 12 0 0 0-17.55-.94l-5.8 5.56a12 12 0 0 0-.93 16.38 160.22 160.22 0 0 1 0 205.42 12 12 0 0 0 .93 16.38l5.8 5.56a12 12 0 0 0 17.55-.94 192.25 192.25 0 0 0-.03-247.42zm-110.5 88.6l-6 5.73a12.09 12.09 0 0 0-2.27 14.38 32 32 0 0 1 0 29.94 12.09 12.09 0 0 0 2.26 14.41l6 5.73a12.05 12.05 0 0 0 18.72-2.58 64.07 64.07 0 0 0 0-65.06 12.05 12.05 0 0 0-18.74-2.55z", "M84.38 182.24a265.55 265.55 0 0 0 0 179.52l55.81-5.58a17.18 17.18 0 0 1 17.67 10.71l32.4 81a17.17 17.17 0 0 1-6.85 20.95l-64.81 40.55A17.2 17.2 0 0 1 97.33 507c-129.87-129.91-129.68-340.29 0-470a17.2 17.2 0 0 1 21.27-2.42l64.81 40.51a17.18 17.18 0 0 1 6.85 21l-32.41 81a17.18 17.18 0 0 1-17.66 10.72z"]]
};
exports.faPhoneVolume = faPhoneVolume;
var faPhotoVideo = {
  prefix: 'fad',
  iconName: 'photo-video',
  icon: [640, 512, [], "f87c", ["M608 0H160a32 32 0 0 0-32 32v96h160V64h192v320h128a32 32 0 0 0 32-32V32a32 32 0 0 0-32-32zM232 103a9 9 0 0 1-9 9h-30a9 9 0 0 1-9-9V73a9 9 0 0 1 9-9h30a9 9 0 0 1 9 9zm352 208a9 9 0 0 1-9 9h-30a9 9 0 0 1-9-9v-30a9 9 0 0 1 9-9h30a9 9 0 0 1 9 9zm0-104a9 9 0 0 1-9 9h-30a9 9 0 0 1-9-9v-30a9 9 0 0 1 9-9h30a9 9 0 0 1 9 9zm0-104a9 9 0 0 1-9 9h-30a9 9 0 0 1-9-9V73a9 9 0 0 1 9-9h30a9 9 0 0 1 9 9z", "M416 160H32a32 32 0 0 0-32 32v288a32 32 0 0 0 32 32h384a32 32 0 0 0 32-32V192a32 32 0 0 0-32-32zM96 224a32 32 0 1 1-32 32 32 32 0 0 1 32-32zm288 224H64v-32l64-64 32 32 128-128 96 96z"]]
};
exports.faPhotoVideo = faPhotoVideo;
var faPi = {
  prefix: 'fad',
  iconName: 'pi',
  icon: [512, 512, [], "f67e", ["M128 286.46a169.35 169.35 0 0 1-36.62 105.62c-7.27 9.18-5.71 22.57 2.56 30.85L128.05 457c10.25 10.29 26.95 9 36.12-2.24A264.57 264.57 0 0 0 224 286.46V144h-96zm375 79.79l-37.46-30A24 24 0 0 0 431.8 340L414 361.67a16.84 16.84 0 0 1-30-10.51V144h-96v202.58c0 55 37.32 105.36 91.32 115.42 42.26 7.87 83.62-7.87 109.62-40.34l17.8-21.66a24 24 0 0 0-3.74-33.75z", "M512 72v48a24 24 0 0 1-24 24H16c-14.22 0-21.36-17.23-11.28-27.31l49.94-49.95A64 64 0 0 1 99.91 48H488a24 24 0 0 1 24 24z"]]
};
exports.faPi = faPi;
var faPiano = {
  prefix: 'fad',
  iconName: 'piano',
  icon: [512, 512, [], "f8d4", ["M512 384v96a32 32 0 0 1-32 32H32a32 32 0 0 1-32-32v-96h48v80h416v-80z", "M512 327.55V384h-96v40a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8v-40h-32v40a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8v-40h-48v40a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8v-40h-48v40a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8v-40h-32v40a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8v-40H0V184.45A184.45 184.45 0 0 1 184.45 0h15.1A184.45 184.45 0 0 1 384 184.45a64 64 0 0 0 35.38 57.24l57.24 28.62A64 64 0 0 1 512 327.55z"]]
};
exports.faPiano = faPiano;
var faPianoKeyboard = {
  prefix: 'fad',
  iconName: 'piano-keyboard',
  icon: [576, 512, [], "f8d5", ["M576 224v192a32 32 0 0 1-32 32H32a32 32 0 0 1-32-32V224h48v176h480V224z", "M576 96v128H464v80a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-80h-80v80a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-80h-80v80a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-80H0V96a32 32 0 0 1 32-32h512a32 32 0 0 1 32 32z"]]
};
exports.faPianoKeyboard = faPianoKeyboard;
var faPie = {
  prefix: 'fad',
  iconName: 'pie',
  icon: [576, 512, [], "f705", ["M88.75 426.08l-31-92.88c32.91-6.57 51.26-23.5 59.6-29.2h.22c10.17 7 36.21 32 85.34 32 50.09 0 78-27 85.28-32h.08c10.11 7 36.2 32 85.26 32s75.13-25.06 85.25-32h.06c7 4.8 26.35 22.58 59.46 29.2l-31 92.88A32 32 0 0 1 456.94 448H119.07a32 32 0 0 1-30.32-21.92z", "M544 240c-6.44 0-10.37-1.2-14.47-3.52C494.93 136.17 400.07 64 288 64S81 136.21 46.45 236.55c-4.07 2.28-8 3.45-14.45 3.45a32 32 0 0 0 0 64c32 0 50-13.47 61.92-22.39 9.08-6.8 12.83-9.61 23.53-9.61s14.47 2.81 23.55 9.61c11.91 8.92 29.89 22.39 61.91 22.39s50-13.48 61.88-22.41c9-6.78 12.8-9.59 23.45-9.59s14.39 2.81 23.44 9.59c11.89 8.92 29.86 22.41 61.86 22.41s49.95-13.48 61.84-22.41c9.05-6.78 12.8-9.59 23.44-9.59s14.34 2.81 23.38 9.58C494.06 290.52 512 304 544 304a32 32 0 0 0 0-64zm-337.69-88.84l-16 32c-9.44 18.83-38.17 4.79-28.62-14.31l16-32c9.53-18.85 38.09-4.63 28.62 14.31zM304 176c0 21.17-32 21.18-32 0v-32c0-21.17 32-21.18 32 0zm81.69 7.16l-16-32c-9.48-18.95 19.13-33.19 28.62-14.31l16 32c9.53 19.05-19.17 33.15-28.62 14.31z"]]
};
exports.faPie = faPie;
var faPig = {
  prefix: 'fad',
  iconName: 'pig',
  icon: [576, 512, [], "f706", ["M560 192h-29.51a159.88 159.88 0 0 0-37.38-52.46L512 64h-32c-29.4 0-55.39 13.5-73 34.32-7.57-1.1-15.12-2.32-23-2.32H256c-94.82 0-160 78.88-160 160a159.75 159.75 0 0 0 64 128v80a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16v-48h128v48a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16v-80.72A160.37 160.37 0 0 0 511.28 352H560a16 16 0 0 0 16-16V208a16 16 0 0 0-16-16zm-128 64a16 16 0 1 1 16-16 16 16 0 0 1-16 16z", "M51.26 223.52a24 24 0 0 1-18.74-28.3C34.74 183.82 45.4 176 57 176h1a6 6 0 0 0 6-6v-20a6 6 0 0 0-6-6C29.5 144 4.1 164.4.47 192.62a54.64 54.64 0 0 0-.47 7.23A56.08 56.08 0 0 0 56 256h40a155.05 155.05 0 0 1 3.37-32H56a23.63 23.63 0 0 1-4.74-.48zM432 224a16 16 0 1 0 16 16 16 16 0 0 0-16-16z"]]
};
exports.faPig = faPig;
var faPiggyBank = {
  prefix: 'fad',
  iconName: 'piggy-bank',
  icon: [576, 512, [], "f4d3", ["M560 224h-29.51a159.88 159.88 0 0 0-37.38-52.46L512 96h-32c-29.4 0-55.39 13.5-73 34.32-7.57-1.1-15.12-2.32-23-2.32H256c-94.82 0-160 78.88-160 160a159.75 159.75 0 0 0 64 128v80a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16v-48h128v48a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16v-80.72A160.37 160.37 0 0 0 511.28 384H560a16 16 0 0 0 16-16V240a16 16 0 0 0-16-16zm-128 64a16 16 0 1 1 16-16 16 16 0 0 1-16 16z", "M51.26 255.52a24 24 0 0 1-18.74-28.3C34.74 215.82 45.4 208 57 208h1a6 6 0 0 0 6-6v-20a6 6 0 0 0-6-6C29.5 176 4.1 196.4.47 224.62a54.64 54.64 0 0 0-.47 7.23A56.08 56.08 0 0 0 56 288h40a155.05 155.05 0 0 1 3.37-32H56a23.63 23.63 0 0 1-4.74-.48zM432 256a16 16 0 1 0 16 16 16 16 0 0 0-16-16zM306.5 0a96 96 0 0 0-88.81 132.51A162.64 162.64 0 0 1 256 128h128a104.31 104.31 0 0 1 12.71.88A96.06 96.06 0 0 0 306.5 0z"]]
};
exports.faPiggyBank = faPiggyBank;
var faPills = {
  prefix: 'fad',
  iconName: 'pills',
  icon: [576, 512, [], "f484", ["M299.7 226.3a8.21 8.21 0 0 0-12.3.8c-45.3 62.5-40.4 150.1 15.9 206.4s143.9 61.2 206.4 15.9a8.14 8.14 0 0 0 .8-12.3zm229.8-19c-56.3-56.3-143.9-61.2-206.4-15.9a8.14 8.14 0 0 0-.8 12.3l210.8 210.8a8.21 8.21 0 0 0 12.3-.8c45.3-62.6 40.5-150.1-15.9-206.4zM112 32A111.94 111.94 0 0 0 0 144v112h224V144A111.94 111.94 0 0 0 112 32z", "M224 256v112a112 112 0 0 1-224 0V256z"]]
};
exports.faPills = faPills;
var faPizza = {
  prefix: 'fad',
  iconName: 'pizza',
  icon: [576, 512, [], "f817", ["M380.61 131.55a175.76 175.76 0 0 0-248.61-.13l-.14.13c-68.68 68.73-68.68 180.17 0 248.9a175.77 175.77 0 0 0 248.58.13l.13-.13L256.25 256zM160.25 280a24 24 0 0 1 0-48 24 24 0 0 1 0 48zm48-96a24 24 0 1 1 24-24 24 24 0 0 1-24 24zm72 184a24 24 0 1 1-24-24 24 24 0 0 1 24 24zm174.94-224.92L342.35 256l112.84 112.93a176.6 176.6 0 0 0 0-225.85zM424.1 288a24 24 0 1 1 24-24 24 24 0 0 1-24 24z", "M256.25 392a24 24 0 1 0-24-24 24 24 0 0 0 24 24zm-48-256a24 24 0 1 0 24 24 24 24 0 0 0-24-24zm195 267.08c-81.87 81.92-215 81.22-296-2.11-77-79.19-77-210.74 0-289.94 81-83.33 214.14-84 296-2.11l22-22.07c6.46-6.46 6.44-17.36-.42-23.39-112.89-99.22-292.24-82.09-382.21 51.37-56.83 84.3-56.83 198.05 0 282.34 90 133.46 269.32 150.59 382.23 51.37 6.86-6 6.88-16.93.42-23.39zm120-302.95c-5.79-7.55-17.22-7.92-23.95-1.19l-21.42 21.44c66.7 77.84 66.7 193.4 0 271.24l21.42 21.44c6.73 6.73 18.16 6.37 23.95-1.19a256.62 256.62 0 0 0-.01-311.74zM160.25 232a24 24 0 1 0 24 24 24 24 0 0 0-24-24zm263.85 8a24 24 0 1 0 24 24 24 24 0 0 0-24-24z"]]
};
exports.faPizza = faPizza;
var faPizzaSlice = {
  prefix: 'fad',
  iconName: 'pizza-slice',
  icon: [512, 512, [], "f818", ["M100.39 112.19L.54 491.64a16.2 16.2 0 0 0 20 19.75l379-105.1c-4.27-174.89-123.08-292.14-299.15-294.1zM128 416a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm48-152a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm104 104a32 32 0 1 1 32-32 32 32 0 0 1-32 32z", "M128 352a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm48-152a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm335.76 145.86C490.88 165.08 340.77 17.32 158.86.15c-16.16-1.52-31.2 8.42-35.33 24.12l-14.81 56.27c187.62 5.46 314.54 130.61 322.48 317l56.94-15.78c15.72-4.36 25.49-19.68 23.62-35.9zM280 304a32 32 0 1 0 32 32 32 32 0 0 0-32-32z"]]
};
exports.faPizzaSlice = faPizzaSlice;
var faPlaceOfWorship = {
  prefix: 'fad',
  iconName: 'place-of-worship',
  icon: [640, 512, [], "f67f", ["M620.61 366.55L512 320v192h112a16 16 0 0 0 16-16V396a32 32 0 0 0-19.39-29.45zM0 396v100a16 16 0 0 0 16 16h112V320L19.39 366.55A32 32 0 0 0 0 396z", "M416 102.63v115l48.46 29.08A32 32 0 0 1 480 274.12V512h-96v-96a64 64 0 0 0-128 0v96h-96V274.12a32 32 0 0 1 15.54-27.44L224 217.6v-115a32 32 0 0 1 9.38-22.6l75.31-75.31a16 16 0 0 1 22.62 0L406.62 80a32 32 0 0 1 9.38 22.63z"]]
};
exports.faPlaceOfWorship = faPlaceOfWorship;
var faPlane = {
  prefix: 'fad',
  iconName: 'plane',
  icon: [576, 512, [], "f072", ["M214.86 192h150.85L260.61 8.06A16 16 0 0 0 246.71 0h-65.5a16 16 0 0 0-15.38 20.39zm-49 299.6a16 16 0 0 0 15.35 20.4h65.5a16 16 0 0 0 13.89-8.06L365.71 320H214.86z", "M480 320H112l-43.2 57.6A16 16 0 0 1 56 384H16A16 16 0 0 1 .49 364.12L32 256 .49 147.88A16 16 0 0 1 16 128h40a16 16 0 0 1 12.8 6.4L112 192h368c35.35 0 96 28.65 96 64s-60.65 64-96 64z"]]
};
exports.faPlane = faPlane;
var faPlaneAlt = {
  prefix: 'fad',
  iconName: 'plane-alt',
  icon: [576, 512, [], "f3de", ["M197.2 200.4c-32.6 1 150.5-.4 150.5-.4l-38.6-72H324a12 12 0 0 0 12-12V76a12 12 0 0 0-12-12h-49.2L243.5 5.7A12.18 12.18 0 0 0 233.3 0h-57.8a11.94 11.94 0 0 0-11.6 15zm0 111.2L163.9 497a12 12 0 0 0 11.6 15h57.8a12 12 0 0 0 10.2-5.7l31.3-58.3H324a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12h-14.9l38.6-72s-183.1-1.4-150.5-.4z", "M576 256c0 30.9-46.6 56-104 56l-274.8-.4a755.21 755.21 0 0 1-89.9-7.8l-39.8 66.4a12.08 12.08 0 0 1-10.3 5.8H14.6a12 12 0 0 1-11.7-14.4l16.5-82.8C6.9 271.9 0 264.1 0 256s6.9-15.9 19.4-22.8L2.8 150.4A12 12 0 0 1 14.6 136h42.6a12.08 12.08 0 0 1 10.3 5.8l39.8 66.4a755.21 755.21 0 0 1 89.9-7.8L472 200c57.4 0 104 25.1 104 56z"]]
};
exports.faPlaneAlt = faPlaneAlt;
var faPlaneArrival = {
  prefix: 'fad',
  iconName: 'plane-arrival',
  icon: [640, 512, [], "f5af", ["M640 464v32a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h608a16 16 0 0 1 16 16z", "M32.23 182.41L32 80.63a16.52 16.52 0 0 1 20.72-15.88l39.73 10.83a16.54 16.54 0 0 1 11 9.93l27.59 67.88 102.2 27.84L185.34 17A16.51 16.51 0 0 1 206.05.58l65.09 17.73a16.62 16.62 0 0 1 11.66 11.91l100.36 191.85 97.51 26.56c26.48 7.21 51.55 20.18 70.83 40 21.64 22.25 27.2 40.46 23.37 55S557.29 371 527.62 379.3c-26.44 7.36-54.52 5.85-81-1.36L159 299.59a62.52 62.52 0 0 1-25.47-13.93l-88.74-80c-6.53-5.91-12.37-14.34-12.56-23.25z"]]
};
exports.faPlaneArrival = faPlaneArrival;
var faPlaneDeparture = {
  prefix: 'fad',
  iconName: 'plane-departure',
  icon: [640, 512, [], "f5b0", ["M640 448v32a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h608a16 16 0 0 1 16 16z", "M636.11 59.08c7.23 14.56 5.24 35.17-13.07 63.65-16.31 25.37-40.28 44.74-67 58.31l-291 147.65a65.79 65.79 0 0 1-29.64 7.12l-130.52.19a33 33 0 0 1-24.33-10.71l-76.21-83a18.28 18.28 0 0 1 5.57-28.08L50 193.86a17.8 17.8 0 0 1 16.07 0l72.35 36.47 103.21-52.38L85.45 79.83a18.27 18.27 0 0 1 5.17-28.53l65.75-33.37a17.8 17.8 0 0 1 18 1.11l218.7 82.06 98.51-50c26.74-13.55 56.42-21.41 86.28-19.47 33.51 2.18 51.04 12.88 58.25 27.45z"]]
};
exports.faPlaneDeparture = faPlaneDeparture;
var faPlay = {
  prefix: 'fad',
  iconName: 'play',
  icon: [448, 512, [], "f04b", ["M424.41 214.66L72.41 6.55C43.81-10.34 0 6.05 0 47.87V464c0 37.5 40.69 60.09 72.41 41.3l352-208c31.4-18.54 31.5-64.14 0-82.64zM321.89 283.5L112.28 407.35C91 420 64 404.58 64 379.8V132c0-24.78 27-40.16 48.28-27.54l209.61 123.95a32 32 0 0 1 0 55.09z", "M112.28 104.48l209.61 123.93a32 32 0 0 1 0 55.09L112.28 407.35C91 420 64 404.58 64 379.8V132c0-24.76 27-40.14 48.28-27.52z"]]
};
exports.faPlay = faPlay;
var faPlayCircle = {
  prefix: 'fad',
  iconName: 'play-circle',
  icon: [512, 512, [], "f144", ["M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm115.7 272l-176 101c-15.8 8.8-35.7-2.5-35.7-21V152c0-18.4 19.8-29.8 35.7-21l176 107c16.4 9.2 16.4 32.9 0 42z", "M371.7 280l-176 101c-15.8 8.8-35.7-2.5-35.7-21V152c0-18.4 19.8-29.8 35.7-21l176 107c16.4 9.2 16.4 32.9 0 42z"]]
};
exports.faPlayCircle = faPlayCircle;
var faPlug = {
  prefix: 'fad',
  iconName: 'plug',
  icon: [384, 512, [], "f1e6", ["M96 0a32 32 0 0 0-32 32v96h64V32A32 32 0 0 0 96 0zm192 0a32 32 0 0 0-32 32v96h64V32a32 32 0 0 0-32-32z", "M384 176v32a16 16 0 0 1-16 16h-16v32a160.07 160.07 0 0 1-128 156.8V512h-64v-99.2A160.07 160.07 0 0 1 32 256v-32H16a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h352a16 16 0 0 1 16 16z"]]
};
exports.faPlug = faPlug;
var faPlus = {
  prefix: 'fad',
  iconName: 'plus',
  icon: [448, 512, [], "f067", ["M176 448a32 32 0 0 0 32 32h32a32 32 0 0 0 32-32V304h-96zm64-416h-32a32 32 0 0 0-32 32v144h96V64a32 32 0 0 0-32-32z", "M448 240v32a32 32 0 0 1-32 32H32a32 32 0 0 1-32-32v-32a32 32 0 0 1 32-32h384a32 32 0 0 1 32 32z"]]
};
exports.faPlus = faPlus;
var faPlusCircle = {
  prefix: 'fad',
  iconName: 'plus-circle',
  icon: [512, 512, [], "f055", ["M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276a12 12 0 0 1-12 12h-92v92a12 12 0 0 1-12 12h-56a12 12 0 0 1-12-12v-92h-92a12 12 0 0 1-12-12v-56a12 12 0 0 1 12-12h92v-92a12 12 0 0 1 12-12h56a12 12 0 0 1 12 12v92h92a12 12 0 0 1 12 12z", "M400 284a12 12 0 0 1-12 12h-92v92a12 12 0 0 1-12 12h-56a12 12 0 0 1-12-12v-92h-92a12 12 0 0 1-12-12v-56a12 12 0 0 1 12-12h92v-92a12 12 0 0 1 12-12h56a12 12 0 0 1 12 12v92h92a12 12 0 0 1 12 12z"]]
};
exports.faPlusCircle = faPlusCircle;
var faPlusHexagon = {
  prefix: 'fad',
  iconName: 'plus-hexagon',
  icon: [576, 512, [], "f300", ["M553.5 231.8l-112-192A48.14 48.14 0 0 0 400 16H176a48.09 48.09 0 0 0-41.5 23.8l-112 192a48.19 48.19 0 0 0 0 48.4l112 192A48.09 48.09 0 0 0 176 496h224a48.13 48.13 0 0 0 41.5-23.8l112-192a48.19 48.19 0 0 0 0-48.4zM432 284a12 12 0 0 1-12 12h-92v92a12 12 0 0 1-12 12h-56a12 12 0 0 1-12-12v-92h-92a12 12 0 0 1-12-12v-56a12 12 0 0 1 12-12h92v-92a12 12 0 0 1 12-12h56a12 12 0 0 1 12 12v92h92a12 12 0 0 1 12 12z", "M432 284a12 12 0 0 1-12 12h-92v92a12 12 0 0 1-12 12h-56a12 12 0 0 1-12-12v-92h-92a12 12 0 0 1-12-12v-56a12 12 0 0 1 12-12h92v-92a12 12 0 0 1 12-12h56a12 12 0 0 1 12 12v92h92a12 12 0 0 1 12 12z"]]
};
exports.faPlusHexagon = faPlusHexagon;
var faPlusOctagon = {
  prefix: 'fad',
  iconName: 'plus-octagon',
  icon: [512, 512, [], "f301", ["M497.9 150.5L361.4 14.1A48 48 0 0 0 327.5 0H184.4a48 48 0 0 0-33.9 14.1L14.1 150.6A48 48 0 0 0 0 184.5v143.1a48 48 0 0 0 14.1 33.9l136.5 136.4a48 48 0 0 0 33.9 14.1h143.1a48 48 0 0 0 33.9-14.1l136.4-136.5a48 48 0 0 0 14.1-33.9V184.4a48 48 0 0 0-14.1-33.9zM400 284a12 12 0 0 1-12 12h-92v92a12 12 0 0 1-12 12h-56a12 12 0 0 1-12-12v-92h-92a12 12 0 0 1-12-12v-56a12 12 0 0 1 12-12h92v-92a12 12 0 0 1 12-12h56a12 12 0 0 1 12 12v92h92a12 12 0 0 1 12 12z", "M400 284a12 12 0 0 1-12 12h-92v92a12 12 0 0 1-12 12h-56a12 12 0 0 1-12-12v-92h-92a12 12 0 0 1-12-12v-56a12 12 0 0 1 12-12h92v-92a12 12 0 0 1 12-12h56a12 12 0 0 1 12 12v92h92a12 12 0 0 1 12 12z"]]
};
exports.faPlusOctagon = faPlusOctagon;
var faPlusSquare = {
  prefix: 'fad',
  iconName: 'plus-square',
  icon: [448, 512, [], "f0fe", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-32 252a12 12 0 0 1-12 12h-92v92a12 12 0 0 1-12 12h-56a12 12 0 0 1-12-12v-92H92a12 12 0 0 1-12-12v-56a12 12 0 0 1 12-12h92v-92a12 12 0 0 1 12-12h56a12 12 0 0 1 12 12v92h92a12 12 0 0 1 12 12z", "M80 228a12 12 0 0 1 12-12h92v-92a12 12 0 0 1 12-12h56a12 12 0 0 1 12 12v92h92a12 12 0 0 1 12 12v56a12 12 0 0 1-12 12h-92v92a12 12 0 0 1-12 12h-56a12 12 0 0 1-12-12v-92H92a12 12 0 0 1-12-12z"]]
};
exports.faPlusSquare = faPlusSquare;
var faPodcast = {
  prefix: 'fad',
  iconName: 'podcast',
  icon: [448, 512, [], "f2ce", ["M224 0A223.88 223.88 0 0 0 0 224c0 90 52.6 165.65 125.74 201.41a6 6 0 0 0 8.53-6.31c-2.38-15.51-4.34-31-5.4-44.34a6 6 0 0 0-2.68-4.51A176 176 0 0 1 48 222.9c.59-96.24 79.29-174.65 175.53-174.9C320.79 47.75 400 126.8 400 224a176 176 0 0 1-80.65 147.87c-1 14-3.07 30.59-5.62 47.23a6 6 0 0 0 8.53 6.31C395.23 389.73 448 314.19 448 224A223.89 223.89 0 0 0 224 0zm98.45 325A143.63 143.63 0 0 0 368 216.43c-1.86-76.21-63.6-138.21-139.8-140.37C146.87 73.75 80 139.21 80 220a143.62 143.62 0 0 0 45.55 105 6 6 0 0 0 9.45-1.9 66.57 66.57 0 0 1 21.24-25.36 6 6 0 0 0 .63-9.19 96 96 0 1 1 134.26 0 6 6 0 0 0 .63 9.19A66.57 66.57 0 0 1 313 323.1a6 6 0 0 0 9.45 1.9z", "M224 312c-32.86 0-64 8.59-64 43.75 0 33.15 12.93 104.38 20.57 132.81 5.14 19 24.57 23.44 43.43 23.44s38.29-4.43 43.43-23.44c7.7-28.63 20.57-99.86 20.57-132.81 0-35.16-31.14-43.75-64-43.75zm0-24a64 64 0 1 0-64-64 64 64 0 0 0 64 64z"]]
};
exports.faPodcast = faPodcast;
var faPodium = {
  prefix: 'fad',
  iconName: 'podium',
  icon: [448, 512, [], "f680", ["M384 224l-22.22 240H86.22L64 224z", "M400 464H48a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h352a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16zm32-320H113.68c6.2-30.29 29.85-54.3 61-61.55A47.72 47.72 0 0 0 208 96h64a48 48 0 0 0 0-96h-64a47.89 47.89 0 0 0-46.31 36C110.81 48.48 71.66 91.15 65 144H16a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16z"]]
};
exports.faPodium = faPodium;
var faPodiumStar = {
  prefix: 'fad',
  iconName: 'podium-star',
  icon: [448, 512, [], "f758", ["M384 224l-22.22 240H86.22L64 224z", "M400 464H48a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h352a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16zm-92.63-143a10.05 10.05 0 0 0-8.47-11.43l-45.6-6.7-20.4-41.4a10 10 0 0 0-17.9 0l-20.4 41.4-45.6 6.73a10 10 0 0 0-5.5 17.1l33 32.2-7.8 45.5a10 10 0 0 0 14.5 10.5l40.8-21.5 40.8 21.5a10 10 0 0 0 14.5-10.5l-7.8-45.5 33-32.2a10 10 0 0 0 2.87-5.7zM432 144H113.68c6.2-30.29 29.85-54.3 61-61.55A47.72 47.72 0 0 0 208 96h64a48 48 0 0 0 0-96h-64a47.89 47.89 0 0 0-46.31 36C110.81 48.48 71.66 91.15 65 144H16a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16z"]]
};
exports.faPodiumStar = faPodiumStar;
var faPoll = {
  prefix: 'fad',
  iconName: 'poll',
  icon: [448, 512, [], "f681", ["M0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48H48A48 48 0 0 0 0 80zm112 304a16 16 0 0 1-16-16V240a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16v128a16 16 0 0 1-16 16zm224-96a16 16 0 0 1 16 16v64a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-64a16 16 0 0 1 16-16zm-96-160a16 16 0 0 1 16 16v224a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V144a16 16 0 0 1 16-16z", "M160 368V240a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v128a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16zm128-64v64a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-64a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16zm-96-160v224a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V144a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16z"]]
};
exports.faPoll = faPoll;
var faPollH = {
  prefix: 'fad',
  iconName: 'poll-h',
  icon: [448, 512, [], "f682", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zM96 144a16 16 0 0 1 16-16h128a16 16 0 0 1 16 16v32a16 16 0 0 1-16 16H112a16 16 0 0 1-16-16zm96 224a16 16 0 0 1-16 16h-64a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h64a16 16 0 0 1 16 16zm160-96a16 16 0 0 1-16 16H112a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h224a16 16 0 0 1 16 16z", "M112 192h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H112a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm64 128h-64a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm160-96H112a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h224a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z"]]
};
exports.faPollH = faPollH;
var faPollPeople = {
  prefix: 'fad',
  iconName: 'poll-people',
  icon: [640, 512, [], "f759", ["M616.12 32H248a23.94 23.94 0 0 0-24 23.88V168a23.94 23.94 0 0 0 23.88 24H616a23.94 23.94 0 0 0 24-23.88V56a23.94 23.94 0 0 0-23.88-24zM576 128H288V96h288zm40.12 192H248a23.94 23.94 0 0 0-24 23.88V456a23.94 23.94 0 0 0 23.88 24H616a23.94 23.94 0 0 0 24-23.88V344a23.94 23.94 0 0 0-23.88-24zM576 416H288v-32h288z", "M96 416H64a64.06 64.06 0 0 0-64 64v16a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-16a64.06 64.06 0 0 0-64-64zM80 96a48 48 0 1 0-48-48 48 48 0 0 0 48 48zm48 240a48 48 0 1 0-48 48 48 48 0 0 0 48-48zM288 96v32h224V96zm0 320h128v-32H288zM96 128H64a64.06 64.06 0 0 0-64 64v16a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-16a64.06 64.06 0 0 0-64-64z"]]
};
exports.faPollPeople = faPollPeople;
var faPoo = {
  prefix: 'fad',
  iconName: 'poo',
  icon: [512, 512, [], "f2fe", ["M451.4 369.1A71.77 71.77 0 0 0 408 240h-14.1A63.74 63.74 0 0 0 352 128h-5.9a94.61 94.61 0 0 0 5.9-32 96 96 0 0 0-96-96 93.1 93.1 0 0 0-15.1 1.5A79.79 79.79 0 0 1 176 128h-16a63.74 63.74 0 0 0-41.9 112H104a71.77 71.77 0 0 0-43.4 129.1A71.9 71.9 0 0 0 72 512h368a71.9 71.9 0 0 0 11.4-142.9zM320 256a32 32 0 1 1-32 32 32 32 0 0 1 32-32zm-128 0a32 32 0 1 1-32 32 32 32 0 0 1 32-32zm159.5 139C341 422.9 293 448 256 448s-85-25.1-95.5-53a8.2 8.2 0 0 1 7.8-11h175.4a8.2 8.2 0 0 1 7.8 11z", "M320 256a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm-128 0a32 32 0 1 0 32 32 32 32 0 0 0-32-32z"]]
};
exports.faPoo = faPoo;
var faPooStorm = {
  prefix: 'fad',
  iconName: 'poo-storm',
  icon: [448, 512, [], "f75a", ["M318.4 354l-88 152a12 12 0 0 1-22.1-8.8l23-97.2H172a12 12 0 0 1-11.9-13.6l16-120A12.06 12.06 0 0 1 188 256h68a12 12 0 0 1 11.6 15.1L250.3 336H308a12 12 0 0 1 10.4 18z", "M374.4 224.7c41 3.3 73.6 37.5 73.5 79.3a80.24 80.24 0 0 1-80 80h-30l8.1-14a44 44 0 0 0-38.1-66h-16l6.6-24.7A44 44 0 0 0 256 224h-68a44.26 44.26 0 0 0-43.7 38.2l-16 120a10.82 10.82 0 0 1 0 1.8H80a80.24 80.24 0 0 1-80-80c0-41.8 32.6-76 73.6-79.3A62 62 0 0 1 64 192a64.06 64.06 0 0 1 64-64h16A79.79 79.79 0 0 0 208.9 1.5 93.1 93.1 0 0 1 224 0a96 96 0 0 1 96 96 94.61 94.61 0 0 1-5.9 32h5.9a64.06 64.06 0 0 1 64 64 62 62 0 0 1-9.6 32.7z"]]
};
exports.faPooStorm = faPooStorm;
var faPoop = {
  prefix: 'fad',
  iconName: 'poop',
  icon: [512, 512, [], "f619", ["M480 311v2a70.89 70.89 0 0 1-27.34 56 71.2 71.2 0 0 0-11.66-1H71a71.2 71.2 0 0 0-11.66 1A70.89 70.89 0 0 1 32 313v-2a71 71 0 0 1 71-71h306a71 71 0 0 1 71 71z", "M118.05 240H394a63.76 63.76 0 0 0-42-112h-5.88a98.21 98.21 0 0 0 4.36-50.78A94.18 94.18 0 0 0 240.91 1.55 79.78 79.78 0 0 1 176 128h-16a63.76 63.76 0 0 0-42 112zm333.33 129.17l.42-.33A71.12 71.12 0 0 0 441 368H71a70.69 70.69 0 0 0-10.76.84c.14.11.27.23.42.33A71.87 71.87 0 0 0 72 512h368a71.87 71.87 0 0 0 11.36-142.86z"]]
};
exports.faPoop = faPoop;
var faPopcorn = {
  prefix: 'fad',
  iconName: 'popcorn',
  icon: [512, 512, [], "f819", ["M101.46,118a37.17,37.17,0,0,1,.33-37.43c9.11-16,28-23.66,45.57-20.12.34-16.64,11.46-32,29-37.43a43.36,43.36,0,0,1,38.82,6.08A41.63,41.63,0,0,1,242.5,2c22.27-6.78,46.23,4.42,53.33,25.54a4.22,4.22,0,0,1,.68,1.92A43.29,43.29,0,0,1,335.65,23c17.53,5.43,28.67,20.79,29,37.43C382.2,57,401.09,64.6,410.2,80.6a37.88,37.88,0,0,1,.33,37.43,42.7,42.7,0,0,1,33.09,20.79c3.91,6.75,4.76,14,4.24,21.12H64.13c-.5-7.12.35-14.38,4.27-21.12C75.14,126.67,88,119.31,101.46,118Z", "M64,192h81.56l28,256h45.05L197.05,192H315L293.39,448h45l28-256H448L404.09,484.73A32,32,0,0,1,372.44,512H139.56a32,32,0,0,1-31.65-27.25Z"]]
};
exports.faPopcorn = faPopcorn;
var faPortrait = {
  prefix: 'fad',
  iconName: 'portrait',
  icon: [384, 512, [], "f3e0", ["M336 0H48A48 48 0 0 0 0 48v416a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V48a48 48 0 0 0-48-48zM192 128a64 64 0 1 1-64 64 64.06 64.06 0 0 1 64-64zm112 236.8c0 10.6-10 19.2-22.4 19.2H102.4C90 384 80 375.4 80 364.8v-19.2c0-31.8 30.1-57.6 67.2-57.6h5a103 103 0 0 0 79.6 0h5c37.1 0 67.2 25.8 67.2 57.6z", "M192 256a64 64 0 1 0-64-64 64.06 64.06 0 0 0 64 64zm44.8 32h-5a103 103 0 0 1-79.6 0h-5c-37.1 0-67.2 25.8-67.2 57.6v19.2c0 10.6 10 19.2 22.4 19.2h179.2c12.4 0 22.4-8.6 22.4-19.2v-19.2c0-31.8-30.1-57.6-67.2-57.6z"]]
};
exports.faPortrait = faPortrait;
var faPoundSign = {
  prefix: 'fad',
  iconName: 'pound-sign',
  icon: [320, 512, [], "f154", ["M8 236v40a12 12 0 0 0 12 12h28v-64H20a12 12 0 0 0-12 12zm204-12h-84v64h84a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12z", "M48 416V158c0-73.26 58-126 139.93-126 48.65 0 85.19 22.56 101.58 34.93a12 12 0 0 1 2.31 16.81 2.56 2.56 0 0 1-.2.26l-28.49 35.51a12 12 0 0 1-15.69 2.69c-11.77-7.35-34-18.85-57.65-18.85-37.23 0-61.79 24.82-61.79 57.08v254.42h122.51V364a12 12 0 0 1 12-12H308a12 12 0 0 1 12 12v104a12 12 0 0 1-12 12H12a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12z"]]
};
exports.faPoundSign = faPoundSign;
var faPowerOff = {
  prefix: 'fad',
  iconName: 'power-off',
  icon: [512, 512, [], "f011", ["M272 0a23.94 23.94 0 0 1 24 24v240a23.94 23.94 0 0 1-24 24h-32a23.94 23.94 0 0 1-24-24V24a23.94 23.94 0 0 1 24-24z", "M504 256c0 136.8-110.8 247.7-247.5 248C120 504.3 8.2 393 8 256.4A248 248 0 0 1 111.8 54.2a24.07 24.07 0 0 1 35 7.7L162.6 90a24 24 0 0 1-6.6 31 168 168 0 0 0 100 303c91.6 0 168.6-74.2 168-169.1a168.07 168.07 0 0 0-68.1-134 23.86 23.86 0 0 1-6.5-30.9l15.8-28.1a24 24 0 0 1 34.8-7.8A247.51 247.51 0 0 1 504 256z"]]
};
exports.faPowerOff = faPowerOff;
var faPray = {
  prefix: 'fad',
  iconName: 'pray',
  icon: [384, 512, [], "f683", ["M256 128a64 64 0 1 1 64-64 64 64 0 0 1-64 64z", "M201.22 269l-34.8 64.87 109.86 109.85C301.77 469.21 282.08 512 248 512H40a40 40 0 0 1 0-80h91.56l-44.81-34.89C43.87 369.73 29.16 317 52.56 273.36l49.37-92c11.12-20.65 32.18-34.44 56.37-36.92 24.78-2.59 48.56 6.94 64 25.33l38.91 46.31 57.44-47A40 40 0 1 1 369.34 231l-88 72a40 40 0 0 1-56-5.22z"]]
};
exports.faPray = faPray;
var faPrayingHands = {
  prefix: 'fad',
  iconName: 'praying-hands',
  icon: [640, 512, [], "f684", ["M640 384v96c0 10.82-8.52 32-32 32a32.16 32.16 0 0 1-8.06-1l-179.19-46.65A117.32 117.32 0 0 1 336 352V224a32 32 0 0 1 64 0v80a16 16 0 0 0 32 0v-76.54a95.86 95.86 0 0 0-13.69-49.39L340.56 48.48a31.8 31.8 0 0 1 53.27-34.7c.2.24.61.21.79.48l117.26 175.89A95.66 95.66 0 0 1 528 243.38v80.23l90.12 30A32 32 0 0 1 640 384z", "M32 511.92c-23.48 0-32-21.18-32-32v-96a32 32 0 0 1 21.88-30.35l90.12-30V243.3a95.66 95.66 0 0 1 16.12-53.23l117.26-175.9c.17-.27.59-.25.79-.48a31.8 31.8 0 0 1 53.27 34.7L221.69 178A95.86 95.86 0 0 0 208 227.37v76.55a16 16 0 1 0 32 0v-80a32 32 0 1 1 64 0v128a117.35 117.35 0 0 1-84.75 112.35L40.06 510.89a32 32 0 0 1-8.06 1.03z"]]
};
exports.faPrayingHands = faPrayingHands;
var faPrescription = {
  prefix: 'fad',
  iconName: 'prescription',
  icon: [384, 512, [], "f5b1", ["M379.32 274l-78.06 78L256 397.29l-78 78.07a16 16 0 0 1-22.63 0l-22.63-22.63a16 16 0 0 1 0-22.63l201.32-201.38a16 16 0 0 1 22.63 0l22.63 22.63a16 16 0 0 1 0 22.65z", "M379.32 430.09l-78.06-78-45.26 45.2 78.06 78.06a16 16 0 0 0 22.63 0l22.63-22.63a16 16 0 0 0 0-22.63zM172 222.78c47.27-6 84-45.89 84-94.78a96 96 0 0 0-96-96H16A16 16 0 0 0 0 48v256a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-80h18.75l128 128L256 306.78zM64 160V96h96a32 32 0 1 1 0 64z"]]
};
exports.faPrescription = faPrescription;
var faPrescriptionBottle = {
  prefix: 'fad',
  iconName: 'prescription-bottle',
  icon: [384, 512, [], "f485", ["M32 128h320v352a32.09 32.09 0 0 1-32 32H64a32.09 32.09 0 0 1-32-32v-64h120a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H32v-64h120a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H32v-64h120a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H32z", "M360 0H24A24.07 24.07 0 0 0 0 24v48a24.07 24.07 0 0 0 24 24h336a24.07 24.07 0 0 0 24-24V24a24.07 24.07 0 0 0-24-24zM152 384H32v32h120a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8zm0-192H32v32h120a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8zm0 96H32v32h120a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8z"]]
};
exports.faPrescriptionBottle = faPrescriptionBottle;
var faPrescriptionBottleAlt = {
  prefix: 'fad',
  iconName: 'prescription-bottle-alt',
  icon: [384, 512, [], "f486", ["M32 480a32.09 32.09 0 0 0 32 32h256a32.09 32.09 0 0 0 32-32V128H32zm64-184a8 8 0 0 1 8-8h56v-56a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v56h56a8 8 0 0 1 8 8v48a8 8 0 0 1-8 8h-56v56a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8v-56h-56a8 8 0 0 1-8-8z", "M280 288h-56v-56a8 8 0 0 0-8-8h-48a8 8 0 0 0-8 8v56h-56a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8h56v56a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8v-56h56a8 8 0 0 0 8-8v-48a8 8 0 0 0-8-8zM360 0H24A24.07 24.07 0 0 0 0 24v48a24.07 24.07 0 0 0 24 24h336a24.07 24.07 0 0 0 24-24V24a24.07 24.07 0 0 0-24-24z"]]
};
exports.faPrescriptionBottleAlt = faPrescriptionBottleAlt;
var faPresentation = {
  prefix: 'fad',
  iconName: 'presentation',
  icon: [576, 512, [], "f685", ["M480 64h64v256a32 32 0 0 1-32 32H64a32 32 0 0 1-32-32V64h64v224h384z", "M560 0H16A16 16 0 0 0 0 16v32a16 16 0 0 0 16 16h544a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16zM320 386.75V352h-64v34.75l-75.31 75.31a16 16 0 0 0 0 22.63l22.62 22.62a16 16 0 0 0 22.63 0L288 445.25l62.06 62.06a16 16 0 0 0 22.63 0l22.62-22.62a16 16 0 0 0 0-22.63z"]]
};
exports.faPresentation = faPresentation;
var faPrint = {
  prefix: 'fad',
  iconName: 'print',
  icon: [512, 512, [], "f02f", ["M64 480a32 32 0 0 0 32 32h320a32 32 0 0 0 32-32v-96H64zM368 96a16 16 0 0 1-16-16V0H96a32 32 0 0 0-32 32v192h384V96z", "M368 96h80v-4.58a17.92 17.92 0 0 0-5.25-12.67l-73.43-73.5A18 18 0 0 0 356.57 0H352v80a16 16 0 0 0 16 16zm80 96v32H64v-32a64 64 0 0 0-64 64v112a16 16 0 0 0 16 16h480a16 16 0 0 0 16-16V256a64 64 0 0 0-64-64zm-16 136a24 24 0 1 1 24-24 24 24 0 0 1-24 24z"]]
};
exports.faPrint = faPrint;
var faPrintSearch = {
  prefix: 'fad',
  iconName: 'print-search',
  icon: [672, 512, [], "f81a", ["M366.86 433.14A159.41 159.41 0 0 1 333.33 384H64v96a32 32 0 0 0 32 32h320a32 32 0 0 0 32-32v-3.2a159.82 159.82 0 0 1-81.14-43.66zM368 96a16 16 0 0 1-16-16V0H96a32 32 0 0 0-32 32v192h288a162.84 162.84 0 0 1 14.88-17.14A159.82 159.82 0 0 1 448 163.2V96z", "M368 96h80v-4.58a17.92 17.92 0 0 0-5.25-12.67l-73.43-73.5A18 18 0 0 0 356.57 0H352v80a16 16 0 0 0 16 16zm-16 128H64v-32a64 64 0 0 0-64 64v112a16 16 0 0 0 16 16h317.33c-.24-.57-.5-1.14-.74-1.71A159.92 159.92 0 0 1 352 224zm315.31 238.06l-77.41-77.41A126.65 126.65 0 0 0 608 320a128 128 0 1 0-128 128c23.7 0 45.61-6.88 64.65-18.11l77.41 77.42a16 16 0 0 0 22.63 0l22.62-22.62a16 16 0 0 0 0-22.63zM480 384a64 64 0 1 1 64-64 64 64 0 0 1-64 64z"]]
};
exports.faPrintSearch = faPrintSearch;
var faPrintSlash = {
  prefix: 'fad',
  iconName: 'print-slash',
  icon: [640, 512, [], "f686", ["M176 104.26V48h240v32a16 16 0 0 0 16 16h32v96H289.53L538 384h22a16 16 0 0 0 16-16V256a64 64 0 0 0-64-64V77.25a32 32 0 0 0-9.37-22.63L457.37 9.37A32 32 0 0 0 434.74 0H160a32 32 0 0 0-32 32v35.16zM496 248a24 24 0 1 1-24 24 24 24 0 0 1 24-24zm-64 216l59.29 45.72A31.48 31.48 0 0 1 480 512H160a32 32 0 0 1-32-32v-96H80a16 16 0 0 1-16-16V256a63.83 63.83 0 0 1 29.47-53.75L328 384H176v80z", "M636.64 480.55L617 505.82a16 16 0 0 1-22.46 2.81L6.18 53.9a16 16 0 0 1-2.81-22.45L23 6.18a16 16 0 0 1 22.47-2.81L633.82 458.1a16 16 0 0 1 2.82 22.45z"]]
};
exports.faPrintSlash = faPrintSlash;
var faProcedures = {
  prefix: 'fad',
  iconName: 'procedures',
  icon: [640, 512, [], "f487", ["M160 224a64 64 0 1 0 64 64 64 64 0 0 0-64-64zm368 0H272a16 16 0 0 0-16 16v144h384v-48.09A111.93 111.93 0 0 0 528 224z", "M136 96h126.1l27.6 55.2a16 16 0 0 0 28.6 0L368 51.83 390.1 96H512a16 16 0 0 0 0-32H409.9L382.3 8.83a16 16 0 0 0-28.6 0l-49.7 99.4-19.9-39.8a8 8 0 0 0-7.2-4.4H136a8 8 0 0 0-8 8V88a8 8 0 0 0 8 8zm120 288H64V144a16 16 0 0 0-16-16H16a16 16 0 0 0-16 16v352a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-48h512v48a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V384z"]]
};
exports.faProcedures = faProcedures;
var faProjectDiagram = {
  prefix: 'fad',
  iconName: 'project-diagram',
  icon: [640, 512, [], "f542", ["M416 128H164.65l91.63 160H256a63.79 63.79 0 0 0-55.12 32L54.78 64H416z", "M384 320H256a32 32 0 0 0-32 32v128a32 32 0 0 0 32 32h128a32 32 0 0 0 32-32V352a32 32 0 0 0-32-32zM160 0H32A32 32 0 0 0 0 32v128a32 32 0 0 0 32 32h128a32 32 0 0 0 32-32V32a32 32 0 0 0-32-32zm448 0H480a32 32 0 0 0-32 32v128a32 32 0 0 0 32 32h128a32 32 0 0 0 32-32V32a32 32 0 0 0-32-32z"]]
};
exports.faProjectDiagram = faProjectDiagram;
var faProjector = {
  prefix: 'fad',
  iconName: 'projector',
  icon: [640, 512, [], "f8d6", ["M592 192h-95.41C543.47 215.77 576 263.93 576 320c0 61.88-39.44 114.31-94.34 134.64L493 499.88A16 16 0 0 0 508.49 512h39A16 16 0 0 0 563 499.88L576 448h16a48 48 0 0 0 48-48V240a48 48 0 0 0-48-48zm-224.59 0H48a48 48 0 0 0-48 48v160a48 48 0 0 0 48 48h16l13 51.88A16 16 0 0 0 92.49 512h39A16 16 0 0 0 147 499.88L160 448h207.41C320.53 424.23 288 376.07 288 320s32.53-104.23 79.41-128zM96 352a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm96 0a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm325.66-218.35a16 16 0 0 0 22.62 0l67.88-67.88a16 16 0 0 0 0-22.63l-11.32-11.31a16 16 0 0 0-22.62 0l-67.88 67.89a16 16 0 0 0 0 22.62zM440 0h-16a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16h16a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16zM323.72 133.65a16 16 0 0 0 22.62 0l11.32-11.31a16 16 0 0 0 0-22.62l-67.88-67.89a16 16 0 0 0-22.62 0l-11.32 11.31a16 16 0 0 0 0 22.63z", "M96 288a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm336-112a144 144 0 1 0 144 144 144 144 0 0 0-144-144zm0 240a96 96 0 1 1 96-96 96.14 96.14 0 0 1-96 96z"]]
};
exports.faProjector = faProjector;
var faPumpkin = {
  prefix: 'fad',
  iconName: 'pumpkin',
  icon: [576, 512, [], "f707", ["M244 103.93l37.55-93.86a16 16 0 0 1 22-8.37l39.6 19.8A16 16 0 0 1 352 35.81v77.4C334.23 102.12 313.16 96 288 96a128.55 128.55 0 0 0-44 7.93z", "M495.31 486.87c-38.63 33-100.82 33.34-140.12 1.25C337.35 503.51 315.28 512 288 512s-49.35-8.49-67.18-23.88c-39.3 32.09-101.49 31.78-140.12-1.25-107.6-92-107.6-241.73 0-333.74 31.61-27 78.8-31.69 116.51-15-3.08 4-6.52 7.38-9.21 11.92-8.33 14.27-14.5 31.77-19.11 51.61a138.4 138.4 0 0 1 12.86-24.11Q215.76 128 288 128t106.25 49.5a138.5 138.5 0 0 1 12.86 24.12C402.5 181.78 396.32 164.27 388 150c-2.69-4.54-6.14-7.95-9.21-11.92 37.71-16.64 84.9-12 116.51 15 107.6 92.06 107.6 241.78.01 333.79z"]]
};
exports.faPumpkin = faPumpkin;
var faPuzzlePiece = {
  prefix: 'fad',
  iconName: 'puzzle-piece',
  icon: [576, 512, [], "f12e", ["M576 354.44C576 388 556.71 416 521.08 416c-39.89 0-50.35-36.15-86.31-36.15-60.55 0-25.83 120.1-25.83 120.1-51.55 0-181.23 35.07-181.23-25.73 0-35.83 36.29-46.25 36.29-86 0-35.5-28.12-54.71-61.79-54.71-34.33 0-63.58 18.89-63.58 56.34 0 41.37 40 59 40 81.47C178.63 541 0 500 0 500V166.76s175.88 41 175.88-28.66c0-22.48-31.71-40.39-31.71-81.75C144.17 18.89 175.88 0 210.54 0 243.88 0 272 19.22 272 54.72c0 39.73-36.29 50.16-36.29 86C235.71 224 432 144 432 144s-54.59 176.24 5.38 176.24c22.56 0 40.54-31.59 82.06-31.59 37.56 0 56.56 31.59 56.56 65.79z", ""]]
};
exports.faPuzzlePiece = faPuzzlePiece;
var faQrcode = {
  prefix: 'fad',
  iconName: 'qrcode',
  icon: [448, 512, [], "f029", ["M0 480h192V288H0zm64-128h64v64H64zM256 32v192h192V32zm128 128h-64V96h64zM0 224h192V32H0zM64 96h64v64H64z", "M416 480h32v-32h-32zm-64 0h32v-32h-32zm64-192v32h-64v-32h-96v192h64v-96h32v32h96V288z"]]
};
exports.faQrcode = faQrcode;
var faQuestion = {
  prefix: 'fad',
  iconName: 'question',
  icon: [384, 512, [], "f128", ["M182.43 373.46a69.27 69.27 0 1 0 69.28 69.27 69.28 69.28 0 0 0-69.28-69.27z", "M367.92 153.6c0 116-125.27 117.77-125.27 160.63V320a24 24 0 0 1-24 24h-72.47a24 24 0 0 1-24-24v-9.79c0-61.83 46.87-86.54 82.3-106.4 30.38-17 49-28.62 49-51.17 0-29.83-38-49.63-68.82-49.63-39.12 0-57.75 18.07-82.75 49.45a24 24 0 0 1-33.26 4.15L25.51 123.9A24 24 0 0 1 20.34 91c40.59-58.3 92.28-91 172.1-91 84.88 0 175.49 66.26 175.48 153.6z"]]
};
exports.faQuestion = faQuestion;
var faQuestionCircle = {
  prefix: 'fad',
  iconName: 'question-circle',
  icon: [512, 512, [], "f059", ["M256 8C119 8 8 119.08 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 422a46 46 0 1 1 46-46 46.05 46.05 0 0 1-46 46zm40-131.33V300a12 12 0 0 1-12 12h-56a12 12 0 0 1-12-12v-4c0-41.06 31.13-57.47 54.65-70.66 20.17-11.31 32.54-19 32.54-34 0-19.82-25.27-33-45.7-33-27.19 0-39.44 13.14-57.3 35.79a12 12 0 0 1-16.67 2.13L148.82 170a12 12 0 0 1-2.71-16.26C173.4 113 208.16 90 262.66 90c56.34 0 116.53 44 116.53 102 0 77-83.19 78.21-83.19 106.67z", "M256 338a46 46 0 1 0 46 46 46 46 0 0 0-46-46zm6.66-248c-54.5 0-89.26 23-116.55 63.76a12 12 0 0 0 2.71 16.24l34.7 26.31a12 12 0 0 0 16.67-2.13c17.86-22.65 30.11-35.79 57.3-35.79 20.43 0 45.7 13.14 45.7 33 0 15-12.37 22.66-32.54 34C247.13 238.53 216 254.94 216 296v4a12 12 0 0 0 12 12h56a12 12 0 0 0 12-12v-1.33c0-28.46 83.19-29.67 83.19-106.67 0-58-60.19-102-116.53-102z"]]
};
exports.faQuestionCircle = faQuestionCircle;
var faQuestionSquare = {
  prefix: 'fad',
  iconName: 'question-square',
  icon: [448, 512, [], "f2fd", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zM224 430a46 46 0 1 1 46-46 46.06 46.06 0 0 1-46 46zm40-131.33V300a12 12 0 0 1-12 12h-56a12 12 0 0 1-12-12v-4c0-41.06 31.13-57.47 54.65-70.66 20.17-11.31 32.54-19 32.54-34 0-19.81-25.27-33-45.7-33-27.19 0-39.44 13.13-57.3 35.79a12 12 0 0 1-16.67 2.13L116.82 170a12 12 0 0 1-2.71-16.26C141.4 113 176.16 90 230.66 90c56.34 0 116.53 44 116.53 102 0 77-83.19 78.21-83.19 106.67z", "M224 338a46 46 0 1 0 46 46 46.05 46.05 0 0 0-46-46zm6.66-248c-54.5 0-89.26 23-116.55 63.76a12 12 0 0 0 2.71 16.24l34.7 26.31a12 12 0 0 0 16.67-2.13c17.86-22.66 30.11-35.79 57.3-35.79 20.43 0 45.7 13.14 45.7 33 0 15-12.37 22.67-32.54 34C215.13 238.53 184 254.94 184 296v4a12 12 0 0 0 12 12h56a12 12 0 0 0 12-12v-1.33c0-28.46 83.19-29.67 83.19-106.67 0-58-60.19-102-116.53-102z"]]
};
exports.faQuestionSquare = faQuestionSquare;
var faQuidditch = {
  prefix: 'fad',
  iconName: 'quidditch',
  icon: [640, 512, [], "f458", ["M494.5 351.82a79.9 79.9 0 1 0 79.8 79.9 79.91 79.91 0 0 0-79.8-79.9zM636.5 31L616.7 6a16 16 0 0 0-22.4-2.6L361.8 181.32l39.7 50.1L634 53.52A16 16 0 0 0 636.5 31z", "M93.2 257.72c-21.9 17.5-40.2 55.8-54.6 97.5l60.4-22.1a6 6 0 0 1 6.6 9.5L11 454.82c-7.2 32.3-11 55.4-11 55.4s206.7 13.6 266.6-34.1S343.2 326 343.2 326l-86.7-109.2s-103.4-6.88-163.3 40.92zm342.4 16.6l-107.9-136a11 11 0 0 0-18.6 2.2l-25.3 54.6 86.7 109.2 58.8-12.4a11 11 0 0 0 6.3-17.6z"]]
};
exports.faQuidditch = faQuidditch;
var faQuoteLeft = {
  prefix: 'fad',
  iconName: 'quote-left',
  icon: [512, 512, [], "f10d", ["M464 256h-80v-64a64.06 64.06 0 0 1 64-64h8a23.94 23.94 0 0 0 24-23.88V56a23.94 23.94 0 0 0-23.88-24H448a160 160 0 0 0-160 160v240a48 48 0 0 0 48 48h128a48 48 0 0 0 48-48V304a48 48 0 0 0-48-48z", "M176 256H96v-64a64.06 64.06 0 0 1 64-64h8a23.94 23.94 0 0 0 24-23.88V56a23.94 23.94 0 0 0-23.88-24H160A160 160 0 0 0 0 192v240a48 48 0 0 0 48 48h128a48 48 0 0 0 48-48V304a48 48 0 0 0-48-48z"]]
};
exports.faQuoteLeft = faQuoteLeft;
var faQuoteRight = {
  prefix: 'fad',
  iconName: 'quote-right',
  icon: [512, 512, [], "f10e", ["M176 32H48A48 48 0 0 0 0 80v128a48 48 0 0 0 48 48h80v64a64.06 64.06 0 0 1-64 64h-8a23.94 23.94 0 0 0-24 23.88V456a23.94 23.94 0 0 0 23.88 24H64a160 160 0 0 0 160-160V80a48 48 0 0 0-48-48z", "M464 32H336a48 48 0 0 0-48 48v128a48 48 0 0 0 48 48h80v64a64.06 64.06 0 0 1-64 64h-8a23.94 23.94 0 0 0-24 23.88V456a23.94 23.94 0 0 0 23.88 24H352a160 160 0 0 0 160-160V80a48 48 0 0 0-48-48z"]]
};
exports.faQuoteRight = faQuoteRight;
var faQuran = {
  prefix: 'fad',
  iconName: 'quran',
  icon: [448, 512, [], "f687", ["M96 448c-19.2 0-32-12.8-32-32s16-32 32-32h319.33c-1.93 16.24-1.76 48.38.53 64z", "M96 384h328a24 24 0 0 0 24-24V32a32 32 0 0 0-32-32H96A96 96 0 0 0 0 96v320a96 96 0 0 0 96 96h328a24 24 0 0 0 24-24v-16a24 24 0 0 0-24-24H96c-19.2 0-32-12.8-32-32s16-32 32-32zm208-240a3.23 3.23 0 0 1 2.92 1.82l11.18 22.65 25 3.63a3.26 3.26 0 0 1 1.81 5.56l-18.09 17.63 4.27 24.89a3.25 3.25 0 0 1-4.73 3.44L304 211.87l-22.36 11.75a3.25 3.25 0 0 1-4.73-3.44l4.27-24.89-18.09-17.63a3.26 3.26 0 0 1 1.81-5.56l25-3.63 11.19-22.65A3.23 3.23 0 0 1 304 144zm-60.81-67.19a114.69 114.69 0 0 1 40.38 7.41 6.78 6.78 0 1 1 0 13.55 6.85 6.85 0 0 1-2.37-.43c-.67 0-3.09-.21-4.13-.21a94.86 94.86 0 0 0 0 189.72c1 0 3.48-.21 4.13-.21a6.78 6.78 0 0 1 2.18 13.2 115.14 115.14 0 1 1-40.18-223z"]]
};
exports.faQuran = faQuran;
var faRabbit = {
  prefix: 'fad',
  iconName: 'rabbit',
  icon: [448, 512, [], "f708", ["M445.56 487.52L352 337.85V272h7.35a56.65 56.65 0 0 0 32.95-102.75l-48.65-34.75c-1.1-.54-2.27-.74-3.38-1.21 7.8-12.49 15.21-29.76 20.54-49.66 11.32-42.24 9.08-79.55-5-83.32s-34.67 27.41-46 69.69A221.91 221.91 0 0 0 304 99.12 223.51 223.51 0 0 0 298.24 70c-11.33-42.28-31.92-73.46-46-69.69s-16.32 41.08-5 83.32c6.94 25.9 17.37 47.54 27.64 59.62-9.11 7.93-15.9 18.5-18 31.55A63.35 63.35 0 0 0 256 185v71h-14A178 178 0 0 0 64 434v12a66 66 0 0 0 66 66h142a16 16 0 0 0 16-16v-16a32 32 0 0 0-32-32h-22.57l74.35-60.18 72.91 116.66a16 16 0 0 0 13.57 7.52H432a16 16 0 0 0 13.54-24.48zM336 208a16 16 0 1 1 16-16 16 16 0 0 1-16 16z", "M64 434a178.22 178.22 0 0 1 5.69-44.81 48 48 0 1 0 .74 85.25A65.57 65.57 0 0 1 64 446zm272-258a16 16 0 1 0 16 16 16 16 0 0 0-16-16z"]]
};
exports.faRabbit = faRabbit;
var faRabbitFast = {
  prefix: 'fad',
  iconName: 'rabbit-fast',
  icon: [576, 512, [], "f709", ["M135.5 396.68a16 16 0 0 0-7.5 13.57V448a16 16 0 0 0 24.48 13.57l66.69-39.87-47.84-47.85zm416.77-195.42l-56.42-34.62c-.06-13.95-2.29-30.77-7.08-48.67-11.31-42.24-31.9-73.43-46-69.66s-16.33 41.08-5 83.32c.65 2.44 1.44 4.7 2.15 7.06a224.93 224.93 0 0 0-16.32-18.32C392.7 89.45 359.27 72.73 349 83s6.41 43.73 37.33 74.66a198.36 198.36 0 0 0 37.42 29.78 60.18 60.18 0 0 0-6.88 19.32 63.07 63.07 0 0 0-.75 9.31C364.54 179.12 261.59 112 192 112a121.32 121.32 0 0 0-111.51 73.53 61.82 61.82 0 0 0 13.1 68.06l165.82 165.82a43 43 0 0 0 30.4 12.59H432a16 16 0 0 0 16-16v-16a32 32 0 0 0-32-32h-96v-55.58a80.3 80.3 0 0 0-58-76.91l-42.4-12.11a16 16 0 0 1 8.78-30.78l42.39 12.11A112.46 112.46 0 0 1 352 312.42V336l64-32h103.33a56.66 56.66 0 0 0 32.94-102.75zM496 240a16 16 0 1 1 16-16 16 16 0 0 1-16 16z", "M17.46 154.94A48 48 0 0 0 78.54 229a61.77 61.77 0 0 1 1.95-43.5 121.83 121.83 0 0 1 9.18-17.35 47 47 0 0 0-4.67-6.72 48 48 0 0 0-67.54-6.49zM496 208a16 16 0 1 0 16 16 16 16 0 0 0-16-16z"]]
};
exports.faRabbitFast = faRabbitFast;
var faRacquet = {
  prefix: 'fad',
  iconName: 'racquet',
  icon: [640, 512, [], "f45a", ["M6.65 431.11A16.1 16.1 0 0 0 3 453.41l36.8 51.8a16 16 0 0 0 22.2 3.9l120.7-82.6-56.7-80S6.75 431.21 6.65 431.11zM486 64c-106.4 0-178.6 90-195 141.1-21.3 66.2 13.3 112.8 83.9 112.8 84.1 0 171.1-66.8 195-141.1C591.15 110.71 556.55 64 486 64z", "M615.55 59.81c-55.2-77.9-182.9-78.9-283.4-7.7-57.3 40.6-94.6 96.4-106.8 151.1-11 49.5-35 94.5-67.7 132.7l45.7 64.5c87.4-33.7 144.3-18.6 171.9-18.6 49.6 0 104.4-17.2 153.5-52 102.25-72.4 141.1-193.3 86.8-270zM210.15 347a355.28 355.28 0 0 0 26.2-41c9.2 18 9.5 17.4 21.2 29.7a379.24 379.24 0 0 0-47.4 11.3zm359.7-170.2c-23.9 74.3-110.9 141.1-195 141.1-70.6 0-105.2-46.6-83.9-112.8C307.35 154 379.55 64 486 64c70.55 0 105.15 46.71 83.85 112.81z"]]
};
exports.faRacquet = faRacquet;
var faRadiation = {
  prefix: 'fad',
  iconName: 'radiation',
  icon: [496, 512, [], "f7b9", ["M296,255.82a48,48,0,1,1-48-48A48,48,0,0,1,296,255.82Z", "M125.23,452c-4.8,7.7-2.4,18.1,5.6,22.4a246.73,246.73,0,0,0,234.36,0c8-4.3,10.4-14.8,5.6-22.4L290.41,323.52a78.67,78.67,0,0,1-84.78,0Zm-109-196.18H167.82c0-28.59,15.2-53.49,37.8-67.69L125.23,59.74c-4.8-7.7-15.3-10.2-22.7-4.8C44.44,96.94,5.14,163.33,0,239.12c-.6,9,7.1,16.7,16.2,16.7Zm312,0H479.79c9.1,0,16.79-7.7,16.2-16.8-5.1-75.79-44.4-142.18-102.49-184.18-7.4-5.3-17.9-2.9-22.7,4.8L290.41,188c22.6,14.3,37.79,39.2,37.79,67.79Z"]]
};
exports.faRadiation = faRadiation;
var faRadiationAlt = {
  prefix: 'fad',
  iconName: 'radiation-alt',
  icon: [496, 512, [], "f7ba", ["M248,288a32,32,0,1,0-32-32A32,32,0,0,0,248,288Zm0,216c137,0,248-111,248-248S385,8,248,8,0,119,0,256,111,504,248,504Zm0-432c101.5,0,184,82.5,184,184S349.5,440,248,440,64,357.5,64,256,146.5,72,248,72Z", "M104.9,256H184a63.76,63.76,0,0,1,30.2-54.1l-41.7-66.8a16.2,16.2,0,0,0-22.37-5h0a17,17,0,0,0-1.61,1.17A159.25,159.25,0,0,0,89,239.1C87.9,248.3,95.7,256,104.9,256ZM312,256h79.1c9.2,0,16.9-7.7,16-16.8-4.6-43.6-27-81.8-59.5-107.8a16.22,16.22,0,0,0-22.83,2.19,18.34,18.34,0,0,0-1.17,1.61L281.9,202A63.64,63.64,0,0,1,312,256ZM172.4,377c-4.9,7.8-2.4,18.4,5.8,22.5a156.1,156.1,0,0,0,139.7,0c8.2-4.1,10.6-14.7,5.8-22.5l-41.8-66.9a62.82,62.82,0,0,1-67.7,0Z"]]
};
exports.faRadiationAlt = faRadiationAlt;
var faRadio = {
  prefix: 'fad',
  iconName: 'radio',
  icon: [512, 512, [], "f8d7", ["M448 128H64a64 64 0 0 0-64 64v256a64 64 0 0 0 64 64h384a64 64 0 0 0 64-64V192a64 64 0 0 0-64-64zM80 248a8 8 0 0 1 8-8h112a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H88a8 8 0 0 1-8-8zm128 144a8 8 0 0 1-8 8H88a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h112a8 8 0 0 1 8 8zm16-64a8 8 0 0 1-8 8H72a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h144a8 8 0 0 1 8 8zm222.37 8.13a96 96 0 1 1 0-32.26 80.62 80.62 0 0 1 0 32.26z", "M511.4 27.05l-4.33-15.38A16 16 0 0 0 487.33.6L64 128h147.5l288.83-81.21a16 16 0 0 0 11.07-19.74zM352 224a96 96 0 1 0 96 96 96 96 0 0 0-96-96zm0 144a48 48 0 1 1 48-48 48.05 48.05 0 0 1-48 48z"]]
};
exports.faRadio = faRadio;
var faRadioAlt = {
  prefix: 'fad',
  iconName: 'radio-alt',
  icon: [512, 512, [], "f8d8", ["M448 128H64a64 64 0 0 0-64 64v256a64 64 0 0 0 64 64h384a64 64 0 0 0 64-64V192a64 64 0 0 0-64-64zM224 424a8 8 0 0 1-8 8H104a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h112a8 8 0 0 1 8 8zm32-64a8 8 0 0 1-8 8H72a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h176a8 8 0 0 1 8 8zm112 104a80 80 0 1 1 80-80 80 80 0 0 1-80 80zm80-208H64v-64h384z", "M511.4 27.05l-4.33-15.38A16 16 0 0 0 487.33.6L64 128h147.5l288.83-81.21a16 16 0 0 0 11.07-19.74zM64 256h384v-64H64zm304 48a80 80 0 1 0 80 80 80 80 0 0 0-80-80zm0 112a32 32 0 1 1 32-32 32 32 0 0 1-32 32z"]]
};
exports.faRadioAlt = faRadioAlt;
var faRainbow = {
  prefix: 'fad',
  iconName: 'rainbow',
  icon: [576, 512, [], "f75b", ["M287.83 224a96.24 96.24 0 0 0-18.93 1.9c-45.6 8.9-76.9 51.5-76.9 97.9V464a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V320a32 32 0 0 1 64 0v144a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V320a96.11 96.11 0 0 0-96.17-96zM268.3 32.67C115.4 42.87 0 176.87 0 330.17V464a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V320C64 186.8 180.9 80.3 317.5 97.9 430.4 112.37 512 214 512 327.77V464a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V320c0-165.33-140-298.63-307.7-287.33z", "M480 320v144a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V325.69c0-66.89-48.7-126.58-115.2-133.08C224.5 185.21 160 245.2 160 320v144a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V326.69c0-97.58 70-184.69 166.7-197.07C379.8 114.62 480 205.81 480 320z"]]
};
exports.faRainbow = faRainbow;
var faRaindrops = {
  prefix: 'fad',
  iconName: 'raindrops',
  icon: [448, 512, [], "f75c", ["M169.3 38.9c-2.5-9-15.7-9.4-18.6 0-14.9 49.3-46.7 62.7-46.7 97.4a56 56 0 0 0 112 0c0-34.9-31.8-47.9-46.7-97.4zm-122.6 192C31.8 280.2 0 293.6 0 328.3a56 56 0 0 0 112 0c0-34.9-31.8-47.9-46.7-97.4-2.5-9-15.7-9.4-18.6 0z", "M341.2 143.2C375.4 252.1 448 280.7 448 357.6c0 67.6-57.2 122.4-128 122.4s-128-54.7-128-122.4c0-76.5 72.7-106 106.7-214.4 6.5-20.7 36.7-19.8 42.5 0z"]]
};
exports.faRaindrops = faRaindrops;
var faRam = {
  prefix: 'fad',
  iconName: 'ram',
  icon: [640, 512, [], "f70a", ["M488.14 303.26a58.45 58.45 0 0 1-7.44 51.21 53.12 53.12 0 0 1-43.45 23.3c-1.11 0-2.22 0-3.33-.11-7.84 21.52-27.89 36.18-50.23 36.18a51.08 51.08 0 0 1-30.4-10.18 51.46 51.46 0 0 1-65.62 1 51.74 51.74 0 0 1-32.21 11.2 50.43 50.43 0 0 1-31.86-11.17 50.77 50.77 0 0 1-31.34 10.57 55.21 55.21 0 0 1-34.18-11.78 52.9 52.9 0 0 1-30.58 9.86c-22.73 0-42.32-14.45-50-36.42-1.11.07-2.23.11-3.34.11-16.93 0-33.07-8.7-43.17-23.27a58.55 58.55 0 0 1-7.42-51.28C8.92 292.3 0 274.74 0 255.8c0-19.24 8.86-36.49 23.86-46.86a58.59 58.59 0 0 1 7.48-51.28c10.09-14.57 26.27-23.28 43.27-23.28q1.74 0 3.48.12c7.85-21.5 27.91-36.12 50.2-36.12a51.2 51.2 0 0 1 30.49 10.21A56 56 0 0 1 193 96.91a49.43 49.43 0 0 1 31 10.56 52 52 0 0 1 64.26 0A52 52 0 0 1 304 98.71a96 96 0 0 0 173 54.56 56.5 56.5 0 0 1 4 5.07 58.58 58.58 0 0 1 7.45 51.32c14.63 10.22 23.55 27.78 23.55 46.72 0 19.24-8.86 36.5-23.86 46.88z", "M622.25 106L576 83.22V64a32 32 0 0 0-32-32h-72.45a96 96 0 1 0 5.5 121.27A57.42 57.42 0 0 1 491.31 192h108.35A25.71 25.71 0 0 0 622 179.06c7.59-13.26 18-33.45 18-44.59A31.8 31.8 0 0 0 622.25 106zM400 144a48 48 0 1 1 48-48 48.05 48.05 0 0 1-48 48zm112-32a16 16 0 1 1 16-16 16 16 0 0 1-16 16zM193.46 418.86l1.37-3.64c-.86 0-1.71.07-2.57.07a55.21 55.21 0 0 1-34.18-11.78 52.9 52.9 0 0 1-30.58 9.86 51.69 51.69 0 0 1-30.12-9.6 64 64 0 0 0 .54 28.7l16.85 67.41A16 16 0 0 0 130.29 512h66a16 16 0 0 0 15.52-19.88zm240.46-41.2c-7.84 21.52-27.89 36.18-50.23 36.18a51.08 51.08 0 0 1-30.4-10.18c-.42.36-.86.7-1.29 1V496a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16V376.59a50.8 50.8 0 0 1-10.75 1.18c-1.11 0-2.25-.04-3.33-.11z"]]
};
exports.faRam = faRam;
var faRampLoading = {
  prefix: 'fad',
  iconName: 'ramp-loading',
  icon: [384, 512, [], "f4d4", ["M355.4 383.3L321 314.5a13 13 0 0 0-1-1.5V64H64v249c-.3.5-.7.9-1 1.5l-34.4 68.8C12.6 381.5 0 368.5 0 352V32A32 32 0 0 1 32 0h320a32 32 0 0 1 32 32v320c0 16.4-12.6 29.5-28.6 31.3z", "M292.4 328.8l80 160a16 16 0 0 1-14.3 23.2H25.9a16 16 0 0 1-14.3-23.2l80-160a15.92 15.92 0 0 1 14.3-8.8h172.2a15.92 15.92 0 0 1 14.3 8.8z"]]
};
exports.faRampLoading = faRampLoading;
var faRandom = {
  prefix: 'fad',
  iconName: 'random',
  icon: [512, 512, [], "f074", ["M505 359l-80-80c-15-15-41-4.47-41 17v40h-32l-52.78-56.55-53.33 57.14 70.55 75.6a12 12 0 0 0 8.77 3.81H384v40c0 21.46 26 32 41 17l80-80a24 24 0 0 0 0-34zM122.79 96H12a12 12 0 0 0-12 12v56a12 12 0 0 0 12 12h84l52.78 56.55 53.33-57.14-70.55-75.6a12 12 0 0 0-8.77-3.81z", "M505 119a24 24 0 0 1 0 34l-80 80c-15 15-41 4.48-41-17v-40h-32L131.56 412.19a12 12 0 0 1-8.77 3.81H12a12 12 0 0 1-12-12v-56a12 12 0 0 1 12-12h84L316.44 99.81a12 12 0 0 1 8.78-3.81H384V56c0-21.44 25.94-32 41-17z"]]
};
exports.faRandom = faRandom;
var faReceipt = {
  prefix: 'fad',
  iconName: 'receipt',
  icon: [384, 512, [], "f543", ["M358.4 3.23L320 48 265.6 3.23a15.9 15.9 0 0 0-19.2 0L192 48 137.6 3.23a15.9 15.9 0 0 0-19.2 0L64 48 25.6 3.23A16 16 0 0 0 0 16v480a16 16 0 0 0 25.6 12.8L64 464l54.4 44.8a15.9 15.9 0 0 0 19.2 0L192 464l54.4 44.8a15.9 15.9 0 0 0 19.2 0L320 464l38.4 44.8A16 16 0 0 0 384 496V16a16 16 0 0 0-25.6-12.77zM320 360a8 8 0 0 1-8 8H72a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h240a8 8 0 0 1 8 8zm0-96a8 8 0 0 1-8 8H72a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h240a8 8 0 0 1 8 8zm0-96a8 8 0 0 1-8 8H72a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h240a8 8 0 0 1 8 8z", "M312 144H72a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h240a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8zm0 96H72a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h240a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8zm0 96H72a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h240a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8z"]]
};
exports.faReceipt = faReceipt;
var faRecordVinyl = {
  prefix: 'fad',
  iconName: 'record-vinyl',
  icon: [512, 512, [], "f8d9", ["M256 128a128 128 0 1 0 128 128 128 128 0 0 0-128-128zm0 152a24 24 0 1 1 24-24 24 24 0 0 1-24 24z", "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 376a128 128 0 1 1 128-128 128 128 0 0 1-128 128z"]]
};
exports.faRecordVinyl = faRecordVinyl;
var faRectangleLandscape = {
  prefix: 'fad',
  iconName: 'rectangle-landscape',
  icon: [512, 512, [], "f2fa", ["M464 64H48a48 48 0 0 0-48 48v288a48 48 0 0 0 48 48h416a48 48 0 0 0 48-48V112a48 48 0 0 0-48-48zm-16 304a16 16 0 0 1-16 16H80a16 16 0 0 1-16-16V144a16 16 0 0 1 16-16h352a16 16 0 0 1 16 16z", "M64 368V144a16 16 0 0 1 16-16h352a16 16 0 0 1 16 16v224a16 16 0 0 1-16 16H80a16 16 0 0 1-16-16z"]]
};
exports.faRectangleLandscape = faRectangleLandscape;
var faRectanglePortrait = {
  prefix: 'fad',
  iconName: 'rectangle-portrait',
  icon: [384, 512, [], "f2fb", ["M336 0H48A48 48 0 0 0 0 48v416a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V48a48 48 0 0 0-48-48zm-16 432a16 16 0 0 1-16 16H80a16 16 0 0 1-16-16V80a16 16 0 0 1 16-16h224a16 16 0 0 1 16 16z", "M64 432V80a16 16 0 0 1 16-16h224a16 16 0 0 1 16 16v352a16 16 0 0 1-16 16H80a16 16 0 0 1-16-16z"]]
};
exports.faRectanglePortrait = faRectanglePortrait;
var faRectangleWide = {
  prefix: 'fad',
  iconName: 'rectangle-wide',
  icon: [640, 512, [], "f2fc", ["M592 96H48a48 48 0 0 0-48 48v224a48 48 0 0 0 48 48h544a48 48 0 0 0 48-48V144a48 48 0 0 0-48-48zm-16 240a16 16 0 0 1-16 16H80a16 16 0 0 1-16-16V176a16 16 0 0 1 16-16h480a16 16 0 0 1 16 16z", "M64 336V176a16 16 0 0 1 16-16h480a16 16 0 0 1 16 16v160a16 16 0 0 1-16 16H80a16 16 0 0 1-16-16z"]]
};
exports.faRectangleWide = faRectangleWide;
var faRecycle = {
  prefix: 'fad',
  iconName: 'recycle',
  icon: [512, 512, [], "f1b8", ["M497.29 301.1L469.77 257a12 12 0 0 0-16.53-3.83l-33.86 21.16a12 12 0 0 0-3.81 16.54L443.12 335c13.26 21.21-2.06 49-27.14 49H320v64h95.88c75.27 0 121.33-83 81.41-146.9zM148 384H96c-25 0-40.4-27.73-27.12-49l50.87-81.4-54.22-33.89-50.82 81.39C-25.19 365 20.78 448 96.11 448H148a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm230.67-272.86l-41.26-66.08c-37.52-60-125.21-60.17-162.82 0l-18 28.76a12 12 0 0 0 3.81 16.54l33.92 21.19a12 12 0 0 0 16.54-3.78L228.9 79c12.72-20.34 42-19.68 54.26 0l41.29 66.07z", "M184.56 261.88l-25.45-110.23a16 16 0 0 0-19.18-12L29.68 165.11c-13.84 3.19-17 21.61-4.88 29.16L160.48 279c12 7.47 27.3-3.17 24.07-17.17zm108.13 62.79l-80 80a16 16 0 0 0 0 22.63l80 80c10 10 27.31 3 27.31-11.31V336c0-14.23-17.24-21.4-27.31-11.33zm126.67-239l-135.65 84.85c-12 7.53-9 25.95 4.88 29.16l110.24 25.45a16 16 0 0 0 19.19-12l25.41-110.25c3.19-13.88-12-24.72-24.07-17.17z"]]
};
exports.faRecycle = faRecycle;
var faRedo = {
  prefix: 'fad',
  iconName: 'redo',
  icon: [512, 512, [], "f01e", ["M422.36 422.69a12 12 0 0 1 0 17l-.49.46A247.1 247.1 0 0 1 255.67 504c-136.9 0-247.9-110.93-248-247.81C7.57 119.53 119 8 255.67 8a247.45 247.45 0 0 1 188.9 87.33l3.52 64.43-46.5-2.22A176 176 0 1 0 372 388.15a12 12 0 0 1 16.38.54z", "M512 12v200a12 12 0 0 1-12 12H300a12 12 0 0 1-12-12v-47.32a12 12 0 0 1 12-12h.58l147.54 7.06-7.44-147.19A12 12 0 0 1 452.07 0H500a12 12 0 0 1 12 12z"]]
};
exports.faRedo = faRedo;
var faRedoAlt = {
  prefix: 'fad',
  iconName: 'redo-alt',
  icon: [512, 512, [], "f2f9", ["M422.66 422.66a12 12 0 0 1 0 17l-.49.46A247.11 247.11 0 0 1 256 504C119 504 8 393 8 256 8 119.19 119.65 7.76 256.46 8a247.12 247.12 0 0 1 170.85 68.69l-56.62 56.56A166.73 166.73 0 0 0 257.49 88C165.09 87.21 87.21 162 88 257.45 88.76 348 162.18 424 256 424a166.77 166.77 0 0 0 110.63-41.56A12 12 0 0 1 383 383z", "M504 57.94V192a24 24 0 0 1-24 24H345.94c-21.38 0-32.09-25.85-17-41L463 41c15.15-15.15 41-4.44 41 16.94z"]]
};
exports.faRedoAlt = faRedoAlt;
var faRegistered = {
  prefix: 'fad',
  iconName: 'registered',
  icon: [512, 512, [], "f25d", ["M250.43 179.77h-23.37v56.14h29.87c18.6 0 28.43-9.83 28.43-28.44 0-18.93-6.26-27.7-34.93-27.7zM256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm86.39 388h-24.46a24 24 0 0 1-21.19-12.73l-44.13-82.93h-25.55V372a24 24 0 0 1-24 24h-22.57a24 24 0 0 1-24-24V139.68a24 24 0 0 1 24-24h70.67c74 0 105.49 35 105.49 89.25 0 31.48-14.51 59.31-37.94 74.48 1.4 2.37-2-3.82 44.7 81a24 24 0 0 1-21 35.59z", "M363.41 360.41c-46.73-84.82-43.3-78.63-44.7-81 23.43-15.17 37.94-43 37.94-74.48 0-54.25-31.5-89.25-105.49-89.25h-70.67a24 24 0 0 0-24 24V372a24 24 0 0 0 24 24h22.57a24 24 0 0 0 24-24v-71.66h25.55l44.13 82.93A24 24 0 0 0 317.93 396h24.46a24 24 0 0 0 21-35.59zm-106.48-124.5h-29.87v-56.14h23.37c28.67 0 34.93 8.77 34.93 27.7 0 18.61-9.83 28.44-28.43 28.44z"]]
};
exports.faRegistered = faRegistered;
var faRemoveFormat = {
  prefix: 'fad',
  iconName: 'remove-format',
  icon: [640, 512, [], "f87d", ["M160 91.9V48a16 16 0 0 1 16-16h416a16 16 0 0 1 16 16v96a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-32H426.17L377 259.59l-67.06-51.83L341.82 112H224v29.36l-3.18-2.45zM336 416h-11.17l9.26-27.77L267 336.4 240.49 416H208a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z", "M633.82 458.1L45.46 3.38A16 16 0 0 0 23 6.19L3.37 31.46a16 16 0 0 0 2.81 22.45l588.36 454.72a16 16 0 0 0 22.46-2.81l19.64-25.27a16 16 0 0 0-2.82-22.45z"]]
};
exports.faRemoveFormat = faRemoveFormat;
var faRepeat = {
  prefix: 'fad',
  iconName: 'repeat',
  icon: [512, 512, [], "f363", ["M494.84 183.65a159 159 0 0 1 17.16 72c0 88.23-71.77 160-160 160H170.07l34.51 32.42a24 24 0 0 1 .54 34.47l-10.78 10.77a24 24 0 0 1-33.94 0l-92.68-92.65a24 24 0 0 1 0-33.94L160.4 274a24 24 0 0 1 33.94 0l10.78 10.77a24 24 0 0 1-.54 34.47l-34.51 32.41H352a96 96 0 0 0 87.62-135.2 23.77 23.77 0 0 1 4.73-26.63l12.18-12.19a24 24 0 0 1 38.31 6.02z", "M67.65 321.52l-12.18 12.19a24 24 0 0 1-38.31-6A159 159 0 0 1 0 255.68c0-88.22 71.77-160 160-160h181.93l-34.51-32.41a24 24 0 0 1-.54-34.47L317.66 18a24 24 0 0 1 33.94 0l92.68 92.69a24 24 0 0 1 0 33.94l-92.68 92.71a24 24 0 0 1-33.94 0l-10.78-10.77a24 24 0 0 1 .54-34.47l34.51-32.42H160a96 96 0 0 0-87.62 135.21 23.78 23.78 0 0 1-4.73 26.63z"]]
};
exports.faRepeat = faRepeat;
var faRepeat1 = {
  prefix: 'fad',
  iconName: 'repeat-1',
  icon: [512, 512, [], "f365", ["M494.84 183.65a159 159 0 0 1 17.16 72c0 88.22-71.77 160-160 160H170.07l34.51 32.41a24 24 0 0 1 .54 34.47l-10.78 10.77a24 24 0 0 1-33.94 0l-92.68-92.64a24 24 0 0 1 0-33.94L148 286.45a24 24 0 0 1 33.94 0l10.77 10.77a24 24 0 0 1-.54 34.47l-22.09 20H352a96 96 0 0 0 87.62-135.21 23.78 23.78 0 0 1 4.73-26.63l12.18-12.18a24 24 0 0 1 38.31 5.98z", "M306.13 287.64h-15.49v-84.38c0-7.66-4.09-11.58-11.75-11.58h-12.1c-6.06 0-10 1.61-14.42 5.7l-21.72 19.94c-5.52 5.16-5.88 11-.54 16.38l5.52 6.23c5.16 5.52 11.22 5.34 15.67 1.07a34.35 34.35 0 0 0 2.85-3.74h.35s-.53 5.34-.53 10.5v39.88h-15.13c-7.66 0-11.58 4.1-11.58 11.57v8.9c0 7.48 3.92 11.57 11.58 11.57h67.29c7.65 0 11.57-4.09 11.57-11.57v-8.9c0-7.48-3.92-11.57-11.57-11.57zm138.15-176.92L351.6 18a24 24 0 0 0-33.94 0l-10.78 10.8a24 24 0 0 0 .54 34.47l34.51 32.42H160c-88.23 0-160 71.77-160 160a159 159 0 0 0 17.16 72 24 24 0 0 0 38.31 6l12.18-12.19a23.77 23.77 0 0 0 4.73-26.63A96 96 0 0 1 160 159.69h181.93l-22.09 20a24 24 0 0 0-.54 34.46l10.77 10.78a24 24 0 0 0 33.95 0l80.26-80.27a24 24 0 0 0 0-33.94z"]]
};
exports.faRepeat1 = faRepeat1;
var faRepeat1Alt = {
  prefix: 'fad',
  iconName: 'repeat-1-alt',
  icon: [512, 512, [], "f366", ["M493.54 181.5A159 159 0 0 1 512 257.25C511.34 345.4 438.56 416 350.4 416H192v47.5c0 22.5-26.18 32.3-41 17.5l-80-80a24 24 0 0 1 0-33.94l80-80c15.11-15.11 41-4.34 41 17v48h158.87c52.82 0 96.58-42.18 97.12-95a95.53 95.53 0 0 0-9.21-42.06 23.94 23.94 0 0 1 4.8-27.28c4.74-4.71 8.64-8.55 11.87-11.79a24 24 0 0 1 38.09 5.57z", "M441 111.06l-80-80c-15-14.95-41-4.77-41 17.52V96H161.6C73.44 96 .66 166.67 0 254.82a159 159 0 0 0 18.46 75.75 24 24 0 0 0 38.09 5.57c3.23-3.23 7.13-7.08 11.87-11.78a24 24 0 0 0 4.8-27.29A95.46 95.46 0 0 1 64 255c.55-52.82 44.31-95 97.12-95H320v47.51c0 22.37 26.12 32.31 41 17.46l80-80a24 24 0 0 0 0-33.91zM306.13 288h-15.49v-84.4c0-7.65-4.09-11.57-11.75-11.57h-12.1c-6.06 0-10 1.6-14.42 5.7l-21.72 19.94c-5.52 5.16-5.88 11-.54 16.38l5.52 6.23c5.16 5.52 11.22 5.34 15.67 1.06a33.07 33.07 0 0 0 2.84-3.73h.36s-.5 5.39-.5 10.5V288h-15.16c-7.66 0-11.58 4.09-11.58 11.57v8.9c0 7.48 3.92 11.57 11.58 11.57h67.29c7.65 0 11.57-4.09 11.57-11.57v-8.9c0-7.49-3.92-11.57-11.57-11.57z"]]
};
exports.faRepeat1Alt = faRepeat1Alt;
var faRepeatAlt = {
  prefix: 'fad',
  iconName: 'repeat-alt',
  icon: [512, 512, [], "f364", ["M493.54 181.5A159 159 0 0 1 512 257.25C511.34 345.4 438.56 416 350.4 416H192v47.5c0 22.5-26.18 32.3-41 17.5l-80-80a24 24 0 0 1 0-33.94l80-80c15.11-15.11 41-4.34 41 17v48h158.87c52.82 0 96.58-42.18 97.12-95a95.53 95.53 0 0 0-9.21-42.06 23.94 23.94 0 0 1 4.8-27.28c4.74-4.71 8.64-8.55 11.87-11.79a24 24 0 0 1 38.09 5.57z", "M68.42 324.35c-4.74 4.71-8.64 8.56-11.87 11.79a24 24 0 0 1-38.09-5.57A159 159 0 0 1 0 254.82C.66 166.67 73.44 96 161.6 96H320V48.58c0-22.29 26-32.47 41-17.52l80 80a24 24 0 0 1 0 33.94l-80 80c-14.85 14.85-41 4.91-41-17.46V160H161.12c-52.81 0-96.57 42.18-97.12 95a95.47 95.47 0 0 0 9.22 42 23.94 23.94 0 0 1-4.8 27.35z"]]
};
exports.faRepeatAlt = faRepeatAlt;
var faReply = {
  prefix: 'fad',
  iconName: 'reply',
  icon: [512, 512, [], "f3e5", ["M512 322.33c0 61.44-39.58 122.3-83.33 154.13-13.66 9.93-33.11-2.54-28.08-18.63 45.34-145-21.51-183.51-176.59-185.75v-136c160.63 1.83 288 34.02 288 186.25z", "M224 360c0 20.7-24.3 31.45-39.69 18.16l-176-152a24 24 0 0 1 0-36.32l176-152C199.72 24.55 224 35.35 224 56z"]]
};
exports.faReply = faReply;
var faReplyAll = {
  prefix: 'fad',
  iconName: 'reply-all',
  icon: [576, 512, [], "f122", ["M115.39 250.38L224 344.17V360c0 20.7-24.3 31.45-39.69 18.16l-176-152a24 24 0 0 1 0-36.32l176-152C199.72 24.55 224 35.35 224 56v15.83l-108.61 93.79a56 56 0 0 0 0 84.76z", "M576 321.33c0 61.44-39.58 122.3-83.33 154.13-13.66 9.93-33.11-2.54-28.08-18.63 38.51-123.17-3.92-169.49-112.59-182V359c0 20.7-24.3 31.45-39.69 18.16l-176-152a24 24 0 0 1 0-36.32l176-152C327.72 23.55 352 34.35 352 55v82.77C481.18 148 576 190 576 321.33z"]]
};
exports.faReplyAll = faReplyAll;
var faRepublican = {
  prefix: 'fad',
  iconName: 'republican',
  icon: [640, 512, [], "f75e", ["M0 464V288h544v112a16 16 0 0 0 32 0v-64a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16v64a80.14 80.14 0 0 1-88.4 79.6c-41.6-4.2-71.6-42.5-71.6-84.3V352h-32v112a16 16 0 0 1-16 16h-96a16 16 0 0 1-16-16v-80H128v80a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16z", "M384 32H160A160 160 0 0 0 0 192v64h544v-64A160 160 0 0 0 384 32zM176.3 170.4l-19.8 19.3 4.7 27.3a6 6 0 0 1-8.7 6.3L128 210.4l-24.5 12.9a6 6 0 0 1-8.7-6.3l4.7-27.3-19.8-19.3a6 6 0 0 1 3.3-10.2l27.4-4 12.2-24.8a6 6 0 0 1 10.7 0l12.2 24.8 27.4 4a6 6 0 0 1 3.4 10.2zm144 0l-19.8 19.3 4.7 27.3a6 6 0 0 1-8.7 6.3L272 210.4l-24.5 12.9a6 6 0 0 1-8.7-6.3l4.7-27.3-19.8-19.3a6 6 0 0 1 3.3-10.2l27.4-4 12.2-24.8a6 6 0 0 1 10.7 0l12.2 24.8 27.4 4a6 6 0 0 1 3.4 10.2zm144 0l-19.8 19.3 4.7 27.3a6 6 0 0 1-8.7 6.3L416 210.4l-24.5 12.9a6 6 0 0 1-8.7-6.3l4.7-27.3-19.8-19.3a6 6 0 0 1 3.3-10.2l27.4-4 12.2-24.8a6 6 0 0 1 10.7 0l12.2 24.8 27.4 4a6 6 0 0 1 3.4 10.2z"]]
};
exports.faRepublican = faRepublican;
var faRestroom = {
  prefix: 'fad',
  iconName: 'restroom',
  icon: [640, 512, [], "f7bd", ["M112 0a64 64 0 1 0 64 64 64.06 64.06 0 0 0-64-64zm208 0h-32a16 16 0 0 0-16 16v480a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16zm176 0a64 64 0 1 0 64 64 64.06 64.06 0 0 0-64-64z", "M623.3 354.5l-45.6-185.8c-3.3-13.5-15.5-23-29.8-24.2a95 95 0 0 1-104 0c-14.3 1.2-26.5 10.7-29.8 24.2l-45.6 185.8C365 369.6 377 384 393.2 384H448v104a23.94 23.94 0 0 0 24 24h48a23.94 23.94 0 0 0 24-24V384h54.8c16.2 0 28.2-14.4 24.5-29.5zM164.1 144.4a94.8 94.8 0 0 1-104.2 0A47.82 47.82 0 0 0 16 192v136a23.94 23.94 0 0 0 24 24h8v136a23.94 23.94 0 0 0 24 24h80a23.94 23.94 0 0 0 24-24V352h8a23.94 23.94 0 0 0 24-24V192a47.82 47.82 0 0 0-43.9-47.6z"]]
};
exports.faRestroom = faRestroom;
var faRetweet = {
  prefix: 'fad',
  iconName: 'retweet',
  icon: [640, 512, [], "f079", ["M10 202.66a24 24 0 0 1 0-33.94L110.72 68a24 24 0 0 1 33.94 0l100.68 100.71a24 24 0 0 1 0 33.95l-10.82 10.82a24 24 0 0 1-34.42-.48l-40.41-42.8v182.11h187.54a24 24 0 0 1 17 7l16 16c15.12 15.12 4.41 41-17 41H119.69a24 24 0 0 1-24-24V170.19L55.27 213a24 24 0 0 1-34.42.49z", "M259.17 137.28c-15.12-15.12-4.41-41 17-41h243.52a24 24 0 0 1 24 24v222.15l40.41-42.79a24 24 0 0 1 34.42-.49L629.34 310a24 24 0 0 1 0 33.94L528.66 444.6a24 24 0 0 1-33.94 0L394 343.91a24 24 0 0 1 0-33.91l10.82-10.82a24 24 0 0 1 34.42.49l40.42 42.79V160.31H292.14a24 24 0 0 1-17-7z"]]
};
exports.faRetweet = faRetweet;
var faRetweetAlt = {
  prefix: 'fad',
  iconName: 'retweet-alt',
  icon: [640, 512, [], "f361", ["M96 192H48c-21.36 0-32-25.9-17-41l80-80a24 24 0 0 1 34 0l80 80c15.11 15.1 4.35 41-17 41h-48v160h202.08a18.9 18.9 0 0 1 17.67 12.08 55.89 55.89 0 0 0 12.68 19.52c11.95 11.95 3.49 32.4-13.43 32.4H120a24 24 0 0 1-24-24z", "M609 361l-80 80a24 24 0 0 1-33.94 0l-80-80c-15.11-15.11-4.34-41 17-41h48V160H278a18.91 18.91 0 0 1-17.68-12.08 55.72 55.72 0 0 0-12.67-19.52c-12-12-3.49-32.4 13.42-32.4H520a24 24 0 0 1 24 24v200h48c21.39 0 32.06 25.9 17 41z"]]
};
exports.faRetweetAlt = faRetweetAlt;
var faRibbon = {
  prefix: 'fad',
  iconName: 'ribbon',
  icon: [448, 512, [], "f4d6", ["M6 444.29l117.2-130 79.2 87.9-91.8 101.9a24.15 24.15 0 0 1-31.3 3.8L10.54 480A23.91 23.91 0 0 1 6 444.29z", "M89.34 228.69c-48.6-53.8-13-113.5-11.5-116l43.6-73.2a56.71 56.71 0 0 1 16.8-18c44-29.7 130.7-27.6 171.4 0a56.71 56.71 0 0 1 16.8 18l43.7 73.5a97.84 97.84 0 0 1-11.4 115.5l-34.2 38-79.1-87.7s52.7-59 56-64.6c-15.4-8.4-40.2-17.9-77.5-17.9s-62.1 9.5-77.5 17.9c3.4 5.5 295.4 330.1 295.4 330.1a23.76 23.76 0 0 1-4.3 35.6l-68.8 27.9a24 24 0 0 1-31.3-3.8z"]]
};
exports.faRibbon = faRibbon;
var faRing = {
  prefix: 'fad',
  iconName: 'ring',
  icon: [512, 512, [], "f70b", ["M64 208c0-44.18 86-80 192-80s192 35.82 192 80c0 21.81-20.95 41.57-54.9 56-34.85-14.81-83.39-24-137.1-24s-102.25 9.19-137.1 24C85 249.57 64 229.81 64 208z", "M256 64C110.06 64 0 125.91 0 208v98.13C0 384.48 114.62 448 256 448s256-63.52 256-141.87V208c0-82.09-110.06-144-256-144zm0 224c-106 0-192-35.82-192-80s86-80 192-80 192 35.82 192 80-86 80-192 80z"]]
};
exports.faRing = faRing;
var faRingsWedding = {
  prefix: 'fad',
  iconName: 'rings-wedding',
  icon: [512, 512, [], "f81b", ["M130.92 101.84L96 32l32-32h96l32 32-34.92 69.84a176.91 176.91 0 0 0-90.16 0zM350 160.56a207.16 207.16 0 0 1 29.06 72 111.89 111.89 0 1 1-96.46 4.95q-1.5-4.65-3.4-9.14l-.08-.2c-.39-.9-.78-1.8-1.19-2.69a3.54 3.54 0 0 0-.16-.34c-.41-.9-.84-1.79-1.27-2.68l-.09-.18q-1.44-2.91-3.06-5.73v-.07c-.5-.87-1-1.72-1.52-2.57-.11-.18-.22-.36-.34-.54-.43-.71-.87-1.41-1.33-2.11-.13-.21-.27-.42-.41-.63-.46-.7-.92-1.39-1.4-2.07L268 208q-1.8-2.58-3.74-5l-.48-.59c-.48-.61-1-1.21-1.47-1.81l-.67-.8c-.45-.53-.91-1.06-1.37-1.58l-.72-.83c-.49-.53-1-1.06-1.47-1.59l-.66-.72c-.71-.75-1.44-1.5-2.17-2.24a114.18 114.18 0 0 0-9.1-8.13 176.23 176.23 0 0 0-79.63 198.89A175.18 175.18 0 0 0 184 424.69q1.11 1.91 2.26 3.77c.76 1.24 1.54 2.46 2.34 3.68a.21.21 0 0 0 0 .06q1.18 1.82 2.42 3.6l.05.07q1.23 1.79 2.51 3.54c.85 1.18 1.73 2.35 2.61 3.5q1.33 1.75 2.72 3.46A176 176 0 1 0 350 160.56z", "M199 446.5a176 176 0 1 1 94-43 80.87 80.87 0 0 1-13.56-10.91 79.37 79.37 0 0 1-22.32-43.33 112 112 0 1 0-90.59 34.36A175.41 175.41 0 0 0 199 446.5z"]]
};
exports.faRingsWedding = faRingsWedding;
var faRoad = {
  prefix: 'fad',
  iconName: 'road',
  icon: [576, 512, [], "f018", ["M267.74 192h40.54a12 12 0 0 0 11.93-13.26l-4.6-43.58a8 8 0 0 0-8-7.16h-39.25a8 8 0 0 0-8 7.16l-4.59 43.58A12 12 0 0 0 267.74 192zm5.68-96h29.16a8 8 0 0 0 8-8.84L308.09 64h-40.18l-2.45 23.16a8 8 0 0 0 7.96 8.84zm64.89 254.32A16 16 0 0 0 322.4 336h-68.8a16 16 0 0 0-15.91 14.32L227.38 448h121.24zm-78-46.32h55.29a16 16 0 0 0 15.91-17.68l-5.07-48A16 16 0 0 0 310.57 224h-45.15a16 16 0 0 0-15.91 14.32l-5.07 48A16 16 0 0 0 260.35 304z", "M573.19 402.67l-139.79-320C428.43 71.29 417.6 64 405.68 64h-97.59l2.45 23.16a8 8 0 0 1-8 8.84h-29.12a8 8 0 0 1-8-8.84L267.91 64h-97.59a30.45 30.45 0 0 0-27.73 18.67L2.8 402.67C-6.45 423.86 8.31 448 30.54 448h196.84l10.31-97.68A16 16 0 0 1 253.6 336h68.8a16 16 0 0 1 15.91 14.32L348.62 448h196.84c22.23 0 36.99-24.14 27.73-45.33zM255.81 178.74l4.59-43.58a8 8 0 0 1 8-7.16h39.29a8 8 0 0 1 8 7.16l4.6 43.58A12 12 0 0 1 308.28 192h-40.54a12 12 0 0 1-11.93-13.26zM315.64 304h-55.29a16 16 0 0 1-15.91-17.68l5.07-48A16 16 0 0 1 265.42 224h45.15a16 16 0 0 1 15.91 14.32l5.07 48A16 16 0 0 1 315.64 304z"]]
};
exports.faRoad = faRoad;
var faRobot = {
  prefix: 'fad',
  iconName: 'robot',
  icon: [640, 512, [], "f544", ["M0 256v128a32 32 0 0 0 32 32h32V224H32a32 32 0 0 0-32 32zm608-32h-32v192h32a32 32 0 0 0 32-32V256a32 32 0 0 0-32-32zM192 416h64v-32h-64zm192 0h64v-32h-64zm-96 0h64v-32h-64z", "M464 96H352V32a32 32 0 0 0-64 0v64H176a80 80 0 0 0-80 80v272a64.06 64.06 0 0 0 64 64h320a64.06 64.06 0 0 0 64-64V176a80 80 0 0 0-80-80zM256 416h-64v-32h64zm-32-120a40 40 0 1 1 40-40 40 40 0 0 1-40 40zm128 120h-64v-32h64zm96 0h-64v-32h64zm-32-120a40 40 0 1 1 40-40 40 40 0 0 1-40 40z"]]
};
exports.faRobot = faRobot;
var faRocket = {
  prefix: 'fad',
  iconName: 'rocket',
  icon: [512, 512, [], "f135", ["M383.85 311.19v106a47.92 47.92 0 0 1-26.5 42.9l-98.7 49.39A24 24 0 0 1 224 488V384.16l133.12-59.42q13.68-6.12 26.73-13.55zM187.18 154.6q6.06-13.6 13.41-26.6H94.82A48 48 0 0 0 52 154.49l-49.47 98.8A24 24 0 0 0 24 288h103.79z", "M505 19.1a15.9 15.9 0 0 0-12.2-12.2C460.6 0 435.41 0 410.31 0c-75.56 0-129 29.59-170.3 74a293 293 0 0 0-52.83 80.59L127.79 288l-22.47 22.47a32 32 0 0 0 0 45.25l50.9 50.91a32 32 0 0 0 45.25 0L224 384.16l133.12-59.42a293.28 293.28 0 0 0 80.59-53c44.45-41.4 74.19-94.85 74.19-170.08.1-25.16.1-50.36-6.9-82.56zM384 168a40 40 0 1 1 40-40 40 40 0 0 1-40 40z"]]
};
exports.faRocket = faRocket;
var faRoute = {
  prefix: 'fad',
  iconName: 'route',
  icon: [512, 512, [], "f4d7", ["M512 416a96.15 96.15 0 0 1-96 96H138.2a690.4 690.4 0 0 0 47.3-64H416a32 32 0 0 0 0-64h-96a96 96 0 0 1 0-192h45.24A799.82 799.82 0 0 0 416 256h-96a32 32 0 0 0 0 64h96a96.15 96.15 0 0 1 96 96z", "M96 256a96 96 0 0 0-96 96c0 53 96 160 96 160s96-107 96-160a96 96 0 0 0-96-96zm0 128a32 32 0 1 1 32-32 32 32 0 0 1-32 32zM416 0a96 96 0 0 0-96 96c0 53 96 160 96 160s96-107 96-160a96 96 0 0 0-96-96zm0 128a32 32 0 1 1 32-32 32 32 0 0 1-32 32z"]]
};
exports.faRoute = faRoute;
var faRouteHighway = {
  prefix: 'fad',
  iconName: 'route-highway',
  icon: [448, 512, [], "f61a", ["M428.4 269.21c37.94 56.52 18.55 139.43-38.81 166L224 512 58.41 435.25c-57.36-26.6-76.75-109.51-38.81-166A93.67 93.67 0 0 0 35 224h378a93.55 93.55 0 0 0 15.4 45.21z", "M6.6 113.82a24.73 24.73 0 0 1 1.87-25.13l41.18-58.37c5-7.09 15.67-13.13 27.49-8.61a141.61 141.61 0 0 0 50.25 8.89c29.51 0 59.82-8.47 83.17-26.11a22.36 22.36 0 0 1 26.88 0c23.35 17.64 53.65 26.11 83.16 26.11a141.7 141.7 0 0 0 50.26-8.89c11.73-4.49 22.43 1.43 27.49 8.61l41.18 58.36a24.73 24.73 0 0 1 1.87 25.13c-12.16 25-22.84 51.88-27 78.19H33.58c-4.15-26.31-14.82-53.22-26.98-78.18z"]]
};
exports.faRouteHighway = faRouteHighway;
var faRouteInterstate = {
  prefix: 'fad',
  iconName: 'route-interstate',
  icon: [480, 512, [], "f61b", ["M475.24 224c-16.7 107.6-80.3 224.14-235.24 288C85.05 448.14 21.46 331.6 4.76 224z", "M1.1 192c-3.81-51.73 2.64-99.8 14.08-136.87 3.61-11.69 15-19.1 26.18-16a214.52 214.52 0 0 0 58.1 8c49.12 0 93.61-16.07 126.17-42.1a23 23 0 0 1 28.75 0c32.56 26 77.05 42.1 126.17 42.1a214.52 214.52 0 0 0 58.1-8c11.26-3.15 22.58 4.29 26.18 16 11.43 37.09 17.88 85.16 14.07 136.87z"]]
};
exports.faRouteInterstate = faRouteInterstate;
var faRouter = {
  prefix: 'fad',
  iconName: 'router',
  icon: [576, 512, [], "f8da", ["M566.22 82.05C444.81-27.34 259.26-27.34 137.78 82a16.11 16.11 0 0 0-.71 23.34l22.34 22.34a15.85 15.85 0 0 0 21.86.64c96.45-86.55 244.24-85.85 341.11.42a16 16 0 0 0 21.85-.63l22.7-22.7a16.1 16.1 0 0 0-.71-23.36zm-360.34 83.61a16.12 16.12 0 0 0-.86 23.61L227.73 212a15.94 15.94 0 0 0 21.7.78c58.77-49.84 145.8-49.36 205.14.21a16.07 16.07 0 0 0 21.63-.84l22.8-22.8a16.22 16.22 0 0 0-.84-23.63c-83.83-71.91-208.42-71.91-292.28-.06zM96 384a32 32 0 1 0 32 32 32 32 0 0 0-32-32z", "M528 320H376v-80a16 16 0 0 0-16-16h-16a16 16 0 0 0-16 16v80H48a48 48 0 0 0-48 48v96a48 48 0 0 0 48 48h480a48 48 0 0 0 48-48v-96a48 48 0 0 0-48-48zM96 448a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm96 0a32 32 0 1 1 32-32 32 32 0 0 1-32 32z"]]
};
exports.faRouter = faRouter;
var faRss = {
  prefix: 'fad',
  iconName: 'rss',
  icon: [448, 512, [], "f09e", ["M303.74 463.21c-8.35-154.6-132.18-278.59-286.95-286.95A16 16 0 0 0 0 192.25v48.07a16 16 0 0 0 14.89 16c111.83 7.28 201.47 96.7 208.77 208.77a16 16 0 0 0 16 14.89h48.07a16 16 0 0 0 16-16.79zM16.5 32A16 16 0 0 0 0 48v48.08a16 16 0 0 0 15.45 16c191.18 7.84 344.63 161.32 352.47 352.47a16 16 0 0 0 16 15.45H432a16 16 0 0 0 16-16.5C439.6 229.68 251.46 40.45 16.5 32z", "M0 416a64 64 0 1 1 64 64 64 64 0 0 1-64-64z"]]
};
exports.faRss = faRss;
var faRssSquare = {
  prefix: 'fad',
  iconName: 'rss-square',
  icon: [448, 512, [], "f143", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zM112 416a48 48 0 1 1 48-48 48 48 0 0 1-48 48zm157.53 0H235.2a11.44 11.44 0 0 1-11.44-10.63A160.07 160.07 0 0 0 74.63 256.24 11.44 11.44 0 0 1 64 244.8v-34.33A11.42 11.42 0 0 1 76 199c110.55 6 199 94.54 205 205a11.42 11.42 0 0 1-11.47 12zm103 0h-34.3a11.45 11.45 0 0 1-11.43-11C321.2 268.43 211.59 158.8 75 153.2a11.45 11.45 0 0 1-11-11.43v-34.33A11.42 11.42 0 0 1 75.79 96C243.62 102 378 237.2 384 404.21A11.42 11.42 0 0 1 372.56 416z", "M112 320a48 48 0 1 0 48 48 48 48 0 0 0-48-48zM75.79 96A11.42 11.42 0 0 0 64 107.44v34.33a11.45 11.45 0 0 0 11 11.43c136.59 5.6 246.2 115.23 251.8 251.8a11.45 11.45 0 0 0 11.43 11h34.33A11.42 11.42 0 0 0 384 404.21C378 237.2 243.62 102 75.79 96zM76 199a11.42 11.42 0 0 0-12 11.43v34.37a11.44 11.44 0 0 0 10.63 11.44 160.07 160.07 0 0 1 149.13 149.13A11.44 11.44 0 0 0 235.2 416h34.33A11.42 11.42 0 0 0 281 404c-6-110.42-94.46-199-205-205z"]]
};
exports.faRssSquare = faRssSquare;
var faRubleSign = {
  prefix: 'fad',
  iconName: 'ruble-sign',
  icon: [384, 512, [], "f158", ["M320 368v32a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h288a16 16 0 0 1 16 16z", "M239.36 32H76a12 12 0 0 0-12 12v206.63H12a12 12 0 0 0-12 12V308a12 12 0 0 0 12 12h52v148a12 12 0 0 0 12 12h58.56a12 12 0 0 0 12-12V320h92.8C324.48 320 384 260.54 384 175.07S324.48 32 239.36 32zM224 250.63h-77.44V100.75h78.72c46.72 0 74.88 29.11 74.88 74.32 0 45.83-28.16 75.56-76.16 75.56z"]]
};
exports.faRubleSign = faRubleSign;
var faRuler = {
  prefix: 'fad',
  iconName: 'ruler',
  icon: [640, 512, [], "f545", ["M624.16 210l-496.8 281.9a32.18 32.18 0 0 1-43.5-11.5L4.26 344.77A31.1 31.1 0 0 1 16 302l69-39.1 59.7 101.4a8 8 0 0 0 10.9 2.9l13.8-7.8a7.78 7.78 0 0 0 2.9-10.7l-59.6-101.52 55.19-31.32 27.81 47.34a8 8 0 0 0 10.9 2.9l13.8-7.8a7.76 7.76 0 0 0 2.9-10.7l-27.93-47.4 55.19-31.31 59.7 101.68a8 8 0 0 0 10.9 2.9l13.8-7.8a7.78 7.78 0 0 0 2.9-10.7l-59.8-101.68 55.2-31.29 27.9 47.3a8 8 0 0 0 10.9 2.9l13.8-7.8a7.76 7.76 0 0 0 2.9-10.7l-27.89-47.38L416.06 75l59.7 101.59a8 8 0 0 0 10.9 2.9l13.8-7.8a7.76 7.76 0 0 0 2.9-10.7L443.68 59.31l69-39.14a32.18 32.18 0 0 1 43.5 11.5l79.6 135.5A31 31 0 0 1 624.16 210z", "M112.66 247.15L85 262.87l59.7 101.4a8 8 0 0 0 10.9 2.9l13.8-7.8a7.78 7.78 0 0 0 2.9-10.7zm165.4-93.88l-27.5 15.61 59.7 101.69a8 8 0 0 0 10.9 2.9l13.8-7.8a7.78 7.78 0 0 0 2.9-10.7zm-82.69 46.93l-27.52 15.63 27.81 47.34a8 8 0 0 0 10.9 2.9l13.8-7.8a7.76 7.76 0 0 0 2.9-10.7zm308-39.23l-59.7-101.7L416.06 75l59.7 101.6a8 8 0 0 0 10.9 2.9l13.8-7.8a7.76 7.76 0 0 0 2.9-10.7zm-142.5-54.7L333.26 122l27.9 47.3a8 8 0 0 0 10.9 2.9l13.8-7.8a7.76 7.76 0 0 0 2.9-10.7z"]]
};
exports.faRuler = faRuler;
var faRulerCombined = {
  prefix: 'fad',
  iconName: 'ruler-combined',
  icon: [512, 512, [], "f546", ["M512 384v96a32 32 0 0 1-32 32H32c-2.76 0-5.24-.91-7.8-1.57L182.63 352H224v56a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-56h64v56a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-56h64v56a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-56h32a32 32 0 0 1 32 32zm-352-96h-56a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h56v-64h-56a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h56V96h-56a8 8 0 0 1-8-8V72a8 8 0 0 1 8-8h56V32a32 32 0 0 0-32-32H32A32 32 0 0 0 0 32v448c0 2.77.91 5.24 1.57 7.8L160 329.38z", "M96 264v16a8 8 0 0 0 8 8h56v-32h-56a8 8 0 0 0-8 8zm0-192v16a8 8 0 0 0 8 8h56V64h-56a8 8 0 0 0-8 8zm0 96v16a8 8 0 0 0 8 8h56v-32h-56a8 8 0 0 0-8 8zm320 184v56a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-56zm-192 56a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-56h-32zm96 0a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-56h-32z"]]
};
exports.faRulerCombined = faRulerCombined;
var faRulerHorizontal = {
  prefix: 'fad',
  iconName: 'ruler-horizontal',
  icon: [576, 512, [], "f547", ["M576 160v192a32 32 0 0 1-32 32H32a32 32 0 0 1-32-32V160a32 32 0 0 1 32-32h48v88a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-88h64v88a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-88h64v88a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-88h64v88a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-88h64v88a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-88h48a32 32 0 0 1 32 32z", "M176 216a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-88h-32zm-96 0a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-88H80zm192 0a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-88h-32zm192-88v88a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-88zm-96 88a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-88h-32z"]]
};
exports.faRulerHorizontal = faRulerHorizontal;
var faRulerTriangle = {
  prefix: 'fad',
  iconName: 'ruler-triangle',
  icon: [512, 512, [], "f61c", ["M501.65 452.08l-51.16-51.16-38.57 38.57a8 8 0 0 1-11.31 0l-11.31-11.31a8 8 0 0 1 0-11.31l38.57-38.57-56.57-56.57-38.57 38.57a8 8 0 0 1-11.31 0L310.11 349a8 8 0 0 1 0-11.31l38.57-38.57-56.57-56.57-38.57 38.57a8 8 0 0 1-11.31 0l-11.31-11.32a8 8 0 0 1 0-11.31l38.57-38.57-56.57-56.57-38.57 38.57a8 8 0 0 1-11.31 0l-11.31-11.31a8 8 0 0 1 0-11.31l38.57-38.57-56.6-56.59-38.57 38.57a8 8 0 0 1-11.31 0L72.51 111.4a8 8 0 0 1 0-11.31l38.57-38.57-51.17-51.17A34.36 34.36 0 0 0 35.35 0C17.31 0 0 14 0 35.17V476.9A35.09 35.09 0 0 0 35.1 512h441.73c31.27 0 46.93-37.8 24.82-59.92zM128 384V259.46L252.54 384z", "M310.11 337.68l38.57-38.57 22.62 22.62-38.57 38.57a8 8 0 0 1-11.31 0L310.11 349a8 8 0 0 1 0-11.32zM174.35 201.92l38.57-38.57-22.62-22.62-38.57 38.57a8 8 0 0 0 0 11.31L163 201.92a8 8 0 0 0 11.35 0zm-90.53-79.21a8 8 0 0 0 11.31 0l38.57-38.57-22.62-22.62-38.57 38.57a8 8 0 0 0 0 11.31zm208.29 119.83l-11.3-11.29-11.32-11.33-38.57 38.57a8 8 0 0 0 0 11.31l11.31 11.31a8 8 0 0 0 11.31 0zM427.87 378.3l-38.57 38.57a8 8 0 0 0 0 11.31l11.31 11.31a8 8 0 0 0 11.31 0l38.57-38.57z"]]
};
exports.faRulerTriangle = faRulerTriangle;
var faRulerVertical = {
  prefix: 'fad',
  iconName: 'ruler-vertical',
  icon: [256, 512, [], "f548", ["M160 104v16a8 8 0 0 0 8 8h88v64h-88a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h88v64h-88a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h88v64h-88a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h88v64a32 32 0 0 1-32 32H32a32 32 0 0 1-32-32V32A32 32 0 0 1 32 0h192a32 32 0 0 1 32 32v64h-88a8 8 0 0 0-8 8z", "M160 296v16a8 8 0 0 0 8 8h88v-32h-88a8 8 0 0 0-8 8zm0 96v16a8 8 0 0 0 8 8h88v-32h-88a8 8 0 0 0-8 8zm0-192v16a8 8 0 0 0 8 8h88v-32h-88a8 8 0 0 0-8 8zm8-104a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h88V96z"]]
};
exports.faRulerVertical = faRulerVertical;
var faRunning = {
  prefix: 'fad',
  iconName: 'running',
  icon: [416, 512, [], "f70c", ["M272 96a48 48 0 1 1 48-48 48 48 0 0 1-48 48z", "M384 223.81h-44l-26.06-53.2c-12.5-25.53-35.45-44.2-61.78-50.9l-71.11-21.13a95.65 95.65 0 0 0-80.84 17.12l-39.67 30.39A32 32 0 1 0 99.3 197l.18-.13 39.69-30.39c7.67-5.88 17.44-8 25.27-6.13l14.7 4.36L141.68 252A64.09 64.09 0 0 0 168 332.23l85 50.13L225.53 470a32 32 0 0 0 60.79 20c.1-.3.19-.6.28-.9l31.6-101a48.15 48.15 0 0 0-21.64-54.35l-61.24-36.11 31.31-78.21 20.27 41.39a48.31 48.31 0 0 0 43.1 26.94h54a32 32 0 1 0 0-63.95zm-270.31 93.4l-14.8 34.5H32a32 32 0 1 0 0 63.94h77.45a47.88 47.88 0 0 0 44.11-29.06l8.79-20.5-10.67-6.3a95.23 95.23 0 0 1-38-42.58z"]]
};
exports.faRunning = faRunning;
var faRupeeSign = {
  prefix: 'fad',
  iconName: 'rupee-sign',
  icon: [320, 512, [], "f156", ["M320 144v32a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h288a16 16 0 0 1 16 16z", "M320 44v40a12 12 0 0 1-12 12h-76.26a144 144 0 0 1-114.87 223.91l150.88 139.27a12 12 0 0 1-8.14 20.82h-82.56a12 12 0 0 1-8.14-3.18L3.86 324.46A12 12 0 0 1 0 315.64v-48A12 12 0 0 1 9.13 256H96a79.68 79.68 0 0 0 31.39-6.4 68.32 68.32 0 0 0 6.21-3 80 80 0 0 0-4.83-143.6 71.06 71.06 0 0 0-31.52-7.28H12a12 12 0 0 1-12-12V44a12 12 0 0 1 12-12h296a12 12 0 0 1 12 12z"]]
};
exports.faRupeeSign = faRupeeSign;
var faRv = {
  prefix: 'fad',
  iconName: 'rv',
  icon: [640, 512, [], "f7be", ["M240 448a64 64 0 1 1-64-64 64 64 0 0 1 64 64zm400-133.5V384a32.09 32.09 0 0 1-32 32h-21.56a96 96 0 0 0-170.5-21.07V192l101.58.2a64.3 64.3 0 0 1 45.39 18.8l58.29 58.3a64.29 64.29 0 0 1 18.8 45.2zM572 288l-43.29-43.3a15.89 15.89 0 0 0-11.3-4.7h-37.48v48zm-76.08 96a64 64 0 1 0 64 64 64 64 0 0 0-64-64z", "M512 32H384V16a16 16 0 0 0-16-16H240a16 16 0 0 0-16 16v16H64A64.07 64.07 0 0 0 0 96v197.54a64 64 0 0 0 18.7 45.31l69.78 69.7a96 96 0 0 1 178 7.45H384V160h192c17.9 0 32.1-14.8 32-32.8A96 96 0 0 0 512 32zM256 208a16 16 0 0 1-16 16H112a16 16 0 0 1-16-16v-64a16 16 0 0 1 16-16h128a16 16 0 0 1 16 16z"]]
};
exports.faRv = faRv;
var faSack = {
  prefix: 'fad',
  iconName: 'sack',
  icon: [512, 512, [], "f81c", ["M192 96h128l47.4-71.12A16 16 0 0 0 354.09 0H157.94a16 16 0 0 0-13.31 24.88zm128 32H192C-10.38 243.4.09 396.64.09 416c0 53 49.11 96 109.68 96h292.48c60.58 0 109.68-43 109.68-96 0-19 9.35-173.24-191.93-288z", "M337 104v16a8 8 0 0 1-8 8H183a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h146a8 8 0 0 1 8 8z"]]
};
exports.faSack = faSack;
var faSackDollar = {
  prefix: 'fad',
  iconName: 'sack-dollar',
  icon: [512, 512, [], "f81d", ["M192 96h128l47.4-71.12A16 16 0 0 0 354.09 0H157.94a16 16 0 0 0-13.31 24.88zm128 32H192C-10.38 243.4.09 396.64.09 416c0 53 49.11 96 109.68 96h292.48c60.58 0 109.68-43 109.68-96 0-19 9.35-173.24-191.93-288zm-46.58 278v17.34a8.68 8.68 0 0 1-8.7 8.62h-17.41a8.69 8.69 0 0 1-8.71-8.62v-17.51a63.14 63.14 0 0 1-34.16-12.17 8.52 8.52 0 0 1-.67-13l12.84-12.06a8.93 8.93 0 0 1 11-.76 26.71 26.71 0 0 0 13.93 4h30.58c7.07 0 12.84-6.35 12.84-14.22 0-6.46-3.92-12.06-9.58-13.67l-49-14.54c-20.24-6-34.39-25.2-34.39-46.74 0-26.38 20.68-47.82 46.46-48.57v-17.48a8.69 8.69 0 0 1 8.75-8.62h17.41a8.68 8.68 0 0 1 8.7 8.62v17.55a63.15 63.15 0 0 1 34.17 12.17 8.54 8.54 0 0 1 1.58 12 8.72 8.72 0 0 1-.92 1l-12.73 12.2a8.91 8.91 0 0 1-11 .75 26.8 26.8 0 0 0-13.93-4h-30.57c-7.07 0-12.84 6.35-12.84 14.21 0 6.46 3.92 12.06 9.57 13.68l49 14.54c20.24 6 34.38 25.2 34.38 46.74-.14 26.4-20.92 47.94-46.6 48.54z", "M285.64 310.72l-49-14.54c-5.65-1.62-9.57-7.22-9.57-13.68 0-7.86 5.77-14.21 12.84-14.21h30.56a26.8 26.8 0 0 1 13.93 4 8.91 8.91 0 0 0 11-.75l12.73-12.2a8.72 8.72 0 0 0 .92-1 8.54 8.54 0 0 0-1.56-12 63.15 63.15 0 0 0-34.17-12.17v-17.55a8.68 8.68 0 0 0-8.7-8.62H247.2a8.69 8.69 0 0 0-8.74 8.62v17.48c-25.78.75-46.46 22.19-46.46 48.57 0 21.54 14.15 40.74 34.39 46.74l49 14.54c5.66 1.61 9.58 7.21 9.58 13.67 0 7.87-5.77 14.22-12.84 14.22h-30.58a26.71 26.71 0 0 1-13.93-4 8.93 8.93 0 0 0-11 .76l-12.84 12.06a8.52 8.52 0 0 0 .67 13 63.14 63.14 0 0 0 34.16 12.17v17.51a8.69 8.69 0 0 0 8.71 8.62h17.41a8.68 8.68 0 0 0 8.7-8.62V406c25.68-.6 46.46-22.14 46.6-48.54-.03-21.54-14.15-40.74-34.39-46.74zM329 96H183a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h146a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8z"]]
};
exports.faSackDollar = faSackDollar;
var faSadCry = {
  prefix: 'fad',
  iconName: 'sad-cry',
  icon: [496, 512, [], "f5b3", ["M365,474.72l2.52-1.37Zm-2.2,1.16-2.46,1.28Zm-13.92,6.74,2.51-1.13Zm7.32-3.4-2.46,1.17ZM496,256A247.82,247.82,0,0,1,375.82,468.57l.18-.1V288a16,16,0,0,0-32,0V484.74a248.88,248.88,0,0,1-192,0V288a16,16,0,0,0-32,0V468.47h.06A247.81,247.81,0,0,1,0,256C0,119,111,8,248,8S496,119,496,256ZM192.2,233A12,12,0,0,0,212,222.2c-4-25.2-34.2-42.1-59.9-42.1S96.2,197,92.2,222.2A12,12,0,0,0,112,233l9.5-8.5c14.8-13.2,46.2-13.2,61,0ZM296,352c0-35.3-21.5-64-48-64s-48,28.7-48,64,21.5,64,48,64S296,387.3,296,352ZM404,222.2c-4-25.2-34.2-42.1-59.9-42.1s-55.9,16.9-59.9,42.1A12,12,0,0,0,304,233l9.6-8.6c14.8-13.2,46.2-13.2,61,0l9.5,8.5a11.92,11.92,0,0,0,13.7,1.6,12.36,12.36,0,0,0,6.2-12.3ZM344,484.74l2.42-1ZM128.48,473.35l2.52,1.37Zm4.72,2.53,2.46,1.28Zm-6.81-3.7c-.83-.47-1.67-.93-2.5-1.41C124.72,471.25,125.56,471.71,126.39,472.18Zm13.42,7c.81.4,1.63.78,2.45,1.17-.82-.35-1.64-.73-2.45-1.13Zm232.3-8.45c-.83.48-1.67.94-2.5,1.41.83-.43,1.67-.89,2.5-1.37Zm-227.5,10.72,2.51,1.13ZM152,484.7l-2.42-1Z", "M152.1,180.1c-25.7,0-55.9,16.9-59.9,42.1A12,12,0,0,0,112,233l9.5-8.5c14.8-13.2,46.2-13.2,61,0l9.7,8.5A12,12,0,0,0,212,222.2C208,197,177.8,180.1,152.1,180.1ZM404,222.2c-4-25.2-34.2-42.1-59.9-42.1s-55.9,16.9-59.9,42.1A12,12,0,0,0,304,233l9.6-8.6c14.8-13.2,46.2-13.2,61,0l9.5,8.5a11.92,11.92,0,0,0,13.7,1.6,12.36,12.36,0,0,0,6.2-12.3ZM360,272a16,16,0,0,0-16,16V484.74a247.25,247.25,0,0,0,32-16.27V288A16,16,0,0,0,360,272Zm-224,0a16,16,0,0,0-16,16V468.47a247.25,247.25,0,0,0,32,16.27V288A16,16,0,0,0,136,272Z"]]
};
exports.faSadCry = faSadCry;
var faSadTear = {
  prefix: 'fad',
  iconName: 'sad-tear',
  icon: [496, 512, [], "f5b4", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8Zm80,168a32,32,0,1,1-32,32A32,32,0,0,1,328,176ZM152,416c-26.5,0-48-21-48-47,0-20,28.5-60.4,41.6-77.8a8,8,0,0,1,11.2-1.6,7.58,7.58,0,0,1,1.6,1.6C171.5,308.6,200,349,200,369,200,395,178.5,416,152,416Zm16-176a32,32,0,1,1,32-32A32,32,0,0,1,168,240ZM338.2,394.2A117.35,117.35,0,0,0,248,352c-21.2,0-21.2-32,0-32a148.8,148.8,0,0,1,114.7,53.8c13.8,16.4-11.2,36.5-24.5,20.4Z", "M328,176a32,32,0,1,0,32,32A32,32,0,0,0,328,176ZM145.6,291.2C132.5,308.6,104,349,104,369c0,26,21.5,47,48,47s48-21,48-47c0-20-28.5-60.4-41.6-77.8a8,8,0,0,0-11.2-1.6,7.58,7.58,0,0,0-1.6,1.6ZM168,176a32,32,0,1,0,32,32A32,32,0,0,0,168,176Z"]]
};
exports.faSadTear = faSadTear;
var faSalad = {
  prefix: 'fad',
  iconName: 'salad',
  icon: [512, 512, [], "f81e", ["M416 96c2.65 0 5.12.62 7.73.78C406.14 76.87 380.69 64 352 64a95.2 95.2 0 0 0-25.15 3.75 111.94 111.94 0 0 0-205.7 0A95.2 95.2 0 0 0 96 64a96 96 0 0 0 0 192h73.37l-87-87a8 8 0 0 1 0-11.31l11.32-11.29a8 8 0 0 1 11.31 0l103 103V104a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v152h52.54a126.78 126.78 0 0 1-4.54-32A128.14 128.14 0 0 1 416 96zm33.25 38a95.3 95.3 0 0 0-123.37 122h169.29a48.23 48.23 0 0 1 10.57 1.24A95.86 95.86 0 0 0 449.25 134z", "M384 468.52V480a32 32 0 0 1-32 32H160a32 32 0 0 1-32-32v-11.28C58.27 444.26 6.69 381.24.06 304.87-.74 295.75 7 288 16.17 288h479c9.15 0 16.89 7.72 16.1 16.84C504.66 381 453.4 443.9 384 468.52z"]]
};
exports.faSalad = faSalad;
var faSandwich = {
  prefix: 'fad',
  iconName: 'sandwich',
  icon: [512, 512, [], "f81f", ["M512 271.07v32.14c0 .47 0 .93-.08 1.4a16.27 16.27 0 0 1-17.78 14.6c-28.52-2.6-45.94-11.36-60.41-18.6S408.54 288 384.12 288s-35 5.3-49.64 12.62c-17.26 8.63-38.7 19.38-78.26 19.38s-61.08-10.73-78.34-19.38C163.2 293.3 152.58 288 128.11 288S93 293.3 78.36 300.63s-31.93 16-60.51 18.59c-.47 0-.94.07-1.41.08A16.26 16.26 0 0 1 0 303.22v-32.14a15.93 15.93 0 0 1 14.1-15.79c15.16-1.67 24.16-6.17 35.67-11.91C67 234.73 88.53 224 128.11 224s61.08 10.75 78.36 19.38C221.14 250.7 231.8 256 256.22 256s35-5.3 49.64-12.62c17.26-8.63 38.72-19.38 78.26-19.38s61 10.75 78.27 19.39c11.51 5.73 20.43 10.22 35.51 11.9a15.94 15.94 0 0 1 14.1 15.78z", "M480 352h-64l-96 48-96-48H32a32 32 0 0 0-32 32v64a32 32 0 0 0 32 32h448a32 32 0 0 0 32-32v-64a32 32 0 0 0-32-32zm0-320H32A32 32 0 0 0 0 64v96a32 32 0 0 0 32 32h448a32 32 0 0 0 32-32V64a32 32 0 0 0-32-32z"]]
};
exports.faSandwich = faSandwich;
var faSatellite = {
  prefix: 'fad',
  iconName: 'satellite',
  icon: [512, 512, [], "f7bf", ["M111.93 377.4l-17.8 17.8c-2.6-.7-5-1.6-7.8-1.6a32 32 0 1 0 32 32c0-2.8-.9-5.2-1.6-7.8l17.8-17.8zm390.79-112.31l-.09-.09-80.38-80.42-33.95 34-107.8 107.8 80.35 80.35a31.87 31.87 0 0 0 45 0l96.7-96.7a31.78 31.78 0 0 0 .17-44.94zM247 9.3A32 32 0 0 0 224.43 0a31.61 31.61 0 0 0-22.5 9.3l-96.7 96.7a32 32 0 0 0 0 45.1l80.33 80.33 141.7-141.84z", "M470.13 136.8l-199.5 199.45a190.46 190.46 0 0 1-5.4 168.45c-4.5 8.5-16.4 9.6-23.2 2.8L4.43 270c-6.8-6.8-5.7-18.59 2.8-23.19a190.6 190.6 0 0 1 168.5-5.4l199.4-199.59a33.64 33.64 0 0 1 47.5 0l47.5 47.49a33.61 33.61 0 0 1 0 47.49z"]]
};
exports.faSatellite = faSatellite;
var faSatelliteDish = {
  prefix: 'fad',
  iconName: 'satellite-dish',
  icon: [512, 512, [], "f7c0", ["M224 256.15a32 32 0 0 0-32 32c0 2.8.9 5.2 1.6 7.8l-27.4 27.4L188.8 346l27.4-27.4c2.6.7 5 1.6 7.8 1.6a32 32 0 0 0 0-64zM511.9 303C503.4 139.85 372.2 8.65 209 0a16.08 16.08 0 0 0-17 15.2v32.43a15.85 15.85 0 0 0 15 15.9c129.4 7 233.4 112 240.9 241.5a16 16 0 0 0 15.9 15h32.1a16.12 16.12 0 0 0 16-16.18c.03-.27.02-.55 0-.85zM209.3 96a16.12 16.12 0 0 0-17.25 14.91c0 .4-.05.79-.05 1.19v32.1a15.94 15.94 0 0 0 14.8 15.9c76.8 6.3 138 68.2 144.9 145.2a16.08 16.08 0 0 0 15.9 14.7h32.2a16.19 16.19 0 0 0 16.14-16.25v-1C407.5 192.65 319.4 104.55 209.3 96z", "M302.4 487.55c-77.7 41.8-176.7 29.9-242.3-35.7s-77.5-164.5-35.7-242.3c4.9-9.1 17.7-10.3 25-3l256 256c7.4 7.3 6.2 20.1-3 25z"]]
};
exports.faSatelliteDish = faSatelliteDish;
var faSausage = {
  prefix: 'fad',
  iconName: 'sausage',
  icon: [512, 512, [], "f820", ["M416 64a96 96 0 0 0-96 96c0 88.22-71.78 160-160 160a96 96 0 0 0 0 192 351.79 351.79 0 0 0 352-352 96 96 0 0 0-96-96zM160 400a16 16 0 0 1 0-32c114.69 0 208-93.31 208-208a16 16 0 0 1 32 0c0 132.34-107.66 240-240 240z", "M24.18 369A18.36 18.36 0 0 0 1 380.59a18.11 18.11 0 0 0-1 5.79v59.24A18.38 18.38 0 0 0 24.18 463l45.26-15.08a96.4 96.4 0 0 1 0-63.88zM451.41 1a18.11 18.11 0 0 0-5.79-1h-59.24a18.36 18.36 0 0 0-18.33 18.39 18.68 18.68 0 0 0 .95 5.79l15.08 45.26a96.4 96.4 0 0 1 63.88 0l15-45.27A18.36 18.36 0 0 0 451.41 1zM384 144a16 16 0 0 0-16 16c0 114.69-93.31 208-208 208a16 16 0 0 0 0 32c132.34 0 240-107.66 240-240a16 16 0 0 0-16-16z"]]
};
exports.faSausage = faSausage;
var faSave = {
  prefix: 'fad',
  iconName: 'save',
  icon: [448, 512, [], "f0c7", ["M288 352a64 64 0 1 1-64-64 64 64 0 0 1 64 64z", "M433.94 129.94l-83.88-83.88A48 48 0 0 0 316.12 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V163.88a48 48 0 0 0-14.06-33.94zM224 416a64 64 0 1 1 64-64 64 64 0 0 1-64 64zm96-204a12 12 0 0 1-12 12H76a12 12 0 0 1-12-12V108a12 12 0 0 1 12-12h228.52a12 12 0 0 1 8.48 3.52l3.48 3.48a12 12 0 0 1 3.52 8.48z"]]
};
exports.faSave = faSave;
var faSaxHot = {
  prefix: 'fad',
  iconName: 'sax-hot',
  icon: [640, 512, [], "f8db", ["M635.28 100.69L608 73.37A32 32 0 0 0 585.34 64h-46.83a64 64 0 0 0-45.26 18.74L210 366a25.41 25.41 0 0 1-39.76-31l47.39-79H240a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16H16a16 16 0 0 0-16 16v16a15.91 15.91 0 0 0 15.21 15.84C7.48 288.56 0 326.72 0 352c0 61.4 35 114.09 85.73 140.92A150 150 0 0 0 160 512c77.1 0 116.46-51.33 128-64l246.39-308a32 32 0 0 1 25-12H624c14.22 0 21.36-17.23 11.28-27.31zM88 392a24 24 0 1 1 24-24 24 24 0 0 1-24 24zm32-88a24 24 0 1 1 24-24 24 24 0 0 1-24 24z", "M320 212.69L308.69 224a16 16 0 0 0 0 22.63L319 257l34-34-10.35-10.34a16 16 0 0 0-22.65.03zM177.77 25.6a301.94 301.94 0 0 0-28.1 30A387.31 387.31 0 0 0 100 0C50.88 45.58 16 105 16 140.8a117 117 0 0 0 5.89 35.2h61.34A60.88 60.88 0 0 1 72 140.8c0-7.62 8.66-30.3 28.46-57.54q2 2.61 3.89 5.22L147 147.26l27.06-33.08c6.07 12.1 9.54 22.24 9.92 26.62a60.88 60.88 0 0 1-11.21 35.2h61.34a117 117 0 0 0 5.89-35.2c0-26.63-26-81.57-62.23-115.2zM368 164.69L356.69 176a16 16 0 0 0 0 22.63L367 209l34-34-10.35-10.34a16 16 0 0 0-22.65.03zm70.62-48a16 16 0 0 0-22.62 0L404.69 128a16 16 0 0 0 0 22.63L415 161l34-34z"]]
};
exports.faSaxHot = faSaxHot;
var faSaxophone = {
  prefix: 'fad',
  iconName: 'saxophone',
  icon: [640, 512, [], "f8dc", ["M635.28 68.69L608 41.37A32 32 0 0 0 585.34 32h-46.83a64 64 0 0 0-45.26 18.74L210 334a25.41 25.41 0 0 1-39.76-31l76.16-127H272a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16H16a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h11.46C18.65 207.92 0 280.13 0 320c0 61.4 35 114.09 85.73 140.92A150 150 0 0 0 160 480c77.1 0 116.46-51.33 128-64l246.39-308a32 32 0 0 1 25-12H624c14.22 0 21.36-17.23 11.28-27.31zM96 344a24 24 0 1 1 24-24 24 24 0 0 1-24 24zm32-96a24 24 0 1 1 24-24 24 24 0 0 1-24 24z", "M320 180.69L308.69 192a16 16 0 0 0 0 22.63L319 225l34-34-10.34-10.34a16 16 0 0 0-22.66.03zm118.63-96a16 16 0 0 0-22.63 0L404.69 96a16 16 0 0 0 0 22.63L415 129l34-34zm-70.63 48L356.69 144a16 16 0 0 0 0 22.63L367 177l34-34-10.34-10.34a16 16 0 0 0-22.66.03zM96 296a24 24 0 1 0 24 24 24 24 0 0 0-24-24zm32-96a24 24 0 1 0 24 24 24 24 0 0 0-24-24z"]]
};
exports.faSaxophone = faSaxophone;
var faScalpel = {
  prefix: 'fad',
  iconName: 'scalpel',
  icon: [512, 512, [], "f61d", ["M176 320h105.6v8c0 38.39-15.35 76.61-46.72 102.32l-.59.48C170.28 482.82 87 512.07 0 512z", "M199.9 288a16 16 0 0 1-12.19-26.47l201.5-235.46C412.52-1.18 453.5-9 482.7 11.85c33.76 24.08 38.9 71.69 12.53 102.49l-139 162.44A32.08 32.08 0 0 1 331.84 288z"]]
};
exports.faScalpel = faScalpel;
var faScalpelPath = {
  prefix: 'fad',
  iconName: 'scalpel-path',
  icon: [640, 512, [], "f61e", ["M234.29 430.84C170.28 482.82 87 512.07 0 512l176-192h105.6v8c0 38.39-15.35 76.61-46.72 102.32z", "M482.71 11.85c-29.2-20.83-70.18-13-93.49 14.22l-201.5 235.46A16 16 0 0 0 199.91 288h131.94a32.08 32.08 0 0 0 24.37-11.22l139-162.44c26.38-30.8 21.24-78.41-12.51-102.49zM632 480h-80a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8zm-160 0h-80a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8zm-160 0h-80a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8z"]]
};
exports.faScalpelPath = faScalpelPath;
var faScanner = {
  prefix: 'fad',
  iconName: 'scanner',
  icon: [640, 512, [], "f488", ["M256 448a32 32 0 0 0 32-32V304.27L205 448zM368 64H96a95.91 95.91 0 0 0-1.7 191.79L6.44 408A48 48 0 0 0 24 473.53l55.4 32A48 48 0 0 0 145 488l134-232h89.09a16 16 0 0 0 16-16V80a16 16 0 0 0-16.03-16z", "M632 448H456a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8h176a8 8 0 0 0 8-8v-48a8 8 0 0 0-8-8zm0-96H456a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h176a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8zm0-64H456a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h176a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8zm0-224H456a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8h176a8 8 0 0 0 8-8V72a8 8 0 0 0-8-8zm0 96H456a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8h176a8 8 0 0 0 8-8v-48a8 8 0 0 0-8-8zm0-160H456a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h176a8 8 0 0 0 8-8V8a8 8 0 0 0-8-8z"]]
};
exports.faScanner = faScanner;
var faScannerImage = {
  prefix: 'fad',
  iconName: 'scanner-image',
  icon: [640, 512, [], "f8f3", ["M0 320v128a32 32 0 0 0 32 32h576a32 32 0 0 0 32-32V288H32a32 32 0 0 0-32 32zm120 80a8 8 0 0 1-8 8H80a8 8 0 0 1-8-8v-32a8 8 0 0 1 8-8h32a8 8 0 0 1 8 8zm96 0a8 8 0 0 1-8 8h-32a8 8 0 0 1-8-8v-32a8 8 0 0 1 8-8h32a8 8 0 0 1 8 8z", "M617.84 220.84L36.31 32.83a16 16 0 0 0-20.25 10.1L.83 88.46a16 16 0 0 0 10.1 20.25L566.88 288H640v-36.71a32 32 0 0 0-22.16-30.45zM112 360H80a8 8 0 0 0-8 8v32a8 8 0 0 0 8 8h32a8 8 0 0 0 8-8v-32a8 8 0 0 0-8-8z"]]
};
exports.faScannerImage = faScannerImage;
var faScannerKeyboard = {
  prefix: 'fad',
  iconName: 'scanner-keyboard',
  icon: [576, 512, [], "f489", ["M400 96H16a16 16 0 0 0-16 16v137.4a16 16 0 0 0 4.7 11.3L32 288v176a48 48 0 0 0 48 48h256a48 48 0 0 0 48-48V288l27.3-27.3a16 16 0 0 0 4.7-11.3V112a16 16 0 0 0-16-16zM192 440a8 8 0 0 1-8 8h-80a8 8 0 0 1-8-8v-48a8 8 0 0 1 8-8h80a8 8 0 0 1 8 8zm0-96a8 8 0 0 1-8 8h-80a8 8 0 0 1-8-8v-48a8 8 0 0 1 8-8h80a8 8 0 0 1 8 8zm128 96a8 8 0 0 1-8 8h-80a8 8 0 0 1-8-8v-48a8 8 0 0 1 8-8h80a8 8 0 0 1 8 8zm0-96a8 8 0 0 1-8 8h-80a8 8 0 0 1-8-8v-48a8 8 0 0 1 8-8h80a8 8 0 0 1 8 8zm32-128a8 8 0 0 1-8 8H72a8 8 0 0 1-8-8v-48a8 8 0 0 1 8-8h272a8 8 0 0 1 8 8z", "M568 0h-48a8 8 0 0 0-8 8v272a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8V8a8 8 0 0 0-8-8zM320 8a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v56h32zm-64 0a8 8 0 0 0-8-8h-48a8 8 0 0 0-8 8v56h64zm152-8h-48a8 8 0 0 0-8 8v56h64V8a8 8 0 0 0-8-8zm64 0h-16a8 8 0 0 0-8 8v272a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8V8a8 8 0 0 0-8-8zM344 160H72a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8h272a8 8 0 0 0 8-8v-48a8 8 0 0 0-8-8z"]]
};
exports.faScannerKeyboard = faScannerKeyboard;
var faScannerTouchscreen = {
  prefix: 'fad',
  iconName: 'scanner-touchscreen',
  icon: [576, 512, [], "f48a", ["M400 96H16a16 16 0 0 0-16 16v137.4a16 16 0 0 0 4.7 11.3L32 288v176a48 48 0 0 0 48 48h256a48 48 0 0 0 48-48V288l27.3-27.3a16 16 0 0 0 4.7-11.3V112a16 16 0 0 0-16-16zm-80 336a16 16 0 0 1-16 16H112a16 16 0 0 1-16-16V176a16 16 0 0 1 16-16h192a16 16 0 0 1 16 16z", "M312 0h-16a8 8 0 0 0-8 8v56h32V8a8 8 0 0 0-8-8zm-56 8a8 8 0 0 0-8-8h-48a8 8 0 0 0-8 8v56h64zm152-8h-48a8 8 0 0 0-8 8v56h64V8a8 8 0 0 0-8-8zm160 0h-48a8 8 0 0 0-8 8v272a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8V8a8 8 0 0 0-8-8zm-96 0h-16a8 8 0 0 0-8 8v272a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8V8a8 8 0 0 0-8-8zM304 160H112a16 16 0 0 0-16 16v256a16 16 0 0 0 16 16h192a16 16 0 0 0 16-16V176a16 16 0 0 0-16-16z"]]
};
exports.faScannerTouchscreen = faScannerTouchscreen;
var faScarecrow = {
  prefix: 'fad',
  iconName: 'scarecrow',
  icon: [448, 512, [], "f70d", ["M216.84 414.2L192 401v95a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-95l-24.87 13.2a15.08 15.08 0 0 1-14.29 0zM224 0a96 96 0 1 0 96 96 96 96 0 0 0-96-96zm-32 96a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm64 16a16 16 0 1 1 16-16 16 16 0 0 1-16 16z", "M445.75 186.39l-.08-.09-26.39-26.3 18.29-18.3a8 8 0 0 0-5.7-13.7H314.48a96 96 0 0 1-181 0H16a8 8 0 0 0-5.7 13.7L28.72 160 2.34 186.3a8 8 0 0 0 0 11.3L28.72 224l-18.3 18.3a8 8 0 0 0 5.7 13.7h106.09l-26 141.3a16 16 0 0 0 22.9 16.9l32.71-24.2a16 16 0 0 1 17.08-1.3l47.91 25.5a15.08 15.08 0 0 0 14.29 0l47.9-25.5a16 16 0 0 1 17.1 1.3l32.7 24.2a15.93 15.93 0 0 0 22.89-16.9L325.88 256h106.06a8.05 8.05 0 0 0 5.69-13.7L419.28 224l26.29-26.3a8 8 0 0 0 .18-11.31zM256 112a16 16 0 1 0-16-16 16 16 0 0 0 16 16zm-64-16a16 16 0 1 0-16-16 16 16 0 0 0 16 16z"]]
};
exports.faScarecrow = faScarecrow;
var faScarf = {
  prefix: 'fad',
  iconName: 'scarf',
  icon: [512, 512, [], "f7c1", ["M509.72 395.71l-117.39-117.1-22.61 22.6L487 418.31a8 8 0 0 0 11.3 0L509.62 407a7.92 7.92 0 0 0 .1-11.29zm-207.89-26.8l-22.61 22.6 117.4 117.2a8 8 0 0 0 11.3 0l11.3-11.3a8 8 0 0 0 0-11.3zM166 323.71L47.62 441.91a8 8 0 0 0 0 11.3l11.3 11.3a8 8 0 0 0 11.3 0l118.4-118.2zm-45.31-45.1L2.33 396.71a8 8 0 0 0 0 11.3l11.29 11.3a8 8 0 0 0 11.3 0l118.41-118.2zM347 323.71l-22.61 22.6 117.41 117.2a8 8 0 0 0 11.29 0l11.3-11.3a8 8 0 0 0 0-11.3zM92.92 487.11a8 8 0 0 0 0 11.3l11.3 11.3a8 8 0 0 0 11.31 0l118.39-118.2-22.59-22.6z", "M279.12 120.51l19.5-19.4a185.4 185.4 0 0 0-84.4-.2L369.62 256 256.53 369.11l-135.1-140.7c-48.6-53.7-13-113.3-11.5-115.8l43.6-73.1a56.71 56.71 0 0 1 16.8-18c44-29.7 130.7-27.6 171.3-.1a56.71 56.71 0 0 1 16.8 18l43.7 73.4c7.2 12 33.4 65.6-13.2 117.3z"]]
};
exports.faScarf = faScarf;
var faSchool = {
  prefix: 'fad',
  iconName: 'school',
  icon: [640, 512, [], "f549", ["M360 176h-24v-40a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v64a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8zM0 224v272a16 16 0 0 0 16 16h80V192H32a32 32 0 0 0-32 32zm608-32h-64v320h80a16 16 0 0 0 16-16V224a32 32 0 0 0-32-32z", "M497.75 112l-160-106.63a32 32 0 0 0-35.5 0L142.25 112A32 32 0 0 0 128 138.66V512h128V368a16 16 0 0 1 16-16h96a16 16 0 0 1 16 16v144h128V138.67A32 32 0 0 0 497.75 112zM320 256a80 80 0 1 1 80-80 80 80 0 0 1-80 80z"]]
};
exports.faSchool = faSchool;
var faScrewdriver = {
  prefix: 'fad',
  iconName: 'screwdriver',
  icon: [512, 512, [], "f54a", ["M448 0l64 64-96 128h-62.07l-83 83A98.45 98.45 0 0 0 237 241.09l83-83V96z", "M63.61 501.08l-52.7-52.7a37.28 37.28 0 0 1 0-52.71L128 278.59A74.54 74.54 0 0 1 233.4 384L116.32 501.08a37.26 37.26 0 0 1-52.71 0z"]]
};
exports.faScrewdriver = faScrewdriver;
var faScroll = {
  prefix: 'fad',
  iconName: 'scroll',
  icon: [640, 512, [], "f70e", ["M544 96v288H304a16 16 0 0 0-16 16v32a80 80 0 0 1-160 0V65A65 65 0 0 0 63 0h385a96.1 96.1 0 0 1 96 96z", "M64 0A64 64 0 0 0 0 64v48a16 16 0 0 0 16 16h112V65A65 65 0 0 0 64 0zm128 512h16c-2.59 0-5.14-.13-7.66-.37-2.75.24-5.53.37-8.34.37zm432-128H304a16 16 0 0 0-16 16v32a80 80 0 0 1-80 80h320a112 112 0 0 0 112-112.06A16 16 0 0 0 624 384z"]]
};
exports.faScroll = faScroll;
var faScrollOld = {
  prefix: 'fad',
  iconName: 'scroll-old',
  icon: [640, 512, [], "f70f", ["M539.31 228.69L512 256l27.31 27.31a16 16 0 0 1 4.69 11.32V384h-89.37a16 16 0 0 0-11.32 4.69L416 416l-27.31-27.31a16 16 0 0 0-11.32-4.69H304a16 16 0 0 0-16 16v32a80 80 0 0 1-80.61 80c-44.11-.33-79.39-36.89-79.39-81V262.63a16 16 0 0 1 4.69-11.32L160 224l-27.31-27.31a16 16 0 0 1-4.69-11.32V65A65 65 0 0 0 63 0h385a96.1 96.1 0 0 1 95.68 88.2 16.15 16.15 0 0 1-4.63 12.8L512 128l27.31 27.31a16 16 0 0 1 4.69 11.32v50.74a16 16 0 0 1-4.69 11.32z", "M192 512h16c-2.59 0-5.14-.13-7.66-.37-2.75.24-5.53.37-8.34.37zM64 0A64 64 0 0 0 0 64v48a16 16 0 0 0 16 16h112V65A65 65 0 0 0 64 0zm560 384H454.63a16 16 0 0 0-11.32 4.69L416 416l-27.31-27.31a16 16 0 0 0-11.32-4.69H304a16 16 0 0 0-16 16v32a80 80 0 0 1-80 80h320a112 112 0 0 0 112-112.06A16 16 0 0 0 624 384z"]]
};
exports.faScrollOld = faScrollOld;
var faScrubber = {
  prefix: 'fad',
  iconName: 'scrubber',
  icon: [496, 512, [], "f2f8", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8Zm0,312a64,64,0,1,1,64-64A64,64,0,0,1,248,320Z", "M248,320a64,64,0,1,1,64-64A64,64,0,0,1,248,320Z"]]
};
exports.faScrubber = faScrubber;
var faScythe = {
  prefix: 'fad',
  iconName: 'scythe',
  icon: [640, 512, [], "f710", ["M549.87 0L510 192H0C64 64 192 0 338.87 0z", "M639.44 38l-96.27 461a16 16 0 0 1-15.72 13H496a16 16 0 0 1-16-16 16.16 16.16 0 0 1 .27-2.94l29.26-141H400a16 16 0 0 1-16-16V304a16 16 0 0 1 16-16h122.81L582.55 0H608a32 32 0 0 1 31.44 38z"]]
};
exports.faScythe = faScythe;
var faSdCard = {
  prefix: 'fad',
  iconName: 'sd-card',
  icon: [384, 512, [], "f7c2", ["M112 160h48V64h-48zm80 0h48V64h-48zm80-96v96h48V64z", "M320 0H128L0 128v320a64.06 64.06 0 0 0 64 64h256a64.06 64.06 0 0 0 64-64V64a64.06 64.06 0 0 0-64-64zM160 160h-48V64h48zm80 0h-48V64h48zm80 0h-48V64h48z"]]
};
exports.faSdCard = faSdCard;
var faSearch = {
  prefix: 'fad',
  iconName: 'search',
  icon: [512, 512, [], "f002", ["M208 80a128 128 0 1 1-90.51 37.49A127.15 127.15 0 0 1 208 80m0-80C93.12 0 0 93.12 0 208s93.12 208 208 208 208-93.12 208-208S322.88 0 208 0z", "M504.9 476.7L476.6 505a23.9 23.9 0 0 1-33.9 0L343 405.3a24 24 0 0 1-7-17V372l36-36h16.3a24 24 0 0 1 17 7l99.7 99.7a24.11 24.11 0 0 1-.1 34z"]]
};
exports.faSearch = faSearch;
var faSearchDollar = {
  prefix: 'fad',
  iconName: 'search-dollar',
  icon: [512, 512, [], "f688", ["M208 80a128 128 0 1 1-90.51 37.49A127.15 127.15 0 0 1 208 80m0-80C93.12 0 0 93.12 0 208s93.12 208 208 208 208-93.12 208-208S322.88 0 208 0z", "M235.13 199.42l-45-13.5c-5.16-1.55-8.77-6.78-8.77-12.73 0-7.27 5.3-13.19 11.8-13.19h28.11a24 24 0 0 1 12.82 3.72 8.21 8.21 0 0 0 10.13-.73L256 151.78a8 8 0 0 0-.57-12.14A57.26 57.26 0 0 0 224 128.29V112a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v16.12c-23.63.63-42.68 20.55-42.68 45.07 0 20 13 37.81 31.58 43.39l45 13.5c5.16 1.55 8.77 6.78 8.77 12.73 0 7.27-5.3 13.19-11.8 13.19H194.8a24 24 0 0 1-12.8-3.72 8.21 8.21 0 0 0-10.13.73l-11.77 11.21a8 8 0 0 0 .57 12.14A57.26 57.26 0 0 0 192 287.71V304a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-16.12c23.63-.63 42.68-20.54 42.68-45.07.04-19.97-12.95-37.81-31.55-43.39zM505 442.7L405.3 343a24 24 0 0 0-17-7H372l-36 36v16.3a24 24 0 0 0 7 17l99.7 99.7a23.9 23.9 0 0 0 33.9 0l28.3-28.3a24.11 24.11 0 0 0 .1-34z"]]
};
exports.faSearchDollar = faSearchDollar;
var faSearchLocation = {
  prefix: 'fad',
  iconName: 'search-location',
  icon: [512, 512, [], "f689", ["M208 80a128 128 0 1 1-90.51 37.49A127.15 127.15 0 0 1 208 80m0-80C93.12 0 0 93.12 0 208s93.12 208 208 208 208-93.12 208-208S322.88 0 208 0z", "M208 112a73.83 73.83 0 0 0-73.84 73.83c0 33 48.26 93 66.75 114.86a9.22 9.22 0 0 0 13 1.16 8.55 8.55 0 0 0 1.17-1.16c18.49-21.81 66.75-81.89 66.75-114.86A73.83 73.83 0 0 0 208 112zm0 96a24 24 0 1 1 24-24 24 24 0 0 1-24 24zm297 234.7L405.3 343a24 24 0 0 0-17-7H372l-36 36v16.3a24 24 0 0 0 7 17l99.7 99.7a23.9 23.9 0 0 0 33.9 0l28.3-28.3a24.11 24.11 0 0 0 .1-34z"]]
};
exports.faSearchLocation = faSearchLocation;
var faSearchMinus = {
  prefix: 'fad',
  iconName: 'search-minus',
  icon: [512, 512, [], "f010", ["M208 80a128 128 0 1 1-90.51 37.49A127.15 127.15 0 0 1 208 80m0-80C93.12 0 0 93.12 0 208s93.12 208 208 208 208-93.12 208-208S322.88 0 208 0z", "M292 180H124a12 12 0 0 0-12 12v32a12 12 0 0 0 12 12h168a12 12 0 0 0 12-12v-32a12 12 0 0 0-12-12zm213 262.7L405.3 343a24 24 0 0 0-17-7H372l-36 36v16.3a24 24 0 0 0 7 17l99.7 99.7a23.9 23.9 0 0 0 33.9 0l28.3-28.3a24.11 24.11 0 0 0 .1-34z"]]
};
exports.faSearchMinus = faSearchMinus;
var faSearchPlus = {
  prefix: 'fad',
  iconName: 'search-plus',
  icon: [512, 512, [], "f00e", ["M208 80a128 128 0 1 1-90.51 37.49A127.15 127.15 0 0 1 208 80m0-80C93.12 0 0 93.12 0 208s93.12 208 208 208 208-93.12 208-208S322.88 0 208 0z", "M292 180h-56v-56a12 12 0 0 0-12-12h-32a12 12 0 0 0-12 12v56h-56a12 12 0 0 0-12 12v32a12 12 0 0 0 12 12h56v56a12 12 0 0 0 12 12h32a12 12 0 0 0 12-12v-56h56a12 12 0 0 0 12-12v-32a12 12 0 0 0-12-12zm213 262.7L405.3 343a24 24 0 0 0-17-7H372l-36 36v16.3a24 24 0 0 0 7 17l99.7 99.7a23.9 23.9 0 0 0 33.9 0l28.3-28.3a24.11 24.11 0 0 0 .1-34z"]]
};
exports.faSearchPlus = faSearchPlus;
var faSeedling = {
  prefix: 'fad',
  iconName: 'seedling',
  icon: [512, 512, [], "f4d8", ["M512 32c0 115.9-88 211.1-200.7 222.8a256.38 256.38 0 0 0-59-107.6C290.6 78.5 363.8 32 448 32z", "M288 320v144a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V320C100.3 320 0 219.7 0 96h64c123.7 0 224 100.3 224 224z"]]
};
exports.faSeedling = faSeedling;
var faSendBack = {
  prefix: 'fad',
  iconName: 'send-back',
  icon: [640, 512, [], "f87e", ["M608 256H416a32 32 0 0 0-32 32v192a32 32 0 0 0 32 32h192a32 32 0 0 0 32-32V288a32 32 0 0 0-32-32zm-32 192H448V320h128zM224 0H32A32 32 0 0 0 0 32v192a32 32 0 0 0 32 32h192a32 32 0 0 0 32-32V32a32 32 0 0 0-32-32zm-32 192H64V64h128z", "M384 416H208a48 48 0 0 1-48-48V256h64a32 32 0 0 0 32-32V96h176a48 48 0 0 1 48 48v112h-64a32 32 0 0 0-32 32z"]]
};
exports.faSendBack = faSendBack;
var faSendBackward = {
  prefix: 'fad',
  iconName: 'send-backward',
  icon: [514, 512, [], "f87f", ["M464,160H208a48,48,0,0,0-48,48V464a48,48,0,0,0,48,48H464a48,48,0,0,0,48-48h0V208A48,48,0,0,0,464,160ZM448,448H224V224H448Z", "M160,352H48A48,48,0,0,1,0,304V48A48,48,0,0,1,48,0H304a48,48,0,0,1,48,48V160H208a48,48,0,0,0-48,48Z"]]
};
exports.faSendBackward = faSendBackward;
var faServer = {
  prefix: 'fad',
  iconName: 'server',
  icon: [512, 512, [], "f233", ["M432 120a24 24 0 1 0-24-24 24 24 0 0 0 24 24zm0 272a24 24 0 1 0 24 24 24 24 0 0 0-24-24zm48-200H32a32 32 0 0 0-32 32v64a32 32 0 0 0 32 32h448a32 32 0 0 0 32-32v-64a32 32 0 0 0-32-32zm-112 88a24 24 0 1 1 24-24 24 24 0 0 1-24 24zm64 0a24 24 0 1 1 24-24 24 24 0 0 1-24 24z", "M456 256a24 24 0 1 0-24 24 24 24 0 0 0 24-24zm24-224H32A32 32 0 0 0 0 64v64a32 32 0 0 0 32 32h448a32 32 0 0 0 32-32V64a32 32 0 0 0-32-32zm-112 88a24 24 0 1 1 24-24 24 24 0 0 1-24 24zm64 0a24 24 0 1 1 24-24 24 24 0 0 1-24 24zm48 232H32a32 32 0 0 0-32 32v64a32 32 0 0 0 32 32h448a32 32 0 0 0 32-32v-64a32 32 0 0 0-32-32zm-112 88a24 24 0 1 1 24-24 24 24 0 0 1-24 24zm64 0a24 24 0 1 1 24-24 24 24 0 0 1-24 24z"]]
};
exports.faServer = faServer;
var faShapes = {
  prefix: 'fad',
  iconName: 'shapes',
  icon: [512, 512, [], "f61f", ["M128 256a128 128 0 1 0 128 128 128 128 0 0 0-128-128zm379.51-80l-95-160c-12.67-21.33-44.35-21.33-57 0l-95 160c-12.67 21.33 3.17 48 28.51 48H479c25.34 0 41.18-26.67 28.51-48z", "M512 320v160a32 32 0 0 1-32 32H320a32 32 0 0 1-32-32V320a32 32 0 0 1 32-32h160a32 32 0 0 1 32 32z"]]
};
exports.faShapes = faShapes;
var faShare = {
  prefix: 'fad',
  iconName: 'share',
  icon: [512, 512, [], "f064", ["M288 136.08v136c-155.08 2.24-221.93 40.73-176.59 185.75 5 16.09-14.42 28.56-28.08 18.63C39.58 444.64 0 383.78 0 322.34c0-152.23 127.37-184.42 288-186.26z", "M506.16 223.7a24 24 0 0 1-2.47 2.47l-176 152C312.3 391.46 288 380.71 288 360V56c0-20.66 24.28-31.46 39.69-18.16l176 152a24 24 0 0 1 2.47 33.86z"]]
};
exports.faShare = faShare;
var faShareAll = {
  prefix: 'fad',
  iconName: 'share-all',
  icon: [576, 512, [], "f367", ["M567.69 226.16l-176 152C376.3 391.44 352 380.69 352 360v-15.83l108.61-93.79a56 56 0 0 0 0-84.76L352 71.83V56c0-20.66 24.28-31.46 39.69-18.16l176 152a24 24 0 0 1 0 36.32z", "M439.69 226.16l-176 152C248.3 391.44 224 380.69 224 360v-84.19c-108.67 12.53-151.1 58.85-112.59 182 5 16.09-14.42 28.56-28.08 18.63C39.58 444.63 0 383.77 0 322.33 0 191 94.82 149 224 138.78V56c0-20.66 24.28-31.46 39.69-18.16l176 152a24 24 0 0 1 0 36.32z"]]
};
exports.faShareAll = faShareAll;
var faShareAlt = {
  prefix: 'fad',
  iconName: 'share-alt',
  icon: [448, 512, [], "f1e0", ["M155.79 180.9l102.49-64.06a95.93 95.93 0 0 0 33.93 54.26l-102.49 64.06a95.93 95.93 0 0 0-33.93-54.26zm136.42 160l-102.49-64.06a95.93 95.93 0 0 1-33.93 54.26l102.49 64.06a95.93 95.93 0 0 1 33.93-54.26z", "M96 160a96 96 0 1 0 96 96 96 96 0 0 0-96-96zm256 32a96 96 0 1 0-96-96 96 96 0 0 0 96 96zm0 128a96 96 0 1 0 96 96 96 96 0 0 0-96-96z"]]
};
exports.faShareAlt = faShareAlt;
var faShareAltSquare = {
  prefix: 'fad',
  iconName: 'share-alt-square',
  icon: [448, 512, [], "f1e1", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-96 376a56 56 0 0 1-54.26-69.9l-68-40.77a56 56 0 1 1 0-82.66l68-40.77a56 56 0 1 1 16.48 27.43l-68 40.77a56.39 56.39 0 0 1 0 27.8l68 40.77A56 56 0 1 1 304 408z", "M360 352a56 56 0 1 1-110.26-13.9l-68-40.77a56 56 0 1 1 0-82.66l68-40.77a56 56 0 1 1 16.48 27.43l-68 40.77a56.39 56.39 0 0 1 0 27.8l68 40.77A56 56 0 0 1 360 352z"]]
};
exports.faShareAltSquare = faShareAltSquare;
var faShareSquare = {
  prefix: 'fad',
  iconName: 'share-square',
  icon: [576, 512, [], "f14d", ["M0 464V112a48 48 0 0 1 48-48h121c12.55 0 16.68 16.83 5.55 22.63a195.1 195.1 0 0 0-51 37.68 12 12 0 0 1-8.64 3.69H64v320h320v-68.87a12 12 0 0 1 13.8-11.86 71.73 71.73 0 0 0 34.2-3.38 12 12 0 0 1 16 11.3V464a48 48 0 0 1-48 48H48a48 48 0 0 1-48-48z", "M424.48 6.56l144 136a24 24 0 0 1 0 34.9l-144 136C409.3 327.77 384 317.14 384 296v-72c-144.58 1-205.57 35.12-164.78 171.36 4.49 15-12.84 26.56-25 17.33-39-29.6-74.22-86.22-74.22-143.37C120 125.4 237.6 96.84 384 96V24c0-21.16 25.32-31.76 40.48-17.44z"]]
};
exports.faShareSquare = faShareSquare;
var faSheep = {
  prefix: 'fad',
  iconName: 'sheep',
  icon: [640, 512, [], "f711", ["M320.09 96a50.51 50.51 0 0 0-31.8 11.46 52 52 0 0 0-64.26 0 49.43 49.43 0 0 0-31-10.56 56 56 0 0 0-34.25 11.68 51.2 51.2 0 0 0-30.49-10.21C106 98.38 85.94 113 78.09 134.5q-1.74-.12-3.48-.12c-17 0-33.18 8.71-43.27 23.28a58.59 58.59 0 0 0-7.48 51.28C8.86 219.31 0 236.56 0 255.8c0 18.94 8.92 36.5 23.53 46.71A58.55 58.55 0 0 0 31 353.79c10.1 14.57 26.24 23.27 43.17 23.27 1.11 0 2.23 0 3.34-.11 7.72 22 27.31 36.42 50 36.42a52.9 52.9 0 0 0 30.58-9.86 55.21 55.21 0 0 0 34.18 11.78 50.77 50.77 0 0 0 31.34-10.57 50.43 50.43 0 0 0 31.86 11.17 51.74 51.74 0 0 0 32.21-11.2 51.46 51.46 0 0 0 65.62-1 51.08 51.08 0 0 0 30.4 10.18c22.34 0 42.39-14.66 50.23-36.18 1.11.07 2.22.11 3.33.11a53.12 53.12 0 0 0 43.45-23.3 58.45 58.45 0 0 0 7.44-51.21c15-10.38 23.85-27.64 23.86-46.88 0-18.94-8.92-36.5-23.53-46.72a58.58 58.58 0 0 0-7.48-51.35c-10.09-14.55-26.2-23.24-43.09-23.24-1.13 0-2.27 0-3.4.11-7.7-21.7-27.73-36.51-50.14-36.51a52.51 52.51 0 0 0-30.4 9.9A53.08 53.08 0 0 0 320.09 96z", "M433.92 377.66c-7.84 21.52-27.89 36.18-50.23 36.18a51.08 51.08 0 0 1-30.4-10.18c-.42.36-.86.7-1.29 1V496a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16V376.59a50.8 50.8 0 0 1-10.75 1.18c-1.11 0-2.25-.04-3.33-.11zm-240.46 41.2l1.37-3.64c-.86 0-1.71.07-2.57.07a55.21 55.21 0 0 1-34.18-11.78 52.9 52.9 0 0 1-30.58 9.86 51.69 51.69 0 0 1-30.12-9.6 64 64 0 0 0 .54 28.7l16.85 67.41A16 16 0 0 0 130.29 512h66a16 16 0 0 0 15.52-19.88zM622.25 106L576 83.22V64a32 32 0 0 0-32-32h-64a32 32 0 0 0-64 0v77.6a55.82 55.82 0 0 1 18.53 25.61c1.13-.07 2.27-.11 3.4-.11 16.89 0 33 8.69 43.09 23.24A58.11 58.11 0 0 1 491.31 192h108.35A25.71 25.71 0 0 0 622 179.06c7.59-13.26 18-33.45 18-44.59A31.8 31.8 0 0 0 622.25 106zM512 112a16 16 0 1 1 16-16 16 16 0 0 1-16 16z"]]
};
exports.faSheep = faSheep;
var faShekelSign = {
  prefix: 'fad',
  iconName: 'shekel-sign',
  icon: [448, 512, [], "f20b", ["M200 176v224h112a56 56 0 0 0 56-56V48a16 16 0 0 1 16-16h48a16 16 0 0 1 16 16v296a136 136 0 0 1-136 136H144a24 24 0 0 1-24-24V176a16 16 0 0 1 16-16h48a16 16 0 0 1 16 16z", "M328 168v168a16 16 0 0 1-16 16h-48a16 16 0 0 1-16-16V168a56 56 0 0 0-56-56H80v352a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16V56a24 24 0 0 1 24-24h168a136 136 0 0 1 136 136z"]]
};
exports.faShekelSign = faShekelSign;
var faShield = {
  prefix: 'fad',
  iconName: 'shield',
  icon: [512, 512, [], "f132", ["M256 224v288a48.12 48.12 0 0 0 18.41-3.68c72.34-30.14 180.16-123 212.09-284.29zM237.59 3.67l-192 80A47.92 47.92 0 0 0 16 128a485.36 485.36 0 0 0 9.63 96H256V0a57.58 57.58 0 0 0-18.41 3.67z", "M237.5 508.32A48 48 0 0 0 256 512V224H25.63C55.11 370.52 148.77 471.34 237.5 508.32zm229-424.64l-192-80A57.34 57.34 0 0 0 256.06 0H256v224h230.5a491.56 491.56 0 0 0 9.5-96 48 48 0 0 0-29.5-44.32z"]]
};
exports.faShield = faShield;
var faShieldAlt = {
  prefix: 'fad',
  iconName: 'shield-alt',
  icon: [512, 512, [], "f3ed", ["M496 128c0 221.29-135.9 344.6-221.6 380.32A48.29 48.29 0 0 1 256 512V0a48.18 48.18 0 0 1 18.5 3.67l192 80A48 48 0 0 1 496 128z", "M256 0v512a48.18 48.18 0 0 1-18.5-3.67C130.5 463.72 16 326.52 16 128a48 48 0 0 1 29.6-44.32l192-80A48.29 48.29 0 0 1 256 0z"]]
};
exports.faShieldAlt = faShieldAlt;
var faShieldCheck = {
  prefix: 'fad',
  iconName: 'shield-check',
  icon: [512, 512, [], "f2f7", ["M466.5 83.67l-192-80a48.15 48.15 0 0 0-36.9 0l-192 80A48 48 0 0 0 16 128c0 198.5 114.5 335.69 221.5 380.29a48.15 48.15 0 0 0 36.9 0C360.1 472.58 496 349.27 496 128a48 48 0 0 0-29.5-44.33zm-47.2 114.21l-184 184a16.06 16.06 0 0 1-22.6 0l-104-104a16.07 16.07 0 0 1 0-22.61l22.6-22.6a16.07 16.07 0 0 1 22.6 0l70.1 70.1 150.1-150.1a16.07 16.07 0 0 1 22.6 0l22.6 22.6a15.89 15.89 0 0 1 0 22.61z", "M419.3 197.88l-184 184a16.06 16.06 0 0 1-22.6 0l-104-104a16.07 16.07 0 0 1 0-22.61l22.6-22.6a16.07 16.07 0 0 1 22.6 0l70.1 70.1 150.1-150.1a16.07 16.07 0 0 1 22.6 0l22.6 22.6a15.89 15.89 0 0 1 0 22.61z"]]
};
exports.faShieldCheck = faShieldCheck;
var faShieldCross = {
  prefix: 'fad',
  iconName: 'shield-cross',
  icon: [448, 512, [], "f712", ["M192 501.06V224H8.76C34.6 361.89 113.71 459.21 192 501.06zM0 128c0 10.86.34 21.52 1 32h191V10.28L27.57 83.69C10.88 91.14 0 108.62 0 128zm420.43-44.31L256 10.28V160h191.08q.9-15.65.92-32c0-19.38-10.88-36.86-27.57-44.31zM256 501c66.65-36.25 155.84-126.92 183.48-277H256z", "M447.08 160a517.11 517.11 0 0 1-7.6 64H256v277c-5.06 2.75-10 5.2-14.77 7.33a42.07 42.07 0 0 1-34.46 0c-4.91-2.19-9.84-4.62-14.77-7.25V224H8.76A509.43 509.43 0 0 1 1 160h191V10.28l14.77-6.59a42.07 42.07 0 0 1 34.46 0L256 10.28V160z"]]
};
exports.faShieldCross = faShieldCross;
var faShip = {
  prefix: 'fad',
  iconName: 'ship',
  icon: [640, 512, [], "f21a", ["M594.3,447.89c-21.53-2.4-42.13-10.51-57.93-22.92a38.77,38.77,0,0,0-48.22,0c-37.91,30.43-107.24,30.43-145.75-1.5-13.5-11.21-33-9.11-46.71,1.8-38,30.13-106.93,30-145.25-1.7-13.5-11.21-33.31-8.91-47.12,2-15.5,12.21-36,20.12-57.72,22.42-7.9.8-13.6,7.81-13.6,15.72v32.23c0,9.11,7.6,16.81,16.7,16,28.81-2.5,56.12-11.41,79.44-25.92,56.52,34.63,137,34.13,192,0,56.51,34.63,137,34.13,192,0a184.89,184.89,0,0,0,79.14,25.82c9.1.8,16.7-6.9,16.7-16V464.21c.16-8-5.64-15.42-13.74-16.32ZM192,128H448v87.53l64,20.58V96a32,32,0,0,0-32-32H416V24A24,24,0,0,0,392,0H248a24,24,0,0,0-24,24V64H160a32,32,0,0,0-32,32V236.11l64-20.58Z", "M574.56,289.82a32.13,32.13,0,0,1-7.84,12.83l-92.5,89.25A83.19,83.19,0,0,1,417,415.61h-.5c-21.23,0-40.79-6.12-53.64-16.77A64.17,64.17,0,0,0,321.29,384a73.55,73.55,0,0,0-45.5,16.19c-12.38,9.8-31.12,15.42-51.44,15.42h-.51a85,85,0,0,1-58.48-24.22l-92-88.74a32,32,0,0,1,12.85-53.09l224-72a31.94,31.94,0,0,1,19.58,0l224,72a32,32,0,0,1,20.7,40.25h0Z"]]
};
exports.faShip = faShip;
var faShippingFast = {
  prefix: 'fad',
  iconName: 'shipping-fast',
  icon: [640, 512, [], "f48b", ["M248 160H40a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h208a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8zm-24 88v-16a8 8 0 0 0-8-8H8a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h208a8 8 0 0 0 8-8zm-48 104a80 80 0 1 0 80 80 80 80 0 0 0-80-80zm288 0a80 80 0 1 0 80 80 80 80 0 0 0-80-80zM280 96H8a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h272a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8z", "M624 352h-16V243.9a48 48 0 0 0-14.1-33.9L494 110.1A48 48 0 0 0 460.1 96H416V48a48 48 0 0 0-48-48H112a48 48 0 0 0-48 48v48h216a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H64v32h184a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H64v32h152a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H64v112a47.74 47.74 0 0 0 7 25 112 112 0 0 1 215.86 23h66.28a112 112 0 0 1 221.72 0H624a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-64-96H416V144h44.1l99.9 99.9z"]]
};
exports.faShippingFast = faShippingFast;
var faShippingTimed = {
  prefix: 'fad',
  iconName: 'shipping-timed',
  icon: [640, 512, [], "f48c", ["M464 352a80 80 0 1 0 80 80 80 80 0 0 0-80-80zm-288 0a80 80 0 1 0 80 80 80 80 0 0 0-80-80zm72-208h-24V88a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v80a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8z", "M624 352h-16V243.9a48 48 0 0 0-14.1-33.9L494 110.1A48 48 0 0 0 460.1 96H416V48a48 48 0 0 0-48-48H48A48 48 0 0 0 0 48v320a48 48 0 0 0 48 48h18.16C74 361.93 119.78 320 176 320s102.54 41.86 110.38 96h67.24c7.85-54.14 54.1-96 110.38-96s102 41.93 109.84 96H624a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-416-80a112 112 0 1 1 112-112 111.94 111.94 0 0 1-112 112zm352-16H416V144h44.1l99.9 99.9z"]]
};
exports.faShippingTimed = faShippingTimed;
var faShishKebab = {
  prefix: 'fad',
  iconName: 'shish-kebab',
  icon: [512, 512, [], "f821", ["M511.21 84.07c-3.78-29.71-21.06-55.68-47.42-71.21a95.15 95.15 0 0 0-97.93 1.43C323.2 41 307.71 94 330 138.88c1.44 2.93 2.28 7.16 0 9.49l-24.47 24.45 33.93 33.93 24.48-24.46c16.72-16.73 20.28-42.14 9.09-64.72-9.62-19.43-6-48.25 19.61-63.36a45.55 45.55 0 0 1 45.92-.53c14.22 8 23.15 21 25.13 36.45a47.82 47.82 0 0 1-6 30.09c-3.71 6.39-3.31 14.32 1.91 19.55l12.29 12.29c6.72 6.72 18.17 6.09 23.54-1.75a95.27 95.27 0 0 0 15.78-66.24zM4.55 473.52a15.5 15.5 0 0 0 0 21.91l12 12a15.49 15.49 0 0 0 21.91 0l61.78-61.73-33.92-33.91z", "M126.55 255.59a30.61 30.61 0 0 0-43.28 0L41 297.89a30.59 30.59 0 0 0 0 43.27L170.82 471a30.61 30.61 0 0 0 43.28 0l42.3-42.3a30.61 30.61 0 0 0 0-43.28zm238.05 21.65L234.77 147.38a30.62 30.62 0 0 0-43.29 0l-42.3 42.3a30.62 30.62 0 0 0 0 43.28L279 362.82a30.61 30.61 0 0 0 43.28 0l42.3-42.3a30.61 30.61 0 0 0 .02-43.28z"]]
};
exports.faShishKebab = faShishKebab;
var faShoePrints = {
  prefix: 'fad',
  iconName: 'shoe-prints',
  icon: [640, 512, [], "f54b", ["M0 416a64 64 0 0 0 64 64h32V352H64a64 64 0 0 0-64 64zm337.46-128c-34.91 0-76.16 13.12-104.73 32-24.79 16.38-44.52 32-104.73 32v128l57.53 16c26.21 7.28 53 13.12 80.31 15 32.69 2.31 65.6.67 97.58-6.2C472.9 481.3 512 429.22 512 384c0-64-84.18-96-174.54-96z", "M128 96a64 64 0 0 0 64 64h32V32h-32a64 64 0 0 0-64 64zM491.42 7.19c-32-6.87-64.89-8.52-97.58-6.2-27.3 1.93-54.1 7.77-80.31 15L256 32v128c60.2 0 79.94 15.62 104.73 32 28.57 18.88 69.82 32 104.73 32C555.82 224 640 192 640 128c0-45.22-39.1-97.3-148.58-120.81z"]]
};
exports.faShoePrints = faShoePrints;
var faShoppingBag = {
  prefix: 'fad',
  iconName: 'shopping-bag',
  icon: [448, 512, [], "f290", ["M.06 160v-.13l96 .06v-32C96.12 57.35 153.57 0 224.15 0s128 57.49 127.92 128.07V160h-64v-32a64 64 0 0 0-128-.08v32h64z", "M.06 159.87l-.16 272a80 80 0 0 0 79.95 80.05l288 .16a80 80 0 0 0 80-80l.16-272zM128 247.94a24 24 0 1 1 24-24 24 24 0 0 1-24 24zm192 .12a24 24 0 1 1 24-24 24 24 0 0 1-24 24z"]]
};
exports.faShoppingBag = faShoppingBag;
var faShoppingBasket = {
  prefix: 'fad',
  iconName: 'shopping-basket',
  icon: [576, 512, [], "f291", ["M242.82 38.12a32 32 0 0 0-44.7 7.06L91.34 192h79.14l79.4-109.18a32 32 0 0 0-7.06-44.7zm135.06 7.06a32 32 0 1 0-51.76 37.64L405.52 192h79.14z", "M552 192H24a24 24 0 0 0-24 24v16a24 24 0 0 0 24 24h8l26.11 182.79A48 48 0 0 0 105.63 480h364.74a48 48 0 0 0 47.52-41.21L544 256h8a24 24 0 0 0 24-24v-16a24 24 0 0 0-24-24zM200 392a24 24 0 0 1-48 0V280a24 24 0 0 1 48 0zm112 0a24 24 0 0 1-48 0V280a24 24 0 0 1 48 0zm112 0a24 24 0 0 1-48 0V280a24 24 0 0 1 48 0z"]]
};
exports.faShoppingBasket = faShoppingBasket;
var faShoppingCart = {
  prefix: 'fad',
  iconName: 'shopping-cart',
  icon: [576, 512, [], "f07a", ["M552 64H159.21l52.36 256h293.15a24 24 0 0 0 23.4-18.68l47.27-208a24 24 0 0 0-18.08-28.72A23.69 23.69 0 0 0 552 64z", "M218.12 352h268.42a24 24 0 0 1 23.4 29.32l-5.52 24.28a56 56 0 1 1-63.6 10.4H231.18a56 56 0 1 1-67.05-8.57L93.88 64H24A24 24 0 0 1 0 40V24A24 24 0 0 1 24 0h102.53A24 24 0 0 1 150 19.19z"]]
};
exports.faShoppingCart = faShoppingCart;
var faShovel = {
  prefix: 'fad',
  iconName: 'shovel',
  icon: [512, 512, [], "f713", ["M500.28 96.39l-84.67-84.68a40 40 0 0 0-56.56 0l-32.67 32.67a98.91 98.91 0 0 0-18.77 114.77L197.35 269.4l45.26 45.23 110.25-110.24a98.88 98.88 0 0 0 114.75-18.76L500.28 153a40 40 0 0 0 0-56.57zm-77.91 44a35.89 35.89 0 0 1-50.75-50.75l15.7-15.7 50.75 50.75z", "M287.87 405.13L220 473c-50 50-181 45.3-203.66 22.65S-11 342 39 292l67.85-67.88a32 32 0 0 1 45.25 0l135.77 135.76a32 32 0 0 1 0 45.25z"]]
};
exports.faShovel = faShovel;
var faShovelSnow = {
  prefix: 'fad',
  iconName: 'shovel-snow',
  icon: [512, 512, [], "f7c3", ["M203.72 244.36a15.88 15.88 0 0 0-22.45-.13l-.12.13-79.9 79.9a16 16 0 0 0 21.46 23.68 14.53 14.53 0 0 0 1.11-1.11l79.9-79.9a16 16 0 0 0 0-22.57zm41.34 63.92l-79.89 79.9a16 16 0 0 0 21.46 23.68c.38-.35.76-.72 1.11-1.11l79.89-79.9a16 16 0 1 0-22.57-22.57zm258.17-236.1L439.81 8.76a30 30 0 0 0-42.34 0L373 33.23a74.58 74.58 0 0 0-20.38 67.65 77.16 77.16 0 0 0 6.4 18.37l-99.18 99.16 33.86 33.87 99.17-99.18a76.19 76.19 0 0 0 18.38 6.39A74.41 74.41 0 0 0 478.76 139l24.47-24.47a30 30 0 0 0 0-42.35zm-58.29 33a26.9 26.9 0 0 1-45.34-13.79 27.18 27.18 0 0 1 7.29-24.28l11.79-11.78 38.05 38.06z", "M342.66 301.9l-132.5-132.5a31.77 31.77 0 0 0-41.9-2.71L12.36 287a31.69 31.69 0 0 0-5.78 44.45 33.3 33.3 0 0 0 2.78 3.15l168 168a31.77 31.77 0 0 0 44.93 0 29.52 29.52 0 0 0 2.67-3l120.4-155.81a31.73 31.73 0 0 0-2.7-41.89zm-220 46a16 16 0 0 1-21.46-23.68l79.9-79.9.12-.13a16 16 0 0 1 22.45 22.7l-79.9 79.9a14.53 14.53 0 0 1-1.06 1.15zm144.92-17.09l-79.89 79.9c-.35.39-.73.76-1.11 1.11a16 16 0 0 1-21.46-23.68l79.89-79.9a16 16 0 1 1 22.57 22.57z"]]
};
exports.faShovelSnow = faShovelSnow;
var faShower = {
  prefix: 'fad',
  iconName: 'shower',
  icon: [512, 512, [], "f2cc", ["M496 192a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm-128 32a16 16 0 1 0-16-16 16 16 0 0 0 16 16zm32 64a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm-32-32a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm32 0a16 16 0 1 0-16-16 16 16 0 0 0 16 16zm-32 64a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm-32-64a16 16 0 1 0-16-16 16 16 0 0 0 16 16zm-32 96a16 16 0 1 0-16-16 16 16 0 0 0 16 16zm160-128a16 16 0 1 0 16 16 16 16 0 0 0-16-16zM304 384a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm128-128a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm-96 96a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm0-64a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm-32 0a16 16 0 1 0-16-16 16 16 0 0 0 16 16zm128-64a16 16 0 1 0-16-16 16 16 0 0 0 16 16z", "M389.66 101.66a24 24 0 0 1 0 33.94L231.6 293.66a24 24 0 0 1-33.94 0l-11.32-11.32a24 24 0 0 1 0-33.94l.11-.11a112.21 112.21 0 0 1-3.39-140.38A77.72 77.72 0 0 0 64 173.76V480H0V173.76C0 95.59 63.59 32 141.76 32a141.22 141.22 0 0 1 95.86 37.42 112.23 112.23 0 0 1 106.67 21l.11-.11a24 24 0 0 1 33.94 0z"]]
};
exports.faShower = faShower;
var faShredder = {
  prefix: 'fad',
  iconName: 'shredder',
  icon: [512, 512, [], "f68a", ["M448 96v128H64V32A32 32 0 0 1 96 0h256v80a16 16 0 0 0 16 16zM232 416h48v80a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16zm-96 0h48v80a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16zm-96 0h48v80a16 16 0 0 1-16 16H56a16 16 0 0 1-16-16zm288 0h48v80a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16zm96 0h48v80a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16z", "M368 96h80v-4.58a17.92 17.92 0 0 0-5.25-12.67l-73.43-73.5A18 18 0 0 0 356.57 0H352v80a16 16 0 0 0 16 16zm80 96v32H64v-32a64 64 0 0 0-64 64v112a16 16 0 0 0 16 16h480a16 16 0 0 0 16-16V256a64 64 0 0 0-64-64zm-16 136a24 24 0 1 1 24-24 24 24 0 0 1-24 24z"]]
};
exports.faShredder = faShredder;
var faShuttleVan = {
  prefix: 'fad',
  iconName: 'shuttle-van',
  icon: [640, 512, [], "f5b6", ["M160 320a80 80 0 1 0 80 80 80 80 0 0 0-80-80zm320 0a80 80 0 1 0 80 80 80 80 0 0 0-80-80z", "M628.88 210.65L494.39 49.27A48 48 0 0 0 457.52 32H32A32 32 0 0 0 0 64v288a32 32 0 0 0 32 32h17.14a112 112 0 0 1 221.72 0h98.28a112 112 0 0 1 221.72 0H608a32 32 0 0 0 32-32V241.38a48.05 48.05 0 0 0-11.12-30.73zM160 192H64V96h96zm160 0h-96V96h96zm64 0V96h66l80 96z"]]
};
exports.faShuttleVan = faShuttleVan;
var faShuttlecock = {
  prefix: 'fad',
  iconName: 'shuttlecock',
  icon: [512, 512, [], "f45b", ["M181.05 481a106.07 106.07 0 0 1-150-150l2.6-2.6 150 150z", "M512 220v54.6a28.15 28.15 0 0 1-16.2 25.4L245.45 416.5l-39.2 39.2-150-150 39.2-39.2L212 16.2A28.09 28.09 0 0 1 237.35 0H292a28.08 28.08 0 0 1 28 28v20c-12.3 0-56.6-1.3-71.1 44.7l-28.8 91.2-45.4 26.4-36.3 78 25.7 25.7 70.8-70.8 44.5-140.8A32 32 0 0 1 309.85 80H404a28 28 0 0 1 28 28v94.1a32.08 32.08 0 0 1-22.4 30.5l-140.8 44.5-70.8 70.8 25.7 25.8 78-36.3 26.4-45.4 91.2-28.8c49-15.5 44.7-65.2 44.7-71.2h20a28.08 28.08 0 0 1 28 28z"]]
};
exports.faShuttlecock = faShuttlecock;
var faSickle = {
  prefix: 'fad',
  iconName: 'sickle',
  icon: [512, 512, [], "f822", ["M203.37 382.05a16 16 0 0 1 0 22.63l-22.62 22.62a16 16 0 0 1-22.62 0l-2.74-2.74-82.76 82.75a16 16 0 0 1-22.62 0L4.69 462.06a16 16 0 0 1 0-22.63l82.74-82.74-2.74-2.75a16 16 0 0 1 0-22.63l22.62-22.62a16 16 0 0 1 22.63 0l73.43 73.36z", "M511.82 155.39c1.65 8.41-9.06 13.38-14.14 6.48a148.08 148.08 0 0 0-47.33-41.42c-44.47-24.9-101-23.24-144 4-70.76 44.73-85.41 131.8-46.88 196L224 355.87l-31.71-30.09c-45.7-45.69-70.15-111.2-56.41-174.34C153.75 69.31 224 0 320 0c128 0 181.17 100.72 191.82 155.39z"]]
};
exports.faSickle = faSickle;
var faSigma = {
  prefix: 'fad',
  iconName: 'sigma',
  icon: [384, 512, [], "f68b", ["M360 352h-48a24 24 0 0 0-24 23.44V480h64a32 32 0 0 0 32-32v-72a24 24 0 0 0-24-24zm-8-320h-64v104.56A24 24 0 0 0 312 160h48a24 24 0 0 0 24-24V64a32 32 0 0 0-32-32z", "M288 136v-8H142.24l109.09 128-109.09 128H288v-8.56V480H52a52 52 0 0 1-42-82.64L132.65 256 10 114.6A52 52 0 0 1 52 32h236v104z"]]
};
exports.faSigma = faSigma;
var faSign = {
  prefix: 'fad',
  iconName: 'sign',
  icon: [512, 512, [], "f4d9", ["M0 80a16 16 0 0 1 16-16h48V16A16 16 0 0 1 80 0h32a16 16 0 0 1 16 16v48h368a16 16 0 0 1 16 16v32a16 16 0 0 1-16 16H128v368a16 16 0 0 1-16 16H80a16 16 0 0 1-16-16V128H16a16 16 0 0 1-16-16z", "M160 384V160h320v224z"]]
};
exports.faSign = faSign;
var faSignIn = {
  prefix: 'fad',
  iconName: 'sign-in',
  icon: [512, 512, [], "f090", ["M512 160v192a96 96 0 0 1-96 96h-84a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h84a32 32 0 0 0 32-32V160a32 32 0 0 0-32-32h-84a12 12 0 0 1-12-12V76a12 12 0 0 1 12-12h84a96 96 0 0 1 96 96z", "M215.6 295.9H24a23.94 23.94 0 0 1-24-24v-32a23.94 23.94 0 0 1 24-24h191.5l-77.6-71.1a23.84 23.84 0 0 1-.7-34.5l21.9-21.9a24.08 24.08 0 0 1 33.9-.1L344.9 239a24 24 0 0 1 0 34.1L193 423.7a24 24 0 0 1-33.9-.1l-21.9-21.9a24 24 0 0 1 .8-34.7z"]]
};
exports.faSignIn = faSignIn;
var faSignInAlt = {
  prefix: 'fad',
  iconName: 'sign-in-alt',
  icon: [512, 512, [], "f2f6", ["M512 160v192a96 96 0 0 1-96 96h-84a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h84a32 32 0 0 0 32-32V160a32 32 0 0 0-32-32h-84a12 12 0 0 1-12-12V76a12 12 0 0 1 12-12h84a96 96 0 0 1 96 96z", "M369 273L201 441c-15 15-41 4.5-41-17v-96H24a23.94 23.94 0 0 1-24-24v-96a23.94 23.94 0 0 1 24-24h136V88c0-21.5 26-32 41-17l168 168a24.2 24.2 0 0 1 0 34z"]]
};
exports.faSignInAlt = faSignInAlt;
var faSignLanguage = {
  prefix: 'fad',
  iconName: 'sign-language',
  icon: [448, 512, [], "f2a7", ["M448 256.2l-5-152.45a28.57 28.57 0 1 0-57.11 1.87l1.24 38.4L283.56 11a28.57 28.57 0 0 0-39.65-5.33c-12.83 9.6-14.93 28.24-5.08 40.88l76.88 98.75-4.5 3.51-94.79-121.7a28.57 28.57 0 0 0-39.66-5.32c-12.82 9.6-14.93 28.24-5.08 40.88L266.12 184l-4.51 3.51-77.67-99.8a28.6 28.6 0 0 0-39.66-5.33c-12.82 9.6-14.93 28.24-5.08 40.89l57.56 72.83a28.58 28.58 0 0 1 31.47 1.42l123.36 89.71A34.29 34.29 0 0 1 365.71 315v23l69.07-53.62A34.31 34.31 0 0 0 448 256.2zm-259.68-52.38a28 28 0 0 1 3.63-4.1l-18.2-22.79c-9.84-12.64-28.43-15.17-40.88-5.08a28.56 28.56 0 0 0-4.55 39.75l42.76 54.74h54.63l-31.09-22.61a28.55 28.55 0 0 1-6.3-39.91z", "M365.71 315v141.07a34.28 34.28 0 0 1-26.43 33.37l-80.47 18.93A136.78 136.78 0 0 1 227.4 512H120a28.57 28.57 0 0 1-28.57-28c-.31-16 13.11-29.13 29.13-29.13h62.3v-5.72H57C41 449.16 27.56 436 27.86 420a28.57 28.57 0 0 1 28.57-28h126.43v-5.71H29.14c-16 0-29.44-13.12-29.13-29.13a28.56 28.56 0 0 1 28.56-28h154.29v-5.71H57.71c-16 0-29.44-13.11-29.13-29.13a28.56 28.56 0 0 1 28.56-28h168.57l-31.09-22.61a28.57 28.57 0 1 1 33.61-46.21l123.36 89.71A34.29 34.29 0 0 1 365.71 315z"]]
};
exports.faSignLanguage = faSignLanguage;
var faSignOut = {
  prefix: 'fad',
  iconName: 'sign-out',
  icon: [512, 512, [], "f08b", ["M180 448H96a96 96 0 0 1-96-96V160a96 96 0 0 1 96-96h84a12 12 0 0 1 12 12v40a12 12 0 0 1-12 12H96a32 32 0 0 0-32 32v192a32 32 0 0 0 32 32h84a12 12 0 0 1 12 12v40a12 12 0 0 1-12 12z", "M353 88.3l151.9 150.6a24 24 0 0 1 0 34.1l-152 150.8a24.08 24.08 0 0 1-33.9-.1l-21.9-21.9a24.07 24.07 0 0 1 .8-34.7l77.6-71.1H184a23.94 23.94 0 0 1-24-24v-32a23.94 23.94 0 0 1 24-24h191.5l-77.6-71.1a24 24 0 0 1-.7-34.6l21.9-21.9a24 24 0 0 1 33.9-.1z"]]
};
exports.faSignOut = faSignOut;
var faSignOutAlt = {
  prefix: 'fad',
  iconName: 'sign-out-alt',
  icon: [512, 512, [], "f2f5", ["M64 160v192a32 32 0 0 0 32 32h84a12 12 0 0 1 12 12v40a12 12 0 0 1-12 12H96a96 96 0 0 1-96-96V160a96 96 0 0 1 96-96h84a12 12 0 0 1 12 12v40a12 12 0 0 1-12 12H96a32 32 0 0 0-32 32z", "M288 424v-96H152a23.94 23.94 0 0 1-24-24v-96a23.94 23.94 0 0 1 24-24h136V88c0-21.4 25.9-32 41-17l168 168a24.2 24.2 0 0 1 0 34L329 441c-15 15-41 4.52-41-17z"]]
};
exports.faSignOutAlt = faSignOutAlt;
var faSignal = {
  prefix: 'fad',
  iconName: 'signal',
  icon: [640, 512, [], "f012", ["", "M216 288h-48a16 16 0 0 0-16 16v192a16 16 0 0 0 16 16h48a16 16 0 0 0 16-16V304a16 16 0 0 0-16-16zM88 384H40a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16h48a16 16 0 0 0 16-16v-96a16 16 0 0 0-16-16zm256-192h-48a16 16 0 0 0-16 16v288a16 16 0 0 0 16 16h48a16 16 0 0 0 16-16V208a16 16 0 0 0-16-16zM600 0h-48a16 16 0 0 0-16 16v480a16 16 0 0 0 16 16h48a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16zM472 96h-48a16 16 0 0 0-16 16v384a16 16 0 0 0 16 16h48a16 16 0 0 0 16-16V112a16 16 0 0 0-16-16z"]]
};
exports.faSignal = faSignal;
var faSignal1 = {
  prefix: 'fad',
  iconName: 'signal-1',
  icon: [640, 512, [], "f68c", ["M216 288h-48a16 16 0 0 0-16 16v192a16 16 0 0 0 16 16h48a16 16 0 0 0 16-16V304a16 16 0 0 0-16-16zm128-96h-48a16 16 0 0 0-16 16v288a16 16 0 0 0 16 16h48a16 16 0 0 0 16-16V208a16 16 0 0 0-16-16zM600 0h-48a16 16 0 0 0-16 16v480a16 16 0 0 0 16 16h48a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16zM472 96h-48a16 16 0 0 0-16 16v384a16 16 0 0 0 16 16h48a16 16 0 0 0 16-16V112a16 16 0 0 0-16-16z", "M104 400v96a16 16 0 0 1-16 16H40a16 16 0 0 1-16-16v-96a16 16 0 0 1 16-16h48a16 16 0 0 1 16 16z"]]
};
exports.faSignal1 = faSignal1;
var faSignal2 = {
  prefix: 'fad',
  iconName: 'signal-2',
  icon: [640, 512, [], "f68d", ["M344 192h-48a16 16 0 0 0-16 16v288a16 16 0 0 0 16 16h48a16 16 0 0 0 16-16V208a16 16 0 0 0-16-16zm128-96h-48a16 16 0 0 0-16 16v384a16 16 0 0 0 16 16h48a16 16 0 0 0 16-16V112a16 16 0 0 0-16-16zM600 0h-48a16 16 0 0 0-16 16v480a16 16 0 0 0 16 16h48a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16z", "M88 384H40a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16h48a16 16 0 0 0 16-16v-96a16 16 0 0 0-16-16zm128-96h-48a16 16 0 0 0-16 16v192a16 16 0 0 0 16 16h48a16 16 0 0 0 16-16V304a16 16 0 0 0-16-16z"]]
};
exports.faSignal2 = faSignal2;
var faSignal3 = {
  prefix: 'fad',
  iconName: 'signal-3',
  icon: [640, 512, [], "f68e", ["M472 96h-48a16 16 0 0 0-16 16v384a16 16 0 0 0 16 16h48a16 16 0 0 0 16-16V112a16 16 0 0 0-16-16zM600 0h-48a16 16 0 0 0-16 16v480a16 16 0 0 0 16 16h48a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16z", "M88 384H40a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16h48a16 16 0 0 0 16-16v-96a16 16 0 0 0-16-16zm256-192h-48a16 16 0 0 0-16 16v288a16 16 0 0 0 16 16h48a16 16 0 0 0 16-16V208a16 16 0 0 0-16-16zm-128 96h-48a16 16 0 0 0-16 16v192a16 16 0 0 0 16 16h48a16 16 0 0 0 16-16V304a16 16 0 0 0-16-16z"]]
};
exports.faSignal3 = faSignal3;
var faSignal4 = {
  prefix: 'fad',
  iconName: 'signal-4',
  icon: [640, 512, [], "f68f", ["M616 16v480a16 16 0 0 1-16 16h-48a16 16 0 0 1-16-16V16a16 16 0 0 1 16-16h48a16 16 0 0 1 16 16z", "M216 288h-48a16 16 0 0 0-16 16v192a16 16 0 0 0 16 16h48a16 16 0 0 0 16-16V304a16 16 0 0 0-16-16zM88 384H40a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16h48a16 16 0 0 0 16-16v-96a16 16 0 0 0-16-16zm256-192h-48a16 16 0 0 0-16 16v288a16 16 0 0 0 16 16h48a16 16 0 0 0 16-16V208a16 16 0 0 0-16-16zm128-96h-48a16 16 0 0 0-16 16v384a16 16 0 0 0 16 16h48a16 16 0 0 0 16-16V112a16 16 0 0 0-16-16z"]]
};
exports.faSignal4 = faSignal4;
var faSignalAlt = {
  prefix: 'fad',
  iconName: 'signal-alt',
  icon: [640, 512, [], "f690", ["", "M96 384H64a32 32 0 0 0-32 32v64a32 32 0 0 0 32 32h32a32 32 0 0 0 32-32v-64a32 32 0 0 0-32-32zm160-128h-32a32 32 0 0 0-32 32v192a32 32 0 0 0 32 32h32a32 32 0 0 0 32-32V288a32 32 0 0 0-32-32zm160-128h-32a32 32 0 0 0-32 32v320a32 32 0 0 0 32 32h32a32 32 0 0 0 32-32V160a32 32 0 0 0-32-32zM576 0h-32a32 32 0 0 0-32 32v448a32 32 0 0 0 32 32h32a32 32 0 0 0 32-32V32a32 32 0 0 0-32-32z"]]
};
exports.faSignalAlt = faSignalAlt;
var faSignalAlt1 = {
  prefix: 'fad',
  iconName: 'signal-alt-1',
  icon: [640, 512, [], "f691", ["M576 0h-32a32 32 0 0 0-32 32v448a32 32 0 0 0 32 32h32a32 32 0 0 0 32-32V32a32 32 0 0 0-32-32zM416 128h-32a32 32 0 0 0-32 32v320a32 32 0 0 0 32 32h32a32 32 0 0 0 32-32V160a32 32 0 0 0-32-32zM256 256h-32a32 32 0 0 0-32 32v192a32 32 0 0 0 32 32h32a32 32 0 0 0 32-32V288a32 32 0 0 0-32-32z", "M128 416v64a32 32 0 0 1-32 32H64a32 32 0 0 1-32-32v-64a32 32 0 0 1 32-32h32a32 32 0 0 1 32 32z"]]
};
exports.faSignalAlt1 = faSignalAlt1;
var faSignalAlt2 = {
  prefix: 'fad',
  iconName: 'signal-alt-2',
  icon: [640, 512, [], "f692", ["M576 0h-32a32 32 0 0 0-32 32v448a32 32 0 0 0 32 32h32a32 32 0 0 0 32-32V32a32 32 0 0 0-32-32zM416 128h-32a32 32 0 0 0-32 32v320a32 32 0 0 0 32 32h32a32 32 0 0 0 32-32V160a32 32 0 0 0-32-32z", "M96 384H64a32 32 0 0 0-32 32v64a32 32 0 0 0 32 32h32a32 32 0 0 0 32-32v-64a32 32 0 0 0-32-32zm160-128h-32a32 32 0 0 0-32 32v192a32 32 0 0 0 32 32h32a32 32 0 0 0 32-32V288a32 32 0 0 0-32-32z"]]
};
exports.faSignalAlt2 = faSignalAlt2;
var faSignalAlt3 = {
  prefix: 'fad',
  iconName: 'signal-alt-3',
  icon: [640, 512, [], "f693", ["M608 32v448a32 32 0 0 1-32 32h-32a32 32 0 0 1-32-32V32a32 32 0 0 1 32-32h32a32 32 0 0 1 32 32z", "M96 384H64a32 32 0 0 0-32 32v64a32 32 0 0 0 32 32h32a32 32 0 0 0 32-32v-64a32 32 0 0 0-32-32zm160-128h-32a32 32 0 0 0-32 32v192a32 32 0 0 0 32 32h32a32 32 0 0 0 32-32V288a32 32 0 0 0-32-32zm160-128h-32a32 32 0 0 0-32 32v320a32 32 0 0 0 32 32h32a32 32 0 0 0 32-32V160a32 32 0 0 0-32-32z"]]
};
exports.faSignalAlt3 = faSignalAlt3;
var faSignalAltSlash = {
  prefix: 'fad',
  iconName: 'signal-alt-slash',
  icon: [640, 512, [], "f694", ["M512 364V32a32 32 0 0 1 32-32h32a32 32 0 0 1 32 32v406.14zm-64-49.47V160a32 32 0 0 0-32-32h-32a32 32 0 0 0-32 32v80.28zM96 384H64a32 32 0 0 0-32 32v64a32 32 0 0 0 32 32h32a32 32 0 0 0 32-32v-64a32 32 0 0 0-32-32zm96-96v192a32 32 0 0 0 32 32h32a32 32 0 0 0 32-32V352.6l-94.33-72.9c-.74 2.71-1.67 5.36-1.67 8.3zm160 192a32 32 0 0 0 32 32h32a32 32 0 0 0 32-32v-3.73l-96-74.2z", "M636.64 480.55L617 505.82a16 16 0 0 1-22.46 2.81L6.18 53.9a16 16 0 0 1-2.81-22.45L23 6.18a16 16 0 0 1 22.47-2.81L633.82 458.1a16 16 0 0 1 2.82 22.45z"]]
};
exports.faSignalAltSlash = faSignalAltSlash;
var faSignalSlash = {
  prefix: 'fad',
  iconName: 'signal-slash',
  icon: [640, 512, [], "f695", ["M290.71 192.91A16 16 0 0 1 296 192h48a16 16 0 0 1 16 16v38.47zM88 384H40a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16h48a16 16 0 0 0 16-16v-96a16 16 0 0 0-16-16zm400-38.6V112a16 16 0 0 0-16-16h-48a16 16 0 0 0-16 16v171.57zm128 98.93V16a16 16 0 0 0-16-16h-48a16 16 0 0 0-16 16v366.5zM408 496a16 16 0 0 0 16 16h48a15.72 15.72 0 0 0 13-7.15l-77-59.5zm-128 0a16 16 0 0 0 16 16h48a16 16 0 0 0 16-16v-87.75l-80-61.83zM168 288a16 16 0 0 0-16 16v192a16 16 0 0 0 16 16h48a16 16 0 0 0 16-16V309.32L204.41 288z", "M636.63 480.54L617 505.81a15.77 15.77 0 0 1-14.93 5.77 14.47 14.47 0 0 1-2.07.42h-2.56a15.42 15.42 0 0 0-2.9-3.37L6.18 53.9a16 16 0 0 1-2.81-22.45L23 6.18a16 16 0 0 1 22.47-2.81L633.82 458.1a16 16 0 0 1 2.81 22.44z"]]
};
exports.faSignalSlash = faSignalSlash;
var faSignalStream = {
  prefix: 'fad',
  iconName: 'signal-stream',
  icon: [576, 512, [], "f8dd", ["M198.27 168.37l-22.76-22.23a16.44 16.44 0 0 0-24 1.31 168.77 168.77 0 0 0 0 217.1 16.44 16.44 0 0 0 24 1.31l22.76-22.22a15.12 15.12 0 0 0 1.45-20.32 107.39 107.39 0 0 1 0-134.64 15.11 15.11 0 0 0-1.45-20.31zm226.19-20.92a16.44 16.44 0 0 0-24-1.31l-22.76 22.23a15.12 15.12 0 0 0-1.45 20.31 107.39 107.39 0 0 1 0 134.64 15.14 15.14 0 0 0 1.45 20.32l22.76 22.22a16.44 16.44 0 0 0 24-1.31 168.77 168.77 0 0 0 0-217.1z", "M288 200a56 56 0 1 0 56 56 56 56 0 0 0-56-56zM64 256a214.3 214.3 0 0 1 55.42-144.06c5.59-6.22 4.91-15.74-1.08-21.59L96 68.53a16.41 16.41 0 0 0-23.56 1C25.59 121 0 186.56 0 256s25.59 135 72.44 186.52a16.41 16.41 0 0 0 23.56 1l22.34-21.82c6-5.85 6.67-15.37 1.08-21.59A214.3 214.3 0 0 1 64 256zM503.56 69.48a16.41 16.41 0 0 0-23.56-1l-22.34 21.87c-6 5.85-6.67 15.37-1.08 21.59a214.95 214.95 0 0 1 0 288.12c-5.59 6.22-4.91 15.74 1.08 21.59L480 443.47a16.41 16.41 0 0 0 23.56-1C550.41 391 576 325.44 576 256s-25.59-135-72.44-186.52z"]]
};
exports.faSignalStream = faSignalStream;
var faSignature = {
  prefix: 'fad',
  iconName: 'signature',
  icon: [640, 512, [], "f5b7", ["M639.77 208.21v32.1c0 8.5-6.7 15.1-15.2 15.8-39.4 3.2-105.4 51-138.4 65.8-34.3 15.4-66.7 30-102.3 30-28.2 0-50.2-8.5-65.5-25.3-22.7-24.9-22.8-55.3-20.6-83.8-56.5 45.1-169 153.6-211.2 195.8A31.63 31.63 0 0 1 64 448c-27 0-36.5-27-29.7-43.9l98.2-245.6c8-19.9-14.3-38.8-32.7-27.1l-58 38.9a15.91 15.91 0 0 1-22.1-4.9l-17.2-27a16.08 16.08 0 0 1 4.9-22.1l54.9-36.9c76.5-48.7 160.1 26.9 129.7 102.8l-41.5 103.7c105.2-101.2 144.4-124.5 169.5-126 54.4-3.1 43.8 68.1 42.7 76.1-4.7 35.7-1.3 51.9 21.3 51.9 21.9 0 47-11.3 76.1-24.4 37.4-16.8 111.3-68 163.1-71.5 9.07-.59 16.8 7.11 16.57 16.21z", ""]]
};
exports.faSignature = faSignature;
var faSimCard = {
  prefix: 'fad',
  iconName: 'sim-card',
  icon: [384, 512, [], "f7c4", ["M128 192H96a32 32 0 0 0-32 32v32h64zM64 416a32 32 0 0 0 32 32h32v-64H64zm160-224h-64v64h64zm32 256h32a32 32 0 0 0 32-32v-32h-64zm-96 0h64v-64h-64zm128-256h-32v64h64v-32a32 32 0 0 0-32-32zM64 352h256v-64H64z", "M256 0H64A64.06 64.06 0 0 0 0 64v384a64.06 64.06 0 0 0 64 64h256a64.06 64.06 0 0 0 64-64V128zm64 416a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32V224a32 32 0 0 1 32-32h192a32 32 0 0 1 32 32z"]]
};
exports.faSimCard = faSimCard;
var faSitemap = {
  prefix: 'fad',
  iconName: 'sitemap',
  icon: [640, 512, [], "f0e8", ["M104 320H56v-57.59A38.45 38.45 0 0 1 94.41 224H296v-64h48v64h201.59A38.46 38.46 0 0 1 584 262.41V320h-48v-48H344v48h-48v-48H104z", "M128 352H32a32 32 0 0 0-32 32v96a32 32 0 0 0 32 32h96a32 32 0 0 0 32-32v-96a32 32 0 0 0-32-32zM384 0H256a32 32 0 0 0-32 32v96a32 32 0 0 0 32 32h128a32 32 0 0 0 32-32V32a32 32 0 0 0-32-32zm224 352h-96a32 32 0 0 0-32 32v96a32 32 0 0 0 32 32h96a32 32 0 0 0 32-32v-96a32 32 0 0 0-32-32zm-240 0h-96a32 32 0 0 0-32 32v96a32 32 0 0 0 32 32h96a32 32 0 0 0 32-32v-96a32 32 0 0 0-32-32z"]]
};
exports.faSitemap = faSitemap;
var faSkating = {
  prefix: 'fad',
  iconName: 'skating',
  icon: [448, 512, [], "f7c5", ["M400 448a16 16 0 0 0-16 16 16 16 0 0 1-16 16h-96a16 16 0 0 0 0 32h96a48 48 0 0 0 48-48 16 16 0 0 0-16-16zm-282.2 8.6a16 16 0 0 1-22.6 0l-67.9-67.9a16 16 0 1 0-22.6 22.6l67.9 67.9a48.16 48.16 0 0 0 67.9 0 16 16 0 1 0-22.7-22.6zM400 0a48 48 0 1 0 48 48 48 48 0 0 0-48-48z", "M360.85 164.3a40 40 0 0 0-28.3-68.3H128a32 32 0 1 0 0 64h105.5l-20.1 17.2a63.94 63.94 0 0 0-3.6 93.8l78.2 78.2V432a32 32 0 0 0 64 0v-89.4a48 48 0 0 0-14.1-33.9l-61-61a16.29 16.29 0 0 0 1.7-1.1zm-187 112.5l-93.7 93.7a32 32 0 0 0 22.6 54.6 31.55 31.55 0 0 0 22.6-9.4l91.9-91.9-30.2-30.2a94 94 0 0 1-13.2-16.8z"]]
};
exports.faSkating = faSkating;
var faSkeleton = {
  prefix: 'fad',
  iconName: 'skeleton',
  icon: [512, 512, [], "f620", ["M224 224H16a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h208zM80 128h144V64H80a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm208 0h144a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16H288zm160 176v-32a16 16 0 0 0-16-16H288v64h144a16 16 0 0 0 16-16zm32 128a80 80 0 1 1-158.39-16H190.39A80 80 0 1 1 112 352h288a80 80 0 0 1 80 80zm-336 0a32 32 0 1 0-32 32 32 32 0 0 0 32-32zm288 0a32 32 0 1 0-32 32 32 32 0 0 0 32-32zM64 272v32a16 16 0 0 0 16 16h144v-64H80a16 16 0 0 0-16 16zm432-112H288v64h208a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z", "M224 16a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16v336h-64z"]]
};
exports.faSkeleton = faSkeleton;
var faSkiJump = {
  prefix: 'fad',
  iconName: 'ski-jump',
  icon: [512, 512, [], "f7c7", ["M400 96a48 48 0 1 0-48-48 48 48 0 0 0 48 48zm110.7 94.2a24 24 0 0 0-47.4 8c3.3 19.3-6 38.9-22.1 48.1L13 466.7A24 24 0 0 0 24.1 512a24.14 24.14 0 0 0 11-2.7l429.2-220.9a95.42 95.42 0 0 0 46.4-98.2z", "M113.7 414.8a31.85 31.85 0 0 1-7.3-35c60.4-146.9 56.8-138.9 60.2-143.3l58.9-76.5H128a32 32 0 0 1 0-64h184a40 40 0 0 1 28.3 68.3L218.9 274.8l-44.9 109z"]]
};
exports.faSkiJump = faSkiJump;
var faSkiLift = {
  prefix: 'fad',
  iconName: 'ski-lift',
  icon: [512, 512, [], "f7c8", ["M488 288a24.07 24.07 0 0 0-24 24 33.54 33.54 0 0 1-21.8 31.3L111.65 465.5a24 24 0 1 0 16.6 45l330.5-122.1A81.87 81.87 0 0 0 512 312a24 24 0 0 0-24-24zM112 128a48 48 0 1 0-48-48 48 48 0 0 0 48 48zm79.6 253.4a24 24 0 1 0-15.2-45.6L158 342a40 40 0 0 1-48.7-20.7l-63.6-133A24 24 0 1 0 2.35 209L66 342a88.31 88.31 0 0 0 79.5 50c12.55 0 16.95-.9 46.05-10.6zM256 0h-32v184l32-8z", "M307.65 222.8a31.61 31.61 0 0 0-27.5-5.8l-68.3 17-24.1-53.7a48 48 0 1 0-87.6 39.4L128 287.8c7.9 19.1 22.7 27.6 39.8 23.3L256 289v123.2l64-23.7V248a31.69 31.69 0 0 0-12.35-25.2z"]]
};
exports.faSkiLift = faSkiLift;
var faSkiing = {
  prefix: 'fad',
  iconName: 'skiing',
  icon: [512, 512, [], "f7c9", ["M432 96a48 48 0 1 0-48-48 48 48 0 0 0 48 48zm73 356.1a23.9 23.9 0 0 0-33.9 0c-12.1 12.1-30.5 15.4-45.1 8.7L35 258.7a24 24 0 1 0-22 42.6l391.9 202.5a88.06 88.06 0 0 0 37.1 8.1 89 89 0 0 0 63-26 24 24 0 0 0 0-33.8zM120 91.6l-11.5 22.5a39.15 39.15 0 0 0 42.8-4.8l216.28 109.75a47.52 47.52 0 0 1-16-22.65l-10.76-29-175.92-87A38.77 38.77 0 0 0 144 44.8l-11.1 21.7h-.2l-34.4-7a5.11 5.11 0 0 0-5 1.7 5.23 5.23 0 0 0 .5 7.4z", "M293 215.7l-107-53.1a63.8 63.8 0 0 0 17.7 54.4l75.1 75.2-45.9 68.8 57.3 29.6 49.2-73.8a48 48 0 0 0-6-60.6zm169.3-20.3l-52.1-26.1-17.1-51.2c-8.1-24.2-40.9-56.6-84.5-39.2l-81.43 32.28 113.67 56.18 10.76 29a47.6 47.6 0 0 0 24 27.7l58.1 29a32.2 32.2 0 0 0 28.6-57.7z"]]
};
exports.faSkiing = faSkiing;
var faSkiingNordic = {
  prefix: 'fad',
  iconName: 'skiing-nordic',
  icon: [576, 512, [], "f7ca", ["M336 96a48 48 0 1 0-48-48 48 48 0 0 0 48 48zm216 320a24 24 0 0 0-24 24 24.07 24.07 0 0 1-24 24h-69.5L460 285.67a31.85 31.85 0 0 1-12 2.33h-20.7l-25.2 176H99.5l52.21-260.94a32 32 0 0 1-30.88-9L66.9 464H24a24 24 0 0 0 0 48h480a72.08 72.08 0 0 0 72-72 24.07 24.07 0 0 0-24-24z", "M186.2 332.2L123.7 464h70.9l43.1-91-22-13a95.84 95.84 0 0 1-29.5-27.8zM448 224h-43.9L378 170.8c-12.5-25.5-35.5-44.2-61.8-50.9L245 98.7a95.74 95.74 0 0 0-80.8 17.1l-39.7 30.4a32.17 32.17 0 1 0 42.21 48.35l36.49-28c7.7-5.9 17.4-8 25.3-6.1l14.7 4.4-37.5 87.4A64.18 64.18 0 0 0 232 332.6l85 50.2-25.5 81.2h67l23.6-75.5a48.25 48.25 0 0 0-21.6-54.4L299.3 298l31.3-78.3 20.3 41.4A48.35 48.35 0 0 0 394 288h54a32 32 0 0 0 32-32 32 32 0 0 0-32-32z"]]
};
exports.faSkiingNordic = faSkiingNordic;
var faSkull = {
  prefix: 'fad',
  iconName: 'skull',
  icon: [512, 512, [], "f54c", ["M256 0C114.6 0 0 100.3 0 224c0 70.1 36.9 132.6 94.5 173.7 9.6 6.9 15.2 18.1 13.5 29.9l-9.4 66.2a15.87 15.87 0 0 0 13.37 18 16.49 16.49 0 0 0 2.33.17H192V456a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v56h64v-56a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v56h77.7a15.87 15.87 0 0 0 15.87-15.87 16.49 16.49 0 0 0-.17-2.33l-9.4-66.2c-1.7-11.7 3.8-23 13.5-29.9C475.1 356.6 512 294.1 512 224 512 100.3 397.4 0 256 0zm-96 320a64 64 0 1 1 64-64 64 64 0 0 1-64 64zm192 0a64 64 0 1 1 64-64 64 64 0 0 1-64 64z", "M160 192a64 64 0 1 0 64 64 64 64 0 0 0-64-64zm192 0a64 64 0 1 0 64 64 64 64 0 0 0-64-64z"]]
};
exports.faSkull = faSkull;
var faSkullCow = {
  prefix: 'fad',
  iconName: 'skull-cow',
  icon: [640, 512, [], "f8de", ["M60.07,113.24C43.35,89.15,56.88,37.69,63,21.58a16,16,0,0,0-26.21-17C13.05,27.82,0,60.17,0,95.67,0,166.12,57.43,224,128,224h32V160a63.33,63.33,0,0,1,8.88-32H96C78.61,128,66.87,123,60.07,113.24ZM603.26,4.57a16,16,0,0,0-26.21,17c6.07,16.11,19.6,67.57,2.88,91.66C573.13,123,561.39,128,544,128H471.12A63.32,63.32,0,0,1,480,160v64h32c70.59,0,128-57.88,128-128.33C640,60.17,627,27.82,603.26,4.57Z", "M416,96H224a64,64,0,0,0-64,64V288a64,64,0,0,0,64,64L250.8,486.27A32,32,0,0,0,282.19,512h75.53a32,32,0,0,0,31.38-25.72L416,352a64,64,0,0,0,64-64V160A64,64,0,0,0,416,96ZM240,288a32,32,0,1,1,32-32A32,32,0,0,1,240,288Zm160,0a32,32,0,1,1,32-32A32,32,0,0,1,400,288Z"]]
};
exports.faSkullCow = faSkullCow;
var faSkullCrossbones = {
  prefix: 'fad',
  iconName: 'skull-crossbones',
  icon: [448, 512, [], "f714", ["M368 128C368 57.31 303.51 0 224 0S80 57.31 80 128c0 46.53 28.21 86.87 70 109.28l-5.48 25.87C141.84 275.77 149.93 288 161 288h126c11 0 19.12-12.22 16.45-24.84L298 237.28c41.76-22.41 70-62.75 70-109.28zm-200 48a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm112 0a32 32 0 1 1 32-32 32 32 0 0 1-32 32z", "M280 176a32 32 0 1 0-32-32 32 32 0 0 0 32 32zm159.15 277.05l-142-69.05 142-69.06a16 16 0 0 0 7.15-21.46L432 264.85a16 16 0 0 0-21.46-7.15L224 348.4 37.47 257.69A16 16 0 0 0 16 264.85L1.69 293.47a16 16 0 0 0 7.16 21.46l142 69.06-142 69.06a16 16 0 0 0-7.15 21.47L16 503.15a16 16 0 0 0 21.47 7.13L224 419.58l186.51 90.72a16 16 0 0 0 21.49-7.15l14.33-28.63a16 16 0 0 0-7.18-21.47zM168 176a32 32 0 1 0-32-32 32 32 0 0 0 32 32z"]]
};
exports.faSkullCrossbones = faSkullCrossbones;
var faSlash = {
  prefix: 'fad',
  iconName: 'slash',
  icon: [640, 512, [], "f715", ["M636.63 480.55L617 505.82a16 16 0 0 1-22.46 2.81L6.18 53.9a16 16 0 0 1-2.81-22.45L23 6.18a16 16 0 0 1 22.47-2.81L633.82 458.1a16 16 0 0 1 2.81 22.45z", ""]]
};
exports.faSlash = faSlash;
var faSledding = {
  prefix: 'fad',
  iconName: 'sledding',
  icon: [512, 512, [], "f7cb", ["M400 128a48 48 0 1 0-48-48 48 48 0 0 0 48 48zm105 292.1a23.9 23.9 0 0 0-33.9 0c-12.1 12.1-30.5 15.4-45.1 8.7L35 226.6a24 24 0 0 0-22 42.7l391.9 202.6A88.06 88.06 0 0 0 442 480a89 89 0 0 0 63-26 24.08 24.08 0 0 0 0-33.9z", "M384.1 288v96c0 7.5-3 14-7.2 19.4L320 374v-54H215.47l-54.77-28.3a31.93 31.93 0 0 1 1.8-15.9 30.52 30.52 0 0 1 6.9-10.4l73.4-73.4H160a32 32 0 0 1 0-64h153.5a48 48 0 0 1 33.9 81.9L301.3 256h50.8a32 32 0 0 1 32 32z"]]
};
exports.faSledding = faSledding;
var faSleigh = {
  prefix: 'fad',
  iconName: 'sleigh',
  icon: [640, 512, [], "f7cc", ["M639.9 411.7c-2.2 39-36.9 68.3-75.9 68.3H48a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16h519.3a24.61 24.61 0 0 0 15.4-43.8l-9.3-7.4a16 16 0 0 1-2.5-22.5l10-12.5a16 16 0 0 1 22.5-2.5l9.3 7.4a72.06 72.06 0 0 1 27.2 61z", "M0 64a32 32 0 0 1 32-32h20.7A173.75 173.75 0 0 1 208 128a173.64 173.64 0 0 0 155.3 96H384a64.06 64.06 0 0 0 64-64V96h96a32 32 0 0 1 0 64v96a96 96 0 0 1-96 96v48h-64v-48H192v48h-64v-52.5C72.9 333.2 32 283.6 32 224V96A32 32 0 0 1 0 64z"]]
};
exports.faSleigh = faSleigh;
var faSlidersH = {
  prefix: 'fad',
  iconName: 'sliders-h',
  icon: [512, 512, [], "f1de", ["M496 64H288v64h208a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zM16 128h176V64H16A16 16 0 0 0 0 80v32a16 16 0 0 0 16 16zm0 160h304v-64H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm480-64h-80v64h80a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0 160H160v64h336a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM0 400v32a16 16 0 0 0 16 16h48v-64H16a16 16 0 0 0-16 16z", "M272 32h-32a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zm128 160h-32a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-96a16 16 0 0 0-16-16zM144 352h-32a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-96a16 16 0 0 0-16-16z"]]
};
exports.faSlidersH = faSlidersH;
var faSlidersHSquare = {
  prefix: 'fad',
  iconName: 'sliders-h-square',
  icon: [448, 512, [], "f3f0", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-16 324a12 12 0 0 1-12 12h-52v24a23.94 23.94 0 0 1-24 24h-16a23.94 23.94 0 0 1-24-24v-24H76a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h180v-24a23.94 23.94 0 0 1 24-24h16a23.94 23.94 0 0 1 24 24v24h52a12 12 0 0 1 12 12zm0-160a12 12 0 0 1-12 12H192v24a23.94 23.94 0 0 1-24 24h-16a23.94 23.94 0 0 1-24-24v-24H76a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h52v-24a23.94 23.94 0 0 1 24-24h16a23.94 23.94 0 0 1 24 24v24h180a12 12 0 0 1 12 12z", "M168 256a23.94 23.94 0 0 0 24-24V120a23.94 23.94 0 0 0-24-24h-16a23.94 23.94 0 0 0-24 24v112a23.94 23.94 0 0 0 24 24zm112 160h16a23.94 23.94 0 0 0 24-24V280a23.94 23.94 0 0 0-24-24h-16a23.94 23.94 0 0 0-24 24v112a23.94 23.94 0 0 0 24 24z"]]
};
exports.faSlidersHSquare = faSlidersHSquare;
var faSlidersV = {
  prefix: 'fad',
  iconName: 'sliders-v',
  icon: [448, 512, [], "f3f1", ["M80 0H48a16 16 0 0 0-16 16v80h64V16A16 16 0 0 0 80 0zm112 496a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-48h-64zm-160 0a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V192H32zM240 0h-32a16 16 0 0 0-16 16v336h64V16a16 16 0 0 0-16-16zm112 496a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V320h-64zM400 0h-32a16 16 0 0 0-16 16v208h64V16a16 16 0 0 0-16-16z", "M112 96H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h96a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm320 128h-96a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h96a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM272 352h-96a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h96a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z"]]
};
exports.faSlidersV = faSlidersV;
var faSlidersVSquare = {
  prefix: 'fad',
  iconName: 'sliders-v-square',
  icon: [448, 512, [], "f3f2", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zM200 224h-24v180a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12V224H88a23.94 23.94 0 0 1-24-24v-16a23.94 23.94 0 0 1 24-24h24v-52a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12v52h24a23.94 23.94 0 0 1 24 24v16a23.94 23.94 0 0 1-24 24zm184 104a23.94 23.94 0 0 1-24 24h-24v52a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-52h-24a23.94 23.94 0 0 1-24-24v-16a23.94 23.94 0 0 1 24-24h24V108a12 12 0 0 1 12-12h40a12 12 0 0 1 12 12v180h24a23.94 23.94 0 0 1 24 24z", "M224 184a23.94 23.94 0 0 0-24-24H88a23.94 23.94 0 0 0-24 24v16a23.94 23.94 0 0 0 24 24h112a23.94 23.94 0 0 0 24-24zm136 104H248a23.94 23.94 0 0 0-24 24v16a23.94 23.94 0 0 0 24 24h112a23.94 23.94 0 0 0 24-24v-16a23.94 23.94 0 0 0-24-24z"]]
};
exports.faSlidersVSquare = faSlidersVSquare;
var faSmile = {
  prefix: 'fad',
  iconName: 'smile',
  icon: [496, 512, [], "f118", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8Zm80,168a32,32,0,1,1-32,32A32,32,0,0,1,328,176Zm-160,0a32,32,0,1,1-32,32A32,32,0,0,1,168,176ZM362.8,346.2a149.38,149.38,0,0,1-229.6,0c-13.6-16.3,11-36.7,24.6-20.5a117.5,117.5,0,0,0,180.4,0C351.6,309.5,376.3,329.9,362.8,346.2Z", "M328,176a32,32,0,1,0,32,32A32,32,0,0,0,328,176Zm-160,0a32,32,0,1,0,32,32A32,32,0,0,0,168,176Z"]]
};
exports.faSmile = faSmile;
var faSmileBeam = {
  prefix: 'fad',
  iconName: 'smile-beam',
  icon: [496, 512, [], "f5b8", ["M245.47,8C108.5,9.43-1.36,121.56,0,258.53S113.56,505.36,250.53,504,497.36,390.44,496,253.47,382.44,6.64,245.47,8ZM112,223.4c3.3-42.1,32.2-71.38,56-71.38s52.7,29.28,56,71.38c.7,8.6-10.8,11.9-14.9,4.5l-9.5-17c-7.7-13.7-19.2-21.6-31.5-21.6s-23.78,7.9-31.48,21.6l-9.5,17C122.82,235.3,111.32,231.9,112,223.4ZM363.69,345a149.34,149.34,0,0,1-229.54,2.35c-13.67-16.17,10.62-36.81,24.37-20.75a117.57,117.57,0,0,0,180.39-1.84c13.41-16.32,38.08,3.93,24.78,20.24ZM369,227.9l-9.5-17c-7.7-13.7-19.18-21.6-31.48-21.6s-23.8,7.9-31.5,21.6l-9.5,17c-4.1,7.3-15.6,4-14.9-4.5,3.3-42.1,32.2-71.38,56-71.38s52.68,29.28,56,71.38c.58,8.6-11,11.9-15.11,4.5Z", "M168,152c-23.78,0-52.68,29.28-56,71.38-.7,8.5,10.8,11.9,15.1,4.5l9.5-17c7.7-13.7,19.18-21.6,31.48-21.6s23.8,7.9,31.5,21.6l9.5,17c4.1,7.4,15.6,4.1,14.9-4.5C220.7,181.3,191.8,152,168,152ZM384.08,223.4c-3.3-42.1-32.2-71.38-56-71.38s-52.7,29.28-56,71.38c-.7,8.5,10.8,11.8,14.9,4.5l9.5-17c7.7-13.7,19.2-21.6,31.5-21.6s23.78,7.9,31.48,21.6l9.5,17c4.11,7.4,15.71,4.1,15.11-4.5Z"]]
};
exports.faSmileBeam = faSmileBeam;
var faSmilePlus = {
  prefix: 'fad',
  iconName: 'smile-plus',
  icon: [640, 512, [], "f5b9", ["M208 96C93.1 96 0 189.1 0 304s93.1 208 208 208 208-93.1 208-208S322.9 96 208 96zm64 133.2a26.8 26.8 0 1 1-26.8 26.8 26.8 26.8 0 0 1 26.8-26.8zm-128 0a26.8 26.8 0 1 1-26.8 26.8 26.8 26.8 0 0 1 26.8-26.8zm164.2 140.9a132.32 132.32 0 0 1-200.4 0 16 16 0 1 1 24.3-20.7 100.23 100.23 0 0 0 151.6-.1 16.07 16.07 0 0 1 24.5 20.8z", "M624 80h-64V16a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v64h-64a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h64v64a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-64h64a16 16 0 0 0 16-16V96a16 16 0 0 0-16-16zM272 229.2a26.8 26.8 0 1 0 26.8 26.8 26.8 26.8 0 0 0-26.8-26.8zm-128 0a26.8 26.8 0 1 0 26.8 26.8 26.8 26.8 0 0 0-26.8-26.8z"]]
};
exports.faSmilePlus = faSmilePlus;
var faSmileWink = {
  prefix: 'fad',
  iconName: 'smile-wink',
  icon: [496, 512, [], "f4da", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8ZM168,176a32,32,0,1,1-32,32A32,32,0,0,1,168,176ZM362.8,346.3a149.48,149.48,0,0,1-229.6-.1c-13.5-16.3,11.2-36.7,24.6-20.4a117.5,117.5,0,0,0,180.4,0C351.8,309.6,376.3,330,362.8,346.3ZM368.2,233l-9.7-8.5c-14.8-13.2-46.2-13.2-61,0L288,233c-8.3,7.4-21.6.4-19.8-10.8,4-25.2,34.2-42.1,59.9-42.1S384,197,388,222.2c1.7,11.1-11.4,18.3-19.8,10.8Z", "M388,222.2c-4-25.2-34.2-42.1-59.9-42.1s-55.9,16.9-59.9,42.1c-1.8,11.2,11.5,18.2,19.8,10.8l9.5-8.5c14.8-13.2,46.2-13.2,61,0l9.7,8.5c8.4,7.5,21.5.3,19.8-10.8ZM168,176a32,32,0,1,0,32,32A32,32,0,0,0,168,176Z"]]
};
exports.faSmileWink = faSmileWink;
var faSmog = {
  prefix: 'fad',
  iconName: 'smog',
  icon: [640, 512, [], "f75f", ["M624 368H80a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h544a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16zm-480 96H16a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16zm416 0H224a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h336a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16z", "M0 144a143.73 143.73 0 0 1 248-99.2A143.18 143.18 0 0 1 352 0c54.8 0 102 31 126.3 76.1A110.53 110.53 0 0 1 528 64a112 112 0 0 1 0 224h-60.1c-22.6 19.7-51.6 32-83.9 32s-61.4-12.3-83.9-32H144A144 144 0 0 1 0 144z"]]
};
exports.faSmog = faSmog;
var faSmoke = {
  prefix: 'fad',
  iconName: 'smoke',
  icon: [640, 512, [], "f760", ["M512 96c-46.8 0-87.3 25.3-109.6 62.8-22.3-18.9-50.8-30.8-82.4-30.8-51.7 0-95.9 30.8-116.1 74.8a174.6 174.6 0 0 1 44.1 23.4 174.7 174.7 0 0 1 243 34.9 136.5 136.5 0 0 1 37-5.1c35.5 0 67.6 13.4 92.7 34.8A127.39 127.39 0 0 0 512 96zm-192 0a157.94 157.94 0 0 1 75.1 19.2c9.3-10.2 20.2-18.4 31.6-25.8A127.93 127.93 0 0 0 320 32c-31.6 0-60.1 11.9-82.4 30.8C215.3 25.3 174.8 0 128 0A128 128 0 0 0 0 128c0 38.2 17.1 72.1 43.7 95.6a174 174 0 0 1 129.4-29.1C197.2 136.8 253.7 96 320 96z", "M640 400a111.94 111.94 0 0 1-112 112H144a144 144 0 1 1 104-243.2A143.18 143.18 0 0 1 352 224c54.8 0 102 31 126.3 76.1A110.53 110.53 0 0 1 528 288a111.94 111.94 0 0 1 112 112z"]]
};
exports.faSmoke = faSmoke;
var faSmoking = {
  prefix: 'fad',
  iconName: 'smoking',
  icon: [640, 512, [], "f48d", ["M553.3 87.1a20.29 20.29 0 0 1-9.3-16.8V8a8 8 0 0 0-8-8h-48a8 8 0 0 0-8 8v62.3c0 22 10.2 43.4 28.6 55.4a147.29 147.29 0 0 1 67.4 124V280a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8v-30.3a195.28 195.28 0 0 0-86.7-162.6zm-65.6 54.5C463.8 125 448 99.3 448 70.3V8a8 8 0 0 0-8-8h-48a8 8 0 0 0-8 8v66.4c0 43.7 24.6 81.6 60.3 106.7a83.62 83.62 0 0 1 35.7 68.6V280a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8v-30.3a131.59 131.59 0 0 0-56.3-108.1z", "M536 352h-48a8 8 0 0 0-8 8v144a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8V360a8 8 0 0 0-8-8zm96 0h-48a8 8 0 0 0-8 8v144a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8V360a8 8 0 0 0-8-8zm-200 0H48a48 48 0 0 0-48 48v64a48 48 0 0 0 48 48h384a16 16 0 0 0 16-16V368a16 16 0 0 0-16-16z"]]
};
exports.faSmoking = faSmoking;
var faSmokingBan = {
  prefix: 'fad',
  iconName: 'smoking-ban',
  icon: [512, 512, [], "f54d", ["M96 240a16 16 0 0 1 16-16h21.5l96 96H112a16 16 0 0 1-16-16zm224.6-80a32 32 0 0 1 31.4 25.9 7.74 7.74 0 0 0 7.7 6.1h16.2a8.17 8.17 0 0 0 8-9.4 64.07 64.07 0 0 0-63.3-54.6 32 32 0 0 1-31.4-25.9 7.74 7.74 0 0 0-7.7-6.1h-16.2a8.17 8.17 0 0 0-8 9.4 64.07 64.07 0 0 0 63.3 54.6zm95.4 80a16 16 0 0 0-16-16H269.2l32 32H384v32h-50.8l32 32H400a16 16 0 0 0 16-16z", "M256 0C114.6 0 0 114.6 0 256s114.6 256 256 256 256-114.6 256-256S397.4 0 256 0zm0 448c-105.9 0-192-86.1-192-192a190.67 190.67 0 0 1 35.7-111.1l267.4 267.4A190.67 190.67 0 0 1 256 448zm156.3-80.9L144.9 99.7A190.67 190.67 0 0 1 256 64c105.9 0 192 86.1 192 192a190.67 190.67 0 0 1-35.7 111.1z"]]
};
exports.faSmokingBan = faSmokingBan;
var faSms = {
  prefix: 'fad',
  iconName: 'sms',
  icon: [512, 512, [], "f7cd", ["M256 32C114.6 32 0 125.1 0 240c0 49.6 21.4 95 57 130.7C44.5 421.1 2.7 466 2.2 466.5a8 8 0 0 0-1.5 8.7A7.83 7.83 0 0 0 8 480c66.3 0 116-31.8 140.6-51.4A305 305 0 0 0 256 448c141.4 0 256-93.1 256-208S397.4 32 256 32zM128.2 304H116a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h12.3c6 0 10.4-3.5 10.4-6.6a5.29 5.29 0 0 0-2.1-3.8l-21.9-18.8a37 37 0 0 1-13.3-28.1c0-21.3 19-38.6 42.4-38.6H156a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8h-12.3c-6 0-10.4 3.5-10.4 6.6a5.29 5.29 0 0 0 2.1 3.8l21.9 18.8a37 37 0 0 1 13.3 28.1c.1 21.3-19 38.6-42.4 38.6zm191.8-8a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8v-68.2l-24.8 55.8a8 8 0 0 1-14.3 0L224 227.8V296a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8V192a16 16 0 0 1 16-16h16a15.92 15.92 0 0 1 14.3 8.8l17.7 35.4 17.7-35.4A16 16 0 0 1 288 176h16a16 16 0 0 1 16 16zm48.3 8H356a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h12.3c6 0 10.4-3.5 10.4-6.6a5.29 5.29 0 0 0-2.1-3.8l-21.9-18.8a37 37 0 0 1-13.3-28.1c0-21.3 19-38.6 42.4-38.6H396a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8h-12.3c-6 0-10.4 3.5-10.4 6.6a5.29 5.29 0 0 0 2.1 3.8l21.9 18.8a37 37 0 0 1 13.3 28.1c.1 21.3-18.9 38.6-42.3 38.6z", "M397.3 237.3l-21.9-18.8a5.29 5.29 0 0 1-2.1-3.8c0-3.1 4.4-6.6 10.4-6.6H396a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8h-12.2c-23.4 0-42.4 17.3-42.4 38.6a37 37 0 0 0 13.3 28.1l21.9 18.8a5.29 5.29 0 0 1 2.1 3.8c0 3.1-4.4 6.6-10.4 6.6H356a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h12.3c23.4 0 42.4-17.3 42.3-38.6a37 37 0 0 0-13.3-28.1zM304 176h-16a16 16 0 0 0-14.3 8.8L256 220.2l-17.7-35.4A15.92 15.92 0 0 0 224 176h-16a16 16 0 0 0-16 16v104a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-68.2l24.9 55.8a8 8 0 0 0 14.3 0l24.8-55.8V296a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8V192a16 16 0 0 0-16-16zm-146.7 61.3l-21.9-18.8a5.29 5.29 0 0 1-2.1-3.8c0-3.1 4.4-6.6 10.4-6.6H156a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8h-12.2c-23.4 0-42.4 17.3-42.4 38.6a37 37 0 0 0 13.3 28.1l21.9 18.8a5.29 5.29 0 0 1 2.1 3.8c0 3.1-4.4 6.6-10.4 6.6H116a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h12.2c23.4 0 42.5-17.3 42.4-38.6a37 37 0 0 0-13.3-28.1z"]]
};
exports.faSms = faSms;
var faSnake = {
  prefix: 'fad',
  iconName: 'snake',
  icon: [640, 512, [], "f716", ["M0 320h96v-64H0zm160 64h96v-64h-96zm160 0h96v-64h-96zM0 192h96v-64H0zm160 64h96v-64h-96zm368 0a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm0-32a16 16 0 1 0-16-16 16 16 0 0 0 16 16z", "M160 128a32 32 0 0 0-64 0H0a124.66 124.66 0 0 1 .63-12.52A128.12 128.12 0 0 1 140.79.64C207.29 7.12 256 66.9 256 133.71V192h-96zM0 256h96v-64H0zm0 64a518.51 518.51 0 0 0 33 181.63c5.19 13.84 24.77 13.84 30 0A518.51 518.51 0 0 0 96 320zm160 0h96v-64h-96zm160 64a32 32 0 0 1-64 0h-95.88c2.68 64.48 50.49 121.08 115.09 127.39A128.16 128.16 0 0 0 415.38 396.5q.62-6.22.62-12.49h-96zm320-173.31v60.61a32 32 0 0 1-22.92 30.7l-86.88 25.7c-33.62 9.94-66.9-9.07-78-39.69H448a32 32 0 0 0-32 32h-96A128 128 0 0 1 448 192h4.56c11.54-30.28 44.86-48.81 78.25-38.54l86.59 26.64a32 32 0 0 1 22.6 30.59zM544 272a16 16 0 1 0-16 16 16 16 0 0 0 16-16zm0-64a16 16 0 1 0-16 16 16 16 0 0 0 16-16z"]]
};
exports.faSnake = faSnake;
var faSnooze = {
  prefix: 'fad',
  iconName: 'snooze',
  icon: [448, 512, [], "f880", ["M304 176v-32a16 16 0 0 0-16-16h-34.75l57.37-57.38A32 32 0 0 0 320 48V32a32 32 0 0 0-32-32H184a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h42.75l-57.37 57.38A32 32 0 0 0 160 144v16a32 32 0 0 0 32 32h96a16 16 0 0 0 16-16zm144 96v-16a32 32 0 0 0-32-32h-96a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h34.75l-57.37 57.38A32 32 0 0 0 288 368v16a32 32 0 0 0 32 32h104a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-42.75l57.37-57.38A32 32 0 0 0 448 272z", "M192 224H40a24 24 0 0 0-24 24v48a24 24 0 0 0 24 24h50.44L8.08 412.66A32 32 0 0 0 0 433.92V480a32 32 0 0 0 32 32h152a24 24 0 0 0 24-24v-48a24 24 0 0 0-24-24h-50.44l82.36-92.66a32 32 0 0 0 8.08-21.26V256a32 32 0 0 0-32-32z"]]
};
exports.faSnooze = faSnooze;
var faSnowBlowing = {
  prefix: 'fad',
  iconName: 'snow-blowing',
  icon: [640, 512, [], "f761", ["M540.3 320H361.72a32.4 32.4 0 0 0-17.81 5.4l-44 29.3c-13.2 8.8-7 29.3 8.91 29.3H542.2c15.9 0 30.81 10.9 33.41 26.6a32.06 32.06 0 0 1-62 15.5C511.5 419.8 505 416 498.4 416h-32.84a16.06 16.06 0 0 0-15.7 19.1 96.06 96.06 0 0 0 188.28-38.2c-8.71-45.6-51.42-76.9-97.84-76.9zM400 288h144a96.2 96.2 0 0 0 93.81-116.72c-7.6-36.21-36.91-65.52-73.11-73.12a96.23 96.23 0 0 0-114.91 75.52c-1.9 9.6 6.1 18.3 15.8 18.3h32.8c6.7 0 13.1-3.8 15.2-10.1a32.05 32.05 0 0 1 62 15.5C573 213.09 558.22 224 542.22 224H400a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16z", "M291.93 324.1l-11.71 3.1a12.16 12.16 0 0 1-14.9-8.6l-14.9-55.6L200 233.9v56.9l40.4 40.2a12 12 0 0 1 0 17l-8.5 8.5a12 12 0 0 1-17 0l-14.8-14.8V372a12 12 0 0 1-12 12h-24a12 12 0 0 1-12-12v-30.3l-14.8 14.8a12 12 0 0 1-17 0l-8.5-8.5a12 12 0 0 1 0-17l40.2-40.2v-56.9L101.58 263l-14.9 55.6a12.21 12.21 0 0 1-14.9 8.6l-11.71-3.1a12.21 12.21 0 0 1-8.6-14.9L57 288.8l-26.6 15.3a12.13 12.13 0 0 1-16.61-4.4l-12.1-21a12.12 12.12 0 0 1 4.4-16.6l26.51-15.4-20.41-5.5a12.21 12.21 0 0 1-8.6-14.9l3.1-11.7a12.21 12.21 0 0 1 14.9-8.6l55.72 15 50.21-29-50.24-29-55.62 14.9a12.16 12.16 0 0 1-14.9-8.6l-3.1-11.7a12.16 12.16 0 0 1 8.6-14.9l20.41-5.5-26.61-15.3a12.12 12.12 0 0 1-4.4-16.6l12.1-21a12.13 12.13 0 0 1 16.61-4.4l26.5 15.3-5.5-20.4A12.16 12.16 0 0 1 60 59.9l11.71-3.2a12.16 12.16 0 0 1 14.9 8.6l15 55.7L152 150.1V93.2L111.69 53a12 12 0 0 1 0-17l8.5-8.5a12 12 0 0 1 17 0L152 42.3V12a12 12 0 0 1 12-12h24a12 12 0 0 1 12 12v30.3l14.7-14.8a12 12 0 0 1 17 0l8.5 8.5a12 12 0 0 1 0 17L200 93.2v56.9l50.42-29.1 14.9-55.6a12.21 12.21 0 0 1 14.9-8.6l11.71 3.1a12.21 12.21 0 0 1 8.6 14.9L295 95.2l26.6-15.3a12.13 12.13 0 0 1 16.61 4.4l12.1 21a12.12 12.12 0 0 1-4.4 16.6l-26.61 15.3 20.41 5.5a12.21 12.21 0 0 1 8.6 14.9l-3.1 11.7a12.21 12.21 0 0 1-14.9 8.6L274.72 163l-50.21 29 50.21 29 55.62-14.9a12.16 12.16 0 0 1 14.9 8.6l3.1 11.7a12.16 12.16 0 0 1-8.6 14.9l-20.41 5.5 26.61 15.3a12.12 12.12 0 0 1 4.4 16.6l-12.1 21a12.13 12.13 0 0 1-16.61 4.4L295 288.8l5.5 20.4a12.09 12.09 0 0 1-8.57 14.9z"]]
};
exports.faSnowBlowing = faSnowBlowing;
var faSnowboarding = {
  prefix: 'fad',
  iconName: 'snowboarding',
  icon: [512, 512, [], "f7ce", ["M431.85 96a48 48 0 1 0-48-48 48 48 0 0 0 48 48zm61.9 375.9a24 24 0 0 0-31.9-11.6 38.23 38.23 0 0 1-29.5 1.3L67.55 328.9a38.27 38.27 0 0 1-21.8-20 24 24 0 0 0-43.5 20.3 85.86 85.86 0 0 0 48.9 44.8L416 506.7a87.38 87.38 0 0 0 29.7 5.3 84.89 84.89 0 0 0 36.5-8.2 24 24 0 0 0 11.55-31.9z", "M505.45 243.2a32 32 0 0 1-44.8 6.4l-83.5-62.9-66 30.5 52 39a48.13 48.13 0 0 1 18.1 48.4l-21.9 102a31.72 31.72 0 0 1-17.8 21.9l-42.27-15.36a31 31 0 0 1-2.73-19.84l19.7-92-60.5-45.3v20.5A47.87 47.87 0 0 1 223 322l-85 28.4a29.94 29.94 0 0 1-7.8 1.28L106.25 343a30.48 30.48 0 0 1-8.7-12.9 32 32 0 0 1 20.2-40.5l74.1-24.7v-53.1a63.63 63.63 0 0 1 35.4-57.2l41.2-20.6-16.4-5.5a47.94 47.94 0 0 1-27.7-24l-29.1-58.1a32 32 0 0 1 57.2-28.6l26.1 52.1 63.7 21.2a160.26 160.26 0 0 1 45.4 23.8l111.4 83.5a32 32 0 0 1 6.4 44.8z"]]
};
exports.faSnowboarding = faSnowboarding;
var faSnowflake = {
  prefix: 'fad',
  iconName: 'snowflake',
  icon: [448, 512, [], "f2dc", ["M138.08 441.66a15.87 15.87 0 0 0 .16 22.44l11.3 11.3a16.06 16.06 0 0 0 22.6 0l19.7-19.7.06-67.86-53.66 53.66zM91.37 83.9l-14.9 4a15.46 15.46 0 0 0-10.9 18.9l7 26 56.67 32.74-19-70.74a15.47 15.47 0 0 0-18.87-10.9zM65.45 405.3a15.46 15.46 0 0 0 10.9 18.9l14.9 4a15.47 15.47 0 0 0 18.89-10.9l19-70.73-56.69 32.73zm355-167.2a15.48 15.48 0 0 0 18.9-10.9l4-14.9a15.47 15.47 0 0 0-10.9-18.9l-26-7-56.7 32.73zM8.67 227.2a15.47 15.47 0 0 0 18.9 10.9l70.77-19-56.72-32.8-25.95 7a15.51 15.51 0 0 0-11 19zm18.87 46.7a15.47 15.47 0 0 0-18.9 10.9l-4 14.9a15.46 15.46 0 0 0 10.9 18.9l26 7 56.76-32.71zm122.2-237.2L138.34 48a1.21 1.21 0 0 0-.16.16 15.87 15.87 0 0 0 .16 22.44L192 124.3V56.4l-19.7-19.7a16.06 16.06 0 0 0-22.56 0zm293.7 263.1l-4-14.9a15.48 15.48 0 0 0-18.9-10.9l-70.67 19 56.69 32.73 26-7a15.47 15.47 0 0 0 10.88-18.93zm-60.9-193a15.47 15.47 0 0 0-10.9-18.9l-14.9-4a15.45 15.45 0 0 0-18.9 10.9l-19 70.74 56.69-32.74zm-7 272.4l-56.67-32.73 19 70.73a15.46 15.46 0 0 0 18.89 10.9l14.9-4a15.47 15.47 0 0 0 10.9-18.9zM256 387.7l-.16 67.94 19.66 19.66a16.06 16.06 0 0 0 22.6 0l11.3-11.3a16.07 16.07 0 0 0 0-22.6zm42.4-351a16.06 16.06 0 0 0-22.6 0L256 56.4v67.9l53.71-53.7a16.07 16.07 0 0 0 0-22.6z", "M446 366.05l-.09.15-15.47 26.8a15.42 15.42 0 0 1-21.06 5.72L256 310.2l-.2 185.8a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16l.1-185.7-153.25 88.5a15.51 15.51 0 0 1-21.1-5.7L2 366.3a15.51 15.51 0 0 1 5.7-21.1L162.16 256 7.87 166.8a15.43 15.43 0 0 1-5.73-21.06L17.67 119a15.41 15.41 0 0 1 21-5.72h.05L192 201.8V16a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16v185.8l153.3-88.5a15.51 15.51 0 0 1 21.1 5.7l15.5 26.8a15.51 15.51 0 0 1-5.7 21.1L285.85 256l154.49 89.2a15.29 15.29 0 0 1 5.66 20.85z"]]
};
exports.faSnowflake = faSnowflake;
var faSnowflakes = {
  prefix: 'fad',
  iconName: 'snowflakes',
  icon: [640, 512, [], "f7cf", ["M528 120a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8V91.6l28 16.1a8 8 0 0 0 11-2.9l8-13.9a8 8 0 0 0-3-10.9l-27.85-16L604 48a8 8 0 0 0 2.9-10.9l-8-13.9a8 8 0 0 0-10.9-2.9l-28 16.1V8a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v28.4l-28-16.1a8 8 0 0 0-10.91 2.9l-8 13.9A8 8 0 0 0 484 48l28 16-28 16a8 8 0 0 0-2.9 10.9l8 13.9a8 8 0 0 0 10.9 2.9l28-16.1zm108 152l-27.92-16L636 240a8 8 0 0 0 2.9-10.9l-8-13.9a8 8 0 0 0-10.9-2.9l-28 16.1V200a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v28.4l-28-16.1a8 8 0 0 0-10.91 2.9l-8 13.9A8 8 0 0 0 516 240l28 16-28 16a8 8 0 0 0-2.9 10.9l8 13.9a8 8 0 0 0 10.9 2.9l28-16.1V312a8 8 0 0 0 8 8h16a8 8 0 0 0 8-8v-28.4l28 16.1a8 8 0 0 0 11-2.9l8-13.9a8 8 0 0 0-3-10.9zM65.45 404.3a15.46 15.46 0 0 0 10.9 18.9l14.9 4a15.47 15.47 0 0 0 18.89-10.9l19-70.73-56.69 32.73zM91.37 82.9l-14.9 4a15.46 15.46 0 0 0-10.9 18.9l7 26 56.67 32.74-19-70.74a15.47 15.47 0 0 0-18.87-10.9zm46.71 357.76a15.87 15.87 0 0 0 .16 22.44l11.3 11.3a16.06 16.06 0 0 0 22.6 0l19.7-19.7.06-67.86-53.66 53.66zM27.54 272.9a15.47 15.47 0 0 0-18.9 10.9l-4 14.9a15.46 15.46 0 0 0 10.9 18.9l26 7 56.76-32.71zM8.67 226.2a15.47 15.47 0 0 0 18.9 10.9l70.77-19-56.72-32.8-25.95 7a15.51 15.51 0 0 0-11 19zm411.77 10.9a15.48 15.48 0 0 0 18.9-10.9l4-14.9a15.47 15.47 0 0 0-10.9-18.9l-26-7-56.7 32.73zm-44.9 141.1l-56.67-32.73 19 70.73a15.46 15.46 0 0 0 18.89 10.9l14.9-4a15.47 15.47 0 0 0 10.9-18.9zm63.9-94.3a15.48 15.48 0 0 0-18.9-10.9l-70.67 19 56.69 32.73 26-7a15.47 15.47 0 0 0 10.9-18.9zm-56.9-178.1a15.47 15.47 0 0 0-10.9-18.9l-14.9-4a15.45 15.45 0 0 0-18.9 10.9l-19 70.74 56.69-32.74zm-84.1-70.1a16.06 16.06 0 0 0-22.6 0L256 55.4v67.9l53.71-53.7a16.07 16.07 0 0 0 0-22.6zM256 386.7l-.16 67.94 19.66 19.66a16.06 16.06 0 0 0 22.6 0l11.3-11.3a16.07 16.07 0 0 0 0-22.6zm-106.3-351L138.34 47a1.21 1.21 0 0 0-.16.16 15.87 15.87 0 0 0 .16 22.44L192 123.3V55.4l-19.7-19.7a16.06 16.06 0 0 0-22.56 0z", "M446 365.05l-.09.15-15.47 26.8a15.42 15.42 0 0 1-21.06 5.72L256 309.2l-.2 185.8a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16l.1-185.7-153.25 88.5a15.51 15.51 0 0 1-21.1-5.7L2 365.3a15.51 15.51 0 0 1 5.7-21.1L162.16 255 7.87 165.8a15.43 15.43 0 0 1-5.73-21.06L17.67 118a15.41 15.41 0 0 1 21-5.72h.05L192 200.8V15a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16v185.8l153.3-88.5a15.51 15.51 0 0 1 21.1 5.7l15.5 26.8a15.51 15.51 0 0 1-5.7 21.1L285.85 255l154.49 89.2a15.29 15.29 0 0 1 5.66 20.85z"]]
};
exports.faSnowflakes = faSnowflakes;
var faSnowman = {
  prefix: 'fad',
  iconName: 'snowman',
  icon: [512, 512, [], "f7d0", ["M363.76 268.8a108.77 108.77 0 0 0 4.2-28.7v-.1a112.68 112.68 0 0 0-.73-12.8c-.11-1-.24-2-.38-3-.29-2-.62-4-1-6-.2-1-.4-1.95-.62-2.92-.22-1-.45-1.93-.7-2.9-.24-1-.5-1.91-.77-2.85-.27-.95-.55-1.89-.84-2.83-.3-.94-.6-1.87-.92-2.8-.32-.93-.65-1.86-1-2.77-.34-.92-.69-1.83-1.06-2.74-.36-.9-.74-1.8-1.13-2.7-.39-.89-.79-1.78-1.19-2.66-.41-.88-.83-1.76-1.26-2.63q-1.31-2.62-2.73-5.16c-.48-.85-1-1.68-1.46-2.51a112.44 112.44 0 0 0-21.62-26.19 96 96 0 1 0-149.16 0 112.49 112.49 0 0 0-21.68 26.28q-.74 1.23-1.44 2.49c-.48.84-.94 1.69-1.39 2.54-.45.85-.89 1.7-1.32 2.57-.43.87-.85 1.74-1.25 2.62-.41.88-.8 1.76-1.19 2.66-.39.89-.76 1.79-1.12 2.69-.36.91-.71 1.82-1.05 2.74-.34.92-.67 1.84-1 2.76a111.63 111.63 0 0 0-5.22 23.28A113 113 0 0 0 144 240h.06v.1a110.27 110.27 0 0 0 4.2 28.9A151.18 151.18 0 0 0 104 376.1c0 54 28.4 100.9 70.8 127.8 9.3 5.9 20.3 8.2 31.3 8.2h99.2a65.1 65.1 0 0 0 37.2-11.7c46.5-32.3 74.4-89.4 62.9-152.6-5.54-30.2-20.54-57.6-41.64-79zM224 96.1a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm32 272a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm0-64a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm1.7-64.1a15.19 15.19 0 0 1-3.48 0 16 16 0 1 1 3.48 0zm-1.7-87.9s-16-23.2-16-32a16 16 0 1 1 32 0c0 8.8-16 32-16 32zm32-56a16 16 0 1 1 16-16 16 16 0 0 1-16 16z", "M510.86 152.4L505 137.9a16.15 16.15 0 0 0-20.8-8.7L456 140.7v-29a15.84 15.84 0 0 0-16-15.6h-16a15.84 15.84 0 0 0-16 15.6v46.9c0 .5.3 1 .3 1.5l-56.1 22.54a111.21 111.21 0 0 1 15.07 44.56L502 172.7a15.57 15.57 0 0 0 8.86-20.3zm-407.1 6.2v-46.9c.2-8.6-7-15.6-15.8-15.6H72a15.84 15.84 0 0 0-16 15.6v29l-28.1-11.5a16.15 16.15 0 0 0-20.8 8.7l-5.9 14.5a15.48 15.48 0 0 0 8.9 20.3l134.67 54.49a111.3 111.3 0 0 1 15-44.46l-56.31-22.63a8 8 0 0 0 .3-1.5zM256 336.1a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm0-64a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm0-64a16 16 0 1 0 16 16 16 16 0 0 0-16-16z"]]
};
exports.faSnowman = faSnowman;
var faSnowmobile = {
  prefix: 'fad',
  iconName: 'snowmobile',
  icon: [640, 512, [], "f7d1", ["M240 0a48 48 0 1 0 48 48 48 48 0 0 0-48-48zm259.38 403.11l-7.27 4.89a48 48 0 0 1-26.61 8h-16.25L486 464h-54a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h114.7a88.18 88.18 0 0 0 52.8-17.6l34.1-25.6a16 16 0 0 0 3.2-22.4l-9.6-12.8a15.89 15.89 0 0 0-12.78-6.41 16.05 16.05 0 0 0-9.62 3.21L570.7 456a39.8 39.8 0 0 1-24 8h-.7zM288 448H32a32 32 0 0 0 0 64h256a32 32 0 0 0 0-64z", "M465.5 416a48 48 0 0 0 26.61-8l76.79-51.2a15.94 15.94 0 0 0 7.1-13.3V266a15.94 15.94 0 0 0-8.8-14.3L407.9 172l-41.5-83.1a16 16 0 0 0-28.7 14.3l35.6 71.2L360 192h-58.7L246 136.8a64 64 0 0 0-102.5 16.6l-29.8 59.7a63.27 63.27 0 0 0 13.4 75H96a31.87 31.87 0 0 0-28.6 17.7l-32 64C24.7 391 40.2 416 64 416zM288 288h-24.4l-67-33.5 25.6-51.1 33.9 33.9a63.66 63.66 0 0 0 45.2 18.8H312z"]]
};
exports.faSnowmobile = faSnowmobile;
var faSnowplow = {
  prefix: 'fad',
  iconName: 'snowplow',
  icon: [640, 512, [], "f7d2", ["M368 352a48 48 0 0 1 0 96H112a48 48 0 0 1 0-96h256m0-64H112a112 112 0 0 0 0 224h256a112 112 0 0 0 0-224z", "M120 376a23.94 23.94 0 1 0 .12 0zm80 0a23.94 23.94 0 1 0 .12 0zm160 0a23.94 23.94 0 1 0 .12 0zm-80 0a23.94 23.94 0 1 0 .12 0zm318.6 49.4a77.16 77.16 0 0 1-22.6-54.6V269.2a77.16 77.16 0 0 1 22.6-54.6l36.7-36.7a16.06 16.06 0 0 0 0-22.6l-22.6-22.6a16.06 16.06 0 0 0-22.6 0l-36.7 36.7a141.23 141.23 0 0 0-41.4 99.9V288h-64v-50.9a64.23 64.23 0 0 0-5.2-25.2L364.5 29.1A48 48 0 0 0 320.3 0H176a48 48 0 0 0-48 48v112h-16a48 48 0 0 0-48 48v90.78A111.63 111.63 0 0 1 112 288h256a112 112 0 0 1 101.22 64H512v18.7a141.23 141.23 0 0 0 41.4 99.9l36.7 36.7a16.06 16.06 0 0 0 22.6 0l22.6-22.6a16.06 16.06 0 0 0 0-22.6zM256 224l-64-64V64h117.8l68.6 160z"]]
};
exports.faSnowplow = faSnowplow;
var faSocks = {
  prefix: 'fad',
  iconName: 'socks',
  icon: [512, 512, [], "f696", ["M160 0a32 32 0 0 0-32 32v32h160V32a63.12 63.12 0 0 1 8-30.38C293.39.92 290.84 0 288 0zm-32 272l-86.65 64.6C2 366.15-12.52 421 12.13 463.65A96.77 96.77 0 0 0 96.07 512a95.62 95.62 0 0 0 57.52-19.2l21.86-16.39C145.6 421 161.91 350.55 214.65 311L288 256v-96H128zm0-144h160V96H128zm192-64v32h192V64zm0 96h192v-32H320z", "M288 64H128v32h160zm0 64H128v32h160zm32 144l-86.13 64.6C194.46 366.15 180 421 204.65 463.65a96 96 0 0 0 131 35.67 98 98 0 0 0 9.95-6.54l115.2-86.4A128 128 0 0 0 512 304V160H320zm0-144h192V96H320zM480 0H352a32 32 0 0 0-32 32v32h192V32a32 32 0 0 0-32-32z"]]
};
exports.faSocks = faSocks;
var faSolarPanel = {
  prefix: 'fad',
  iconName: 'solar-panel',
  icon: [640, 512, [], "f5ba", ["M585.2 26.74A32.42 32.42 0 0 0 553.06 0H86.93a32.42 32.42 0 0 0-32.14 26.74C-3.32 369.16 0 348.08 0 352c0 17.32 14.29 32 32.6 32h574.77c18.23 0 32.51-14.56 32.59-31.79.04-4.08 3.35 16.95-54.76-325.47zM259.83 64h120.33l9.77 96H250.06zm-75.17 256H71.09l19-112h106zM201 160H98.24l16.29-96h96.19zm32.82 160l11.4-112h149.6l11.4 112zM429.27 64h96.19l16.29 96H439zm26.06 256l-11.4-112h106l19 112z", "M432 448l-48 .05V416H256v32.21l-48 .05a16 16 0 0 0-16 16V496a16 16 0 0 0 16 16l224-.26a16 16 0 0 0 16-16V464a16 16 0 0 0-16-16zM380.16 64H259.83l-9.77 96h139.87zm161.59 96l-16.29-96h-96.19l9.73 96zm-146.93 48H245.17l-11.4 112h172.45zM90.1 208l-19 112h113.56l11.41-112zM210.72 64h-96.19l-16.29 96H201zM549.9 208h-106l11.4 112h113.61z"]]
};
exports.faSolarPanel = faSolarPanel;
var faSort = {
  prefix: 'fad',
  iconName: 'sort',
  icon: [320, 512, [], "f0dc", ["M279.05 288.05h-238c-21.4 0-32.07 25.95-17 41l119.1 119 .1.1a23.9 23.9 0 0 0 33.8-.1l119-119c15.1-15.05 4.4-41-17-41zm-238-64h238c21.4 0 32.1-25.9 17-41l-119-119a.94.94 0 0 0-.1-.1 23.9 23.9 0 0 0-33.8.1l-119.1 119c-15.05 15.1-4.4 41 17 41z", ""]]
};
exports.faSort = faSort;
var faSortAlphaDown = {
  prefix: 'fad',
  iconName: 'sort-alpha-down',
  icon: [448, 512, [], "f15d", ["M416 288H288a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h56l-61.26 70.45A32 32 0 0 0 272 446.37V464a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-56l61.26-70.45A32 32 0 0 0 432 321.63V304a16 16 0 0 0-16-16zm31.06-85.38l-59.27-160A16 16 0 0 0 372.72 32h-41.44a16 16 0 0 0-15.07 10.62l-59.27 160A16 16 0 0 0 272 224h24.83a16 16 0 0 0 15.23-11.08l4.42-12.92h71l4.41 12.92A16 16 0 0 0 407.16 224H432a16 16 0 0 0 15.06-21.38zM335.61 144L352 96l16.39 48z", "M176 352h-48V48a16 16 0 0 0-16-16H80a16 16 0 0 0-16 16v304H16c-14.19 0-21.36 17.24-11.29 27.31l80 96a16 16 0 0 0 22.62 0l80-96C197.35 369.26 190.22 352 176 352z"]]
};
exports.faSortAlphaDown = faSortAlphaDown;
var faSortAlphaDownAlt = {
  prefix: 'fad',
  iconName: 'sort-alpha-down-alt',
  icon: [448, 512, [], "f881", ["M288 224h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-56l61.26-70.45A32 32 0 0 0 432 65.63V48a16 16 0 0 0-16-16H288a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h56l-61.26 70.45A32 32 0 0 0 272 190.37V208a16 16 0 0 0 16 16zm159.06 234.62l-59.27-160A16 16 0 0 0 372.72 288h-41.44a16 16 0 0 0-15.07 10.62l-59.27 160A16 16 0 0 0 272 480h24.83a16 16 0 0 0 15.23-11.08l4.42-12.92h71l4.41 12.92A16 16 0 0 0 407.16 480H432a16 16 0 0 0 15.06-21.38zM335.61 400L352 352l16.39 48z", "M176 352h-48V48a16 16 0 0 0-16-16H80a16 16 0 0 0-16 16v304H16c-14.19 0-21.36 17.24-11.29 27.31l80 96a16 16 0 0 0 22.62 0l80-96C197.35 369.26 190.22 352 176 352z"]]
};
exports.faSortAlphaDownAlt = faSortAlphaDownAlt;
var faSortAlphaUp = {
  prefix: 'fad',
  iconName: 'sort-alpha-up',
  icon: [448, 512, [], "f15e", ["M416 288H288a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h56l-61.26 70.45A32 32 0 0 0 272 446.37V464a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-56l61.26-70.45A32 32 0 0 0 432 321.63V304a16 16 0 0 0-16-16zm31.06-85.38l-59.27-160A16 16 0 0 0 372.72 32h-41.44a16 16 0 0 0-15.07 10.62l-59.27 160A16 16 0 0 0 272 224h24.83a16 16 0 0 0 15.23-11.08l4.42-12.92h71l4.41 12.92A16 16 0 0 0 407.16 224H432a16 16 0 0 0 15.06-21.38zM335.61 144L352 96l16.39 48z", "M16 160h48v304a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V160h48c14.21 0 21.38-17.24 11.31-27.31l-80-96a16 16 0 0 0-22.62 0l-80 96C-5.35 142.74 1.78 160 16 160z"]]
};
exports.faSortAlphaUp = faSortAlphaUp;
var faSortAlphaUpAlt = {
  prefix: 'fad',
  iconName: 'sort-alpha-up-alt',
  icon: [448, 512, [], "f882", ["M288 224h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-56l61.26-70.45A32 32 0 0 0 432 65.63V48a16 16 0 0 0-16-16H288a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h56l-61.26 70.45A32 32 0 0 0 272 190.37V208a16 16 0 0 0 16 16zm159.06 234.62l-59.27-160A16 16 0 0 0 372.72 288h-41.44a16 16 0 0 0-15.07 10.62l-59.27 160A16 16 0 0 0 272 480h24.83a16 16 0 0 0 15.23-11.08l4.42-12.92h71l4.41 12.92A16 16 0 0 0 407.16 480H432a16 16 0 0 0 15.06-21.38zM335.61 400L352 352l16.39 48z", "M16 160h48v304a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V160h48c14.21 0 21.38-17.24 11.31-27.31l-80-96a16 16 0 0 0-22.62 0l-80 96C-5.35 142.74 1.78 160 16 160z"]]
};
exports.faSortAlphaUpAlt = faSortAlphaUpAlt;
var faSortAlt = {
  prefix: 'fad',
  iconName: 'sort-alt',
  icon: [384, 512, [], "f883", ["M379.29 132.69l-80-96a16 16 0 0 0-22.62 0l-80 96C186.65 142.74 193.78 160 208 160h48v304a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V160h48c14.19 0 21.36-17.24 11.29-27.31z", "M176 352h-48V48a16 16 0 0 0-16-16H80a16 16 0 0 0-16 16v304H16c-14.19 0-21.36 17.24-11.29 27.31l80 96a16 16 0 0 0 22.62 0l80-96C197.35 369.26 190.22 352 176 352z"]]
};
exports.faSortAlt = faSortAlt;
var faSortAmountDown = {
  prefix: 'fad',
  iconName: 'sort-amount-down',
  icon: [512, 512, [], "f160", ["M304 416h-64a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm128-256H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h192a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-64 128H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM496 32H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h256a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z", "M176 352h-48V48a16 16 0 0 0-16-16H80a16 16 0 0 0-16 16v304H16c-14.19 0-21.37 17.24-11.29 27.31l80 96a16 16 0 0 0 22.62 0l80-96C197.35 369.26 190.22 352 176 352z"]]
};
exports.faSortAmountDown = faSortAmountDown;
var faSortAmountDownAlt = {
  prefix: 'fad',
  iconName: 'sort-amount-down-alt',
  icon: [512, 512, [], "f884", ["M240 96h64a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16h-64a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm0 128h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm256 192H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h256a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-256-64h192a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16z", "M176 352h-48V48a16 16 0 0 0-16-16H80a16 16 0 0 0-16 16v304H16c-14.19 0-21.37 17.24-11.29 27.31l80 96a16 16 0 0 0 22.62 0l80-96C197.35 369.26 190.22 352 176 352z"]]
};
exports.faSortAmountDownAlt = faSortAmountDownAlt;
var faSortAmountUp = {
  prefix: 'fad',
  iconName: 'sort-amount-up',
  icon: [512, 512, [], "f161", ["M304 416h-64a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm128-256H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h192a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-64 128H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM496 32H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h256a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z", "M16 160h48v304a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V160h48c14.21 0 21.38-17.24 11.31-27.31l-80-96a16 16 0 0 0-22.62 0l-80 96C-5.35 142.74 1.77 160 16 160z"]]
};
exports.faSortAmountUp = faSortAmountUp;
var faSortAmountUpAlt = {
  prefix: 'fad',
  iconName: 'sort-amount-up-alt',
  icon: [512, 512, [], "f885", ["M240 96h64a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16h-64a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm0 128h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm256 192H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h256a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-256-64h192a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16z", "M16 160h48v304a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V160h48c14.21 0 21.39-17.24 11.31-27.31l-80-96a16 16 0 0 0-22.62 0l-80 96C-5.35 142.74 1.78 160 16 160z"]]
};
exports.faSortAmountUpAlt = faSortAmountUpAlt;
var faSortDown = {
  prefix: 'fad',
  iconName: 'sort-down',
  icon: [320, 512, [], "f0dd", ["M279.07 224.05h-238c-21.4 0-32.1-25.9-17-41l119-119a23.9 23.9 0 0 1 33.8-.1l.1.1 119.1 119c15.07 15.05 4.4 41-17 41z", "M296.07 329.05L177 448.05a23.9 23.9 0 0 1-33.8.1l-.1-.1-119-119c-15.1-15.1-4.4-41 17-41h238c21.37 0 32.04 25.95 16.97 41z"]]
};
exports.faSortDown = faSortDown;
var faSortNumericDown = {
  prefix: 'fad',
  iconName: 'sort-numeric-down',
  icon: [448, 512, [], "f162", ["M304 96h16v64h-16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h96a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-16V48a16 16 0 0 0-16-16h-48a16 16 0 0 0-14.29 8.83l-16 32A16 16 0 0 0 304 96zm26.15 162.91a79 79 0 0 0-55 54.17c-14.25 51.05 21.21 97.77 68.85 102.53a84.07 84.07 0 0 1-20.85 12.91c-7.57 3.4-10.8 12.47-8.18 20.34l9.9 20c2.87 8.63 12.53 13.49 20.9 9.91 58-24.76 86.25-61.61 86.25-132V336c-.02-51.21-48.4-91.34-101.85-77.09zM352 356a20 20 0 1 1 20-20 20 20 0 0 1-20 20z", "M176 352h-48V48a16 16 0 0 0-16-16H80a16 16 0 0 0-16 16v304H16c-14.19 0-21.36 17.24-11.29 27.31l80 96a16 16 0 0 0 22.62 0l80-96C197.35 369.26 190.22 352 176 352z"]]
};
exports.faSortNumericDown = faSortNumericDown;
var faSortNumericDownAlt = {
  prefix: 'fad',
  iconName: 'sort-numeric-down-alt',
  icon: [448, 512, [], "f886", ["M400 416h-16V304a16 16 0 0 0-16-16h-48a16 16 0 0 0-14.29 8.83l-16 32A16 16 0 0 0 304 352h16v64h-16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h96a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM330.17 34.91a79 79 0 0 0-55 54.17c-14.27 51.05 21.19 97.77 68.83 102.53a84.07 84.07 0 0 1-20.85 12.91c-7.57 3.4-10.8 12.47-8.18 20.34l9.9 20c2.87 8.63 12.53 13.49 20.9 9.91 58-24.77 86.25-61.61 86.25-132V112c-.02-51.21-48.4-91.34-101.85-77.09zM352 132a20 20 0 1 1 20-20 20 20 0 0 1-20 20z", "M176 352h-48V48a16 16 0 0 0-16-16H80a16 16 0 0 0-16 16v304H16c-14.19 0-21.36 17.24-11.29 27.31l80 96a16 16 0 0 0 22.62 0l80-96C197.35 369.26 190.22 352 176 352z"]]
};
exports.faSortNumericDownAlt = faSortNumericDownAlt;
var faSortNumericUp = {
  prefix: 'fad',
  iconName: 'sort-numeric-up',
  icon: [448, 512, [], "f163", ["M330.17 258.91a79 79 0 0 0-55 54.17c-14.27 51.05 21.19 97.77 68.83 102.53a84.07 84.07 0 0 1-20.85 12.91c-7.57 3.4-10.8 12.47-8.18 20.34l9.9 20c2.87 8.63 12.53 13.49 20.9 9.91 58-24.76 86.25-61.61 86.25-132V336c-.02-51.21-48.4-91.34-101.85-77.09zM352 356a20 20 0 1 1 20-20 20 20 0 0 1-20 20zM304 96h16v64h-16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h96a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-16V48a16 16 0 0 0-16-16h-48a16 16 0 0 0-14.29 8.83l-16 32A16 16 0 0 0 304 96z", "M107.31 36.69a16 16 0 0 0-22.62 0l-80 96C-5.35 142.74 1.78 160 16 160h48v304a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V160h48c14.21 0 21.38-17.24 11.31-27.31z"]]
};
exports.faSortNumericUp = faSortNumericUp;
var faSortNumericUpAlt = {
  prefix: 'fad',
  iconName: 'sort-numeric-up-alt',
  icon: [448, 512, [], "f887", ["M400 416h-16V304a16 16 0 0 0-16-16h-48a16 16 0 0 0-14.29 8.83l-16 32A16 16 0 0 0 304 352h16v64h-16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h96a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM330.17 34.91a79 79 0 0 0-55 54.17c-14.27 51.05 21.19 97.77 68.83 102.53a84.07 84.07 0 0 1-20.85 12.91c-7.57 3.4-10.8 12.47-8.18 20.34l9.9 20c2.87 8.63 12.53 13.49 20.9 9.91 58-24.77 86.25-61.61 86.25-132V112c-.02-51.21-48.4-91.34-101.85-77.09zM352 132a20 20 0 1 1 20-20 20 20 0 0 1-20 20z", "M107.31 36.69a16 16 0 0 0-22.62 0l-80 96C-5.35 142.74 1.78 160 16 160h48v304a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V160h48c14.21 0 21.38-17.24 11.31-27.31z"]]
};
exports.faSortNumericUpAlt = faSortNumericUpAlt;
var faSortShapesDown = {
  prefix: 'fad',
  iconName: 'sort-shapes-down',
  icon: [448, 512, [], "f888", ["M444.1 182.86L361 45.71c-11.09-18.28-38.81-18.28-49.9 0l-83.2 137.15c-11.08 18.28 2.77 41.14 24.95 41.14h166.3c22.18 0 36.03-22.86 24.95-41.14zM408 288H264a24 24 0 0 0-24 24v144a24 24 0 0 0 24 24h144a24 24 0 0 0 24-24V312a24 24 0 0 0-24-24z", "M176 352h-48V48a16 16 0 0 0-16-16H80a16 16 0 0 0-16 16v304H16c-14.19 0-21.36 17.24-11.29 27.31l80 96a16 16 0 0 0 22.62 0l80-96C197.35 369.26 190.22 352 176 352z"]]
};
exports.faSortShapesDown = faSortShapesDown;
var faSortShapesDownAlt = {
  prefix: 'fad',
  iconName: 'sort-shapes-down-alt',
  icon: [448, 512, [], "f889", ["M444.1 438.86L361 301.71c-11.09-18.28-38.81-18.28-49.9 0l-83.2 137.15c-11.08 18.28 2.77 41.14 24.95 41.14h166.3c22.18 0 36.03-22.86 24.95-41.14zM264 224h144a24 24 0 0 0 24-24V56a24 24 0 0 0-24-24H264a24 24 0 0 0-24 24v144a24 24 0 0 0 24 24z", "M176 352h-48V48a16 16 0 0 0-16-16H80a16 16 0 0 0-16 16v304H16c-14.19 0-21.36 17.24-11.29 27.31l80 96a16 16 0 0 0 22.62 0l80-96C197.35 369.26 190.22 352 176 352z"]]
};
exports.faSortShapesDownAlt = faSortShapesDownAlt;
var faSortShapesUp = {
  prefix: 'fad',
  iconName: 'sort-shapes-up',
  icon: [448, 512, [], "f88a", ["M444.1 182.86L361 45.71c-11.09-18.28-38.81-18.28-49.9 0l-83.2 137.15c-11.08 18.28 2.77 41.14 24.95 41.14h166.3c22.18 0 36.03-22.86 24.95-41.14zM408 288H264a24 24 0 0 0-24 24v144a24 24 0 0 0 24 24h144a24 24 0 0 0 24-24V312a24 24 0 0 0-24-24z", "M107.31 36.69a16 16 0 0 0-22.62 0l-80 96C-5.35 142.74 1.78 160 16 160h48v304a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V160h48c14.21 0 21.39-17.24 11.31-27.31z"]]
};
exports.faSortShapesUp = faSortShapesUp;
var faSortShapesUpAlt = {
  prefix: 'fad',
  iconName: 'sort-shapes-up-alt',
  icon: [448, 512, [], "f88b", ["M444.1 438.86L361 301.71c-11.09-18.28-38.81-18.28-49.9 0l-83.2 137.15c-11.08 18.28 2.77 41.14 24.95 41.14h166.3c22.18 0 36.03-22.86 24.95-41.14zM264 224h144a24 24 0 0 0 24-24V56a24 24 0 0 0-24-24H264a24 24 0 0 0-24 24v144a24 24 0 0 0 24 24z", "M107.31 36.69a16 16 0 0 0-22.62 0l-80 96C-5.35 142.74 1.78 160 16 160h48v304a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V160h48c14.21 0 21.39-17.24 11.31-27.31z"]]
};
exports.faSortShapesUpAlt = faSortShapesUpAlt;
var faSortSizeDown = {
  prefix: 'fad',
  iconName: 'sort-size-down',
  icon: [512, 512, [], "f88c", ["M428 320H276a20 20 0 0 0-20 20v120a20 20 0 0 0 20 20h152a20 20 0 0 0 20-20V340a20 20 0 0 0-20-20zm56-288H284a28 28 0 0 0-28 28v168a28 28 0 0 0 28 28h200a28 28 0 0 0 28-28V60a28 28 0 0 0-28-28z", "M176 352h-48V48a16 16 0 0 0-16-16H80a16 16 0 0 0-16 16v304H16c-14.19 0-21.37 17.24-11.29 27.31l80 96a16 16 0 0 0 22.62 0l80-96C197.35 369.26 190.22 352 176 352z"]]
};
exports.faSortSizeDown = faSortSizeDown;
var faSortSizeDownAlt = {
  prefix: 'fad',
  iconName: 'sort-size-down-alt',
  icon: [512, 512, [], "f88d", ["M275.9 192h152.2a20 20 0 0 0 19.9-20V52a20 20 0 0 0-19.9-20H275.9A20 20 0 0 0 256 52v120a20 20 0 0 0 19.9 20zM484 256H284a28 28 0 0 0-28 28v168a28 28 0 0 0 28 28h200a28 28 0 0 0 28-28V284a28 28 0 0 0-28-28z", "M176 352h-48V48a16 16 0 0 0-16-16H80a16 16 0 0 0-16 16v304H16c-14.19 0-21.37 17.24-11.29 27.31l80 96a16 16 0 0 0 22.62 0l80-96C197.35 369.26 190.22 352 176 352z"]]
};
exports.faSortSizeDownAlt = faSortSizeDownAlt;
var faSortSizeUp = {
  prefix: 'fad',
  iconName: 'sort-size-up',
  icon: [512, 512, [], "f88e", ["M484 32H284a28 28 0 0 0-28 28v168a28 28 0 0 0 28 28h200a28 28 0 0 0 28-28V60a28 28 0 0 0-28-28zm-56 288H276a20 20 0 0 0-20 20v120a20 20 0 0 0 20 20h152a20 20 0 0 0 20-20V340a20 20 0 0 0-20-20z", "M107.31 36.69a16 16 0 0 0-22.62 0l-80 96C-5.35 142.74 1.77 160 16 160h48v304a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V160h48c14.21 0 21.38-17.24 11.31-27.31z"]]
};
exports.faSortSizeUp = faSortSizeUp;
var faSortSizeUpAlt = {
  prefix: 'fad',
  iconName: 'sort-size-up-alt',
  icon: [512, 512, [], "f88f", ["M276 192h152a20 20 0 0 0 20-20V52a20 20 0 0 0-20-20H276a20 20 0 0 0-20 20v120a20 20 0 0 0 20 20zm208 64H284a28 28 0 0 0-28 28v168a28 28 0 0 0 28 28h200a28 28 0 0 0 28-28V284a28 28 0 0 0-28-28z", "M107.31 36.69a16 16 0 0 0-22.62 0l-80 96C-5.35 142.74 1.77 160 16 160h48v304a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V160h48c14.21 0 21.38-17.24 11.31-27.31z"]]
};
exports.faSortSizeUpAlt = faSortSizeUpAlt;
var faSortUp = {
  prefix: 'fad',
  iconName: 'sort-up',
  icon: [320, 512, [], "f0de", ["M41.05 288.05h238c21.4 0 32.1 25.9 17 41l-119 119a23.9 23.9 0 0 1-33.8.1l-.1-.1-119.1-119c-15.05-15.05-4.4-41 17-41z", "M24.05 183.05l119.1-119A23.9 23.9 0 0 1 177 64a.94.94 0 0 1 .1.1l119 119c15.1 15.1 4.4 41-17 41h-238c-21.45-.05-32.1-25.95-17.05-41.05z"]]
};
exports.faSortUp = faSortUp;
var faSoup = {
  prefix: 'fad',
  iconName: 'soup',
  icon: [512, 512, [], "f823", ["M203.31 67.3a94.84 94.84 0 0 1-26.4-53.5A16.12 16.12 0 0 0 160.81 0h-16.4A16.32 16.32 0 0 0 128 16.23a17.48 17.48 0 0 0 .09 1.77 145.37 145.37 0 0 0 40.6 84.4 81.21 81.21 0 0 1 22.4 44.1 16.23 16.23 0 0 0 16 13.5h16.5c9.8 0 17.6-8.5 16.3-18a130.71 130.71 0 0 0-36.58-74.7zm148.6 74.7a130.71 130.71 0 0 0-36.6-74.7 94.84 94.84 0 0 1-26.4-53.5A16.12 16.12 0 0 0 272.76 0h-16.4c-9.8 0-17.5 8.5-16.3 18a145.37 145.37 0 0 0 40.6 84.4 81.21 81.21 0 0 1 22.4 44.1h.05a16.23 16.23 0 0 0 16 13.5h16.5c9.8 0 17.6-8.5 16.3-18z", "M32 192h448a32 32 0 0 1 32 32c0 94.7-51.56 177.16-128 221.45V480a32 32 0 0 1-32 32H160a32 32 0 0 1-32-32v-34.55C51.56 401.16 0 318.7 0 224a32 32 0 0 1 32-32z"]]
};
exports.faSoup = faSoup;
var faSpa = {
  prefix: 'fad',
  iconName: 'spa',
  icon: [576, 512, [], "f5bb", ["M392.33 206.91a298.84 298.84 0 0 0-60.26 45.17A275.45 275.45 0 0 0 288 302.6a282.66 282.66 0 0 0-45-51.45 294 294 0 0 0-59.22-44.39c16.47-70.45 51.75-132.94 96.74-172.07a12 12 0 0 1 15.14 0c44.95 39.16 80.23 101.72 96.67 172.22z", "M576 199.82c-.23 27.92-7.13 126.14-88.77 199.3C403.19 481 320 480 288 480s-115.21 1-199.23-80.88C7.14 326 .23 227.74 0 199.82A7.6 7.6 0 0 1 7.75 192c29 .13 135 6.16 213.84 83 33.12 29.64 53.41 63.3 66.41 94.86 13.05-31.56 33.29-65.22 66.41-94.85 78.83-76.84 184.8-82.87 213.84-83a7.6 7.6 0 0 1 7.75 7.81z"]]
};
exports.faSpa = faSpa;
var faSpaceShuttle = {
  prefix: 'fad',
  iconName: 'space-shuttle',
  icon: [640, 512, [], "f197", ["M32 416c0 35.35 21.49 64 48 64h16V352H32zm154.54-232h280.13L376 168C243 140.59 222.45 51.22 128 34.65V160h18.34a45.62 45.62 0 0 1 40.2 24zM32 96v64h64V32H80c-26.51 0-48 28.65-48 64zm114.34 256H128v125.35C222.45 460.78 243 371.41 376 344l90.67-16H186.54a45.62 45.62 0 0 1-40.2 24z", "M592.6 208.24C559.73 192.84 515.78 184 472 184H186.54a45.62 45.62 0 0 0-40.2-24H32c-23.2 0-32 10-32 24v144c0 14 8.82 24 32 24h114.34a45.62 45.62 0 0 0 40.2-24H472c43.78 0 87.73-8.84 120.6-24.24C622.28 289.84 640 272 640 256s-17.72-33.84-47.4-47.76zM488 296a8 8 0 0 1-8-8v-64a8 8 0 0 1 8-8c31.91 0 31.94 80 0 80z"]]
};
exports.faSpaceShuttle = faSpaceShuttle;
var faSpade = {
  prefix: 'fad',
  iconName: 'spade',
  icon: [512, 512, [], "f2f4", ["M462.3 387.76c-50.48 39.95-123.38 36-173.87-2.43-.21-3.22-.41-6.44-.43-10V272.14a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v103.15c0 3.57-.2 6.78-.4 10-50.54 38.53-123.41 42.46-173.93 2.49C-13.1 338-16.41 248.58 39.9 194.61L233.4 9a33 33 0 0 1 45.28 0l193.5 185.62c56.21 53.96 52.9 143.38-9.88 193.14z", "M367.31 486.6A32 32 0 0 1 336 512H176a32 32 0 0 1-13-61.29c52.19-23.21 60.91-38.91 61-75.61V272a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16v103.1c.19 37.5 9.41 52.61 61 75.61a32.08 32.08 0 0 1 18.31 35.89z"]]
};
exports.faSpade = faSpade;
var faSparkles = {
  prefix: 'fad',
  iconName: 'sparkles',
  icon: [512, 512, [], "f890", ["M423.16 186.58L448 127l59.58-24.84a8 8 0 0 0 0-14.32L448 63 423.16 3.42a8 8 0 0 0-14.32 0L384 63l-59.58 24.84a8 8 0 0 0 0 14.32L384 127l24.84 59.58a8 8 0 0 0 14.32 0zm-14.32 136.84L384 383l-59.58 24.84a8 8 0 0 0 0 14.32L384 447l24.84 59.58a8 8 0 0 0 14.32 0L448 447l59.58-24.84a8 8 0 0 0 0-14.32L448 383l-24.84-59.58a8 8 0 0 0-14.32 0z", "M384 254.64a16.06 16.06 0 0 0-8.84-14.33l-112.57-56.39-56.28-112.77c-5.44-10.87-23.19-10.87-28.62 0l-56.28 112.77L8.84 240.31a16 16 0 0 0 0 28.67l112.57 56.39 56.28 112.77a16 16 0 0 0 28.62 0l56.28-112.77L375.16 269a16.07 16.07 0 0 0 8.84-14.36z"]]
};
exports.faSparkles = faSparkles;
var faSpeaker = {
  prefix: 'fad',
  iconName: 'speaker',
  icon: [384, 512, [], "f8df", ["M336 0H48A48 48 0 0 0 0 48v416a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V48a48 48 0 0 0-48-48zM192 64a48 48 0 1 1-48 48 48 48 0 0 1 48-48zm0 384a112 112 0 1 1 112-112 112 112 0 0 1-112 112z", "M192 224a112 112 0 1 0 112 112 112 112 0 0 0-112-112zm0 176a64 64 0 1 1 64-64 64 64 0 0 1-64 64zm0-240a48 48 0 1 0-48-48 48 48 0 0 0 48 48z"]]
};
exports.faSpeaker = faSpeaker;
var faSpeakers = {
  prefix: 'fad',
  iconName: 'speakers',
  icon: [640, 512, [], "f8e0", ["M176 224a111.51 111.51 0 0 1 80 33.78V48a79.24 79.24 0 0 1 16.41-48H48A48 48 0 0 0 0 48v416a48 48 0 0 0 48 48h224.41A79.24 79.24 0 0 1 256 464v-49.78A112 112 0 1 1 176 224zm0-160a48 48 0 1 1-48 48 48 48 0 0 1 48-48zM592 0H336a48 48 0 0 0-48 48v416a48 48 0 0 0 48 48h256a48 48 0 0 0 48-48V48a48 48 0 0 0-48-48zM464 64a48 48 0 1 1-48 48 48 48 0 0 1 48-48zm0 384a112 112 0 1 1 112-112 112 112 0 0 1-112 112z", "M64 336a111.89 111.89 0 0 0 192 78.22V257.78A111.89 111.89 0 0 0 64 336zm176 0a64 64 0 1 1-64-64 64 64 0 0 1 64 64zm224-112a112 112 0 1 0 112 112 112 112 0 0 0-112-112zm0 176a64 64 0 1 1 64-64 64 64 0 0 1-64 64zm0-240a48 48 0 1 0-48-48 48 48 0 0 0 48 48zm-288 0a48 48 0 1 0-48-48 48 48 0 0 0 48 48z"]]
};
exports.faSpeakers = faSpeakers;
var faSpellCheck = {
  prefix: 'fad',
  iconName: 'spell-check',
  icon: [576, 512, [], "f891", ["M571.35 276.48l-45.21-45.3a15.88 15.88 0 0 0-22.59 0l-151.5 151.5-55.41-55.5a15.88 15.88 0 0 0-22.59 0l-45.3 45.3a16 16 0 0 0 0 22.59l112 112.21a15.89 15.89 0 0 0 22.6 0l208-208.21a16 16 0 0 0 0-22.59z", "M272 256h91.36c43.2 0 82-32.2 84.51-75.34a79.82 79.82 0 0 0-25.26-63.07 79.81 79.81 0 0 0 9.06-44.91C427.9 30.57 389.3 0 347 0h-75a16 16 0 0 0-16 16v224a16 16 0 0 0 16 16zm40-200h40a24 24 0 0 1 0 48h-40zm0 96h56a24 24 0 0 1 0 48h-56zM155.12 22.25A32 32 0 0 0 124.64 0H99.36a32 32 0 0 0-30.48 22.25L.59 235.73A16 16 0 0 0 16 256h24.93a16 16 0 0 0 15.42-11.73L68.29 208h87.42l11.94 36.27A16 16 0 0 0 183.07 256H208a16 16 0 0 0 15.42-20.27zM89.37 144L112 75.3l22.63 68.7z"]]
};
exports.faSpellCheck = faSpellCheck;
var faSpider = {
  prefix: 'fad',
  iconName: 'spider',
  icon: [576, 512, [], "f717", ["M453.71 88.63L427.82 11A16 16 0 0 0 407.58.83l-15.17 5.06a16 16 0 0 0-10.12 20.24l23.8 71.39-20.29 40.58a99.35 99.35 0 0 1 3.2 11.79l5.23 26.11h4.67l25.93-8.65L452 113.06a32 32 0 0 0 1.71-24.43zM183.59 5.89L168.42.83A16 16 0 0 0 148.18 11l-25.89 77.63a32 32 0 0 0 1.71 24.43l27.15 54.3L177.1 176h4.67l5.23-26.11a99.35 99.35 0 0 1 3.21-11.79l-20.3-40.58 23.8-71.39a16 16 0 0 0-10.12-20.24z", "M573.31 349.39a16 16 0 0 1-4.44 22.18l-13.31 8.88a16 16 0 0 1-22.19-4.45l-48-72h-47.06l60.83 97.33a32.05 32.05 0 0 1 4.86 17V496a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-73.1l-74.08-118.53c1 14.05 2.08 28.11 2.08 42.21C384 399.65 343.24 448 288 448s-96-48.36-96-101.43c0-14.1 1.07-28.16 2.08-42.21L120 422.9V496a16 16 0 0 1-16 16H88a16 16 0 0 1-16-16v-77.7a32 32 0 0 1 4.86-17l60.83-97.3H90.63l-48 72a16 16 0 0 1-22.19 4.44l-13.31-8.86a16 16 0 0 1-4.44-22.19l52.74-79.13A32 32 0 0 1 82.06 256H160l-69-24.34a32 32 0 0 1-16.5-12.61l-53.6-80.41a16 16 0 0 1 4.44-22.19l13.31-8.88A16 16 0 0 1 60.84 112l50.57 75.83L171.9 208H208l10.37-51.85C220.56 145.19 235.74 96 288 96s67.44 49.18 69.63 60.15L368 208h36.1l60.5-20.17L515.16 112a16 16 0 0 1 22.19-4.44l13.31 8.88a16 16 0 0 1 4.44 22.19l-53.6 80.41a32 32 0 0 1-16.5 12.62L416 256h77.94a32 32 0 0 1 26.62 14.25z"]]
};
exports.faSpider = faSpider;
var faSpiderBlackWidow = {
  prefix: 'fad',
  iconName: 'spider-black-widow',
  icon: [576, 512, [], "f718", ["M320 272h-64a8 8 0 0 0-6.4 12.8L276 320l-26.4 35.2A8 8 0 0 0 256 368h64a8 8 0 0 0 6.4-12.8L300 320l26.4-35.2A8 8 0 0 0 320 272zM183.59 5.89L168.42.83A16 16 0 0 0 148.18 11l-25.89 77.63a32 32 0 0 0 1.71 24.43l27.15 54.3L177.1 176h4.67l5.23-26.11a99.35 99.35 0 0 1 3.21-11.79l-20.3-40.58 23.8-71.39a16 16 0 0 0-10.12-20.24zm270.12 82.75L427.82 11A16 16 0 0 0 407.58.84L392.41 5.9a16 16 0 0 0-10.12 20.24l23.8 71.38-20.29 40.58a97.47 97.47 0 0 1 3.2 11.79l5.23 26.11h4.67l25.93-8.64L452 113.07a32 32 0 0 0 1.71-24.43z", "M573.31 349.38l-52.75-79.12A32 32 0 0 0 493.94 256H416l69-24.35a32 32 0 0 0 16.51-12.61l53.6-80.41a16 16 0 0 0-4.44-22.19l-13.31-8.88a16 16 0 0 0-22.2 4.44l-50.57 75.83L404.1 208H368l-10.37-51.85C355.44 145.19 340.26 96 288 96s-67.44 49.18-69.63 60.15L208 208h-36.1l-60.5-20.18L60.84 112a16 16 0 0 0-22.19-4.44l-13.31 8.88a16 16 0 0 0-4.44 22.19L74.5 219A32 32 0 0 0 91 231.65L160 256H82.07a32 32 0 0 0-26.63 14.25L2.69 349.38a16 16 0 0 0 4.44 22.19l13.31 8.88A16 16 0 0 0 42.63 376l48-72h47.06l-60.83 97.34a32.05 32.05 0 0 0-4.86 17V496a16 16 0 0 0 16 16h16a16 16 0 0 0 16-16v-73.1l74.08-118.53c-1 14.05-2.08 28.11-2.08 42.21C192 399.65 232.76 448 288 448s96-48.36 96-101.43c0-14.1-1.07-28.16-2.08-42.21L456 422.9V496a16 16 0 0 0 16 16h16a16 16 0 0 0 16-16v-77.7a32.05 32.05 0 0 0-4.86-17L438.31 304h47.06l48 72a16 16 0 0 0 22.19 4.44l13.31-8.88a16 16 0 0 0 4.44-22.18zm-246.91 5.83A8 8 0 0 1 320 368h-64a8 8 0 0 1-6.4-12.8L276 320l-26.4-35.2A8 8 0 0 1 256 272h64a8 8 0 0 1 6.4 12.8L300 320z"]]
};
exports.faSpiderBlackWidow = faSpiderBlackWidow;
var faSpiderWeb = {
  prefix: 'fad',
  iconName: 'spider-web',
  icon: [576, 512, [], "f719", ["M544 280.13H329.36l107.48 188.18-41.68 23.82L288 304.51 180.84 492.13l-41.68-23.82 107.48-188.18H32v-48h214.64L139.16 43.93l41.68-23.83L288 207.72 395.16 20.1l41.68 23.83-107.48 188.18H544z", "M566.63 233.48l-2.79-2.79A444.29 444.29 0 0 1 447.07 24.37v-.12A32 32 0 0 0 408.24 1a497.38 497.38 0 0 1-240.48 0A32 32 0 0 0 129 24.25v.12A444.29 444.29 0 0 1 12.16 230.69l-2.79 2.79a32 32 0 0 0 0 45.28l2.87 2.87A444.25 444.25 0 0 1 129 487.76 32 32 0 0 0 167.76 511a497.14 497.14 0 0 1 240.48 0A32 32 0 0 0 447 487.76a444.25 444.25 0 0 1 116.76-206.13l2.87-2.87a32 32 0 0 0 0-45.28zM393.45 442.23a562.64 562.64 0 0 0-210.9 0A508.29 508.29 0 0 0 76.22 256.11 508.49 508.49 0 0 0 182.58 69.76a562 562 0 0 0 210.84 0 508.49 508.49 0 0 0 106.36 186.35 508.29 508.29 0 0 0-106.33 186.12zm-23.31-328.86a24 24 0 0 0-18.21-2.72 264.41 264.41 0 0 1-127.86 0A24.05 24.05 0 0 0 195 128.18a235.55 235.55 0 0 1-62 109.39l-1.52 1.52a24 24 0 0 0 0 34l1.56 1.57A235.49 235.49 0 0 1 195 383.89a24 24 0 0 0 29.1 17.46 264.41 264.41 0 0 1 127.86 0A24 24 0 0 0 381 383.89a235.49 235.49 0 0 1 61.88-109.28l1.56-1.57a24 24 0 0 0 0-34l-1.44-1.48a235.47 235.47 0 0 1-61.94-109.36 24.06 24.06 0 0 0-10.92-14.83zM341 350a313.11 313.11 0 0 0-106 0 283.59 283.59 0 0 0-53.66-93.94A283.53 283.53 0 0 0 235 162a313.27 313.27 0 0 0 106 0 283.51 283.51 0 0 0 53.68 94.07A283.59 283.59 0 0 0 341 350z"]]
};
exports.faSpiderWeb = faSpiderWeb;
var faSpinner = {
  prefix: 'fad',
  iconName: 'spinner',
  icon: [512, 512, [], "f110", ["M108.92 355.08a48 48 0 1 0 48 48 48 48 0 0 0-48-48zM256 416a48 48 0 1 0 48 48 48 48 0 0 0-48-48zm208-208a48 48 0 1 0 48 48 48 48 0 0 0-48-48zm-60.92 147.08a48 48 0 1 0 48 48 48 48 0 0 0-48-48zm0-198.16a48 48 0 1 0-48-48 48 48 0 0 0 48 48z", "M108.92 60.92a48 48 0 1 0 48 48 48 48 0 0 0-48-48zM48 208a48 48 0 1 0 48 48 48 48 0 0 0-48-48zM256 0a48 48 0 1 0 48 48 48 48 0 0 0-48-48z"]]
};
exports.faSpinner = faSpinner;
var faSpinnerThird = {
  prefix: 'fad',
  iconName: 'spinner-third',
  icon: [512, 512, [], "f3f4", ["M478.71 364.58zm-22 6.11l-27.83-15.9a15.92 15.92 0 0 1-6.94-19.2A184 184 0 1 1 256 72c5.89 0 11.71.29 17.46.83-.74-.07-1.48-.15-2.23-.21-8.49-.69-15.23-7.31-15.23-15.83v-32a16 16 0 0 1 15.34-16C266.24 8.46 261.18 8 256 8 119 8 8 119 8 256s111 248 248 248c98 0 182.42-56.95 222.71-139.42-4.13 7.86-14.23 10.55-22 6.11z", "M271.23 72.62c-8.49-.69-15.23-7.31-15.23-15.83V24.73c0-9.11 7.67-16.78 16.77-16.17C401.92 17.18 504 124.67 504 256a246 246 0 0 1-25 108.24c-4 8.17-14.37 11-22.26 6.45l-27.84-15.9c-7.41-4.23-9.83-13.35-6.2-21.07A182.53 182.53 0 0 0 440 256c0-96.49-74.27-175.63-168.77-183.38z"]]
};
exports.faSpinnerThird = faSpinnerThird;
var faSplotch = {
  prefix: 'fad',
  iconName: 'splotch',
  icon: [512, 512, [], "f5bc", ["M281.69 124.65c10.48 39.59 18.87 97 105.07 126.52-79.24 40.58-77.61 106.16-79.87 135.83-63.13-47.46-83-67.17-186.41-44.6 16.8-33.68 34-85.06-10.86-146.08 103.53 8.09 124.36-22.42 172.07-71.71", "M472.29 195.89l-67.06-22.95c-19.28-6.6-33.54-20.92-38.14-38.3l-16-60.45C344 47.4 316.89 32 289.26 32c-17.5 0-35.21 6.18-48.17 19.57L195 99.24c-12 12.44-29.84 19.53-48.46 19.53-1.91 0-3.82-.07-5.74-.22l-71.88-5.62c-2.05-.16-4.06-.24-6.05-.24-48.59 0-79.75 46.61-52.95 83.07l38.54 52.4c11.03 15.07 12.77 33.84 4.59 50.24l-28.43 57C6.21 392.24 38.89 431 82.13 431a74.78 74.78 0 0 0 15.94-1.74l70-15.28a72.7 72.7 0 0 1 15.51-1.67 69.56 69.56 0 0 1 41.56 13.4l54.32 40.83a68.21 68.21 0 0 0 41.2 13.46c31.15 0 60.91-20 63.25-50.71l4.7-61.86c1.35-17.8 12.8-33.87 30.63-43l62-31.74c44.88-22.97 39.59-80.18-8.95-96.8zM306.89 387c-63.13-47.46-83-67.17-186.41-44.6 16.8-33.68 34-85.06-10.86-146.08 103.53 8.09 124.36-22.42 172.07-71.71 10.48 39.59 18.87 97 105.07 126.52-79.24 40.62-77.61 106.2-79.87 135.87z"]]
};
exports.faSplotch = faSplotch;
var faSprayCan = {
  prefix: 'fad',
  iconName: 'spray-can',
  icon: [512, 512, [], "f5bd", ["M288 32a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm96 96a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm96 96a32 32 0 1 0 32 32 32 32 0 0 0-32-32zM384 32a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm96 96a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm0-32a32 32 0 1 0-32-32 32 32 0 0 0 32 32zM160 256a80 80 0 1 0 80 80 80 80 0 0 0-80-80z", "M224 160H96a96 96 0 0 0-96 96v224a32 32 0 0 0 32 32h256a32 32 0 0 0 32-32V256a96 96 0 0 0-96-96zm-64 256a80 80 0 1 1 80-80 80 80 0 0 1-80 80zm64-384a32 32 0 0 0-32-32h-64a32 32 0 0 0-32 32v96h128z"]]
};
exports.faSprayCan = faSprayCan;
var faSquare = {
  prefix: 'fad',
  iconName: 'square',
  icon: [448, 512, [], "f0c8", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-16 368a16 16 0 0 1-16 16H80a16 16 0 0 1-16-16V112a16 16 0 0 1 16-16h288a16 16 0 0 1 16 16z", "M64 400V112a16 16 0 0 1 16-16h288a16 16 0 0 1 16 16v288a16 16 0 0 1-16 16H80a16 16 0 0 1-16-16z"]]
};
exports.faSquare = faSquare;
var faSquareFull = {
  prefix: 'fad',
  iconName: 'square-full',
  icon: [512, 512, [], "f45c", ["M-1 0v512h512V0zm432 417.33A14.67 14.67 0 0 1 416.33 432H93.67A14.67 14.67 0 0 1 79 417.33V94.67A14.67 14.67 0 0 1 93.67 80h322.66A14.67 14.67 0 0 1 431 94.67z", "M431 417.33A14.67 14.67 0 0 1 416.33 432H93.67A14.67 14.67 0 0 1 79 417.33V94.67A14.67 14.67 0 0 1 93.67 80h322.66A14.67 14.67 0 0 1 431 94.67z"]]
};
exports.faSquareFull = faSquareFull;
var faSquareRoot = {
  prefix: 'fad',
  iconName: 'square-root',
  icon: [576, 512, [], "f697", ["M576 24v48a24 24 0 0 1-24 24H357l-97.78 374.52C249.38 503 222.21 512 204.94 512c-18.64 0-35.95-8.5-48.44-28.27L67.62 320H24a24 24 0 0 1-24-24v-48a24 24 0 0 1 24-24h81.47a32 32 0 0 1 28 16.57l58.41 106.1 84.82-322.8A32 32 0 0 1 307.65 0H552a24 24 0 0 1 24 24z", ""]]
};
exports.faSquareRoot = faSquareRoot;
var faSquareRootAlt = {
  prefix: 'fad',
  iconName: 'square-root-alt',
  icon: [576, 512, [], "f698", ["M576 72a24 24 0 0 1-24 24H357l-97.78 374.52C249.38 503 222.21 512 204.94 512c-18.64 0-35.95-8.5-48.44-28.27L67.62 320H24a24 24 0 0 1-24-24v-48a24 24 0 0 1 24-24h81.47a32 32 0 0 1 28 16.57l58.41 106.1 84.82-322.8A32 32 0 0 1 307.65 0H552a24 24 0 0 1 24 24z", "M571.31 366.06a16 16 0 0 1 0 22.63l-22.62 22.62a16 16 0 0 1-22.63 0L480 365.25l-46.06 46.06a16 16 0 0 1-22.63 0l-22.62-22.62a16 16 0 0 1 0-22.63L434.75 320l-46.06-46.06a16 16 0 0 1 0-22.63l22.62-22.62a16 16 0 0 1 22.63 0L480 274.75l46.06-46.06a16 16 0 0 1 22.63 0l22.62 22.62a16 16 0 0 1 0 22.63L525.25 320z"]]
};
exports.faSquareRootAlt = faSquareRootAlt;
var faSquirrel = {
  prefix: 'fad',
  iconName: 'squirrel',
  icon: [512, 512, [], "f71a", ["M263.48 512C175.39 511.58 97.93 443.62 96 355.46c-.82-37.58 11.81-71.87 32.74-99.54-.27 0-.52.08-.79.08A128 128 0 0 1 128 0c86.2 0 184.54 112.89 137.33 254.86l-34.57 103.85a8 8 0 0 0 5.07 10.12l15.17 5.05a8 8 0 0 0 9.57-3.83l-31.22 93.7c-7.8 23.5 9.43 47.98 34.13 48.25z", "M479.84 448h-30.92c18.19-18.4 30.93-42.12 30.93-64 0-26.55-22.08-52.81-47.85-61.09V224h47.85a32.2 32.2 0 0 0 31.43-38.87C500.84 136.42 466.72 96 415.87 96V64c-48 0-74.22 62.73-89.4 108.29l-97.1 291.47c-7.85 23.58 9.54 48.17 34.4 48.24h232.08a16 16 0 0 0 16-16v-16a32 32 0 0 0-32.01-32zm-64-288a16 16 0 1 1 16 16 16 16 0 0 1-15.97-16z"]]
};
exports.faSquirrel = faSquirrel;
var faStaff = {
  prefix: 'fad',
  iconName: 'staff',
  icon: [512, 512, [], "f71b", ["M369.9 284.81l32.25 18.62a16 16 0 0 0 21.85-5.86l19.54-33.79zM96 304v44.1l60.13-60.1H112a16 16 0 0 0-16 16z", "M512 80v103.86a80 80 0 0 1-58 76.92l-168.92 48.27a80.11 80.11 0 0 0-34.62 20.37L74.91 505A24 24 0 0 1 41 505L7 471a24 24 0 0 1 0-33.9L156.13 288l26.48-26.48a176.06 176.06 0 0 1 76.11-44.78L416 171.8V96h-50.32l-11.58 23.15a16 16 0 0 1-21.46 7.16l-57.26-28.63a16 16 0 0 1-7.15-21.46l16-32A80 80 0 0 1 355.78 0H432a80 80 0 0 1 80 80z"]]
};
exports.faStaff = faStaff;
var faStamp = {
  prefix: 'fad',
  iconName: 'stamp',
  icon: [512, 512, [], "f5bf", ["M480 416H32a32 32 0 0 1-32-32v-32a96 96 0 0 1 96-96h66.56A29.44 29.44 0 0 0 192 226.56v-.07c0-31.79-10-62.06-23.31-90.91A93.86 93.86 0 0 1 160 96 96.06 96.06 0 0 1 273.25 1.5C312 8.25 343.74 40.17 350.51 79a94.83 94.83 0 0 1-9.05 60.42c-12.58 24.26-21.46 50.3-21.46 77.67v9.46A29.44 29.44 0 0 0 349.43 256H416a96 96 0 0 1 96 96v32a32 32 0 0 1-32 32z", "M480 416v96H32v-96z"]]
};
exports.faStamp = faStamp;
var faStar = {
  prefix: 'fad',
  iconName: 'star',
  icon: [576, 512, [], "f005", ["M528.53 171.5l-146.36-21.3-65.43-132.39c-11.71-23.59-45.68-23.89-57.48 0L193.83 150.2 47.47 171.5c-26.27 3.79-36.79 36.08-17.75 54.58l105.91 103-25 145.49c-4.52 26.3 23.22 46 46.48 33.69L288 439.56l130.93 68.69c23.26 12.21 51-7.39 46.48-33.69l-25-145.49 105.91-103c19-18.49 8.48-50.78-17.79-54.57zm-90.89 71l-66.05 64.23 15.63 90.86a12 12 0 0 1-17.4 12.66L288 367.27l-81.82 42.94a12 12 0 0 1-17.4-12.66l15.63-90.86-66-64.23A12 12 0 0 1 145 222l91.34-13.28 40.9-82.81a12 12 0 0 1 21.52 0l40.9 82.81L431 222a12 12 0 0 1 6.64 20.46z", "M437.64 242.46l-66.05 64.23 15.63 90.86a12 12 0 0 1-17.4 12.66L288 367.27l-81.82 42.94a12 12 0 0 1-17.4-12.66l15.63-90.86-66-64.23A12 12 0 0 1 145 222l91.34-13.28 40.9-82.81a12 12 0 0 1 21.52 0l40.9 82.81L431 222a12 12 0 0 1 6.64 20.46z"]]
};
exports.faStar = faStar;
var faStarAndCrescent = {
  prefix: 'fad',
  iconName: 'star-and-crescent',
  icon: [512, 512, [], "f699", ["M509 230.85l-55.27 53.87 13.05 76.07a9.93 9.93 0 0 1-14.45 10.49L384 335.37l-68.33 35.91a9.86 9.86 0 0 1-4.64 1.17 10 10 0 0 1-9.81-11.66l13-76.07L259 230.85a10 10 0 0 1 5.52-17l76.38-11.1 34.16-69.21a10 10 0 0 1 17.86 0l34.16 69.21 76.38 11.1a10 10 0 0 1 5.54 17z", "M0 256C0 114.84 114.84 0 256 0a254.82 254.82 0 0 1 89.75 16.48 15.06 15.06 0 0 1-5.28 29.16c-1.48 0-6.86-.46-9.18-.46C215 45.18 120.47 139.75 120.47 256S215 466.82 331.29 466.82c2.29 0 7.73-.46 9.18-.46a15 15 0 0 1 4.85 29.32A254.9 254.9 0 0 1 256 512C114.84 512 0 397.16 0 256z"]]
};
exports.faStarAndCrescent = faStarAndCrescent;
var faStarChristmas = {
  prefix: 'fad',
  iconName: 'star-christmas',
  icon: [512, 512, [], "f7d4", ["M359.15 334.15l-19.9 5-5 19.9 68.8 55.1c7.5 6 17.2-3.7 11.2-11.2zm-206.2 0L98 403c-6 7.5 3.7 17.2 11.2 11.2l68.8-55.1-5-19.9zM359.15 178l55.1-68.8c6-7.5-3.7-17.2-11.2-11.2l-68.8 55 5 19.9zM153 178l19.9-5 5-19.9L109.05 98c-7.5-6-17.2 3.7-11.2 11.2z", "M505.25 264.65l-192.6 48.1-48.1 192.5c-2.2 9-15 9-17.2 0l-48.1-192.5-192.5-48.1c-9-2.2-9-15 0-17.2l192.6-48.1 48.1-192.6c2.2-9 15-9 17.2 0l48.2 192.6 192.5 48.1c8.9 2.2 8.9 15-.1 17.2z"]]
};
exports.faStarChristmas = faStarChristmas;
var faStarExclamation = {
  prefix: 'fad',
  iconName: 'star-exclamation',
  icon: [576, 512, [], "f2f3", ["M528.55 171.5l-146.37-21.3-65.43-132.39c-11.72-23.7-45.68-23.8-57.5 0L193.82 150.2 47.45 171.4c-26.25 3.8-36.77 36.1-17.73 54.6l105.9 103-25.05 145.46c-4.51 26.1 23 46 46.49 33.7L288 439.57l130.94 68.69c23.35 12.3 51-7.5 46.49-33.7l-25.05-145.48 105.9-103c19-18.48 8.52-50.78-17.73-54.58zM288 392a40 40 0 1 1 40.07-40A40 40 0 0 1 288 392zm40.17-223.38l-8 112a8 8 0 0 1-8 7.4h-48.11a8 8 0 0 1-8-7.4l-8-112a8 8 0 0 1 7.39-8.58H320.19a8 8 0 0 1 8 8v.63z", "M288 312a40 40 0 1 0 40.07 40A40 40 0 0 0 288 312zm32.16-152H256a8 8 0 0 0-8 8v.62l8 112a8 8 0 0 0 8 7.4h48.09a8 8 0 0 0 8-7.4l8-112a8 8 0 0 0-7.39-8.58z"]]
};
exports.faStarExclamation = faStarExclamation;
var faStarHalf = {
  prefix: 'fad',
  iconName: 'star-half',
  icon: [576, 512, [], "f089", ["M545.3 226L439.6 329l25 145.5c4.5 26.1-23 46-46.4 33.7l-130.7-68.6V0a31.62 31.62 0 0 1 28.7 17.8l65.3 132.4 146.1 21.2c26.2 3.8 36.7 36.1 17.7 54.6z", "M110.4 474.5l25-145.5L29.7 226c-19-18.5-8.5-50.8 17.7-54.6l146.1-21.2 65.3-132.4A31.62 31.62 0 0 1 287.5 0v439.6l-130.7 68.6c-23.4 12.3-50.9-7.6-46.4-33.7z"]]
};
exports.faStarHalf = faStarHalf;
var faStarHalfAlt = {
  prefix: 'fad',
  iconName: 'star-half-alt',
  icon: [536, 512, [], "f5c0", ["M526.29,226.11l-106,103,25,145.49c3.64,20.77-13,37.4-31.66,37.4a31.75,31.75,0,0,1-14.84-3.71l-131-68.71V385.34l22.39,11.73,102.22,53.59-19.5-113.45-4.29-24.88,18.14-17.62,82.73-80.38L355.07,197.7l-25-3.64-11.26-22.63L267.75,68.14V0a31.92,31.92,0,0,1,28.81,17.81L362,150.2l146.51,21.31c26.28,3.8,36.81,36.1,17.75,54.6Z", "M90.48,474.5l25-145.5L9.7,226c-19-18.5-8.51-50.8,17.72-54.6l146.24-21.2L239,17.8A31.67,31.67,0,0,1,267.75,0V439.6L136.93,508.2C113.51,520.5,86,500.6,90.48,474.5Z"]]
};
exports.faStarHalfAlt = faStarHalfAlt;
var faStarOfDavid = {
  prefix: 'fad',
  iconName: 'star-of-david',
  icon: [464, 512, [], "f69a", ["M176,344h-.07l-44-73.93L71,168h39.72l33.33-56H37.11c-28.6,0-46.42,30.38-32,54.59l56.6,95.08L91,310.55l-.09.14L110.72,344Zm160.17-80.7L288.12,344h-.07l-33.4,56h.13L232,438.25,209.22,400H144.05L200,494a37.44,37.44,0,0,0,64,0l56-94h-.19L353,344h.3l19.85-33.33L340.52,256ZM426.89,112H209.35L176,168H393l-19.88,33.33L405.68,256l53.21-89.4c14.41-24.19-3.41-54.58-32-54.58Z", "M91,310.55,58.32,256,5.11,345.41C-9.3,369.62,8.52,400,37.11,400H254.57l33.28-56H71Zm36.86-61.83,48-80.7H176l33.39-56h-.13L232,73.78,254.78,112h65.16L264,18a37.44,37.44,0,0,0-64,0L90.88,201.32,123.5,256Zm331.06,96.69L353.28,168H288.07l44,73.93L393,344H353l-33.22,56H426.89c28.6,0,46.42-30.36,32-54.57Z"]]
};
exports.faStarOfDavid = faStarOfDavid;
var faStarOfLife = {
  prefix: 'fad',
  iconName: 'star-of-life',
  icon: [480, 512, [], "f621", ["M2.14 155.72l32-55.43A16 16 0 0 1 56 94.43l184 106.43L424 94.42a16 16 0 0 1 21.86 5.84l32 55.43a16 16 0 0 1-5.86 21.87L288 284.19V496a16 16 0 0 1-16 16h-64a16 16 0 0 1-16-16V284.18L8 177.57a16 16 0 0 1-5.86-21.85z", "M477.87 356.55l-32 55.43a16 16 0 0 1-21.87 5.86L240 311.41 56 417.85A16 16 0 0 1 34.15 412l-32-55.43A16 16 0 0 1 8 334.7l184-106.62V16.27a16 16 0 0 1 16-16h64a16 16 0 0 1 16 16v211.82L472 334.7a16 16 0 0 1 5.87 21.85z"]]
};
exports.faStarOfLife = faStarOfLife;
var faStars = {
  prefix: 'fad',
  iconName: 'stars',
  icon: [512, 512, [], "f762", ["M362.69 53.3L336 0l-26.7 53.3L256 80l53.3 26.7L336 160l26.7-53.3L416 80zM480 192l-16-32-16 32-32 16 32 16 16 32 16-32 32-16z", "M377.09 306.5l-75.9 74 17.9 104.6a23 23 0 0 1-33.3 24.2L192 459.9l-93.8 49.4c-16.6 8.9-36.5-5.3-33.3-24.2l18-104.6-75.9-74C-6.7 293.2.9 270 19.7 267.3L124.49 252l46.9-95.2c8.5-17.2 32.8-17 41.2 0l46.9 95.2 104.8 15.3c18.8 2.7 26.4 25.9 12.8 39.2z"]]
};
exports.faStars = faStars;
var faSteak = {
  prefix: 'fad',
  iconName: 'steak',
  icon: [576, 512, [], "f824", ["M514.93 76.66C467.93 23.11 416.29 0 368.86 0 298.28 0 237 51.17 214.11 129.39 165 269.33 1.39 212.34 0 351.66c-1.19 121.62 139.26 164.62 256 160 87.78-3.4 187.32-37.09 270.49-131.85C596.78 299.77 591.6 164 514.93 76.66zm-36.53 261c-76.15 86.75-164.32 107.76-224.82 110.1-37.65 1.38-131.52-6.52-171.23-46.62-2.49-2.51-59.44-61.76 38-104.18 71.64-31.19 132.3-71.24 155.23-149.61C290.35 96.71 327 64 368.86 64c32.58 0 66.45 19 98 54.89 55.14 62.84 60.45 163 11.54 218.78z", "M466.86 118.89C435.31 83 401.44 64 368.86 64c-41.86 0-78.51 32.71-93.29 83.37C252.64 225.74 192 265.79 120.34 297c-97.43 42.42-40.48 101.67-38 104.18 39.71 40.1 133.58 48 171.23 46.62 60.5-2.34 148.67-23.35 224.82-110.1 48.91-55.77 43.61-155.97-11.53-218.81zM384 255.92a32 32 0 1 1 32-32 32 32 0 0 1-32 32z"]]
};
exports.faSteak = faSteak;
var faSteeringWheel = {
  prefix: 'fad',
  iconName: 'steering-wheel',
  icon: [496, 512, [], "f622", ["M432,256a185.53,185.53,0,0,1-2.76,32H328l-48,64v85.24a186.89,186.89,0,0,1-64,0V352l-48-64H66.76a186.89,186.89,0,0,1,0-64h94.13A63.69,63.69,0,0,1,216,192h64a63.72,63.72,0,0,1,55.12,32h94.11A185.54,185.54,0,0,1,432,256Z", "M248,72A184,184,0,1,1,64,256,184,184,0,0,1,248,72m0-64C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8Z"]]
};
exports.faSteeringWheel = faSteeringWheel;
var faStepBackward = {
  prefix: 'fad',
  iconName: 'step-backward',
  icon: [448, 512, [], "f048", ["M144,292.71V464a16,16,0,0,1-16,16H80a16,16,0,0,1-16-16V48A16,16,0,0,1,80,32h48a16,16,0,0,1,16,16V292.7Z", "M384,64V448c0,27.4-31.9,41.7-52.5,24.6L144,298.34V213.65L331.5,39.41C352.1,22.31,384,36.61,384,64Z"]]
};
exports.faStepBackward = faStepBackward;
var faStepForward = {
  prefix: 'fad',
  iconName: 'step-forward',
  icon: [448, 512, [], "f051", ["M304,219.29V48a16,16,0,0,1,16-16h48a16,16,0,0,1,16,16V464a16,16,0,0,1-16,16H320a16,16,0,0,1-16-16V219.3Z", "M64,448V64c0-27.4,31.9-41.7,52.5-24.6L304,213.66v84.69L116.5,472.59C95.9,489.69,64,475.39,64,448Z"]]
};
exports.faStepForward = faStepForward;
var faStethoscope = {
  prefix: 'fad',
  iconName: 'stethoscope',
  icon: [512, 512, [], "f0f1", ["M480 231.42V344c0 92.6-79 168-176 168-95.39 0-173.28-72.78-175.9-163.17h64.1c2.7 55.1 51.9 99.2 111.9 99.2 61.8 0 112-46.7 112-104V231.47c-.1.53 63.9.53 63.9-.05z", "M448 112a64 64 0 1 0 64 64 64 64 0 0 0-64-64zm0 80a16 16 0 1 1 16-16 16 16 0 0 1-16 16zM300.7 13.07L237.8.47a23.94 23.94 0 0 0-28.2 18.8L206.4 35a23.94 23.94 0 0 0 18.8 28.2l30.7 6.1.1 122.7a96 96 0 0 1-192 0l-.1-72V69.37l30.7-6.1a23.94 23.94 0 0 0 18.8-28.2l-3.1-15.7A23.94 23.94 0 0 0 82.1.57L19.3 13A24.09 24.09 0 0 0 0 36.57V192c0 88.22 71.78 160 160 160s160-71.78 160-160V36.57a24 24 0 0 0-19.3-23.5z"]]
};
exports.faStethoscope = faStethoscope;
var faStickyNote = {
  prefix: 'fad',
  iconName: 'sticky-note',
  icon: [448, 512, [], "f249", ["M448 352H336a16 16 0 0 0-16 16v112H24a23.94 23.94 0 0 1-24-23.88V56a23.94 23.94 0 0 1 23.88-24H424a23.94 23.94 0 0 1 24 23.88V352z", "M320 480V368a16 16 0 0 1 16-16h112v6.1a23.9 23.9 0 0 1-7 16.9l-98 98a24 24 0 0 1-17 7z"]]
};
exports.faStickyNote = faStickyNote;
var faStocking = {
  prefix: 'fad',
  iconName: 'stocking',
  icon: [384, 512, [], "f7d5", ["M367.29 0h-288a16 16 0 0 0-16 16v64a16 16 0 0 0 16 16h288a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16zM224 368a111.66 111.66 0 0 0 35.42 81.72L280 436a159.58 159.58 0 0 0 71.2-133.1V257a113.64 113.64 0 0 0-15.2-1 112 112 0 0 0-112 112z", "M259.42 449.72l-61.13 40.78a128 128 0 0 1-142-213l39-26V96h255.9v161a113.64 113.64 0 0 0-15.19-1 112 112 0 0 0-76.58 193.72z"]]
};
exports.faStocking = faStocking;
var faStomach = {
  prefix: 'fad',
  iconName: 'stomach',
  icon: [512, 512, [], "f623", ["M384 320c-17.27-17.27-42.62-22.06-65.21-14.06-7.13 52.25-44.66 86.4-77.19 100.08a13.08 13.08 0 0 0-1.5 23.47 144.7 144.7 0 0 0 28.73 12.61c43.37 13.59 98.26 4.59 137.7-34.41a140 140 0 0 0 38.68-72.35c-21.54 6.03-44.96.91-61.21-15.34zM273.13 160H256a64 64 0 0 1-64-64V16a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v80a128 128 0 0 0 128 128 127.42 127.42 0 0 1 17.13-64z", "M384 96c-17.33 0-76.15 4-110.87 64a127.56 127.56 0 0 0-16.5 51.31C256.07 217 256 222.1 256 224v64a64 64 0 0 1-64 64h-64A128 128 0 0 0 0 480v16a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-16c0-37.63 34-51.21 53.92-51.21 17.11 0 29.59 6.71 41.07 18.2 63.07 63.07 129.84 65 146.71 65h2.66C420.84 512 512 420.83 512 308.35V224A128 128 0 0 0 384 96zm64 211c0 37.73-14.65 74.2-41.48 100.72-39.44 39-94.33 48-137.7 34.41a144.7 144.7 0 0 1-28.73-12.61A13.08 13.08 0 0 1 241.6 406c36.11-15.19 78.4-55.6 78.4-118v-64c.83-21.86 20.15-64 64-64a64.07 64.07 0 0 1 64 64z"]]
};
exports.faStomach = faStomach;
var faStop = {
  prefix: 'fad',
  iconName: 'stop',
  icon: [448, 512, [], "f04d", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-16 352a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32V128a32 32 0 0 1 32-32h256a32 32 0 0 1 32 32z", "M64 384V128a32 32 0 0 1 32-32h256a32 32 0 0 1 32 32v256a32 32 0 0 1-32 32H96a32 32 0 0 1-32-32z"]]
};
exports.faStop = faStop;
var faStopCircle = {
  prefix: 'fad',
  iconName: 'stop-circle',
  icon: [512, 512, [], "f28d", ["M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm96 328a16 16 0 0 1-16 16H176a16 16 0 0 1-16-16V176a16 16 0 0 1 16-16h160a16 16 0 0 1 16 16z", "M352 176v160a16 16 0 0 1-16 16H176a16 16 0 0 1-16-16V176a16 16 0 0 1 16-16h160a16 16 0 0 1 16 16z"]]
};
exports.faStopCircle = faStopCircle;
var faStopwatch = {
  prefix: 'fad',
  iconName: 'stopwatch',
  icon: [448, 512, [], "f2f2", ["M224 96C109.12 96 16 189.12 16 304s93.12 208 208 208 208-93.12 208-208S338.88 96 224 96zm32 240a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V208.5a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16z", "M240 192.5h-32a16 16 0 0 0-16 16V336a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V208.5a16 16 0 0 0-16-16zm188.53-48.57l-28.3-28.3a12 12 0 0 0-17 0l-27.45 27.45a209.14 209.14 0 0 1 42.8 47.8l.55-.55 29.4-29.4a12 12 0 0 0 0-17zM280 0H168a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h24v34.45a210 210 0 0 1 64 0V64h24a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16z"]]
};
exports.faStopwatch = faStopwatch;
var faStore = {
  prefix: 'fad',
  iconName: 'store',
  icon: [616, 512, [], "f54e", ["M547.69,286.8a102.1,102.1,0,0,0,16.4-3.6V480a32,32,0,0,1-32,32H84a32,32,0,0,1-32-32V283.2a125.89,125.89,0,0,0,16.4,3.6,135.49,135.49,0,0,0,18,1.2,132.81,132.81,0,0,0,29.51-3.8V384H500V284.2a127.12,127.12,0,0,0,29.51,3.8A138.38,138.38,0,0,0,547.69,286.8Z", "M602,118.6c33.6,53.6,3.8,128-59,136.4a102.9,102.9,0,0,1-13.7.9,99.08,99.08,0,0,1-73.81-33.1A98.83,98.83,0,0,1,316,230.88a96.26,96.26,0,0,1-8.08-8.08,98.9,98.9,0,0,1-139.62,8,97.4,97.4,0,0,1-8-8,98.75,98.75,0,0,1-73.81,33.1,104.6,104.6,0,0,1-13.7-.9C10.12,246.5-19.58,172.1,14,118.6L78.83,15A32,32,0,0,1,106,0H510a32,32,0,0,1,27.07,15Z"]]
};
exports.faStore = faStore;
var faStoreAlt = {
  prefix: 'fad',
  iconName: 'store-alt',
  icon: [640, 512, [], "f54f", ["M320 384H128V224H64v256a32 32 0 0 0 32 32h256a32 32 0 0 0 32-32V224h-64zm192-160v272a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V224z", "M634.55 142.2c14.1 21.3-1.1 49.8-26.6 49.8H32.05c-25.6 0-40.8-28.5-26.6-49.8l85.3-128A31.87 31.87 0 0 1 117.35 0h405.2a32.18 32.18 0 0 1 26.7 14.2z"]]
};
exports.faStoreAlt = faStoreAlt;
var faStream = {
  prefix: 'fad',
  iconName: 'stream',
  icon: [512, 512, [], "f550", ["M512 224v64a16 16 0 0 1-16 16H80a16 16 0 0 1-16-16v-64a16 16 0 0 1 16-16h416a16 16 0 0 1 16 16z", "M432 32H16A16 16 0 0 0 0 48v64a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zm0 352H16a16 16 0 0 0-16 16v64a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16v-64a16 16 0 0 0-16-16z"]]
};
exports.faStream = faStream;
var faStreetView = {
  prefix: 'fad',
  iconName: 'street-view',
  icon: [512, 512, [], "f21d", ["M512 416c0 53-114.62 96-256 96S0 469 0 416c0-37.95 58.87-70.66 144.1-86.24a63.94 63.94 0 0 0 15.9 13.65v22.94C93.48 375.7 48 394.4 48 416c0 30.93 93.12 56 208 56s208-25.07 208-56c0-21.6-45.48-40.31-112-49.65v-22.94a63.94 63.94 0 0 0 15.9-13.65C453.13 345.34 512 378.05 512 416z", "M256 128a64 64 0 1 0-64-64 64 64 0 0 0 64 64zm48 16h-11.8a85.9 85.9 0 0 1-72.4 0H208a48 48 0 0 0-48 48v96a32 32 0 0 0 32 32v96a32 32 0 0 0 32 32h64a32 32 0 0 0 32-32v-96a32 32 0 0 0 32-32v-96a48 48 0 0 0-48-48z"]]
};
exports.faStreetView = faStreetView;
var faStretcher = {
  prefix: 'fad',
  iconName: 'stretcher',
  icon: [640, 512, [], "f825", ["M515.78 394.93a62.25 62.25 0 0 0-56.18-7.3l-43-37.63L524 256h-97.2L368 307.48 309.17 256H212l107.4 94-43 37.63a62.25 62.25 0 0 0-56.18 7.3 64.11 64.11 0 1 0 98.53 40.69l49.25-43.1 49.25 43.1a64 64 0 1 0 98.53-40.69zM256 464a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm224 0a16 16 0 1 1 16-16 16 16 0 0 1-16 16z", "M640 160v32a32 32 0 0 1-32 32H177.62a64 64 0 0 1-47.84-21.48l-121.7-128a32 32 0 0 1 2.66-45.17L34.66 8.08a32 32 0 0 1 45.18 2.66L192 128h416a32 32 0 0 1 32 32z"]]
};
exports.faStretcher = faStretcher;
var faStrikethrough = {
  prefix: 'fad',
  iconName: 'strikethrough',
  icon: [512, 512, [], "f0cc", ["M512 240v32a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h480a16 16 0 0 1 16 16z", "M410.15 320a114.16 114.16 0 0 1 5.27 24.35A123.69 123.69 0 0 1 292.45 480h-68A128 128 0 0 1 110 409.24l-.52-1a16 16 0 0 1 7.15-21.47l42.94-21.47a16 16 0 0 1 21.47 7.16A49.87 49.87 0 0 0 225.66 400h66.79A43.59 43.59 0 0 0 336 356.45 43 43 0 0 0 315.76 320zM293.9 224l-87.17-26.83A43.55 43.55 0 0 1 219.55 112h66.79A49.86 49.86 0 0 1 331 139.57a16 16 0 0 0 21.47 7.16l42.94-21.47a16 16 0 0 0 7.15-21.46l-.52-1A128 128 0 0 0 287.51 32h-68a123.68 123.68 0 0 0-123 135.64c2 20.89 10.1 39.83 21.78 56.36z"]]
};
exports.faStrikethrough = faStrikethrough;
var faStroopwafel = {
  prefix: 'fad',
  iconName: 'stroopwafel',
  icon: [512, 512, [], "f551", ["M188.12 210.74L142.86 256l45.25 45.25L233.37 256zm22.63 113.14L256 369.14l45.26-45.26L256 278.63zm90.5-135.76L256 142.86l-45.25 45.25L256 233.37zM256 0C114.62 0 0 114.62 0 256s114.62 256 256 256 256-114.62 256-256S397.38 0 256 0zm186.68 295.6l-11.31 11.31a8 8 0 0 1-11.31 0l-28.29-28.29-45.25 45.25 33.94 33.94 17-17a8 8 0 0 1 11.31 0l11.31 11.31a8 8 0 0 1 0 11.31l-17 17 17 17a8 8 0 0 1 0 11.31L408.74 420a8 8 0 0 1-11.31 0l-17-17-17 17a8 8 0 0 1-11.31 0l-11.31-11.31a8 8 0 0 1 0-11.31l17-17-33.91-33.89-45.26 45.26L306.93 420a8 8 0 0 1 0 11.31l-11.31 11.31a8 8 0 0 1-11.31 0L256 414.39l-28.29 28.29a8 8 0 0 1-11.31 0l-11.31-11.31a8 8 0 0 1 0-11.31l28.29-28.29-45.25-45.26-33.94 33.94 17 17a8 8 0 0 1 0 11.31L159.85 420a8 8 0 0 1-11.31 0l-17-17-17 17a8 8 0 0 1-11.31 0L92 408.73a8 8 0 0 1 0-11.31l17-17-17-17a8 8 0 0 1 0-11.31l11.31-11.31a8 8 0 0 1 11.31 0l17 17 33.94-33.94-45.25-45.25L92 306.93a8 8 0 0 1-11.31 0L69.32 295.6a8 8 0 0 1 0-11.31L97.61 256l-28.29-28.29a8 8 0 0 1 0-11.31l11.31-11.31a8 8 0 0 1 11.31 0l28.29 28.29 45.25-45.26-33.94-33.94-17 17a8 8 0 0 1-11.31 0L92 159.84a8 8 0 0 1 0-11.31l17-17-17-17a8 8 0 0 1 0-11.31L103.26 92a8 8 0 0 1 11.31 0l17 17 17-17a8 8 0 0 1 11.31 0l11.31 11.31a8 8 0 0 1 0 11.31l-17 17 33.91 33.88 45.26-45.25L205.07 92a8 8 0 0 1 0-11.31l11.31-11.31a8 8 0 0 1 11.31 0L256 97.61l28.29-28.29a8 8 0 0 1 11.31 0l11.31 11.31a8 8 0 0 1 0 11.31l-28.29 28.29 45.26 45.25 33.94-33.94-17-17a8 8 0 0 1 0-11.31L352.16 92a8 8 0 0 1 11.31 0l17 17 17-17a8 8 0 0 1 11.31 0L420 103.26a8 8 0 0 1 0 11.31l-17 17 17 17a8 8 0 0 1 0 11.31l-11.31 11.31a8 8 0 0 1-11.31 0l-17-17-33.88 33.91 45.25 45.26L420 205.07a8 8 0 0 1 11.31 0l11.31 11.31a8 8 0 0 1 0 11.31L414.39 256l28.29 28.28a8 8 0 0 1 0 11.32zm-164-39.6l45.26 45.25 45.2-45.25-45.25-45.26z", "M442.68 284.28L414.39 256l28.27-28.31a8 8 0 0 0 0-11.31l-11.31-11.31a8 8 0 0 0-11.31 0l-28.29 28.29-45.25-45.26 33.94-33.94 17 17a8 8 0 0 0 11.31 0L420 159.82a8 8 0 0 0 0-11.31l-17-17 17-17a8 8 0 0 0 0-11.31L408.72 92a8 8 0 0 0-11.31 0l-17 17-17-17a8 8 0 0 0-11.31 0l-11.31 11.31a8 8 0 0 0 0 11.31l17 17-33.94 33.94-45.26-45.25 28.29-28.29a8 8 0 0 0 0-11.31L295.6 69.32a8 8 0 0 0-11.31 0L256 97.61l-28.31-28.27a8 8 0 0 0-11.31 0l-11.31 11.31a8 8 0 0 0 0 11.31l28.29 28.29-45.26 45.25-33.94-33.94 17-17a8 8 0 0 0 0-11.31L159.82 92a8 8 0 0 0-11.31 0l-17 17-17-17a8 8 0 0 0-11.31 0L92 103.28a8 8 0 0 0 0 11.31l17 17-17 17a8 8 0 0 0 0 11.31l11.31 11.31a8 8 0 0 0 11.31 0l17-17 33.94 33.94-45.25 45.26-28.37-28.32a8 8 0 0 0-11.31 0L69.32 216.4a8 8 0 0 0 0 11.31L97.61 256l-28.29 28.29a8 8 0 0 0 0 11.31l11.34 11.33a8 8 0 0 0 11.31 0l28.29-28.29 45.25 45.25-33.94 33.94-17-17a8 8 0 0 0-11.31 0L92 352.17a8 8 0 0 0 0 11.31l17 17-17 17a8 8 0 0 0 0 11.31L103.29 420a8 8 0 0 0 11.31 0l17-17 17 17a8 8 0 0 0 11.31 0l11.31-11.31a8 8 0 0 0 0-11.31l-17-17 33.94-33.94 45.25 45.26-28.29 28.29a8 8 0 0 0 0 11.31l11.31 11.31a8 8 0 0 0 11.31 0L256 414.39l28.31 28.27a8 8 0 0 0 11.31 0l11.31-11.31a8 8 0 0 0 0-11.31l-28.29-28.29 45.26-45.26 33.94 33.94-17 17a8 8 0 0 0 0 11.31L352.18 420a8 8 0 0 0 11.31 0l17-17 17 17a8 8 0 0 0 11.31 0l11.31-11.31a8 8 0 0 0 0-11.31l-17-17 17-17a8 8 0 0 0 0-11.31l-11.31-11.31a8 8 0 0 0-11.31 0l-17 17-33.94-33.94 45.25-45.25 28.29 28.29a8 8 0 0 0 11.31 0l11.31-11.31a8 8 0 0 0-.03-11.27zM256 142.86l45.25 45.26L256 233.37l-45.25-45.26zm-67.89 158.39L142.86 256l45.26-45.26L233.37 256zM256 369.14l-45.25-45.26L256 278.63l45.26 45.25zm67.89-67.89L278.63 256l45.26-45.26L369.14 256z"]]
};
exports.faStroopwafel = faStroopwafel;
var faSubscript = {
  prefix: 'fad',
  iconName: 'subscript',
  icon: [512, 512, [], "f12c", ["M336 32h-67a16 16 0 0 0-13.14 6.87l-79.9 115-79.9-115A16 16 0 0 0 83 32H16A16 16 0 0 0 0 48v48a16 16 0 0 0 16 16h33.48l77.81 112-77.81 112H16a16 16 0 0 0-16 16v48a16 16 0 0 0 16 16h67a16 16 0 0 0 13.14-6.87l79.9-115 79.9 115A16 16 0 0 0 269 416h67a16 16 0 0 0 16-16v-48a16 16 0 0 0-16-16h-33.48l-77.81-112 77.81-112H336a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z", "M496 416h-16V272a16 16 0 0 0-16-16h-48a16 16 0 0 0-14.29 8.83l-16 32A16 16 0 0 0 400 320h16v96h-16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h96a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z"]]
};
exports.faSubscript = faSubscript;
var faSubway = {
  prefix: 'fad',
  iconName: 'subway',
  icon: [448, 512, [], "f239", ["M176 256a24 24 0 0 0 24-24V120a24 24 0 0 0-24-24H72a24 24 0 0 0-24 24v112a24 24 0 0 0 24 24zM376 96H272a24 24 0 0 0-24 24v112a24 24 0 0 0 24 24h104a24 24 0 0 0 24-24V120a24 24 0 0 0-24-24zm5 401.72L318 448H130l-63 49.72A8 8 0 0 0 72 512h304a8 8 0 0 0 5-14.28z", "M130 448h188c68.4 0 130-44.19 130-96V96c0-53-63-96-128-96H128C64 0 0 43 0 96v256c0 52 61.82 96 130 96zm222-64a48 48 0 1 1 48-48 48 48 0 0 1-48 48zM248 120a24 24 0 0 1 24-24h104a24 24 0 0 1 24 24v112a24 24 0 0 1-24 24H272a24 24 0 0 1-24-24zm-200 0a24 24 0 0 1 24-24h104a24 24 0 0 1 24 24v112a24 24 0 0 1-24 24H72a24 24 0 0 1-24-24zm48 168a48 48 0 1 1-48 48 48 48 0 0 1 48-48z"]]
};
exports.faSubway = faSubway;
var faSuitcase = {
  prefix: 'fad',
  iconName: 'suitcase',
  icon: [512, 512, [], "f0f2", ["M80 480h48V128H80zm304-352v352h48V128z", "M336 32H176a48 48 0 0 0-48 48v400h256V80a48 48 0 0 0-48-48zm-16 96H192V96h128zm144 0h-32v352h32a48 48 0 0 0 48-48V176a48 48 0 0 0-48-48zM0 176v256a48 48 0 0 0 48 48h32V128H48a48 48 0 0 0-48 48z"]]
};
exports.faSuitcase = faSuitcase;
var faSuitcaseRolling = {
  prefix: 'fad',
  iconName: 'suitcase-rolling',
  icon: [384, 512, [], "f5c1", ["M144 48h96v112h48V48a48 48 0 0 0-48-48h-96a48 48 0 0 0-48 48v112h48zM64 496a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-16H64zm192 0a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-16h-64zm56-240H72a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h240a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8zm0 96H72a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h240a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8z", "M336 160H48a48 48 0 0 0-48 48v224a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V208a48 48 0 0 0-48-48zm-16 216a8 8 0 0 1-8 8H72a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h240a8 8 0 0 1 8 8zm0-96a8 8 0 0 1-8 8H72a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h240a8 8 0 0 1 8 8z"]]
};
exports.faSuitcaseRolling = faSuitcaseRolling;
var faSun = {
  prefix: 'fad',
  iconName: 'sun',
  icon: [512, 512, [], "f185", ["M502.42 240.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.41-94.8a17.31 17.31 0 0 0-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4a17.31 17.31 0 0 0 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.41-33.5 47.3 94.7a17.31 17.31 0 0 0 31 0l47.31-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3a17.33 17.33 0 0 0 .2-31.1zm-155.9 106c-49.91 49.9-131.11 49.9-181 0a128.13 128.13 0 0 1 0-181c49.9-49.9 131.1-49.9 181 0a128.13 128.13 0 0 1 0 181z", "M352 256a96 96 0 1 1-96-96 96.15 96.15 0 0 1 96 96z"]]
};
exports.faSun = faSun;
var faSunCloud = {
  prefix: 'fad',
  iconName: 'sun-cloud',
  icon: [640, 512, [], "f763", ["M429.4 384H384a95.17 95.17 0 0 1-58.6-20.5c-49.6 32-116.5 26.4-159.9-16.9a128 128 0 0 1 181-181 125.41 125.41 0 0 1 18.1 23.4 112.64 112.64 0 0 1 62.6-54.5l13.9-41.7c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.3-94.8a17.31 17.31 0 0 0-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4a17.31 17.31 0 0 0 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7a17.31 17.31 0 0 0 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9zm-92.5-179.3a96.36 96.36 0 1 0-33.8 134.5A95.22 95.22 0 0 1 288 288c0-35.8 19.8-66.8 48.9-83.3z", "M640 288a64.06 64.06 0 0 1-64 64H384a64 64 0 0 1 0-128c.6 0 1.1.2 1.6.2a79.75 79.75 0 0 1 157.7 9A63.72 63.72 0 0 1 640 288z"]]
};
exports.faSunCloud = faSunCloud;
var faSunDust = {
  prefix: 'fad',
  iconName: 'sun-dust',
  icon: [512, 512, [], "f764", ["M160 256a95.68 95.68 0 0 0 28.1 67.8l135.7-135.7A96 96 0 0 0 160 256zM419.3 70.8l-100.4 33.5-47.4-94.7a17.31 17.31 0 0 0-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4a17.31 17.31 0 0 0 0 31l94.7 47.3-33.5 100.5A16.86 16.86 0 0 0 75 437l90.5-90.5a128 128 0 0 1 181-181L437 75a16.86 16.86 0 0 0-17.7-4.2z", "M160 448a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm320-256a32 32 0 1 0-32-32 32 32 0 0 0 32 32zm-96 96a32 32 0 1 0-32 32 32 32 0 0 0 32-32zm-144 64a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm160 0a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm80 96a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm0-192a32 32 0 1 0 32 32 32 32 0 0 0-32-32zM320 448a32 32 0 1 0 32 32 32 32 0 0 0-32-32z"]]
};
exports.faSunDust = faSunDust;
var faSunHaze = {
  prefix: 'fad',
  iconName: 'sun-haze',
  icon: [640, 512, [], "f765", ["M471.7 193.1l33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.7a17.31 17.31 0 0 0-31 0l-47.3 94.7-100.5-33.5c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4L74.6 240h119c3.4-27.2 15-53.6 35.9-74.5a128.13 128.13 0 0 1 181 0c20.9 20.9 32.5 47.3 35.9 74.5h119zM320 160c-47.5 0-86.7 34.7-94.4 80h188.8c-7.7-45.3-46.9-80-94.4-80z", "M80 336h336a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16H80a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16zm544-48H496a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16zM208 464H80a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16zm416 0H288a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h336a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16zm-48-56v-16a16 16 0 0 0-16-16H16a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h544a16 16 0 0 0 16-16z"]]
};
exports.faSunHaze = faSunHaze;
var faSunglasses = {
  prefix: 'fad',
  iconName: 'sunglasses',
  icon: [576, 512, [], "f892", ["M574.09 280.38L528.75 98.66a87.94 87.94 0 0 0-113.19-62.14l-15.25 5.08a16 16 0 0 0-10.12 20.25L395.25 77a16 16 0 0 0 20.22 10.13l13.19-4.39c10.87-3.63 23-3.57 33.15 1.73a39.59 39.59 0 0 1 20.38 25.81l38.47 153.83a276.7 276.7 0 0 0-81.22-12.47c-34.75 0-74 7-114.85 26.75h-73.18c-40.85-19.75-80.07-26.75-114.85-26.75a276.75 276.75 0 0 0-81.22 12.45l38.47-153.8a39.61 39.61 0 0 1 20.38-25.82c10.15-5.29 22.28-5.34 33.15-1.73l13.16 4.39A16 16 0 0 0 180.75 77l5.06-15.19a16 16 0 0 0-10.12-20.21l-15.25-5.08A87.95 87.95 0 0 0 47.25 98.65L1.91 280.38A75.35 75.35 0 0 0 0 295.86v70.25C0 429 51.59 480 115.19 480h37.12c60.28 0 110.38-45.94 114.88-105.37l2.93-38.63h35.76l2.93 38.63c4.5 59.43 54.6 105.37 114.88 105.37h37.12C524.41 480 576 429 576 366.13v-70.25a62.67 62.67 0 0 0-1.91-15.5zM203.38 369.8c-2 25.9-24.41 46.2-51.07 46.2h-37.12C87 416 64 393.63 64 366.11v-37.55a217.35 217.35 0 0 1 72.59-12.9 196.51 196.51 0 0 1 69.91 12.9zM512 366.13c0 27.5-23 49.87-51.19 49.87h-37.12c-26.69 0-49.1-20.3-51.07-46.2l-3.12-41.24a196.55 196.55 0 0 1 69.94-12.9A217.41 217.41 0 0 1 512 328.58z", "M64.19 367.9c0-.61-.19-1.18-.19-1.8 0 27.53 23 49.9 51.19 49.9h37.12c26.66 0 49.1-20.3 51.07-46.2l3.12-41.24c-14-5.29-28.31-8.38-42.78-10.42zm404-50l-95.83 47.91.3 4c2 25.9 24.38 46.2 51.07 46.2h37.12C489 416 512 393.63 512 366.13v-37.55a227.76 227.76 0 0 0-43.85-10.66z"]]
};
exports.faSunglasses = faSunglasses;
var faSunrise = {
  prefix: 'fad',
  iconName: 'sunrise',
  icon: [576, 512, [], "f766", ["M250.9 374.45C230.3 383 214.6 398 204.3 416h167.2c-23.8-41.65-75.1-60.35-120.6-41.55zm260.8-20.1l-106.5-7.6-7.6-106.5a17.5 17.5 0 0 0-28.9-12l-80.7 70-80.7-70a17.5 17.5 0 0 0-28.9 12l-7.6 106.5-106.5 7.6a17.5 17.5 0 0 0-12 28.9L80.7 416h87.6c.2-.5.2-1 .4-1.4 27.3-65.8 102.9-97.2 168.7-69.9a128.68 128.68 0 0 1 70.3 71.3h87.6l28.4-32.7a17.5 17.5 0 0 0-12-28.95z", "M560 464H16a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h544a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16zM190.8 128H256v80a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-80h65.2c14.3 0 21.4-17.3 11.2-27.4L300 5a17 17 0 0 0-24 0l-96.4 95.7c-10.2 9.95-3 27.3 11.2 27.3z"]]
};
exports.faSunrise = faSunrise;
var faSunset = {
  prefix: 'fad',
  iconName: 'sunset',
  icon: [576, 512, [], "f767", ["M250.9 374.5c-20.6 8.5-36.3 23.5-46.6 41.5h167.2c-23.8-41.6-75.1-60.3-120.6-41.5zm260.8-20.1l-106.5-7.6-7.6-106.5a17.5 17.5 0 0 0-28.9-12l-80.7 70-80.7-70a17.5 17.5 0 0 0-28.9 12l-7.6 106.5-106.5 7.6a17.5 17.5 0 0 0-12 28.9L80.7 416h87.6c.2-.5.2-1 .4-1.4 27.3-65.8 102.9-97.2 168.7-69.9a128.68 128.68 0 0 1 70.3 71.3h87.6l28.4-32.7a17.5 17.5 0 0 0-12-28.9z", "M560 464H16a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h544a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16zM276 219a17 17 0 0 0 24 0l96.4-95.7c10.1-10.1 3-27.4-11.3-27.4H320V16a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v80h-65.2c-14.3 0-21.4 17.3-11.2 27.4z"]]
};
exports.faSunset = faSunset;
var faSuperscript = {
  prefix: 'fad',
  iconName: 'superscript',
  icon: [512, 512, [], "f12b", ["M336 96h-67a16 16 0 0 0-13.14 6.87l-79.9 115-79.9-115A16 16 0 0 0 83 96H16a16 16 0 0 0-16 16v48a16 16 0 0 0 16 16h33.48l77.81 112-77.81 112H16a16 16 0 0 0-16 16v48a16 16 0 0 0 16 16h67a16 16 0 0 0 13.14-6.87l79.9-115 79.9 115A16 16 0 0 0 269 480h67a16 16 0 0 0 16-16v-48a16 16 0 0 0-16-16h-33.48l-77.81-112 77.81-112H336a16 16 0 0 0 16-16v-48a16 16 0 0 0-16-16z", "M496 192h-16V48a16 16 0 0 0-16-16h-48a16 16 0 0 0-14.29 8.83l-16 32A16 16 0 0 0 400 96h16v96h-16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h96a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z"]]
};
exports.faSuperscript = faSuperscript;
var faSurprise = {
  prefix: 'fad',
  iconName: 'surprise',
  icon: [496, 512, [], "f5c2", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8ZM136,208a32,32,0,1,1,32,32A32,32,0,0,1,136,208ZM248,416a64,64,0,1,1,64-64A64,64,0,0,1,248,416Zm80-176a32,32,0,1,1,32-32A32,32,0,0,1,328,240Z", "M328,176a32,32,0,1,0,32,32A32,32,0,0,0,328,176Zm-160,0a32,32,0,1,0,32,32A32,32,0,0,0,168,176Z"]]
};
exports.faSurprise = faSurprise;
var faSwatchbook = {
  prefix: 'fad',
  iconName: 'swatchbook',
  icon: [512, 512, [], "f5c3", ["M64,256h64V192H64Zm370.66-88.29h0L344.5,77.36a31.83,31.83,0,0,0-45-.07h0l-.07.07L224,152.88V424L434.66,212.9A32,32,0,0,0,434.66,167.71ZM64,128h64V64H64ZM480,320H373.09L186.68,506.51c-2.06,2.07-4.5,3.58-6.68,5.49H480a32,32,0,0,0,32-32V352A32,32,0,0,0,480,320Z", "M160,0H32A32,32,0,0,0,0,32V416a96,96,0,0,0,192,0V32A32,32,0,0,0,160,0ZM96,440a24,24,0,1,1,24-24A24,24,0,0,1,96,440Zm32-184H64V192h64Zm0-128H64V64h64Z"]]
};
exports.faSwatchbook = faSwatchbook;
var faSwimmer = {
  prefix: 'fad',
  iconName: 'swimmer',
  icon: [640, 512, [], "f5c4", ["M538 120L437.68 98.47a112.22 112.22 0 0 0-88.56 18.38L269.1 174a111.54 111.54 0 0 0-26.72 27l-68.63 98a92 92 0 0 1 15.86 11.58c3.54 3.26 15.27 9.42 34.39 9.42s30.86-6.16 34.39-9.42c16-14.77 34.5-22.58 53.46-22.58h16.3c19 0 37.45 7.81 53.46 22.58 3.54 3.26 15.27 9.42 34.39 9.42s30.86-6.16 34.39-9.42c14.86-13.71 31.88-21.12 49.39-22.16l-112.84-80.6 18-12.86a16.22 16.22 0 0 1 12.62-2.61l100.35 21.53A48 48 0 0 0 538 120zM112 96a80 80 0 1 0 80 80 80 80 0 0 0-80-80z", "M640 368v32a16 16 0 0 1-16 16h-16c-38.62 0-72.72-12.18-96-31.84-23.28 19.65-57.38 31.84-96 31.84s-72.72-12.18-96-31.84C296.72 403.81 262.62 416 224 416s-72.72-12.18-96-31.84C104.72 403.81 70.62 416 32 416H16a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h16c26 0 45.8-8.42 56.07-17.9 8.9-8.21 19.66-14.1 31.77-14.1h16.3c12.11 0 22.87 5.89 31.77 14.1C178.2 343.58 198 352 224 352s45.8-8.42 56.07-17.9c8.9-8.21 19.66-14.1 31.77-14.1h16.3c12.11 0 22.87 5.89 31.77 14.1C370.2 343.58 390 352 416 352s45.8-8.42 56.07-17.9c8.9-8.21 19.66-14.1 31.77-14.1h16.3c12.11 0 22.87 5.89 31.77 14.1C562.2 343.58 582 352 608 352h16a16 16 0 0 1 16 16z"]]
};
exports.faSwimmer = faSwimmer;
var faSwimmingPool = {
  prefix: 'fad',
  iconName: 'swimming-pool',
  icon: [640, 512, [], "f5c5", ["M189.61 374.57A86.6 86.6 0 0 0 160 356.5V128a96 96 0 0 1 192 0v16a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-16a32 32 0 0 0-64 0v96h192v-96a96 96 0 0 1 192 0v16a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-16a32 32 0 0 0-64 0v228.51a86.44 86.44 0 0 0-29.61 18.07c-3.53 3.26-15.27 9.42-34.39 9.42v-96H224v96c-19.12 0-30.86-6.16-34.39-9.43z", "M0 464v-32a16 16 0 0 1 16-16h16c26 0 45.8-8.42 56.07-17.9 8.9-8.21 19.66-14.1 31.77-14.1h16.3c12.11 0 22.87 5.89 31.77 14.1C178.2 407.58 198 416 224 416s45.8-8.42 56.07-17.9c8.9-8.21 19.66-14.1 31.77-14.1h16.3c12.11 0 22.87 5.89 31.77 14.1C370.2 407.58 390 416 416 416s45.8-8.42 56.07-17.9c8.9-8.21 19.66-14.1 31.77-14.1h16.3c12.11 0 22.87 5.89 31.77 14.1C562.2 407.58 582 416 608 416h16a16 16 0 0 1 16 16v32a16 16 0 0 1-16 16h-16c-38.62 0-72.72-12.18-96-31.84-23.28 19.65-57.38 31.84-96 31.84s-72.72-12.18-96-31.84C296.72 467.81 262.62 480 224 480s-72.72-12.18-96-31.84C104.72 467.81 70.62 480 32 480H16a16 16 0 0 1-16-16z"]]
};
exports.faSwimmingPool = faSwimmingPool;
var faSword = {
  prefix: 'fad',
  iconName: 'sword',
  icon: [512, 512, [], "f71c", ["M267.88 340.11l-96-96L400 16 493.73.16a16 16 0 0 1 18.1 18.11L496 112z", "M4.06 425a13.91 13.91 0 0 1 0-19.64l17.28-17.29a13.92 13.92 0 0 1 16-2.6l29.31 14.63 53.43-53.43-53.39-80.09a16 16 0 0 1 2-20.19l18.79-18.8a16 16 0 0 1 22.62 0l174.3 174.3a16 16 0 0 1 0 22.63l-18.8 18.79a16 16 0 0 1-20.18 2l-80.09-53.39-53.43 53.43 14.62 29.26a13.85 13.85 0 0 1-2.6 16l-17.29 17.29a13.88 13.88 0 0 1-19.63 0z"]]
};
exports.faSword = faSword;
var faSwords = {
  prefix: 'fad',
  iconName: 'swords',
  icon: [512, 512, [], "f71d", ["M153.37 278.63L100 332l-24.69-24.69a16 16 0 0 0-22.62 0l-17.54 17.53a16 16 0 0 0-2.79 18.87l31.64 59-59.31 59.35a16 16 0 0 0 0 22.63l22.62 22.62a16 16 0 0 0 22.63 0L109.25 448l59 31.64a16 16 0 0 0 18.87-2.79l17.53-17.54a16 16 0 0 0 0-22.62L180 412l53.37-53.37zM496.79.14l-78.11 13.2-140 140 80 80 140-140 13.2-78.11A13.33 13.33 0 0 0 496.79.14z", "M389.37 309.38l-296-296L15.22.14A13.32 13.32 0 0 0 .14 15.22l13.2 78.11 296 296.05zm117.94 152.68L448 402.75l31.64-59a16 16 0 0 0-2.79-18.87l-17.54-17.53a16 16 0 0 0-22.63 0L307.31 436.69a16 16 0 0 0 0 22.62l17.53 17.54a16 16 0 0 0 18.87 2.79l59-31.64 59.31 59.31a16 16 0 0 0 22.63 0l22.62-22.62a16 16 0 0 0 .04-22.63z"]]
};
exports.faSwords = faSwords;
var faSynagogue = {
  prefix: 'fad',
  iconName: 'synagogue',
  icon: [640, 512, [], "f69b", ["M70 196.51L6.67 268.29A26.66 26.66 0 0 0 0 285.93V512h128V239.58l-38-43.07a13.35 13.35 0 0 0-20 0zm563.33 71.78L570 196.51a13.33 13.33 0 0 0-20 0l-38 43.07V512h128V285.93a26.64 26.64 0 0 0-6.67-17.64z", "M468 109.41L340 7a32 32 0 0 0-40 0L172 109.41a32 32 0 0 0-12 25V512h96v-92.57c0-31.88 21.78-61.43 53.25-66.55A64 64 0 0 1 384 416v96h96V134.4a32 32 0 0 0-12-24.99zm-75.94 113.15a4.73 4.73 0 0 1-4 7.24h-38.94l-25.12 40a4.72 4.72 0 0 1-8 0l-25.12-40h-38.94a4.72 4.72 0 0 1-4-7.24l19.2-30.56-19.2-30.56a4.73 4.73 0 0 1 4-7.24h38.94l25.12-40a4.72 4.72 0 0 1 8 0l25.12 40h38.95a4.73 4.73 0 0 1 4 7.24L372.87 192z"]]
};
exports.faSynagogue = faSynagogue;
var faSync = {
  prefix: 'fad',
  iconName: 'sync',
  icon: [512, 512, [], "f021", ["M0 500V299.67a12 12 0 0 1 12-12h200.33a12 12 0 0 1 12 12v47.41a12 12 0 0 1-12.57 12l-101.87-4.88a176.07 176.07 0 0 0 317.25-56.94 12 12 0 0 1 11.67-9.26h49.09a12 12 0 0 1 11.8 14.18C478.07 417.08 377.19 504 256 504a247.43 247.43 0 0 1-188.76-87.17l4.13 82.57a12 12 0 0 1-12 12.6H12a12 12 0 0 1-12-12z", "M12.3 209.82C33.93 94.92 134.81 8 256 8a247.4 247.4 0 0 1 188.9 87.34l-4-82.77A12 12 0 0 1 452.92 0h47.41a12 12 0 0 1 12 12v200.33a12 12 0 0 1-12 12H300a12 12 0 0 1-12-12v-47.41a12 12 0 0 1 12.57-12l101.53 4.88a176.07 176.07 0 0 0-317.24 56.94A12 12 0 0 1 73.19 224H24.1a12 12 0 0 1-11.8-14.18z"]]
};
exports.faSync = faSync;
var faSyncAlt = {
  prefix: 'fad',
  iconName: 'sync-alt',
  icon: [512, 512, [], "f2f1", ["M8 454.06V320a24 24 0 0 1 24-24h134.06c21.38 0 32.09 25.85 17 41l-41.75 41.75A166.82 166.82 0 0 0 256.16 424c77.41-.07 144.31-53.14 162.78-126.85a12 12 0 0 1 11.65-9.15h57.31a12 12 0 0 1 11.81 14.18C478.07 417.08 377.19 504 256 504a247.14 247.14 0 0 1-171.31-68.69L49 471c-15.15 15.15-41 4.44-41-16.94z", "M12.3 209.82C33.93 94.92 134.81 8 256 8a247.14 247.14 0 0 1 171.31 68.69L463 41c15.12-15.12 41-4.41 41 17v134a24 24 0 0 1-24 24H345.94c-21.38 0-32.09-25.85-17-41l41.75-41.75A166.8 166.8 0 0 0 255.85 88c-77.46.07-144.33 53.18-162.79 126.85A12 12 0 0 1 81.41 224H24.1a12 12 0 0 1-11.8-14.18z"]]
};
exports.faSyncAlt = faSyncAlt;
var faSyringe = {
  prefix: 'fad',
  iconName: 'syringe',
  icon: [512, 512, [], "f48e", ["M266.43 109.83l135.69 135.69-181.89 181.91a79.68 79.68 0 0 1-65.41 23l-63.59-7.11-66.3 66.3a8 8 0 0 1-11.31 0l-11.3-11.3a8 8 0 0 1 0-11.3l66.41-66.4L61.62 357a79.91 79.91 0 0 1 23-65.4L111 265.24l55.81 55.88a8 8 0 0 0 11.3 0l11.31-11.29a8.06 8.06 0 0 0 0-11.31l-55.86-55.85 45.29-45.28 55.76 55.84a8 8 0 0 0 11.31 0l11.3-11.31a8 8 0 0 0 0-11.3l-55.77-55.83z", "M166.82 321.12L111 265.23l22.6-22.5 55.81 55.79a8.06 8.06 0 0 1 0 11.31l-11.31 11.29a8 8 0 0 1-11.28 0zm79.11-67.89l11.3-11.31a8 8 0 0 0 0-11.3l-55.71-55.79-22.59 22.59 55.69 55.81a8 8 0 0 0 11.31 0zM509.72 92.92l-11.3 11.31a8 8 0 0 1-11.3 0l-28.3-28.31-45.3 45.31 73.5 73.5A8 8 0 0 1 487 206l-33.9 34a8 8 0 0 1-11.3 0l-17-17L289.12 87.12l-17-17a8 8 0 0 1 0-11.29L306 24.92a8 8 0 0 1 11.3 0l17 17 56.61 56.6 45.3-45.29-28.3-28.31a8 8 0 0 1 0-11.3l11.3-11.29a8 8 0 0 1 11.29 0l79.21 79.19a8.15 8.15 0 0 1 .01 11.4z"]]
};
exports.faSyringe = faSyringe;
var faTable = {
  prefix: 'fad',
  iconName: 'table',
  icon: [512, 512, [], "f0ce", ["M288 160v96h160v-96zm0 256h160v-96H288zM64 256h160v-96H64zm0 160h160v-96H64z", "M464 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h416a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zM224 416H64v-96h160zm0-160H64v-96h160zm224 160H288v-96h160zm0-160H288v-96h160z"]]
};
exports.faTable = faTable;
var faTableTennis = {
  prefix: 'fad',
  iconName: 'table-tennis',
  icon: [512, 512, [], "f45d", ["M496.28 296.48c31.5-77.81 15.8-170.31-47.2-233.4-83.9-84.1-220-84.1-303.9 0l-56 56.09 211.5 211.5c46.1-62.09 131.5-77.4 195.6-34.19zM416.08 320a96 96 0 1 0 96 96 96 96 0 0 0-96-96z", "M5.78 452.77a19.7 19.7 0 0 1 1-28.8l103-89.39L75.28 300c-39-39.09-44.6-98.79-17.3-144.09l220.4 220.29c-3.7 12.71-6.3 25.91-6.2 39.71a142.53 142.53 0 0 0 11 55.09c-25.7-2.8-50.6-13.59-70.3-33.3l-35.7-35.7-89.3 103.3a19.59 19.59 0 0 1-28.7 1z"]]
};
exports.faTableTennis = faTableTennis;
var faTablet = {
  prefix: 'fad',
  iconName: 'tablet',
  icon: [448, 512, [], "f10a", ["M0 384v80a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48v-80zm224 96a32 32 0 1 1 32-32 32 32 0 0 1-32 32z", "M0 384V48A48 48 0 0 1 48 0h352a48 48 0 0 1 48 48v336z"]]
};
exports.faTablet = faTablet;
var faTabletAlt = {
  prefix: 'fad',
  iconName: 'tablet-alt',
  icon: [448, 512, [], "f3fa", ["M400 0H48A48 48 0 0 0 0 48v416a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V48a48 48 0 0 0-48-48zM224 480a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm176-108a12 12 0 0 1-12 12H60a12 12 0 0 1-12-12V60a12 12 0 0 1 12-12h328a12 12 0 0 1 12 12z", "M48 60a12 12 0 0 1 12-12h328a12 12 0 0 1 12 12v312a12 12 0 0 1-12 12H60a12 12 0 0 1-12-12z"]]
};
exports.faTabletAlt = faTabletAlt;
var faTabletAndroid = {
  prefix: 'fad',
  iconName: 'tablet-android',
  icon: [448, 512, [], "f3fb", ["M0 384v80a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48v-80zm288 68a12 12 0 0 1-12 12H172a12 12 0 0 1-12-12v-8a12 12 0 0 1 12-12h104a12 12 0 0 1 12 12z", "M0 384V48A48 48 0 0 1 48 0h352a48 48 0 0 1 48 48v336z"]]
};
exports.faTabletAndroid = faTabletAndroid;
var faTabletAndroidAlt = {
  prefix: 'fad',
  iconName: 'tablet-android-alt',
  icon: [448, 512, [], "f3fc", ["M400 0H48A48 48 0 0 0 0 48v416a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V48a48 48 0 0 0-48-48zM288 452a12 12 0 0 1-12 12H172a12 12 0 0 1-12-12v-8a12 12 0 0 1 12-12h104a12 12 0 0 1 12 12zm112-80a12 12 0 0 1-12 12H60a12 12 0 0 1-12-12V60a12 12 0 0 1 12-12h328a12 12 0 0 1 12 12z", "M48 60a12 12 0 0 1 12-12h328a12 12 0 0 1 12 12v312a12 12 0 0 1-12 12H60a12 12 0 0 1-12-12z"]]
};
exports.faTabletAndroidAlt = faTabletAndroidAlt;
var faTabletRugged = {
  prefix: 'fad',
  iconName: 'tablet-rugged',
  icon: [448, 512, [], "f48f", ["M439.2 164.4a15.92 15.92 0 0 0 8.8-14.3V73.9a15.92 15.92 0 0 0-8.8-14.3L416 48a48 48 0 0 0-48-48H80a48 48 0 0 0-48 48L8.8 59.6A15.92 15.92 0 0 0 0 73.9v76.2a15.92 15.92 0 0 0 8.8 14.3L32 176v16L8.8 203.6A15.92 15.92 0 0 0 0 217.9v76.2a15.92 15.92 0 0 0 8.8 14.3L32 320v16L8.8 347.6A15.92 15.92 0 0 0 0 361.9v76.2a15.92 15.92 0 0 0 8.8 14.3L32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48l23.2-11.6a15.92 15.92 0 0 0 8.8-14.3v-76.2a15.92 15.92 0 0 0-8.8-14.3L416 336v-16l23.2-11.6a15.92 15.92 0 0 0 8.8-14.3v-76.2a15.92 15.92 0 0 0-8.8-14.3L416 192v-16zM352 432a16 16 0 0 1-16 16H112a16 16 0 0 1-16-16V80a16 16 0 0 1 16-16h224a16 16 0 0 1 16 16z", "M352 432a16 16 0 0 1-16 16H112a16 16 0 0 1-16-16V80a16 16 0 0 1 16-16h224a16 16 0 0 1 16 16z"]]
};
exports.faTabletRugged = faTabletRugged;
var faTablets = {
  prefix: 'fad',
  iconName: 'tablets',
  icon: [640, 512, [], "f490", ["M363 65.71c-3.5-3.5-9.5-3.2-12.3.8-45.4 62.7-40.5 150.4 15.9 206.9s144.2 61.4 206.9 15.9a8.15 8.15 0 0 0 .8-12.3zm230.4-19.1c-56.5-56.5-144.2-61.4-206.9-16a8.15 8.15 0 0 0-.8 12.3L597 254.31c3.5 3.5 9.5 3.2 12.3-.8 45.5-62.7 40.6-150.4-15.9-206.9z", "M311.6 368H8.4c-5 0-9.1 4.5-8.3 9.3C12.5 453.51 78.9 512 160 512s147.5-58.5 159.9-134.7c.8-4.79-3.3-9.3-8.3-9.3zM8.4 336h303.3c5 0 9.1-4.5 8.3-9.3C307.5 250.51 241.1 192 160 192S12.5 250.51.1 326.71c-.8 4.8 3.3 9.29 8.3 9.29z"]]
};
exports.faTablets = faTablets;
var faTachometer = {
  prefix: 'fad',
  iconName: 'tachometer',
  icon: [576, 512, [], "f0e4", ["M288 32C128.94 32 0 160.94 0 320a286.5 286.5 0 0 0 39.06 144.8c5.61 9.62 16.3 15.2 27.44 15.2h443c11.14 0 21.83-5.58 27.44-15.2A286.5 286.5 0 0 0 576 320c0-159.06-128.94-288-288-288zm102.77 119.59l-61.33 184A62.8 62.8 0 0 1 343.12 416H232.88a63.34 63.34 0 0 1 51-95.59l61.34-184a24 24 0 0 1 45.53 15.19z", "M283.9 320.41l61.34-184a24 24 0 0 1 45.53 15.19l-61.33 184a62.8 62.8 0 0 1 13.68 80.4H232.88a63.34 63.34 0 0 1 51-95.59z"]]
};
exports.faTachometer = faTachometer;
var faTachometerAlt = {
  prefix: 'fad',
  iconName: 'tachometer-alt',
  icon: [576, 512, [], "f3fd", ["M288 32C128.94 32 0 160.94 0 320a286.5 286.5 0 0 0 39.06 144.8c5.61 9.62 16.3 15.2 27.44 15.2h443c11.14 0 21.83-5.58 27.44-15.2A286.5 286.5 0 0 0 576 320c0-159.06-128.94-288-288-288zm0 64c14.71 0 26.58 10.13 30.32 23.65-1.11 2.26-2.64 4.23-3.45 6.67L305.65 154c-5.13 3.49-11 6-17.64 6a32 32 0 0 1 0-64zM96 384a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm48-160a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm246.77-72.41l-61.33 184A62.8 62.8 0 0 1 343.12 416H232.88a63.34 63.34 0 0 1 51-95.59l61.34-184a24 24 0 0 1 45.53 15.19zm14.66 57.2L421 162.24a31.54 31.54 0 0 1 11-2.24 32 32 0 0 1 0 64c-11.38 0-20.89-6.27-26.57-15.21zM480 384a32 32 0 1 1 32-32 32 32 0 0 1-32 32z", "M283.9 320.41l61.34-184a24 24 0 0 1 45.53 15.19l-61.33 184a62.8 62.8 0 0 1 13.68 80.4H232.88a63.34 63.34 0 0 1 51-95.59z"]]
};
exports.faTachometerAlt = faTachometerAlt;
var faTachometerAltAverage = {
  prefix: 'fad',
  iconName: 'tachometer-alt-average',
  icon: [576, 512, [], "f624", ["M288 32C128.94 32 0 160.94 0 320a286.44 286.44 0 0 0 39.06 144.8c5.61 9.62 16.3 15.2 27.44 15.2h443c11.14 0 21.83-5.58 27.44-15.2A286.44 286.44 0 0 0 576 320c0-159.06-128.94-288-288-288zM96 384a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm48-160a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm203.54 183a63 63 0 0 1-4.42 9H232.88A63.36 63.36 0 0 1 255 329.17a62.44 62.44 0 0 1 9-4.42V128a24 24 0 0 1 48 0v196.75A63.36 63.36 0 0 1 347.54 407zM400 192a32 32 0 1 1 32 32 32 32 0 0 1-32-32zm80 192a32 32 0 1 1 32-32 32 32 0 0 1-32 32z", "M343.12 416H232.88A63.36 63.36 0 0 1 255 329.17a62.44 62.44 0 0 1 9-4.42V128a24 24 0 0 1 48 0v196.75A63.35 63.35 0 0 1 343.12 416z"]]
};
exports.faTachometerAltAverage = faTachometerAltAverage;
var faTachometerAltFast = {
  prefix: 'fad',
  iconName: 'tachometer-alt-fast',
  icon: [576, 512, [], "f625", ["M288 32C128.94 32 0 160.94 0 320a286.5 286.5 0 0 0 39.06 144.8c5.61 9.62 16.3 15.2 27.44 15.2h443c11.14 0 21.83-5.58 27.44-15.2A286.5 286.5 0 0 0 576 320c0-159.06-128.94-288-288-288zm0 64a32 32 0 1 1-32 32 32 32 0 0 1 32-32zM96 384a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm48-160a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm199.12 192H232.88a63.33 63.33 0 0 1-8.88-32 64 64 0 0 1 64-64 63.14 63.14 0 0 1 16.24 2.34L412.8 177.59a24 24 0 1 1 38.41 28.81L342.65 351.14a62.26 62.26 0 0 1 .47 64.86zM480 384a32 32 0 1 1 32-32 32 32 0 0 1-32 32z", "M288 320a63.14 63.14 0 0 1 16.24 2.34L412.8 177.59a24 24 0 1 1 38.41 28.81L342.65 351.14a62.26 62.26 0 0 1 .47 64.86H232.88a63.33 63.33 0 0 1-8.88-32 64 64 0 0 1 64-64z"]]
};
exports.faTachometerAltFast = faTachometerAltFast;
var faTachometerAltFastest = {
  prefix: 'fad',
  iconName: 'tachometer-alt-fastest',
  icon: [576, 512, [], "f626", ["M288 32C128.94 32 0 160.94 0 320a286.5 286.5 0 0 0 39.06 144.8c5.61 9.62 16.3 15.2 27.44 15.2h443c11.14 0 21.83-5.58 27.44-15.2A286.5 286.5 0 0 0 576 320c0-159.06-128.94-288-288-288zm144 128a32 32 0 1 1-32 32 32 32 0 0 1 32-32zM288 96a32 32 0 1 1-32 32 32 32 0 0 1 32-32zM96 384a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm48-160a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm340 151.67L350 398a66 66 0 0 1-6.9 18H232.88a63.33 63.33 0 0 1-8.88-32 63.85 63.85 0 0 1 118.37-33.39l133.68-22.28a24 24 0 0 1 7.9 47.34z", "M288 320a63.78 63.78 0 0 1 54.37 30.61l133.68-22.28a24 24 0 0 1 7.9 47.34L350 398a66 66 0 0 1-6.9 18H232.88a63.33 63.33 0 0 1-8.88-32 64 64 0 0 1 64-64z"]]
};
exports.faTachometerAltFastest = faTachometerAltFastest;
var faTachometerAltSlow = {
  prefix: 'fad',
  iconName: 'tachometer-alt-slow',
  icon: [576, 512, [], "f627", ["M288 32C128.94 32 0 160.94 0 320a286.5 286.5 0 0 0 39.06 144.8c5.61 9.62 16.3 15.2 27.44 15.2h443c11.14 0 21.83-5.58 27.44-15.2A286.5 286.5 0 0 0 576 320c0-159.06-128.94-288-288-288zm0 64a32 32 0 1 1-32 32 32 32 0 0 1 32-32zM96 384a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm247.12 32H232.88a62.26 62.26 0 0 1 .47-64.86L124.8 206.41a24 24 0 0 1 38.41-28.81l108.56 144.74A63.5 63.5 0 0 1 343.12 416zM400 192a32 32 0 1 1 32 32 32 32 0 0 1-32-32zm80 192a32 32 0 1 1 32-32 32 32 0 0 1-32 32z", "M343.12 416H232.88a62.26 62.26 0 0 1 .47-64.86L124.8 206.41a24 24 0 0 1 38.41-28.81l108.56 144.74A63.5 63.5 0 0 1 343.12 416z"]]
};
exports.faTachometerAltSlow = faTachometerAltSlow;
var faTachometerAltSlowest = {
  prefix: 'fad',
  iconName: 'tachometer-alt-slowest',
  icon: [576, 512, [], "f628", ["M288 32C128.94 32 0 160.94 0 320a286.5 286.5 0 0 0 39.06 144.8c5.61 9.62 16.3 15.2 27.44 15.2h443c11.14 0 21.83-5.58 27.44-15.2A286.5 286.5 0 0 0 576 320c0-159.06-128.94-288-288-288zm0 64a32 32 0 1 1-32 32 32 32 0 0 1 32-32zm-144 64a32 32 0 1 1-32 32 32 32 0 0 1 32-32zm199.12 256H232.88a65.78 65.78 0 0 1-6.9-18L92.05 375.67a24 24 0 0 1 7.9-47.34l133.68 22.28A63.77 63.77 0 0 1 343.12 416zM400 192a32 32 0 1 1 32 32 32 32 0 0 1-32-32zm80 192a32 32 0 1 1 32-32 32 32 0 0 1-32 32z", "M72.33 348.05A24 24 0 0 1 100 328.33l133.68 22.28A63.77 63.77 0 0 1 343.12 416H232.88a65.78 65.78 0 0 1-6.9-18L92.05 375.67a24 24 0 0 1-19.72-27.62z"]]
};
exports.faTachometerAltSlowest = faTachometerAltSlowest;
var faTachometerAverage = {
  prefix: 'fad',
  iconName: 'tachometer-average',
  icon: [576, 512, [], "f629", ["M288 32C128.94 32 0 160.94 0 320a286.5 286.5 0 0 0 39.06 144.8c5.61 9.62 16.3 15.2 27.44 15.2h443c11.14 0 21.83-5.58 27.44-15.2A286.5 286.5 0 0 0 576 320c0-159.06-128.94-288-288-288zm55.12 384H232.88A63.36 63.36 0 0 1 264 324.75V128a24 24 0 0 1 48 0v196.75A63.36 63.36 0 0 1 343.12 416z", "M264 324.75V128a24 24 0 0 1 48 0v196.75A63.36 63.36 0 0 1 343.12 416H232.88A63.36 63.36 0 0 1 264 324.75z"]]
};
exports.faTachometerAverage = faTachometerAverage;
var faTachometerFast = {
  prefix: 'fad',
  iconName: 'tachometer-fast',
  icon: [576, 512, [], "f62a", ["M288 32C128.94 32 0 160.94 0 320a286.5 286.5 0 0 0 39.06 144.8c5.61 9.62 16.3 15.2 27.44 15.2h443c11.14 0 21.83-5.58 27.44-15.2A286.5 286.5 0 0 0 576 320c0-159.06-128.94-288-288-288zm163.2 174.41L342.65 351.14a62.26 62.26 0 0 1 .47 64.86H232.88a63.33 63.33 0 0 1-8.88-32 64 64 0 0 1 64-64 63.14 63.14 0 0 1 16.24 2.34L412.8 177.59a24 24 0 1 1 38.4 28.82z", "M288 320a63.14 63.14 0 0 1 16.24 2.34L412.8 177.59a24 24 0 1 1 38.4 28.82L342.65 351.14a62.26 62.26 0 0 1 .47 64.86H232.88a63.33 63.33 0 0 1-8.88-32 64 64 0 0 1 64-64z"]]
};
exports.faTachometerFast = faTachometerFast;
var faTachometerFastest = {
  prefix: 'fad',
  iconName: 'tachometer-fastest',
  icon: [576, 512, [], "f62b", ["M288 32C128.94 32 0 160.94 0 320a286.5 286.5 0 0 0 39.06 144.8c5.61 9.62 16.3 15.2 27.44 15.2h443c11.14 0 21.83-5.58 27.44-15.2A286.5 286.5 0 0 0 576 320c0-159.06-128.94-288-288-288zm196 343.67L350 398a66 66 0 0 1-6.9 18H232.88a63.33 63.33 0 0 1-8.88-32 63.85 63.85 0 0 1 118.37-33.39l133.68-22.28a24 24 0 0 1 7.9 47.34z", "M484 375.67L350 398a66 66 0 0 1-6.9 18H232.88a63.33 63.33 0 0 1-8.88-32 63.85 63.85 0 0 1 118.37-33.39l133.68-22.28a24 24 0 0 1 7.9 47.34z"]]
};
exports.faTachometerFastest = faTachometerFastest;
var faTachometerSlow = {
  prefix: 'fad',
  iconName: 'tachometer-slow',
  icon: [576, 512, [], "f62c", ["M288 32C128.94 32 0 160.94 0 320a286.5 286.5 0 0 0 39.06 144.8c5.61 9.62 16.3 15.2 27.44 15.2h443c11.14 0 21.83-5.58 27.44-15.2A286.5 286.5 0 0 0 576 320c0-159.06-128.94-288-288-288zm55.12 384H232.88a62.26 62.26 0 0 1 .47-64.86L124.8 206.41a24 24 0 0 1 38.41-28.81l108.56 144.74A63.5 63.5 0 0 1 343.12 416z", "M343.12 416H232.88a62.26 62.26 0 0 1 .47-64.86L124.8 206.41a24 24 0 0 1 38.41-28.81l108.56 144.74A63.5 63.5 0 0 1 343.12 416z"]]
};
exports.faTachometerSlow = faTachometerSlow;
var faTachometerSlowest = {
  prefix: 'fad',
  iconName: 'tachometer-slowest',
  icon: [576, 512, [], "f62d", ["M288 32C128.94 32 0 160.94 0 320a286.5 286.5 0 0 0 39.06 144.8c5.61 9.62 16.3 15.2 27.44 15.2h443c11.14 0 21.83-5.58 27.44-15.2A286.5 286.5 0 0 0 576 320c0-159.06-128.94-288-288-288zm55.12 384H232.88a65.78 65.78 0 0 1-6.9-18L92.05 375.67a24 24 0 0 1 7.9-47.34l133.68 22.28A63.77 63.77 0 0 1 343.12 416z", "M343.12 416H232.88a65.78 65.78 0 0 1-6.9-18L92.05 375.67a24 24 0 0 1 7.9-47.34l133.68 22.28A63.77 63.77 0 0 1 343.12 416z"]]
};
exports.faTachometerSlowest = faTachometerSlowest;
var faTaco = {
  prefix: 'fad',
  iconName: 'taco',
  icon: [512, 512, [], "f826", ["M256 192C125.82 192 18.14 299.4.32 439.08-2.43 460.66 13 480 32.56 480h446.88c19.56 0 35-19.34 32.24-40.92C493.86 299.4 386.18 192 256 192zM112 416a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm64-64a16 16 0 1 1 16-16 16 16 0 0 1-16 16z", "M112 384a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm64-64a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm332.91-95.71c-7.15-19.06-24.76-29.36-40.31-38.46-9.49-5.54-19.32-11.29-23.71-17.53-4.74-6.69-7.33-18.51-9.83-30-3.95-18.08-8.44-38.58-23.64-50.64-15.69-12.45-36-11-54-9.81-10.79.76-22 1.5-29.18-1.1-6.93-2.51-15.12-10.14-23-17.51-29.05-27.07-50.66-44.51-98.38-.05-7.92 7.37-16.11 15-23 17.51-7.22 2.6-18.39 1.86-29.18 1.1-18-1.24-38.32-2.64-54 9.81C85.48 99.67 81 120.17 77 138.25c-2.5 11.46-5.09 23.28-9.83 30-4.39 6.24-14.22 12-23.71 17.53-15.46 9.1-33.12 19.39-40.27 38.46-6.81 18.08-1 37.7 4.16 55a.21.21 0 0 0 0 .24 129.48 129.48 0 0 1 4.53 28.14C64 218.51 154.91 160 256 160s192 58.52 244.14 147.64a127.84 127.84 0 0 1 4.53-28.09.79.79 0 0 1 .08-.26c5.14-17.29 11-36.94 4.16-55z"]]
};
exports.faTaco = faTaco;
var faTag = {
  prefix: 'fad',
  iconName: 'tag',
  icon: [512, 512, [], "f02b", ["M497.94 225.94L286.06 14.06A48 48 0 0 0 252.12 0H48A48 48 0 0 0 0 48v204.12a48 48 0 0 0 14.06 33.94l211.88 211.88a48 48 0 0 0 67.88 0l204.12-204.12a48 48 0 0 0 0-67.88zM112 160a48 48 0 1 1 48-48 48 48 0 0 1-48 48z", ""]]
};
exports.faTag = faTag;
var faTags = {
  prefix: 'fad',
  iconName: 'tags',
  icon: [640, 512, [], "f02c", ["M497.94 225.94L286.06 14.06A48 48 0 0 0 252.12 0H48A48 48 0 0 0 0 48v204.12a48 48 0 0 0 14.06 33.94l211.88 211.88a48 48 0 0 0 67.88 0l204.12-204.12a48 48 0 0 0 0-67.88zM112 160a48 48 0 1 1 48-48 48 48 0 0 1-48 48z", "M625.94 293.82L421.82 497.94a48 48 0 0 1-67.88 0l-.36-.36 174.06-174.06a90 90 0 0 0 0-127.28L331.4 0h48.72a48 48 0 0 1 33.94 14.06l211.88 211.88a48 48 0 0 1 0 67.88z"]]
};
exports.faTags = faTags;
var faTally = {
  prefix: 'fad',
  iconName: 'tally',
  icon: [640, 512, [], "f69c", ["M224 253.44V48a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16v184.73zm-64 20.71V48a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v246.86zm256-82.85V48a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v164zm128-41.42V48a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v122.59zM224 320.7V464a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V300zm256-82.85V464a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V217.14zM96 362.12V464a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V341.41zm256-82.85V464a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V258.56z", "M639.21 169.49a16 16 0 0 1-10.27 20.16L30.84 383.21a16 16 0 0 1-20.16-10.27L.79 342.51a16 16 0 0 1 10.27-20.16l598.1-193.56a16 16 0 0 1 20.16 10.27z"]]
};
exports.faTally = faTally;
var faTanakh = {
  prefix: 'fad',
  iconName: 'tanakh',
  icon: [448, 512, [], "f827", ["M32.14 448c2.29-15.62 2.46-47.76.53-64H352c16 0 32 12.8 32 32s-12.8 32-32 32z", "M224 87.38l-16.78 28.06h33.58zm-59.11 52.06H130l17.47 29.17zm153.11 0h-34.9l17.48 29.19zM130 244.56h34.9l-17.48-29.19zM352 0H32A32 32 0 0 0 0 32v328a24 24 0 0 0 24 24h328c16 0 32 12.8 32 32s-12.8 32-32 32H24a24 24 0 0 0-24 24v16a24 24 0 0 0 24 24h328a96 96 0 0 0 96-96V96a96 96 0 0 0-96-96zm-9.41 258.43a20.12 20.12 0 0 1-17.5 10.15h-56.3L241.2 314.7a20 20 0 0 1-17.2 9.82 19.66 19.66 0 0 1-17-9.68l-27.7-46.28h-56.39a20 20 0 0 1-17.14-30.29L133.43 192l-27.79-46.43a19.6 19.6 0 0 1-.23-20 20.12 20.12 0 0 1 17.5-10.15h56.3L206.8 69.3a20 20 0 0 1 17.25-9.82 19.67 19.67 0 0 1 17 9.68l27.7 46.28h56.36a20 20 0 0 1 17.14 30.29L314.57 192l27.79 46.43a19.59 19.59 0 0 1 .23 20zm-118.54 38.2l16.78-28.07h-33.58zm59.09-52.07h34.91l-17.47-29.17zm-28-105.14h-62.3L161.41 192l31.47 52.56h62.3L286.59 192z"]]
};
exports.faTanakh = faTanakh;
var faTape = {
  prefix: 'fad',
  iconName: 'tape',
  icon: [640, 512, [], "f4db", ["M624 416H380.6A223.47 223.47 0 0 0 448 256c0-123.7-100.3-224-224-224S0 132.3 0 256s100.3 224 224 224h400a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-400-64a96 96 0 1 1 96-96 96 96 0 0 1-96 96z", "M288 256a64 64 0 1 1-64-64 64.06 64.06 0 0 1 64 64z"]]
};
exports.faTape = faTape;
var faTasks = {
  prefix: 'fad',
  iconName: 'tasks',
  icon: [512, 512, [], "f0ae", ["M496 384H208a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h288a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-320H208a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h288a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 160H208a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h288a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z", "M139.61 35.5a12 12 0 0 0-17 0L58.93 98.81l-22.7-22.12a12 12 0 0 0-17 0L3.53 92.41a12 12 0 0 0 0 17l47.59 47.4a12.78 12.78 0 0 0 17.61 0l15.59-15.62L156.52 69a12.09 12.09 0 0 0 .09-17zm0 159.19a12 12 0 0 0-17 0l-63.68 63.72-22.7-22.1a12 12 0 0 0-17 0L3.53 252a12 12 0 0 0 0 17L51 316.5a12.77 12.77 0 0 0 17.6 0l15.7-15.69 72.2-72.22a12 12 0 0 0 .09-16.9zM64 368c-26.49 0-48.59 21.5-48.59 48S37.53 464 64 464a48 48 0 0 0 0-96z"]]
};
exports.faTasks = faTasks;
var faTasksAlt = {
  prefix: 'fad',
  iconName: 'tasks-alt',
  icon: [512, 512, [], "f828", ["M488.12 352H23.94A23.94 23.94 0 0 0 0 375.88V456a23.94 23.94 0 0 0 23.88 24h464.18A23.94 23.94 0 0 0 512 456.12V376a23.94 23.94 0 0 0-23.88-24zM464 432H48v-32h416zm24.12-240H23.94A23.94 23.94 0 0 0 0 215.88V296a23.94 23.94 0 0 0 23.88 24h464.18A23.94 23.94 0 0 0 512 296.12V216a23.94 23.94 0 0 0-23.88-24zM464 272H48v-32h416zm24.12-240H23.94A23.94 23.94 0 0 0 0 55.88V136a23.94 23.94 0 0 0 23.88 24h464.18A23.94 23.94 0 0 0 512 136.12V56a23.94 23.94 0 0 0-23.88-24zM464 112H48V80h416z", "M48 80v32h304V80zm112 160H48v32h112zM48 432h240v-32H48z"]]
};
exports.faTasksAlt = faTasksAlt;
var faTaxi = {
  prefix: 'fad',
  iconName: 'taxi',
  icon: [512, 512, [], "f1ba", ["M352 64a32 32 0 0 0-32-32H192a32 32 0 0 0-32 32v32h192zM96 368H64a32 32 0 0 0-32 32v48a32 32 0 0 0 32 32h32a32 32 0 0 0 32-32v-48a32 32 0 0 0-32-32zm352 0h-32a32 32 0 0 0-32 32v48a32 32 0 0 0 32 32h32a32 32 0 0 0 32-32v-48a32 32 0 0 0-32-32zm-69.94-195.14c-2-7.38-9.38-12.86-14.85-12.86h-214.4c-5.47 0-12.83 5.48-15.06 13.64L116.55 240h278.9z", "M462 241.55l-22-84.75c-9.6-35.2-41.6-60.8-76.8-60.8H148.8c-35.2 0-67.2 25.6-76.8 60.8l-22 84.75A64 64 0 0 0 0 304v48a64 64 0 0 0 64 64h384a64 64 0 0 0 64-64v-48a64 64 0 0 0-50-62.45zm-328.25-67.91c2.25-8.16 9.59-13.64 15.06-13.64h214.4c5.47 0 12.83 5.48 14.85 12.86L395.45 240h-278.9zM96 352a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm320 0a32 32 0 1 1 32-32 32 32 0 0 1-32 32z"]]
};
exports.faTaxi = faTaxi;
var faTeeth = {
  prefix: 'fad',
  iconName: 'teeth',
  icon: [640, 512, [], "f62e", ["M144 288H80a16 16 0 0 0-16 16v64a48 48 0 0 0 96 0v-64a16 16 0 0 0-16-16zm-32-160a48 48 0 0 0-48 48v64a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16v-64a48 48 0 0 0-48-48zm176 160h-80a16 16 0 0 0-16 16v56a56 56 0 0 0 112 0v-56a16 16 0 0 0-16-16zM248 96a56 56 0 0 0-56 56v88a16 16 0 0 0 16 16h80a16 16 0 0 0 16-16v-88a56 56 0 0 0-56-56zm184 192h-80a16 16 0 0 0-16 16v56a56 56 0 0 0 112 0v-56a16 16 0 0 0-16-16zM392 96a56 56 0 0 0-56 56v88a16 16 0 0 0 16 16h80a16 16 0 0 0 16-16v-88a56 56 0 0 0-56-56zm168 192h-64a16 16 0 0 0-16 16v64a48 48 0 0 0 96 0v-64a16 16 0 0 0-16-16zm-32-160a48 48 0 0 0-48 48v64a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16v-64a48 48 0 0 0-48-48z", "M544 0H96A96 96 0 0 0 0 96v320a96 96 0 0 0 96 96h448a96 96 0 0 0 96-96V96a96 96 0 0 0-96-96zM160 368a48 48 0 0 1-96 0v-64a16 16 0 0 1 16-16h64a16 16 0 0 1 16 16zm0-128a16 16 0 0 1-16 16H80a16 16 0 0 1-16-16v-64a48 48 0 0 1 96 0zm144 120a56 56 0 0 1-112 0v-56a16 16 0 0 1 16-16h80a16 16 0 0 1 16 16zm0-120a16 16 0 0 1-16 16h-80a16 16 0 0 1-16-16v-88a56 56 0 0 1 112 0zm144 120a56 56 0 0 1-112 0v-56a16 16 0 0 1 16-16h80a16 16 0 0 1 16 16zm0-120a16 16 0 0 1-16 16h-80a16 16 0 0 1-16-16v-88a56 56 0 0 1 112 0zm128 128a48 48 0 0 1-96 0v-64a16 16 0 0 1 16-16h64a16 16 0 0 1 16 16zm0-128a16 16 0 0 1-16 16h-64a16 16 0 0 1-16-16v-64a48 48 0 0 1 96 0z"]]
};
exports.faTeeth = faTeeth;
var faTeethOpen = {
  prefix: 'fad',
  iconName: 'teeth-open',
  icon: [640, 512, [], "f62f", ["M112 96a48 48 0 0 0-48 48v32a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16v-32a48 48 0 0 0-48-48zm136-32a56 56 0 0 0-56 56v56a16 16 0 0 0 16 16h80a16 16 0 0 0 16-16v-56a56 56 0 0 0-56-56zm144 0a56 56 0 0 0-56 56v56a16 16 0 0 0 16 16h80a16 16 0 0 0 16-16v-56a56 56 0 0 0-56-56zm136 32a48 48 0 0 0-48 48v32a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16v-32a48 48 0 0 0-48-48zM144 352H80a16 16 0 0 0-16 16v32a48 48 0 0 0 96 0v-32a16 16 0 0 0-16-16zm144 0h-80a16 16 0 0 0-16 16v24a56 56 0 0 0 112 0v-24a16 16 0 0 0-16-16zm144 0h-80a16 16 0 0 0-16 16v24a56 56 0 0 0 112 0v-24a16 16 0 0 0-16-16zm128 0h-64a16 16 0 0 0-16 16v32a48 48 0 0 0 96 0v-32a16 16 0 0 0-16-16z", "M576 320H64a64 64 0 0 0-64 64v32a96 96 0 0 0 96 96h448a96 96 0 0 0 96-96v-32a64 64 0 0 0-64-64zm-416 80a48 48 0 0 1-96 0v-32a16 16 0 0 1 16-16h64a16 16 0 0 1 16 16zm144-8a56 56 0 0 1-112 0v-24a16 16 0 0 1 16-16h80a16 16 0 0 1 16 16zm144 0a56 56 0 0 1-112 0v-24a16 16 0 0 1 16-16h80a16 16 0 0 1 16 16zm128 8a48 48 0 0 1-96 0v-32a16 16 0 0 1 16-16h64a16 16 0 0 1 16 16zM544 0H96A96 96 0 0 0 0 96v64a64 64 0 0 0 64 64h512a64 64 0 0 0 64-64V96a96 96 0 0 0-96-96zM160 176a16 16 0 0 1-16 16H80a16 16 0 0 1-16-16v-32a48 48 0 0 1 96 0zm144 0a16 16 0 0 1-16 16h-80a16 16 0 0 1-16-16v-56a56 56 0 0 1 112 0zm144 0a16 16 0 0 1-16 16h-80a16 16 0 0 1-16-16v-56a56 56 0 0 1 112 0zm128 0a16 16 0 0 1-16 16h-64a16 16 0 0 1-16-16v-32a48 48 0 0 1 96 0z"]]
};
exports.faTeethOpen = faTeethOpen;
var faTemperatureFrigid = {
  prefix: 'fad',
  iconName: 'temperature-frigid',
  icon: [576, 512, [], "f768", ["M544.06 278.5V112a112 112 0 1 0-224 0v166.5c-19.7 24.6-32 55.5-32 89.5a144 144 0 1 0 288 0c0-34-12.3-64.9-32-89.5zm-112 169.5a79.87 79.87 0 0 1-48-143.8V112a48 48 0 1 1 96 0v192.2a79.87 79.87 0 0 1-48 143.8z", "M200.06 125.2l40.2-40.2a12 12 0 0 0 0-17l-8.5-8.5a12 12 0 0 0-17 0l-14.7 14.8V44a12 12 0 0 0-12-12h-24a12 12 0 0 0-12 12v30.3l-14.8-14.8a12 12 0 0 0-17 0l-8.5 8.5a12 12 0 0 0 0 17L152 125.2v56.9L101.66 153l-15-55.7a12.16 12.16 0 0 0-14.9-8.6l-11.7 3.2a12.16 12.16 0 0 0-8.6 14.9L57 127.2l-26.6-15.3a12.12 12.12 0 0 0-16.6 4.4l-12.1 21a12.12 12.12 0 0 0 4.4 16.6l26.6 15.3-20.4 5.5a12.16 12.16 0 0 0-8.6 14.9l3.1 11.7a12.16 12.16 0 0 0 14.9 8.6L77.36 195l50.2 29-50.2 29-55.7-15a12.21 12.21 0 0 0-14.9 8.6l-3.1 11.7a12.21 12.21 0 0 0 8.6 14.9l20.4 5.5-26.5 15.4a12.12 12.12 0 0 0-4.4 16.6l12.1 21a12.12 12.12 0 0 0 16.6 4.4l26.6-15.3-5.5 20.4a12.21 12.21 0 0 0 8.6 14.9l11.7 3.1a12.21 12.21 0 0 0 14.9-8.6l14.9-55.6 50.4-29.1v56.9l-40.2 40.2a12 12 0 0 0 0 17l8.5 8.5a12 12 0 0 0 17 0l14.8-14.8V404a12 12 0 0 0 12 12h24a12 12 0 0 0 12-12v-30.3L215 388.5a12 12 0 0 0 17 0l8.5-8.5a12 12 0 0 0 0-17l-40.4-40.2v-56.9l68.3 39.5a177 177 0 0 1 19.7-37.5v-7.2L224.66 224l63.4-36.6v-56.1l-88 50.8zm248 197.7V304a16 16 0 0 0-32 0v18.9a48 48 0 1 0 32 0z"]]
};
exports.faTemperatureFrigid = faTemperatureFrigid;
var faTemperatureHigh = {
  prefix: 'fad',
  iconName: 'temperature-high',
  icon: [512, 512, [], "f769", ["M256 278.5V112a112 112 0 0 0-224 0v166.5C12.3 303.2 0 334 0 368a144 144 0 0 0 288 0c0-34-12.3-64.9-32-89.5zM144 448a79.87 79.87 0 0 1-48-143.8V112a48 48 0 0 1 96 0v192.2A79.87 79.87 0 0 1 144 448z", "M416 0a96 96 0 1 0 96 96 96.15 96.15 0 0 0-96-96zm0 128a32 32 0 1 1 32-32 32 32 0 0 1-32 32zM160 322.9V112a16 16 0 0 0-32 0v210.9a48 48 0 1 0 32 0z"]]
};
exports.faTemperatureHigh = faTemperatureHigh;
var faTemperatureHot = {
  prefix: 'fad',
  iconName: 'temperature-hot',
  icon: [640, 512, [], "f76a", ["M608 278.5V112C608 50.1 557.9 0 496 0S384 50.1 384 112v166.5c-19.7 24.6-32 55.5-32 89.5 0 79.5 64.5 144 144 144s144-64.5 144-144c0-34-12.3-64.9-32-89.5zM496 448c-44.1.1-79.9-35.6-80-79.7 0-25.2 11.8-48.9 32-64.1V112c0-26.5 21.5-48 48-48s48 21.5 48 48v192.2c35.3 26.4 42.5 76.5 16.1 111.8-15.2 20.2-38.9 32-64.1 32z", "M160 224c0 35.3 28.7 64 64 64s64-28.7 64-64-28.7-64-64-64-64 28.7-64 64zM237.6 8.4c-3.8-7.5-12.9-10.6-20.4-6.8-2.9 1.5-5.3 3.9-6.8 6.8L169 91.2 81.1 61.9c-8-2.6-16.6 1.8-19.2 9.8-1 3.1-1 6.4 0 9.4L91.2 169 8.4 210.4c-7.5 3.7-10.5 12.8-6.8 20.3 1.5 3 3.9 5.4 6.8 6.8L91.2 279l-29.3 87.9c-2.7 7.9 1.6 16.5 9.6 19.2 3.1 1 6.5 1 9.6 0l87.9-29.3 41.4 82.8c3.7 7.5 12.8 10.5 20.3 6.8 3-1.5 5.4-3.9 6.8-6.8l41.4-82.9 41.1 13.7c0-.8-.1-1.6-.1-2.5.1-35.9 11.3-70.8 32.1-100V112c0-16.9 3.5-33 8.9-48.1L279 91.2 237.6 8.4zm54.3 283.5c-37.5 37.4-98.3 37.4-135.8 0-37.5-37.4-37.4-98.4 0-135.8 37.5-37.5 98.3-37.5 135.8 0s37.5 98.3 0 135.8zm220.1 31V112c0-8.8-7.2-16-16-16s-16 7.2-16 16v210.9c-25 8.8-38.1 36.3-29.3 61.3s36.3 38.1 61.3 29.3 38.1-36.3 29.3-61.3c-4.9-13.7-15.6-24.5-29.3-29.3z"]]
};
exports.faTemperatureHot = faTemperatureHot;
var faTemperatureLow = {
  prefix: 'fad',
  iconName: 'temperature-low',
  icon: [512, 512, [], "f76b", ["M256 278.5V112a112 112 0 0 0-224 0v166.5C12.3 303.2 0 334 0 368a144 144 0 0 0 288 0c0-34-12.3-64.9-32-89.5zM144 448a79.87 79.87 0 0 1-48-143.8V112a48 48 0 0 1 96 0v192.2A79.87 79.87 0 0 1 144 448z", "M416 0a96 96 0 1 0 96 96 96.15 96.15 0 0 0-96-96zm0 128a32 32 0 1 1 32-32 32 32 0 0 1-32 32zM160 322.9V304a16 16 0 0 0-32 0v18.9a48 48 0 1 0 32 0z"]]
};
exports.faTemperatureLow = faTemperatureLow;
var faTenge = {
  prefix: 'fad',
  iconName: 'tenge',
  icon: [384, 512, [], "f7d7", ["M372 160H12a12 12 0 0 0-12 12v56a12 12 0 0 0 12 12h140v228a12 12 0 0 0 12 12h56a12 12 0 0 0 12-12V240h140a12 12 0 0 0 12-12v-56a12 12 0 0 0-12-12z", "M372 32H12A12 12 0 0 0 0 44v56a12 12 0 0 0 12 12h360a12 12 0 0 0 12-12V44a12 12 0 0 0-12-12z"]]
};
exports.faTenge = faTenge;
var faTennisBall = {
  prefix: 'fad',
  iconName: 'tennis-ball',
  icon: [496, 512, [], "f45e", ["M267,77.5c-.59-19.26,3-63.59,52.93-58.89A247.88,247.88,0,0,0,248,8c-3.61,0-7.19.09-10.76.25C224.55,26.92,218.1,51.32,219,79.1c2.2,71.2-69,149.7-147.9,147.8-27.88-1.19-52.18,5.45-70.85,18.24C.1,248.74,0,252.36,0,256a248.12,248.12,0,0,0,10.72,72.31C5.7,278,50.22,274.51,69.6,275c47.4,1.8,101.6-21.5,138.7-58.8C245.4,179.1,268.5,124.6,267,77.5ZM485.26,183.63c5,50.23-39.65,53.67-58.86,53.27-46.8-1.9-101.5,21.6-138.7,58.8S227.5,387.3,229,434.4c.59,19.39-3.13,63.72-53.34,58.87A248,248,0,0,0,248,504c3.57,0,7.12-.09,10.66-.24,12.79-18.67,19.24-43.08,18.34-70.86-2.4-77.5,76.4-150.5,147.9-147.9,27.83.9,52.27-5.57,70.86-18.31.15-3.54.24-7.11.24-10.69a247.87,247.87,0,0,0-10.74-72.37Z", "M424.9,285c-71.5-2.6-150.3,70.4-147.9,147.9.9,27.9-5.6,52.4-18.5,71.1,121-5.1,231.6-100.1,237.4-237.4C477.3,279.4,452.8,285.9,424.9,285ZM71.1,226.9C150,228.8,221.2,150.3,219,79.1c-.9-27.9,5.6-52.4,18.4-71.1C113.8,13.2,5.8,110.6,0,245.3c18.7-12.9,43.1-19.6,71.1-18.4Zm216.6,68.8c37.2-37.2,91.9-60.7,138.7-58.8,19.4.4,64.8-3.1,58.7-54.8A248.21,248.21,0,0,0,321.8,18.8c-51.7-6-55.4,39.2-54.8,58.7,1.5,47.1-21.6,101.6-58.7,138.7C171.2,253.5,117,276.8,69.6,275c-19.6-.5-64.9,3.1-58.7,55A247.64,247.64,0,0,0,174,493.1c51.8,6,55.6-39.1,55-58.7C227.5,387.3,250.6,332.8,287.7,295.7Z"]]
};
exports.faTennisBall = faTennisBall;
var faTerminal = {
  prefix: 'fad',
  iconName: 'terminal',
  icon: [640, 512, [], "f120", ["M640 421.34v32a24 24 0 0 1-24 24H312a24 24 0 0 1-24-24v-32a24 24 0 0 1 24-24h304a24 24 0 0 1 24 24z", "M29.7 464.66L7 442a24 24 0 0 1 0-33.9l154-154.76L7 98.6a24 24 0 0 1 0-33.9L29.7 42a24 24 0 0 1 33.94 0L258 236.37a24 24 0 0 1 0 33.94L63.64 464.66a24 24 0 0 1-33.94 0z"]]
};
exports.faTerminal = faTerminal;
var faText = {
  prefix: 'fad',
  iconName: 'text',
  icon: [448, 512, [], "f893", ["M304 416a16 16 0 0 1 16 16v32a16 16 0 0 1-16 16H144a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16z", "M448 48v96a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-32H264v304h-80V112H64v32a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16V48a16 16 0 0 1 16-16h416a16 16 0 0 1 16 16z"]]
};
exports.faText = faText;
var faTextHeight = {
  prefix: 'fad',
  iconName: 'text-height',
  icon: [576, 512, [], "f034", ["M320 48v96a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-32h-56v304h40a16 16 0 0 1 16 16v32a16 16 0 0 1-16 16H80a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h40V112H64v32a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16V48a16 16 0 0 1 16-16h288a16 16 0 0 1 16 16z", "M571.31 395.31l-80 80a16 16 0 0 1-22.62 0l-80-80c-10-10-3-27.31 11.31-27.31h48V144h-48c-15.64 0-20.64-18-11.31-27.31l80-80a16 16 0 0 1 22.62 0l80 80c10 10 3 27.31-11.31 27.31h-48v224h48c15.64 0 20.64 18 11.31 27.31z"]]
};
exports.faTextHeight = faTextHeight;
var faTextSize = {
  prefix: 'fad',
  iconName: 'text-size',
  icon: [640, 512, [], "f894", ["M320 240v64a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-16h-56v128h24a16 16 0 0 1 16 16v32a16 16 0 0 1-16 16H96a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h24V288H64v16a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16v-64a16 16 0 0 1 16-16h288a16 16 0 0 1 16 16z", "M640 48v96a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-32h-88v304h40a16 16 0 0 1 16 16v32a16 16 0 0 1-16 16H368a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h40V112h-88v32a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V48a16 16 0 0 1 16-16h352a16 16 0 0 1 16 16z"]]
};
exports.faTextSize = faTextSize;
var faTextWidth = {
  prefix: 'fad',
  iconName: 'text-width',
  icon: [448, 512, [], "f035", ["M448 48v80a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-16H264v112h24a16 16 0 0 1 16 16v32a16 16 0 0 1-16 16H160a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h24V112H64v16a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16V48a16 16 0 0 1 16-16h416a16 16 0 0 1 16 16z", "M443.31 372.69a16 16 0 0 1 0 22.62l-80 80c-10 10-27.31 3-27.31-11.31v-48H112v48c0 15.64-18 20.64-27.31 11.31l-80-80a16 16 0 0 1 0-22.62l80-80c10-10 27.31-3 27.31 11.31v48h224v-48c0-15.64 18-20.64 27.31-11.31z"]]
};
exports.faTextWidth = faTextWidth;
var faTh = {
  prefix: 'fad',
  iconName: 'th',
  icon: [512, 512, [], "f00a", ["M306.67 352H205.33a24 24 0 0 0-24 24v80a24 24 0 0 0 24 24h101.34a24 24 0 0 0 24-24v-80a24 24 0 0 0-24-24zM488 192H386.67a24 24 0 0 0-24 24v80a24 24 0 0 0 24 24H488a24 24 0 0 0 24-24v-80a24 24 0 0 0-24-24zM306.67 32H205.33a24 24 0 0 0-24 24v80a24 24 0 0 0 24 24h101.34a24 24 0 0 0 24-24V56a24 24 0 0 0-24-24zM125.33 192H24a24 24 0 0 0-24 24v80a24 24 0 0 0 24 24h101.33a24 24 0 0 0 24-24v-80a24 24 0 0 0-24-24z", "M488 352H386.67a24 24 0 0 0-24 24v80a24 24 0 0 0 24 24H488a24 24 0 0 0 24-24v-80a24 24 0 0 0-24-24zM306.67 192H205.33a24 24 0 0 0-24 24v80a24 24 0 0 0 24 24h101.34a24 24 0 0 0 24-24v-80a24 24 0 0 0-24-24zM488 32H386.67a24 24 0 0 0-24 24v80a24 24 0 0 0 24 24H488a24 24 0 0 0 24-24V56a24 24 0 0 0-24-24zm-362.67 0H24A24 24 0 0 0 0 56v80a24 24 0 0 0 24 24h101.33a24 24 0 0 0 24-24V56a24 24 0 0 0-24-24zm0 320H24a24 24 0 0 0-24 24v80a24 24 0 0 0 24 24h101.33a24 24 0 0 0 24-24v-80a24 24 0 0 0-24-24z"]]
};
exports.faTh = faTh;
var faThLarge = {
  prefix: 'fad',
  iconName: 'th-large',
  icon: [512, 512, [], "f009", ["M488 272H296a24 24 0 0 0-24 24v160a24 24 0 0 0 24 24h192a24 24 0 0 0 24-24V296a24 24 0 0 0-24-24zm-272 0H24a24 24 0 0 0-24 24v160a24 24 0 0 0 24 24h192a24 24 0 0 0 24-24V296a24 24 0 0 0-24-24z", "M488 32H296a24 24 0 0 0-24 24v160a24 24 0 0 0 24 24h192a24 24 0 0 0 24-24V56a24 24 0 0 0-24-24zm-272 0H24A24 24 0 0 0 0 56v160a24 24 0 0 0 24 24h192a24 24 0 0 0 24-24V56a24 24 0 0 0-24-24z"]]
};
exports.faThLarge = faThLarge;
var faThList = {
  prefix: 'fad',
  iconName: 'th-list',
  icon: [512, 512, [], "f00b", ["M488 352H205.33a24 24 0 0 0-24 24v80a24 24 0 0 0 24 24H488a24 24 0 0 0 24-24v-80a24 24 0 0 0-24-24zm0-320H205.33a24 24 0 0 0-24 24v80a24 24 0 0 0 24 24H488a24 24 0 0 0 24-24V56a24 24 0 0 0-24-24zm0 160H205.33a24 24 0 0 0-24 24v80a24 24 0 0 0 24 24H488a24 24 0 0 0 24-24v-80a24 24 0 0 0-24-24z", "M125.33 192H24a24 24 0 0 0-24 24v80a24 24 0 0 0 24 24h101.33a24 24 0 0 0 24-24v-80a24 24 0 0 0-24-24zm0-160H24A24 24 0 0 0 0 56v80a24 24 0 0 0 24 24h101.33a24 24 0 0 0 24-24V56a24 24 0 0 0-24-24zm0 320H24a24 24 0 0 0-24 24v80a24 24 0 0 0 24 24h101.33a24 24 0 0 0 24-24v-80a24 24 0 0 0-24-24z"]]
};
exports.faThList = faThList;
var faTheaterMasks = {
  prefix: 'fad',
  iconName: 'theater-masks',
  icon: [640, 512, [], "f630", ["M229.45 303.5l.46-2.61q-4.28.54-8.59 1.29c-40.27 7.08-73.4 26.26-92.56 50-4.21-49.87 31-95.87 82.8-105a102.8 102.8 0 0 1 28-1.07l10.23-57.89a43 43 0 0 1-25.11-31.69 42.49 42.49 0 0 1-.1-13 65.27 65.27 0 0 0 31.94 6.67l4.62-26.14c4.77-27.26 25.39-48.68 51.53-53.9l1.13-.21 1.28-.23h.13c3-.48 5.94-.92 8.92-1.34l1.75-.23c2.38-.32 4.76-.63 7.14-.91l2.57-.3q3.19-.36 6.39-.68l2.82-.26q3.18-.3 6.37-.55l2.59-.2c2.38-.17 4.76-.33 7.14-.46l1.71-.11q8.7-.47 17.39-.61l-.7-4c-4.93-28.09-26.7-50-54-54.34a453.62 453.62 0 0 0-292 51.33C9 70.46-3.89 98.44 1 126.54L32.82 306c15.39 87 156.86 151.86 219.9 140.79 8.52-1.5 17.93-4.81 27.77-9.6-34.29-39.84-58.83-89.61-51.04-133.69zM90.54 182.72a41.87 41.87 0 0 1-.09-13c11.64 6 26.73 8.33 42.5 5.56s29.15-10.12 38-19.71a42.58 42.58 0 0 1 4.38 12.26 43.06 43.06 0 0 1-84.82 14.92z", "M606.8 121.05a452.59 452.59 0 0 0-291.69-51.33c-27.28 4.36-49 26.25-53.94 54.34L229.45 303.5c-15.37 87 95.18 196.19 158.14 207.27S591.85 457 607.22 370L639 190.54c4.88-28.1-8-56.08-32.2-69.49zm-272.95 96.76a40 40 0 1 1 74.64 25.25c-8.24-8.9-20.65-15.74-35.28-18.31s-28.64-.4-39.44 5.17a39 39 0 0 1 .08-12.11zm70.36 198.68c-55.62-9.78-93.42-59.24-88.9-112.85 20.58 25.53 56.15 46.15 99.38 53.76s83.73.37 111.81-16.6c-14.17 51.92-66.64 85.48-122.29 75.69zm134.26-162.67a39.44 39.44 0 0 1-4.06 11.39c-8.24-8.9-20.66-15.74-35.3-18.31s-28.64-.4-39.43 5.17a39 39 0 0 1 .09-12.1 40 40 0 0 1 78.7 13.85z"]]
};
exports.faTheaterMasks = faTheaterMasks;
var faThermometer = {
  prefix: 'fad',
  iconName: 'thermometer',
  icon: [512, 512, [], "f491", ["M484.05 162.6l-254.2 253.3H130l-89 89A24 24 0 0 1 7.05 471l89-89V281.1l45.34-45.64 50.06 50.14a8 8 0 0 0 11.3 0l11.3-11.3a8 8 0 0 0 0-11.3l-50.13-50.21 45.13-45.42 50.3 50.23a8 8 0 0 0 11.3 0L282 206.3a8 8 0 0 0 0-11.3l-50.3-50.37 45.1-45.4 50.4 50.47a8 8 0 0 0 11.3 0l11.3-11.3a8 8 0 0 0 0-11.3l-50.5-50.51 45.7-46c36.4-36.5 94.4-40.9 131.9-10.2C526.25 61.1 519 127.7 484.05 162.6z", "M214.05 263a8 8 0 0 1 0 11.3l-11.3 11.3a8 8 0 0 1-11.3 0l-50.06-50.14 22.53-22.67zm62.7-163.77l50.4 50.47a8 8 0 0 0 11.3 0l11.3-11.3a8 8 0 0 0 0-11.3l-50.5-50.51zm-6.1 118.37L282 206.3a8 8 0 0 0 0-11.3l-50.3-50.37-22.6 22.74 50.3 50.23a8 8 0 0 0 11.25 0z"]]
};
exports.faThermometer = faThermometer;
var faThermometerEmpty = {
  prefix: 'fad',
  iconName: 'thermometer-empty',
  icon: [320, 512, [], "f2cb", ["M272 278.5V112a112 112 0 0 0-224 0v166.5C28.3 303.2 16 334 16 368a144 144 0 0 0 288 0c0-34-12.3-64.9-32-89.5zM160 448a79.87 79.87 0 0 1-48-143.8V112a48 48 0 0 1 96 0v192.2A79.87 79.87 0 0 1 160 448z", "M208 368a48 48 0 1 1-48-48 48 48 0 0 1 48 48z"]]
};
exports.faThermometerEmpty = faThermometerEmpty;
var faThermometerFull = {
  prefix: 'fad',
  iconName: 'thermometer-full',
  icon: [320, 512, [], "f2c7", ["M272 278.5V112a112 112 0 0 0-224 0v166.5C28.3 303.2 16 334 16 368a144 144 0 0 0 288 0c0-34-12.3-64.9-32-89.5zM160 448a79.87 79.87 0 0 1-48-143.8V112a48 48 0 0 1 96 0v192.2A79.87 79.87 0 0 1 160 448z", "M208 368a48 48 0 1 1-64-45.1V112a16 16 0 0 1 32 0v210.9a47.87 47.87 0 0 1 32 45.1z"]]
};
exports.faThermometerFull = faThermometerFull;
var faThermometerHalf = {
  prefix: 'fad',
  iconName: 'thermometer-half',
  icon: [320, 512, [], "f2c9", ["M272 278.5V112a112 112 0 0 0-224 0v166.5C28.3 303.2 16 334 16 368a144 144 0 0 0 288 0c0-34-12.3-64.9-32-89.5zM160 448a79.87 79.87 0 0 1-48-143.8V112a48 48 0 0 1 96 0v192.2A79.87 79.87 0 0 1 160 448z", "M208 368a48 48 0 1 1-64-45.1V208a16 16 0 0 1 32 0v114.9a47.87 47.87 0 0 1 32 45.1z"]]
};
exports.faThermometerHalf = faThermometerHalf;
var faThermometerQuarter = {
  prefix: 'fad',
  iconName: 'thermometer-quarter',
  icon: [320, 512, [], "f2ca", ["M272 278.5V112a112 112 0 0 0-224 0v166.5C28.3 303.2 16 334 16 368a144 144 0 0 0 288 0c0-34-12.3-64.9-32-89.5zM160 448a79.87 79.87 0 0 1-48-143.8V112a48 48 0 0 1 96 0v192.2A79.87 79.87 0 0 1 160 448z", "M208 368a48 48 0 1 1-64-45.1V272a16 16 0 0 1 32 0v50.9a47.87 47.87 0 0 1 32 45.1z"]]
};
exports.faThermometerQuarter = faThermometerQuarter;
var faThermometerThreeQuarters = {
  prefix: 'fad',
  iconName: 'thermometer-three-quarters',
  icon: [320, 512, [], "f2c8", ["M272 278.5V112a112 112 0 0 0-224 0v166.5C28.3 303.2 16 334 16 368a144 144 0 0 0 288 0c0-34-12.3-64.9-32-89.5zM160 448a79.87 79.87 0 0 1-48-143.8V112a48 48 0 0 1 96 0v192.2A79.87 79.87 0 0 1 160 448z", "M208 368a48 48 0 1 1-64-45.1V144a16 16 0 0 1 32 0v178.9a47.87 47.87 0 0 1 32 45.1z"]]
};
exports.faThermometerThreeQuarters = faThermometerThreeQuarters;
var faTheta = {
  prefix: 'fad',
  iconName: 'theta',
  icon: [384, 512, [], "f69e", ["M288 256a229.75 229.75 0 0 1-4.92 48H100.92a236.61 236.61 0 0 1 0-96h182.16a229.75 229.75 0 0 1 4.92 48z", "M192 104c27.82 0 48.24 18.83 60.46 34.62 10.67 13.78 19.18 30.4 25.3 49.4A221.26 221.26 0 0 1 288 256a221.26 221.26 0 0 1-10.24 68c-6.12 19-14.63 35.62-25.3 49.4C240.24 389.17 219.82 408 192 408s-48.24-18.83-60.46-34.62c-10.67-13.78-19.18-30.4-25.3-49.4A221.26 221.26 0 0 1 96 256a221.26 221.26 0 0 1 10.24-68c6.12-19 14.63-35.62 25.3-49.4C143.76 122.83 164.18 104 192 104m0-96C84.34 8 0 116.94 0 256s84.34 248 192 248 192-108.94 192-248S299.66 8 192 8z"]]
};
exports.faTheta = faTheta;
var faThumbsDown = {
  prefix: 'fad',
  iconName: 'thumbs-down',
  icon: [512, 512, [], "f165", ["M512 277.9c-.16 30.35-26.16 58.1-59.55 58.1H350.72C358 364.34 384 388.13 384 430.55 384 504 336 512 312 512c-20.18 0-29.48-39.29-33.93-57.79-5.21-21.67-10.59-44.07-25.39-58.91-32.47-32.52-49.51-74-89.12-113.11a12 12 0 0 1-3.56-8.52V59.9a12 12 0 0 1 11.78-12c15.83-.29 36.7-9.08 52.66-16.17C256.19 17.6 295.71 0 344 0h2.85c42.78 0 93.36.41 113.77 29.74 8.39 12.05 10.45 27 6.15 44.63 16.31 17 25.06 48.86 16.38 74.76 17.55 23.43 19.15 56.13 9.31 79.46l.11.12C504.45 240.65 512.08 260 512 277.9z", "M104 32H24A24 24 0 0 0 0 56v240a24 24 0 0 0 24 24h80a24 24 0 0 0 24-24V56a24 24 0 0 0-24-24zM64 280a24 24 0 1 1 24-24 24 24 0 0 1-24 24z"]]
};
exports.faThumbsDown = faThumbsDown;
var faThumbsUp = {
  prefix: 'fad',
  iconName: 'thumbs-up',
  icon: [512, 512, [], "f164", ["M163.56 229.81c39.61-39.15 56.65-80.59 89.12-113.11 14.8-14.84 20.18-37.24 25.39-58.91C282.52 39.29 291.82 0 312 0c24 0 72 8 72 81.45 0 42.42-26 66.21-33.28 94.55h101.73c33.39 0 59.39 27.75 59.55 58.1.08 17.94-7.55 37.25-19.44 49.19l-.11.12c9.84 23.33 8.24 56-9.31 79.46 8.68 25.9-.07 57.71-16.38 74.76 4.3 17.6 2.24 32.58-6.15 44.63C440.2 511.59 389.62 512 346.84 512H344c-48.28 0-87.8-17.6-119.56-31.73-16-7.09-36.82-15.88-52.65-16.17a12 12 0 0 1-11.78-12V238.33a12 12 0 0 1 3.55-8.52z", "M104 224H24a24 24 0 0 0-24 24v240a24 24 0 0 0 24 24h80a24 24 0 0 0 24-24V248a24 24 0 0 0-24-24zM64 472a24 24 0 1 1 24-24 24 24 0 0 1-24 24z"]]
};
exports.faThumbsUp = faThumbsUp;
var faThumbtack = {
  prefix: 'fad',
  iconName: 'thumbtack',
  icon: [384, 512, [], "f08d", ["M384 328a24 24 0 0 1-24 24H224V208a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v144H24a24 24 0 0 1-24-24c0-50.74 37.47-91.18 86-113.73L98.21 96H56a24 24 0 0 1-24-24V24A24 24 0 0 1 56 0h272a24 24 0 0 1 24 24v48a24 24 0 0 1-24 24h-42.21L298 214.27c48 22.31 86 62.55 86 113.73z", "M224 208v248a8 8 0 0 1-.84 3.57l-24 48a8 8 0 0 1-14.32 0l-24-48A8 8 0 0 1 160 456V208a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16z"]]
};
exports.faThumbtack = faThumbtack;
var faThunderstorm = {
  prefix: 'fad',
  iconName: 'thunderstorm',
  icon: [512, 512, [], "f76c", ["M350 310.5l-98 194a15 15 0 0 1-27.6-11L256 352h-81a15 15 0 0 1-14.9-17l16-130a15.08 15.08 0 0 1 14.9-13h82a15 15 0 0 1 14.5 18.9L264.92 288H337a15 15 0 0 1 13 22.5z", "M512 224a96 96 0 0 1-96 96h-30a46.78 46.78 0 0 0-45-60h-30.5l10.9-40.9A47 47 0 0 0 276 160h-85a47.1 47.1 0 0 0-46.6 40.8L128.5 320H96a96 96 0 0 1-96-96c0-42.5 27.8-78.2 66.1-90.8A113.72 113.72 0 0 1 64 112 111.94 111.94 0 0 1 176 0c43.3 0 80.4 24.8 99 60.8C289.7 43.3 311.4 32 336 32a80 80 0 0 1 80 80 78.09 78.09 0 0 1-1.6 16.2c.5 0 1-.2 1.6-.2a96 96 0 0 1 96 96z"]]
};
exports.faThunderstorm = faThunderstorm;
var faThunderstormMoon = {
  prefix: 'fad',
  iconName: 'thunderstorm-moon',
  icon: [576, 512, [], "f76d", ["M567.94 223.8c-70.4 13.3-135-40.3-135-110.8a112.62 112.62 0 0 1 57.5-98.1 6.74 6.74 0 0 0-2.1-12.5 146.75 146.75 0 0 0-26.5-2.4c-77.91 0-141.11 61.2-144.41 137.9a111.46 111.46 0 0 1 58.9 61.7 111.82 111.82 0 0 1 70.21 86.8c5.1.5 10 1.5 15.2 1.5a145 145 0 0 0 112.6-53.3c4.2-4.8-.2-12-6.4-10.8zM276 336h-57.68l17.3-64.9A12 12 0 0 0 224 256h-68a12.06 12.06 0 0 0-11.9 10.4l-16 120A12 12 0 0 0 140 400h59.3l-23 97.2a12 12 0 0 0 22.1 8.8l88-152a12 12 0 0 0-10.4-18z", "M350.58 225.5A79.91 79.91 0 0 1 336 384h-30l8.11-14A44 44 0 0 0 276 304h-16l6.6-24.7a44 44 0 0 0-42.55-55.3H156a44.26 44.26 0 0 0-43.71 38.2l-16 120a10.82 10.82 0 0 1 0 1.8H80a80 80 0 0 1-15.8-158.4c0-.5-.2-1.1-.2-1.6a95.85 95.85 0 0 1 173.74-56 79 79 0 0 1 34.31-8 80 80 0 0 1 78.51 65.5z"]]
};
exports.faThunderstormMoon = faThunderstormMoon;
var faThunderstormSun = {
  prefix: 'fad',
  iconName: 'thunderstorm-sun',
  icon: [576, 512, [], "f76e", ["M322 96.2l8.9-26.7a13 13 0 0 0-16.5-16.4l-75.3 25.1-35.5-71a13 13 0 0 0-23.3 0l-35.5 71-75.3-25.1a13 13 0 0 0-16.4 16.5l25.1 75.3-71 35.5a13 13 0 0 0 0 23.3l71 35.5-25.1 75.3A13.06 13.06 0 0 0 69.6 331l59.2-19.7c-.2-2.4-.7-4.7-.7-7.2a110.52 110.52 0 0 1 6.2-35.9 92.22 92.22 0 0 1-10.2-8.3 96.21 96.21 0 0 1 0-135.8c34.6-34.6 89.1-36.8 126.7-7.4A127.12 127.12 0 0 1 320 96c.7 0 1.3.2 2 .2zM128 192a63.4 63.4 0 0 0 21.1 47.1 112.14 112.14 0 0 1 44.8-37.2 127.52 127.52 0 0 1 31.9-64A63.13 63.13 0 0 0 192 128a64.06 64.06 0 0 0-64 64zm308 144h-57.7l17.3-64.9A12 12 0 0 0 384 256h-68a12.06 12.06 0 0 0-11.9 10.4l-16 120A12 12 0 0 0 300 400h59.3l-23 97.2a12 12 0 0 0 22.1 8.8l88-152a12 12 0 0 0-10.4-18z", "M510.58 225.5A79.91 79.91 0 0 1 496 384h-30l8.11-14A44 44 0 0 0 436 304h-16l6.6-24.7a44 44 0 0 0-42.55-55.3H316a44.26 44.26 0 0 0-43.71 38.2l-16 120a10.82 10.82 0 0 1 0 1.8H240a80 80 0 0 1-15.8-158.4c0-.5-.2-1.1-.2-1.6a95.85 95.85 0 0 1 173.74-56 79 79 0 0 1 34.31-8 80 80 0 0 1 78.51 65.5z"]]
};
exports.faThunderstormSun = faThunderstormSun;
var faTicket = {
  prefix: 'fad',
  iconName: 'ticket',
  icon: [576, 512, [], "f145", ["M576 208v-96a48 48 0 0 0-48-48H48a48 48 0 0 0-48 48v96a48 48 0 0 1 0 96v96a48 48 0 0 0 48 48h480a48 48 0 0 0 48-48v-96a48 48 0 0 1 0-96zM400 400a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm0-64a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm0-64a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm0-64a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm0-64a16 16 0 1 1 16-16 16 16 0 0 1-16 16z", "M400 304a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm0 64a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm0-224a16 16 0 1 0-16-16 16 16 0 0 0 16 16zm0 96a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm0-64a16 16 0 1 0 16 16 16 16 0 0 0-16-16z"]]
};
exports.faTicket = faTicket;
var faTicketAlt = {
  prefix: 'fad',
  iconName: 'ticket-alt',
  icon: [576, 512, [], "f3ff", ["M576 208v-96a48 48 0 0 0-48-48H48a48 48 0 0 0-48 48v96a48 48 0 0 1 0 96v96a48 48 0 0 0 48 48h480a48 48 0 0 0 48-48v-96a48 48 0 0 1 0-96zm-96 176H96V128h384z", "M480 128v256H96V128z"]]
};
exports.faTicketAlt = faTicketAlt;
var faTilde = {
  prefix: 'fad',
  iconName: 'tilde',
  icon: [512, 512, [], "f69f", ["M512 192v46.75c0 89-80.45 159.56-172.46 142.76-35.54-6.51-66.75-27.68-89.31-55.87l-66.52-83.15A49.25 49.25 0 0 0 96 273.25V321a32 32 0 0 1-32 32H32a32 32 0 0 1-32-32v-40.92C0 202 58.67 132.75 136.64 128.25a144.69 144.69 0 0 1 122.05 54.27l69.59 87A49.26 49.26 0 0 0 416 238.75V192a32 32 0 0 1 32-32h32a32 32 0 0 1 32 32z", ""]]
};
exports.faTilde = faTilde;
var faTimes = {
  prefix: 'fad',
  iconName: 'times',
  icon: [352, 512, [], "f00d", ["M9.21,356.07a31.46,31.46,0,0,0,0,44.48l22.24,22.24a31.46,31.46,0,0,0,44.48,0L176,322.72,109.28,256ZM342.79,111.45,320.55,89.21a31.46,31.46,0,0,0-44.48,0L176,189.28,242.72,256,342.79,155.93a31.46,31.46,0,0,0,0-44.48Z", "M342.79,356.07a31.46,31.46,0,0,1,0,44.48l-22.24,22.24a31.46,31.46,0,0,1-44.48,0L9.21,155.93a31.46,31.46,0,0,1,0-44.48L31.45,89.21a31.46,31.46,0,0,1,44.48,0Z"]]
};
exports.faTimes = faTimes;
var faTimesCircle = {
  prefix: 'fad',
  iconName: 'times-circle',
  icon: [512, 512, [], "f057", ["M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1a12 12 0 0 1 0 17L338 377.6a12 12 0 0 1-17 0L256 312l-65.1 65.6a12 12 0 0 1-17 0L134.4 338a12 12 0 0 1 0-17l65.6-65-65.6-65.1a12 12 0 0 1 0-17l39.6-39.6a12 12 0 0 1 17 0l65 65.7 65.1-65.6a12 12 0 0 1 17 0l39.6 39.6a12 12 0 0 1 0 17L312 256z", "M377.6 321.1a12 12 0 0 1 0 17L338 377.6a12 12 0 0 1-17 0L256 312l-65.1 65.6a12 12 0 0 1-17 0L134.4 338a12 12 0 0 1 0-17l65.6-65-65.6-65.1a12 12 0 0 1 0-17l39.6-39.6a12 12 0 0 1 17 0l65 65.7 65.1-65.6a12 12 0 0 1 17 0l39.6 39.6a12 12 0 0 1 0 17L312 256z"]]
};
exports.faTimesCircle = faTimesCircle;
var faTimesHexagon = {
  prefix: 'fad',
  iconName: 'times-hexagon',
  icon: [576, 512, [], "f2ee", ["M553.49 231.8l-112-192A48.14 48.14 0 0 0 400 16H176a48.07 48.07 0 0 0-41.49 23.8l-112 192a48.09 48.09 0 0 0 0 48.4l112 192A48.07 48.07 0 0 0 176 496h224a48.13 48.13 0 0 0 41.5-23.8l112-192a48.14 48.14 0 0 0 0-48.4zM409.6 321a12 12 0 0 1 0 17l-39.38 39.8a12 12 0 0 1-17 0l-65.1-65.1L223 377.8a12 12 0 0 1-17 0l-39.6-39.6a12 12 0 0 1 0-17l65.09-65.1-65.05-65.1a12 12 0 0 1 0-17l39.5-39.7a12 12 0 0 1 17 0L288 199.4l65-65a12 12 0 0 1 17 0l39.69 39.5a12 12 0 0 1 0 17L344.61 256z", "M409.6 321a12 12 0 0 1 0 17l-39.38 39.8a12 12 0 0 1-17 0l-65.1-65.1L223 377.8a12 12 0 0 1-17 0l-39.6-39.6a12 12 0 0 1 0-17l65.09-65.1-65.05-65.1a12 12 0 0 1 0-17l39.5-39.7a12 12 0 0 1 17 0L288 199.4l65-65a12 12 0 0 1 17 0l39.69 39.5a12 12 0 0 1 0 17L344.61 256z"]]
};
exports.faTimesHexagon = faTimesHexagon;
var faTimesOctagon = {
  prefix: 'fad',
  iconName: 'times-octagon',
  icon: [512, 512, [], "f2f0", ["M497.9 150.5L361.4 14.1A48 48 0 0 0 327.5 0H184.4a48 48 0 0 0-33.9 14.1L14.1 150.6A48 48 0 0 0 0 184.5v143.1a48 48 0 0 0 14.1 33.9l136.5 136.4a48 48 0 0 0 33.9 14.1h143.1a48 48 0 0 0 33.9-14.1l136.4-136.5a48 48 0 0 0 14.1-33.9V184.4a48 48 0 0 0-14.1-33.9zM377.6 321a12 12 0 0 1 0 17l-39.4 39.8a12 12 0 0 1-17 0l-65.1-65.1-65.1 65.1a12 12 0 0 1-17 0l-39.6-39.6a12 12 0 0 1 0-17l65.1-65.1-65.1-65.1a12 12 0 0 1 0-17l39.5-39.7a12 12 0 0 1 17 0l65.1 65.1 65-65a12 12 0 0 1 17 0l39.7 39.5a12 12 0 0 1 0 17L312.6 256z", "M134.4 191a12 12 0 0 1 0-17l39.5-39.7a12 12 0 0 1 17 0l65.1 65.1 65-65a12 12 0 0 1 17 0l39.7 39.5a12 12 0 0 1 0 17L312.6 256l65 65a12 12 0 0 1 0 17l-39.4 39.8a12 12 0 0 1-17 0l-65.1-65.1-65.1 65.1a12 12 0 0 1-17 0l-39.6-39.6a12 12 0 0 1 0-17l65.1-65.1z"]]
};
exports.faTimesOctagon = faTimesOctagon;
var faTimesSquare = {
  prefix: 'fad',
  iconName: 'times-square',
  icon: [448, 512, [], "f2d3", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-54.4 289.1a12 12 0 0 1 0 17L306 377.6a12 12 0 0 1-17 0L224 312l-65.1 65.6a12 12 0 0 1-17 0L102.4 338a12 12 0 0 1 0-17l65.6-65-65.6-65.1a12 12 0 0 1 0-17l39.6-39.6a12 12 0 0 1 17 0l65 65.7 65.1-65.6a12 12 0 0 1 17 0l39.6 39.6a12 12 0 0 1 0 17L280 256z", "M102.4 190.9a12 12 0 0 1 0-17l39.6-39.6a12 12 0 0 1 17 0l65 65.7 65.1-65.6a12 12 0 0 1 17 0l39.6 39.6a12 12 0 0 1 0 17L280 256l65.6 65.1a12 12 0 0 1 0 17L306 377.6a12 12 0 0 1-17 0L224 312l-65.1 65.6a12 12 0 0 1-17 0L102.4 338a12 12 0 0 1 0-17l65.6-65z"]]
};
exports.faTimesSquare = faTimesSquare;
var faTint = {
  prefix: 'fad',
  iconName: 'tint',
  icon: [352, 512, [], "f043", ["M205.22 22.09c-7.94-28.78-49.44-30.12-58.44 0C100 179.85 0 222.72 0 333.91 0 432.35 78.72 512 176 512s176-79.65 176-178.09c0-111.75-99.79-153.34-146.78-311.82zM176 448A112.14 112.14 0 0 1 64 336a16 16 0 0 1 32 0 80.09 80.09 0 0 0 80 80 16 16 0 0 1 0 32z", "M176 448A112.14 112.14 0 0 1 64 336a16 16 0 0 1 32 0 80.09 80.09 0 0 0 80 80 16 16 0 0 1 0 32z"]]
};
exports.faTint = faTint;
var faTintSlash = {
  prefix: 'fad',
  iconName: 'tint-slash',
  icon: [640, 512, [], "f5c7", ["M162.72 255.78L436.4 467.3A174 174 0 0 1 320 512c-97.28 0-176-79.65-176-178.09 0-29.78 7.31-54.63 18.72-78.13zM495.2 351c.52-5.61.8-11.3.8-17 0-111.75-99.79-153.34-146.78-311.82-7.94-28.78-49.44-30.12-58.44 0-15.5 52.3-36.86 92-58.48 125.68z", "M636.64 480.55L617 505.82a16 16 0 0 1-22.46 2.81L6.18 53.9a16 16 0 0 1-2.81-22.45L23 6.18a16 16 0 0 1 22.47-2.81L633.82 458.1a16 16 0 0 1 2.82 22.45z"]]
};
exports.faTintSlash = faTintSlash;
var faTire = {
  prefix: 'fad',
  iconName: 'tire',
  icon: [512, 512, [], "f631", ["M256 64C150 64 64 150 64 256s86 192 192 192 192-86 192-192S362 64 256 64zm0 48a143.36 143.36 0 0 1 64.08 15l-38.86 53.51a73.73 73.73 0 0 0-50.44 0L191.92 127A143.36 143.36 0 0 1 256 112zM113.52 277a145.25 145.25 0 0 1-1.52-21 143 143 0 0 1 41.13-100.75l38.75 53.34A79.28 79.28 0 0 0 176 256c0 .25.07.48.07.72zM232 398a144.57 144.57 0 0 1-103.68-75.29L191 302.36a79.77 79.77 0 0 0 41 29.57zm24-110a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm101.82 69.82A142.84 142.84 0 0 1 280 398v-66.07a79.77 79.77 0 0 0 41-29.57l62.68 20.36a144.24 144.24 0 0 1-25.86 35.1zm-21.89-101.09c0-.25.07-.48.07-.73a79.28 79.28 0 0 0-15.88-47.41l38.75-53.34A143 143 0 0 1 400 256a146.93 146.93 0 0 1-1.52 21.05z", "M256 224a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm0-224C114.62 0 0 114.62 0 256s114.62 256 256 256 256-114.62 256-256S397.38 0 256 0zm0 448c-105.87 0-192-86.13-192-192S150.13 64 256 64s192 86.13 192 192-86.13 192-192 192z"]]
};
exports.faTire = faTire;
var faTireFlat = {
  prefix: 'fad',
  iconName: 'tire-flat',
  icon: [512, 512, [], "f632", ["M189.89 416a145.47 145.47 0 0 1-61.57-61.28L191 334.36a79.77 79.77 0 0 0 41 29.57V416h48v-52.07a79.77 79.77 0 0 0 41-29.57l62.68 20.36A145.47 145.47 0 0 1 322.11 416h77A191.26 191.26 0 0 0 448 288c0-106-86-192-192-192S64 182 64 288a191.26 191.26 0 0 0 48.91 128zM256 320a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm102.87-132.75A143 143 0 0 1 400 288a146.93 146.93 0 0 1-1.52 21.05l-62.55-20.32c0-.25.07-.48.07-.73a79.28 79.28 0 0 0-15.88-47.41zM256 144a143.36 143.36 0 0 1 64.08 15l-38.86 53.51a73.73 73.73 0 0 0-50.44 0L191.92 159A143.36 143.36 0 0 1 256 144zm-102.87 43.25l38.75 53.34A79.28 79.28 0 0 0 176 288c0 .25.07.48.07.72L113.52 309a145.25 145.25 0 0 1-1.52-21 143 143 0 0 1 41.13-100.75z", "M480 416h-2.61A253.53 253.53 0 0 0 512 288c0-141.38-114.62-256-256-256S0 146.62 0 288a253.53 253.53 0 0 0 34.61 128H32a32 32 0 0 0 0 64h448a32 32 0 0 0 0-64zm-81.3 0H113.3A191 191 0 0 1 64 288c0-105.87 86.13-192 192-192s192 86.13 192 192a191 191 0 0 1-49.3 128zM256 256a32 32 0 1 0 32 32 32 32 0 0 0-32-32z"]]
};
exports.faTireFlat = faTireFlat;
var faTirePressureWarning = {
  prefix: 'fad',
  iconName: 'tire-pressure-warning',
  icon: [512, 512, [], "f633", ["M512 284.08c0 76.81-32.54 146.14-80 195.92v16a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-16h-32v16a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-16h-32v16a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-16h-32v16a16 16 0 0 1-16 16H96a16 16 0 0 1-16-16v-16C32.54 430.22 0 360.89 0 284.08a286.45 286.45 0 0 1 37.5-142.53C53.67 113.26 64 80.62 64 46.09V17.14C64 7.67 71.16 0 80 0h32a16 16 0 0 1 16 16v48c0 32-15.23 74.85-34.93 109.31A223.34 223.34 0 0 0 64 284.08c0 41.12 12.75 82.49 35.8 118.12 5.72 8.84 16 13.79 26.48 13.79h259.44c10.53 0 20.76-4.94 26.48-13.79 23.05-35.63 35.8-77 35.8-118.12a223.37 223.37 0 0 0-29.06-110.77C399.23 138.85 384 96 384 64V16a16 16 0 0 1 16-16h32c8.84 0 16 7.67 16 17.14v29c0 34.52 10.33 67.17 26.5 95.45A286.51 286.51 0 0 1 512 284.08z", "M278.32 96h-44.64a16 16 0 0 0-15.92 17.59l12.8 128A16 16 0 0 0 246.48 256h19a16 16 0 0 0 15.92-14.41l12.8-128A16 16 0 0 0 278.32 96zM256 288a32 32 0 1 0 32 32 32 32 0 0 0-32-32z"]]
};
exports.faTirePressureWarning = faTirePressureWarning;
var faTireRugged = {
  prefix: 'fad',
  iconName: 'tire-rugged',
  icon: [512, 512, [], "f634", ["M256 128a128 128 0 1 0 128 128 128 128 0 0 0-128-128zm-72 152a24 24 0 1 1 24-24 24 24 0 0 1-24 24zm72 72a24 24 0 1 1 24-24 24 24 0 0 1-24 24zm0-144a24 24 0 1 1 24-24 24 24 0 0 1-24 24zm72 72a24 24 0 1 1 24-24 24 24 0 0 1-24 24z", "M480 192h-9.4a222.73 222.73 0 0 0-17.53-42.56l6.58-6.58a32 32 0 0 0 0-45.25L414.4 52.35a32 32 0 0 0-45.25 0l-6.58 6.58A221.82 221.82 0 0 0 320 41.4V32a32 32 0 0 0-32-32h-64a32 32 0 0 0-32 32v9.4a222.73 222.73 0 0 0-42.56 17.53l-6.58-6.58a32 32 0 0 0-45.25 0L52.35 97.61a32 32 0 0 0 0 45.25l6.58 6.58A222.64 222.64 0 0 0 41.4 192H32a32 32 0 0 0-32 32v64a32 32 0 0 0 32 32h9.4a222.73 222.73 0 0 0 17.53 42.56l-6.58 6.58a32 32 0 0 0 0 45.25l45.25 45.27a32 32 0 0 0 45.25 0l6.58-6.58A221.82 221.82 0 0 0 192 470.61V480a32 32 0 0 0 32 32h64a32 32 0 0 0 32-32v-9.4a222.73 222.73 0 0 0 42.56-17.53l6.58 6.58a32 32 0 0 0 45.25 0l45.25-45.26a32 32 0 0 0 0-45.25l-6.58-6.58A221.82 221.82 0 0 0 470.6 320h9.4a32 32 0 0 0 32-32v-64a32 32 0 0 0-32-32zM256 384a128 128 0 1 1 128-128 128 128 0 0 1-128 128z"]]
};
exports.faTireRugged = faTireRugged;
var faTired = {
  prefix: 'fad',
  iconName: 'tired',
  icon: [496, 512, [], "f5c8", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8ZM118.8,248.3,152.4,208l-33.6-40.3c-8.6-10.3,3.8-24.9,15.4-18l80,48a12,12,0,0,1,0,20.6l-80,48c-11.5,6.8-24-7.6-15.4-18ZM353.5,415.1C327.6,404,289.1,397.7,248,397.7s-79.6,6.3-105.5,17.4c-9.8,4.2-19.4-7-17.7-20.4C132.7,331.8,196.1,288,248,288s115.3,43.8,123.2,106.7C372.9,408.3,363.2,419.3,353.5,415.1Zm8.3-148.8-80-48a12.07,12.07,0,0,1,0-20.6l80-48c11.6-6.9,24,7.7,15.4,18L343.6,208l33.6,40.3c8.7,10.4-3.9,24.8-15.4,18Z", "M214.2,197.7l-80-48c-11.6-6.9-24,7.7-15.4,18L152.4,208l-33.6,40.3c-8.6,10.4,3.9,24.8,15.4,18l80-48a12,12,0,0,0,0-20.6Zm163,50.6L343.6,208l33.6-40.3c8.6-10.3-3.8-24.9-15.4-18l-80,48a12.07,12.07,0,0,0,0,20.6l80,48C373.3,273.1,385.9,258.7,377.2,248.3Z"]]
};
exports.faTired = faTired;
var faToggleOff = {
  prefix: 'fad',
  iconName: 'toggle-off',
  icon: [576, 512, [], "f204", ["M384 64H192C86 64 0 150 0 256s86 192 192 192h192c106 0 192-86 192-192S490 64 384 64zM192 384a128 128 0 1 1 128-128 127.93 127.93 0 0 1-128 128z", "M192 384a128 128 0 1 1 128-128 127.93 127.93 0 0 1-128 128z"]]
};
exports.faToggleOff = faToggleOff;
var faToggleOn = {
  prefix: 'fad',
  iconName: 'toggle-on',
  icon: [576, 512, [], "f205", ["M384 384a128 128 0 1 1 128-128 127.93 127.93 0 0 1-128 128z", "M384 64H192C86 64 0 150 0 256s86 192 192 192h192c106 0 192-86 192-192S490 64 384 64zm0 320a128 128 0 1 1 128-128 127.93 127.93 0 0 1-128 128z"]]
};
exports.faToggleOn = faToggleOn;
var faToilet = {
  prefix: 'fad',
  iconName: 'toilet',
  icon: [384, 512, [], "f7d8", ["M368 0H16A16 16 0 0 0 0 16v16a16 16 0 0 0 16 16h352a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16zM136 64H88a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8V72a8 8 0 0 0-8-8z", "M352 204.7V48H32v156.7C11.8 214.8 0 226.9 0 240a191.76 191.76 0 0 0 86.8 160.5l-21.4 70.2A32 32 0 0 0 96 512h192a32 32 0 0 0 30.6-41.3l-21.4-70.2A191.76 191.76 0 0 0 384 240c0-13.1-11.8-25.2-32-35.3zM80 72a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H88a8 8 0 0 1-8-8zm112 200c-77.1 0-139.6-14.3-139.6-32s62.5-32 139.6-32 139.6 14.3 139.6 32-62.5 32-139.6 32z"]]
};
exports.faToilet = faToilet;
var faToiletPaper = {
  prefix: 'fad',
  iconName: 'toilet-paper',
  icon: [576, 512, [], "f71e", ["M128 0C75 0 32 86 32 192v172.07c0 41.12-9.8 62.77-31.17 126.87A16 16 0 0 0 16 512h312.92a32 32 0 0 0 30.36-21.88c12.83-38.48 24.71-72.4 24.71-126V192C384 86 427 0 480 0zm-16 224a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm64 0a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm64 0a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm64 0a16 16 0 1 1 16-16 16 16 0 0 1-16 16z", "M480 0c-53 0-96 86-96 192s43 192 96 192 96-86 96-192S533 0 480 0zm0 256c-17.67 0-32-28.65-32-64s14.33-64 32-64 32 28.65 32 64-14.33 64-32 64zm-368-64a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm64 0a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm64 0a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm64 0a16 16 0 1 0 16 16 16 16 0 0 0-16-16z"]]
};
exports.faToiletPaper = faToiletPaper;
var faToiletPaperAlt = {
  prefix: 'fad',
  iconName: 'toilet-paper-alt',
  icon: [576, 512, [], "f71f", ["M480 0c-53 0-96 86-96 192v172.07c0 53.65-11.88 87.57-24.71 126.05A32 32 0 0 1 328.92 512H16A16 16 0 0 1 .82 490.94C22.19 426.84 32 405.19 32 364.07V192C32 86 75 0 128 0z", "M480 0c-53 0-96 86-96 192s43 192 96 192 96-86 96-192S533 0 480 0zm0 256c-17.67 0-32-28.65-32-64s14.33-64 32-64 32 28.65 32 64-14.34 64-32 64z"]]
};
exports.faToiletPaperAlt = faToiletPaperAlt;
var faTombstone = {
  prefix: 'fad',
  iconName: 'tombstone',
  icon: [512, 512, [], "f720", ["M448 192C448 86 362 0 256 0S64 86 64 192v224h384zm-96-8a16 16 0 0 1-16 16h-56v128a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16V200h-56a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16h56v-48a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v48h56a16 16 0 0 1 16 16z", "M496 448H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h480a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM176 200h56v128a16 16 0 0 0 16 16h16a16 16 0 0 0 16-16V200h56a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16h-56v-48a16 16 0 0 0-16-16h-16a16 16 0 0 0-16 16v48h-56a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16z"]]
};
exports.faTombstone = faTombstone;
var faTombstoneAlt = {
  prefix: 'fad',
  iconName: 'tombstone-alt',
  icon: [512, 512, [], "f721", ["M448 192v224H64V192C64 86 150 0 256 0s192 86 192 192z", "M512 464v32a16 16 0 0 1-16 16H16a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h480a16 16 0 0 1 16 16z"]]
};
exports.faTombstoneAlt = faTombstoneAlt;
var faToolbox = {
  prefix: 'fad',
  iconName: 'toolbox',
  icon: [512, 512, [], "f552", ["M384 368a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-16H192v16a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-16H0v96a32 32 0 0 0 32 32h448a32 32 0 0 0 32-32v-96H384zm118.63-153.37l-45.25-45.25a32 32 0 0 0-22.63-9.38H77.25a32 32 0 0 0-22.63 9.37L9.37 214.63A32 32 0 0 0 0 237.26V320h128v-16a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16v16h128v-16a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16v16h128v-82.75a32 32 0 0 0-9.37-22.62z", "M336 32H176a48 48 0 0 0-48 48v80h64V96h128v64h64V80a48 48 0 0 0-48-48zM176 288h-32a16 16 0 0 0-16 16v64a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-64a16 16 0 0 0-16-16zm192 0h-32a16 16 0 0 0-16 16v64a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-64a16 16 0 0 0-16-16z"]]
};
exports.faToolbox = faToolbox;
var faTools = {
  prefix: 'fad',
  iconName: 'tools',
  icon: [512, 512, [], "f7d9", ["M193.8 227.7L18.74 402.76a64 64 0 0 0 90.5 90.5l148.88-148.88a75.36 75.36 0 0 1 6.58-45.78zM64 472a24 24 0 1 1 24-24 24 24 0 0 1-24 24zm443.73-362.9a12 12 0 0 0-20.12-5.51L413.25 178l-67.88-11.31-11.31-67.93 74.36-74.36a12 12 0 0 0-5.66-20.16 143.92 143.92 0 0 0-136.58 37.93c-39.64 39.64-50.55 97.1-34.05 147.2l-4.43 4.43 70.9 70.9a74.25 74.25 0 0 1 85.4 13.9l7.21 7.21a141.74 141.74 0 0 0 78.61-40 143.94 143.94 0 0 0 37.91-136.71z", "M501.1 395.7a37.36 37.36 0 0 1 0 52.7l-52.7 52.7a37.18 37.18 0 0 1-52.58.12l-.12-.12L278.6 384c-23.1-23.1-27.5-57.6-13.9-85.4L158.1 192H96L0 64 64 0l128 96v62.1l106.6 106.6a74.25 74.25 0 0 1 85.4 13.9z"]]
};
exports.faTools = faTools;
var faTooth = {
  prefix: 'fad',
  iconName: 'tooth',
  icon: [448, 512, [], "f5c9", ["M444 96.25c10.13 41.63.42 80.82-21.53 110.43-23.37 31.57-32.69 68.65-36.3 107.32-4.41 47.16-10.33 94.17-20.94 140.32l-7.8 33.95a30.42 30.42 0 0 1-59.21.54l-34.47-138.39a40.95 40.95 0 0 0-79.52 0l-34.47 138.42a30.42 30.42 0 0 1-59.21-.54l-7.8-33.95C72.14 408.19 66.21 361.19 61.81 314c-3.61-38.69-12.93-75.78-36.29-107.35C3.6 177.06-6.11 137.87 4 96.25 15 51 51.13 14.2 96 2.53c23.43-6.09 46.11-.54 66.81 10.31l100.54 64.62a16 16 0 0 0 17.31-26.91l-28.32-18.21c3.54-1.75 7.25-3.09 10.5-5.48C289 7.63 319.79-5.83 352 2.53c44.88 11.66 81 48.47 92 93.72z", ""]]
};
exports.faTooth = faTooth;
var faToothbrush = {
  prefix: 'fad',
  iconName: 'toothbrush',
  icon: [640, 512, [], "f635", ["M320 232a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v184h32zm64 0a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v184h32zm64 0a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v184h32zm-192 0a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v184h32zm368 216H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h608a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM64 232a8 8 0 0 0-8-8H40a8 8 0 0 0-8 8v184h32zm128 0a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v184h32zm-64 0a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v184h32z", "M0 128a64 64 0 0 1 64-64h261.49c33.4 0 50.13-40.38 26.51-64a128 128 0 0 1 128 128 64 64 0 0 1-64 64H64a64 64 0 0 1-64-64z"]]
};
exports.faToothbrush = faToothbrush;
var faTorah = {
  prefix: 'fad',
  iconName: 'torah',
  icon: [640, 512, [], "f6a0", ["M320 145.53l-17.77 29.62h35.45zm-90.07 150.56l-9.19 15.41h36.85l-18.46-30.82zm189.32-95.56h-36.84l18.45 30.82zm-161.7 0h-36.81l18.44 30.8zM96 48v416h448V48zm349.22 278.15a21.24 21.24 0 0 1-18.48 10.72h-59.45l-29.13 48.7a21.09 21.09 0 0 1-16.77 10.32 12.92 12.92 0 0 1-1.39.05 20.81 20.81 0 0 1-18-10.22l-29.22-48.88h-59.54a19.53 19.53 0 0 1-2.16-.11 21.13 21.13 0 0 1-15.94-31.87L224.35 256 195 207a20.71 20.71 0 0 1-.89-19.9c.2-.42.42-.84.66-1.25s.49-.82.75-1.21a21.19 21.19 0 0 1 17.73-9.5h59.45l29.13-48.71a21.13 21.13 0 0 1 18.22-10.37A20.75 20.75 0 0 1 338 126.29l29.25 48.85h59.54a21.12 21.12 0 0 1 18.1 32l-14.62 24.43L415.65 256 445 305a20.69 20.69 0 0 1 .22 21.15zm-62.78-14.62h36.86l-18.45-30.8zm-62.39 55l17.72-29.64h-35.46zm32.81-166h-65.79l-16.58 27.76L253.91 256l16.61 27.75 16.61 27.75h65.79l33.17-55.5z", "M48 0C21.49 0 0 14.33 0 32v448c0 17.67 21.49 32 48 32s48-14.33 48-32V32C96 14.33 74.51 0 48 0zm544 0c-26.51 0-48 14.33-48 32v448c0 17.67 21.49 32 48 32s48-14.33 48-32V32c0-17.67-21.49-32-48-32zM415.63 256l29.24-48.86a21.12 21.12 0 0 0-18.1-32h-59.52L338 126.29a20.75 20.75 0 0 0-17.95-10.23 21.1 21.1 0 0 0-18.21 10.37l-29.14 48.71h-59.45a21.2 21.2 0 0 0-18.48 10.71A20.72 20.72 0 0 0 195 207l29.34 49-29.21 48.86a21.11 21.11 0 0 0 18.1 32h59.57l29.25 48.88a20.77 20.77 0 0 0 17.95 10.2 21.13 21.13 0 0 0 18.16-10.37l29.13-48.7h59.45a21.24 21.24 0 0 0 18.48-10.72A20.69 20.69 0 0 0 445 305zm3.63-55.5l-18.4 30.82-18.45-30.82zm-99.26-55l17.68 29.62h-35.45zm-99.27 55h36.82l-18.37 30.8zm0 111l18.4-30.82 18.46 30.82zm99.32 55l-17.74-29.64h35.46zm32.87-55h-65.79L253.91 256l33.16-55.52h65.79L386.09 256zm29.53 0l18.41-30.8 18.45 30.8z"]]
};
exports.faTorah = faTorah;
var faToriiGate = {
  prefix: 'fad',
  iconName: 'torii-gate',
  icon: [512, 512, [], "f6a1", ["M64 192h64v-64H64zm160 0h64v-64h-64zM64 496a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V256H64zm320 0a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V256h-64zm0-368v64h64v-64z", "M376.45 32h-240.9A303.17 303.17 0 0 1 0 0v96a32 32 0 0 0 32 32h448a32 32 0 0 0 32-32V0a303.17 303.17 0 0 1-135.55 32zM496 192H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h480a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z"]]
};
exports.faToriiGate = faToriiGate;
var faTornado = {
  prefix: 'fad',
  iconName: 'tornado',
  icon: [512, 512, [], "f76f", ["M393.42 96H11.9c9.64 34.16 24.49 62.05 42.71 85.3h349.78c-14.07-23.14-20.68-50.22-10.97-85.3zm36.31 117.3H84.64c45.05 40.43 101.1 63.6 150.27 85.3h269.61c-14.52-32.19-47.7-56.86-74.79-85.3zm-.62-188.1c7.4-10.6 0-25.2-12.9-25.2h-400A16.2 16.2 0 0 0 0 16.5 369.9 369.9 0 0 0 4.76 64h401.12a302.21 302.21 0 0 1 23.23-38.8zm-97.4 463.9A16 16 0 0 0 346 512h27.4a32.82 32.82 0 0 0 21.7-8.3c22.58-20.2 41.3-38.69 56.63-55.7H347.4a248.42 248.42 0 0 1-15.69 41.1zM512 330.6H299c33 20.58 54.66 45.71 53.54 85.4H478c25.13-34.44 34.53-62 34-85.4z", "M405.88 64H4.76a302.42 302.42 0 0 0 7.14 32h381.52a181.86 181.86 0 0 1 12.46-32zm-1.49 117.3H54.61a250.81 250.81 0 0 0 30 32h345.12c-9.56-10.03-18.36-20.53-25.34-32zM347.4 448h104.34A406.12 406.12 0 0 0 478 416H352.51a135.56 135.56 0 0 1-5.11 32zm157.12-149.4H234.91c23.6 10.42 45.61 20.5 64.06 32H512a81.4 81.4 0 0 0-7.48-32z"]]
};
exports.faTornado = faTornado;
var faTractor = {
  prefix: 'fad',
  iconName: 'tractor',
  icon: [640, 512, [], "f722", ["M528 336a88 88 0 1 0 88 88 88 88 0 0 0-88-88zm0 112a24 24 0 1 1 24-24 24 24 0 0 1-24 24zM330 292h-7.14A152.15 152.15 0 0 0 311 263.28l5.06-5.06a22 22 0 0 0 0-31.11L284.9 196a22 22 0 0 0-31.11 0l-5.06 5.06A152.15 152.15 0 0 0 220 189.15V182a22 22 0 0 0-22-22h-44a22 22 0 0 0-22 22v7.14a152.43 152.43 0 0 0-28.73 11.91l-5-5.05a22 22 0 0 0-31.11 0L36 227.1a22 22 0 0 0 0 31.11l5.06 5.06A152.15 152.15 0 0 0 29.15 292H22a22 22 0 0 0-22 22v44a22 22 0 0 0 22 22h7.14a152.43 152.43 0 0 0 11.91 28.73l-5 5a22 22 0 0 0 0 31.11L67.1 476a22 22 0 0 0 31.11 0l5.06-5.06A152.15 152.15 0 0 0 132 482.85V490a22 22 0 0 0 22 22h44a22 22 0 0 0 22-22v-7.14A152.15 152.15 0 0 0 248.72 471l5.06 5.06a22 22 0 0 0 31.11 0L316 444.9a22 22 0 0 0 0-31.11l-5.06-5.06A152.15 152.15 0 0 0 322.85 380H330a22 22 0 0 0 22-22v-44a22 22 0 0 0-22-22zM176 416a80 80 0 1 1 80-80 80 80 0 0 1-80 80z", "M640 192v50.76a32 32 0 0 1-9.37 22.63l-50.82 50.81A118.61 118.61 0 0 0 528 304c-39.14 0-73.55 19-95.46 48H352v-38a22 22 0 0 0-22-22h-7.14A152.24 152.24 0 0 0 311 263.27l5.06-5.06a22 22 0 0 0 0-31.11L284.9 196a22 22 0 0 0-31.11 0l-5.06 5.06A151.54 151.54 0 0 0 220 189.14V182a22 22 0 0 0-22-22h110l-41.11-96H160v96h-6a22 22 0 0 0-22 22v7.14A152.15 152.15 0 0 0 103.28 201l-5.06-5a22.57 22.57 0 0 0-2.22-1.93V48a48.05 48.05 0 0 1 48-48h133.45a47.91 47.91 0 0 1 44.13 29.14L377.67 160H480v-40.2a128.16 128.16 0 0 1 29.5-81.72 16.28 16.28 0 0 1 24.7-.78l21.63 24.17c4.87 5.43 5.74 13.69 1.32 19.49A64.07 64.07 0 0 0 544 119.8V160h64a32 32 0 0 1 32 32z"]]
};
exports.faTractor = faTractor;
var faTrademark = {
  prefix: 'fad',
  iconName: 'trademark',
  icon: [640, 512, [], "f25c", ["M640 403.85A12.09 12.09 0 0 1 628 416h-53.9a12 12 0 0 1-12-11.2L553 271.9c-1.8-24.2 0-53.7 0-53.7h-.9s-10.7 33.6-17.9 53.7l-30.7 84.7a12 12 0 0 1-11.3 7.9h-50.3a12 12 0 0 1-11.3-7.9l-30.7-84.7c-7.2-20.1-17.9-53.7-17.9-53.7h-.9s1.8 29.5 0 53.7L372 404.8a12.09 12.09 0 0 1-12 11.2h-55.5a12 12 0 0 1-11-13l24.4-296a12.14 12.14 0 0 1 12-11h65.4a12.06 12.06 0 0 1 11.3 8.1l43.8 127.1c7.2 20.6 16.1 52.8 16.1 52.8h.9s8.9-32.2 16.1-52.8l43.8-127.1a12 12 0 0 1 11.3-8.1H604a12 12 0 0 1 12 11l24 296v.85z", "M272.5 108v43.1a12 12 0 0 1-12 12h-85.1V404a12 12 0 0 1-12 12h-54.3a12 12 0 0 1-12-12V163.1H12a12 12 0 0 1-12-12V108a12 12 0 0 1 12-12h248.72a11.89 11.89 0 0 1 11.78 12z"]]
};
exports.faTrademark = faTrademark;
var faTrafficCone = {
  prefix: 'fad',
  iconName: 'traffic-cone',
  icon: [512, 512, [], "f636", ["M337 128H175l-25.4 64h212.77zm63.42 160H111.5l-25.29 64h339.58z", "M289.73 10.08A16 16 0 0 0 274.86 0h-37.72a16 16 0 0 0-14.87 10.08L175.35 128h161.3zM362.12 192H149.88l-38.21 96h288.65zM496 448h-32l-38.21-96H86.21L48 448H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h480a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z"]]
};
exports.faTrafficCone = faTrafficCone;
var faTrafficLight = {
  prefix: 'fad',
  iconName: 'traffic-light',
  icon: [384, 512, [], "f637", ["M192 320a48 48 0 1 0 48 48 48 48 0 0 0-48-48zm0-160a48 48 0 1 0-48-48 48 48 0 0 0 48 48zm0 32a48 48 0 1 0 48 48 48 48 0 0 0-48-48z", "M384 192h-64v-37.88c37.2-13.22 64-48.38 64-90.12h-64V32a32 32 0 0 0-32-32H96a32 32 0 0 0-32 32v32H0c0 41.74 26.8 76.9 64 90.12V192H0c0 41.74 26.8 76.9 64 90.12V320H0c0 42.79 28.19 78.61 66.86 91v-.15a128 128 0 0 0 250.34 0v.15c38.61-12.4 66.8-48.22 66.8-91h-64v-37.88c37.2-13.22 64-48.38 64-90.12zM192 416a48 48 0 1 1 48-48 48 48 0 0 1-48 48zm0-128a48 48 0 1 1 48-48 48 48 0 0 1-48 48zm0-128a48 48 0 1 1 48-48 48 48 0 0 1-48 48z"]]
};
exports.faTrafficLight = faTrafficLight;
var faTrafficLightGo = {
  prefix: 'fad',
  iconName: 'traffic-light-go',
  icon: [384, 512, [], "f638", ["M240 368a48 48 0 1 1-48-48 48 48 0 0 1 48 48z", "M384 192h-64v-37.88c37.2-13.22 64-48.38 64-90.12h-64V32a32 32 0 0 0-32-32H96a32 32 0 0 0-32 32v32H0c0 41.74 26.8 76.9 64 90.12V192H0c0 41.74 26.8 76.9 64 90.12V320H0c0 42.79 28.19 78.61 66.86 91v-.15a128 128 0 0 0 250.34 0v.15c38.61-12.4 66.8-48.22 66.8-91h-64v-37.88c37.2-13.22 64-48.38 64-90.12zM192 416a48 48 0 1 1 48-48 48 48 0 0 1-48 48zm0-128a48 48 0 1 1 48-48 48 48 0 0 1-48 48zm0-128a48 48 0 1 1 48-48 48 48 0 0 1-48 48z"]]
};
exports.faTrafficLightGo = faTrafficLightGo;
var faTrafficLightSlow = {
  prefix: 'fad',
  iconName: 'traffic-light-slow',
  icon: [384, 512, [], "f639", ["M240 240a48 48 0 1 1-48-48 48 48 0 0 1 48 48z", "M384 192h-64v-37.88c37.2-13.22 64-48.38 64-90.12h-64V32a32 32 0 0 0-32-32H96a32 32 0 0 0-32 32v32H0c0 41.74 26.8 76.9 64 90.12V192H0c0 41.74 26.8 76.9 64 90.12V320H0c0 42.79 28.19 78.61 66.86 91v-.15a128 128 0 0 0 250.34 0v.15c38.61-12.4 66.8-48.22 66.8-91h-64v-37.88c37.2-13.22 64-48.38 64-90.12zM192 416a48 48 0 1 1 48-48 48 48 0 0 1-48 48zm0-128a48 48 0 1 1 48-48 48 48 0 0 1-48 48zm0-128a48 48 0 1 1 48-48 48 48 0 0 1-48 48z"]]
};
exports.faTrafficLightSlow = faTrafficLightSlow;
var faTrafficLightStop = {
  prefix: 'fad',
  iconName: 'traffic-light-stop',
  icon: [384, 512, [], "f63a", ["M240 112a48 48 0 1 1-48-48 48 48 0 0 1 48 48z", "M384 192h-64v-37.88c37.2-13.22 64-48.38 64-90.12h-64V32a32 32 0 0 0-32-32H96a32 32 0 0 0-32 32v32H0c0 41.74 26.8 76.9 64 90.12V192H0c0 41.74 26.8 76.9 64 90.12V320H0c0 42.79 28.19 78.61 66.86 91v-.15a128 128 0 0 0 250.34 0v.15c38.61-12.4 66.8-48.22 66.8-91h-64v-37.88c37.2-13.22 64-48.38 64-90.12zM192 416a48 48 0 1 1 48-48 48 48 0 0 1-48 48zm0-128a48 48 0 1 1 48-48 48 48 0 0 1-48 48zm0-128a48 48 0 1 1 48-48 48 48 0 0 1-48 48z"]]
};
exports.faTrafficLightStop = faTrafficLightStop;
var faTrain = {
  prefix: 'fad',
  iconName: 'train',
  icon: [448, 512, [], "f238", ["M376 96H72a24 24 0 0 0-24 24v112a24 24 0 0 0 24 24h304a24 24 0 0 0 24-24V120a24 24 0 0 0-24-24zm5 401.72L318 448H130l-63 49.72A8 8 0 0 0 72 512h304a8 8 0 0 0 5-14.28z", "M130 448h188c68.4 0 130-44.19 130-96V96c0-53-63-96-128-96H128C64 0 0 43 0 96v256c0 52 61.82 96 130 96zm94-40a56 56 0 1 1 56-56 56 56 0 0 1-56 56zM48 120a24 24 0 0 1 24-24h304a24 24 0 0 1 24 24v112a24 24 0 0 1-24 24H72a24 24 0 0 1-24-24z"]]
};
exports.faTrain = faTrain;
var faTram = {
  prefix: 'fad',
  iconName: 'tram',
  icon: [512, 512, [], "f7da", ["M511.45 51.9a15.91 15.91 0 0 0-19.6-11.3l-480 128A16 16 0 0 0 16 200a18.41 18.41 0 0 0 4.1-.5l480-128a16.1 16.1 0 0 0 11.35-19.6zM80 384h96v-96H80zm256 0h96v-96h-96zm-128 0h96v-96h-96z", "M192 96a32 32 0 1 0-32-32 32 32 0 0 0 32 32zm96-32a32 32 0 1 0-32-32 32 32 0 0 0 32 32zm160 160H272v-91.7l-32 8.5V224H64a32 32 0 0 0-32 32v224a32 32 0 0 0 32 32h384a32 32 0 0 0 32-32V256a32 32 0 0 0-32-32zM176 384H80v-96h96zm128 0h-96v-96h96zm128 0h-96v-96h96z"]]
};
exports.faTram = faTram;
var faTransgender = {
  prefix: 'fad',
  iconName: 'transgender',
  icon: [384, 512, [], "f224", ["M224 240a80 80 0 1 1-80-80 80.11 80.11 0 0 1 80 80z", "M372 0h-79a12 12 0 0 0-8.5 20.5l16.9 16.9-80.7 80.7A144 144 0 1 0 112 380.4V408H76a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h36v28a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-28h36a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12h-36v-27.6a144 144 0 0 0 89.9-217.1l80.7-80.7 16.9 16.9A12 12 0 0 0 384 91V12a12 12 0 0 0-12-12zM144 320a80 80 0 1 1 80-80 80 80 0 0 1-80 80z"]]
};
exports.faTransgender = faTransgender;
var faTransgenderAlt = {
  prefix: 'fad',
  iconName: 'transgender-alt',
  icon: [480, 512, [], "f225", ["M319 239a80 80 0 1 1-80-80 80 80 0 0 1 80 80z", "M467-1h-79a12 12 0 0 0-8.5 20.5l16.9 16.9-80.7 80.7a144.13 144.13 0 0 0-153.4 0l-16.5-16.5 19.8-19.8a12 12 0 0 0 0-17l-28.3-28.3a12 12 0 0 0-17 0l-19.8 19.8-19-19 16.9-16.9C106.1 11.9 100.7-1 90-1H11A12 12 0 0 0-1 11v79a12 12 0 0 0 20.5 8.5l16.9-16.9 19 19-19.8 19.8a12 12 0 0 0 0 17l28.3 28.3a12 12 0 0 0 17 0l19.8-19.8 16.5 16.5A142 142 0 0 0 95 239a144 144 0 0 0 112 140.4V407h-36a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h36v28a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-28h36a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12h-36v-27.6a144 144 0 0 0 89.9-217.1l80.7-80.7 16.9 16.9A12 12 0 0 0 479 90V11a12 12 0 0 0-12-12zM239 319a80 80 0 1 1 80-80 80 80 0 0 1-80 80z"]]
};
exports.faTransgenderAlt = faTransgenderAlt;
var faTrash = {
  prefix: 'fad',
  iconName: 'trash',
  icon: [448, 512, [], "f1f8", ["M53.2 467L32 96h384l-21.2 371a48 48 0 0 1-47.9 45H101.1a48 48 0 0 1-47.9-45z", "M0 80V48a16 16 0 0 1 16-16h120l9.4-18.7A23.72 23.72 0 0 1 166.8 0h114.3a24 24 0 0 1 21.5 13.3L312 32h120a16 16 0 0 1 16 16v32a16 16 0 0 1-16 16H16A16 16 0 0 1 0 80z"]]
};
exports.faTrash = faTrash;
var faTrashAlt = {
  prefix: 'fad',
  iconName: 'trash-alt',
  icon: [448, 512, [], "f2ed", ["M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V96H32zm272-288a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0z", "M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM128 160a16 16 0 0 0-16 16v224a16 16 0 0 0 32 0V176a16 16 0 0 0-16-16zm96 0a16 16 0 0 0-16 16v224a16 16 0 0 0 32 0V176a16 16 0 0 0-16-16zm96 0a16 16 0 0 0-16 16v224a16 16 0 0 0 32 0V176a16 16 0 0 0-16-16z"]]
};
exports.faTrashAlt = faTrashAlt;
var faTrashRestore = {
  prefix: 'fad',
  iconName: 'trash-restore',
  icon: [448, 512, [], "f829", ["M32 96l21.2 371a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 96zm281.37 192H256v112a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V288h-57.37c-14.26 0-21.4-18.18-11.32-28.8l89.38-94.26a15.41 15.41 0 0 1 21.78-.84q.43.41.84.84l89.38 94.26c10.08 10.62 2.94 28.8-11.32 28.8z", "M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM235.31 164.94q-.41-.44-.84-.84a15.41 15.41 0 0 0-21.78.84l-89.38 94.26c-10.08 10.62-2.94 28.8 11.32 28.8H192v112a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V288h57.37c14.26 0 21.4-18.18 11.32-28.8z"]]
};
exports.faTrashRestore = faTrashRestore;
var faTrashRestoreAlt = {
  prefix: 'fad',
  iconName: 'trash-restore-alt',
  icon: [448, 512, [], "f82a", ["M32 96v368a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V96zm281.37 192H256v112a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16V288h-57.37c-14.26 0-21.4-18.18-11.32-28.8l89.38-94.26a15.41 15.41 0 0 1 21.78-.84q.43.41.84.84l89.38 94.26c10.08 10.62 2.94 28.8-11.32 28.8z", "M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM235.31 164.94q-.41-.44-.84-.84a15.41 15.41 0 0 0-21.78.84l-89.38 94.26c-10.08 10.62-2.94 28.8 11.32 28.8H192v112a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V288h57.37c14.26 0 21.4-18.18 11.32-28.8z"]]
};
exports.faTrashRestoreAlt = faTrashRestoreAlt;
var faTrashUndo = {
  prefix: 'fad',
  iconName: 'trash-undo',
  icon: [448, 512, [], "f895", ["M53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 96H32zm47.18-221.47l84-81.59c8.84-8.59 23.61-2.24 23.61 10.47v41.67c82.47.8 144 18.36 144 103.92 0 34.29-20.14 68.26-42.41 86-6.95 5.54-16.85-1.41-14.29-10.4 23.08-80.93-6.55-101.74-87.3-102.72v44.69c0 12.69-14.76 19.07-23.61 10.47l-84-81.59a14.69 14.69 0 0 1-.13-20.79l.13-.13z", "M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM208 216.08v-41.67c0-12.71-14.77-19.06-23.61-10.47l-84 81.59a14.7 14.7 0 0 0-.15 20.79l.15.15 84 81.59c8.85 8.6 23.61 2.22 23.61-10.47V292.9c80.75 1 110.38 21.79 87.3 102.72-2.56 9 7.34 15.94 14.29 10.4C331.86 388.26 352 354.29 352 320c0-85.56-61.53-103.12-144-103.92z"]]
};
exports.faTrashUndo = faTrashUndo;
var faTrashUndoAlt = {
  prefix: 'fad',
  iconName: 'trash-undo-alt',
  icon: [448, 512, [], "f896", ["M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V96H32zm68.38-218.47l84-81.59c8.84-8.59 23.61-2.24 23.61 10.47v41.67c82.47.8 144 18.36 144 103.92 0 34.29-20.14 68.26-42.41 86-6.95 5.54-16.85-1.41-14.29-10.4 23.08-80.93-6.55-101.74-87.3-102.72v44.69c0 12.69-14.76 19.07-23.61 10.47l-84-81.59a14.69 14.69 0 0 1-.13-20.79l.13-.13z", "M208 216.08v-41.67c0-12.71-14.77-19.06-23.61-10.47l-84 81.59a14.7 14.7 0 0 0-.15 20.79l.15.15 84 81.59c8.85 8.6 23.61 2.22 23.61-10.47V292.9c80.75 1 110.38 21.79 87.3 102.72-2.56 9 7.34 15.94 14.29 10.4C331.86 388.26 352 354.29 352 320c0-85.56-61.53-103.12-144-103.92zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.71 23.71 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z"]]
};
exports.faTrashUndoAlt = faTrashUndoAlt;
var faTreasureChest = {
  prefix: 'fad',
  iconName: 'treasure-chest',
  icon: [576, 512, [], "f723", ["M0 128v128h96V32a96 96 0 0 0-96 96zm0 320a32 32 0 0 0 32 32h64V288H0zm352-112a16 16 0 0 1-16 16h-96a16 16 0 0 1-16-16v-48h-64v192h256V288h-64zM480 32v224h96V128a96 96 0 0 0-96-96zm0 448h64a32 32 0 0 0 32-32V288h-96zM160 256h64v-48a16 16 0 0 1 16-16h96a16 16 0 0 1 16 16v48h64V32H160z", "M96 256h64V32H96zm0 224h64V288H96zm320 0h64V288h-64zm0-448v224h64V32zm-80 160h-96a16 16 0 0 0-16 16v128a16 16 0 0 0 16 16h96a16 16 0 0 0 16-16V208a16 16 0 0 0-16-16zm-32 112a16 16 0 0 1-32 0v-64a16 16 0 0 1 32 0z"]]
};
exports.faTreasureChest = faTreasureChest;
var faTree = {
  prefix: 'fad',
  iconName: 'tree',
  icon: [384, 512, [], "f1bb", ["M224 416v24.45l30.29 48.4A16 16 0 0 1 240 512h-96a16 16 0 0 1-14.31-23.16L160 440.46V416z", "M23.14 416a23.19 23.19 0 0 1-21-13.25 22.11 22.11 0 0 1 3.55-24.25L85.58 288H55a22.72 22.72 0 0 1-20.83-13 22.08 22.08 0 0 1 3.27-24l78.14-91H86.69a22.67 22.67 0 0 1-20.87-13.6 22.27 22.27 0 0 1 4.24-24.08L180.34 4.84c6-6.45 17.29-6.45 23.32 0l110.27 117.48a22.25 22.25 0 0 1 4.24 24.08 22.66 22.66 0 0 1-20.86 13.6h-28.89l78.13 90.89a22 22 0 0 1 3.28 24A22.72 22.72 0 0 1 329.05 288h-30.63l79.89 90.49a22.11 22.11 0 0 1 3.56 24.26 23.19 23.19 0 0 1-21 13.25z"]]
};
exports.faTree = faTree;
var faTreeAlt = {
  prefix: 'fad',
  iconName: 'tree-alt',
  icon: [512, 512, [], "f400", ["M318.29 488.85A16 16 0 0 1 304 512h-96a16 16 0 0 1-14.31-23.16L224 440.45V384h64v56.45z", "M28 356Q0 328 0 288a93.5 93.5 0 0 1 16-53 92.4 92.4 0 0 1 43-35q-14-24-10.5-49.5a79.43 79.43 0 0 1 20.5-44A81.51 81.51 0 0 1 110.5 82q24.5-6 49.5 5 4-37 31.5-62T256 0q37 0 64.5 25T352 87q25-11 49.5-5a81.51 81.51 0 0 1 41.5 24.5 79.43 79.43 0 0 1 20.5 44Q467 176 454 200h-1a92.4 92.4 0 0 1 43 35 93.5 93.5 0 0 1 16 53q0 40-28 68t-68 28H96q-40 0-68-28z"]]
};
exports.faTreeAlt = faTreeAlt;
var faTreeChristmas = {
  prefix: 'fad',
  iconName: 'tree-christmas',
  icon: [448, 512, [], "f7db", ["M197.33 106.7L144 80l53.3-26.7L224 0l26.7 53.3L304 80l-53.3 26.7L224 160z", "M439.63 455.6L349.83 352h36c25.6 0 39.5-26.3 23.2-43.5L262.83 154 224 208l-38.8-54L39 308.5C22.7 325.7 36.6 352 62.2 352h36L8.43 455.6c-19 21.9-3.8 56.4 24.7 56.4h381.7c28.6 0 43.7-34.6 24.8-56.4zM160 312a24 24 0 1 1 24-24 23.94 23.94 0 0 1-24 24zm128 128a24 24 0 1 1 24-24 23.94 23.94 0 0 1-24 24z"]]
};
exports.faTreeChristmas = faTreeChristmas;
var faTreeDecorated = {
  prefix: 'fad',
  iconName: 'tree-decorated',
  icon: [448, 512, [], "f7dc", ["M160 312a24 24 0 1 1 24-24 23.94 23.94 0 0 1-24 24z", "M439.63 455.57L349.83 352h36c25.6 0 39.5-29.2 23.2-48.5L314.13 192h44.8c21.3 0 32.9-22.5 19.3-37.29L243.33 8.18c-10-10.9-28.6-10.9-38.6 0l-134.8 146.5c-13.6 14.79-2 37.29 19.3 37.29H134l-95 111.5c-16.3 19.3-2.4 48.5 23.2 48.5h36L8.43 455.57c-19 21.9-3.8 56.4 24.7 56.4h381.7c28.6.03 43.7-34.59 24.8-56.4zM160 312a24 24 0 1 1 24-24 23.94 23.94 0 0 1-24 24zm72-152a24 24 0 1 1 24 24 23.95 23.95 0 0 1-24-24zm56 280a24 24 0 1 1 24-24 23.94 23.94 0 0 1-24 24z"]]
};
exports.faTreeDecorated = faTreeDecorated;
var faTreeLarge = {
  prefix: 'fad',
  iconName: 'tree-large',
  icon: [448, 512, [], "f7dd", ["M414.81 512H256V320l31-52.42c3.14-5.32-1.43-11.58-8.46-11.58H256V144a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v208h-22.53c-7 0-11.6 6.26-8.46 11.58L192 416v96H33.13c-28.5 0-43.7-34.5-24.7-56.38L98.24 352h-36c-25.61 0-39.51-29.21-23.24-48.5L134 192H89.24c-21.3 0-32.9-22.5-19.3-37.29L204.74 8.17c10-10.89 28.6-10.89 38.6 0l134.93 146.54c13.6 14.79 2 37.29-19.3 37.29h-44.8L409 303.46c16.3 19.3 2.4 48.54-23.2 48.54h-36l89.77 103.58c18.94 21.8 3.84 56.42-24.76 56.42z", "M287 267.58L256 320v192h-64v-96l-31-52.42c-3.14-5.32 1.43-11.58 8.46-11.58H192V144a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16v112h22.53c7.04 0 11.61 6.26 8.47 11.58z"]]
};
exports.faTreeLarge = faTreeLarge;
var faTreePalm = {
  prefix: 'fad',
  iconName: 'tree-palm',
  icon: [640, 512, [], "f82b", ["M379.65,485c-2,15.63-16,27-31.71,27H292.81a31.91,31.91,0,0,1-32-31.82,31.46,31.46,0,0,1,.94-7.79c14.42-57.12,36.55-167.3,25.86-272L296,192h57.25C368.08,248.66,394.43,371.53,379.65,485Z", "M607.74,172.86C596.13,111.24,529.38,64,448.76,64c-39.43,0-75.05,11.74-103,30.5C327.15,40.17,265.38,0,191.25,0c-80.62,0-147.36,47.24-159,108.86C30.41,118.79,38.77,128,50,128h54l24-48,33.46,66.92C158,150,154.2,152.61,150.82,156c-57,57-70.82,137.6-35.44,189.38,5.7,8.34,18.12,8.94,26.07,1L296,192H488l24-48,24,48h54C601.25,192,609.61,182.79,607.74,172.86Z"]]
};
exports.faTreePalm = faTreePalm;
var faTrees = {
  prefix: 'fad',
  iconName: 'trees',
  icon: [640, 512, [], "f724", ["M224 440.46V416h-64v24.45l-30.29 48.4A16 16 0 0 0 144 512h96a16 16 0 0 0 14.31-23.16zm410.31-62L554.42 288h30.63a22.73 22.73 0 0 0 20.78-13 22 22 0 0 0-3.28-24l-78.13-91h28.89a22.69 22.69 0 0 0 20.86-13.61 22.27 22.27 0 0 0-4.24-24.08L459.66 4.84c-6-6.45-17.28-6.45-23.32 0L341.28 106.1c11.09 15.37 14 35.3 6.34 53a54.48 54.48 0 0 1-18.26 22.68l41.54 48.32a54.56 54.56 0 0 1-6.07 76.9q-2 1.68-4.1 3.18l41.62 47.15C411 367.11 415.69 371.46 416 384v56.45l-30.29 48.4A16 16 0 0 0 400 512h96a16 16 0 0 0 14.31-23.16L480 440.46V416h136.87a23.19 23.19 0 0 0 21-13.25 22.15 22.15 0 0 0-3.56-24.25z", "M381.86 402.76a23.19 23.19 0 0 1-21 13.25H23.13a23.17 23.17 0 0 1-21-13.25 22.09 22.09 0 0 1 3.56-24.26L85.58 288H55a22.72 22.72 0 0 1-20.83-13.08 22.06 22.06 0 0 1 3.27-24L115.58 160H86.69a22.67 22.67 0 0 1-20.87-13.6 22.25 22.25 0 0 1 4.24-24.08L180.34 4.84c6-6.45 17.32-6.45 23.32 0l110.27 117.47a22.27 22.27 0 0 1 4.24 24.08A22.69 22.69 0 0 1 297.31 160h-28.89l78.13 91a22 22 0 0 1 3.28 24 22.73 22.73 0 0 1-20.78 13h-30.63l79.88 90.5a22.12 22.12 0 0 1 3.56 24.26z"]]
};
exports.faTrees = faTrees;
var faTriangle = {
  prefix: 'fad',
  iconName: 'triangle',
  icon: [576, 512, [], "f2ec", ["M569.54 440l-240-416c-18.4-32-64.68-32-83.18 0L6.48 440c-18.41 31.91 4.59 72 41.59 72h479.87c36.91 0 60-40 41.6-72zm-124.68 8H131.15a32 32 0 0 1-27.72-48l156.82-272a32 32 0 0 1 55.44 0l156.89 272a32 32 0 0 1-27.72 48z", "M103.43 400l156.82-272a32 32 0 0 1 55.44 0l156.89 272a32 32 0 0 1-27.71 48H131.15c-24.62 0-40.02-26.65-27.72-48z"]]
};
exports.faTriangle = faTriangle;
var faTriangleMusic = {
  prefix: 'fad',
  iconName: 'triangle-music',
  icon: [512, 512, [], "f8e2", ["M274.64 267.42a56.8 56.8 0 1 0 33.92 33.94l198.69-198.74a16 16 0 0 0 0-22.62l-11.31-11.31a16 16 0 0 0-22.62 0z", "M500 462.92A96.17 96.17 0 0 1 415.87 512H96.13A96.17 96.17 0 0 1 12 462.92a92.48 92.48 0 0 1 2.16-94.83l159.86-258.7c11.72-19 29.55-32.22 50-39.34V16A16 16 0 0 1 240 0h32a16 16 0 0 1 16 16v54.05c20.41 7.12 38.24 20.37 50 39.34l36.16 58.53-46.48 46.5-44.11-71.37c-8.4-13.58-22-15.05-27.52-15.05s-19.12 1.47-27.52 15.05L68.61 401.75a29 29 0 0 0-.69 30A31.73 31.73 0 0 0 96.13 448h319.74a31.73 31.73 0 0 0 28.21-16.23 29 29 0 0 0-.69-30l-89.84-145.41L400 209.87l97.77 158.22a92.48 92.48 0 0 1 2.23 94.83z"]]
};
exports.faTriangleMusic = faTriangleMusic;
var faTrophy = {
  prefix: 'fad',
  iconName: 'trophy',
  icon: [576, 512, [], "f091", ["M192 432c-35.3 0-64 20.7-64 56v12a12 12 0 0 0 12 12h296a12 12 0 0 0 12-12v-12c0-35.3-28.7-56-64-56z", "M552 64H448V24a23.94 23.94 0 0 0-23.88-24H152a23.94 23.94 0 0 0-24 23.88V64H24A23.94 23.94 0 0 0 0 87.88V144c0 35.7 22.5 72.4 61.9 100.7 31.5 22.7 69.8 37.1 110 41.7C203.3 338.5 240 360 240 360v72h96v-72s36.7-21.5 68.1-73.6c40.3-4.6 78.6-19 110-41.7 39.3-28.3 61.9-65 61.9-100.7V88a23.94 23.94 0 0 0-23.88-24H552zM99.3 192.8C74.9 175.2 64 155.6 64 144v-16h64.2a359 359 0 0 0 12.8 86.2 160.91 160.91 0 0 1-41.7-21.4zM512 144c0 16.1-17.7 36.1-35.3 48.8a161.68 161.68 0 0 1-41.8 21.4 359 359 0 0 0 12.8-86.2H512z"]]
};
exports.faTrophy = faTrophy;
var faTrophyAlt = {
  prefix: 'fad',
  iconName: 'trophy-alt',
  icon: [576, 512, [], "f2eb", ["M231.1 187.3l-9.4 54.6a12 12 0 0 0 17.4 12.6l49-25.8 49 25.8a12 12 0 0 0 17.4-12.6l-9.4-54.6 39.6-38.6c7.1-6.9 3.2-19-6.4-20.5l-54.8-8L299 70.6a12 12 0 0 0-21.5 0L253 120.2l-54.8 8a12 12 0 0 0-6.7 20.5zM384 432H192c-35.3 0-64 20.7-64 56v12a12 12 0 0 0 12 12h296a12 12 0 0 0 12-12v-12c0-35.3-28.7-56-64-56z", "M552.12 64H448V24a23.94 23.94 0 0 0-23.88-24H152a23.94 23.94 0 0 0-24 23.88V64H24A23.94 23.94 0 0 0 0 87.88V144c0 66.5 77.9 131.7 171.9 142.4C203.3 338.5 240 360 240 360v72h96v-72s36.7-21.5 68.1-73.6C498.4 275.6 576 210.3 576 144V88a23.94 23.94 0 0 0-23.88-24zM64 144v-16h64.2a359 359 0 0 0 12.8 86.2c-47.5-16.4-77-49.9-77-70.2zm320.7 4.7l-39.6 38.6 9.4 54.6a12 12 0 0 1-17.4 12.6l-49-25.8-49 25.8a12 12 0 0 1-17.4-12.6l9.4-54.6-39.6-38.6a12 12 0 0 1 6.7-20.5l54.8-8 24.5-49.6a12 12 0 0 1 21.5 0l24.5 49.6 54.8 8c9.6 1.5 13.5 13.6 6.4 20.5zM512 144c0 20.2-29.4 53.8-77 70.2a359 359 0 0 0 12.8-86.2H512z"]]
};
exports.faTrophyAlt = faTrophyAlt;
var faTruck = {
  prefix: 'fad',
  iconName: 'truck',
  icon: [640, 512, [], "f0d1", ["M176 352a80 80 0 1 0 80 80 80 80 0 0 0-80-80zm288 0a80 80 0 1 0 80 80 80 80 0 0 0-80-80z", "M624 352h-16V243.9a48 48 0 0 0-14.1-33.9L494 110.1A48 48 0 0 0 460.1 96H416V48a48 48 0 0 0-48-48H48A48 48 0 0 0 0 48v320a48 48 0 0 0 48 48h18.16C74 361.93 119.78 320 176 320s102.54 41.86 110.38 96h67.24c7.85-54.14 54.1-96 110.38-96s102 41.93 109.84 96H624a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-64-96H416V144h44.1l99.9 99.9z"]]
};
exports.faTruck = faTruck;
var faTruckContainer = {
  prefix: 'fad',
  iconName: 'truck-container',
  icon: [640, 512, [], "f4dc", ["M40.58 384a64 64 0 1 0 110.84 0zm144 0a64 64 0 1 0 110.84 0zM528 368a56 56 0 1 0 56 56 56 56 0 0 0-56-56zM304 256h32V80h-32zM256 80h-32v176h32zm-80 0h-32v176h32zm-80 0H64v176h32z", "M621.3 237.3l-58.5-58.5a64 64 0 0 0-45.3-18.7H464a32 32 0 0 0-32 32v144H16a16 16 0 0 0-16 16V368a16 16 0 0 0 16 16h392v.2h41.53a88 88 0 0 1 157 .14 2 2 0 0 0 0-.24H624a16 16 0 0 0 16-16v-85.5a63.85 63.85 0 0 0-18.7-45.3zM480 256v-48h37.5a16.06 16.06 0 0 1 11.3 4.7l43.3 43.3zM32 304h336a32 32 0 0 0 32-32V64a32 32 0 0 0-32-32H32A32 32 0 0 0 0 64v208a32 32 0 0 0 32 32zM304 80h32v176h-32zm-80 0h32v176h-32zm-80 0h32v176h-32zm-80 0h32v176H64z"]]
};
exports.faTruckContainer = faTruckContainer;
var faTruckCouch = {
  prefix: 'fad',
  iconName: 'truck-couch',
  icon: [640, 512, [], "f4dd", ["M21.4 235.1c39.6-10.6 73.7 13.4 85.5 43.4L232 245c-5.4-35.7 16.5-70.7 52.2-80.2 2.6-.7 5.3-.7 8-1.1-9.9-36.9-45.9-55.1-78.7-46.3L58.9 158.8c-32.8 8.8-54.8 42.6-45.1 79.1a69.24 69.24 0 0 1 7.6-2.8zm271-39.5a40.07 40.07 0 0 0-28.3 49l6.2 23.2-185.4 49.7-6.2-23.2A40 40 0 1 0 1.4 315l22.7 85L320 320.7v-122a40.16 40.16 0 0 0-27.6-3.1zM544 320a96 96 0 1 0 96 96 96 96 0 0 0-96-96z", "M384 0a32 32 0 0 0-32 32v323.6L5.9 450a8 8 0 0 0-5.6 9.8l12.6 46.3a8 8 0 0 0 9.8 5.6l393.7-107.4c0 .33 0 .66.05 1C421.91 339.7 477 288 544 288a127.71 127.71 0 0 1 96 43.44V0z"]]
};
exports.faTruckCouch = faTruckCouch;
var faTruckLoading = {
  prefix: 'fad',
  iconName: 'truck-loading',
  icon: [640, 512, [], "f4de", ["M247.8 123.8a16 16 0 0 0-19.6-11.3L151 133.3l24.8 92.7-61.8 16.5-24.8-92.7-77.3 20.7A16 16 0 0 0 .6 190.1l49.6 185.5a16 16 0 0 0 19.6 11.3l216.4-58a16 16 0 0 0 11.3-19.6zM544 320a96 96 0 1 0 96 96 96 96 0 0 0-96-96z", "M384 0a32 32 0 0 0-32 32v323.6L5.9 450a8 8 0 0 0-5.6 9.8l12.6 46.3a8 8 0 0 0 9.8 5.6l393.7-107.4c0 .33 0 .66.05 1C421.91 339.7 477 288 544 288a127.71 127.71 0 0 1 96 43.44V0zM175.8 226L151 133.3l-61.8 16.5 24.8 92.7z"]]
};
exports.faTruckLoading = faTruckLoading;
var faTruckMonster = {
  prefix: 'fad',
  iconName: 'truck-monster',
  icon: [640, 512, [], "f63b", ["M592 352h-5.2a110.19 110.19 0 0 0-8.65-20.89l3.67-3.67a16 16 0 0 0 0-22.63l-22.63-22.63a16 16 0 0 0-22.63 0l-3.67 3.67A110.45 110.45 0 0 0 512 277.2V272a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v5.2a110.19 110.19 0 0 0-20.89 8.65l-3.67-3.67a16 16 0 0 0-22.63 0l-22.63 22.63a16 16 0 0 0 0 22.63l3.67 3.67A110.45 110.45 0 0 0 373.2 352H368a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h5.2a110.19 110.19 0 0 0 8.65 20.89l-3.67 3.67a16 16 0 0 0 0 22.63l22.63 22.63a16 16 0 0 0 22.63 0l3.67-3.67A110.94 110.94 0 0 0 448 490.8v5.2a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-5.2a110.56 110.56 0 0 0 20.9-8.65l3.67 3.67a16 16 0 0 0 22.63 0l22.63-22.63a16 16 0 0 0 0-22.63l-3.67-3.67a110.45 110.45 0 0 0 8.66-20.89H592a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-112 80a48 48 0 1 1 48-48 48 48 0 0 1-48 48zm-208-80h-5.2a110.19 110.19 0 0 0-8.65-20.89l3.67-3.67a16 16 0 0 0 0-22.63l-22.63-22.63a16 16 0 0 0-22.63 0l-3.67 3.67A110.45 110.45 0 0 0 192 277.2V272a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v5.2a110.19 110.19 0 0 0-20.89 8.65l-3.67-3.67a16 16 0 0 0-22.63 0L58.18 304.8a16 16 0 0 0 0 22.63l3.67 3.67A110.45 110.45 0 0 0 53.2 352H48a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h5.2a110.19 110.19 0 0 0 8.65 20.89l-3.67 3.67a16 16 0 0 0 0 22.63l22.63 22.63a16 16 0 0 0 22.63 0l3.67-3.67a110.94 110.94 0 0 0 20.9 8.65v5.2a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-5.2a110.56 110.56 0 0 0 20.9-8.65l3.67 3.67a16 16 0 0 0 22.63 0l22.63-22.63a16 16 0 0 0 0-22.63l-3.67-3.67a110.45 110.45 0 0 0 8.65-20.89H272a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-112 80a48 48 0 1 1 48-48 48 48 0 0 1-48 48z", "M624 224h-16v-64a32 32 0 0 0-32-32h-73.6L419.22 24a64 64 0 0 0-50-24H256a32 32 0 0 0-32 32v96H48a16 16 0 0 0-16 16v80H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h16.72c29.21-38.65 75.1-64 127.28-64s98.07 25.35 127.28 64h65.45c29.21-38.65 75.1-64 127.28-64s98.07 25.35 127.28 64H624a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-336-96V64h81.24l51.2 64z"]]
};
exports.faTruckMonster = faTruckMonster;
var faTruckMoving = {
  prefix: 'fad',
  iconName: 'truck-moving',
  icon: [640, 512, [], "f4df", ["M224 352a64 64 0 1 0 64 64 64 64 0 0 0-64-64zm-160 0a64 64 0 1 0 64 64 64 64 0 0 0-64-64zm464 0a64 64 0 1 0 64 64 64 64 0 0 0-64-64z", "M621.3 237.3l-58.5-58.5a64 64 0 0 0-45.3-18.7H480V64a32 32 0 0 0-32-32H32A32 32 0 0 0 0 64v280.51A95.88 95.88 0 0 1 144 363a96 96 0 0 1 170.51 21h123a96 96 0 0 1 181 0H624a16 16 0 0 0 16-16v-85.5a63.79 63.79 0 0 0-18.7-45.2zM480 256v-48h37.5a15.88 15.88 0 0 1 11.3 4.7l43.3 43.3z"]]
};
exports.faTruckMoving = faTruckMoving;
var faTruckPickup = {
  prefix: 'fad',
  iconName: 'truck-pickup',
  icon: [640, 512, [], "f63c", ["M176 304a88 88 0 1 0 88 88 88 88 0 0 0-88-88zm288 0a88 88 0 1 0 88 88 88 88 0 0 0-88-88z", "M624 288h-16v-64a32 32 0 0 0-32-32h-48L419.22 56a64 64 0 0 0-50-24H256a32 32 0 0 0-32 32v128H64a32 32 0 0 0-32 32v64H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h46.8a120.12 120.12 0 0 1 226.4 0h61.6a120.12 120.12 0 0 1 226.4 0H624a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-336-96V96h81.24L446 192z"]]
};
exports.faTruckPickup = faTruckPickup;
var faTruckPlow = {
  prefix: 'fad',
  iconName: 'truck-plow',
  icon: [640, 512, [], "f7de", ["M120 304a88 88 0 1 0 88 88 88 88 0 0 0-88-88zm256 0a88 88 0 1 0 88 88 88 88 0 0 0-88-88z", "M598.6 393.4a77.12 77.12 0 0 1-22.6-54.6V237.2a77.12 77.12 0 0 1 22.6-54.6l36.7-36.7a16.06 16.06 0 0 0 0-22.6l-22.6-22.6a16.06 16.06 0 0 0-22.6 0l-36.7 36.7a141.23 141.23 0 0 0-41.4 99.9V288h-32v-64a32 32 0 0 0-32-32h-45.9l-82-136.7A48.17 48.17 0 0 0 278.9 32H168a40 40 0 0 0-40 40v120H32a32 32 0 0 0-32 32v96a31.87 31.87 0 0 0 10.2 23.43 120.13 120.13 0 0 1 223 8.57h29.6a120.12 120.12 0 0 1 226.4 0h24.1c3.1 32.6 16.7 63.3 40.1 86.6l36.7 36.7a16.06 16.06 0 0 0 22.6 0l22.6-22.6a16.06 16.06 0 0 0 0-22.6zM192 192V96h77.9l57.6 96z"]]
};
exports.faTruckPlow = faTruckPlow;
var faTruckRamp = {
  prefix: 'fad',
  iconName: 'truck-ramp',
  icon: [640, 512, [], "f4e0", ["M544 320a96 96 0 1 0 96 96 96 96 0 0 0-96-96z", "M384 0a32 32 0 0 0-32 32v323.6L5.9 450a8 8 0 0 0-5.6 9.8l12.6 46.3a8 8 0 0 0 9.8 5.6l393.7-107.4c0 .33 0 .66.05 1C421.91 339.7 477 288 544 288a127.71 127.71 0 0 1 96 43.44V0z"]]
};
exports.faTruckRamp = faTruckRamp;
var faTrumpet = {
  prefix: 'fad',
  iconName: 'trumpet',
  icon: [640, 512, [], "f8e3", ["M400 160a16 16 0 0 0-16-16h-16a16 16 0 0 0-16 16v32h48zm-176 0a16 16 0 0 0-16-16h-16a16 16 0 0 0-16 16v32h48zm88 0a16 16 0 0 0-16-16h-16a16 16 0 0 0-16 16v32h48zm180.27 109.64c-4.61-2.43-19.86-9.86-44.27-12.45V352a32 32 0 0 1-32 32h-16V256h-48v128h-40V256h-48v128h-40V256H81.75C70.75 274.9 64 296.57 64 320a128 128 0 0 0 128 128h224a96 96 0 0 0 96-96v-70.3c-6.42-4.16-12.78-8.4-19.73-12.06zM176 381.73a63.69 63.69 0 0 1 0-123.46z", "M640 80v288c0 12-10.81 16-16 16a16.22 16.22 0 0 1-13-6.67 555.44 555.44 0 0 0-66.19-71.68c-15.38-13-32.93-25.66-52.54-36-5.55-2.93-25.75-13.6-60-13.63H48a16 16 0 0 1-16 16H16A16 16 0 0 1 0 256v-64a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16h384.27c34.25 0 54.45-10.69 60-13.63 19.61-10.35 37.16-23.05 52.54-36A555.44 555.44 0 0 0 611 70.67 16.27 16.27 0 0 1 624 64c5.19 0 16 4 16 16z"]]
};
exports.faTrumpet = faTrumpet;
var faTshirt = {
  prefix: 'fad',
  iconName: 'tshirt',
  icon: [640, 512, [], "f553", ["M8.86 96.5a16.11 16.11 0 0 0-7.2 21.5l57.23 114.5a16.11 16.11 0 0 0 21.5 7.2l17.32-8.48L26.09 88zm459-80.95a187.31 187.31 0 0 1-13.32 13.26C418.45 61.3 370.67 79.2 320 79.2s-98.41-17.9-134.51-50.39a187.31 187.31 0 0 1-13.32-13.26L54.76 73.75l71.69 143.4L137 212a16 16 0 0 1 23 14.4V480a32 32 0 0 0 32 32h256a32 32 0 0 0 32-32V226.3a16 16 0 0 1 23-14.4l10.57 5.18L585.19 73.7zm163.31 81l-17.32-8.59-71.6 143.19 17.24 8.45h.06a16 16 0 0 0 21.45-7.2L638.28 118a16 16 0 0 0-7.1-21.5z", "M320 47.2c-51.89 0-96.39-19.4-116.49-47.2l-31.34 15.55a187.31 187.31 0 0 0 13.32 13.26C221.59 61.3 269.37 79.2 320 79.2s98.43-17.9 134.53-50.39a187.31 187.31 0 0 0 13.32-13.26L436.51 0c-20.1 27.8-64.6 47.2-116.51 47.2zM26.09 88l71.62 143.22 28.74-14.07-71.69-143.4zm559.1-14.3l-71.68 143.38 28.74 14.07 71.61-143.24z"]]
};
exports.faTshirt = faTshirt;
var faTty = {
  prefix: 'fad',
  iconName: 'tty',
  icon: [512, 512, [], "f1e4", ["M468 256h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zM84 448H44a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm288 0H140a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h232a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm96 0h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zM140 320h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12zm-96 0h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12H44a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12zm324 44v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12h-40a12 12 0 0 0-12 12zM92 352a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm192 0a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm48-32h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12zm-144 32a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12zm48-32h40a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12h-40a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12z", "M509.22 126.5L466 195.64a18.33 18.33 0 0 1-22.35 7.36l-86.43-34.57a18.35 18.35 0 0 1-11.43-18.85L351.74 90a283.34 283.34 0 0 0-191.48 0l6 59.53a18.35 18.35 0 0 1-11.43 18.85L68.35 203A18.34 18.34 0 0 1 46 195.64L2.79 126.5a18.32 18.32 0 0 1 2.58-22.68c138.53-138.53 362.94-138.32 501.26 0a18.34 18.34 0 0 1 2.59 22.68z"]]
};
exports.faTty = faTty;
var faTurkey = {
  prefix: 'fad',
  iconName: 'turkey',
  icon: [640, 512, [], "f725", ["M491.31 196.55C543.62 254.25 576 326.43 576 384c0 114.87-128.94 128-288 128S0 498.87 0 384 128.94 96 288 96c47.56 0 92.42 15.48 132 40.25-6.31 2.75-13 5.31-20.11 7.66-29.88 9.89-57.06 13.19-71.26 13-20.31-.28-38.95 2.78-55.38 9.1a112.79 112.79 0 0 0-67.12 69.81c-12.85 39.24-5.07 81.34 20.8 112.6a113.32 113.32 0 0 0 82.92 41.45 123.35 123.35 0 0 0 21.59-.91c43.67-5.56 80.8-39.2 94.56-85.7 3.52-11.91 18.24-46.79 41.23-78.59a200.78 200.78 0 0 1 24.08-28.12z", "M639.38 142.58c-4.42 29-23.91 45.46-52.11 44.14-.95 0-1.91-.11-2.87-.19a72.74 72.74 0 0 1-27.22-8 42.94 42.94 0 0 0-18.08-5.1c-11.3-.53-23.45 3.93-36.1 13.27-11.88 8.76-23.93 21.55-35.82 38-23 31.8-37.71 66.68-41.23 78.59-13.76 46.5-50.9 80.14-94.56 85.7a123.35 123.35 0 0 1-21.59.91 113.3 113.3 0 0 1-82.92-41.45c-25.87-31.26-33.65-73.36-20.8-112.6A112.79 112.79 0 0 1 273.2 166c16.43-6.32 35.07-9.38 55.38-9.1 14.2.19 41.38-3.11 71.26-13 30.58-10.13 54.47-24.29 67.27-39.89 10-12.22 13.4-25.21 10.28-39.73a53.55 53.55 0 0 1 20.66-54.17A51.24 51.24 0 0 1 531.1.06a53.14 53.14 0 0 1 38.51 19.33c9.56 11.64 13.54 26.57 11.21 42v.17a53.41 53.41 0 0 1-9 22.12 51.63 51.63 0 0 1 18.47-2.5c1.66.08 3.33.24 5 .48h.14c28.57 4.44 48.36 31.73 43.95 60.92z"]]
};
exports.faTurkey = faTurkey;
var faTurntable = {
  prefix: 'fad',
  iconName: 'turntable',
  icon: [576, 512, [], "f8e4", ["M512 32H64A64 64 0 0 0 0 96v320a64 64 0 0 0 64 64h448a64 64 0 0 0 64-64V96a64 64 0 0 0-64-64zM224 416a160 160 0 1 1 160-160 160 160 0 0 1-160 160zm288-148.18a64 64 0 0 1-6.76 28.63l-18.93 37.86a16 16 0 0 1 7.16 21.46l-25.69 51.38a16 16 0 0 1-21.47 7.16L417.69 400a16 16 0 0 1-7.16-21.46l25.69-51.38a16 16 0 0 1 21.47-7.16l18.93-37.87a32 32 0 0 0 3.38-14.32V104a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8z", "M504 96h-16a8 8 0 0 0-8 8v163.81a32 32 0 0 1-3.38 14.31L457.69 320a16 16 0 0 0-21.47 7.16l-25.69 51.38a16 16 0 0 0 7.16 21.46l28.62 14.32a16 16 0 0 0 21.47-7.16l25.69-51.38a16 16 0 0 0-7.16-21.46l18.93-37.86a64 64 0 0 0 6.76-28.64V104a8 8 0 0 0-8-8zm-280 0a160 160 0 1 0 160 160A160 160 0 0 0 224 96zm0 192a32 32 0 1 1 32-32 32 32 0 0 1-32 32z"]]
};
exports.faTurntable = faTurntable;
var faTurtle = {
  prefix: 'fad',
  iconName: 'turtle',
  icon: [576, 512, [], "f726", ["M552.28 137.25l-48.65-34.75c-35.17-17.42-80.49 1.57-86.81 40.31A63.4 63.4 0 0 0 416 153v71.22a62.79 62.79 0 0 1-13.27 38.44A64.75 64.75 0 0 1 351.05 288H18.6a18.6 18.6 0 0 0-5.89 36.24l98.29 22.1L66.17 424A16 16 0 0 0 80 448h37a16 16 0 0 0 13.86-8l40.3-69.8c26 8.52 45.55 13.8 84.87 13.8s58.89-5.28 84.87-13.8l40.3 69.8a16 16 0 0 0 13.8 8h37a16 16 0 0 0 13.86-24l-47.21-81.76c21.25-8.42 40.36-21.78 54.81-40.53A126.33 126.33 0 0 0 478.74 240h40.62a56.65 56.65 0 0 0 32.92-102.76zM480 176a16 16 0 1 1 16-16 16 16 0 0 1-16 16z", "M68.25 256c-23.54 0-41-19.8-35.1-40 20-69 90.53-152 174.44-152h.82c83.92 0 154.43 83 174.45 152 5.87 20.24-11.56 40-35.1 40z"]]
};
exports.faTurtle = faTurtle;
var faTv = {
  prefix: 'fad',
  iconName: 'tv',
  icon: [640, 512, [], "f26c", ["M592 0H48A48 48 0 0 0 0 48v320a48 48 0 0 0 48 48h240v32H112a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16H352v-32h240a48 48 0 0 0 48-48V48a48 48 0 0 0-48-48zm-16 352H64V64h512z", "M576 352H64V64h512z"]]
};
exports.faTv = faTv;
var faTvAlt = {
  prefix: 'fad',
  iconName: 'tv-alt',
  icon: [640, 512, [], "f8e5", ["M520 448H120a24 24 0 0 0-24 24v16a24 24 0 0 0 24 24h400a24 24 0 0 0 24-24v-16a24 24 0 0 0-24-24zM592 0H48A48 48 0 0 0 0 48v320a48 48 0 0 0 48 48h544a48 48 0 0 0 48-48V48a48 48 0 0 0-48-48zm-16 352H64V64h512z", "M576 352H64V64h512z"]]
};
exports.faTvAlt = faTvAlt;
var faTvMusic = {
  prefix: 'fad',
  iconName: 'tv-music',
  icon: [640, 512, [], "f8e6", ["M64 64v288h512V64zm352 192c0 17.67-21.5 32-48 32s-48-14.33-48-32 21.5-32 48-32a69.82 69.82 0 0 1 16 2v-60.36l-96 37.52V288c0 17.67-21.5 32-48 32s-48-14.33-48-32 21.5-32 48-32a69.82 69.82 0 0 1 16 2v-98.7a16 16 0 0 1 11.19-15.3l128-47.25A16 16 0 0 1 416 112z", "M512 448H128a32 32 0 0 0 0 64h384a32 32 0 0 0 0-64zM592 0H48A48 48 0 0 0 0 48v320a48 48 0 0 0 48 48h544a48 48 0 0 0 48-48V48a48 48 0 0 0-48-48zm-16 352H64V64h512zm-336-32c26.5 0 48-14.33 48-32v-84.84l96-37.52V226a69.82 69.82 0 0 0-16-2c-26.5 0-48 14.33-48 32s21.5 32 48 32 48-14.33 48-32V112a16 16 0 0 0-20.81-15.25l-128 47.25A16 16 0 0 0 256 159.25V258a69.82 69.82 0 0 0-16-2c-26.5 0-48 14.33-48 32s21.5 32 48 32z"]]
};
exports.faTvMusic = faTvMusic;
var faTvRetro = {
  prefix: 'fad',
  iconName: 'tv-retro',
  icon: [512, 512, [], "f401", ["M392 168.07s0-8-168-8c-152 0-152 8-152 8s-8 0-8 120 8 120 8 120 0 8 152 8c168 0 168-8 168-8s8 0 8-120-8-120-8-120zM173.14 96h165.72l35.64-41.32a32 32 0 1 0-45.3-45.3L256 94.27 182.8 9.48a32 32 0 0 0-45.3 45.29z", "M464 96.07H48a48 48 0 0 0-48 48v288a48 48 0 0 0 48 48h16v32h48l21.3-32h245.3l21.3 32h48v-32h16a48 48 0 0 0 48-48v-288a47.86 47.86 0 0 0-47.9-48zm-72 312s0 8-168 8c-152 0-152-8-152-8s-8 0-8-120 8-120 8-120 0-8 152-8c168 0 168 8 168 8s8 0 8 120-8 120-8 120zm72-100a12 12 0 0 1-12 12h-8a12 12 0 0 1-12-12v-8a12 12 0 0 1 12-12h8a12 12 0 0 1 12 12zm0-64a12 12 0 0 1-12 12h-8a12 12 0 0 1-12-12v-8a12 12 0 0 1 12-12h8a12 12 0 0 1 12 12z"]]
};
exports.faTvRetro = faTvRetro;
var faTypewriter = {
  prefix: 'fad',
  iconName: 'typewriter',
  icon: [512, 512, [], "f8e7", ["M368 96a16 16 0 0 1-16-16V0H88a23.94 23.94 0 0 0-24 23.88V192h82.75a32 32 0 0 1 22.62 9.37l13.26 13.26a32 32 0 0 0 22.62 9.37h101.5a32 32 0 0 0 22.62-9.37l13.26-13.26a32 32 0 0 1 22.62-9.37H448V96z", "M368 96h80v-4.58a17.92 17.92 0 0 0-5.25-12.67l-73.43-73.5A18 18 0 0 0 356.57 0H352v80a16 16 0 0 0 16 16zm112 96H365.25a32 32 0 0 0-22.62 9.37l-13.26 13.26a32 32 0 0 1-22.62 9.37h-101.5a32 32 0 0 1-22.62-9.37l-13.26-13.26a32 32 0 0 0-22.62-9.37H32a32 32 0 0 0-32 32v32a32 32 0 0 0 32 32v160a64 64 0 0 0 64 64h320a64 64 0 0 0 64-64V288a32 32 0 0 0 32-32v-32a32 32 0 0 0-32-32zM336 296a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8zm-24 56h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8zm-40-56a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8zm-24 56h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8zm-40-56a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8zm-24 56h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8zm-40-56a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8zm-40 24H88a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8zm32 64h-16a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8zm232 56a8 8 0 0 1-8 8H152a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h208a8 8 0 0 1 8 8zm32-64a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8zm32-64a8 8 0 0 1-8 8h-16a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8z"]]
};
exports.faTypewriter = faTypewriter;
var faUmbrella = {
  prefix: 'fad',
  iconName: 'umbrella',
  icon: [576, 512, [], "f0e9", ["M288 288c12.2 0 22.9 5.7 32 13.6v130.3a80 80 0 0 1-155.4 26.7 32 32 0 0 1 60.3-21.3A16 16 0 0 0 256 432V301.7c9.59-8.9 19.69-13.6 32-13.7z", "M557 292.2c-51.5-54.4-107.61-52.5-158.61 37-5.3 9.5-14.9 8.6-19.7 0-2.5-4.4-32.2-73.2-90.7-73.2-45.8 0-70.5 37.8-90.7 73.2-4.8 8.6-14.4 9.5-19.7 0-50.9-89.4-106.59-92-158.59-37-10.2 9.9-20.9-1.3-18.7-11.4C29.49 144.5 138.29 62.6 256 49.9V32a32 32 0 0 1 64 0v17.9c117.3 12.7 227.11 94.6 255.71 230.9 2.2 10.1-8.4 21.4-18.71 11.4z"]]
};
exports.faUmbrella = faUmbrella;
var faUmbrellaBeach = {
  prefix: 'fad',
  iconName: 'umbrella-beach',
  icon: [640, 512, [], "f5ca", ["M253 448l72.9-200.37L386 269.5 321.06 448z", "M247.63 185.06l238.47 86.83c35.76-121.38 18.7-231.66-42.62-254a66.94 66.94 0 0 0-23.09-4c-58.02.04-128.27 69.19-172.76 171.17zM115.38 136.9l102.11 37.18C252.68 92.54 303.7 29.8 356.49.39A299.21 299.21 0 0 0 108 112.18c-6.73 8.4-2.7 21.05 7.38 24.72zm406.09-76.4a226.81 226.81 0 0 1 13.2 55.19c5.74 49.89-1.42 108.23-18.95 167L618.34 320c10.09 3.67 21.31-3.43 21.57-14.17A299.4 299.4 0 0 0 521.47 60.5zM560 448H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h544a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z"]]
};
exports.faUmbrellaBeach = faUmbrellaBeach;
var faUnderline = {
  prefix: 'fad',
  iconName: 'underline',
  icon: [448, 512, [], "f0cd", ["M432 448H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z", "M32 64h32v160c0 88.22 71.78 160 160 160s160-71.78 160-160V64h32a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16H272a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h32v160a80 80 0 0 1-160 0V64h32a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16H32a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16z"]]
};
exports.faUnderline = faUnderline;
var faUndo = {
  prefix: 'fad',
  iconName: 'undo',
  icon: [512, 512, [], "f0e2", ["M123.31 388.69a12 12 0 0 1 16.38-.54 176 176 0 1 0-29.61-230.61l-46.5 2.22 3.52-64.43A247.45 247.45 0 0 1 256 8c136.66 0 248.1 111.53 248 248.19C503.9 393.07 392.9 504 256 504a247.1 247.1 0 0 1-166.21-63.88l-.49-.46a12 12 0 0 1 0-17z", "M11.65 0h48A12 12 0 0 1 71 12.55l-7.42 147.21 147.54-7.06h.58a12 12 0 0 1 12 12V212a12 12 0 0 1-12 12h-200a12 12 0 0 1-12-12V12A12 12 0 0 1 11.65 0z"]]
};
exports.faUndo = faUndo;
var faUndoAlt = {
  prefix: 'fad',
  iconName: 'undo-alt',
  icon: [512, 512, [], "f2ea", ["M129 383a12 12 0 0 1 16.37-.56A166.77 166.77 0 0 0 256 424c93.82 0 167.24-76 168-166.55C424.79 162 346.91 87.21 254.51 88a166.73 166.73 0 0 0-113.2 45.25L84.69 76.69A247.12 247.12 0 0 1 255.54 8C392.35 7.76 504 119.19 504 256c0 137-111 248-248 248a247.11 247.11 0 0 1-166.18-63.91l-.49-.46a12 12 0 0 1 0-17z", "M49 41l134.06 134c15.09 15.15 4.38 41-17 41H32a24 24 0 0 1-24-24V57.94C8 36.56 33.85 25.85 49 41z"]]
};
exports.faUndoAlt = faUndoAlt;
var faUnicorn = {
  prefix: 'fad',
  iconName: 'unicorn',
  icon: [640, 512, [], "f727", ["M65.43 215a39.94 39.94 0 0 0-17.36 33v56a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-56a88 88 0 0 1 88-88h1.39a95.59 95.59 0 0 0-24.03 55zM638.69 35.55a8 8 0 0 0-6.62-3.55H531.94a52.6 52.6 0 0 1-10.28 8.3c5.11 5.38 9.91 10.5 13.69 14.5a31.75 31.75 0 0 1 8.59 21.8v6.76l92.54-36.71a8 8 0 0 0 2.21-11.1z", "M535.35 54.8c-3.78-4-8.58-9.12-13.69-14.5 11.06-6.84 19.5-17.49 22.18-30.66a8.08 8.08 0 0 0-6.39-9.49 8 8 0 0 0-1.54-.15h-120a128 128 0 0 0-128 128H161a96 96 0 0 0-65.56 166.12l-25.62 68.36a64 64 0 0 0-2.16 38l24.85 99.41A16 16 0 0 0 108 512h66a16 16 0 0 0 15.52-19.88l-26.33-105.26L187 323.27l101 22.31V496a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16V318.22A111.49 111.49 0 0 0 416 240c0-.22-.07-.42-.08-.64V224l.08-32a1.15 1.15 0 0 1-.08.41v-55.52h.08l15.93 7.11 18.9 37.7a32 32 0 0 0 40.49 15.37l32.55-13A32 32 0 0 0 544 154.31l-.06-77.71a31.75 31.75 0 0 0-8.59-21.8zM479.93 96a16 16 0 1 1 16-16 16 16 0 0 1-16 16z"]]
};
exports.faUnicorn = faUnicorn;
var faUnion = {
  prefix: 'fad',
  iconName: 'union',
  icon: [384, 512, [], "f6a2", ["M96 48v236.21c0 46.43 31.29 89.08 76.87 97.93A96.16 96.16 0 0 0 288 288V48a16 16 0 0 1 16-16h64a16 16 0 0 1 16 16v233.32c0 97.57-70 184.64-166.74 197.06C100.17 493.4 0 402.18 0 288V48a16 16 0 0 1 16-16h64a16 16 0 0 1 16 16z", ""]]
};
exports.faUnion = faUnion;
var faUniversalAccess = {
  prefix: 'fad',
  iconName: 'universal-access',
  icon: [512, 512, [], "f29a", ["M256 64C150 64 64 150 64 256s86 192 192 192 192-86 192-192S362 64 256 64zm0 44a36 36 0 1 1-36 36 36 36 0 0 1 36-36zm117.74 98c-28.71 6.78-55.51 12.75-82.14 15.81.85 101 12.31 123 25 155.62a18 18 0 1 1-33.54 13.1C274.4 368.24 266 349.91 260.84 312h-9.68c-5.17 37.85-13.54 56.21-22.26 78.55a18 18 0 1 1-33.54-13.1c12.72-32.54 24.19-54.54 25-155.62-26.63-3.06-53.43-9-82.14-15.81a16 16 0 0 1 7.35-31.14c96.69 22.83 124.29 22.78 220.78 0a16 16 0 0 1 8.33 30.9c-.31.08-.62.16-.94.22z", "M256 180a36 36 0 1 0-36-36 36 36 0 0 0 36 36zm110.39-5.12c-96.49 22.78-124.09 22.83-220.78 0a16 16 0 0 0-7.35 31.12c28.71 6.78 55.51 12.75 82.14 15.81-.85 101.08-12.32 123.08-25 155.62a18 18 0 1 0 33.54 13.1c8.72-22.34 17.09-40.7 22.26-78.55h9.68c5.18 37.91 13.56 56.24 22.26 78.55a18 18 0 1 0 33.54-13.1c-12.73-32.57-24.19-54.6-25-155.62 26.63-3.06 53.43-9 82.14-15.81a16 16 0 0 0-6.82-31.26l-.51.12zM256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 440c-106 0-192-86-192-192S150 64 256 64s192 86 192 192-85.81 191.94-191.8 192z"]]
};
exports.faUniversalAccess = faUniversalAccess;
var faUniversity = {
  prefix: 'fad',
  iconName: 'university',
  icon: [512, 512, [], "f19c", ["M160,192V384h64V192h64V384h64V192h64V384h36a12,12,0,0,1,12,12v20H48V396a12,12,0,0,1,12-12H96V192Z", "M491.06,120.61l-232-88a8,8,0,0,0-6.12,0l-232,88A8,8,0,0,0,16,128v16a8,8,0,0,0,8,8H48v12a12,12,0,0,0,12,12H452a12,12,0,0,0,12-12V152h24a8,8,0,0,0,8-8V128A8,8,0,0,0,491.06,120.61ZM472,432H40a24,24,0,0,0-24,24v16a8,8,0,0,0,8,8H488a8,8,0,0,0,8-8V456A24,24,0,0,0,472,432Z"]]
};
exports.faUniversity = faUniversity;
var faUnlink = {
  prefix: 'fad',
  iconName: 'unlink',
  icon: [512, 512, [], "f127", ["M264.49 366.31a12 12 0 0 0-17 0L202.84 411A72 72 0 0 1 101 309.16l44.67-44.67a12 12 0 0 0 0-17l-39.6-39.6a12 12 0 0 0-17 0l-44.62 44.7c-59.27 59.27-59.27 155.7 0 215s155.7 59.26 215 0l44.67-44.67a12 12 0 0 0 0-17zM467.55 44.45c-59.26-59.27-155.69-59.27-215 0l-44.63 44.67a12 12 0 0 0 0 17l39.6 39.6a12 12 0 0 0 17 0L309.16 101A72 72 0 1 1 411 202.84l-44.67 44.67a12 12 0 0 0 0 17l39.6 39.59a12 12 0 0 0 17 0l44.67-44.67c59.22-59.29 59.22-155.72-.05-214.98z", "M63.6 7L505 448.4a24 24 0 0 1 0 33.94L482.34 505a24 24 0 0 1-33.94 0L7 63.6a24 24 0 0 1 0-33.94L29.66 7A24 24 0 0 1 63.6 7z"]]
};
exports.faUnlink = faUnlink;
var faUnlock = {
  prefix: 'fad',
  iconName: 'unlock',
  icon: [448, 512, [], "f09c", ["M72 256V153.5C72 69.5 139.5.3 223.5 0S376 68 376 152v16a23.94 23.94 0 0 1-24 24h-32a23.94 23.94 0 0 1-24-24v-16a72.11 72.11 0 0 0-72.7-72c-39.6.4-71.3 33.3-71.3 72.9V256z", "M400 512H48a48 48 0 0 1-48-48V304a48 48 0 0 1 48-48h352a48 48 0 0 1 48 48v160a48 48 0 0 1-48 48z"]]
};
exports.faUnlock = faUnlock;
var faUnlockAlt = {
  prefix: 'fad',
  iconName: 'unlock-alt',
  icon: [448, 512, [], "f13e", ["M72 256V153.5C72 69.5 139.5.3 223.5 0S376 68 376 152v16a23.94 23.94 0 0 1-24 24h-32a23.94 23.94 0 0 1-24-24v-16a72.11 72.11 0 0 0-72.7-72c-39.6.4-71.3 33.3-71.3 72.9V256z", "M400 256H48a48 48 0 0 0-48 48v160a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V304a48 48 0 0 0-48-48zM264 408a40 40 0 0 1-80 0v-48a40 40 0 0 1 80 0z"]]
};
exports.faUnlockAlt = faUnlockAlt;
var faUpload = {
  prefix: 'fad',
  iconName: 'upload',
  icon: [512, 512, [], "f093", ["M488 351.92H352v8a56 56 0 0 1-56 56h-80a56 56 0 0 1-56-56v-8H24a23.94 23.94 0 0 0-24 24v112a23.94 23.94 0 0 0 24 24h464a23.94 23.94 0 0 0 24-24v-112a23.94 23.94 0 0 0-24-24zm-120 132a20 20 0 1 1 20-20 20.06 20.06 0 0 1-20 20zm64 0a20 20 0 1 1 20-20 20.06 20.06 0 0 1-20 20z", "M192 359.93v-168h-87.7c-17.8 0-26.7-21.5-14.1-34.11L242.3 5.62a19.37 19.37 0 0 1 27.3 0l152.2 152.2c12.6 12.61 3.7 34.11-14.1 34.11H320v168a23.94 23.94 0 0 1-24 24h-80a23.94 23.94 0 0 1-24-24z"]]
};
exports.faUpload = faUpload;
var faUsbDrive = {
  prefix: 'fad',
  iconName: 'usb-drive',
  icon: [640, 512, [], "f8e9", ["M624 128H448v256h176a16 16 0 0 0 16-16V144a16 16 0 0 0-16-16zm-40 184a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16zm0-96a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16z", "M448 112v288a16 16 0 0 1-16 16H64a64 64 0 0 1-64-64V160a64 64 0 0 1 64-64h368a16 16 0 0 1 16 16z"]]
};
exports.faUsbDrive = faUsbDrive;
var faUsdCircle = {
  prefix: 'fad',
  iconName: 'usd-circle',
  icon: [496, 512, [], "f2e8", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8Zm24,376v16a16,16,0,0,1-16,16H240a16,16,0,0,1-16-16V383.8a88.76,88.76,0,0,1-46.4-15.1c-8.7-5.9-10-18.1-2.3-25.2l12-11.3c5.4-5.1,13.3-5.4,19.7-1.6a38.91,38.91,0,0,0,19.9,5.4h45c11.3,0,20.5-10.5,20.5-23.4,0-10.6-6.3-19.9-15.2-22.7L205,268c-29-8.8-49.2-37-49.2-68.6,0-39.3,30.6-71.3,68.2-71.4V112a16,16,0,0,1,16-16h16a16,16,0,0,1,16,16v16.2a88.76,88.76,0,0,1,46.4,15.1c8.7,5.9,10,18.1,2.3,25.2l-12,11.3c-5.4,5.1-13.3,5.4-19.7,1.6a38.91,38.91,0,0,0-19.9-5.4h-45c-11.3,0-20.5,10.5-20.5,23.4,0,10.6,6.3,19.9,15.2,22.7l72,21.9c29,8.8,49.2,37,49.2,68.6C340.2,351.9,309.6,383.8,272,384Z", "M224,128V112a16,16,0,0,1,16-16h16a16,16,0,0,1,16,16v16.2a88.76,88.76,0,0,1,46.4,15.1c8.7,5.9,10,18.1,2.3,25.2l-12,11.3c-5.4,5.1-13.3,5.4-19.7,1.6a38.91,38.91,0,0,0-19.9-5.4h-45c-11.3,0-20.5,10.5-20.5,23.4,0,10.6,6.3,19.9,15.2,22.7l72,21.9c29,8.8,49.2,37,49.2,68.6.2,39.3-30.4,71.2-68,71.4v16a16,16,0,0,1-16,16H240a16,16,0,0,1-16-16V383.8a88.76,88.76,0,0,1-46.4-15.1c-8.7-5.9-10-18.1-2.3-25.2l12-11.3c5.4-5.1,13.3-5.4,19.7-1.6a38.91,38.91,0,0,0,19.9,5.4h45c11.3,0,20.5-10.5,20.5-23.4,0-10.6-6.3-19.9-15.2-22.7L205,268c-29-8.8-49.2-37-49.2-68.6C155.8,160.1,186.4,128.1,224,128Z"]]
};
exports.faUsdCircle = faUsdCircle;
var faUsdSquare = {
  prefix: 'fad',
  iconName: 'usd-square',
  icon: [448, 512, [], "f2e9", ["M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zM248 384v16a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-16.2a88.84 88.84 0 0 1-46.4-15.1c-8.7-5.9-10-18.1-2.3-25.2l12-11.3c5.4-5.1 13.3-5.4 19.7-1.6a38.9 38.9 0 0 0 19.9 5.4h45c11.3 0 20.5-10.5 20.5-23.4 0-10.6-6.3-19.9-15.2-22.7L181 268c-29-8.8-49.2-37-49.2-68.6 0-39.3 30.6-71.3 68.2-71.4v-16a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v16.2a88.84 88.84 0 0 1 46.4 15.1c8.7 5.9 10 18.1 2.3 25.2l-12 11.3c-5.4 5.1-13.3 5.4-19.7 1.6a38.9 38.9 0 0 0-19.9-5.4h-45c-11.3 0-20.5 10.5-20.5 23.4 0 10.6 6.3 19.9 15.2 22.7l72 21.9c29 8.8 49.2 37 49.2 68.6.2 39.3-30.4 71.2-68 71.4z", "M248 384v16a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-16.2a88.84 88.84 0 0 1-46.4-15.1c-8.7-5.9-10-18.1-2.3-25.2l12-11.3c5.4-5.1 13.3-5.4 19.7-1.6a38.9 38.9 0 0 0 19.9 5.4h45c11.3 0 20.5-10.5 20.5-23.4 0-10.6-6.3-19.9-15.2-22.7L181 268c-29-8.8-49.2-37-49.2-68.6 0-39.3 30.6-71.3 68.2-71.4v-16a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v16.2a88.84 88.84 0 0 1 46.4 15.1c8.7 5.9 10 18.1 2.3 25.2l-12 11.3c-5.4 5.1-13.3 5.4-19.7 1.6a38.9 38.9 0 0 0-19.9-5.4h-45c-11.3 0-20.5 10.5-20.5 23.4 0 10.6 6.3 19.9 15.2 22.7l72 21.9c29 8.8 49.2 37 49.2 68.6.2 39.3-30.4 71.2-68 71.4z"]]
};
exports.faUsdSquare = faUsdSquare;
var faUser = {
  prefix: 'fad',
  iconName: 'user',
  icon: [448, 512, [], "f007", ["M352 128A128 128 0 1 1 224 0a128 128 0 0 1 128 128z", "M313.6 288h-16.7a174.1 174.1 0 0 1-145.8 0h-16.7A134.43 134.43 0 0 0 0 422.4V464a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48v-41.6A134.43 134.43 0 0 0 313.6 288z"]]
};
exports.faUser = faUser;
var faUserAlt = {
  prefix: 'fad',
  iconName: 'user-alt',
  icon: [512, 512, [], "f406", ["M400 144A144 144 0 1 1 256 0a144 144 0 0 1 144 144z", "M384 320h-55.1a174.1 174.1 0 0 1-145.8 0H128A128 128 0 0 0 0 448v16a48 48 0 0 0 48 48h416a48 48 0 0 0 48-48v-16a128 128 0 0 0-128-128z"]]
};
exports.faUserAlt = faUserAlt;
var faUserAltSlash = {
  prefix: 'fad',
  iconName: 'user-alt-slash',
  icon: [640, 512, [], "f4fa", ["M180.6 107.84a144 144 0 1 1 209.51 161.94zM198.37 320A134.43 134.43 0 0 0 64 454.4v9.6a48 48 0 0 0 48 48h382.2L245.77 320z", "M636.67 480.4l-19.6 25.3a16.06 16.06 0 0 1-22.5 2.8L6.17 53.8a15.93 15.93 0 0 1-2.8-22.4L23 6.2a16.06 16.06 0 0 1 22.5-2.8l588.3 454.7a15.85 15.85 0 0 1 2.87 22.3z"]]
};
exports.faUserAltSlash = faUserAltSlash;
var faUserAstronaut = {
  prefix: 'fad',
  iconName: 'user-astronaut',
  icon: [448, 512, [], "f4fb", ["M296 96H152c-26.5 0-48 17.9-48 40v24a96 96 0 0 0 96 96h48a96 96 0 0 0 96-96v-24c0-22.1-21.5-40-48-40zm-108 76l-12 36-12-36-36-12 36-12 12-36 12 36 36 12zm-12 276a16 16 0 0 0-16 16v48h32v-48a16 16 0 0 0-16-16zm96 0a16 16 0 1 0 16 16 16 16 0 0 0-16-16z", "M327.6 321.4a190.68 190.68 0 0 1-207.2 0C52.9 328.5 0 385 0 454.4v9.6a48 48 0 0 0 48 48h80v-64a32 32 0 0 1 32-32h128a32 32 0 0 1 32 32v64h80a48 48 0 0 0 48-48v-9.6c0-69.4-52.9-125.9-120.4-133zM64 224h13.5a159.78 159.78 0 0 0 293 0H384a16 16 0 0 0 16-16v-96a16 16 0 0 0-16-16h-13.5a159.78 159.78 0 0 0-293 0H64a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16zm40-88c0-22.1 21.5-40 48-40h144c26.5 0 48 17.9 48 40v24a96 96 0 0 1-96 96h-48a96 96 0 0 1-96-96z"]]
};
exports.faUserAstronaut = faUserAstronaut;
var faUserChart = {
  prefix: 'fad',
  iconName: 'user-chart',
  icon: [640, 512, [], "f6a3", ["M592 0H208c-26.47 0-48 22.25-48 49.59V96c23.42 0 45.1 6.78 64 17.8V64h352v288H307.76a127.45 127.45 0 0 1 39.69 64H592c26.47 0 48-22.25 48-49.59V49.59C640 22.25 618.47 0 592 0zM312 217.94l55 55a24 24 0 0 0 34 .06l72-72 24.3 24.3c11.34 11.34 30.73 3.31 30.73-12.73V124a12 12 0 0 0-12-12h-88.57c-16 0-24.07 19.39-12.73 30.73L439 167l-55 55-55-55a24 24 0 0 0-34 0l-14.75 14.75C285 195.07 288 209.13 288 224a126.17 126.17 0 0 1-2 19.95z", "M160 320a96 96 0 1 0-96-96 96 96 0 0 0 96 96zm48 32h-3.81c-13.93 4.83-28.64 8-44.19 8s-30.26-3.17-44.19-8H112A112 112 0 0 0 0 464a48 48 0 0 0 48 48h224a48 48 0 0 0 48-48 112 112 0 0 0-112-112z"]]
};
exports.faUserChart = faUserChart;
var faUserCheck = {
  prefix: 'fad',
  iconName: 'user-check',
  icon: [640, 512, [], "f4fc", ["M636.6 159.6a12 12 0 0 1-.1 16.8L495.2 316.6a11.86 11.86 0 0 1-16.8-.1l-81.7-82.3a11.86 11.86 0 0 1 .1-16.8l28.1-27.9a11.86 11.86 0 0 1 16.8.1l45.5 45.8 104.8-104a11.86 11.86 0 0 1 16.8.1z", "M224 256A128 128 0 1 0 96 128a128 128 0 0 0 128 128zm89.6 32h-16.7a174.08 174.08 0 0 1-145.8 0h-16.7A134.43 134.43 0 0 0 0 422.4V464a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48v-41.6A134.43 134.43 0 0 0 313.6 288z"]]
};
exports.faUserCheck = faUserCheck;
var faUserCircle = {
  prefix: 'fad',
  iconName: 'user-circle',
  icon: [496, 512, [], "f2bd", ["M248,8C111,8,0,119,0,256S111,504,248,504,496,393,496,256,385,8,248,8Zm0,96a88,88,0,1,1-88,88A88,88,0,0,1,248,104Zm0,344a191.61,191.61,0,0,1-146.5-68.2C120.3,344.4,157.1,320,200,320a24.76,24.76,0,0,1,7.1,1.1,124.67,124.67,0,0,0,81.8,0A24.76,24.76,0,0,1,296,320c42.9,0,79.7,24.4,98.5,59.8A191.61,191.61,0,0,1,248,448Z", "M248,280a88,88,0,1,0-88-88A88,88,0,0,0,248,280Zm48,40a24.76,24.76,0,0,0-7.1,1.1,124.67,124.67,0,0,1-81.8,0A24.76,24.76,0,0,0,200,320c-42.9,0-79.7,24.4-98.5,59.8,68.07,80.91,188.84,91.32,269.75,23.25A192,192,0,0,0,394.5,379.8C375.7,344.4,338.9,320,296,320Z"]]
};
exports.faUserCircle = faUserCircle;
var faUserClock = {
  prefix: 'fad',
  iconName: 'user-clock',
  icon: [640, 512, [], "f4fd", ["M496 224a144 144 0 1 0 144 144 143.91 143.91 0 0 0-144-144zm64 150.3a9.77 9.77 0 0 1-9.7 9.7h-60.6a9.77 9.77 0 0 1-9.7-9.7v-76.6a9.77 9.77 0 0 1 9.7-9.7h12.6a9.77 9.77 0 0 1 9.7 9.7V352h38.3a9.77 9.77 0 0 1 9.7 9.7z", "M224 256A128 128 0 1 0 96 128a128 128 0 0 0 128 128zm96 112a175.38 175.38 0 0 1 18.2-77.5 133.25 133.25 0 0 0-24.6-2.5h-16.7a174.08 174.08 0 0 1-145.8 0h-16.7A134.43 134.43 0 0 0 0 422.4V464a48 48 0 0 0 48 48h347.1c-45.3-31.9-75.1-84.5-75.1-144z"]]
};
exports.faUserClock = faUserClock;
var faUserCog = {
  prefix: 'fad',
  iconName: 'user-cog',
  icon: [640, 512, [], "f4fe", ["M636.3 388.2l-25.8-14.9a117.31 117.31 0 0 0 0-42.6l25.8-14.9a7.24 7.24 0 0 0 3.3-8.5 150.07 150.07 0 0 0-33.2-57.4 7.29 7.29 0 0 0-9-1.4l-25.8 14.9a117.4 117.4 0 0 0-36.9-21.3v-29.8a7.28 7.28 0 0 0-5.7-7.1 150.88 150.88 0 0 0-66.2 0 7.28 7.28 0 0 0-5.7 7.1v29.8a117.4 117.4 0 0 0-36.9 21.3l-25.8-14.9a7.31 7.31 0 0 0-9 1.4 150.07 150.07 0 0 0-33.2 57.4 7.37 7.37 0 0 0 3.3 8.5l25.8 14.9a117.31 117.31 0 0 0 0 42.6l-25.8 14.9a7.24 7.24 0 0 0-3.3 8.5 150.82 150.82 0 0 0 33.2 57.4 7.29 7.29 0 0 0 9 1.4l25.8-14.9a117.4 117.4 0 0 0 36.9 21.3v29.8a7.28 7.28 0 0 0 5.7 7.1 150.88 150.88 0 0 0 66.2 0 7.28 7.28 0 0 0 5.7-7.1v-29.8a117.4 117.4 0 0 0 36.9-21.3l25.8 14.9a7.31 7.31 0 0 0 9-1.4 150.07 150.07 0 0 0 33.2-57.4 7.37 7.37 0 0 0-3.3-8.5zM496 400.5a48.5 48.5 0 1 1 48.5-48.5 48.55 48.55 0 0 1-48.5 48.5z", "M425.2 491.7v-9.2c-2.3-1.2-4.6-2.6-6.8-3.9l-7.9 4.6a39.23 39.23 0 0 1-48.5-7.3 182.34 182.34 0 0 1-40.2-69.6 39.11 39.11 0 0 1 17.9-45.7l7.9-4.6q-.15-3.9 0-7.8l-7.9-4.6a39.07 39.07 0 0 1-17.9-45.7c.9-2.9 2.2-5.8 3.2-8.7-3.8-.3-7.5-1.2-11.4-1.2h-16.7a174.08 174.08 0 0 1-145.8 0h-16.7A134.43 134.43 0 0 0 0 422.4V464a48 48 0 0 0 48 48h352a47.94 47.94 0 0 0 27.2-8.5 39 39 0 0 1-2-11.8zM224 256A128 128 0 1 0 96 128a128 128 0 0 0 128 128z"]]
};
exports.faUserCog = faUserCog;
var faUserCowboy = {
  prefix: 'fad',
  iconName: 'user-cowboy',
  icon: [448, 512, [], "f8ea", ["M352 224.28v.22a128 128 0 0 1-256 0v-.23c32.26 18.65 74.19 32.23 128 32.23s95.71-13.57 128-32.22z", "M313.59 384h-16.68a174.12 174.12 0 0 1-145.82 0h-16.68A133.82 133.82 0 0 0 9.55 469.8C1.66 490.19 18.08 512 40 512h368.1c21.87 0 38.29-21.81 30.4-42.2A133.82 133.82 0 0 0 313.59 384zm28.91-270.44C331.44 64 310.87 0 278.1 0c-10.33 0-19.55 4.45-27.3 10.47a42.41 42.41 0 0 1-52.07 0C191 4.45 181.76 0 171.43 0c-32.88 0-53.49 64.49-64.51 114.09C133 124 170.75 132.57 224 132.57c54.18 0 92.36-8.84 118.5-19.01zm96-15.76a18.2 18.2 0 0 0-21.95 5.2c-.43.57-44.81 61.59-192.55 61.59C77.12 164.57 32.4 104.21 31.46 103a18 18 0 0 0-21.79-5.37c-7.76 3.53-11.51 11.84-8.79 19.44C1.4 118.46 52.75 256 224 256s222.61-137.54 223.13-138.93c2.69-7.54-1.03-15.69-8.66-19.27z"]]
};
exports.faUserCowboy = faUserCowboy;
var faUserCrown = {
  prefix: 'fad',
  iconName: 'user-crown',
  icon: [448, 512, [], "f6a4", ["M352 96H96V0l64 32 64-32 64 32 64-32z", "M313.6 304h-16.71a174 174 0 0 1-145.78 0H134.4A134.4 134.4 0 0 0 0 438.4V464a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48v-25.6A134.4 134.4 0 0 0 313.6 304zM224 272a128 128 0 0 0 128-128v-16H96v16a128 128 0 0 0 128 128z"]]
};
exports.faUserCrown = faUserCrown;
var faUserEdit = {
  prefix: 'fad',
  iconName: 'user-edit',
  icon: [640, 512, [], "f4ff", ["M358.9 433.3l-6.8 61a15.92 15.92 0 0 0 17.6 17.6l60.9-6.8 137.9-137.9-71.7-71.7zM633 268.9L595.1 231a24 24 0 0 0-33.8 0l-37.8 37.8-4.1 4.1 71.8 71.7 41.8-41.8a24.08 24.08 0 0 0 0-33.9z", "M313.6 288h-16.7a174.08 174.08 0 0 1-145.8 0h-16.7A134.43 134.43 0 0 0 0 422.4V464a48 48 0 0 0 48 48h274.9a48 48 0 0 1-2.6-21.3l6.8-60.9 1.2-11.1 85.2-85.2c-24.5-27.7-60-45.5-99.9-45.5zM224 256A128 128 0 1 0 96 128a128 128 0 0 0 128 128z"]]
};
exports.faUserEdit = faUserEdit;
var faUserFriends = {
  prefix: 'fad',
  iconName: 'user-friends',
  icon: [640, 512, [], "f500", ["M480 256a96 96 0 1 0-96-96 96 96 0 0 0 96 96zm48 32h-3.8c-13.9 4.8-28.6 8-44.2 8s-30.3-3.2-44.2-8H432c-20.4 0-39.2 5.9-55.7 15.4 24.4 26.3 39.7 61.2 39.7 99.8v38.4c0 2.2-.5 4.3-.6 6.4H592a48 48 0 0 0 48-48 111.94 111.94 0 0 0-112-112z", "M192 256A112 112 0 1 0 80 144a111.94 111.94 0 0 0 112 112zm76.8 32h-8.3a157.53 157.53 0 0 1-68.5 16c-24.6 0-47.6-6-68.5-16h-8.3A115.23 115.23 0 0 0 0 403.2V432a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48v-28.8A115.23 115.23 0 0 0 268.8 288z"]]
};
exports.faUserFriends = faUserFriends;
var faUserGraduate = {
  prefix: 'fad',
  iconName: 'user-graduate',
  icon: [448, 512, [], "f501", ["M351.75 168a128 128 0 0 1-255.5 0z", "M13.6 79.83l6.4 1.5v58.4c-7 4.19-12 11.5-12 20.27 0 8.4 4.6 15.4 11.1 19.71L3.5 242c-1.7 6.9 2.1 14 7.6 14h41.8c5.5 0 9.3-7.1 7.6-14l-15.6-62.27C51.4 175.42 56 168.42 56 160c0-8.79-5-16.1-12-20.29V87.12l52 12.53V136h256V99.65l82.3-19.82c18.2-4.41 18.2-27.1 0-31.5l-190.4-46a85.9 85.9 0 0 0-39.7 0L13.6 48.23c-18.1 4.39-18.1 27.19 0 31.6zm305.8 240.79L224 416l-95.4-95.4C57.1 323.73 0 382.23 0 454.42V464a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48v-9.6c0-72.17-57.1-130.67-128.6-133.78z"]]
};
exports.faUserGraduate = faUserGraduate;
var faUserHardHat = {
  prefix: 'fad',
  iconName: 'user-hard-hat',
  icon: [448, 512, [], "f82c", ["M97.61 208h252.78c-7.95 63.06-61.17 112-126.39 112S105.56 271.06 97.61 208z", "M313.6 352h-16.7a174.1 174.1 0 0 1-145.8 0h-16.7A134.4 134.4 0 0 0 0 486.4 25.6 25.6 0 0 0 25.6 512h396.8a25.6 25.6 0 0 0 25.6-25.6A134.4 134.4 0 0 0 313.6 352zM88 176h272a8 8 0 0 0 8-8v-32a8 8 0 0 0-8-8h-8a112 112 0 0 0-68.4-103.2L256 80V16a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v64l-27.6-55.2A112 112 0 0 0 96 128h-8a8 8 0 0 0-8 8v32a8 8 0 0 0 8 8z"]]
};
exports.faUserHardHat = faUserHardHat;
var faUserHeadset = {
  prefix: 'fad',
  iconName: 'user-headset',
  icon: [448, 512, [], "f82d", ["M416 192v16a112.15 112.15 0 0 1-112 112h-96a32 32 0 0 1 0-64h32a32 32 0 0 1 32 32h32a80.09 80.09 0 0 0 80-80v-16c0-88.22-71.78-160-160-160S64 103.78 64 192v16a16 16 0 0 1-32 0v-16C32 86.13 118.13 0 224 0s192 86.13 192 192z", "M320 352h-23.1a174.1 174.1 0 0 1-145.8 0H128A128 128 0 0 0 0 480a32 32 0 0 0 32 32h384a32 32 0 0 0 32-32 128 128 0 0 0-128-128zm-175.65-60.53c-.06-1.17-.35-2.28-.35-3.47a64.07 64.07 0 0 1 64-64h32a64 64 0 0 1 55.41 32H304a48.05 48.05 0 0 0 48-48v-16a128 128 0 0 0-256 0c0 40.42 19.1 76 48.35 99.47z"]]
};
exports.faUserHeadset = faUserHeadset;
var faUserInjured = {
  prefix: 'fad',
  iconName: 'user-injured',
  icon: [448, 512, [], "f728", ["M306 30.48L240 80h102.51A127.7 127.7 0 0 0 306 30.48zM80 299.7V512h128.26l-98.45-221.52A132.86 132.86 0 0 0 80 299.7zM277.37 12a127.05 127.05 0 0 0-171.88 68h81.19z", "M256 416h-55.38l42.67 96H256a48 48 0 0 0 0-96zm96-288c0-5.48-.95-10.7-1.61-16H97.61c-.67 5.3-1.61 10.52-1.61 16a128 128 0 0 0 256 0zm-38.4 160h-16.71a174 174 0 0 1-145.78 0h-7.37l42.67 96H256a80.09 80.09 0 0 1 80 80 79.24 79.24 0 0 1-16.41 48H400a48 48 0 0 0 48-48v-41.6A134.4 134.4 0 0 0 313.6 288zM0 422.4V464a48 48 0 0 0 48 48V320.24C18.88 344.89 0 381.26 0 422.4z"]]
};
exports.faUserInjured = faUserInjured;
var faUserLock = {
  prefix: 'fad',
  iconName: 'user-lock',
  icon: [640, 512, [], "f502", ["M608 288h-32v-80a80 80 0 0 0-160 0v80h-32a32 32 0 0 0-32 32v160a32 32 0 0 0 32 32h224a32 32 0 0 0 32-32V320a32 32 0 0 0-32-32zM496 432a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm32-144h-64v-80a32 32 0 0 1 64 0z", "M224 256A128 128 0 1 0 96 128a128 128 0 0 0 128 128zm96 64a63.08 63.08 0 0 1 8.1-30.5c-4.8-.5-9.5-1.5-14.5-1.5h-16.7a174.08 174.08 0 0 1-145.8 0h-16.7A134.43 134.43 0 0 0 0 422.4V464a48 48 0 0 0 48 48h280.9a63.54 63.54 0 0 1-8.9-32z"]]
};
exports.faUserLock = faUserLock;
var faUserMd = {
  prefix: 'fad',
  iconName: 'user-md',
  icon: [448, 512, [], "f0f0", ["M352 128a128 128 0 1 0-128 128 128 128 0 0 0 128-128zM144 370.6V288h-9.6a135.6 135.6 0 0 0-22.4 1.87v80.73a56 56 0 1 0 32 0zM128 448a24 24 0 1 1 24-24 23.94 23.94 0 0 1-24 24zm191.8-85.6v-74.25c-2.06-.1-4.12-.15-6.2-.15h-16.7q-4.38 2-8.9 3.79v70.41c-28.2 7.5-48 34.5-48 64.6V456a16.06 16.06 0 0 0 4.7 11.3l10.3 10.3a8 8 0 0 0 11.3 0l11.3-11.3a8 8 0 0 0 0-11.3l-5.7-5.7V424a32.14 32.14 0 0 1 37.4-31.6c15.7 2.6 26.6 17.4 26.6 33.3v23.6l-5.7 5.7a8 8 0 0 0 0 11.3l11.3 11.3a8 8 0 0 0 11.3 0l10.3-10.3a16.06 16.06 0 0 0 4.7-11.3v-32a63.8 63.8 0 0 0-48-61.6z", "M319.8 288.15v74.25a63.8 63.8 0 0 1 48 61.6v32a16.06 16.06 0 0 1-4.7 11.3l-10.3 10.3a8 8 0 0 1-11.3 0l-11.3-11.3a8 8 0 0 1 0-11.3l5.7-5.7v-23.6c0-15.9-10.9-30.7-26.6-33.3a32.14 32.14 0 0 0-37.4 31.6v25.3l5.7 5.7a8 8 0 0 1 0 11.3l-11.3 11.3a8 8 0 0 1-11.3 0l-10.3-10.3A16.06 16.06 0 0 1 240 456v-29.2c0-30.1 19.8-57.1 48-64.6v-70.41A174 174 0 0 1 151.1 288H144v82.6a56 56 0 1 1-32 0v-80.73A134.47 134.47 0 0 0 0 422.4V464a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48v-41.6a134.44 134.44 0 0 0-128.2-134.25zM104 424a24 24 0 1 0 24-24 23.94 23.94 0 0 0-24 24z"]]
};
exports.faUserMd = faUserMd;
var faUserMdChat = {
  prefix: 'fad',
  iconName: 'user-md-chat',
  icon: [640, 512, [], "f82e", ["M512 0c-70.69 0-128 50.15-128 112 0 28.76 12.75 54.72 33.11 74.55a312.19 312.19 0 0 1-31.29 55.37 9.85 9.85 0 0 0-1.25 9.07c1.09 3.13 3.43 5 6.11 5 39.84 0 72.35-17.13 95.22-34.36A146.46 146.46 0 0 0 512 224c70.69 0 128-50.15 128-112S582.69 0 512 0zM144 370.6V288h-9.6a135.6 135.6 0 0 0-22.4 1.87v80.73a56 56 0 1 0 32 0zM128 448a24 24 0 1 1 24-24 23.94 23.94 0 0 1-24 24zm224-320a128 128 0 1 0-128 128 128 128 0 0 0 128-128zm-32.2 234.4v-74.25c-2.06-.1-4.12-.15-6.2-.15h-16.7q-4.38 2-8.9 3.79v70.41c-28.2 7.5-48 34.5-48 64.6V456a16.06 16.06 0 0 0 4.7 11.3l10.3 10.3a8 8 0 0 0 11.3 0l11.3-11.3a8 8 0 0 0 0-11.3l-5.7-5.7V424a32.14 32.14 0 0 1 37.4-31.6c15.7 2.6 26.6 17.4 26.6 33.3v23.6l-5.7 5.7a8 8 0 0 0 0 11.3l11.3 11.3a8 8 0 0 0 11.3 0l10.3-10.3a16.06 16.06 0 0 0 4.7-11.3v-32a63.8 63.8 0 0 0-48-61.6z", "M319.8 288.15v74.25a63.8 63.8 0 0 1 48 61.6v32a16.06 16.06 0 0 1-4.7 11.3l-10.3 10.3a8 8 0 0 1-11.3 0l-11.3-11.3a8 8 0 0 1 0-11.3l5.7-5.7v-23.6c0-15.9-10.9-30.7-26.6-33.3a32.14 32.14 0 0 0-37.4 31.6v25.3l5.7 5.7a8 8 0 0 1 0 11.3l-11.3 11.3a8 8 0 0 1-11.3 0l-10.3-10.3A16.06 16.06 0 0 1 240 456v-29.2c0-30.1 19.8-57.1 48-64.6v-70.41A174 174 0 0 1 151.1 288H144v82.6a56 56 0 1 1-32 0v-80.73A134.47 134.47 0 0 0 0 422.4V464a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48v-41.6a134.44 134.44 0 0 0-128.2-134.25zM104 424a24 24 0 1 0 24-24 23.94 23.94 0 0 0-24 24z"]]
};
exports.faUserMdChat = faUserMdChat;
var faUserMinus = {
  prefix: 'fad',
  iconName: 'user-minus',
  icon: [640, 512, [], "f503", ["M640 224v32a16 16 0 0 1-16 16H432a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h192a16 16 0 0 1 16 16z", "M313.6 288h-16.7a174.08 174.08 0 0 1-145.8 0h-16.7A134.43 134.43 0 0 0 0 422.4V464a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48v-41.6A134.43 134.43 0 0 0 313.6 288zM224 256A128 128 0 1 0 96 128a128 128 0 0 0 128 128z"]]
};
exports.faUserMinus = faUserMinus;
var faUserMusic = {
  prefix: 'fad',
  iconName: 'user-music',
  icon: [640, 512, [], "f8eb", ["M224 256A128 128 0 1 0 96 128a128 128 0 0 0 128 128zm64 176c0-54.9 48.34-99.39 114.45-109.72C378.72 301.2 347.82 288 313.59 288h-16.68a174.12 174.12 0 0 1-145.82 0h-16.68A134.43 134.43 0 0 0 0 422.41V464a48 48 0 0 0 48 48h282.42C304.13 491.81 288 463.66 288 432z", "M598.94 97.33l-96.53 28.51a32 32 0 0 0-22.41 30.5V360a148.76 148.76 0 0 0-48-8c-61.86 0-112 35.82-112 80s50.14 80 112 80 112-35.82 112-80V244.15l73-21.39a32 32 0 0 0 23-30.71V128a32 32 0 0 0-41.06-30.67z"]]
};
exports.faUserMusic = faUserMusic;
var faUserNinja = {
  prefix: 'fad',
  iconName: 'user-ninja',
  icon: [448, 512, [], "f504", ["M304 128H144a32 32 0 0 1 32-32h96a32 32 0 0 1 32 32z", "M325.4 289.2L224 390.6 122.6 289.2C54 295.3 0 352.2 0 422.4V464a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48v-41.6c0-70.2-54-127.1-122.6-133.2zM32 192a95.47 95.47 0 0 0 69.2-29.7c15.1 53.9 64 93.7 122.8 93.7a128 128 0 0 0 0-256c-50.4 0-93.6 29.4-114.5 71.8A95.53 95.53 0 0 0 32 32a95.74 95.74 0 0 0 43.1 80A95.74 95.74 0 0 0 32 192zm144-96h96a32 32 0 0 1 32 32H144a32 32 0 0 1 32-32z"]]
};
exports.faUserNinja = faUserNinja;
var faUserNurse = {
  prefix: 'fad',
  iconName: 'user-nurse',
  icon: [448, 512, [], "f82f", ["M406.2 272a16 16 0 0 1-16 16h-82.34c-22.51 19.68-51.62 32-83.86 32s-61.35-12.32-83.86-32H57.78a16 16 0 0 1-14.28-23.18c15.23-29.82 31.28-62.23 42.17-95.54.14-.43.26-.85.4-1.28H144v24a80 80 0 0 0 160 0v-24h58c.14.43.26.85.4 1.28 10.87 33.31 26.92 65.69 42.15 95.54a15.88 15.88 0 0 1 1.65 7.18z", "M319.41 320L224 415.39 128.59 320C57.1 323.1 0 381.6 0 453.79A58.21 58.21 0 0 0 58.21 512h331.58A58.21 58.21 0 0 0 448 453.79C448 381.6 390.9 323.1 319.41 320zM352 97.2V48L224 0 96 48v49.2a269.12 269.12 0 0 1-2.66 38.8h261.33A267.71 267.71 0 0 1 352 97.2zm-88-8.87a5 5 0 0 1-5 5h-21.67V115a5 5 0 0 1-5 5h-16.66a5 5 0 0 1-5-5V93.33H189a5 5 0 0 1-5-5V71.67a5 5 0 0 1 5-5h21.67V45a5 5 0 0 1 5-5h16.66a5 5 0 0 1 5 5v21.67H259a5 5 0 0 1 5 5z"]]
};
exports.faUserNurse = faUserNurse;
var faUserPlus = {
  prefix: 'fad',
  iconName: 'user-plus',
  icon: [640, 512, [], "f234", ["M640 224v32a16 16 0 0 1-16 16h-64v64a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-64h-64a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h64v-64a16 16 0 0 1 16-16h32a16 16 0 0 1 16 16v64h64a16 16 0 0 1 16 16z", "M224 256A128 128 0 1 0 96 128a128 128 0 0 0 128 128zm89.6 32h-16.7a174.08 174.08 0 0 1-145.8 0h-16.7A134.43 134.43 0 0 0 0 422.4V464a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48v-41.6A134.43 134.43 0 0 0 313.6 288z"]]
};
exports.faUserPlus = faUserPlus;
var faUserSecret = {
  prefix: 'fad',
  iconName: 'user-secret',
  icon: [448, 512, [], "f21b", ["M255.38 421.22L224 480l-31.38-58.78L208 352l-17.79-35.58a161.25 161.25 0 0 0 67.58 0L240 352zM224 288a128 128 0 0 0 128-127.21c-7.49 1.54-15.51 3-24 4.2v6.59c-.11.11-6.07 3.47-6.93 6.28-4.23 12.9-7.59 26.65-17.88 36.19-10.94 10.07-52 24.26-69.33-27.09-3-9.1-16.69-9.1-19.83 0-18.41 54.39-60.66 35.1-69.33 27.09-10.29-9.54-13.76-23.29-17.88-36.19-.86-2.7-6.82-6.17-6.82-6.28V165c-8.48-1.25-16.5-2.66-24-4.2A128 128 0 0 0 224 288z", "M120 165v6.59c0 .11 6 3.58 6.82 6.28 4.12 12.9 7.59 26.65 17.88 36.19 8.67 8 50.92 27.3 69.33-27.09 3.14-9.1 16.79-9.1 19.83 0 17.33 51.35 58.39 37.16 69.33 27.09 10.29-9.54 13.65-23.29 17.88-36.19.86-2.81 6.82-6.17 6.93-6.28V165c52.95-7.83 88-21.47 88-37 0-13.75-27.51-26-70.6-34.09-9.35-32.11-26.69-64.08-40-80.72a32.1 32.1 0 0 0-39.5-8.8l-27.6 13.8a32 32 0 0 1-28.6 0l-27.6-13.8a32.1 32.1 0 0 0-39.5 8.8c-13.22 16.64-30.6 48.61-40 80.72C59.51 102 32 114.25 32 128c0 15.52 35.05 29.16 88 37zm263.9 143.27l23.9-62.58a16 16 0 0 0-15-21.7h-32.12L224 480 87.32 224h-31a16 16 0 0 0-14.7 22.3l25.74 60.06A133.56 133.56 0 0 0 0 422.4V464a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48v-41.6a133.5 133.5 0 0 0-64.1-114.13z"]]
};
exports.faUserSecret = faUserSecret;
var faUserShield = {
  prefix: 'fad',
  iconName: 'user-shield',
  icon: [640, 512, [], "f505", ["M622.3 271.1l-115.2-45a31 31 0 0 0-22.2 0l-115.2 45c-10.7 4.2-17.7 14-17.7 24.9 0 111.6 68.7 188.8 132.9 213.9a31 31 0 0 0 22.2 0C558.4 489.9 640 420.5 640 296c0-10.9-7-20.7-17.7-24.9zM496 462.4V273.3l95.5 37.3c-5.6 87.1-60.9 135.4-95.5 151.8z", "M224 256A128 128 0 1 0 96 128a128 128 0 0 0 128 128zm96 40c0-2.5.8-4.8 1.1-7.2-2.5-.1-4.9-.8-7.5-.8h-16.7a174.08 174.08 0 0 1-145.8 0h-16.7A134.43 134.43 0 0 0 0 422.4V464a48 48 0 0 0 48 48h352a49.22 49.22 0 0 0 19.2-4c-54-42.9-99.2-116.7-99.2-212z"]]
};
exports.faUserShield = faUserShield;
var faUserSlash = {
  prefix: 'fad',
  iconName: 'user-slash',
  icon: [640, 512, [], "f506", ["M192.47 117a128 128 0 1 1 170.32 131.66zM96 422.4V464a48 48 0 0 0 48 48h350.2L207.37 290.3C144.17 301.3 96 356 96 422.4z", "M636.67 480.4l-19.6 25.3a16.06 16.06 0 0 1-22.5 2.8L6.17 53.8a15.93 15.93 0 0 1-2.8-22.4L23 6.2a16.06 16.06 0 0 1 22.5-2.8l588.3 454.7a15.85 15.85 0 0 1 2.87 22.3z"]]
};
exports.faUserSlash = faUserSlash;
var faUserTag = {
  prefix: 'fad',
  iconName: 'user-tag',
  icon: [640, 512, [], "f507", ["M630.6 364.9l-90.3-90.2A64 64 0 0 0 495 256h-79.3a32 32 0 0 0-32 32v79.2a63.79 63.79 0 0 0 18.7 45.2l90.3 90.2a32 32 0 0 0 45.3 0l92.5-92.5a31.84 31.84 0 0 0 .1-45.2zm-182.8-21a24 24 0 1 1 24-24 23.94 23.94 0 0 1-24 24z", "M379.9 435a95.37 95.37 0 0 1-28.1-67.9V294c-12.2-3.6-24.9-6.2-38.2-6.2h-16.7a174.08 174.08 0 0 1-145.8 0h-16.7A134.58 134.58 0 0 0 0 422.3v41.6a48 48 0 0 0 48 48h352a47.78 47.78 0 0 0 37.9-18.9zM224 255.9A128 128 0 1 0 96 128a128 128 0 0 0 128 127.9z"]]
};
exports.faUserTag = faUserTag;
var faUserTie = {
  prefix: 'fad',
  iconName: 'user-tie',
  icon: [448, 512, [], "f508", ["M191.35 414.77L208 344l-32-56h96l-32 56 16.65 70.77L224 480zM224 256A128 128 0 1 0 96 128a128 128 0 0 0 128 128z", "M319.8 288.6L224 480l-95.8-191.4C56.9 292 0 350.3 0 422.4V464a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48v-41.6c0-72.1-56.9-130.4-128.2-133.8z"]]
};
exports.faUserTie = faUserTie;
var faUserTimes = {
  prefix: 'fad',
  iconName: 'user-times',
  icon: [640, 512, [], "f235", ["M635.2 194.4L589.6 240l45.6 45.6a16.11 16.11 0 0 1 0 22.8l-22.8 22.8a16.11 16.11 0 0 1-22.8 0L544 285.6l-45.6 45.6a16.11 16.11 0 0 1-22.8 0l-22.8-22.8a16.11 16.11 0 0 1 0-22.8l45.6-45.6-45.6-45.6a16.11 16.11 0 0 1 0-22.8l22.8-22.8a16.11 16.11 0 0 1 22.8 0l45.6 45.6 45.6-45.6a16.11 16.11 0 0 1 22.8 0l22.8 22.8a16.11 16.11 0 0 1 0 22.8z", "M313.6 288h-16.7a174.08 174.08 0 0 1-145.8 0h-16.7A134.43 134.43 0 0 0 0 422.4V464a48 48 0 0 0 48 48h352a48 48 0 0 0 48-48v-41.6A134.43 134.43 0 0 0 313.6 288zM224 256A128 128 0 1 0 96 128a128 128 0 0 0 128 128z"]]
};
exports.faUserTimes = faUserTimes;
var faUsers = {
  prefix: 'fad',
  iconName: 'users',
  icon: [640, 512, [], "f0c0", ["M96 224a64 64 0 1 0-64-64 64.06 64.06 0 0 0 64 64zm480 32h-64a63.81 63.81 0 0 0-45.1 18.6A146.27 146.27 0 0 1 542 384h66a32 32 0 0 0 32-32v-32a64.06 64.06 0 0 0-64-64zm-512 0a64.06 64.06 0 0 0-64 64v32a32 32 0 0 0 32 32h65.9a146.64 146.64 0 0 1 75.2-109.4A63.81 63.81 0 0 0 128 256zm480-32a64 64 0 1 0-64-64 64.06 64.06 0 0 0 64 64z", "M396.8 288h-8.3a157.53 157.53 0 0 1-68.5 16c-24.6 0-47.6-6-68.5-16h-8.3A115.23 115.23 0 0 0 128 403.2V432a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48v-28.8A115.23 115.23 0 0 0 396.8 288zM320 256a112 112 0 1 0-112-112 111.94 111.94 0 0 0 112 112z"]]
};
exports.faUsers = faUsers;
var faUsersClass = {
  prefix: 'fad',
  iconName: 'users-class',
  icon: [640, 512, [], "f63d", ["M608 217a95.26 95.26 0 0 0-64-25V64H96v128a95.28 95.28 0 0 0-64 25V49.59C32 22.25 53.53 0 80 0h480c26.47 0 48 22.25 48 49.59z", "M576 384h-64a64 64 0 0 0-64 64v32a32 32 0 0 0 32 32h128a32 32 0 0 0 32-32v-32a64 64 0 0 0-64-64zm-32-32a64 64 0 1 0-64-64 64 64 0 0 0 64 64zm-192 32h-64a64 64 0 0 0-64 64v32a32 32 0 0 0 32 32h128a32 32 0 0 0 32-32v-32a64 64 0 0 0-64-64zm-224 0H64a64 64 0 0 0-64 64v32a32 32 0 0 0 32 32h128a32 32 0 0 0 32-32v-32a64 64 0 0 0-64-64zm192-32a64 64 0 1 0-64-64 64 64 0 0 0 64 64zm-224 0a64 64 0 1 0-64-64 64 64 0 0 0 64 64z"]]
};
exports.faUsersClass = faUsersClass;
var faUsersCog = {
  prefix: 'fad',
  iconName: 'users-cog',
  icon: [640, 512, [], "f509", ["M636.3 356.1l-25.8-14.9a117.31 117.31 0 0 0 0-42.6l25.8-14.9a7.24 7.24 0 0 0 3.3-8.5 150.07 150.07 0 0 0-33.2-57.4 7.29 7.29 0 0 0-9-1.4l-25.8 14.9a117.4 117.4 0 0 0-36.9-21.3v-29.8a7.28 7.28 0 0 0-5.7-7.1 150.88 150.88 0 0 0-66.2 0 7.28 7.28 0 0 0-5.7 7.1V210a117.4 117.4 0 0 0-36.9 21.3l-25.8-14.9a7.31 7.31 0 0 0-9 1.4 150.07 150.07 0 0 0-33.2 57.4 7.37 7.37 0 0 0 3.3 8.5l25.8 14.9a117.31 117.31 0 0 0 0 42.6l-25.8 14.9a7.24 7.24 0 0 0-3.3 8.5 150.82 150.82 0 0 0 33.2 57.4 7.29 7.29 0 0 0 9 1.4l25.8-14.9a117.4 117.4 0 0 0 36.9 21.3v29.8a7.28 7.28 0 0 0 5.7 7.1 150.88 150.88 0 0 0 66.2 0 7.28 7.28 0 0 0 5.7-7.1v-29.8a117.4 117.4 0 0 0 36.9-21.3l25.8 14.9a7.31 7.31 0 0 0 9-1.4 150.07 150.07 0 0 0 33.2-57.4 7.37 7.37 0 0 0-3.3-8.5zM496 368.4a48.5 48.5 0 1 1 48.5-48.5 48.55 48.55 0 0 1-48.5 48.5z", "M320 255.9c1.9 0 3.7-.5 5.6-.6a184.35 184.35 0 0 1 36.3-59.2 39.41 39.41 0 0 1 28.9-12.6 38.44 38.44 0 0 1 19.6 5.3l7.9 4.6c.8-.5 1.6-.9 2.4-1.4a110.69 110.69 0 0 0 11.2-48A112 112 0 1 0 320 255.9zm-146.9 18.6a63.81 63.81 0 0 0-45.1-18.6H64a64.06 64.06 0 0 0-64 64v32a32 32 0 0 0 32 32h65.9a146.64 146.64 0 0 1 75.2-109.4zM96 223.9a64 64 0 1 0-64-64 64.06 64.06 0 0 0 64 64zm329.2 226.5c-2.3-1.2-4.6-2.6-6.8-3.9-8.2 4.8-15.3 9.8-27.5 9.8a39.75 39.75 0 0 1-28.9-12.6 182.34 182.34 0 0 1-40.2-69.6c-10.7-34.5 24.9-49.7 25.8-50.3q-.15-3.9 0-7.8l-7.9-4.6a40.73 40.73 0 0 1-9.8-8.1c-3.3.2-6.5.6-9.8.6-24.6 0-47.6-6-68.5-16h-8.3A115.25 115.25 0 0 0 128 403.1v28.8a48 48 0 0 0 48 48h255.4a38.5 38.5 0 0 1-6.2-20.3z"]]
};
exports.faUsersCog = faUsersCog;
var faUsersCrown = {
  prefix: 'fad',
  iconName: 'users-crown',
  icon: [640, 512, [], "f6a5", ["M96 224a64 64 0 1 0-64-64 64 64 0 0 0 64 64zm448 0a64 64 0 1 0-64-64 64 64 0 0 0 64 64zm32 32h-64a63.78 63.78 0 0 0-45.07 18.59A146.54 146.54 0 0 1 542.06 384H608a32 32 0 0 0 32-32v-32a64 64 0 0 0-64-64zm-512 0a64 64 0 0 0-64 64v32a32 32 0 0 0 32 32h65.94a146.54 146.54 0 0 1 75.13-109.41A63.78 63.78 0 0 0 128 256zM320 32l-48 24-48-24v80h192V32l-48 24z", "M320 256a96 96 0 0 0 96-96v-16H224v16a96 96 0 0 0 96 96zm76.8 32h-8.31c-20.84 10-43.89 16-68.49 16s-47.64-6-68.49-16h-8.31A115.2 115.2 0 0 0 128 403.2V432a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48v-28.8A115.2 115.2 0 0 0 396.8 288z"]]
};
exports.faUsersCrown = faUsersCrown;
var faUsersMedical = {
  prefix: 'fad',
  iconName: 'users-medical',
  icon: [640, 512, [], "f830", ["M512 224a128 128 0 1 0 128 128 128 128 0 0 0-128-128zm64 144a5.33 5.33 0 0 1-5.33 5.33h-37.34v37.34A5.33 5.33 0 0 1 528 416h-32a5.33 5.33 0 0 1-5.33-5.33v-37.34h-37.34A5.33 5.33 0 0 1 448 368v-32a5.33 5.33 0 0 1 5.33-5.33h37.34v-37.34A5.33 5.33 0 0 1 496 288h32a5.33 5.33 0 0 1 5.33 5.33v37.34h37.34A5.33 5.33 0 0 1 576 336z", "M352 352c0-19.1 3.92-37.17 10.09-54.17A152.59 152.59 0 0 1 320 304c-24.6 0-47.6-6-68.5-16h-8.3A115.23 115.23 0 0 0 128 403.2V432a48 48 0 0 0 48 48h241c-39.22-29.19-65-75.47-65-128zM96 224a64 64 0 1 0-64-64 64 64 0 0 0 64 64zm77.1 50.6A63.81 63.81 0 0 0 128 256H64a64.06 64.06 0 0 0-64 64v32a32 32 0 0 0 32 32h65.9a146.64 146.64 0 0 1 75.2-109.4zM319.88 256h.12a111.94 111.94 0 1 0-.12 0z"]]
};
exports.faUsersMedical = faUsersMedical;
var faUtensilFork = {
  prefix: 'fad',
  iconName: 'utensil-fork',
  icon: [512, 512, [], "f2e3", ["M279.36 301.8l-69.21-69.2c-20.9-45-13.1-97.3 28.69-139.1C266.46 66 350.63 6.3 355 3.2c18.8-13.71 52.89 19.9 37.5 39.3L279.36 155.7c-1.7 3.79 9.5 14.69 12.89 12.89C313.65 149.4 410 63.3 412.32 61.3c19.3-14.1 52.49 19.1 38.4 38.4-2 2.2-88.09 98.6-107.28 120.1-1.8 3.4 9.09 14.6 12.89 12.9l113.18-113.2c19.4-15.3 53 18.7 39.29 37.4-3.1 4.39-62.78 88.6-90.38 116.2-41.89 42-94.08 49.6-139.06 28.7z", "M98.84 503a27.24 27.24 0 0 1-38.47 2c-.34-.31-.68-.62-1-.95L8 452.75a27.18 27.18 0 0 1-.12-38.44c.36-.36.74-.72 1.12-1.06l201.11-180.69 69.21 69.2h.06z"]]
};
exports.faUtensilFork = faUtensilFork;
var faUtensilKnife = {
  prefix: 'fad',
  iconName: 'utensil-knife',
  icon: [512, 512, [], "f2e4", ["M180.89 252.82L425.47 8.7a29.54 29.54 0 0 1 41.72-.15l.15.15C539.27 80.49 502 359.8 258.61 330.1l-.14.16z", "M113 501.55A29.59 29.59 0 0 1 71.36 505c-.64-.53-1.24-1.09-1.82-1.67l-48.89-48.77a29.58 29.58 0 0 1 0-41.8l160.28-160 77.5 77.48z"]]
};
exports.faUtensilKnife = faUtensilKnife;
var faUtensilSpoon = {
  prefix: 'fad',
  iconName: 'utensil-spoon',
  icon: [512, 512, [], "f2e5", ["M446.15 269.48c-40.61 40.61-136.09 44.92-192.32-11.31S201.9 106.46 242.52 65.85C310.4-2 423.86-24.33 480.09 31.91S514 201.6 446.15 269.48z", "M293.78 285.89L98.8 503a27.26 27.26 0 0 1-38.5 2c-.34-.31-.67-.62-1-.95L8 452.78a27.18 27.18 0 0 1-.12-38.44c.36-.36.74-.72 1.12-1.06l217.14-195a136.7 136.7 0 0 0 67.66 67.65z"]]
};
exports.faUtensilSpoon = faUtensilSpoon;
var faUtensils = {
  prefix: 'fad',
  iconName: 'utensils',
  icon: [416, 512, [], "f2e7", ["M416 24v464a23.94 23.94 0 0 1-24 24h-56a24 24 0 0 1-23.9-26l15-185.1C170.6 178.5 309.5 0 392 0a24 24 0 0 1 24 24z", "M207.9 15.2c.8 4.7 16.1 94.5 16.1 128.8 0 52.3-27.8 89.6-68.9 104.6L168 486.7a24.06 24.06 0 0 1-24 25.3H80a24.06 24.06 0 0 1-24-25.3l12.9-238.1C27.7 233.6 0 196.2 0 144 0 109.6 15.3 19.9 16.1 15.2 19.3-5.1 61.4-5.4 64 16.3v141.2c1.3 3.4 15.1 3.2 16 0 1.4-25.3 7.9-139.2 8-141.8 3.3-20.8 44.7-20.8 47.9 0 .2 2.7 6.6 116.5 8 141.8.9 3.2 14.8 3.4 16 0V16.3c2.6-21.6 44.8-21.4 48-1.1z"]]
};
exports.faUtensils = faUtensils;
var faUtensilsAlt = {
  prefix: 'fad',
  iconName: 'utensils-alt',
  icon: [576, 512, [], "f2e6", ["M74.8 424a32 32 0 0 0-1.4 46.6l32 32a32 32 0 0 0 46.6-1.4l117.5-132.7-56.6-66.8zM546.5 94.82L452.7 176c-1.5 1.4-5.9-3-4.6-4.6l78.8-96.9c12.4-15.3-10.4-37.8-25.5-25.5l-96.9 78.8c-1.7 1.4-6-3.1-4.7-4.6L481 29.42c12.8-14.7-8.7-38-24.8-26.2-3.9 2.8-76.9 54.5-98.7 76.2-33.3 33.3-37.5 72.1-16.1 108.4-30.4 26.9-19.6 17.4-48.4 42.9l54 50.1c26.5-30 14.4-16.2 41-46.3 35 20.7 74.3 18.1 108.5-16.2 21.7-21.7 73.4-94.6 76.2-98.6 11.8-16.2-11.5-37.6-26.2-24.9z", "M501.7 424.42a32 32 0 0 1 .8 46.1l-32 32a32.09 32.09 0 0 1-46-.7C405.4 479.22 223.9 265.32 216 256 56 256 0 165.92 0 32.12c0-27.9 33.3-42.5 53.8-23.5z"]]
};
exports.faUtensilsAlt = faUtensilsAlt;
var faValueAbsolute = {
  prefix: 'fad',
  iconName: 'value-absolute',
  icon: [512, 512, [], "f6a6", ["M48 32H16A16 16 0 0 0 0 48v416a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zm448 0h-32a16 16 0 0 0-16 16v416a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z", "M377.3 183.22L304.52 256l72.78 72.78a22.88 22.88 0 0 1 0 32.35l-16.17 16.17a22.88 22.88 0 0 1-32.35 0L256 304.52l-72.78 72.78a22.88 22.88 0 0 1-32.35 0l-16.17-16.17a22.88 22.88 0 0 1 0-32.35L207.48 256l-72.78-72.78a22.88 22.88 0 0 1 0-32.35l16.17-16.17a22.88 22.88 0 0 1 32.35 0L256 207.48l72.78-72.78a22.88 22.88 0 0 1 32.35 0l16.17 16.17a22.88 22.88 0 0 1 0 32.35z"]]
};
exports.faValueAbsolute = faValueAbsolute;
var faVectorSquare = {
  prefix: 'fad',
  iconName: 'vector-square',
  icon: [512, 512, [], "f5cb", ["M160 480h192v-64H160zM32 352h64V160H32zM160 96h192V32H160zm256 64v192h64V160z", "M128 352H32a32 32 0 0 0-32 32v96a32 32 0 0 0 32 32h96a32 32 0 0 0 32-32v-96a32 32 0 0 0-32-32zm-32 96H64v-32h32zm384-96h-96a32 32 0 0 0-32 32v96a32 32 0 0 0 32 32h96a32 32 0 0 0 32-32v-96a32 32 0 0 0-32-32zm-32 96h-32v-32h32zM480 0h-96a32 32 0 0 0-32 32v96a32 32 0 0 0 32 32h96a32 32 0 0 0 32-32V32a32 32 0 0 0-32-32zm-32 96h-32V64h32zM128 0H32A32 32 0 0 0 0 32v96a32 32 0 0 0 32 32h96a32 32 0 0 0 32-32V32a32 32 0 0 0-32-32zM96 96H64V64h32z"]]
};
exports.faVectorSquare = faVectorSquare;
var faVenus = {
  prefix: 'fad',
  iconName: 'venus',
  icon: [288, 512, [], "f221", ["M144,256a80,80,0,1,1,80-80A80,80,0,0,1,144,256Z", "M288,176A144,144,0,1,0,112,316.4V368H76a12,12,0,0,0-12,12v40a12,12,0,0,0,12,12h36v36a12,12,0,0,0,12,12h40a12,12,0,0,0,12-12V432h36a12,12,0,0,0,12-12V380a12,12,0,0,0-12-12H176V316.4A144,144,0,0,0,288,176ZM144,256a80,80,0,1,1,80-80A80,80,0,0,1,144,256Z"]]
};
exports.faVenus = faVenus;
var faVenusDouble = {
  prefix: 'fad',
  iconName: 'venus-double',
  icon: [512, 512, [], "f226", ["M512 176a144 144 0 0 1-112 140.4V368h36a12 12 0 0 1 12 12v40a12 12 0 0 1-12 12h-36v36a12 12 0 0 1-12 12h-40a12 12 0 0 1-12-12v-36h-36a12 12 0 0 1-12-12v-40a12 12 0 0 1 12-12h36v-51.6a144.48 144.48 0 0 1-57.2-27.3 176.57 176.57 0 0 0 32.1-57.1 80 80 0 1 0 0-112 174.74 174.74 0 0 0-32.1-57.1A144.05 144.05 0 0 1 512 176z", "M288 176a144 144 0 1 0-176 140.4V368H76a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h36v36a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-36h36a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12h-36v-51.6A144 144 0 0 0 288 176zm-144 80a80 80 0 1 1 80-80 80.11 80.11 0 0 1-80 80z"]]
};
exports.faVenusDouble = faVenusDouble;
var faVenusMars = {
  prefix: 'fad',
  iconName: 'venus-mars',
  icon: [576, 512, [], "f228", ["M576 12v79a12 12 0 0 1-12.1 12 11.73 11.73 0 0 1-8.4-3.5l-16.9-16.9-48.7 48.7a144 144 0 0 1-211.1 189.8 174.74 174.74 0 0 0 32.1-57.1 80 80 0 1 0 0-112 176.57 176.57 0 0 0-32.1-57.1 144.17 144.17 0 0 1 165.9-8.8l48.7-48.7-16.9-16.9A12 12 0 0 1 485 0h79a12 12 0 0 1 12 12z", "M288 208a144 144 0 1 0-176 140.4V400H76a12 12 0 0 0-12 12v40a12 12 0 0 0 12 12h36v36a12 12 0 0 0 12 12h40a12 12 0 0 0 12-12v-36h36a12 12 0 0 0 12-12v-40a12 12 0 0 0-12-12h-36v-51.6A144.12 144.12 0 0 0 288 208zm-144 80a80 80 0 1 1 80-80 80.11 80.11 0 0 1-80 80z"]]
};
exports.faVenusMars = faVenusMars;
var faVhs = {
  prefix: 'fad',
  iconName: 'vhs',
  icon: [512, 512, [], "f8ec", ["M0 160v240a48 48 0 0 0 48 48h416a48 48 0 0 0 48-48V160zm128 224H79.14C60 362.74 48 334.88 48 304s12-58.73 31.14-80H128zm192 0H192V224h128zm112.86 0H384V224h48.86C452 245.26 464 273.12 464 304s-12 58.73-31.14 80z", "M496 64H16A16 16 0 0 0 0 80v80h512V80a16 16 0 0 0-16-16zM384 224v34.94a47.73 47.73 0 0 1 0 90.12V384h48.86C452 362.73 464 334.87 464 304s-12-58.74-31.14-80zM48 304c0 30.88 12 58.74 31.14 80H128v-34.94a47.73 47.73 0 0 1 0-90.12V224H79.14C60 245.27 48 273.13 48 304z"]]
};
exports.faVhs = faVhs;
var faVial = {
  prefix: 'fad',
  iconName: 'vial',
  icon: [480, 512, [], "f492", ["M318 256L138.61 435.44a55.46 55.46 0 0 1-78.39.06 55.46 55.46 0 0 1-.09-78.44L161 256z", "M477.65 186.12L309.45 18.33a8 8 0 0 0-11.3 0l-34 33.9a8 8 0 0 0 0 11.29l11.2 11.1L33 316.53c-38.8 38.69-45.1 102-9.4 143.5a102.44 102.44 0 0 0 78 35.9h.4a102.75 102.75 0 0 0 72.9-30.09l246.3-245.71 11.2 11.1a8 8 0 0 0 11.3 0l34-33.89a7.92 7.92 0 0 0-.05-11.22zM141 431.84a54.65 54.65 0 0 1-38.95 16h-.36A54.09 54.09 0 0 1 60 428.76c-8.67-10.08-12.85-23.53-11.76-37.86a64.77 64.77 0 0 1 18.61-40.4l242.4-241.9 78 77.54z"]]
};
exports.faVial = faVial;
var faVials = {
  prefix: 'fad',
  iconName: 'vials',
  icon: [640, 512, [], "f493", ["M128 304a48 48 0 0 0 96 0V160h-96zm288-144v144a48 48 0 0 0 96 0V160z", "M360 64h24v240a80 80 0 0 0 160 0V64h24a8 8 0 0 0 8-8V8a8 8 0 0 0-8-8H360a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8zm72 0h64v240a32 32 0 0 1-64 0zm192 384H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h608a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM72 64h24v240a80 80 0 0 0 160 0V64h24a8 8 0 0 0 8-8V8a8 8 0 0 0-8-8H72a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8zm72 0h64v240a32 32 0 0 1-64 0z"]]
};
exports.faVials = faVials;
var faVideo = {
  prefix: 'fad',
  iconName: 'video',
  icon: [576, 512, [], "f03d", ["M525.6 410.2L416 334.7V177.3l109.6-75.6c21.3-14.6 50.4.4 50.4 25.8v256.9c0 25.5-29.2 40.4-50.4 25.8z", "M0 400.2V111.8A47.8 47.8 0 0 1 47.8 64h288.4a47.8 47.8 0 0 1 47.8 47.8v288.4a47.8 47.8 0 0 1-47.8 47.8H47.8A47.8 47.8 0 0 1 0 400.2z"]]
};
exports.faVideo = faVideo;
var faVideoPlus = {
  prefix: 'fad',
  iconName: 'video-plus',
  icon: [576, 512, [], "f4e1", ["M525.6 101.8L416 177.3v157.4l109.6 75.5c21.3 14.6 50.4-.3 50.4-25.8V127.5c0-25.4-29.1-40.4-50.4-25.7zM288 232h-72v-72a16 16 0 0 0-16-16h-16a16 16 0 0 0-16 16v72H96a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h72v72a16 16 0 0 0 16 16h16a16 16 0 0 0 16-16v-72h72a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16z", "M336.2 64H47.8A47.8 47.8 0 0 0 0 111.8v288.4A47.8 47.8 0 0 0 47.8 448h288.4a47.8 47.8 0 0 0 47.8-47.8V111.8A47.8 47.8 0 0 0 336.2 64zM304 264a16 16 0 0 1-16 16h-72v72a16 16 0 0 1-16 16h-16a16 16 0 0 1-16-16v-72H96a16 16 0 0 1-16-16v-16a16 16 0 0 1 16-16h72v-72a16 16 0 0 1 16-16h16a16 16 0 0 1 16 16v72h72a16 16 0 0 1 16 16z"]]
};
exports.faVideoPlus = faVideoPlus;
var faVideoSlash = {
  prefix: 'fad',
  iconName: 'video-slash',
  icon: [640, 512, [], "f4e2", ["M448 314.49V177.3l109.6-75.6c21.3-14.6 50.4.4 50.4 25.8v256.9c0 17.39-13.59 29.84-29 31.38zm-32-24.74V111.8A47.8 47.8 0 0 0 368.2 64H123.91zM32 400.17A47.8 47.8 0 0 0 79.77 448h288.4a47.45 47.45 0 0 0 29.6-10.5L32 154.67z", "M3.37 31.37L23 6.17a16.06 16.06 0 0 1 22.5-2.8l588.3 454.7a15.85 15.85 0 0 1 2.8 22.4l-19.6 25.3a16.06 16.06 0 0 1-22.5 2.8L6.17 53.77a15.93 15.93 0 0 1-2.8-22.4z"]]
};
exports.faVideoSlash = faVideoSlash;
var faVihara = {
  prefix: 'fad',
  iconName: 'vihara',
  icon: [640, 512, [], "f6a7", ["M160 192h64v-64h-64zM96 352h64v-64H96zM64 496a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-48H64zm480-208h-64v64h64zm-32 160v48a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-48zm-224 48a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16v-48h-64zm192-368h-64v64h64z", "M160 128h320l27.31-16.3a16 16 0 0 0-4.16-25.62L320 0 136.85 86.07a16 16 0 0 0-4.16 25.62zm472.88 272.71L544 352H96L7.12 400.71a16 16 0 0 0 1.72 27.62L64 448h512l55.15-19.67a16 16 0 0 0 1.73-27.62zm-592-130.4L96 288h448l55.16-17.69a16 16 0 0 0 0-28.62L480 192H160L40.84 241.69a16 16 0 0 0 0 28.62z"]]
};
exports.faVihara = faVihara;
var faViolin = {
  prefix: 'fad',
  iconName: 'violin',
  icon: [640, 512, [], "f8ed", ["M457.77 227.48l-39.83 39.83a16 16 0 0 1-22.63 0l-22.62-22.62a16 16 0 0 1 0-22.63l39.83-39.83c-12.17-8.77-25.53-15.76-40.15-19.16-32.87-7.65-65.69-.93-88.56 21.05A79.09 79.09 0 0 1 288 208.4a79.78 79.78 0 0 1-123.28 67.08 89.85 89.85 0 0 0-7.16 6c-38.07 38-38.17 101.14-5.1 153.3L204 400.39a16 16 0 0 1 20.19 2l13.45 13.45a16 16 0 0 1 2 20.19l-34.35 51.53c52.16 33 115.31 32.85 153.26-5.12a89.77 89.77 0 0 0 6.23-7.48A79.27 79.27 0 0 1 455.87 356c21.92-22.84 28.6-55.6 21-88.4-3.36-14.6-10.34-27.95-19.1-40.12zM472 48a24 24 0 1 0 24 24 24 24 0 0 0-24-24zm96 96a24 24 0 1 0 24 24 24 24 0 0 0-24-24zM520 0a24 24 0 1 0 24 24 24 24 0 0 0-24-24zm96 96a24 24 0 1 0 24 24 24 24 0 0 0-24-24z", "M224.16 402.39a16 16 0 0 0-20.19-2l-68.84 45.9a16 16 0 0 0-2.44 24.62l36.4 36.4a16 16 0 0 0 24.62-2.44l45.9-68.87a16 16 0 0 0-2-20.19zM336 4.69a16 16 0 0 0-22.62 0L4.69 313.38a16 16 0 0 0 0 22.62L16 347.31a16 16 0 0 0 22.62 0L347.31 38.62a16 16 0 0 0 0-22.62zm299.31 22.62L612.69 4.69a16 16 0 0 0-22.63 0L372.69 222.06a16 16 0 0 0 0 22.63l22.62 22.62a16 16 0 0 0 22.63 0L635.31 49.94a16 16 0 0 0 0-22.63z"]]
};
exports.faViolin = faViolin;
var faVoicemail = {
  prefix: 'fad',
  iconName: 'voicemail',
  icon: [640, 512, [], "f897", ["M496 224a48 48 0 1 0 48 48 48.05 48.05 0 0 0-48-48zm-352 0a48 48 0 1 0 48 48 48.05 48.05 0 0 0-48-48z", "M496 128a144 144 0 0 0-119.74 224H263.74A144 144 0 1 0 144 416h352a144 144 0 0 0 0-288zM64 272a80 80 0 1 1 80 80 80 80 0 0 1-80-80zm432 80a80 80 0 1 1 80-80 80 80 0 0 1-80 80z"]]
};
exports.faVoicemail = faVoicemail;
var faVolcano = {
  prefix: 'fad',
  iconName: 'volcano',
  icon: [512, 512, [], "f770", ["M304.4 224h-96.8a32 32 0 0 0-25.2 12.31l-55.6 71L140 323.8c9.8 12.2 30.3 12.2 40.1 0a57.37 57.37 0 0 1 44.1-21.6c17.2-1.5 33.6 7 44.8 20.1l31.6 36.8c9.8 11.4 29.2 11.4 39 0l45.1-52.6-55-70.2a32.2 32.2 0 0 0-25.3-12.3zM352 16a63.3 63.3 0 0 0-41.18 15.43 63.57 63.57 0 0 0-109.62 0A63.38 63.38 0 0 0 160 16a64 64 0 1 0 34.8 117.6L224 192h64l29.2-58.4A64 64 0 1 0 352 16z", "M480 512H32.1c-26.4 0-41.5-30.1-25.6-51.2L127 307l-.24.31L140 323.8c9.8 12.2 30.3 12.2 40.1 0a57.37 57.37 0 0 1 44.1-21.6c17.2-1.5 33.6 7 44.8 20.1l31.6 36.8c9.8 11.4 29.2 11.4 39 0l45.1-52.6 120.8 154.3c15.9 21.13.8 51.2-25.5 51.2z"]]
};
exports.faVolcano = faVolcano;
var faVolleyballBall = {
  prefix: 'fad',
  iconName: 'volleyball-ball',
  icon: [512, 512, [], "f45f", ["M454.23 404.17a248.06 248.06 0 0 1-39.17 41.39c-112.46 15.75-202.52-25-256-62.22-15.15 25.91-25.63 54.21-32 83.91a248.89 248.89 0 0 1-41.65-32 333.88 333.88 0 0 1 146-191.83 285.58 285.58 0 0 0-22.7-105.7c-90.55 42.28-157.12 122-180.11 216a246.06 246.06 0 0 1-16.2-53.91C45.86 217.05 110.73 148.43 194.49 109a284.15 284.15 0 0 0-57.05-70.38A246.11 246.11 0 0 1 186 18.53 333.88 333.88 0 0 1 279.19 241a285 285 0 0 0 102.9 33.18c8.58-99.59-27.15-197.09-97.06-264a246.08 246.08 0 0 1 54.5 12.77C394.73 93.3 421.88 184 414 276.34a286.48 286.48 0 0 0 89.43-14.12 247.86 247.86 0 0 1-6.83 52 336.11 336.11 0 0 1-80.6 10.32c-54.6-.1-108.9-14.1-158.6-40.9a286.16 286.16 0 0 0-80.2 72.6c81.86 57.21 184.15 75.04 277.03 47.93z", "M194.49 109a284.15 284.15 0 0 0-57.05-70.38A247.9 247.9 0 0 0 12.38 299.84C45.86 217.05 110.73 148.43 194.49 109zm36.9 134.4a285.58 285.58 0 0 0-22.7-105.7c-90.55 42.28-157.12 122-180.11 216a248.18 248.18 0 0 0 56.82 81.57 333.88 333.88 0 0 1 145.99-191.83zm150.7 30.7c8.58-99.59-27.15-197.08-97-264a250.78 250.78 0 0 0-29-1.71 247.15 247.15 0 0 0-70 10.08A333.87 333.87 0 0 1 279.19 241a285 285 0 0 0 102.9 33.14zM339.53 22.93C394.73 93.3 421.88 184 414 276.34a286.48 286.48 0 0 0 89.43-14.12q.07-3.12.08-6.26c-.01-107.38-68.39-198.77-163.98-233.03zM159.09 383.34c-15.15 25.91-25.63 54.21-32 83.9a247.51 247.51 0 0 0 288-21.68c-112.49 15.75-202.55-25.02-256-62.22zm98.3-99.7a286.16 286.16 0 0 0-80.2 72.6c81.87 57.21 184.16 75 277 47.93a246.5 246.5 0 0 0 42.36-90A336.11 336.11 0 0 1 416 324.54c-54.61-.1-108.91-14.1-158.61-40.9z"]]
};
exports.faVolleyballBall = faVolleyballBall;
var faVolume = {
  prefix: 'fad',
  iconName: 'volume',
  icon: [480, 512, [], "f6a8", ["M256 88v336c0 21.44-25.94 32-41 17l-89-88.95H24A24 24 0 0 1 0 328V184a24 24 0 0 1 24-24h102.06l89-88.95C230 56 256 66.56 256 88z", "M338.23 179.13a24 24 0 1 0-23.16 42.06 39.42 39.42 0 0 1 0 69.62 24 24 0 1 0 23.16 42.06 87.43 87.43 0 0 0 0-153.74zm56-79.37a23.9 23.9 0 0 0-33.12 7.46 24.29 24.29 0 0 0 7.41 33.36 136.67 136.67 0 0 1 0 230.84 24.28 24.28 0 0 0-7.41 33.36 23.94 23.94 0 0 0 33.12 7.46 185.19 185.19 0 0 0 0-312.48z"]]
};
exports.faVolume = faVolume;
var faVolumeDown = {
  prefix: 'fad',
  iconName: 'volume-down',
  icon: [384, 512, [], "f027", ["M0 328V184a24 24 0 0 1 24-24h102.06l89-89c15-15 41-4.49 41 17v336c0 21.44-25.94 32-41 17l-89-88.95H24A24 24 0 0 1 0 328z", "M305.62 188.57a24.08 24.08 0 0 1 32.61-9.45 87.44 87.44 0 0 1 0 153.75 24 24 0 1 1-23.16-42.06 39.43 39.43 0 0 0 0-69.63 24 24 0 0 1-9.45-32.61z"]]
};
exports.faVolumeDown = faVolumeDown;
var faVolumeMute = {
  prefix: 'fad',
  iconName: 'volume-mute',
  icon: [512, 512, [], "f6a9", ["M0 328V184a24 24 0 0 1 24-24h102.06l89-88.95c15-15 41-4.49 41 17V424c0 21.44-25.94 32-41 17l-89-88.95H24A24 24 0 0 1 0 328z", "M324.72 210.36a16.14 16.14 0 0 1 0-22.82l22.82-22.82a16.14 16.14 0 0 1 22.82 0L416 210.36l45.64-45.64a16.14 16.14 0 0 1 22.82 0l22.82 22.82a16.14 16.14 0 0 1 0 22.82L461.64 256l45.64 45.64a16.14 16.14 0 0 1 0 22.82l-22.82 22.82a16.14 16.14 0 0 1-22.82 0L416 301.64l-45.63 45.63a16.14 16.14 0 0 1-22.82 0l-22.82-22.82a16.14 16.14 0 0 1 0-22.82L370.36 256z"]]
};
exports.faVolumeMute = faVolumeMute;
var faVolumeOff = {
  prefix: 'fad',
  iconName: 'volume-off',
  icon: [256, 512, [], "f026", ["M0 328V184a24 24 0 0 1 24-24h102.06l89-89c15-15 41-4.49 41 17v336c0 21.44-25.94 32-41 17l-89-88.95H24A24 24 0 0 1 0 328z", ""]]
};
exports.faVolumeOff = faVolumeOff;
var faVolumeSlash = {
  prefix: 'fad',
  iconName: 'volume-slash',
  icon: [640, 512, [], "f2e2", ["M393.11 107.22a23.9 23.9 0 0 1 33.12-7.46A185.33 185.33 0 0 1 488.74 346l-38.65-29.9a136.7 136.7 0 0 0-49.57-175.52 24.29 24.29 0 0 1-7.41-33.36zm60.68-46.79a233.7 233.7 0 0 1 73 315l38.52 29.78A282.1 282.1 0 0 0 480.35 20a24.2 24.2 0 1 0-26.56 40.46zM347.07 221.19a40 40 0 0 1 20.75 31.32l42.92 33.18A86.79 86.79 0 0 0 416 256a87.89 87.89 0 0 0-45.78-76.86 24 24 0 1 0-23.16 42.06zM288 190.82V88c0-21.46-26-32-41-17l-49.7 49.69zM32 184v144a24 24 0 0 0 24 24h102.06L247 441c15 15 41 4.47 41-17v-71.4L43.76 163.84C36.86 168.05 32 175.32 32 184z", "M594.54 508.63L6.18 53.9a16 16 0 0 1-2.81-22.45L23 6.18a16 16 0 0 1 22.47-2.81L633.82 458.1a16 16 0 0 1 2.82 22.45L617 505.82a16 16 0 0 1-22.46 2.81z"]]
};
exports.faVolumeSlash = faVolumeSlash;
var faVolumeUp = {
  prefix: 'fad',
  iconName: 'volume-up',
  icon: [576, 512, [], "f028", ["M0 328V184a24 24 0 0 1 24-24h102.06l89-88.95c15-15 41-4.49 41 17V424c0 21.44-25.94 32-41 17l-89-88.95H24A24 24 0 0 1 0 328z", "M338.23 179.13a24 24 0 1 0-23.16 42.06 39.42 39.42 0 0 1 0 69.62 24 24 0 1 0 23.16 42.06 87.43 87.43 0 0 0 0-153.74zM480 256a184.64 184.64 0 0 0-85.77-156.24 23.9 23.9 0 0 0-33.12 7.46 24.29 24.29 0 0 0 7.41 33.36 136.67 136.67 0 0 1 0 230.84 24.28 24.28 0 0 0-7.41 33.36 23.94 23.94 0 0 0 33.12 7.46A184.62 184.62 0 0 0 480 256zM448.35 20a24.2 24.2 0 1 0-26.56 40.46 233.65 233.65 0 0 1 0 391.16A24.2 24.2 0 1 0 448.35 492a282 282 0 0 0 0-472.07z"]]
};
exports.faVolumeUp = faVolumeUp;
var faVoteNay = {
  prefix: 'fad',
  iconName: 'vote-nay',
  icon: [640, 512, [], "f771", ["M512 64.3A32.29 32.29 0 0 0 479.7 32H160.4A32.37 32.37 0 0 0 128 64.3V384h384zM404.8 281.5l-11.3 11.3a16.06 16.06 0 0 1-22.6 0L320 241.9l-50.9 50.9a16.06 16.06 0 0 1-22.6 0l-11.3-11.3a16.06 16.06 0 0 1 0-22.6l50.9-50.9-51-50.9a16.06 16.06 0 0 1 0-22.6l11.3-11.3a16.06 16.06 0 0 1 22.6 0l50.9 50.9 50.9-50.9a16.06 16.06 0 0 1 22.6 0l11.3 11.3a16.06 16.06 0 0 1 0 22.6L353.9 208l50.9 50.9a16.06 16.06 0 0 1 0 22.6z", "M286.1 208l-50.9 50.9a16.06 16.06 0 0 0 0 22.6l11.3 11.3a16.06 16.06 0 0 0 22.6 0l50.9-50.9 50.9 50.9a16.06 16.06 0 0 0 22.6 0l11.3-11.3a16.06 16.06 0 0 0 0-22.6L353.9 208l50.8-50.9a16.06 16.06 0 0 0 0-22.6l-11.3-11.3a16.06 16.06 0 0 0-22.6 0l-50.9 50.9-50.9-50.9a16.06 16.06 0 0 0-22.6 0l-11.3 11.3a16.06 16.06 0 0 0 0 22.6zM608 320h-64v64h22.4c5.3 0 9.6 3.6 9.6 8v16c0 4.4-4.3 8-9.6 8H73.6c-5.3 0-9.6-3.6-9.6-8v-16c0-4.4 4.3-8 9.6-8H96v-64H32a32 32 0 0 0-32 32v96a32 32 0 0 0 32 32h576a32 32 0 0 0 32-32v-96a32 32 0 0 0-32-32z"]]
};
exports.faVoteNay = faVoteNay;
var faVoteYea = {
  prefix: 'fad',
  iconName: 'vote-yea',
  icon: [640, 512, [], "f772", ["M512 64.3A32.29 32.29 0 0 0 479.7 32H160.4A32.37 32.37 0 0 0 128 64.3V384h384zm-83.2 100.5L300.5 292a10.65 10.65 0 0 1-15.2-.1l-74.1-74.7a10.65 10.65 0 0 1 0-15.2l25.5-25.3a10.65 10.65 0 0 1 15.2.1l41.3 41.6 95.2-94.4a10.65 10.65 0 0 1 15.2.1l25.3 25.5a10.65 10.65 0 0 1-.1 15.2z", "M285.3 291.9a10.65 10.65 0 0 0 15.2.1l128.3-127.2a10.65 10.65 0 0 0 .1-15.2l-25.3-25.5a10.65 10.65 0 0 0-15.2-.1l-95.2 94.4-41.3-41.6a10.65 10.65 0 0 0-15.2-.1L211.2 202a10.65 10.65 0 0 0 0 15.2zM608 320h-64v64h22.4c5.3 0 9.6 3.6 9.6 8v16c0 4.4-4.3 8-9.6 8H73.6c-5.3 0-9.6-3.6-9.6-8v-16c0-4.4 4.3-8 9.6-8H96v-64H32a32 32 0 0 0-32 32v96a32 32 0 0 0 32 32h576a32 32 0 0 0 32-32v-96a32 32 0 0 0-32-32z"]]
};
exports.faVoteYea = faVoteYea;
var faVrCardboard = {
  prefix: 'fad',
  iconName: 'vr-cardboard',
  icon: [640, 512, [], "f729", ["M608 64H32A32 32 0 0 0 0 96v320a32 32 0 0 0 32 32h160.22a64 64 0 0 0 58.36-37.74l27.74-61.64c7.89-17.54 24-28.62 41.68-28.62s33.79 11.08 41.68 28.62l27.74 61.64A64 64 0 0 0 447.78 448H608a32 32 0 0 0 32-32V96a32 32 0 0 0-32-32zM160 304a64 64 0 1 1 64-64 64 64 0 0 1-64 64zm320 0a64 64 0 1 1 64-64 64 64 0 0 1-64 64z", "M160 176a64 64 0 1 0 64 64 64 64 0 0 0-64-64zm320 0a64 64 0 1 0 64 64 64 64 0 0 0-64-64z"]]
};
exports.faVrCardboard = faVrCardboard;
var faWagonCovered = {
  prefix: 'fad',
  iconName: 'wagon-covered',
  icon: [640, 512, [], "f8ee", ["M224,224V64c0-36.88-25.33-39.27-59.43-44.49L39.55.39c-26-4-46.53,23.34-37.3,49.69L70.78,224ZM384,56a40,40,0,0,0-40-40H296a40,40,0,0,0-40,40V224H384ZM600.45.39l-125,19.12C441.33,24.73,416,27.12,416,64V224H569.22L637.75,50.08C647,23.73,626.48-3.59,600.45.39ZM176,288a112,112,0,1,0,79.2,32.8A111.7,111.7,0,0,0,176,288ZM160,461.74A62.48,62.48,0,0,1,114.26,416H160ZM160,384H114.26A62.44,62.44,0,0,1,160,338.26Zm61.25,61.25A63.43,63.43,0,0,1,192,461.74V416h45.74A63.43,63.43,0,0,1,221.25,445.25ZM192,384V338.26A62.44,62.44,0,0,1,237.74,384Zm272-96a112,112,0,1,0,79.2,32.8A111.7,111.7,0,0,0,464,288ZM448,461.74A62.48,62.48,0,0,1,402.26,416H448ZM448,384H402.26A62.44,62.44,0,0,1,448,338.26Zm61.25,61.25A63.43,63.43,0,0,1,480,461.74V416h45.74A63.34,63.34,0,0,1,509.25,445.25ZM480,384V338.26A62.44,62.44,0,0,1,525.74,384Z", "M560,256H80a16,16,0,0,0-16,16v32a16,16,0,0,0,16,16H97.79a111.8,111.8,0,0,1,157.41.8c25.95,26,36.12,61.46,31.27,95.2h67.06c-4.85-33.74,5.32-69.24,31.27-95.2a111.8,111.8,0,0,1,157.41-.8H560a16,16,0,0,0,16-16V272A16,16,0,0,0,560,256ZM416,40a8,8,0,0,0-8-8H392a8,8,0,0,0-8,8V224h32ZM256,40a8,8,0,0,0-8-8H232a8,8,0,0,0-8,8V224h32Z"]]
};
exports.faWagonCovered = faWagonCovered;
var faWalker = {
  prefix: 'fad',
  iconName: 'walker',
  icon: [448, 512, [], "f831", ["M448 448a64 64 0 1 1-64-64 64 64 0 0 1 64 64z", "M352 357.47a96.34 96.34 0 0 1 64 0V96a96 96 0 0 0-96-96H190.66A95.62 95.62 0 0 0 96 80L.24 487.77a16 16 0 0 0 13 18.51l31.54 5.48a16 16 0 0 0 18.5-13L127.81 224H352zM142.83 160l16.26-69.25A31.91 31.91 0 0 1 190.66 64H320a32 32 0 0 1 32 32v64z"]]
};
exports.faWalker = faWalker;
var faWalkieTalkie = {
  prefix: 'fad',
  iconName: 'walkie-talkie',
  icon: [384, 512, [], "f8ef", ["M352 96h-32V80a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v16h-32V80a16 16 0 0 0-16-16h-32a16 16 0 0 0-16 16v16H32a32.09 32.09 0 0 0-32 32v178.74a32 32 0 0 0 9.38 22.63L32 352v112a48 48 0 0 0 48 48h224a48 48 0 0 0 48-48V352l22.63-22.63a32 32 0 0 0 9.37-22.63V128a32.09 32.09 0 0 0-32-32zm-64 216a8 8 0 0 1-8 8H104a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h176a8 8 0 0 1 8 8zm0-64a8 8 0 0 1-8 8H104a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h176a8 8 0 0 1 8 8zm0-64a8 8 0 0 1-8 8H104a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h176a8 8 0 0 1 8 8z", "M112 16A16 16 0 0 0 96 0H80a16 16 0 0 0-16 16v80h48zm168 272H104a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h176a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8zm0-64H104a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h176a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8zm0-64H104a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h176a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8z"]]
};
exports.faWalkieTalkie = faWalkieTalkie;
var faWalking = {
  prefix: 'fad',
  iconName: 'walking',
  icon: [320, 512, [], "f554", ["M208 0a48 48 0 1 1-48 48 48 48 0 0 1 48-48z", "M73.58 385.8a62.05 62.05 0 0 1-14.2 21.5l-50 50.1a32 32 0 0 0 45.2 45.3L114 443.3a64.82 64.82 0 0 0 14.19-21.5l13.5-33.8c-55.29-60.3-38.69-41.8-47.4-53.7zm228.9-140.7l-23.31-11.8-9.69-29.4c-14.71-44.6-55.71-75.8-102.21-75.9-36-.1-55.89 10.1-93.29 25.2a95.41 95.41 0 0 0-49.71 46.2L17.58 213a32.1 32.1 0 0 0 14.19 42.9 31.56 31.56 0 0 0 42.5-14.3L81 228a31.75 31.75 0 0 1 16.5-15.4l26.79-10.8-15.19 60.7a64.22 64.22 0 0 0 14.9 58.8l59.9 65.4a64.52 64.52 0 0 1 14.89 27.7l18.31 73.3a32 32 0 1 0 62.09-15.5l-22.19-89a64.07 64.07 0 0 0-14.9-27.7l-45.5-49.7 17.19-68.7 5.5 16.5a63.83 63.83 0 0 0 31.71 37l23.29 11.8a31.56 31.56 0 0 0 42.5-14.3 32.37 32.37 0 0 0-14.31-43z"]]
};
exports.faWalking = faWalking;
var faWallet = {
  prefix: 'fad',
  iconName: 'wallet',
  icon: [512, 512, [], "f555", ["M416 272a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm16-240H64A64 64 0 0 0 0 96a32 32 0 0 0 32 32h48a16 16 0 0 1 0-32h384a16 16 0 0 0 16-16 48 48 0 0 0-48-48z", "M461.2 128H32A32 32 0 0 1 0 96v320a64 64 0 0 0 64 64h397.2c28 0 50.8-21.53 50.8-48V176c0-26.47-22.78-48-50.8-48zM416 336a32 32 0 1 1 32-32 32 32 0 0 1-32 32z"]]
};
exports.faWallet = faWallet;
var faWand = {
  prefix: 'fad',
  iconName: 'wand',
  icon: [512, 512, [], "f72a", ["M128 272v36.87L186.6 256H144a16 16 0 0 0-16 16zm248.35-80H400a16 16 0 0 0 16-16v-28z", "M507.87 46.18L97.16 501.44A32 32 0 0 1 52 503.71q-.6-.54-1.17-1.11L9.37 461.17a32 32 0 0 1 0-45.25c.38-.38.77-.75 1.16-1.11L465.79 4.11a16 16 0 0 1 22 .55l19.48 19.47a16 16 0 0 1 .6 22.05z"]]
};
exports.faWand = faWand;
var faWandMagic = {
  prefix: 'fad',
  iconName: 'wand-magic',
  icon: [512, 512, [], "f72b", ["M416 176v-28l-39.65 44H400a16 16 0 0 0 16-16zm-288 96v36.87L186.6 256H144a16 16 0 0 0-16 16zM106.66 53.33L80 0 53.34 53.34 0 80l53.34 26.67L80 160l26.66-53.33L160 80zm352 288L432 288l-26.66 53.33L352 368l53.34 26.67L432 448l26.66-53.33L512 368zM224 0l-16 32-32 16 32 16 16 32 16-32 32-16-32-16z", "M507.87 46.18L97.16 501.44A32 32 0 0 1 52 503.71q-.6-.54-1.17-1.11L9.37 461.17a32 32 0 0 1 0-45.25c.38-.38.77-.75 1.16-1.11L465.79 4.11a16 16 0 0 1 22 .55l19.48 19.47a16 16 0 0 1 .6 22.05z"]]
};
exports.faWandMagic = faWandMagic;
var faWarehouse = {
  prefix: 'fad',
  iconName: 'warehouse',
  icon: [640, 512, [], "f494", ["M504 448H136.1a8 8 0 0 0-8 8l-.1 48a8 8 0 0 0 8 8h368a8 8 0 0 0 8-8v-48a8 8 0 0 0-8-8zm0-192H136.6a8 8 0 0 0-8 8l-.1 48a8 8 0 0 0 8 8H504a8 8 0 0 0 8-8v-48a8 8 0 0 0-8-8zm0 96H136.4a8 8 0 0 0-8 8l-.1 48a8 8 0 0 0 8 8H504a8 8 0 0 0 8-8v-48a8 8 0 0 0-8-8z", "M640 161.28V504a8 8 0 0 1-8 8h-80a8 8 0 0 1-8-8V256c0-17.6-14.6-32-32.6-32H128.6c-18 0-32.6 14.4-32.6 32v248a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8V161.28A48.11 48.11 0 0 1 29.5 117l272-113.3a48.06 48.06 0 0 1 36.9 0L610.5 117a48.11 48.11 0 0 1 29.5 44.28z"]]
};
exports.faWarehouse = faWarehouse;
var faWarehouseAlt = {
  prefix: 'fad',
  iconName: 'warehouse-alt',
  icon: [640, 512, [], "f495", ["M304 416H144a16 16 0 0 0-16 16v64a16 16 0 0 0 16 16h160a16 16 0 0 0 16-16v-64a16 16 0 0 0-16-16zm0-128H144a16 16 0 0 0-16 16v64a16 16 0 0 0 16 16h160a16 16 0 0 0 16-16v-64a16 16 0 0 0-16-16zm192 128H368a16 16 0 0 0-16 16v64a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-64a16 16 0 0 0-16-16z", "M640 161.28V504a8 8 0 0 1-8 8h-48a8 8 0 0 1-8-8V208a16 16 0 0 0-16-16H80a16 16 0 0 0-16 16v296a8 8 0 0 1-8 8H8a8 8 0 0 1-8-8V161.28A48.11 48.11 0 0 1 29.5 117l272-113.3a48.06 48.06 0 0 1 36.9 0L610.5 117a48.11 48.11 0 0 1 29.5 44.28z"]]
};
exports.faWarehouseAlt = faWarehouseAlt;
var faWasher = {
  prefix: 'fad',
  iconName: 'washer',
  icon: [446, 512, [], "f898", ["M298 300a51.75 51.75 0 0 0 36.11-14.69A110.76 110.76 0 0 1 336 304a112 112 0 0 1-224 0 110.76 110.76 0 0 1 1.89-18.69 51.79 51.79 0 0 0 73.24-1 51.23 51.23 0 0 0 73.74 0A51.81 51.81 0 0 0 298 300z", "M384 0H64A64 64 0 0 0 0 64v416a32 32 0 0 0 32 32h384a32 32 0 0 0 32-32V64a64 64 0 0 0-64-64zM184 64a24 24 0 1 1-24 24 24 24 0 0 1 24-24zM64 88a24 24 0 1 1 24 24 24 24 0 0 1-24-24zm160 360a144 144 0 1 1 144-144 144 144 0 0 1-144 144z"]]
};
exports.faWasher = faWasher;
var faWatch = {
  prefix: 'fad',
  iconName: 'watch',
  icon: [384, 512, [], "f2e1", ["M192 80a176 176 0 1 0 176 176A176 176 0 0 0 192 80zm71.8 219.8L245 325.7a11.91 11.91 0 0 1-16.62 2.73l-.18-.13-59.3-43.2a12 12 0 0 1-4.9-9.7V160a12 12 0 0 1 12-12h32a12 12 0 0 1 12 12v93l41.2 30a12.07 12.07 0 0 1 2.6 16.8z", "M208 148h-32a12 12 0 0 0-12 12v115.4a12 12 0 0 0 4.9 9.7l59.3 43.2.18.13A11.91 11.91 0 0 0 245 325.7l18.8-25.9a12.07 12.07 0 0 0-2.6-16.8L220 253v-93a12 12 0 0 0-12-12zm-16 284a175.5 175.5 0 0 1-128-55.21V488a23.94 23.94 0 0 0 23.88 24H296a23.94 23.94 0 0 0 24-23.88V376.79A175.5 175.5 0 0 1 192 432zM296.12 0H88a23.94 23.94 0 0 0-24 23.88v111.33a176 176 0 0 1 256 0V24a23.94 23.94 0 0 0-23.88-24z"]]
};
exports.faWatch = faWatch;
var faWatchCalculator = {
  prefix: 'fad',
  iconName: 'watch-calculator',
  icon: [384, 512, [], "f8f0", ["M320 80H64a64 64 0 0 0-64 64v224a64 64 0 0 0 64 64h256a64 64 0 0 0 64-64V144a64 64 0 0 0-64-64zM120 368a8 8 0 0 1-8 8H80a8 8 0 0 1-8-8v-32a8 8 0 0 1 8-8h32a8 8 0 0 1 8 8zm0-96a8 8 0 0 1-8 8H80a8 8 0 0 1-8-8v-32a8 8 0 0 1 8-8h32a8 8 0 0 1 8 8zm96 96a8 8 0 0 1-8 8h-32a8 8 0 0 1-8-8v-32a8 8 0 0 1 8-8h32a8 8 0 0 1 8 8zm0-96a8 8 0 0 1-8 8h-32a8 8 0 0 1-8-8v-32a8 8 0 0 1 8-8h32a8 8 0 0 1 8 8zm96 96a8 8 0 0 1-8 8h-32a8 8 0 0 1-8-8v-32a8 8 0 0 1 8-8h32a8 8 0 0 1 8 8zm0-96a8 8 0 0 1-8 8h-32a8 8 0 0 1-8-8v-32a8 8 0 0 1 8-8h32a8 8 0 0 1 8 8zm0-96a8 8 0 0 1-8 8H80a8 8 0 0 1-8-8v-32a8 8 0 0 1 8-8h224a8 8 0 0 1 8 8z", "M64 480a32 32 0 0 0 32 32h192a32 32 0 0 0 32-32v-48H64zM288 0H96a32 32 0 0 0-32 32v48h256V32a32 32 0 0 0-32-32zM72 368a8 8 0 0 0 8 8h32a8 8 0 0 0 8-8v-32a8 8 0 0 0-8-8H80a8 8 0 0 0-8 8zm8-88h32a8 8 0 0 0 8-8v-32a8 8 0 0 0-8-8H80a8 8 0 0 0-8 8v32a8 8 0 0 0 8 8zm88 88a8 8 0 0 0 8 8h32a8 8 0 0 0 8-8v-32a8 8 0 0 0-8-8h-32a8 8 0 0 0-8 8zm8-88h32a8 8 0 0 0 8-8v-32a8 8 0 0 0-8-8h-32a8 8 0 0 0-8 8v32a8 8 0 0 0 8 8zm88 88a8 8 0 0 0 8 8h32a8 8 0 0 0 8-8v-32a8 8 0 0 0-8-8h-32a8 8 0 0 0-8 8zm8-88h32a8 8 0 0 0 8-8v-32a8 8 0 0 0-8-8h-32a8 8 0 0 0-8 8v32a8 8 0 0 0 8 8z"]]
};
exports.faWatchCalculator = faWatchCalculator;
var faWatchFitness = {
  prefix: 'fad',
  iconName: 'watch-fitness',
  icon: [384, 512, [], "f63e", ["M320 80H64a64 64 0 0 0-64 64v224a64 64 0 0 0 64 64h256a64 64 0 0 0 64-64V144a64 64 0 0 0-64-64zm-33.43 182.21l-84.67 85.64a13.89 13.89 0 0 1-19.64.16l-.16-.16-84.67-85.64a60.64 60.64 0 0 1 .67-85.76q1.75-1.72 3.66-3.32c24-20 59.65-16.42 81.62 5.81l8.62 8.72 8.62-8.72c22-22.23 57.66-25.82 81.62-5.81a60.64 60.64 0 0 1 7.65 85.42q-1.58 1.89-3.32 3.66z", "M182.26 348a13.89 13.89 0 0 0 19.64-.16l84.67-85.64q1.74-1.77 3.32-3.66a60.64 60.64 0 0 0-7.65-85.42c-24-20-59.62-16.42-81.62 5.81l-8.62 8.73-8.62-8.72c-22-22.23-57.62-25.81-81.62-5.81q-1.91 1.59-3.66 3.32a60.64 60.64 0 0 0-.67 85.76l84.67 85.64zM64 480a32 32 0 0 0 32 32h192a32 32 0 0 0 32-32v-48H64zM288 0H96a32 32 0 0 0-32 32v48h256V32a32 32 0 0 0-32-32z"]]
};
exports.faWatchFitness = faWatchFitness;
var faWater = {
  prefix: 'fad',
  iconName: 'water',
  icon: [576, 512, [], "f773", ["M562.2 95.86c8.1.9 13.9 8.3 13.8 16.3v31.61c0 9.1-7.6 16.8-16.7 16A185 185 0 0 1 480.18 134c-55 34.11-135.52 34.61-192 0-55 34.11-135.52 34.61-192 0-23.31 14.5-50.61 23.4-79.42 25.9-9.1.8-16.7-6.9-16.7-16v-32.24c0-7.9 5.7-14.9 13.6-15.7 21.71-2.3 42.21-10.2 57.71-22.41 13.8-10.9 33.61-13.2 47.11-2 38.31 31.71 107.22 31.81 145.23 1.7 13.7-10.9 33.2-13 46.7-1.8 38.51 31.91 107.82 31.91 145.73 1.5a38.79 38.79 0 0 1 48.21 0c15.8 12.41 36.4 20.41 57.91 22.91z", "M562.2 383.93c-21.51-2.4-42.11-10.5-57.91-22.91a38.79 38.79 0 0 0-48.21 0c-37.91 30.41-107.22 30.41-145.73-1.5-13.5-11.2-33-9.1-46.7 1.8-38 30.11-106.92 30-145.23-1.7-13.5-11.2-33.31-8.9-47.11 2-15.5 12.21-36 20.11-57.71 22.41-7.9.8-13.6 7.8-13.6 15.7v32.21c0 9.1 7.6 16.8 16.7 16 28.81-2.5 56.11-11.4 79.42-25.9 56.51 34.61 137 34.1 192 0 56.51 34.61 137 34.1 192 0a185 185 0 0 0 79.12 25.8c9.1.8 16.7-6.9 16.7-16v-31.61c.16-8-5.64-15.4-13.74-16.3zm0-144c-21.51-2.4-42.11-10.5-57.91-22.9a38.79 38.79 0 0 0-48.21 0c-37.91 30.41-107.22 30.41-145.73-1.5-13.5-11.21-33-9.1-46.7 1.8-38 30.11-106.92 30-145.23-1.7-13.5-11.21-33.31-8.9-47.11 2-15.5 12.2-36 20.1-57.71 22.4C5.7 240.79 0 247.8 0 255.7v32.2c0 9.11 7.6 16.81 16.7 16 28.81-2.5 56.11-11.4 79.42-25.91 56.51 34.61 137 34.11 192 0 56.51 34.61 137 34.11 192 0a184.83 184.83 0 0 0 79.12 25.81c9.1.8 16.7-6.9 16.7-16v-31.6c.16-8-5.64-15.41-13.74-16.31z"]]
};
exports.faWater = faWater;
var faWaterLower = {
  prefix: 'fad',
  iconName: 'water-lower',
  icon: [576, 512, [], "f774", ["M562.2 447.9c-21.51-2.4-42.11-10.5-57.91-22.9a38.79 38.79 0 0 0-48.21 0c-37.91 30.4-107.22 30.4-145.73-1.5-13.5-11.2-33-9.1-46.7 1.8-38 30.1-106.92 30-145.23-1.7-13.5-11.2-33.31-8.9-47.11 2-15.5 12.2-36 20.1-57.71 22.4-7.9.8-13.6 7.8-13.6 15.7v32.2c0 9.1 7.6 16.8 16.7 16 28.81-2.5 56.11-11.4 79.42-25.9 56.51 34.6 137 34.1 192 0 56.51 34.6 137 34.1 192 0a185 185 0 0 0 79.12 25.8c9.1.8 16.7-6.9 16.7-16v-31.6c.16-8-5.64-15.4-13.74-16.3zm0-144c-21.51-2.4-42.11-10.5-57.91-22.9a38.79 38.79 0 0 0-48.21 0c-37.91 30.4-107.22 30.4-145.73-1.5-13.5-11.2-33-9.1-46.7 1.8-38 30.1-106.92 30-145.23-1.7-13.5-11.2-33.31-8.9-47.11 2-15.5 12.2-36 20.1-57.71 22.4-7.9.8-13.6 7.8-13.6 15.7v32.2c0 9.1 7.6 16.8 16.7 16 28.81-2.5 56.11-11.4 79.42-25.9 56.51 34.6 137 34.1 192 0 56.51 34.6 137 34.1 192 0a185 185 0 0 0 79.12 25.8c9.1.8 16.7-6.9 16.7-16v-31.6c.16-8-5.64-15.4-13.74-16.3z", "M396.27 123.33L300 219.05a17 17 0 0 1-24 0l-96.2-95.62C169.62 113.33 176.71 96 191 96h65.1V16a16 16 0 0 1 16-16H304a16 16 0 0 1 16 16v79.92h65c14.26 0 21.35 17.31 11.27 27.41z"]]
};
exports.faWaterLower = faWaterLower;
var faWaterRise = {
  prefix: 'fad',
  iconName: 'water-rise',
  icon: [576, 512, [], "f775", ["M562.2 447.85c-21.51-2.4-42.11-10.5-57.91-22.9a38.79 38.79 0 0 0-48.21 0c-37.91 30.4-107.22 30.4-145.73-1.5-13.5-11.2-33-9.1-46.7 1.8-38 30.1-106.92 30-145.23-1.7-13.5-11.2-33.31-8.9-47.11 2-15.5 12.2-36 20.1-57.71 22.4-7.9.8-13.6 7.8-13.6 15.7v32.2c0 9.1 7.6 16.8 16.7 16 28.81-2.5 56.11-11.4 79.42-25.9 56.51 34.6 137 34.1 192 0 56.51 34.6 137 34.1 192 0a185 185 0 0 0 79.12 25.8c9.1.8 16.7-6.9 16.7-16v-31.6c.16-8-5.64-15.4-13.74-16.3zm0-144c-21.51-2.4-42.11-10.5-57.91-22.9a38.79 38.79 0 0 0-48.21 0c-37.91 30.4-107.22 30.4-145.73-1.5-13.5-11.2-33-9.1-46.7 1.8-38 30.1-106.92 30-145.23-1.7-13.5-11.2-33.31-8.9-47.11 2-15.5 12.2-36 20.1-57.71 22.4-7.9.8-13.6 7.8-13.6 15.7v32.2c0 9.1 7.6 16.8 16.7 16 28.81-2.5 56.11-11.4 79.42-25.9 56.51 34.6 137 34.1 192 0 56.51 34.6 137 34.1 192 0a185 185 0 0 0 79.12 25.8c9.1.8 16.7-6.9 16.7-16v-31.6c.16-8-5.64-15.4-13.74-16.3z", "M385.19 128H320v80a16 16 0 0 1-16 16h-32a16 16 0 0 1-16-16v-80h-65.2c-14.2 0-21.4-17.31-11.2-27.31L276 5a17 17 0 0 1 24 0l96.4 95.62c10.19 10.05 3.09 27.38-11.21 27.38z"]]
};
exports.faWaterRise = faWaterRise;
var faWaveSine = {
  prefix: 'fad',
  iconName: 'wave-sine',
  icon: [640, 512, [], "f899", ["M464 480c-90.52 0-132.84-107.94-173.8-212.31C258.64 187.2 222.88 96 176 96c-39.7 0-91.38 81.89-114.12 149a16 16 0 0 1-19.74 10.33l-30.72-9.21A16 16 0 0 1 .84 225.68C19.55 169.79 82.16 32 176 32c90.52 0 132.84 107.94 173.8 212.31C381.36 324.8 417.12 416 464 416c39.7 0 91.38-81.89 114.12-149a16 16 0 0 1 19.74-10.33l30.72 9.21a16 16 0 0 1 10.58 20.43C620.45 342.21 557.84 480 464 480z", ""]]
};
exports.faWaveSine = faWaveSine;
var faWaveSquare = {
  prefix: 'fad',
  iconName: 'wave-square',
  icon: [640, 512, [], "f83e", ["M476 480H324a36 36 0 0 1-36-36V96h-96v156a36 36 0 0 1-36 36H16a16 16 0 0 1-16-16v-32a16 16 0 0 1 16-16h112V68a36 36 0 0 1 36-36h152a36 36 0 0 1 36 36v348h96V260a36 36 0 0 1 36-36h140a16 16 0 0 1 16 16v32a16 16 0 0 1-16 16H512v156a36 36 0 0 1-36 36z", ""]]
};
exports.faWaveSquare = faWaveSquare;
var faWaveTriangle = {
  prefix: 'fad',
  iconName: 'wave-triangle',
  icon: [640, 512, [], "f89a", ["M464 480h-.34a32 32 0 0 1-25.25-12.8l-263-350.65L53.73 281.88a16 16 0 0 1-22.46 2.7L6.12 264.82a16 16 0 0 1-2.7-22.47L150.84 44.23A32 32 0 0 1 176 32h.34a32 32 0 0 1 25.25 12.8l263 350.65 121.68-165.33a16 16 0 0 1 22.46-2.7l25.15 19.76a16 16 0 0 1 2.7 22.47L489.16 467.77A32 32 0 0 1 464 480z", ""]]
};
exports.faWaveTriangle = faWaveTriangle;
var faWaveform = {
  prefix: 'fad',
  iconName: 'waveform',
  icon: [640, 512, [], "f8f1", ["M140 192h-24a16 16 0 0 0-16 16v96a16 16 0 0 0 16 16h24a16 16 0 0 0 16-16v-96a16 16 0 0 0-16-16zM524 64h-24a16 16 0 0 0-16 16v352a16 16 0 0 0 16 16h24a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zM332 0h-24a16 16 0 0 0-16 16v480a16 16 0 0 0 16 16h24a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16z", "M44 224H20a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h24a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM236 96h-24a16 16 0 0 0-16 16v288a16 16 0 0 0 16 16h24a16 16 0 0 0 16-16V112a16 16 0 0 0-16-16zm384 128h-24a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h24a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-192-96h-24a16 16 0 0 0-16 16v224a16 16 0 0 0 16 16h24a16 16 0 0 0 16-16V144a16 16 0 0 0-16-16z"]]
};
exports.faWaveform = faWaveform;
var faWaveformPath = {
  prefix: 'fad',
  iconName: 'waveform-path',
  icon: [640, 512, [], "f8f2", ["M195.41 64.23a24 24 0 0 0-27.16 20.38l-28.19 197.33 27.47 137.36a23.82 23.82 0 0 1 0 8.79c0-.25.19-.45.23-.7l48-336a24 24 0 0 0-20.35-27.16zm-95.75 96.05a24 24 0 0 0-27.38 20.06L59.41 264H16a16 16 0 0 0-16 16v16a16 16 0 0 0 16 16h64a24 24 0 0 0 23.71-20.35l16-104a24 24 0 0 0-20.05-27.37zm352.12-96a23.94 23.94 0 0 0-27.47 19.9l-38.54 240.93 22 159.61a23.61 23.61 0 0 1-.51 8.28c.09-.43.35-.77.42-1.2l64-400a24 24 0 0 0-19.9-27.5zm96.94 96.17a23.91 23.91 0 0 0-28.25 18.83l-20.53 102.66 19.81 138.67a23.84 23.84 0 0 1-.5 8.82c.06-.26.23-.46.28-.73l48-240a24 24 0 0 0-18.81-28.23zM323.28.22a24 24 0 0 0-27.06 20.5l-42 304.39 25.47 159.09a23.78 23.78 0 0 1-.34 8.39c.09-.47.37-.84.43-1.31l64-464A24 24 0 0 0 323.28.22z", "M119.31 178.78a23.7 23.7 0 0 1 .41 8.87l-16 104a23.94 23.94 0 0 1-7.81 14.23l24.56 122.82A24 24 0 0 0 144 448a23.39 23.39 0 0 0 4.75-.47 24 24 0 0 0 18.81-28.23l-48-240c-.07-.2-.2-.3-.25-.52zm96-95.68a23.65 23.65 0 0 1 .47 8.29l-22.44 156.85 39 243.56A24 24 0 0 0 256 512a23.56 23.56 0 0 0 3.81-.3 24 24 0 0 0 19.91-27.5l-64-400c-.09-.4-.36-.7-.44-1.1zM624 264h-43.41l-12.87-83.66c0-.2-.17-.35-.2-.55a23.83 23.83 0 0 1 0 8.91L544.1 305.88A23.87 23.87 0 0 0 560 312h64a16 16 0 0 0 16-16v-16a16 16 0 0 0-16-16zM343.28 19.29a23.66 23.66 0 0 1 .5 8L320 199.7l40.22 291.58A24 24 0 0 0 384 512a26.66 26.66 0 0 0 3.31-.22 24 24 0 0 0 20.5-27.06l-64-464c-.1-.52-.42-.92-.53-1.43zm128.07 64.19a23.86 23.86 0 0 1 .34 8.32l-25 156.44 25.59 179.15A24 24 0 0 0 496 448a27 27 0 0 0 3.44-.23 24 24 0 0 0 20.34-27.16l-48-336c-.09-.41-.35-.73-.43-1.13z"]]
};
exports.faWaveformPath = faWaveformPath;
var faWebcam = {
  prefix: 'fad',
  iconName: 'webcam',
  icon: [448, 512, [], "f832", ["M224 96a128 128 0 1 0 128 128A128 128 0 0 0 224 96zm0 80a48.05 48.05 0 0 0-48 48 16 16 0 0 1-32 0 80.09 80.09 0 0 1 80-80 16 16 0 1 1 0 32z", "M401 438.6l-49.19-30.75C409.88 367.39 448 300.19 448 224 448 100.29 347.71 0 224 0S0 100.29 0 224c0 76.19 38.12 143.39 96.23 183.85L47 438.6a32 32 0 0 0-15 27.14V480a32 32 0 0 0 32 32h320a32 32 0 0 0 32-32v-14.26a32 32 0 0 0-15-27.14zM224 384a160 160 0 1 1 160-160 160 160 0 0 1-160 160z"]]
};
exports.faWebcam = faWebcam;
var faWebcamSlash = {
  prefix: 'fad',
  iconName: 'webcam-slash',
  icon: [640, 512, [], "f833", ["M146.93 81.8A223.54 223.54 0 0 1 320 0c123.71 0 224 100.29 224 224a222.55 222.55 0 0 1-42.83 131.58l-50.63-39.13A160 160 0 0 0 197.59 121zM320 96a127.67 127.67 0 0 0-97 44.54L261 170a79.87 79.87 0 0 1 59-26 16 16 0 0 1 0 32 47.85 47.85 0 0 0-33.48 13.65L425.2 296.87A128 128 0 0 0 320 96zM163.46 256.92l-66.53-51.41c-.5 6.11-.93 12.25-.93 18.49 0 76.19 38.12 143.39 96.23 183.85L143 438.6a32 32 0 0 0-15 27.14V480a32 32 0 0 0 32 32h320a31.44 31.44 0 0 0 10.7-2.16L327 383.3c-83.42 3.7-148.41-54.1-163.54-126.38z", "M636.64 480.55L617 505.82a16 16 0 0 1-22.45 2.8L6.18 53.9a16 16 0 0 1-2.81-22.45L23 6.18a16 16 0 0 1 22.45-2.8L633.82 458.1a16 16 0 0 1 2.82 22.45z"]]
};
exports.faWebcamSlash = faWebcamSlash;
var faWeight = {
  prefix: 'fad',
  iconName: 'weight',
  icon: [512, 512, [], "f496", ["M256 320A160 160 0 1 0 96 160a160 160 0 0 0 160 160zm-.28-152l33.56-78.3a16 16 0 0 1 29.44 12.59l-33.58 78.33A40 40 0 1 1 255.72 168z", "M512 128v320a64.07 64.07 0 0 1-64 64H64a64.07 64.07 0 0 1-64-64V128a64.07 64.07 0 0 1 64-64h26a190.6 190.6 0 0 0-26 96c0 105.87 86.13 192 192 192s192-86.13 192-192a190.6 190.6 0 0 0-26-96h26a64.07 64.07 0 0 1 64 64zM256 248a40 40 0 0 0 29.14-67.38l33.58-78.33a16 16 0 0 0-29.44-12.59L255.72 168a40 40 0 0 0 .28 80z"]]
};
exports.faWeight = faWeight;
var faWeightHanging = {
  prefix: 'fad',
  iconName: 'weight-hanging',
  icon: [512, 512, [], "f5cd", ["M164.47 128a96 96 0 1 1 181.06 0H255a32 32 0 1 0-32-32 32 32 0 0 0 32 32z", "M510.28 445.85l-73-292.13c-3.8-15.19-16.44-25.72-30.87-25.72H105.64c-14.43 0-27.08 10.54-30.87 25.72l-73 292.13C-6.61 479.16 16.38 512 48 512h416c31.62 0 54.61-32.84 46.28-66.15z"]]
};
exports.faWeightHanging = faWeightHanging;
var faWhale = {
  prefix: 'fad',
  iconName: 'whale',
  icon: [640, 512, [], "f72c", ["M544 192c-243 0-315.29 224-380.12 224A35.92 35.92 0 0 1 128 380.11v-98l49.75-30.51A32 32 0 0 0 192 225v-81a16 16 0 0 0-24.88-13.31L96 178.11l-71.12-47.42A16 16 0 0 0 0 144v81a32 32 0 0 0 14.25 26.6L64 282.12v98A100 100 0 0 0 163.88 480H576a64 64 0 0 0 64-64V288a96.11 96.11 0 0 0-96-96zM432 360a24 24 0 1 1 24-24 24 24 0 0 1-24 24z", "M432 312a24 24 0 1 0 24 24 24 24 0 0 0-24-24z"]]
};
exports.faWhale = faWhale;
var faWheat = {
  prefix: 'fad',
  iconName: 'wheat',
  icon: [512, 512, [], "f72d", ["M369.14 143.43c-1.23-8.7-7.44-75.65 29.76-113C431.2.29 482.47-1.39 511.45.55c2.72 40.92-4.36 85.57-29.75 113-27.56 25.73-70.99 32.66-112.56 29.88z", "M9.38 457.38l72.27-72.29c-22.27-22.53-39.85-50.45-40.93-78.93 1.14-33.49 24.07-65.14 52-89.52 6.24 4.69 52.24 42.87 52.32 89.73a81.23 81.23 0 0 1-3 18.39l41.49-41.48c-22.28-22.53-39.84-50.45-40.93-78.93 1.15-33.49 24.08-65.14 52-89.52 6.24 4.69 52.24 42.87 52.32 89.73a81.79 81.79 0 0 1-3 18.39l41.49-41.48C263 158.94 245.44 131 244.34 102.54c1.17-33.49 24.1-65.14 52-89.52 4.8 3.6 32.94 27.1 45.79 59-9.62 38.55-5 73.59-4.64 75.88l3.64 25.7 25.87 1.76c6.3.42 12.66.64 19 .64a220.57 220.57 0 0 0 52.18-6.45c26.75 10.24 48.69 31.44 61.45 46-24 27.43-56.53 51-89.73 52.32-29.05-1-56.67-18.4-79.4-41.17l-41.42 41.41a77.26 77.26 0 0 1 19.21-2.71c39.24 1.36 72.52 32.53 89.52 52-24 27.43-56.52 51-89.74 52.32-29-1-56.66-18.4-79.39-41.17L187.28 370a77 77 0 0 1 19.2-2.71c39.24 1.36 72.51 32.53 89.51 52-24 27.43-56.52 51-89.72 52.32-29.05-1-56.68-18.4-79.41-41.17l-72.24 72.18a32 32 0 1 1-45.24-45.24z"]]
};
exports.faWheat = faWheat;
var faWheelchair = {
  prefix: 'fad',
  iconName: 'wheelchair',
  icon: [512, 512, [], "f193", ["M350.39 359.82a176 176 0 1 1-208.54-196.5c2.53 17.67 5.52 38.63 9.08 63.48A112 112 0 1 0 288 336a114.79 114.79 0 0 0-1.13-16h44.81z", "M503.12 435.78l-65.46 32.88a32 32 0 0 1-42.89-14.43l-.3-.62L331.68 320H192a32 32 0 0 1-31.68-27.48C126.43 55.31 128.38 70 128 64a64 64 0 1 1 73.37 63.31L206 160h130a16 16 0 0 1 16 16v32a16 16 0 0 1-16 16H215.18l4.57 32H352a32 32 0 0 1 29 18.39l57.48 122.41 36.18-18.35a16 16 0 0 1 21.44 7.22l14.23 28.66a16 16 0 0 1-7.21 21.45z"]]
};
exports.faWheelchair = faWheelchair;
var faWhistle = {
  prefix: 'fad',
  iconName: 'whistle',
  icon: [640, 512, [], "f460", ["M634 326.36l-150-120a16.16 16.16 0 0 0-18.2-1.2l-27.4 16.21a8 8 0 0 1-9.1-.6l-25.2-20.21a8 8 0 0 1-2.6-8.9l10.2-29.51a16 16 0 0 0-5.1-17.7L320 80.8c-62.6-40.1-141.7-42.9-207-9.3C100.9 56.9 83.2 48 64 48a64.06 64.06 0 0 0-64 64 63.27 63.27 0 0 0 23 49c-40.1 78.24-27.5 176.56 38 242 89.8 89.82 251.11 81.42 326.51-32l150.41 86a15.93 15.93 0 0 0 20.7-4.3l78.2-104.33a16 16 0 0 0-2.82-22.01zM40.4 133.22A31.86 31.86 0 0 1 85.5 88.3c-17.8 13.01-29.9 24.32-45.1 44.92zM208 352a96 96 0 1 1 96-96 96 96 0 0 1-96 96z", "M208 160a96 96 0 1 0 96 96 96 96 0 0 0-96-96zm0 144a48 48 0 1 1 48-48 48 48 0 0 1-48 48z"]]
};
exports.faWhistle = faWhistle;
var faWifi = {
  prefix: 'fad',
  iconName: 'wifi',
  icon: [640, 512, [], "f1eb", ["", "M320 352c-35.3 0-64 28.7-64 64s28.7 64 64 64 64-28.7 64-64-28.7-64-64-64zm202.7-83.6c-115.3-101.9-290.2-101.8-405.3 0-6.5 5.8-7.1 15.8-1.4 22.3.3.3.5.6.8.8l34.4 34c6 5.9 15.6 6.3 22 .8 84-72.6 209.7-72.4 293.5 0 6.4 5.5 16 5.2 22-.8l34.4-34c6.2-6.1 6.4-16.1.3-22.4l-.7-.7zm112.7-113c-.2-.2-.4-.3-.5-.5C457.7-9 182.2-8.9 5.1 154.9c-6.4 6-6.8 16-.9 22.5.2.2.3.4.5.5l34.2 34c6.2 6.1 16 6.2 22.4.4 145.9-133.7 371.3-133.7 517.2 0 6.4 5.9 16.2 5.7 22.4-.4l34.2-34c6.4-6.2 6.5-16.2.3-22.5z"]]
};
exports.faWifi = faWifi;
var faWifi1 = {
  prefix: 'fad',
  iconName: 'wifi-1',
  icon: [640, 512, [], "f6aa", ["M634.9 154.9C457.7-9 182.2-8.9 5.1 154.9c-6.4 6-6.8 16-.9 22.5.2.2.3.4.5.5l34.2 34c6.2 6.1 16 6.2 22.4.4 145.9-133.7 371.3-133.7 517.2 0 6.4 5.9 16.2 5.7 22.4-.4l34.2-34c6.3-6.2 6.3-16.2.2-22.5 0-.2-.2-.4-.4-.5zM522.7 268.4c-115.3-101.9-290.2-101.8-405.3 0-6.5 5.8-7.1 15.8-1.4 22.3.3.3.5.6.8.8l34.4 34c6 5.9 15.6 6.3 22.1.8 83.9-72.6 209.7-72.4 293.5 0 6.4 5.5 16 5.2 22-.8l34.4-34c6.2-6.1 6.4-16.1.3-22.4-.3-.2-.5-.4-.8-.7z", "M320 352c35.3 0 64 28.7 64 64s-28.7 64-64 64-64-28.7-64-64 28.7-64 64-64z"]]
};
exports.faWifi1 = faWifi1;
var faWifi2 = {
  prefix: 'fad',
  iconName: 'wifi-2',
  icon: [640, 512, [], "f6ab", ["M635.3 177.9l-34.2 34c-6.2 6.1-16 6.2-22.4.4-146-133.7-371.3-133.7-517.2 0-6.4 5.9-16.2 5.7-22.4-.4l-34.2-34-.5-.5c-6-6.4-5.6-16.5.9-22.5C182.2-8.9 457.7-9 634.9 154.9c.2.2.4.3.5.5 6.2 6.3 6.1 16.3-.1 22.5z", "M320 352c-35.3 0-64 28.7-64 64s28.7 64 64 64 64-28.7 64-64-28.7-64-64-64zm203.5-82.8l-.8-.8c-115.3-101.9-290.2-101.8-405.3 0-6.5 5.8-7.1 15.8-1.4 22.3.3.3.5.6.8.8l34.4 34c6 5.9 15.6 6.3 22 .8 84-72.6 209.7-72.4 293.5 0 6.4 5.5 16 5.2 22-.8l34.4-34c6.4-6 6.5-16 .4-22.3z"]]
};
exports.faWifi2 = faWifi2;
var faWifiSlash = {
  prefix: 'fad',
  iconName: 'wifi-slash',
  icon: [640, 512, [], "f6ac", ["M466.74 326.35a222.2 222.2 0 0 0-36.69-25.75L291.29 193.36c81.8-7.62 166.15 17.36 231.38 75.05a15.81 15.81 0 0 1 .56 23.15l-34.44 34a16.31 16.31 0 0 1-22.05.79zM207.6 128.68c126.08-38.46 268.25-10.63 371 83.53a16.25 16.25 0 0 0 22.4-.38l34.24-34a15.9 15.9 0 0 0-.36-23C496.4 26.77 297.77-1.12 133.06 71.06zM256 416a63.88 63.88 0 0 0 127 10l-88.7-68.56A64 64 0 0 0 256 416zM5.09 154.87a15.88 15.88 0 0 0-.35 23L39 211.8a16.25 16.25 0 0 0 22.4.38c7-6.4 14.31-12.22 21.65-18L18.07 144c-4.3 3.67-8.79 7-12.98 10.87zm113.22 113.52a15.9 15.9 0 0 0-.57 23.17l34.28 34a16.17 16.17 0 0 0 21.94.8c13.35-11.6 28-20.66 43.15-28.55L148.75 245a299.77 299.77 0 0 0-30.44 23.39z", "M636.64 480.55L617 505.82a16 16 0 0 1-22.46 2.81L6.18 53.9a16 16 0 0 1-2.81-22.45L23 6.18a16 16 0 0 1 22.47-2.81L633.83 458.1a16 16 0 0 1 2.81 22.45z"]]
};
exports.faWifiSlash = faWifiSlash;
var faWind = {
  prefix: 'fad',
  iconName: 'wind',
  icon: [512, 512, [], "f72e", ["M508.88 394.71c-9.6 41.1-43.5 74-84.69 82.7-58.9 12.5-111.6-21.7-129.39-72.3-3.7-10.3 4.4-21.1 15.29-21.1h33.8c5.8 0 11.6 2.6 14.5 7.6A47.93 47.93 0 1 0 400 320H283.5a126.41 126.41 0 0 0-39.8-64H400c70.48 0 126 65.5 108.88 138.71z", "M156.76 256H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h142.26c15.9 0 30.81 10.9 33.41 26.6a32.06 32.06 0 0 1-62 15.5c-2.11-6.3-8.61-10.1-15.21-10.1H81.63c-9.8 0-17.71 8.8-15.91 18.4a96 96 0 0 0 189.47-31c-6.1-48.4-49.72-83.4-98.43-83.4zm289.07-148.72c-7.6-36.21-36.91-65.52-73.11-73.12a96.22 96.22 0 0 0-114.9 75.52c-1.9 9.6 6.1 18.3 15.8 18.3h32.8c6.7 0 13.1-3.8 15.2-10.1a32 32 0 0 1 62 15.5C381 149.09 366.22 160 350.22 160H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h336a96.2 96.2 0 0 0 93.83-116.72z"]]
};
exports.faWind = faWind;
var faWindTurbine = {
  prefix: 'fad',
  iconName: 'wind-turbine',
  icon: [514, 512, [], "f89b", ["M350.1 480h-48.32l-5-76.66L221 314l-10.78 166H161.9a36.94 36.94 0 0 0-33 20.42A8 8 0 0 0 136 512h240a8 8 0 0 0 7.15-11.58A36.93 36.93 0 0 0 350.1 480z", "M398.69 425.79l-88.35-182.32a55.77 55.77 0 0 1-.73-42.79l73.28-179.07a15.8 15.8 0 0 0-27.5-15.07L241.27 163.21a55.74 55.74 0 0 1-36.47 22.4L13.32 215.94A15.81 15.81 0 0 0 0 231.89v.23a15.8 15.8 0 0 0 14.1 15.35L203.84 268a55.77 55.77 0 0 1 37.53 20.58l130.31 153.5a15.81 15.81 0 0 0 20.53 3.63l.2-.12a15.8 15.8 0 0 0 6.28-19.8zM256 248a24 24 0 1 1 24-24 24 24 0 0 1-24 24z"]]
};
exports.faWindTurbine = faWindTurbine;
var faWindWarning = {
  prefix: 'fad',
  iconName: 'wind-warning',
  icon: [640, 512, [], "f776", ["M384 192C384 86 298 0 192 0S0 86 0 192s86 192 192 192 192-86 192-192zM192 320a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm38.2-238.4l-12.8 128a16 16 0 0 1-15.9 14.4h-19a16 16 0 0 1-15.9-14.4l-12.8-128A16 16 0 0 1 169.7 64h44.6a16 16 0 0 1 15.9 17.6z", "M540.17 320H375.59a225.79 225.79 0 0 1-68.3 63.7 9 9 0 0 0 1.6.3h233.28c15.9 0 30.8 10.9 33.4 26.6a32 32 0 0 1-62 15.5c-2.1-6.3-8.6-10.1-15.2-10.1h-32.8a16.06 16.06 0 0 0-15.7 19.1 96 96 0 0 0 188.19-38.2c-8.89-45.6-51.49-76.9-97.89-76.9zm95.1-158.5a93.75 93.75 0 0 0-60.7-60.8c-59.09-18.4-114 19.1-124.69 72.4-2 9.8 5.8 18.9 15.7 18.9h32.8c6.7 0 13.1-3.8 15.2-10.1a32 32 0 0 1 62 15.5c-2.6 15.7-17.4 26.6-33.4 26.6h-128.8A223.2 223.2 0 0 1 394 288h150c62.77 0 111.77-60.7 91.27-126.5zM192 256a32 32 0 1 0 32 32 32 32 0 0 0-32-32zm22.3-192h-44.6a16 16 0 0 0-15.9 17.6l12.8 128a16 16 0 0 0 15.9 14.4h19a16 16 0 0 0 15.9-14.4l12.8-128A16 16 0 0 0 214.3 64z"]]
};
exports.faWindWarning = faWindWarning;
var faWindow = {
  prefix: 'fad',
  iconName: 'window',
  icon: [512, 512, [], "f40e", ["M288 160a32 32 0 1 0-32-32 32 32 0 0 0 32 32zm-96 0a32 32 0 1 0-32-32 32 32 0 0 0 32 32zM0 224v208a48 48 0 0 0 48 48h416a48 48 0 0 0 48-48V224z", "M464 32H48A48 48 0 0 0 0 80v144h512V80a48 48 0 0 0-48-48zM96 160a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm96 0a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm96 0a32 32 0 1 1 32-32 32 32 0 0 1-32 32z"]]
};
exports.faWindow = faWindow;
var faWindowAlt = {
  prefix: 'fad',
  iconName: 'window-alt',
  icon: [512, 512, [], "f40f", ["M464 32H48A48 48 0 0 0 0 80v80h512V80a48 48 0 0 0-48-48zm-240 96a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm96 0a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm96 0a32 32 0 1 1 32-32 32 32 0 0 1-32 32z", "M320 128a32 32 0 1 0-32-32 32 32 0 0 0 32 32zm96 0a32 32 0 1 0-32-32 32 32 0 0 0 32 32zM0 160v272a48 48 0 0 0 48 48h416a48 48 0 0 0 48-48V160z"]]
};
exports.faWindowAlt = faWindowAlt;
var faWindowClose = {
  prefix: 'fad',
  iconName: 'window-close',
  icon: [512, 512, [], "f410", ["M464 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h416a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-83.6 290.5a12.31 12.31 0 0 1 0 17.4l-40.5 40.5a12.31 12.31 0 0 1-17.4 0L256 313.3l-66.5 67.1a12.31 12.31 0 0 1-17.4 0l-40.5-40.5a12.31 12.31 0 0 1 0-17.4l67.1-66.5-67.1-66.5a12.31 12.31 0 0 1 0-17.4l40.5-40.5a12.31 12.31 0 0 1 17.4 0l66.5 67.1 66.5-67.1a12.31 12.31 0 0 1 17.4 0l40.5 40.5a12.31 12.31 0 0 1 0 17.4L313.3 256z", "M380.4 322.5a12.31 12.31 0 0 1 0 17.4l-40.5 40.5a12.31 12.31 0 0 1-17.4 0L256 313.3l-66.5 67.1a12.31 12.31 0 0 1-17.4 0l-40.5-40.5a12.31 12.31 0 0 1 0-17.4l67.1-66.5-67.1-66.5a12.31 12.31 0 0 1 0-17.4l40.5-40.5a12.31 12.31 0 0 1 17.4 0l66.5 67.1 66.5-67.1a12.31 12.31 0 0 1 17.4 0l40.5 40.5a12.31 12.31 0 0 1 0 17.4L313.3 256z"]]
};
exports.faWindowClose = faWindowClose;
var faWindowMaximize = {
  prefix: 'fad',
  iconName: 'window-maximize',
  icon: [512, 512, [], "f2d0", ["M448 192H64v-84a12 12 0 0 1 12-12h360a12 12 0 0 1 12 12z", "M464 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h416a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48zm-16 160H64v-84a12 12 0 0 1 12-12h360a12 12 0 0 1 12 12z"]]
};
exports.faWindowMaximize = faWindowMaximize;
var faWindowMinimize = {
  prefix: 'fad',
  iconName: 'window-minimize',
  icon: [512, 512, [], "f2d1", ["M464 352H48c-26.5 0-48 21.5-48 48v32c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48v-32c0-26.5-21.5-48-48-48z", ""]]
};
exports.faWindowMinimize = faWindowMinimize;
var faWindowRestore = {
  prefix: 'fad',
  iconName: 'window-restore',
  icon: [512, 512, [], "f2d2", ["M512 48v288a48 48 0 0 1-48 48h-48V176a80.11 80.11 0 0 0-80-80H128V48a48 48 0 0 1 48-48h288a48 48 0 0 1 48 48z", "M336 128H48a48 48 0 0 0-48 48v288a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V176a48 48 0 0 0-48-48zm-20 128H64v-52a12 12 0 0 1 12-12h228a12 12 0 0 1 12 12z"]]
};
exports.faWindowRestore = faWindowRestore;
var faWindsock = {
  prefix: 'fad',
  iconName: 'windsock',
  icon: [512, 512, [], "f777", ["M80.05 5.46a55.93 55.93 0 1 0-48.18 101V496a16 16 0 0 0 16 16h16a16 16 0 0 0 16-16V106.42a55.87 55.87 0 0 0 .17-101zm112 384.54l64-9V147l-64-9zM352.1 161v206l64-9V170z", "M111.89 401.1l80-11.39V138.32l-80-11.4zM498.3 182L416 170.31v187.4l82.33-11.8a15.94 15.94 0 0 0 13.7-15.8v-132.2A16.13 16.13 0 0 0 498.3 182zM255.93 380.61l96-13.7V161.12l-96-13.7z"]]
};
exports.faWindsock = faWindsock;
var faWineBottle = {
  prefix: 'fad',
  iconName: 'wine-bottle',
  icon: [512, 512, [], "f72f", ["M179.21 423.29L88.7 332.78l122-122 90.51 90.51z", "M507.3 72.57L439.42 4.69a16 16 0 0 0-22.63 0l-22.63 22.63a16 16 0 0 0 0 22.63l-76.67 76.67a127.91 127.91 0 0 0-140.37 27.23L18.74 312.23a64 64 0 0 0 0 90.51l90.51 90.51a64 64 0 0 0 90.51 0l158.39-158.39a127.91 127.91 0 0 0 27.23-140.37l76.67-76.67a16 16 0 0 0 22.63 0l22.63-22.63a16 16 0 0 0-.01-22.62zM179.21 423.29L88.7 332.78l122-122 90.51 90.51z"]]
};
exports.faWineBottle = faWineBottle;
var faWineGlass = {
  prefix: 'fad',
  iconName: 'wine-glass',
  icon: [288, 512, [], "f4e3", ["M208.35,253.62a81,81,0,0,1-46.83,30.85,77.47,77.47,0,0,1-35,0A81,81,0,0,1,79.7,253.62a79.76,79.76,0,0,1-15.29-55.26L76.42,64H211.63l12,134.36A79.63,79.63,0,0,1,208.35,253.62Z", "M211.63,64l12,134.36a79.63,79.63,0,0,1-15.28,55.26,81,81,0,0,1-46.83,30.85,77.47,77.47,0,0,1-35,0A81,81,0,0,1,79.7,253.62a79.76,79.76,0,0,1-15.29-55.26L76.42,64H211.63M255.74,0H32.31a15.85,15.85,0,0,0-15.7,14.55L.61,192.66A144.67,144.67,0,0,0,112,346.82V464H72a40,40,0,0,0-40,40,8,8,0,0,0,8,8H248a8,8,0,0,0,8-8,40,40,0,0,0-40-40H176V346.81A144.67,144.67,0,0,0,287.39,192.65l-16-178.1A15.85,15.85,0,0,0,255.74,0Z"]]
};
exports.faWineGlass = faWineGlass;
var faWineGlassAlt = {
  prefix: 'fad',
  iconName: 'wine-glass-alt',
  icon: [288, 512, [], "f5ce", ["M64.38,198.37,70.69,128H217.36l6.3,70.36a79.63,79.63,0,0,1-15.28,55.26,81,81,0,0,1-46.83,30.85,77.47,77.47,0,0,1-35,0,81,81,0,0,1-46.83-30.85,79.76,79.76,0,0,1-15.35-55.25Z", "M211.63,64l12,134.36a79.63,79.63,0,0,1-15.28,55.26,81,81,0,0,1-46.83,30.85,77.47,77.47,0,0,1-35,0A81,81,0,0,1,79.7,253.62a79.76,79.76,0,0,1-15.29-55.26L76.42,64H211.63M255.74,0H32.31a15.85,15.85,0,0,0-15.7,14.55L.61,192.66A144.67,144.67,0,0,0,112,346.82V464H72a40,40,0,0,0-40,40,8,8,0,0,0,8,8H248a8,8,0,0,0,8-8,40,40,0,0,0-40-40H176V346.81A144.67,144.67,0,0,0,287.39,192.65l-16-178.1A15.85,15.85,0,0,0,255.74,0Z"]]
};
exports.faWineGlassAlt = faWineGlassAlt;
var faWonSign = {
  prefix: 'fad',
  iconName: 'won-sign',
  icon: [576, 512, [], "f159", ["M158.2 288h38.72l14.91-64h-66.67zm-19.57-96h80.65l14.91-64h-108.6zM16 192h58.83l-.1-.45L60.53 128H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16zm285.18 32h-26.36L260 287.7l-.07.3h56.14l-.07-.3zM82 224H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h80.43l-.07-.3zm478-96h-44.53l-14.2 63.55-.1.45H560a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0 96h-66l-14.33 63.7-.07.3H560a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-203.28-32h80.65l13-64H341.81zm22.36 96h38.72l13-64h-66.63z", "M534 44a11.89 11.89 0 0 1-.29 2.59l-18.12 80.83-14.32 64.1-7.21 32-14.42 64.1-41 182.88A12 12 0 0 1 427 480h-56.92a12.11 12.11 0 0 1-11.72-9.31L316 287.7 299.08 215c-1.9-8-3.5-16-4.81-23.44h-12.54c-1.31 7.44-2.91 15.44-4.81 23.44L260 287.7l-42.36 183a12.11 12.11 0 0 1-11.72 9.3H149a12 12 0 0 1-11.72-9.42l-41-182.88-14.34-64.1-7.21-32-14.32-64.1-18.12-80.88A11.89 11.89 0 0 1 42 44a12 12 0 0 1 12-12h42.16A12 12 0 0 1 108 41.62l61.19 300.16a438.29 438.29 0 0 1 6.81 47.28h1.1c.5 0 1.1-21.44 7.31-47.28l70-300.47A12 12 0 0 1 266.1 32h43.8a12 12 0 0 1 11.71 9.31l70 300.47c6.21 25.84 6.81 47.28 7.31 47.28H400a438.29 438.29 0 0 1 6.81-47.28L468 41.62A12 12 0 0 1 479.84 32H522a12 12 0 0 1 12 12z"]]
};
exports.faWonSign = faWonSign;
var faWreath = {
  prefix: 'fad',
  iconName: 'wreath',
  icon: [448, 512, [], "f7e2", ["M320 400v96a16 16 0 0 1-21.1 15.2L224 480l-74.9 31.2A16.06 16.06 0 0 1 128 496v-96a16 16 0 0 1 21.1-15.2L224 416l74.9-31.2A16.06 16.06 0 0 1 320 400z", "M448 224a47.8 47.8 0 0 0-21.9-40.2 47.88 47.88 0 0 0-31.6-74.4c3.3-15.4-.2-31.9-12.1-43.8s-28.5-15.4-43.8-12.1a47.78 47.78 0 0 0-74.3-31.6 47.94 47.94 0 0 0-80.5 0 47.78 47.78 0 0 0-74.3 31.6c-15.4-3.3-31.9.2-43.8 12.1S50.3 94 53.6 109.4A47.78 47.78 0 0 0 22 183.7a47.88 47.88 0 0 0-.1 80.5 47.65 47.65 0 0 0-4.8 45.5c6.6 15.8 20.7 25.8 36.5 28.5-3.4 15.5 0 32.2 12.1 44.2 8.6 8.6 19.6 12.7 30.8 13.5A47.52 47.52 0 0 1 144 352a46.15 46.15 0 0 1 15.2 2.5l1.1.4 1.1.4 62.7 26.1 62.7-26.1 1.1-.4 1.1-.4a48.91 48.91 0 0 1 15.2-2.5 48 48 0 0 1 47.6 43.8 47.07 47.07 0 0 0 30.8-13.5c12-12 15.5-28.7 12.1-44.2 15.8-2.7 29.9-12.6 36.5-28.5a47.91 47.91 0 0 0-4.8-45.5A47.94 47.94 0 0 0 448 224zm-146.5 26.2c-2.8 8.9-1.1 20.2-6.3 27.6s-16.1 9.3-23.3 14.8-12.1 15.6-20.7 18.5c-8.2 2.8-18.1-2.3-27.2-2.3s-19 5.1-27.2 2.3c-8.5-2.9-13.6-13.1-20.7-18.5s-18.1-7.3-23.3-14.8-3.5-18.7-6.3-27.6c-2.7-8.6-10.5-16.7-10.5-26.2s7.8-17.6 10.5-26.2c2.8-8.9 1.1-20.2 6.3-27.6s16.1-9.3 23.3-14.8 12.1-15.6 20.7-18.5c8.2-2.8 18.1 2.3 27.2 2.3s19-5.1 27.2-2.3c8.5 2.9 13.6 13.1 20.7 18.5s18.1 7.3 23.3 14.8 3.5 18.7 6.3 27.6c2.7 8.6 10.5 16.7 10.5 26.2s-7.8 17.6-10.5 26.2z"]]
};
exports.faWreath = faWreath;
var faWrench = {
  prefix: 'fad',
  iconName: 'wrench',
  icon: [512, 512, [], "f0ad", ["M322 280.47l-.26.26a144.62 144.62 0 0 1-90.3-90.64L18.09 403.41a64 64 0 0 0 90.5 90.5L322 280.49zM63.35 472.65a24 24 0 1 1 24-24 24 24 0 0 1-24 24z", "M469.69 246.2c-40 40-97.48 51-147.72 34.27l-.26.26a144.64 144.64 0 0 1-90.41-90.94l.13-.13c-16.54-50.17-5.6-107.71 34.13-147.4a144.38 144.38 0 0 1 136.91-38 12 12 0 0 1 5.67 20.19l-74.53 74.48 11.33 68L413 178.28l74.53-74.52a12 12 0 0 1 20.17 5.52 144 144 0 0 1-38.01 136.92z"]]
};
exports.faWrench = faWrench;
var faXRay = {
  prefix: 'fad',
  iconName: 'x-ray',
  icon: [640, 512, [], "f497", ["M624 448H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h608a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-448H16A16 16 0 0 0 0 16v32a16 16 0 0 0 16 16h608a16 16 0 0 0 16-16V16a16 16 0 0 0-16-16zM168 192a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h136v32H200a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h104v32h-64a48 48 0 1 0 48 48v-16h64v16a48 48 0 1 0 48-48h-64v-32h104a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H336v-32h136a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H336v-32h104a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H336v-24a8 8 0 0 0-8-8h-16a8 8 0 0 0-8 8v24H200a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h104v32zm72 192a16 16 0 1 1 16-16 16 16 0 0 1-16 16zm160-32a16 16 0 1 1-16 16 16 16 0 0 1 16-16z", "M240 352a16 16 0 1 0 16 16 16 16 0 0 0-16-16zm160 32a16 16 0 1 0-16-16 16 16 0 0 0 16 16zM64 64v384h512V64zm416 152a8 8 0 0 1-8 8H336v32h104a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H336v32h64a48 48 0 1 1-48 48v-16h-64v16a48 48 0 1 1-48-48h64v-32H200a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h104v-32H168a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h136v-32H200a8 8 0 0 1-8-8v-16a8 8 0 0 1 8-8h104v-24a8 8 0 0 1 8-8h16a8 8 0 0 1 8 8v24h104a8 8 0 0 1 8 8v16a8 8 0 0 1-8 8H336v32h136a8 8 0 0 1 8 8z"]]
};
exports.faXRay = faXRay;
var faYenSign = {
  prefix: 'fad',
  iconName: 'yen-sign',
  icon: [384, 512, [], "f157", ["M32.18 332v32a12 12 0 0 0 12 12h108v-56h-108a12 12 0 0 0-12 12zm308-12h-108v56h108a12 12 0 0 0 12-12v-32a12 12 0 0 0-12-12zm-296-64h88.17l-29.83-56H44.19a12 12 0 0 0-12 12v32a12 12 0 0 0 12 12zm296-56h-58.37L252 256h88.19a12 12 0 0 0 12-12v-32a12 12 0 0 0-12-12z", "M362 49.6L232.18 293.2V468a12 12 0 0 1-12 12h-56a12 12 0 0 1-12-12V293.2L22.39 49.6A12 12 0 0 1 33 32h65.2a12 12 0 0 1 10.8 6.7l55.4 113.2c14.5 34.7 27.1 71.9 27.1 71.9h1.3s12.6-37.2 27.1-71.9l55.4-113.2a12 12 0 0 1 10.8-6.7h65.3A12 12 0 0 1 362 49.6z"]]
};
exports.faYenSign = faYenSign;
var faYinYang = {
  prefix: 'fad',
  iconName: 'yin-yang',
  icon: [496, 512, [], "f6ad", ["M248,8C111,8,0,119,0,256S111,504,248,504a124,124,0,0,1,0-248A124,124,0,0,0,248,8Zm0,152a32,32,0,1,1,32-32A32,32,0,0,1,248,160Zm0,192a32,32,0,1,0,32,32A32,32,0,0,0,248,352Z", "M248,160a32,32,0,1,0-32-32A32,32,0,0,0,248,160ZM248,8a124,124,0,0,1,0,248,124,124,0,0,0,0,248c137,0,248-111,248-248S385,8,248,8Zm0,408a32,32,0,1,1,32-32A32,32,0,0,1,248,416Z"]]
};
exports.faYinYang = faYinYang;
var _iconsCache = {
  faAbacus: faAbacus,
  faAcorn: faAcorn,
  faAd: faAd,
  faAddressBook: faAddressBook,
  faAddressCard: faAddressCard,
  faAdjust: faAdjust,
  faAirFreshener: faAirFreshener,
  faAlarmClock: faAlarmClock,
  faAlarmExclamation: faAlarmExclamation,
  faAlarmPlus: faAlarmPlus,
  faAlarmSnooze: faAlarmSnooze,
  faAlbum: faAlbum,
  faAlbumCollection: faAlbumCollection,
  faAlicorn: faAlicorn,
  faAlignCenter: faAlignCenter,
  faAlignJustify: faAlignJustify,
  faAlignLeft: faAlignLeft,
  faAlignRight: faAlignRight,
  faAlignSlash: faAlignSlash,
  faAllergies: faAllergies,
  faAmbulance: faAmbulance,
  faAmericanSignLanguageInterpreting: faAmericanSignLanguageInterpreting,
  faAmpGuitar: faAmpGuitar,
  faAnalytics: faAnalytics,
  faAnchor: faAnchor,
  faAngel: faAngel,
  faAngleDoubleDown: faAngleDoubleDown,
  faAngleDoubleLeft: faAngleDoubleLeft,
  faAngleDoubleRight: faAngleDoubleRight,
  faAngleDoubleUp: faAngleDoubleUp,
  faAngleDown: faAngleDown,
  faAngleLeft: faAngleLeft,
  faAngleRight: faAngleRight,
  faAngleUp: faAngleUp,
  faAngry: faAngry,
  faAnkh: faAnkh,
  faAppleAlt: faAppleAlt,
  faAppleCrate: faAppleCrate,
  faArchive: faArchive,
  faArchway: faArchway,
  faArrowAltCircleDown: faArrowAltCircleDown,
  faArrowAltCircleLeft: faArrowAltCircleLeft,
  faArrowAltCircleRight: faArrowAltCircleRight,
  faArrowAltCircleUp: faArrowAltCircleUp,
  faArrowAltDown: faArrowAltDown,
  faArrowAltFromBottom: faArrowAltFromBottom,
  faArrowAltFromLeft: faArrowAltFromLeft,
  faArrowAltFromRight: faArrowAltFromRight,
  faArrowAltFromTop: faArrowAltFromTop,
  faArrowAltLeft: faArrowAltLeft,
  faArrowAltRight: faArrowAltRight,
  faArrowAltSquareDown: faArrowAltSquareDown,
  faArrowAltSquareLeft: faArrowAltSquareLeft,
  faArrowAltSquareRight: faArrowAltSquareRight,
  faArrowAltSquareUp: faArrowAltSquareUp,
  faArrowAltToBottom: faArrowAltToBottom,
  faArrowAltToLeft: faArrowAltToLeft,
  faArrowAltToRight: faArrowAltToRight,
  faArrowAltToTop: faArrowAltToTop,
  faArrowAltUp: faArrowAltUp,
  faArrowCircleDown: faArrowCircleDown,
  faArrowCircleLeft: faArrowCircleLeft,
  faArrowCircleRight: faArrowCircleRight,
  faArrowCircleUp: faArrowCircleUp,
  faArrowDown: faArrowDown,
  faArrowFromBottom: faArrowFromBottom,
  faArrowFromLeft: faArrowFromLeft,
  faArrowFromRight: faArrowFromRight,
  faArrowFromTop: faArrowFromTop,
  faArrowLeft: faArrowLeft,
  faArrowRight: faArrowRight,
  faArrowSquareDown: faArrowSquareDown,
  faArrowSquareLeft: faArrowSquareLeft,
  faArrowSquareRight: faArrowSquareRight,
  faArrowSquareUp: faArrowSquareUp,
  faArrowToBottom: faArrowToBottom,
  faArrowToLeft: faArrowToLeft,
  faArrowToRight: faArrowToRight,
  faArrowToTop: faArrowToTop,
  faArrowUp: faArrowUp,
  faArrows: faArrows,
  faArrowsAlt: faArrowsAlt,
  faArrowsAltH: faArrowsAltH,
  faArrowsAltV: faArrowsAltV,
  faArrowsH: faArrowsH,
  faArrowsV: faArrowsV,
  faAssistiveListeningSystems: faAssistiveListeningSystems,
  faAsterisk: faAsterisk,
  faAt: faAt,
  faAtlas: faAtlas,
  faAtom: faAtom,
  faAtomAlt: faAtomAlt,
  faAudioDescription: faAudioDescription,
  faAward: faAward,
  faAxe: faAxe,
  faAxeBattle: faAxeBattle,
  faBaby: faBaby,
  faBabyCarriage: faBabyCarriage,
  faBackpack: faBackpack,
  faBackspace: faBackspace,
  faBackward: faBackward,
  faBacon: faBacon,
  faBadge: faBadge,
  faBadgeCheck: faBadgeCheck,
  faBadgeDollar: faBadgeDollar,
  faBadgePercent: faBadgePercent,
  faBadgeSheriff: faBadgeSheriff,
  faBadgerHoney: faBadgerHoney,
  faBagsShopping: faBagsShopping,
  faBalanceScale: faBalanceScale,
  faBalanceScaleLeft: faBalanceScaleLeft,
  faBalanceScaleRight: faBalanceScaleRight,
  faBallPile: faBallPile,
  faBallot: faBallot,
  faBallotCheck: faBallotCheck,
  faBan: faBan,
  faBandAid: faBandAid,
  faBanjo: faBanjo,
  faBarcode: faBarcode,
  faBarcodeAlt: faBarcodeAlt,
  faBarcodeRead: faBarcodeRead,
  faBarcodeScan: faBarcodeScan,
  faBars: faBars,
  faBaseball: faBaseball,
  faBaseballBall: faBaseballBall,
  faBasketballBall: faBasketballBall,
  faBasketballHoop: faBasketballHoop,
  faBat: faBat,
  faBath: faBath,
  faBatteryBolt: faBatteryBolt,
  faBatteryEmpty: faBatteryEmpty,
  faBatteryFull: faBatteryFull,
  faBatteryHalf: faBatteryHalf,
  faBatteryQuarter: faBatteryQuarter,
  faBatterySlash: faBatterySlash,
  faBatteryThreeQuarters: faBatteryThreeQuarters,
  faBed: faBed,
  faBeer: faBeer,
  faBell: faBell,
  faBellExclamation: faBellExclamation,
  faBellPlus: faBellPlus,
  faBellSchool: faBellSchool,
  faBellSchoolSlash: faBellSchoolSlash,
  faBellSlash: faBellSlash,
  faBells: faBells,
  faBetamax: faBetamax,
  faBezierCurve: faBezierCurve,
  faBible: faBible,
  faBicycle: faBicycle,
  faBiking: faBiking,
  faBikingMountain: faBikingMountain,
  faBinoculars: faBinoculars,
  faBiohazard: faBiohazard,
  faBirthdayCake: faBirthdayCake,
  faBlanket: faBlanket,
  faBlender: faBlender,
  faBlenderPhone: faBlenderPhone,
  faBlind: faBlind,
  faBlog: faBlog,
  faBold: faBold,
  faBolt: faBolt,
  faBomb: faBomb,
  faBone: faBone,
  faBoneBreak: faBoneBreak,
  faBong: faBong,
  faBook: faBook,
  faBookAlt: faBookAlt,
  faBookDead: faBookDead,
  faBookHeart: faBookHeart,
  faBookMedical: faBookMedical,
  faBookOpen: faBookOpen,
  faBookReader: faBookReader,
  faBookSpells: faBookSpells,
  faBookUser: faBookUser,
  faBookmark: faBookmark,
  faBooks: faBooks,
  faBooksMedical: faBooksMedical,
  faBoombox: faBoombox,
  faBoot: faBoot,
  faBoothCurtain: faBoothCurtain,
  faBorderAll: faBorderAll,
  faBorderBottom: faBorderBottom,
  faBorderCenterH: faBorderCenterH,
  faBorderCenterV: faBorderCenterV,
  faBorderInner: faBorderInner,
  faBorderLeft: faBorderLeft,
  faBorderNone: faBorderNone,
  faBorderOuter: faBorderOuter,
  faBorderRight: faBorderRight,
  faBorderStyle: faBorderStyle,
  faBorderStyleAlt: faBorderStyleAlt,
  faBorderTop: faBorderTop,
  faBowArrow: faBowArrow,
  faBowlingBall: faBowlingBall,
  faBowlingPins: faBowlingPins,
  faBox: faBox,
  faBoxAlt: faBoxAlt,
  faBoxBallot: faBoxBallot,
  faBoxCheck: faBoxCheck,
  faBoxFragile: faBoxFragile,
  faBoxFull: faBoxFull,
  faBoxHeart: faBoxHeart,
  faBoxOpen: faBoxOpen,
  faBoxUp: faBoxUp,
  faBoxUsd: faBoxUsd,
  faBoxes: faBoxes,
  faBoxesAlt: faBoxesAlt,
  faBoxingGlove: faBoxingGlove,
  faBrackets: faBrackets,
  faBracketsCurly: faBracketsCurly,
  faBraille: faBraille,
  faBrain: faBrain,
  faBreadLoaf: faBreadLoaf,
  faBreadSlice: faBreadSlice,
  faBriefcase: faBriefcase,
  faBriefcaseMedical: faBriefcaseMedical,
  faBringForward: faBringForward,
  faBringFront: faBringFront,
  faBroadcastTower: faBroadcastTower,
  faBroom: faBroom,
  faBrowser: faBrowser,
  faBrush: faBrush,
  faBug: faBug,
  faBuilding: faBuilding,
  faBullhorn: faBullhorn,
  faBullseye: faBullseye,
  faBullseyeArrow: faBullseyeArrow,
  faBullseyePointer: faBullseyePointer,
  faBurgerSoda: faBurgerSoda,
  faBurn: faBurn,
  faBurrito: faBurrito,
  faBus: faBus,
  faBusAlt: faBusAlt,
  faBusSchool: faBusSchool,
  faBusinessTime: faBusinessTime,
  faCabinetFiling: faCabinetFiling,
  faCactus: faCactus,
  faCalculator: faCalculator,
  faCalculatorAlt: faCalculatorAlt,
  faCalendar: faCalendar,
  faCalendarAlt: faCalendarAlt,
  faCalendarCheck: faCalendarCheck,
  faCalendarDay: faCalendarDay,
  faCalendarEdit: faCalendarEdit,
  faCalendarExclamation: faCalendarExclamation,
  faCalendarMinus: faCalendarMinus,
  faCalendarPlus: faCalendarPlus,
  faCalendarStar: faCalendarStar,
  faCalendarTimes: faCalendarTimes,
  faCalendarWeek: faCalendarWeek,
  faCamcorder: faCamcorder,
  faCamera: faCamera,
  faCameraAlt: faCameraAlt,
  faCameraMovie: faCameraMovie,
  faCameraPolaroid: faCameraPolaroid,
  faCameraRetro: faCameraRetro,
  faCampfire: faCampfire,
  faCampground: faCampground,
  faCandleHolder: faCandleHolder,
  faCandyCane: faCandyCane,
  faCandyCorn: faCandyCorn,
  faCannabis: faCannabis,
  faCapsules: faCapsules,
  faCar: faCar,
  faCarAlt: faCarAlt,
  faCarBattery: faCarBattery,
  faCarBuilding: faCarBuilding,
  faCarBump: faCarBump,
  faCarBus: faCarBus,
  faCarCrash: faCarCrash,
  faCarGarage: faCarGarage,
  faCarMechanic: faCarMechanic,
  faCarSide: faCarSide,
  faCarTilt: faCarTilt,
  faCarWash: faCarWash,
  faCaretCircleDown: faCaretCircleDown,
  faCaretCircleLeft: faCaretCircleLeft,
  faCaretCircleRight: faCaretCircleRight,
  faCaretCircleUp: faCaretCircleUp,
  faCaretDown: faCaretDown,
  faCaretLeft: faCaretLeft,
  faCaretRight: faCaretRight,
  faCaretSquareDown: faCaretSquareDown,
  faCaretSquareLeft: faCaretSquareLeft,
  faCaretSquareRight: faCaretSquareRight,
  faCaretSquareUp: faCaretSquareUp,
  faCaretUp: faCaretUp,
  faCarrot: faCarrot,
  faCars: faCars,
  faCartArrowDown: faCartArrowDown,
  faCartPlus: faCartPlus,
  faCashRegister: faCashRegister,
  faCassetteTape: faCassetteTape,
  faCat: faCat,
  faCauldron: faCauldron,
  faCctv: faCctv,
  faCertificate: faCertificate,
  faChair: faChair,
  faChairOffice: faChairOffice,
  faChalkboard: faChalkboard,
  faChalkboardTeacher: faChalkboardTeacher,
  faChargingStation: faChargingStation,
  faChartArea: faChartArea,
  faChartBar: faChartBar,
  faChartLine: faChartLine,
  faChartLineDown: faChartLineDown,
  faChartNetwork: faChartNetwork,
  faChartPie: faChartPie,
  faChartPieAlt: faChartPieAlt,
  faChartScatter: faChartScatter,
  faCheck: faCheck,
  faCheckCircle: faCheckCircle,
  faCheckDouble: faCheckDouble,
  faCheckSquare: faCheckSquare,
  faCheese: faCheese,
  faCheeseSwiss: faCheeseSwiss,
  faCheeseburger: faCheeseburger,
  faChess: faChess,
  faChessBishop: faChessBishop,
  faChessBishopAlt: faChessBishopAlt,
  faChessBoard: faChessBoard,
  faChessClock: faChessClock,
  faChessClockAlt: faChessClockAlt,
  faChessKing: faChessKing,
  faChessKingAlt: faChessKingAlt,
  faChessKnight: faChessKnight,
  faChessKnightAlt: faChessKnightAlt,
  faChessPawn: faChessPawn,
  faChessPawnAlt: faChessPawnAlt,
  faChessQueen: faChessQueen,
  faChessQueenAlt: faChessQueenAlt,
  faChessRook: faChessRook,
  faChessRookAlt: faChessRookAlt,
  faChevronCircleDown: faChevronCircleDown,
  faChevronCircleLeft: faChevronCircleLeft,
  faChevronCircleRight: faChevronCircleRight,
  faChevronCircleUp: faChevronCircleUp,
  faChevronDoubleDown: faChevronDoubleDown,
  faChevronDoubleLeft: faChevronDoubleLeft,
  faChevronDoubleRight: faChevronDoubleRight,
  faChevronDoubleUp: faChevronDoubleUp,
  faChevronDown: faChevronDown,
  faChevronLeft: faChevronLeft,
  faChevronRight: faChevronRight,
  faChevronSquareDown: faChevronSquareDown,
  faChevronSquareLeft: faChevronSquareLeft,
  faChevronSquareRight: faChevronSquareRight,
  faChevronSquareUp: faChevronSquareUp,
  faChevronUp: faChevronUp,
  faChild: faChild,
  faChimney: faChimney,
  faChurch: faChurch,
  faCircle: faCircle,
  faCircleNotch: faCircleNotch,
  faCity: faCity,
  faClarinet: faClarinet,
  faClawMarks: faClawMarks,
  faClinicMedical: faClinicMedical,
  faClipboard: faClipboard,
  faClipboardCheck: faClipboardCheck,
  faClipboardList: faClipboardList,
  faClipboardListCheck: faClipboardListCheck,
  faClipboardPrescription: faClipboardPrescription,
  faClipboardUser: faClipboardUser,
  faClock: faClock,
  faClone: faClone,
  faClosedCaptioning: faClosedCaptioning,
  faCloud: faCloud,
  faCloudDownload: faCloudDownload,
  faCloudDownloadAlt: faCloudDownloadAlt,
  faCloudDrizzle: faCloudDrizzle,
  faCloudHail: faCloudHail,
  faCloudHailMixed: faCloudHailMixed,
  faCloudMeatball: faCloudMeatball,
  faCloudMoon: faCloudMoon,
  faCloudMoonRain: faCloudMoonRain,
  faCloudMusic: faCloudMusic,
  faCloudRain: faCloudRain,
  faCloudRainbow: faCloudRainbow,
  faCloudShowers: faCloudShowers,
  faCloudShowersHeavy: faCloudShowersHeavy,
  faCloudSleet: faCloudSleet,
  faCloudSnow: faCloudSnow,
  faCloudSun: faCloudSun,
  faCloudSunRain: faCloudSunRain,
  faCloudUpload: faCloudUpload,
  faCloudUploadAlt: faCloudUploadAlt,
  faClouds: faClouds,
  faCloudsMoon: faCloudsMoon,
  faCloudsSun: faCloudsSun,
  faClub: faClub,
  faCocktail: faCocktail,
  faCode: faCode,
  faCodeBranch: faCodeBranch,
  faCodeCommit: faCodeCommit,
  faCodeMerge: faCodeMerge,
  faCoffee: faCoffee,
  faCoffeeTogo: faCoffeeTogo,
  faCoffin: faCoffin,
  faCog: faCog,
  faCogs: faCogs,
  faCoin: faCoin,
  faCoins: faCoins,
  faColumns: faColumns,
  faComment: faComment,
  faCommentAlt: faCommentAlt,
  faCommentAltCheck: faCommentAltCheck,
  faCommentAltDollar: faCommentAltDollar,
  faCommentAltDots: faCommentAltDots,
  faCommentAltEdit: faCommentAltEdit,
  faCommentAltExclamation: faCommentAltExclamation,
  faCommentAltLines: faCommentAltLines,
  faCommentAltMedical: faCommentAltMedical,
  faCommentAltMinus: faCommentAltMinus,
  faCommentAltMusic: faCommentAltMusic,
  faCommentAltPlus: faCommentAltPlus,
  faCommentAltSlash: faCommentAltSlash,
  faCommentAltSmile: faCommentAltSmile,
  faCommentAltTimes: faCommentAltTimes,
  faCommentCheck: faCommentCheck,
  faCommentDollar: faCommentDollar,
  faCommentDots: faCommentDots,
  faCommentEdit: faCommentEdit,
  faCommentExclamation: faCommentExclamation,
  faCommentLines: faCommentLines,
  faCommentMedical: faCommentMedical,
  faCommentMinus: faCommentMinus,
  faCommentMusic: faCommentMusic,
  faCommentPlus: faCommentPlus,
  faCommentSlash: faCommentSlash,
  faCommentSmile: faCommentSmile,
  faCommentTimes: faCommentTimes,
  faComments: faComments,
  faCommentsAlt: faCommentsAlt,
  faCommentsAltDollar: faCommentsAltDollar,
  faCommentsDollar: faCommentsDollar,
  faCompactDisc: faCompactDisc,
  faCompass: faCompass,
  faCompassSlash: faCompassSlash,
  faCompress: faCompress,
  faCompressAlt: faCompressAlt,
  faCompressArrowsAlt: faCompressArrowsAlt,
  faCompressWide: faCompressWide,
  faComputerClassic: faComputerClassic,
  faComputerSpeaker: faComputerSpeaker,
  faConciergeBell: faConciergeBell,
  faConstruction: faConstruction,
  faContainerStorage: faContainerStorage,
  faConveyorBelt: faConveyorBelt,
  faConveyorBeltAlt: faConveyorBeltAlt,
  faCookie: faCookie,
  faCookieBite: faCookieBite,
  faCopy: faCopy,
  faCopyright: faCopyright,
  faCorn: faCorn,
  faCouch: faCouch,
  faCow: faCow,
  faCowbell: faCowbell,
  faCowbellMore: faCowbellMore,
  faCreditCard: faCreditCard,
  faCreditCardBlank: faCreditCardBlank,
  faCreditCardFront: faCreditCardFront,
  faCricket: faCricket,
  faCroissant: faCroissant,
  faCrop: faCrop,
  faCropAlt: faCropAlt,
  faCross: faCross,
  faCrosshairs: faCrosshairs,
  faCrow: faCrow,
  faCrown: faCrown,
  faCrutch: faCrutch,
  faCrutches: faCrutches,
  faCube: faCube,
  faCubes: faCubes,
  faCurling: faCurling,
  faCut: faCut,
  faDagger: faDagger,
  faDatabase: faDatabase,
  faDeaf: faDeaf,
  faDebug: faDebug,
  faDeer: faDeer,
  faDeerRudolph: faDeerRudolph,
  faDemocrat: faDemocrat,
  faDesktop: faDesktop,
  faDesktopAlt: faDesktopAlt,
  faDewpoint: faDewpoint,
  faDharmachakra: faDharmachakra,
  faDiagnoses: faDiagnoses,
  faDiamond: faDiamond,
  faDice: faDice,
  faDiceD10: faDiceD10,
  faDiceD12: faDiceD12,
  faDiceD20: faDiceD20,
  faDiceD4: faDiceD4,
  faDiceD6: faDiceD6,
  faDiceD8: faDiceD8,
  faDiceFive: faDiceFive,
  faDiceFour: faDiceFour,
  faDiceOne: faDiceOne,
  faDiceSix: faDiceSix,
  faDiceThree: faDiceThree,
  faDiceTwo: faDiceTwo,
  faDigging: faDigging,
  faDigitalTachograph: faDigitalTachograph,
  faDiploma: faDiploma,
  faDirections: faDirections,
  faDiscDrive: faDiscDrive,
  faDisease: faDisease,
  faDivide: faDivide,
  faDizzy: faDizzy,
  faDna: faDna,
  faDoNotEnter: faDoNotEnter,
  faDog: faDog,
  faDogLeashed: faDogLeashed,
  faDollarSign: faDollarSign,
  faDolly: faDolly,
  faDollyEmpty: faDollyEmpty,
  faDollyFlatbed: faDollyFlatbed,
  faDollyFlatbedAlt: faDollyFlatbedAlt,
  faDollyFlatbedEmpty: faDollyFlatbedEmpty,
  faDonate: faDonate,
  faDoorClosed: faDoorClosed,
  faDoorOpen: faDoorOpen,
  faDotCircle: faDotCircle,
  faDove: faDove,
  faDownload: faDownload,
  faDraftingCompass: faDraftingCompass,
  faDragon: faDragon,
  faDrawCircle: faDrawCircle,
  faDrawPolygon: faDrawPolygon,
  faDrawSquare: faDrawSquare,
  faDreidel: faDreidel,
  faDrone: faDrone,
  faDroneAlt: faDroneAlt,
  faDrum: faDrum,
  faDrumSteelpan: faDrumSteelpan,
  faDrumstick: faDrumstick,
  faDrumstickBite: faDrumstickBite,
  faDryer: faDryer,
  faDryerAlt: faDryerAlt,
  faDuck: faDuck,
  faDumbbell: faDumbbell,
  faDumpster: faDumpster,
  faDumpsterFire: faDumpsterFire,
  faDungeon: faDungeon,
  faEar: faEar,
  faEarMuffs: faEarMuffs,
  faEclipse: faEclipse,
  faEclipseAlt: faEclipseAlt,
  faEdit: faEdit,
  faEgg: faEgg,
  faEggFried: faEggFried,
  faEject: faEject,
  faElephant: faElephant,
  faEllipsisH: faEllipsisH,
  faEllipsisHAlt: faEllipsisHAlt,
  faEllipsisV: faEllipsisV,
  faEllipsisVAlt: faEllipsisVAlt,
  faEmptySet: faEmptySet,
  faEngineWarning: faEngineWarning,
  faEnvelope: faEnvelope,
  faEnvelopeOpen: faEnvelopeOpen,
  faEnvelopeOpenDollar: faEnvelopeOpenDollar,
  faEnvelopeOpenText: faEnvelopeOpenText,
  faEnvelopeSquare: faEnvelopeSquare,
  faEquals: faEquals,
  faEraser: faEraser,
  faEthernet: faEthernet,
  faEuroSign: faEuroSign,
  faExchange: faExchange,
  faExchangeAlt: faExchangeAlt,
  faExclamation: faExclamation,
  faExclamationCircle: faExclamationCircle,
  faExclamationSquare: faExclamationSquare,
  faExclamationTriangle: faExclamationTriangle,
  faExpand: faExpand,
  faExpandAlt: faExpandAlt,
  faExpandArrows: faExpandArrows,
  faExpandArrowsAlt: faExpandArrowsAlt,
  faExpandWide: faExpandWide,
  faExternalLink: faExternalLink,
  faExternalLinkAlt: faExternalLinkAlt,
  faExternalLinkSquare: faExternalLinkSquare,
  faExternalLinkSquareAlt: faExternalLinkSquareAlt,
  faEye: faEye,
  faEyeDropper: faEyeDropper,
  faEyeEvil: faEyeEvil,
  faEyeSlash: faEyeSlash,
  faFan: faFan,
  faFarm: faFarm,
  faFastBackward: faFastBackward,
  faFastForward: faFastForward,
  faFax: faFax,
  faFeather: faFeather,
  faFeatherAlt: faFeatherAlt,
  faFemale: faFemale,
  faFieldHockey: faFieldHockey,
  faFighterJet: faFighterJet,
  faFile: faFile,
  faFileAlt: faFileAlt,
  faFileArchive: faFileArchive,
  faFileAudio: faFileAudio,
  faFileCertificate: faFileCertificate,
  faFileChartLine: faFileChartLine,
  faFileChartPie: faFileChartPie,
  faFileCheck: faFileCheck,
  faFileCode: faFileCode,
  faFileContract: faFileContract,
  faFileCsv: faFileCsv,
  faFileDownload: faFileDownload,
  faFileEdit: faFileEdit,
  faFileExcel: faFileExcel,
  faFileExclamation: faFileExclamation,
  faFileExport: faFileExport,
  faFileImage: faFileImage,
  faFileImport: faFileImport,
  faFileInvoice: faFileInvoice,
  faFileInvoiceDollar: faFileInvoiceDollar,
  faFileMedical: faFileMedical,
  faFileMedicalAlt: faFileMedicalAlt,
  faFileMinus: faFileMinus,
  faFileMusic: faFileMusic,
  faFilePdf: faFilePdf,
  faFilePlus: faFilePlus,
  faFilePowerpoint: faFilePowerpoint,
  faFilePrescription: faFilePrescription,
  faFileSearch: faFileSearch,
  faFileSignature: faFileSignature,
  faFileSpreadsheet: faFileSpreadsheet,
  faFileTimes: faFileTimes,
  faFileUpload: faFileUpload,
  faFileUser: faFileUser,
  faFileVideo: faFileVideo,
  faFileWord: faFileWord,
  faFilesMedical: faFilesMedical,
  faFill: faFill,
  faFillDrip: faFillDrip,
  faFilm: faFilm,
  faFilmAlt: faFilmAlt,
  faFilmCanister: faFilmCanister,
  faFilter: faFilter,
  faFingerprint: faFingerprint,
  faFire: faFire,
  faFireAlt: faFireAlt,
  faFireExtinguisher: faFireExtinguisher,
  faFireSmoke: faFireSmoke,
  faFireplace: faFireplace,
  faFirstAid: faFirstAid,
  faFish: faFish,
  faFishCooked: faFishCooked,
  faFistRaised: faFistRaised,
  faFlag: faFlag,
  faFlagAlt: faFlagAlt,
  faFlagCheckered: faFlagCheckered,
  faFlagUsa: faFlagUsa,
  faFlame: faFlame,
  faFlashlight: faFlashlight,
  faFlask: faFlask,
  faFlaskPoison: faFlaskPoison,
  faFlaskPotion: faFlaskPotion,
  faFlower: faFlower,
  faFlowerDaffodil: faFlowerDaffodil,
  faFlowerTulip: faFlowerTulip,
  faFlushed: faFlushed,
  faFlute: faFlute,
  faFluxCapacitor: faFluxCapacitor,
  faFog: faFog,
  faFolder: faFolder,
  faFolderMinus: faFolderMinus,
  faFolderOpen: faFolderOpen,
  faFolderPlus: faFolderPlus,
  faFolderTimes: faFolderTimes,
  faFolderTree: faFolderTree,
  faFolders: faFolders,
  faFont: faFont,
  faFontAwesomeLogoFull: faFontAwesomeLogoFull,
  faFontCase: faFontCase,
  faFootballBall: faFootballBall,
  faFootballHelmet: faFootballHelmet,
  faForklift: faForklift,
  faForward: faForward,
  faFragile: faFragile,
  faFrenchFries: faFrenchFries,
  faFrog: faFrog,
  faFrostyHead: faFrostyHead,
  faFrown: faFrown,
  faFrownOpen: faFrownOpen,
  faFunction: faFunction,
  faFunnelDollar: faFunnelDollar,
  faFutbol: faFutbol,
  faGameBoard: faGameBoard,
  faGameBoardAlt: faGameBoardAlt,
  faGameConsoleHandheld: faGameConsoleHandheld,
  faGamepad: faGamepad,
  faGamepadAlt: faGamepadAlt,
  faGasPump: faGasPump,
  faGasPumpSlash: faGasPumpSlash,
  faGavel: faGavel,
  faGem: faGem,
  faGenderless: faGenderless,
  faGhost: faGhost,
  faGift: faGift,
  faGiftCard: faGiftCard,
  faGifts: faGifts,
  faGingerbreadMan: faGingerbreadMan,
  faGlass: faGlass,
  faGlassChampagne: faGlassChampagne,
  faGlassCheers: faGlassCheers,
  faGlassCitrus: faGlassCitrus,
  faGlassMartini: faGlassMartini,
  faGlassMartiniAlt: faGlassMartiniAlt,
  faGlassWhiskey: faGlassWhiskey,
  faGlassWhiskeyRocks: faGlassWhiskeyRocks,
  faGlasses: faGlasses,
  faGlassesAlt: faGlassesAlt,
  faGlobe: faGlobe,
  faGlobeAfrica: faGlobeAfrica,
  faGlobeAmericas: faGlobeAmericas,
  faGlobeAsia: faGlobeAsia,
  faGlobeEurope: faGlobeEurope,
  faGlobeSnow: faGlobeSnow,
  faGlobeStand: faGlobeStand,
  faGolfBall: faGolfBall,
  faGolfClub: faGolfClub,
  faGopuram: faGopuram,
  faGraduationCap: faGraduationCap,
  faGramophone: faGramophone,
  faGreaterThan: faGreaterThan,
  faGreaterThanEqual: faGreaterThanEqual,
  faGrimace: faGrimace,
  faGrin: faGrin,
  faGrinAlt: faGrinAlt,
  faGrinBeam: faGrinBeam,
  faGrinBeamSweat: faGrinBeamSweat,
  faGrinHearts: faGrinHearts,
  faGrinSquint: faGrinSquint,
  faGrinSquintTears: faGrinSquintTears,
  faGrinStars: faGrinStars,
  faGrinTears: faGrinTears,
  faGrinTongue: faGrinTongue,
  faGrinTongueSquint: faGrinTongueSquint,
  faGrinTongueWink: faGrinTongueWink,
  faGrinWink: faGrinWink,
  faGripHorizontal: faGripHorizontal,
  faGripLines: faGripLines,
  faGripLinesVertical: faGripLinesVertical,
  faGripVertical: faGripVertical,
  faGuitar: faGuitar,
  faGuitarElectric: faGuitarElectric,
  faGuitars: faGuitars,
  faHSquare: faHSquare,
  faH1: faH1,
  faH2: faH2,
  faH3: faH3,
  faH4: faH4,
  faHamburger: faHamburger,
  faHammer: faHammer,
  faHammerWar: faHammerWar,
  faHamsa: faHamsa,
  faHandHeart: faHandHeart,
  faHandHolding: faHandHolding,
  faHandHoldingBox: faHandHoldingBox,
  faHandHoldingHeart: faHandHoldingHeart,
  faHandHoldingMagic: faHandHoldingMagic,
  faHandHoldingSeedling: faHandHoldingSeedling,
  faHandHoldingUsd: faHandHoldingUsd,
  faHandHoldingWater: faHandHoldingWater,
  faHandLizard: faHandLizard,
  faHandMiddleFinger: faHandMiddleFinger,
  faHandPaper: faHandPaper,
  faHandPeace: faHandPeace,
  faHandPointDown: faHandPointDown,
  faHandPointLeft: faHandPointLeft,
  faHandPointRight: faHandPointRight,
  faHandPointUp: faHandPointUp,
  faHandPointer: faHandPointer,
  faHandReceiving: faHandReceiving,
  faHandRock: faHandRock,
  faHandScissors: faHandScissors,
  faHandSpock: faHandSpock,
  faHands: faHands,
  faHandsHeart: faHandsHeart,
  faHandsHelping: faHandsHelping,
  faHandsUsd: faHandsUsd,
  faHandshake: faHandshake,
  faHandshakeAlt: faHandshakeAlt,
  faHanukiah: faHanukiah,
  faHardHat: faHardHat,
  faHashtag: faHashtag,
  faHatChef: faHatChef,
  faHatCowboy: faHatCowboy,
  faHatCowboySide: faHatCowboySide,
  faHatSanta: faHatSanta,
  faHatWinter: faHatWinter,
  faHatWitch: faHatWitch,
  faHatWizard: faHatWizard,
  faHaykal: faHaykal,
  faHdd: faHdd,
  faHeadSide: faHeadSide,
  faHeadSideBrain: faHeadSideBrain,
  faHeadSideHeadphones: faHeadSideHeadphones,
  faHeadSideMedical: faHeadSideMedical,
  faHeadVr: faHeadVr,
  faHeading: faHeading,
  faHeadphones: faHeadphones,
  faHeadphonesAlt: faHeadphonesAlt,
  faHeadset: faHeadset,
  faHeart: faHeart,
  faHeartBroken: faHeartBroken,
  faHeartCircle: faHeartCircle,
  faHeartRate: faHeartRate,
  faHeartSquare: faHeartSquare,
  faHeartbeat: faHeartbeat,
  faHelicopter: faHelicopter,
  faHelmetBattle: faHelmetBattle,
  faHexagon: faHexagon,
  faHighlighter: faHighlighter,
  faHiking: faHiking,
  faHippo: faHippo,
  faHistory: faHistory,
  faHockeyMask: faHockeyMask,
  faHockeyPuck: faHockeyPuck,
  faHockeySticks: faHockeySticks,
  faHollyBerry: faHollyBerry,
  faHome: faHome,
  faHomeAlt: faHomeAlt,
  faHomeHeart: faHomeHeart,
  faHomeLg: faHomeLg,
  faHomeLgAlt: faHomeLgAlt,
  faHoodCloak: faHoodCloak,
  faHorizontalRule: faHorizontalRule,
  faHorse: faHorse,
  faHorseHead: faHorseHead,
  faHorseSaddle: faHorseSaddle,
  faHospital: faHospital,
  faHospitalAlt: faHospitalAlt,
  faHospitalSymbol: faHospitalSymbol,
  faHospitalUser: faHospitalUser,
  faHospitals: faHospitals,
  faHotTub: faHotTub,
  faHotdog: faHotdog,
  faHotel: faHotel,
  faHourglass: faHourglass,
  faHourglassEnd: faHourglassEnd,
  faHourglassHalf: faHourglassHalf,
  faHourglassStart: faHourglassStart,
  faHouseDamage: faHouseDamage,
  faHouseFlood: faHouseFlood,
  faHryvnia: faHryvnia,
  faHumidity: faHumidity,
  faHurricane: faHurricane,
  faICursor: faICursor,
  faIceCream: faIceCream,
  faIceSkate: faIceSkate,
  faIcicles: faIcicles,
  faIcons: faIcons,
  faIconsAlt: faIconsAlt,
  faIdBadge: faIdBadge,
  faIdCard: faIdCard,
  faIdCardAlt: faIdCardAlt,
  faIgloo: faIgloo,
  faImage: faImage,
  faImagePolaroid: faImagePolaroid,
  faImages: faImages,
  faInbox: faInbox,
  faInboxIn: faInboxIn,
  faInboxOut: faInboxOut,
  faIndent: faIndent,
  faIndustry: faIndustry,
  faIndustryAlt: faIndustryAlt,
  faInfinity: faInfinity,
  faInfo: faInfo,
  faInfoCircle: faInfoCircle,
  faInfoSquare: faInfoSquare,
  faInhaler: faInhaler,
  faIntegral: faIntegral,
  faIntersection: faIntersection,
  faInventory: faInventory,
  faIslandTropical: faIslandTropical,
  faItalic: faItalic,
  faJackOLantern: faJackOLantern,
  faJedi: faJedi,
  faJoint: faJoint,
  faJournalWhills: faJournalWhills,
  faJoystick: faJoystick,
  faJug: faJug,
  faKaaba: faKaaba,
  faKazoo: faKazoo,
  faKerning: faKerning,
  faKey: faKey,
  faKeySkeleton: faKeySkeleton,
  faKeyboard: faKeyboard,
  faKeynote: faKeynote,
  faKhanda: faKhanda,
  faKidneys: faKidneys,
  faKiss: faKiss,
  faKissBeam: faKissBeam,
  faKissWinkHeart: faKissWinkHeart,
  faKite: faKite,
  faKiwiBird: faKiwiBird,
  faKnifeKitchen: faKnifeKitchen,
  faLambda: faLambda,
  faLamp: faLamp,
  faLandmark: faLandmark,
  faLandmarkAlt: faLandmarkAlt,
  faLanguage: faLanguage,
  faLaptop: faLaptop,
  faLaptopCode: faLaptopCode,
  faLaptopMedical: faLaptopMedical,
  faLasso: faLasso,
  faLaugh: faLaugh,
  faLaughBeam: faLaughBeam,
  faLaughSquint: faLaughSquint,
  faLaughWink: faLaughWink,
  faLayerGroup: faLayerGroup,
  faLayerMinus: faLayerMinus,
  faLayerPlus: faLayerPlus,
  faLeaf: faLeaf,
  faLeafHeart: faLeafHeart,
  faLeafMaple: faLeafMaple,
  faLeafOak: faLeafOak,
  faLemon: faLemon,
  faLessThan: faLessThan,
  faLessThanEqual: faLessThanEqual,
  faLevelDown: faLevelDown,
  faLevelDownAlt: faLevelDownAlt,
  faLevelUp: faLevelUp,
  faLevelUpAlt: faLevelUpAlt,
  faLifeRing: faLifeRing,
  faLightbulb: faLightbulb,
  faLightbulbDollar: faLightbulbDollar,
  faLightbulbExclamation: faLightbulbExclamation,
  faLightbulbOn: faLightbulbOn,
  faLightbulbSlash: faLightbulbSlash,
  faLightsHoliday: faLightsHoliday,
  faLineColumns: faLineColumns,
  faLineHeight: faLineHeight,
  faLink: faLink,
  faLips: faLips,
  faLiraSign: faLiraSign,
  faList: faList,
  faListAlt: faListAlt,
  faListMusic: faListMusic,
  faListOl: faListOl,
  faListUl: faListUl,
  faLocation: faLocation,
  faLocationArrow: faLocationArrow,
  faLocationCircle: faLocationCircle,
  faLocationSlash: faLocationSlash,
  faLock: faLock,
  faLockAlt: faLockAlt,
  faLockOpen: faLockOpen,
  faLockOpenAlt: faLockOpenAlt,
  faLongArrowAltDown: faLongArrowAltDown,
  faLongArrowAltLeft: faLongArrowAltLeft,
  faLongArrowAltRight: faLongArrowAltRight,
  faLongArrowAltUp: faLongArrowAltUp,
  faLongArrowDown: faLongArrowDown,
  faLongArrowLeft: faLongArrowLeft,
  faLongArrowRight: faLongArrowRight,
  faLongArrowUp: faLongArrowUp,
  faLoveseat: faLoveseat,
  faLowVision: faLowVision,
  faLuchador: faLuchador,
  faLuggageCart: faLuggageCart,
  faLungs: faLungs,
  faMace: faMace,
  faMagic: faMagic,
  faMagnet: faMagnet,
  faMailBulk: faMailBulk,
  faMailbox: faMailbox,
  faMale: faMale,
  faMandolin: faMandolin,
  faMap: faMap,
  faMapMarked: faMapMarked,
  faMapMarkedAlt: faMapMarkedAlt,
  faMapMarker: faMapMarker,
  faMapMarkerAlt: faMapMarkerAlt,
  faMapMarkerAltSlash: faMapMarkerAltSlash,
  faMapMarkerCheck: faMapMarkerCheck,
  faMapMarkerEdit: faMapMarkerEdit,
  faMapMarkerExclamation: faMapMarkerExclamation,
  faMapMarkerMinus: faMapMarkerMinus,
  faMapMarkerPlus: faMapMarkerPlus,
  faMapMarkerQuestion: faMapMarkerQuestion,
  faMapMarkerSlash: faMapMarkerSlash,
  faMapMarkerSmile: faMapMarkerSmile,
  faMapMarkerTimes: faMapMarkerTimes,
  faMapPin: faMapPin,
  faMapSigns: faMapSigns,
  faMarker: faMarker,
  faMars: faMars,
  faMarsDouble: faMarsDouble,
  faMarsStroke: faMarsStroke,
  faMarsStrokeH: faMarsStrokeH,
  faMarsStrokeV: faMarsStrokeV,
  faMask: faMask,
  faMeat: faMeat,
  faMedal: faMedal,
  faMedkit: faMedkit,
  faMegaphone: faMegaphone,
  faMeh: faMeh,
  faMehBlank: faMehBlank,
  faMehRollingEyes: faMehRollingEyes,
  faMemory: faMemory,
  faMenorah: faMenorah,
  faMercury: faMercury,
  faMeteor: faMeteor,
  faMicrochip: faMicrochip,
  faMicrophone: faMicrophone,
  faMicrophoneAlt: faMicrophoneAlt,
  faMicrophoneAltSlash: faMicrophoneAltSlash,
  faMicrophoneSlash: faMicrophoneSlash,
  faMicrophoneStand: faMicrophoneStand,
  faMicroscope: faMicroscope,
  faMindShare: faMindShare,
  faMinus: faMinus,
  faMinusCircle: faMinusCircle,
  faMinusHexagon: faMinusHexagon,
  faMinusOctagon: faMinusOctagon,
  faMinusSquare: faMinusSquare,
  faMistletoe: faMistletoe,
  faMitten: faMitten,
  faMobile: faMobile,
  faMobileAlt: faMobileAlt,
  faMobileAndroid: faMobileAndroid,
  faMobileAndroidAlt: faMobileAndroidAlt,
  faMoneyBill: faMoneyBill,
  faMoneyBillAlt: faMoneyBillAlt,
  faMoneyBillWave: faMoneyBillWave,
  faMoneyBillWaveAlt: faMoneyBillWaveAlt,
  faMoneyCheck: faMoneyCheck,
  faMoneyCheckAlt: faMoneyCheckAlt,
  faMoneyCheckEdit: faMoneyCheckEdit,
  faMoneyCheckEditAlt: faMoneyCheckEditAlt,
  faMonitorHeartRate: faMonitorHeartRate,
  faMonkey: faMonkey,
  faMonument: faMonument,
  faMoon: faMoon,
  faMoonCloud: faMoonCloud,
  faMoonStars: faMoonStars,
  faMortarPestle: faMortarPestle,
  faMosque: faMosque,
  faMotorcycle: faMotorcycle,
  faMountain: faMountain,
  faMountains: faMountains,
  faMouse: faMouse,
  faMouseAlt: faMouseAlt,
  faMousePointer: faMousePointer,
  faMp3Player: faMp3Player,
  faMug: faMug,
  faMugHot: faMugHot,
  faMugMarshmallows: faMugMarshmallows,
  faMugTea: faMugTea,
  faMusic: faMusic,
  faMusicAlt: faMusicAlt,
  faMusicAltSlash: faMusicAltSlash,
  faMusicSlash: faMusicSlash,
  faNarwhal: faNarwhal,
  faNetworkWired: faNetworkWired,
  faNeuter: faNeuter,
  faNewspaper: faNewspaper,
  faNotEqual: faNotEqual,
  faNotesMedical: faNotesMedical,
  faObjectGroup: faObjectGroup,
  faObjectUngroup: faObjectUngroup,
  faOctagon: faOctagon,
  faOilCan: faOilCan,
  faOilTemp: faOilTemp,
  faOm: faOm,
  faOmega: faOmega,
  faOrnament: faOrnament,
  faOtter: faOtter,
  faOutdent: faOutdent,
  faOverline: faOverline,
  faPageBreak: faPageBreak,
  faPager: faPager,
  faPaintBrush: faPaintBrush,
  faPaintBrushAlt: faPaintBrushAlt,
  faPaintRoller: faPaintRoller,
  faPalette: faPalette,
  faPallet: faPallet,
  faPalletAlt: faPalletAlt,
  faPaperPlane: faPaperPlane,
  faPaperclip: faPaperclip,
  faParachuteBox: faParachuteBox,
  faParagraph: faParagraph,
  faParagraphRtl: faParagraphRtl,
  faParking: faParking,
  faParkingCircle: faParkingCircle,
  faParkingCircleSlash: faParkingCircleSlash,
  faParkingSlash: faParkingSlash,
  faPassport: faPassport,
  faPastafarianism: faPastafarianism,
  faPaste: faPaste,
  faPause: faPause,
  faPauseCircle: faPauseCircle,
  faPaw: faPaw,
  faPawAlt: faPawAlt,
  faPawClaws: faPawClaws,
  faPeace: faPeace,
  faPegasus: faPegasus,
  faPen: faPen,
  faPenAlt: faPenAlt,
  faPenFancy: faPenFancy,
  faPenNib: faPenNib,
  faPenSquare: faPenSquare,
  faPencil: faPencil,
  faPencilAlt: faPencilAlt,
  faPencilPaintbrush: faPencilPaintbrush,
  faPencilRuler: faPencilRuler,
  faPennant: faPennant,
  faPeopleCarry: faPeopleCarry,
  faPepperHot: faPepperHot,
  faPercent: faPercent,
  faPercentage: faPercentage,
  faPersonBooth: faPersonBooth,
  faPersonCarry: faPersonCarry,
  faPersonDolly: faPersonDolly,
  faPersonDollyEmpty: faPersonDollyEmpty,
  faPersonSign: faPersonSign,
  faPhone: faPhone,
  faPhoneAlt: faPhoneAlt,
  faPhoneLaptop: faPhoneLaptop,
  faPhoneOffice: faPhoneOffice,
  faPhonePlus: faPhonePlus,
  faPhoneRotary: faPhoneRotary,
  faPhoneSlash: faPhoneSlash,
  faPhoneSquare: faPhoneSquare,
  faPhoneSquareAlt: faPhoneSquareAlt,
  faPhoneVolume: faPhoneVolume,
  faPhotoVideo: faPhotoVideo,
  faPi: faPi,
  faPiano: faPiano,
  faPianoKeyboard: faPianoKeyboard,
  faPie: faPie,
  faPig: faPig,
  faPiggyBank: faPiggyBank,
  faPills: faPills,
  faPizza: faPizza,
  faPizzaSlice: faPizzaSlice,
  faPlaceOfWorship: faPlaceOfWorship,
  faPlane: faPlane,
  faPlaneAlt: faPlaneAlt,
  faPlaneArrival: faPlaneArrival,
  faPlaneDeparture: faPlaneDeparture,
  faPlay: faPlay,
  faPlayCircle: faPlayCircle,
  faPlug: faPlug,
  faPlus: faPlus,
  faPlusCircle: faPlusCircle,
  faPlusHexagon: faPlusHexagon,
  faPlusOctagon: faPlusOctagon,
  faPlusSquare: faPlusSquare,
  faPodcast: faPodcast,
  faPodium: faPodium,
  faPodiumStar: faPodiumStar,
  faPoll: faPoll,
  faPollH: faPollH,
  faPollPeople: faPollPeople,
  faPoo: faPoo,
  faPooStorm: faPooStorm,
  faPoop: faPoop,
  faPopcorn: faPopcorn,
  faPortrait: faPortrait,
  faPoundSign: faPoundSign,
  faPowerOff: faPowerOff,
  faPray: faPray,
  faPrayingHands: faPrayingHands,
  faPrescription: faPrescription,
  faPrescriptionBottle: faPrescriptionBottle,
  faPrescriptionBottleAlt: faPrescriptionBottleAlt,
  faPresentation: faPresentation,
  faPrint: faPrint,
  faPrintSearch: faPrintSearch,
  faPrintSlash: faPrintSlash,
  faProcedures: faProcedures,
  faProjectDiagram: faProjectDiagram,
  faProjector: faProjector,
  faPumpkin: faPumpkin,
  faPuzzlePiece: faPuzzlePiece,
  faQrcode: faQrcode,
  faQuestion: faQuestion,
  faQuestionCircle: faQuestionCircle,
  faQuestionSquare: faQuestionSquare,
  faQuidditch: faQuidditch,
  faQuoteLeft: faQuoteLeft,
  faQuoteRight: faQuoteRight,
  faQuran: faQuran,
  faRabbit: faRabbit,
  faRabbitFast: faRabbitFast,
  faRacquet: faRacquet,
  faRadiation: faRadiation,
  faRadiationAlt: faRadiationAlt,
  faRadio: faRadio,
  faRadioAlt: faRadioAlt,
  faRainbow: faRainbow,
  faRaindrops: faRaindrops,
  faRam: faRam,
  faRampLoading: faRampLoading,
  faRandom: faRandom,
  faReceipt: faReceipt,
  faRecordVinyl: faRecordVinyl,
  faRectangleLandscape: faRectangleLandscape,
  faRectanglePortrait: faRectanglePortrait,
  faRectangleWide: faRectangleWide,
  faRecycle: faRecycle,
  faRedo: faRedo,
  faRedoAlt: faRedoAlt,
  faRegistered: faRegistered,
  faRemoveFormat: faRemoveFormat,
  faRepeat: faRepeat,
  faRepeat1: faRepeat1,
  faRepeat1Alt: faRepeat1Alt,
  faRepeatAlt: faRepeatAlt,
  faReply: faReply,
  faReplyAll: faReplyAll,
  faRepublican: faRepublican,
  faRestroom: faRestroom,
  faRetweet: faRetweet,
  faRetweetAlt: faRetweetAlt,
  faRibbon: faRibbon,
  faRing: faRing,
  faRingsWedding: faRingsWedding,
  faRoad: faRoad,
  faRobot: faRobot,
  faRocket: faRocket,
  faRoute: faRoute,
  faRouteHighway: faRouteHighway,
  faRouteInterstate: faRouteInterstate,
  faRouter: faRouter,
  faRss: faRss,
  faRssSquare: faRssSquare,
  faRubleSign: faRubleSign,
  faRuler: faRuler,
  faRulerCombined: faRulerCombined,
  faRulerHorizontal: faRulerHorizontal,
  faRulerTriangle: faRulerTriangle,
  faRulerVertical: faRulerVertical,
  faRunning: faRunning,
  faRupeeSign: faRupeeSign,
  faRv: faRv,
  faSack: faSack,
  faSackDollar: faSackDollar,
  faSadCry: faSadCry,
  faSadTear: faSadTear,
  faSalad: faSalad,
  faSandwich: faSandwich,
  faSatellite: faSatellite,
  faSatelliteDish: faSatelliteDish,
  faSausage: faSausage,
  faSave: faSave,
  faSaxHot: faSaxHot,
  faSaxophone: faSaxophone,
  faScalpel: faScalpel,
  faScalpelPath: faScalpelPath,
  faScanner: faScanner,
  faScannerImage: faScannerImage,
  faScannerKeyboard: faScannerKeyboard,
  faScannerTouchscreen: faScannerTouchscreen,
  faScarecrow: faScarecrow,
  faScarf: faScarf,
  faSchool: faSchool,
  faScrewdriver: faScrewdriver,
  faScroll: faScroll,
  faScrollOld: faScrollOld,
  faScrubber: faScrubber,
  faScythe: faScythe,
  faSdCard: faSdCard,
  faSearch: faSearch,
  faSearchDollar: faSearchDollar,
  faSearchLocation: faSearchLocation,
  faSearchMinus: faSearchMinus,
  faSearchPlus: faSearchPlus,
  faSeedling: faSeedling,
  faSendBack: faSendBack,
  faSendBackward: faSendBackward,
  faServer: faServer,
  faShapes: faShapes,
  faShare: faShare,
  faShareAll: faShareAll,
  faShareAlt: faShareAlt,
  faShareAltSquare: faShareAltSquare,
  faShareSquare: faShareSquare,
  faSheep: faSheep,
  faShekelSign: faShekelSign,
  faShield: faShield,
  faShieldAlt: faShieldAlt,
  faShieldCheck: faShieldCheck,
  faShieldCross: faShieldCross,
  faShip: faShip,
  faShippingFast: faShippingFast,
  faShippingTimed: faShippingTimed,
  faShishKebab: faShishKebab,
  faShoePrints: faShoePrints,
  faShoppingBag: faShoppingBag,
  faShoppingBasket: faShoppingBasket,
  faShoppingCart: faShoppingCart,
  faShovel: faShovel,
  faShovelSnow: faShovelSnow,
  faShower: faShower,
  faShredder: faShredder,
  faShuttleVan: faShuttleVan,
  faShuttlecock: faShuttlecock,
  faSickle: faSickle,
  faSigma: faSigma,
  faSign: faSign,
  faSignIn: faSignIn,
  faSignInAlt: faSignInAlt,
  faSignLanguage: faSignLanguage,
  faSignOut: faSignOut,
  faSignOutAlt: faSignOutAlt,
  faSignal: faSignal,
  faSignal1: faSignal1,
  faSignal2: faSignal2,
  faSignal3: faSignal3,
  faSignal4: faSignal4,
  faSignalAlt: faSignalAlt,
  faSignalAlt1: faSignalAlt1,
  faSignalAlt2: faSignalAlt2,
  faSignalAlt3: faSignalAlt3,
  faSignalAltSlash: faSignalAltSlash,
  faSignalSlash: faSignalSlash,
  faSignalStream: faSignalStream,
  faSignature: faSignature,
  faSimCard: faSimCard,
  faSitemap: faSitemap,
  faSkating: faSkating,
  faSkeleton: faSkeleton,
  faSkiJump: faSkiJump,
  faSkiLift: faSkiLift,
  faSkiing: faSkiing,
  faSkiingNordic: faSkiingNordic,
  faSkull: faSkull,
  faSkullCow: faSkullCow,
  faSkullCrossbones: faSkullCrossbones,
  faSlash: faSlash,
  faSledding: faSledding,
  faSleigh: faSleigh,
  faSlidersH: faSlidersH,
  faSlidersHSquare: faSlidersHSquare,
  faSlidersV: faSlidersV,
  faSlidersVSquare: faSlidersVSquare,
  faSmile: faSmile,
  faSmileBeam: faSmileBeam,
  faSmilePlus: faSmilePlus,
  faSmileWink: faSmileWink,
  faSmog: faSmog,
  faSmoke: faSmoke,
  faSmoking: faSmoking,
  faSmokingBan: faSmokingBan,
  faSms: faSms,
  faSnake: faSnake,
  faSnooze: faSnooze,
  faSnowBlowing: faSnowBlowing,
  faSnowboarding: faSnowboarding,
  faSnowflake: faSnowflake,
  faSnowflakes: faSnowflakes,
  faSnowman: faSnowman,
  faSnowmobile: faSnowmobile,
  faSnowplow: faSnowplow,
  faSocks: faSocks,
  faSolarPanel: faSolarPanel,
  faSort: faSort,
  faSortAlphaDown: faSortAlphaDown,
  faSortAlphaDownAlt: faSortAlphaDownAlt,
  faSortAlphaUp: faSortAlphaUp,
  faSortAlphaUpAlt: faSortAlphaUpAlt,
  faSortAlt: faSortAlt,
  faSortAmountDown: faSortAmountDown,
  faSortAmountDownAlt: faSortAmountDownAlt,
  faSortAmountUp: faSortAmountUp,
  faSortAmountUpAlt: faSortAmountUpAlt,
  faSortDown: faSortDown,
  faSortNumericDown: faSortNumericDown,
  faSortNumericDownAlt: faSortNumericDownAlt,
  faSortNumericUp: faSortNumericUp,
  faSortNumericUpAlt: faSortNumericUpAlt,
  faSortShapesDown: faSortShapesDown,
  faSortShapesDownAlt: faSortShapesDownAlt,
  faSortShapesUp: faSortShapesUp,
  faSortShapesUpAlt: faSortShapesUpAlt,
  faSortSizeDown: faSortSizeDown,
  faSortSizeDownAlt: faSortSizeDownAlt,
  faSortSizeUp: faSortSizeUp,
  faSortSizeUpAlt: faSortSizeUpAlt,
  faSortUp: faSortUp,
  faSoup: faSoup,
  faSpa: faSpa,
  faSpaceShuttle: faSpaceShuttle,
  faSpade: faSpade,
  faSparkles: faSparkles,
  faSpeaker: faSpeaker,
  faSpeakers: faSpeakers,
  faSpellCheck: faSpellCheck,
  faSpider: faSpider,
  faSpiderBlackWidow: faSpiderBlackWidow,
  faSpiderWeb: faSpiderWeb,
  faSpinner: faSpinner,
  faSpinnerThird: faSpinnerThird,
  faSplotch: faSplotch,
  faSprayCan: faSprayCan,
  faSquare: faSquare,
  faSquareFull: faSquareFull,
  faSquareRoot: faSquareRoot,
  faSquareRootAlt: faSquareRootAlt,
  faSquirrel: faSquirrel,
  faStaff: faStaff,
  faStamp: faStamp,
  faStar: faStar,
  faStarAndCrescent: faStarAndCrescent,
  faStarChristmas: faStarChristmas,
  faStarExclamation: faStarExclamation,
  faStarHalf: faStarHalf,
  faStarHalfAlt: faStarHalfAlt,
  faStarOfDavid: faStarOfDavid,
  faStarOfLife: faStarOfLife,
  faStars: faStars,
  faSteak: faSteak,
  faSteeringWheel: faSteeringWheel,
  faStepBackward: faStepBackward,
  faStepForward: faStepForward,
  faStethoscope: faStethoscope,
  faStickyNote: faStickyNote,
  faStocking: faStocking,
  faStomach: faStomach,
  faStop: faStop,
  faStopCircle: faStopCircle,
  faStopwatch: faStopwatch,
  faStore: faStore,
  faStoreAlt: faStoreAlt,
  faStream: faStream,
  faStreetView: faStreetView,
  faStretcher: faStretcher,
  faStrikethrough: faStrikethrough,
  faStroopwafel: faStroopwafel,
  faSubscript: faSubscript,
  faSubway: faSubway,
  faSuitcase: faSuitcase,
  faSuitcaseRolling: faSuitcaseRolling,
  faSun: faSun,
  faSunCloud: faSunCloud,
  faSunDust: faSunDust,
  faSunHaze: faSunHaze,
  faSunglasses: faSunglasses,
  faSunrise: faSunrise,
  faSunset: faSunset,
  faSuperscript: faSuperscript,
  faSurprise: faSurprise,
  faSwatchbook: faSwatchbook,
  faSwimmer: faSwimmer,
  faSwimmingPool: faSwimmingPool,
  faSword: faSword,
  faSwords: faSwords,
  faSynagogue: faSynagogue,
  faSync: faSync,
  faSyncAlt: faSyncAlt,
  faSyringe: faSyringe,
  faTable: faTable,
  faTableTennis: faTableTennis,
  faTablet: faTablet,
  faTabletAlt: faTabletAlt,
  faTabletAndroid: faTabletAndroid,
  faTabletAndroidAlt: faTabletAndroidAlt,
  faTabletRugged: faTabletRugged,
  faTablets: faTablets,
  faTachometer: faTachometer,
  faTachometerAlt: faTachometerAlt,
  faTachometerAltAverage: faTachometerAltAverage,
  faTachometerAltFast: faTachometerAltFast,
  faTachometerAltFastest: faTachometerAltFastest,
  faTachometerAltSlow: faTachometerAltSlow,
  faTachometerAltSlowest: faTachometerAltSlowest,
  faTachometerAverage: faTachometerAverage,
  faTachometerFast: faTachometerFast,
  faTachometerFastest: faTachometerFastest,
  faTachometerSlow: faTachometerSlow,
  faTachometerSlowest: faTachometerSlowest,
  faTaco: faTaco,
  faTag: faTag,
  faTags: faTags,
  faTally: faTally,
  faTanakh: faTanakh,
  faTape: faTape,
  faTasks: faTasks,
  faTasksAlt: faTasksAlt,
  faTaxi: faTaxi,
  faTeeth: faTeeth,
  faTeethOpen: faTeethOpen,
  faTemperatureFrigid: faTemperatureFrigid,
  faTemperatureHigh: faTemperatureHigh,
  faTemperatureHot: faTemperatureHot,
  faTemperatureLow: faTemperatureLow,
  faTenge: faTenge,
  faTennisBall: faTennisBall,
  faTerminal: faTerminal,
  faText: faText,
  faTextHeight: faTextHeight,
  faTextSize: faTextSize,
  faTextWidth: faTextWidth,
  faTh: faTh,
  faThLarge: faThLarge,
  faThList: faThList,
  faTheaterMasks: faTheaterMasks,
  faThermometer: faThermometer,
  faThermometerEmpty: faThermometerEmpty,
  faThermometerFull: faThermometerFull,
  faThermometerHalf: faThermometerHalf,
  faThermometerQuarter: faThermometerQuarter,
  faThermometerThreeQuarters: faThermometerThreeQuarters,
  faTheta: faTheta,
  faThumbsDown: faThumbsDown,
  faThumbsUp: faThumbsUp,
  faThumbtack: faThumbtack,
  faThunderstorm: faThunderstorm,
  faThunderstormMoon: faThunderstormMoon,
  faThunderstormSun: faThunderstormSun,
  faTicket: faTicket,
  faTicketAlt: faTicketAlt,
  faTilde: faTilde,
  faTimes: faTimes,
  faTimesCircle: faTimesCircle,
  faTimesHexagon: faTimesHexagon,
  faTimesOctagon: faTimesOctagon,
  faTimesSquare: faTimesSquare,
  faTint: faTint,
  faTintSlash: faTintSlash,
  faTire: faTire,
  faTireFlat: faTireFlat,
  faTirePressureWarning: faTirePressureWarning,
  faTireRugged: faTireRugged,
  faTired: faTired,
  faToggleOff: faToggleOff,
  faToggleOn: faToggleOn,
  faToilet: faToilet,
  faToiletPaper: faToiletPaper,
  faToiletPaperAlt: faToiletPaperAlt,
  faTombstone: faTombstone,
  faTombstoneAlt: faTombstoneAlt,
  faToolbox: faToolbox,
  faTools: faTools,
  faTooth: faTooth,
  faToothbrush: faToothbrush,
  faTorah: faTorah,
  faToriiGate: faToriiGate,
  faTornado: faTornado,
  faTractor: faTractor,
  faTrademark: faTrademark,
  faTrafficCone: faTrafficCone,
  faTrafficLight: faTrafficLight,
  faTrafficLightGo: faTrafficLightGo,
  faTrafficLightSlow: faTrafficLightSlow,
  faTrafficLightStop: faTrafficLightStop,
  faTrain: faTrain,
  faTram: faTram,
  faTransgender: faTransgender,
  faTransgenderAlt: faTransgenderAlt,
  faTrash: faTrash,
  faTrashAlt: faTrashAlt,
  faTrashRestore: faTrashRestore,
  faTrashRestoreAlt: faTrashRestoreAlt,
  faTrashUndo: faTrashUndo,
  faTrashUndoAlt: faTrashUndoAlt,
  faTreasureChest: faTreasureChest,
  faTree: faTree,
  faTreeAlt: faTreeAlt,
  faTreeChristmas: faTreeChristmas,
  faTreeDecorated: faTreeDecorated,
  faTreeLarge: faTreeLarge,
  faTreePalm: faTreePalm,
  faTrees: faTrees,
  faTriangle: faTriangle,
  faTriangleMusic: faTriangleMusic,
  faTrophy: faTrophy,
  faTrophyAlt: faTrophyAlt,
  faTruck: faTruck,
  faTruckContainer: faTruckContainer,
  faTruckCouch: faTruckCouch,
  faTruckLoading: faTruckLoading,
  faTruckMonster: faTruckMonster,
  faTruckMoving: faTruckMoving,
  faTruckPickup: faTruckPickup,
  faTruckPlow: faTruckPlow,
  faTruckRamp: faTruckRamp,
  faTrumpet: faTrumpet,
  faTshirt: faTshirt,
  faTty: faTty,
  faTurkey: faTurkey,
  faTurntable: faTurntable,
  faTurtle: faTurtle,
  faTv: faTv,
  faTvAlt: faTvAlt,
  faTvMusic: faTvMusic,
  faTvRetro: faTvRetro,
  faTypewriter: faTypewriter,
  faUmbrella: faUmbrella,
  faUmbrellaBeach: faUmbrellaBeach,
  faUnderline: faUnderline,
  faUndo: faUndo,
  faUndoAlt: faUndoAlt,
  faUnicorn: faUnicorn,
  faUnion: faUnion,
  faUniversalAccess: faUniversalAccess,
  faUniversity: faUniversity,
  faUnlink: faUnlink,
  faUnlock: faUnlock,
  faUnlockAlt: faUnlockAlt,
  faUpload: faUpload,
  faUsbDrive: faUsbDrive,
  faUsdCircle: faUsdCircle,
  faUsdSquare: faUsdSquare,
  faUser: faUser,
  faUserAlt: faUserAlt,
  faUserAltSlash: faUserAltSlash,
  faUserAstronaut: faUserAstronaut,
  faUserChart: faUserChart,
  faUserCheck: faUserCheck,
  faUserCircle: faUserCircle,
  faUserClock: faUserClock,
  faUserCog: faUserCog,
  faUserCowboy: faUserCowboy,
  faUserCrown: faUserCrown,
  faUserEdit: faUserEdit,
  faUserFriends: faUserFriends,
  faUserGraduate: faUserGraduate,
  faUserHardHat: faUserHardHat,
  faUserHeadset: faUserHeadset,
  faUserInjured: faUserInjured,
  faUserLock: faUserLock,
  faUserMd: faUserMd,
  faUserMdChat: faUserMdChat,
  faUserMinus: faUserMinus,
  faUserMusic: faUserMusic,
  faUserNinja: faUserNinja,
  faUserNurse: faUserNurse,
  faUserPlus: faUserPlus,
  faUserSecret: faUserSecret,
  faUserShield: faUserShield,
  faUserSlash: faUserSlash,
  faUserTag: faUserTag,
  faUserTie: faUserTie,
  faUserTimes: faUserTimes,
  faUsers: faUsers,
  faUsersClass: faUsersClass,
  faUsersCog: faUsersCog,
  faUsersCrown: faUsersCrown,
  faUsersMedical: faUsersMedical,
  faUtensilFork: faUtensilFork,
  faUtensilKnife: faUtensilKnife,
  faUtensilSpoon: faUtensilSpoon,
  faUtensils: faUtensils,
  faUtensilsAlt: faUtensilsAlt,
  faValueAbsolute: faValueAbsolute,
  faVectorSquare: faVectorSquare,
  faVenus: faVenus,
  faVenusDouble: faVenusDouble,
  faVenusMars: faVenusMars,
  faVhs: faVhs,
  faVial: faVial,
  faVials: faVials,
  faVideo: faVideo,
  faVideoPlus: faVideoPlus,
  faVideoSlash: faVideoSlash,
  faVihara: faVihara,
  faViolin: faViolin,
  faVoicemail: faVoicemail,
  faVolcano: faVolcano,
  faVolleyballBall: faVolleyballBall,
  faVolume: faVolume,
  faVolumeDown: faVolumeDown,
  faVolumeMute: faVolumeMute,
  faVolumeOff: faVolumeOff,
  faVolumeSlash: faVolumeSlash,
  faVolumeUp: faVolumeUp,
  faVoteNay: faVoteNay,
  faVoteYea: faVoteYea,
  faVrCardboard: faVrCardboard,
  faWagonCovered: faWagonCovered,
  faWalker: faWalker,
  faWalkieTalkie: faWalkieTalkie,
  faWalking: faWalking,
  faWallet: faWallet,
  faWand: faWand,
  faWandMagic: faWandMagic,
  faWarehouse: faWarehouse,
  faWarehouseAlt: faWarehouseAlt,
  faWasher: faWasher,
  faWatch: faWatch,
  faWatchCalculator: faWatchCalculator,
  faWatchFitness: faWatchFitness,
  faWater: faWater,
  faWaterLower: faWaterLower,
  faWaterRise: faWaterRise,
  faWaveSine: faWaveSine,
  faWaveSquare: faWaveSquare,
  faWaveTriangle: faWaveTriangle,
  faWaveform: faWaveform,
  faWaveformPath: faWaveformPath,
  faWebcam: faWebcam,
  faWebcamSlash: faWebcamSlash,
  faWeight: faWeight,
  faWeightHanging: faWeightHanging,
  faWhale: faWhale,
  faWheat: faWheat,
  faWheelchair: faWheelchair,
  faWhistle: faWhistle,
  faWifi: faWifi,
  faWifi1: faWifi1,
  faWifi2: faWifi2,
  faWifiSlash: faWifiSlash,
  faWind: faWind,
  faWindTurbine: faWindTurbine,
  faWindWarning: faWindWarning,
  faWindow: faWindow,
  faWindowAlt: faWindowAlt,
  faWindowClose: faWindowClose,
  faWindowMaximize: faWindowMaximize,
  faWindowMinimize: faWindowMinimize,
  faWindowRestore: faWindowRestore,
  faWindsock: faWindsock,
  faWineBottle: faWineBottle,
  faWineGlass: faWineGlass,
  faWineGlassAlt: faWineGlassAlt,
  faWonSign: faWonSign,
  faWreath: faWreath,
  faWrench: faWrench,
  faXRay: faXRay,
  faYenSign: faYenSign,
  faYinYang: faYinYang
};
exports.fad = _iconsCache;
},{}],"index.js":[function(require,module,exports) {
"use strict";

var _react = _interopRequireDefault(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _Page = _interopRequireDefault(require("./Page"));

require("./index.css");

var _fontawesomeSvgCore = require("@fortawesome/fontawesome-svg-core");

var _proDuotoneSvgIcons = require("@fortawesome/pro-duotone-svg-icons");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_fontawesomeSvgCore.library.add(_proDuotoneSvgIcons.fad);

_reactDom.default.render(_react.default.createElement(_Page.default, null), document.getElementById("root"));
},{"react":"../node_modules/react/index.js","react-dom":"../node_modules/react-dom/index.js","./Page":"Page.js","./index.css":"index.css","@fortawesome/fontawesome-svg-core":"../node_modules/@fortawesome/fontawesome-svg-core/index.es.js","@fortawesome/pro-duotone-svg-icons":"../node_modules/@fortawesome/pro-duotone-svg-icons/index.es.js"}],"../node_modules/parcel-bundler/src/builtins/hmr-runtime.js":[function(require,module,exports) {
var global = arguments[3];
var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;

function Module(moduleName) {
  OldModule.call(this, moduleName);
  this.hot = {
    data: module.bundle.hotData,
    _acceptCallbacks: [],
    _disposeCallbacks: [],
    accept: function (fn) {
      this._acceptCallbacks.push(fn || function () {});
    },
    dispose: function (fn) {
      this._disposeCallbacks.push(fn);
    }
  };
  module.bundle.hotData = null;
}

module.bundle.Module = Module;
var checkedAssets, assetsToAccept;
var parent = module.bundle.parent;

if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {
  var hostname = "" || location.hostname;
  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';
  var ws = new WebSocket(protocol + '://' + hostname + ':' + "53016" + '/');

  ws.onmessage = function (event) {
    checkedAssets = {};
    assetsToAccept = [];
    var data = JSON.parse(event.data);

    if (data.type === 'update') {
      var handled = false;
      data.assets.forEach(function (asset) {
        if (!asset.isNew) {
          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);

          if (didAccept) {
            handled = true;
          }
        }
      }); // Enable HMR for CSS by default.

      handled = handled || data.assets.every(function (asset) {
        return asset.type === 'css' && asset.generated.js;
      });

      if (handled) {
        console.clear();
        data.assets.forEach(function (asset) {
          hmrApply(global.parcelRequire, asset);
        });
        assetsToAccept.forEach(function (v) {
          hmrAcceptRun(v[0], v[1]);
        });
      } else if (location.reload) {
        // `location` global exists in a web worker context but lacks `.reload()` function.
        location.reload();
      }
    }

    if (data.type === 'reload') {
      ws.close();

      ws.onclose = function () {
        location.reload();
      };
    }

    if (data.type === 'error-resolved') {
      console.log('[parcel] ✨ Error resolved');
      removeErrorOverlay();
    }

    if (data.type === 'error') {
      console.error('[parcel] 🚨  ' + data.error.message + '\n' + data.error.stack);
      removeErrorOverlay();
      var overlay = createErrorOverlay(data);
      document.body.appendChild(overlay);
    }
  };
}

function removeErrorOverlay() {
  var overlay = document.getElementById(OVERLAY_ID);

  if (overlay) {
    overlay.remove();
  }
}

function createErrorOverlay(data) {
  var overlay = document.createElement('div');
  overlay.id = OVERLAY_ID; // html encode message and stack trace

  var message = document.createElement('div');
  var stackTrace = document.createElement('pre');
  message.innerText = data.error.message;
  stackTrace.innerText = data.error.stack;
  overlay.innerHTML = '<div style="background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;">' + '<span style="background: red; padding: 2px 4px; border-radius: 2px;">ERROR</span>' + '<span style="top: 2px; margin-left: 5px; position: relative;">🚨</span>' + '<div style="font-size: 18px; font-weight: bold; margin-top: 20px;">' + message.innerHTML + '</div>' + '<pre>' + stackTrace.innerHTML + '</pre>' + '</div>';
  return overlay;
}

function getParents(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return [];
  }

  var parents = [];
  var k, d, dep;

  for (k in modules) {
    for (d in modules[k][1]) {
      dep = modules[k][1][d];

      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {
        parents.push(k);
      }
    }
  }

  if (bundle.parent) {
    parents = parents.concat(getParents(bundle.parent, id));
  }

  return parents;
}

function hmrApply(bundle, asset) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (modules[asset.id] || !bundle.parent) {
    var fn = new Function('require', 'module', 'exports', asset.generated.js);
    asset.isNew = !modules[asset.id];
    modules[asset.id] = [fn, asset.deps];
  } else if (bundle.parent) {
    hmrApply(bundle.parent, asset);
  }
}

function hmrAcceptCheck(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (!modules[id] && bundle.parent) {
    return hmrAcceptCheck(bundle.parent, id);
  }

  if (checkedAssets[id]) {
    return;
  }

  checkedAssets[id] = true;
  var cached = bundle.cache[id];
  assetsToAccept.push([bundle, id]);

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    return true;
  }

  return getParents(global.parcelRequire, id).some(function (id) {
    return hmrAcceptCheck(global.parcelRequire, id);
  });
}

function hmrAcceptRun(bundle, id) {
  var cached = bundle.cache[id];
  bundle.hotData = {};

  if (cached) {
    cached.hot.data = bundle.hotData;
  }

  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {
    cached.hot._disposeCallbacks.forEach(function (cb) {
      cb(bundle.hotData);
    });
  }

  delete bundle.cache[id];
  bundle(id);
  cached = bundle.cache[id];

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    cached.hot._acceptCallbacks.forEach(function (cb) {
      cb();
    });

    return true;
  }
}
},{}]},{},["../node_modules/parcel-bundler/src/builtins/hmr-runtime.js","index.js"], null)
//# sourceMappingURL=/src.e31bb0bc.js.map